Implementation smell,Namespace,Class,File,Method,Description
Long Method,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The method has 177 lines of code.
Long Method,GMap.NET.MapProviders,CloudMadeMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\CloudMadeMapProvider.cs,GetDirectionsUrl,The method has 144 lines of code.
Long Method,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The method has 101 lines of code.
Long Method,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The method has 148 lines of code.
Long Method,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetLatLngFromGeocoderUrl,The method has 179 lines of code.
Long Method,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetPlacemarkFromReverseGeocoderUrl,The method has 548 lines of code.
Long Method,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetDirectionsUrl,The method has 450 lines of code.
Complex Method,GMap.NET.CacheProviders,MsSQLCePureImageCache,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.CacheProviders\MSSQLCEPureImageCache.cs,Initialize,Cyclomatic complexity of the method is 12
Complex Method,GMap.NET.Internals,SocksHttpWebRequest,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHttpWebRequest.cs,BuildHttpRequestMessage,Cyclomatic complexity of the method is 10
Complex Method,GMap.NET.Internals,SocksHttpWebRequest,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHttpWebRequest.cs,InternalGetResponse,Cyclomatic complexity of the method is 9
Complex Method,GMap.NET.Internals,SocksHttpWebResponse,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHttpWebRequest.cs,SocksHttpWebResponse,Cyclomatic complexity of the method is 8
Complex Method,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,Cyclomatic complexity of the method is 15
Complex Method,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,Cyclomatic complexity of the method is 31
Complex Method,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,UpdateBounds,Cyclomatic complexity of the method is 12
Complex Method,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,Dispose,Cyclomatic complexity of the method is 8
Complex Method,Org.Mentalis.Network.ProxySocket,ProxyException,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\ProxyException.cs,Socks5ToString,Cyclomatic complexity of the method is 10
Complex Method,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,Authenticate,Cyclomatic complexity of the method is 9
Complex Method,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,Negotiate,Cyclomatic complexity of the method is 14
Complex Method,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnAuthReceive,Cyclomatic complexity of the method is 12
Complex Method,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,ProcessReply,Cyclomatic complexity of the method is 11
Complex Method,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,QuadKeyToTileXY,Cyclomatic complexity of the method is 15
Complex Method,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,Cyclomatic complexity of the method is 17
Complex Method,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,GetRoutePoints,Cyclomatic complexity of the method is 28
Complex Method,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,GetLatLngFromGeocoderUrl,Cyclomatic complexity of the method is 31
Complex Method,GMap.NET.MapProviders,CloudMadeMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\CloudMadeMapProvider.cs,GetRoutePoints,Cyclomatic complexity of the method is 8
Complex Method,GMap.NET.MapProviders,CloudMadeMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\CloudMadeMapProvider.cs,GetDirectionsUrl,Cyclomatic complexity of the method is 19
Complex Method,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,Cyclomatic complexity of the method is 19
Complex Method,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,Cyclomatic complexity of the method is 34
Complex Method,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetLatLngFromGeocoderUrl,Cyclomatic complexity of the method is 13
Complex Method,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetPlacemarkFromReverseGeocoderUrl,Cyclomatic complexity of the method is 42
Complex Method,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetDirectionsUrl,Cyclomatic complexity of the method is 44
Complex Method,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetRoutePoints,Cyclomatic complexity of the method is 10
Complex Method,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetLatLngFromGeocoderUrl,Cyclomatic complexity of the method is 14
Complex Method,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetPlacemarkFromReverseGeocoderUrl,Cyclomatic complexity of the method is 17
Complex Method,GMap.NET.MapProviders,GMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\GMapProvider.cs,GetTileImageUsingHttp,Cyclomatic complexity of the method is 15
Complex Method,GMap.NET.MapProviders,GMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\GMapProvider.cs,GetContentUsingHttp,Cyclomatic complexity of the method is 14
Complex Method,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,Cyclomatic complexity of the method is 39
Complex Method,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,Cyclomatic complexity of the method is 9
Complex Method,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,Cyclomatic complexity of the method is 9
Complex Method,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,Cyclomatic complexity of the method is 36
Complex Method,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,Cyclomatic complexity of the method is 36
Complex Method,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,Cyclomatic complexity of the method is 36
Complex Method,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,Cyclomatic complexity of the method is 9
Complex Method,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,Cyclomatic complexity of the method is 9
Complex Method,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,Cyclomatic complexity of the method is 39
Complex Method,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,Cyclomatic complexity of the method is 39
Complex Method,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,Cyclomatic complexity of the method is 39
Complex Method,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,AdjustLongitude,Cyclomatic complexity of the method is 8
Complex Method,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,GMaps,Cyclomatic complexity of the method is 12
Complex Method,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,Cyclomatic complexity of the method is 22
Complex Method,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,ExportGPX,Cyclomatic complexity of the method is 14
Complex Method,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,GetImageFrom,Cyclomatic complexity of the method is 22
Long Parameter List,Org.Mentalis.Network.ProxySocket,ProxySocket,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\ProxySocket.cs,ProxySocket,The method has 5 parameters.
Long Parameter List,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,GetRoute,The method has 5 parameters.
Long Parameter List,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,GetRoute,The method has 5 parameters.
Long Parameter List,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,MakeRouteUrl,The method has 5 parameters.
Long Parameter List,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,GetRoutePoints,The method has 5 parameters.
Long Parameter List,GMap.NET.MapProviders,CloudMadeMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\CloudMadeMapProvider.cs,GetRoute,The method has 5 parameters.
Long Parameter List,GMap.NET.MapProviders,CloudMadeMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\CloudMadeMapProvider.cs,GetRoute,The method has 5 parameters.
Long Parameter List,GMap.NET.MapProviders,CloudMadeMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\CloudMadeMapProvider.cs,MakeRoutingUrl,The method has 5 parameters.
Long Parameter List,GMap.NET.MapProviders,CloudMadeMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\CloudMadeMapProvider.cs,GetDirections,The method has 8 parameters.
Long Parameter List,GMap.NET.MapProviders,CloudMadeMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\CloudMadeMapProvider.cs,GetDirections,The method has 8 parameters.
Long Parameter List,GMap.NET.MapProviders,CloudMadeMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\CloudMadeMapProvider.cs,GetDirections,The method has 8 parameters.
Long Parameter List,GMap.NET.MapProviders,CloudMadeMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\CloudMadeMapProvider.cs,GetDirections,The method has 8 parameters.
Long Parameter List,GMap.NET.MapProviders,CloudMadeMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\CloudMadeMapProvider.cs,GetDirections,The method has 8 parameters.
Long Parameter List,GMap.NET.MapProviders,CloudMadeMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\CloudMadeMapProvider.cs,GetDirections,The method has 8 parameters.
Long Parameter List,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoute,The method has 5 parameters.
Long Parameter List,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoute,The method has 5 parameters.
Long Parameter List,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,MakeRouteUrl,The method has 5 parameters.
Long Parameter List,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,MakeRouteUrl,The method has 5 parameters.
Long Parameter List,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The method has 5 parameters.
Long Parameter List,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetDirections,The method has 8 parameters.
Long Parameter List,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetDirections,The method has 8 parameters.
Long Parameter List,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetDirections,The method has 8 parameters.
Long Parameter List,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetDirections,The method has 8 parameters.
Long Parameter List,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetDirections,The method has 8 parameters.
Long Parameter List,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetDirections,The method has 8 parameters.
Long Parameter List,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,MakeDirectionsUrl,The method has 8 parameters.
Long Parameter List,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,MakeDirectionsUrl,The method has 8 parameters.
Long Parameter List,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,MakeDirectionsUrl,The method has 8 parameters.
Long Parameter List,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,MakeDirectionsUrl,The method has 8 parameters.
Long Parameter List,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetRoute,The method has 5 parameters.
Long Parameter List,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetRoute,The method has 5 parameters.
Long Parameter List,GMap.NET,DirectionsProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\DirectionsProvider.cs,GetDirections,The method has 8 parameters.
Long Parameter List,GMap.NET,DirectionsProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\DirectionsProvider.cs,GetDirections,The method has 8 parameters.
Long Parameter List,GMap.NET,DirectionsProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\DirectionsProvider.cs,GetDirections,The method has 8 parameters.
Long Parameter List,GMap.NET,DirectionsProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\DirectionsProvider.cs,GetDirections,The method has 8 parameters.
Long Parameter List,GMap.NET,DirectionsProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\DirectionsProvider.cs,GetDirections,The method has 8 parameters.
Long Parameter List,GMap.NET,DirectionsProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\DirectionsProvider.cs,GetDirections,The method has 8 parameters.
Long Parameter List,GMap.NET,RoutingProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\RoutingProvider.cs,GetRoute,The method has 5 parameters.
Long Parameter List,GMap.NET,RoutingProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\RoutingProvider.cs,GetRoute,The method has 5 parameters.
Long Parameter List,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,mlfn,The method has 5 parameters.
Long Parameter List,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,FromGeodeticToCartesian,The method has 6 parameters.
Long Parameter List,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,FromCartesianTGeodetic,The method has 5 parameters.
Long Statement,GMap.NET.CacheProviders,MsSQLCePureImageCache,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.CacheProviders\MSSQLCEPureImageCache.cs,Initialize,The length of the statement  "						using (SqlCommand cmd = new SqlCommand ("CREATE TABLE [GMapNETcache] ( \n" + "   [Type] [int]   NOT NULL' \n" + "   [Zoom] [int]   NOT NULL' \n" + "   [X]    [int]   NOT NULL' \n" + "   [Y]    [int]   NOT NULL' \n" + "   [Tile] [image] NOT NULL' \n" + "   CONSTRAINT [PK_GMapNETcache] PRIMARY KEY (Type' Zoom' X' Y) \n" + ")"' c)) { " is 332.
Long Statement,GMap.NET.CacheProviders,MsSQLCePureImageCache,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.CacheProviders\MSSQLCEPureImageCache.cs,Initialize,The length of the statement  "			this.cmdFetch = new SqlCommand ("SELECT [Tile] FROM [GMapNETcache] WITH (NOLOCK) WHERE [X]=@x AND [Y]=@y AND [Zoom]=@zoom AND [Type]=@type"' cnGet); " is 148.
Long Statement,GMap.NET.CacheProviders,MsSQLCePureImageCache,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.CacheProviders\MSSQLCEPureImageCache.cs,Initialize,The length of the statement  "			this.cmdInsert = new SqlCommand ("INSERT INTO [GMapNETcache] ( [X]' [Y]' [Zoom]' [Type]' [Tile] ) VALUES ( @x' @y' @zoom' @type' @tile )"' cnSet); " is 146.
Long Statement,GMap.NET.CacheProviders,MsSQLPureImageCache,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.CacheProviders\MSSQLPureImageCache.cs,Initialize,The length of the statement  "					using (SqlCommand cmd = new SqlCommand ("CREATE TABLE [GMapNETcache] ( \n" + "   [Type] [int]   NOT NULL' \n" + "   [Zoom] [int]   NOT NULL' \n" + "   [X]    [int]   NOT NULL' \n" + "   [Y]    [int]   NOT NULL' \n" + "   [Tile] [image] NOT NULL' \n" + "   CONSTRAINT [PK_GMapNETcache] PRIMARY KEY CLUSTERED (Type' Zoom' X' Y) \n" + ")"' cnGet)) { " is 346.
Long Statement,GMap.NET.CacheProviders,MsSQLPureImageCache,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.CacheProviders\MSSQLPureImageCache.cs,Initialize,The length of the statement  "				this.cmdFetch = new SqlCommand ("SELECT [Tile] FROM [GMapNETcache] WITH (NOLOCK) WHERE [X]=@x AND [Y]=@y AND [Zoom]=@zoom AND [Type]=@type"' cnGet); " is 148.
Long Statement,GMap.NET.CacheProviders,MsSQLPureImageCache,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.CacheProviders\MSSQLPureImageCache.cs,Initialize,The length of the statement  "				this.cmdInsert = new SqlCommand ("INSERT INTO [GMapNETcache] ( [X]' [Y]' [Zoom]' [Type]' [Tile] ) VALUES ( @x' @y' @zoom' @type' @tile )"' cnSet); " is 146.
Long Statement,GMap.NET.Internals,SocksHttpWebRequest,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHttpWebRequest.cs,GetProxyIpAddress,The length of the statement  "			throw new InvalidOperationException (string.Format ("Unable to resolve proxy hostname '{0}' to a valid IP address."' proxyUri.Host)' e); " is 136.
Long Statement,GMap.NET.Internals,CacheLocator,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Cache.cs,Reset,The length of the statement  "	location = System.Environment.GetFolderPath (System.Environment.SpecialFolder.LocalApplicationData) + Path.DirectorySeparatorChar + "GMap.NET" + Path.DirectorySeparatorChar; " is 173.
Long Statement,GMap.NET.Internals,CacheLocator,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Cache.cs,Reset,The length of the statement  "	         location = System.Environment.GetFolderPath(System.Environment.SpecialFolder.ApplicationData) + Path.DirectorySeparatorChar + "GMap.NET" + Path.DirectorySeparatorChar;" is 167.
Long Statement,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,OnMapSizeChanged,The length of the statement  "		int diag = (int)Math.Round (Math.Sqrt (Width * Width + Height * Height) / Provider.Projection.TileSize.Width' MidpointRounding.AwayFromZero); " is 141.
Long Statement,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The length of the statement  "					Debug.WriteLine (ctid + " - OnTileLoadComplete: " + lastTileLoadTimeMs + "ms' MemoryCacheSize: " + GMaps.Instance.MemoryCache.Size + "MB"); " is 139.
Long Statement,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The length of the statement  "										img = GMaps.Instance.GetImageFrom (tl' new GPoint (task.Value.Pos.X' maxOfTiles.Height - task.Value.Pos.Y)' task.Value.Zoom' out ex); " is 133.
Long Statement,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The length of the statement  "									//var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6)); " is 150.
Long Statement,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The length of the statement  "									//var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6); " is 201.
Long Statement,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The length of the statement  "									//System.Drawing.Rectangle dst = new System.Drawing.Rectangle((int)Core.tileRect.X' (int)Core.tileRect.Y' (int)Core.tileRect.Width' (int)Core.tileRect.Height); " is 159.
Long Statement,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The length of the statement  "									//System.Drawing.RectangleF srcRect = new System.Drawing.RectangleF((float)(Xoff * (img.Img.Width / Ix))' (float)(Yoff * (img.Img.Height / Ix))' (img.Img.Width / Ix)' (img.Img.Height / Ix)); " is 190.
Long Statement,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,UpdateBounds,The length of the statement  "		for (long i = (int)Math.Floor (-sizeOfMapArea.Width * scaleX)' countI = (int)Math.Ceiling (sizeOfMapArea.Width * scaleX); i <= countI; i++) { " is 141.
Long Statement,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,UpdateBounds,The length of the statement  "			for (long j = (int)Math.Floor (-sizeOfMapArea.Height * scaleY)' countJ = (int)Math.Ceiling (sizeOfMapArea.Height * scaleY); j <= countJ; j++) { " is 143.
Long Statement,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,UpdateBounds,The length of the statement  "						DistanceSqr = (centerTileXYLocation.X - p.X) * (centerTileXYLocation.X - p.X) + (centerTileXYLocation.Y - p.Y) * (centerTileXYLocation.Y - p.Y) " is 143.
Long Statement,GMap.NET.Internals,Stuff,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Stuff.cs,EnumToString,The length of the statement  "	DescriptionAttribute[] attributes = (DescriptionAttribute[])fi.GetCustomAttributes (typeof(DescriptionAttribute)' false); " is 121.
Long Statement,Org.Mentalis.Network.ProxySocket.Authentication,AuthUserPass,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\AuthUserPass.cs,BeginAuthenticate,The length of the statement  "	Server.BeginSend (GetAuthenticationBytes ()' 0' 3 + Username.Length + Password.Length' SocketFlags.None' new AsyncCallback (this.OnSent)' Server); " is 146.
Long Statement,Org.Mentalis.Network.ProxySocket.Authentication,AuthUserPass,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\AuthUserPass.cs,OnReceive,The length of the statement  "			Server.BeginReceive (Buffer' Received' Buffer.Length - Received' SocketFlags.None' new AsyncCallback (this.OnReceive)' Server); " is 127.
Long Statement,Org.Mentalis.Network.ProxySocket,ProxySocket,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\ProxySocket.cs,BeginConnect,The length of the statement  "			AsyncResult = (new Socks4Handler (this' ProxyUser)).BeginNegotiate ((IPEndPoint)remoteEP' new HandShakeComplete (this.OnHandShakeComplete)' ProxyEndPoint); " is 155.
Long Statement,Org.Mentalis.Network.ProxySocket,ProxySocket,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\ProxySocket.cs,BeginConnect,The length of the statement  "			AsyncResult = (new Socks5Handler (this' ProxyUser' ProxyPass)).BeginNegotiate ((IPEndPoint)remoteEP' new HandShakeComplete (this.OnHandShakeComplete)' ProxyEndPoint); " is 166.
Long Statement,Org.Mentalis.Network.ProxySocket,ProxySocket,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\ProxySocket.cs,BeginConnect,The length of the statement  "			AsyncResult = (new Socks4Handler (this' ProxyUser)).BeginNegotiate (host' port' new HandShakeComplete (this.OnHandShakeComplete)' ProxyEndPoint); " is 145.
Long Statement,Org.Mentalis.Network.ProxySocket,ProxySocket,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\ProxySocket.cs,BeginConnect,The length of the statement  "			AsyncResult = (new Socks5Handler (this' ProxyUser' ProxyPass)).BeginNegotiate (host' port' new HandShakeComplete (this.OnHandShakeComplete)' ProxyEndPoint); " is 156.
Long Statement,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,OnReceive,The length of the statement  "			Server.BeginReceive (Buffer' Received' Buffer.Length - Received' SocketFlags.None' new AsyncCallback (this.OnReceive)' Server); " is 127.
Long Statement,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnAuthReceive,The length of the statement  "			Server.BeginReceive (Buffer' Received' Buffer.Length - Received' SocketFlags.None' new AsyncCallback (this.OnAuthReceive)' Server); " is 131.
Long Statement,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnReceive,The length of the statement  "			Server.BeginReceive (Buffer' Received' Buffer.Length - Received' SocketFlags.None' new AsyncCallback (this.OnReceive)' Server); " is 127.
Long Statement,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnReadLast,The length of the statement  "			Server.BeginReceive (Buffer' Received' Buffer.Length - Received' SocketFlags.None' new AsyncCallback (this.OnReadLast)' Server); " is 128.
Long Statement,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The length of the statement  "				string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty; " is 134.
Long Statement,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The length of the statement  "				string keyUrl = "http://dev.virtualearth.net/webservices/v1/LoggingService/LoggingService.svc/Log?entry=0&fmt=1&type=3&group=MapControl&name=AJAX&mkt=en-us&auth=Akw4XWHH0ngzzB_4DmHOv_XByRBtX5qwLAS9RgRYDamxvLeIxRfSzmuvWFB9RF7d&jsonp=microsoftMapsNetworkCallback"; " is 262.
Long Statement,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The length of the statement  "				// http://dev.virtualearth.net/webservices/v1/LoggingService/LoggingService.svc/Log?entry=0&auth=Akw4XWHH0ngzzB_4DmHOv_XByRBtX5qwLAS9RgRYDamxvLeIxRfSzmuvWFB9RF7d&fmt=1&type=3&group=MapControl&name=WPF&version=1.0.0.0&session=00000000-0000-0000-0000-000000000000&mkt=en-US " is 271.
Long Statement,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The length of the statement  "				string keyResponse = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent ("BingLoggingServiceV1"' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty; " is 160.
Long Statement,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The length of the statement  "				if (!string.IsNullOrEmpty (keyResponse) && keyResponse.Contains ("sessionId") && keyResponse.Contains ("ValidCredentials")) { " is 125.
Long Statement,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,GetRoute,The length of the statement  "	List<PointLatLng> points = GetRoutePoints (MakeRouteUrl (start' end' LanguageStr' avoidHighways' walkingMode)' Zoom' out tooltip' out numLevels' out zoomFactor); " is 161.
Long Statement,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,MakeRouteUrl,The length of the statement  "	return string.Format (CultureInfo.InvariantCulture' RouteUrlFormatPointLatLng' mode' start.Lat' start.Lng' end.Lat' end.Lng' addition' ClientKey); " is 146.
Long Statement,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,GetRoutePoints,The length of the statement  "						points.Add (new PointLatLng (double.Parse (latitude.InnerText' CultureInfo.InvariantCulture)' double.Parse (longitude.InnerText' CultureInfo.InvariantCulture))); " is 161.
Long Statement,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,GetRoutePoints,The length of the statement  "				throw new Exception ("Unauthorized' Access was denied. You may have entered your credentials incorrectly' or you might not have access to the requested resource or operation."); " is 177.
Long Statement,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,GetRoutePoints,The length of the statement  "				throw new Exception ("Internal Server Error' Your request could not be completed because there was a problem with the service."); " is 129.
Long Statement,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,GetLatLngFromGeocoderUrl,The length of the statement  "						pointList.Add (new PointLatLng (Double.Parse (latitude.InnerText' CultureInfo.InvariantCulture)' Double.Parse (longitude.InnerText' CultureInfo.InvariantCulture))); " is 164.
Long Statement,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,GetLatLngFromGeocoderUrl,The length of the statement  "				// Unauthorized' Access was denied. You may have entered your credentials incorrectly' or you might not have access to the requested resource or operation. " is 155.
Long Statement,GMap.NET.MapProviders,BingMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,MakeTileImageUrl,The length of the statement  "	return string.Format (UrlFormat' GetServerNum (pos' 4)' key' Version' language' (!string.IsNullOrEmpty (ClientKey) ? "&key=" + ClientKey : string.Empty)); " is 154.
Long Statement,GMap.NET.MapProviders,BingSatelliteMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingSatelliteMapProvider.cs,MakeTileImageUrl,The length of the statement  "	return string.Format (UrlFormat' GetServerNum (pos' 4)' key' Version' language' (!string.IsNullOrEmpty (ClientKey) ? "&key=" + ClientKey : string.Empty)); " is 154.
Long Statement,GMap.NET.MapProviders,BingHybridMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingHybridMapProvider.cs,MakeTileImageUrl,The length of the statement  "	return string.Format (UrlFormat' GetServerNum (pos' 4)' key' Version' language' (!string.IsNullOrEmpty (ClientKey) ? "&key=" + ClientKey : string.Empty)); " is 154.
Long Statement,GMap.NET.MapProviders,CloudMadeMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\CloudMadeMapProvider.cs,GetRoute,The length of the statement  "	List<PointLatLng> points = GetRoutePoints (MakeRoutingUrl (start' end' walkingMode ? TravelTypeFoot : TravelTypeMotorCar' LanguageStr' "km")); " is 142.
Long Statement,GMap.NET.MapProviders,CloudMadeMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\CloudMadeMapProvider.cs,MakeRoutingUrl,The length of the statement  "	// http://routes.cloudmade.com/YOUR-API-KEY-GOES-HERE/api/0.3/start_point'[[transit_point1'...'transit_pointN]]'end_point/route_type[/route_type_modifier].output_format[?lang=(en|de)][&units=(km|miles)] " is 202.
Long Statement,GMap.NET.MapProviders,CloudMadeMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\CloudMadeMapProvider.cs,MakeRoutingUrl,The length of the statement  "	return string.Format (CultureInfo.InvariantCulture' UrlFormat' Key' Version' start.Lat' start.Lng' end.Lat' end.Lng' travelType' language' units); " is 146.
Long Statement,GMap.NET.MapProviders,CloudMadeMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\CloudMadeMapProvider.cs,GetDirections,The length of the statement  "	return GetDirectionsUrl (MakeRoutingUrl (start' end' walkingMode ? TravelTypeFoot : TravelTypeMotorCar' LanguageStr' metric ? "km" : "miles")' out direction); " is 158.
Long Statement,GMap.NET.MapProviders,CloudMadeMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\CloudMadeMapProvider.cs,GetDirectionsUrl,The length of the statement  "		string route = GMaps.Instance.UseRouteCache ? Cache.Instance.GetContent (url' CacheType.DirectionsCache) : string.Empty; " is 120.
Long Statement,GMap.NET.MapProviders,CloudMadeMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\CloudMadeMapProvider.cs,MakeTileImageUrl,The length of the statement  "	return string.Format (UrlFormat' ServerLetters [GetServerNum (pos' 3)]' Key' StyleID' (DoubleResolution ? DoubleResolutionString : string.Empty)' zoom' pos.X' pos.Y); " is 166.
Long Statement,GMap.NET.MapProviders,TurkeyMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\TurkeyMapProvider.cs,MakeTileImageUrl,The length of the statement  "	// http://{domain}/{layerName}/{zoomLevel}/{first3LetterOfTileX}/{second3LetterOfTileX}/{third3LetterOfTileX}/{first3LetterOfTileY}/{second3LetterOfTileY}/{third3LetterOfTileXY}.png " is 181.
Long Statement,GMap.NET.MapProviders,MapBenderWMSProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\MapBenderWMSProvider.cs,MakeTileImageUrl,The length of the statement  "	var ret = string.Format (CultureInfo.InvariantCulture' UrlFormat' p1.Lng' p1.Lat' p2.Lng' p2.Lat' Projection.TileSize.Width' Projection.TileSize.Height); " is 153.
Long Statement,GMap.NET.MapProviders,SpainMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\SpainMapProvider.cs,MakeTileImageUrl,The length of the statement  "	var ret = string.Format (CultureInfo.InvariantCulture' UrlFormat' p1.Lng' p1.Lat' p2.Lng' p2.Lat' Projection.TileSize.Width' Projection.TileSize.Height' levels [zoom]); " is 168.
Long Statement,GMap.NET.MapProviders,LithuaniaHybridMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Lithuania\LithuaniaHybridMapProvider.cs,MakeTileImageUrl,The length of the statement  "	//return string.Format("http://arcgis.maps.lt/ArcGIS/rest/services/mapslt_ortofoto_overlay/MapServer/tile/{0}/{1}/{2}"' zoom' pos.Y' pos.X); " is 140.
Long Statement,GMap.NET.MapProviders,LithuaniaOrtoFotoMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Lithuania\LithuaniaOrtoFotoMapProvider.cs,MakeTileImageUrl,The length of the statement  "	// return string.Format("http://www.maps.lt/ortofoto/mapslt_ortofoto_vector_512/map/_alllayers/L{0:00}/R{1:x8}/C{2:x8}.jpg"' zoom' pos.Y' pos.X); " is 145.
Long Statement,GMap.NET.MapProviders,LithuaniaOrtoFotoMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Lithuania\LithuaniaOrtoFotoMapProvider.cs,MakeTileImageUrl,The length of the statement  "	// return string.Format("http://arcgis.maps.lt/ArcGIS/rest/services/mapslt_ortofoto/MapServer/tile/{0}/{1}/{2}"' zoom' pos.Y' pos.X); " is 133.
Long Statement,GMap.NET.MapProviders,LithuaniaMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Lithuania\LithuaniaMapProvider.cs,MakeTileImageUrl,The length of the statement  "	// return string.Format("http://www.maps.lt/ortofoto/mapslt_ortofoto_vector_512/map/_alllayers/L{0:00}/R{1:x8}/C{2:x8}.jpg"' zoom' pos.Y' pos.X); " is 145.
Long Statement,GMap.NET.MapProviders,GoogleKoreaHybridMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\Korea\GoogleKoreaHybridMapProvider.cs,MakeTileImageUrl,The length of the statement  "	return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' language' pos.X' sec1' pos.Y' zoom' sec2' ServerKorea); " is 155.
Long Statement,GMap.NET.MapProviders,GoogleKoreaSatelliteMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\Korea\GoogleKoreaSatelliteMapProvider.cs,MakeTileImageUrl,The length of the statement  "	return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' language' pos.X' sec1' pos.Y' zoom' sec2' ServerKoreaKr); " is 157.
Long Statement,GMap.NET.MapProviders,GoogleKoreaMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\Korea\GoogleKoreaMapProvider.cs,MakeTileImageUrl,The length of the statement  "	return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' language' pos.X' sec1' pos.Y' zoom' sec2' ServerKorea); " is 155.
Long Statement,GMap.NET.MapProviders,GoogleChinaTerrainMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\China\GoogleChinaTerrainMapProvider.cs,MakeTileImageUrl,The length of the statement  "	return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' ChinaLanguage' pos.X' sec1' pos.Y' zoom' sec2' ServerChina); " is 160.
Long Statement,GMap.NET.MapProviders,GoogleChinaHybridMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\China\GoogleChinaHybridMapProvider.cs,MakeTileImageUrl,The length of the statement  "	return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' ChinaLanguage' pos.X' sec1' pos.Y' zoom' sec2' ServerChina); " is 160.
Long Statement,GMap.NET.MapProviders,GoogleChinaSatelliteMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\China\GoogleChinaSatelliteMapProvider.cs,MakeTileImageUrl,The length of the statement  "	return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' pos.X' sec1' pos.Y' zoom' sec2' ServerChina); " is 145.
Long Statement,GMap.NET.MapProviders,GoogleChinaMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\China\GoogleChinaMapProvider.cs,MakeTileImageUrl,The length of the statement  "	return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' ChinaLanguage' pos.X' sec1' pos.Y' zoom' sec2' ServerChina); " is 160.
Long Statement,GMap.NET.MapProviders,GoogleTerrainMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleTerrainMapProvider.cs,MakeTileImageUrl,The length of the statement  "	return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' language' pos.X' sec1' pos.Y' zoom' sec2' Server); " is 150.
Long Statement,GMap.NET.MapProviders,GoogleHybridMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleHybridMapProvider.cs,MakeTileImageUrl,The length of the statement  "	return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' language' pos.X' sec1' pos.Y' zoom' sec2' Server); " is 150.
Long Statement,GMap.NET.MapProviders,GoogleSatelliteMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleSatelliteMapProvider.cs,MakeTileImageUrl,The length of the statement  "	return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' language' pos.X' sec1' pos.Y' zoom' sec2' Server); " is 150.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The length of the statement  "			string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty; " is 134.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The length of the statement  "						Debug.WriteLine ("GMapProviders.GoogleMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source")); " is 136.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The length of the statement  "						Debug.WriteLine ("GMapProviders.GoogleHybridMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source")); " is 142.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The length of the statement  "				reg = new Regex (string.Format ("\"*https?://khm\\D?\\d.{0}/kh\\?v=(\\d*)"' "googleapis.com")' RegexOptions.IgnoreCase); " is 120.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The length of the statement  "						Debug.WriteLine ("GMapProviders.GoogleSatelliteMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source")); " is 145.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The length of the statement  "				reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=t@(\\d*)'r@(\\d*)"' Server)' RegexOptions.IgnoreCase); " is 122.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The length of the statement  "						Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source")); " is 143.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoute,The length of the statement  "	List<PointLatLng> points = GetRoutePoints (MakeRouteUrl (start' end' LanguageStr' avoidHighways' walkingMode)' Zoom' out tooltip' out numLevels' out zoomFactor); " is 161.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoute,The length of the statement  "	List<PointLatLng> points = GetRoutePoints (MakeRouteUrl (start' end' LanguageStr' avoidHighways' walkingMode)' Zoom' out tooltip' out numLevels' out zoomFactor); " is 161.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,MakeRouteUrl,The length of the statement  "	return string.Format (CultureInfo.InvariantCulture' RouteUrlFormatPointLatLng' language' opt' start.Lat' start.Lng' end.Lat' end.Lng' Server); " is 142.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The length of the statement  "			//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"' " is 2853.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The length of the statement  "			//   levelsis 674.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,MakeGeocoderUrl,The length of the statement  "	return string.Format (CultureInfo.InvariantCulture' GeocoderUrlFormat' ServerAPIs' keywords.Replace (' '' '+')' language); " is 122.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetPlacemarkFromReverseGeocoderUrl,The length of the statement  "		string reverse = GMaps.Instance.UsePlacemarkCache ? Cache.Instance.GetContent (url' CacheType.PlacemarkCache) : string.Empty; " is 125.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetDirections,The length of the statement  "	return GetDirectionsUrl (MakeDirectionsUrl (start' end' LanguageStr' avoidHighways' avoidTolls' walkingMode' sensor' metric)' out direction); " is 141.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetDirections,The length of the statement  "	return GetDirectionsUrl (MakeDirectionsUrl (start' end' LanguageStr' avoidHighways' avoidTolls' walkingMode' sensor' metric)' out direction); " is 141.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetDirections,The length of the statement  "	return GetDirectionsUrl (MakeDirectionsUrl (start' wayPoints' LanguageStr' avoidHighways' avoidTolls' walkingMode' sensor' metric)' out direction); " is 147.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetDirections,The length of the statement  "	return GetDirectionsUrl (MakeDirectionsUrl (start' wayPoints' LanguageStr' avoidHighways' avoidTolls' walkingMode' sensor' metric)' out direction); " is 147.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,MakeDirectionsUrl,The length of the statement  "	return string.Format (CultureInfo.InvariantCulture' DirectionUrlFormatPoint' start.Lat' start.Lng' end.Lat' end.Lng' sensor.ToString ().ToLower ()' language' av' mt' wk' ServerAPIs); " is 182.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,MakeDirectionsUrl,The length of the statement  "	return string.Format (DirectionUrlFormatStr' start.Replace (' '' '+')' end.Replace (' '' '+')' sensor.ToString ().ToLower ()' language' av' mt' wk' ServerAPIs); " is 160.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,MakeDirectionsUrl,The length of the statement  "	return string.Format (CultureInfo.InvariantCulture' DirectionUrlFormatWaypoint' start.Lat' start.Lng' wpLatLng' sensor.ToString ().ToLower ()' language' av' mt' wk' ServerAPIs); " is 177.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,MakeDirectionsUrl,The length of the statement  "	return string.Format (CultureInfo.InvariantCulture' DirectionUrlFormatWaypointStr' start.Replace (' '' '+')' wpLatLng' sensor.ToString ().ToLower ()' language' av' mt' wk' ServerAPIs); " is 184.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetDirectionsUrl,The length of the statement  "		string kml = GMaps.Instance.UseDirectionsCache ? Cache.Instance.GetContent (url' CacheType.DirectionsCache) : string.Empty; " is 123.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetDirectionsUrl,The length of the statement  "			//    <html_instructions>Head &lt;b&gt;north&lt;/b&gt; on &lt;b&gt;Vilniaus gatvė&lt;/b&gt; toward &lt;b&gt;Tilto gatvė&lt;/b&gt;</html_instructions> " is 149.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetDirectionsUrl,The length of the statement  "			//     <points>anylIi_eyC`AwD~@oBLKr@K`U|FdF|@`J^~E[j@Lh@\hB~Bn@tBZhBLrC?zIJ~DzA~OVrELlG^lDdAtDh@hAfApA`EzCvAp@jUpIpAl@bBpAdBpBxA|BdLpV`BxClAbBhBlBbChBpBhAdAXjBHlE_@t@?|@Lt@X</points> " is 183.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetDirectionsUrl,The length of the statement  "			//    <html_instructions>Turn &lt;b&gt;left&lt;/b&gt; to merge onto &lt;b&gt;Geležinio Vilko gatvė&lt;/b&gt;</html_instructions> " is 128.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetDirectionsUrl,The length of the statement  "			//     <points>anrlIakmxCiq@|qCuBbLcK~n@wUrkAcPnw@gCnPoQt}AoB`MuAdHmAdFoCtJqClImBxE{DrIkQ|ZcEvIkDzIcDhKyBxJ{EdXuCtS_G`g@mF|\eF`WyDhOiE~NiErMaGpOoj@ppAoE|K_EzKeDtKkEnOsLnd@mDzLgI~U{FrNsEvJoEtI_FpI{J`O_EjFooBf_C{GdJ_FjIsH`OoFhMwH`UcDtL{CzMeDlQmAzHuU~bBiArIwApNaBfWaLfiCoBpYsDf\qChR_FlVqEpQ_ZbfA}CfN{A~HwCtRiAfKmBlVwBx[gBfRcBxMaLdp@sXrzAaE~UqCzRyC`[_q@z|LgC|e@m@vNqp@b}WuLraFo@jPaS~bDmJryAeo@v|G}CnWsm@~`EoKvo@kv@lkEkqBrlKwBvLkNj|@cu@`~EgCnNuiBpcJakAx|GyB`KqdC~fKoIfYicAxtCiDrLu@hDyBjQm@xKoGdxBmQhoGuUn|Dc@nJ[`OW|VaEn|Ee@`X</points> " is 529.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetDirectionsUrl,The length of the statement  "			//    <html_instructions>At the roundabout' take the &lt;b&gt;3rd&lt;/b&gt; exit and stay on &lt;b&gt;Jonavos gatvė&lt;/b&gt;</html_instructions> " is 145.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetDirectionsUrl,The length of the statement  "			//    <html_instructions>Turn &lt;b&gt;right&lt;/b&gt; onto &lt;b&gt;A. Mapu gatvė&lt;/b&gt;&lt;div style=&quot;font-size:0.9em&quot;&gt;Destination will be on the right&lt;/div&gt;</html_instructions> " is 201.
Long Statement,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetDirectionsUrl,The length of the statement  "			//   <points>soxlIiohyCYL}Fb@mApUF`@GvAYpD{@dGcCjIoIvOwBpFy@xC]jBSxCC~E^~Er@lCtAdC`AwD~@oB`AW`U|FdF|@`J^~E[tAj@hB~BjA~ELrCJzOzA~Od@`N^lDdAtDt@xAjAnApDlCbXbKpAl@bBpAdBpBxA|BdLpV`BxCvDpEbChBpBhAdAXjBHbG_@|@LtHbClFr@jK`F~VjNxBbB`@h@rwAt|Cba@l`BjAxGNxEMvDaAzF}bBjiFcFbQ_y@|gD{CxMeBnJcK~n@wh@dkCkAlIoQt}AeEfV}EzQqClImBxE{DrIkQ|ZcEvIkDzIcDhKyBxJ{EdXuCtS_G`g@mF|\eF`WyDhOiE~NiErMaGpOoj@ppAoE|K_EzKeDtKmXzbAgI~U{FrNsEvJoLfT{J`O_EjFooBf_C{GdJkLtSwI`SyClI}CrJcDtL{CzMeDlQcXzlBiArIwApNaBfWaLfiCoBpYsDf\qChR_FlVqEpQ_ZbfAyFfXwCtRiAfKeFfs@gBfRcBxMaLdp@sXrzAaE~UqCzRyC`[_q@z|LuDtu@qp@b}WuLraFo@jPo^r}Faq@pfHaBtMsm@~`EoKvo@kv@lkEcuBjzKkNj|@cu@`~EgCnNuiBpcJakAx|GyB`KqdC~fKoIfYidAbwCoD|MeAbHcA|Im@xK}YnhKyV~gEs@~f@aEn|Ee@`XQ^MnD[lBoF`N}@zJCjBfKxCJLdj@bQv`@pIpHnAdl@hLdB`@nDvAtEjDdCvCbOvSzLhZbQd^`JpMPt@QtBFnAz@hDl@^j@?f@e@pAe@x@k@xBPfCEf@Uj@wBbEx@pCH</points> " is 842.
Long Statement,GMap.NET.MapProviders,GoogleMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,MakeTileImageUrl,The length of the statement  "	return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' language' pos.X' sec1' pos.Y' zoom' sec2' Server); " is 150.
Long Statement,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetRoute,The length of the statement  "	List<PointLatLng> points = GetRoutePoints (MakeRoutingUrl (start' end' walkingMode ? TravelTypeFoot : TravelTypeMotorCar)); " is 123.
Long Statement,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,MakeRoutingUrl,The length of the statement  "	return string.Format (CultureInfo.InvariantCulture' RoutingUrlFormat' start.Lat' start.Lng' end.Lat' end.Lng' travelType); " is 122.
Long Statement,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetRoutePoints,The length of the statement  "			var coordNode = xmldoc.SelectSingleNode ("/sm:kml/sm:Document/sm:Folder/sm:Placemark/sm:LineString/sm:coordinates"' xmlnsManager); " is 130.
Long Statement,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetPoints,The length of the statement  "	//<searchresults timestamp="Wed' 01 Feb 12 09:46:00 -0500" attribution="Data Copyright OpenStreetMap Contributors' Some Rights Reserved. CC-BY-SA 2.0." querystring="lithuania'vilnius" polygon="false" exclude_place_ids="29446018'53849547'8831058'29614806" more_url="http://open.mapquestapi.com/nominatim/v1/search?format=xml&exclude_place_ids=29446018'53849547'8831058'29614806&accept-language=en&q=lithuania%2Cvilnius"> " is 419.
Long Statement,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetPoints,The length of the statement  "	//<place place_id="29446018" osm_type="way" osm_id="24598347" place_rank="30" boundingbox="54.6868133544922'54.6879043579102'25.2885360717773'25.2898139953613" lat="54.6873633486028" lon="25.289199818878" display_name="National Museum of Lithuania' 1' Arsenalo g.' Senamiesčio seniūnija' YAHOO-HIRES-20080313' Vilnius County' Šalčininkų rajonas' Vilniaus apskritis' 01513' Lithuania" class="tourism" type="museum" icon="http://open.mapquestapi.com/nominatim/v1/images/mapicons/tourist_museum.p.20.png"/> " is 503.
Long Statement,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetPoints,The length of the statement  "	//<place place_id="53849547" osm_type="way" osm_id="55469274" place_rank="30" boundingbox="54.6896553039551'54.690486907959'25.2675743103027'25.2692089080811" lat="54.6900227236882" lon="25.2683589759401" display_name="Ministry of Foreign Affairs of the Republic of Lithuania' 2' J. Tumo Vaižganto g.' Naujamiesčio seniūnija' Vilnius' Vilnius County' Vilniaus m. savivaldybė' Vilniaus apskritis' LT-01104' Lithuania" class="amenity" type="public_building"/> " is 457.
Long Statement,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetPoints,The length of the statement  "	//<place place_id="8831058" osm_type="node" osm_id="836234960" place_rank="30" boundingbox="54.6670935059'54.6870973206'25.2638857269'25.2838876343" lat="54.677095" lon="25.2738876" display_name="Railway Museum of Lithuania' 15' Mindaugo g.' Senamiesčio seniūnija' Vilnius' Vilnius County' Vilniaus m. savivaldybė' Vilniaus apskritis' 03215' Lithuania" class="tourism" type="museum" icon="http://open.mapquestapi.com/nominatim/v1/images/mapicons/tourist_museum.p.20.png"/> " is 472.
Long Statement,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetPoints,The length of the statement  "	//<place place_id="29614806" osm_type="way" osm_id="24845629" place_rank="30" boundingbox="54.6904983520508'54.6920852661133'25.2606296539307'25.2628803253174" lat="54.6913385159005" lon="25.2617684209873" display_name="Seimas (Parliament) of the Republic of Lithuania' 53' Gedimino pr.' Naujamiesčio seniūnija' Vilnius' Vilnius County' Vilniaus m. savivaldybė' Vilniaus apskritis' LT-01111' Lithuania" class="amenity" type="public_building"/> " is 443.
Long Statement,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetPoints,The length of the statement  "	// http://nominatim.openstreetmap.org/search?street=&city=vilnius&county=&state=&country=lithuania&postalcode=&format=xml " is 121.
Long Statement,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetPoints,The length of the statement  "	//<searchresults timestamp="Thu' 29 Nov 12 08:38:23 +0000" attribution="Data © OpenStreetMap contributors' ODbL 1.0. http://www.openstreetmap.org/copyright" querystring="vilnius' lithuania" polygon="false" exclude_place_ids="98093941" more_url="http://nominatim.openstreetmap.org/search?format=xml&exclude_place_ids=98093941&accept-language=de-de'de;q=0.8'en-us;q=0.5'en;q=0.3&q=vilnius%2C+lithuania"> " is 401.
Long Statement,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetPoints,The length of the statement  "	//<place place_id="98093941" osm_type="relation" osm_id="1529146" place_rank="16" boundingbox="54.5693359375'54.8323097229004'25.0250644683838'25.4815216064453" lat="54.6843135" lon="25.2853984" display_name="Vilnius' Vilniaus m. savivaldybė' Distrikt Vilnius' Litauen" class="boundary" type="administrative" icon="http://nominatim.openstreetmap.org/images/mapicons/poi_boundary_administrative.p.20.png"/> " is 405.
Long Statement,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetPlacemark,The length of the statement  "	//http://nominatim.openstreetmap.org/reverse?format=xml&lat=52.5487429714954&lon=-1.81602098644987&zoom=18&addressdetails=1 " is 123.
Long Statement,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetPlacemark,The length of the statement  "         <reversegeocode timestamp="Wed' 01 Feb 12 09:51:11 -0500" attribution="Data Copyright OpenStreetMap Contributors' Some Rights Reserved. CC-BY-SA 2.0." querystring="format=xml&lat=52.5487429714954&lon=-1.81602098644987&zoom=18&addressdetails=1">" is 244.
Long Statement,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,MakeDetailedGeocoderUrl,The length of the statement  "	return string.Format (GeocoderDetailedUrlFormat' street.Replace (' '' '+')' placemark.LocalityName.Replace (' '' '+')' placemark.SubAdministrativeAreaName.Replace (' '' '+')' placemark.AdministrativeAreaName.Replace (' '' '+')' placemark.CountryName.Replace (' '' '+')' placemark.PostalCodeNumber.Replace (' '' '+')); " is 317.
Long Statement,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetPlacemarkFromReverseGeocoderUrl,The length of the statement  "		string geo = GMaps.Instance.UsePlacemarkCache ? Cache.Instance.GetContent (url' CacheType.PlacemarkCache) : string.Empty; " is 121.
Long Statement,GMap.NET.MapProviders,GMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\GMapProvider.cs,CheckTileImageHttpResponse,The length of the statement  "	//Debug.WriteLine(response.StatusCode + "/" + response.StatusDescription + "/" + response.ContentType + " -> " + response.ResponseUri); " is 135.
Long Statement,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The length of the statement  "	double num = ((((-100.0 + (2.0 * x)) + (3.0 * y)) + ((0.2 * y) * y)) + ((0.1 * x) * y)) + (0.2 * Math.Sqrt (Math.Abs (x))); " is 123.
Long Statement,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The length of the statement  "	num += (((20.0 * Math.Sin ((6.0 * x) * 3.1415926535897931)) + (20.0 * Math.Sin ((2.0 * x) * 3.1415926535897931))) * 2.0) / 3.0; " is 127.
Long Statement,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The length of the statement  "	return (num + ((((160.0 * Math.Sin ((y / 12.0) * 3.1415926535897931)) + (320.0 * Math.Sin ((y * 3.1415926535897931) / 30.0))) * 2.0) / 3.0)); " is 141.
Long Statement,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The length of the statement  "	num += (((20.0 * Math.Sin ((6.0 * x) * 3.1415926535897931)) + (20.0 * Math.Sin ((2.0 * x) * 3.1415926535897931))) * 2.0) / 3.0; " is 127.
Long Statement,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The length of the statement  "	return (num + ((((150.0 * Math.Sin ((x / 12.0) * 3.1415926535897931)) + (300.0 * Math.Sin ((x / 30.0) * 3.1415926535897931))) * 2.0) / 3.0)); " is 141.
Long Statement,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,DTM00,The length of the statement  "	double x = scaleFactor * n * al * (1.0 + als / 6.0 * (1.0 - t + c + als / 20.0 * (5.0 - 18.0 * t + Math.Pow (t' 2) + 72.0 * c - 58.0 * esp))) + falseEasting; " is 157.
Long Statement,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,DTM00,The length of the statement  "	double y = scaleFactor * (ml - ml0 + n * tq * (als * (0.5 + als / 24.0 * (5.0 - t + 9.0 * c + 4.0 * Math.Pow (c' 2) + als / 30.0 * (61.0 - 58.0 * t + Math.Pow (t' 2) + 600.0 * c - 330.0 * esp))))) + falseNorthing; " is 213.
Long Statement,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The length of the statement  "		double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs))); " is 195.
Long Statement,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The length of the statement  "		double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi)); " is 180.
Long Statement,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,wgsToUTM,The length of the statement  "	var m = a * ((A0 * latrad) - (A2 * Math.Sin (2 * latrad)) + (A4 * Math.Sin (4 * latrad)) - (A6 * Math.Sin (6 * latrad))); " is 121.
Long Statement,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,wgsToUTM,The length of the statement  "	var eterm2 = (Math.Pow (w' 4) / 120.0) * Math.Pow (coslat' 4) * (4 * Math.Pow (psi' 3) * (1.0 - 6 * t * t) + psi * psi * (1.0 + 8 * t * t) - psi * 2 * t * t + Math.Pow (t' 4)); " is 176.
Long Statement,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,wgsToUTM,The length of the statement  "	var eterm3 = (Math.Pow (w' 6) / 5040.0) * Math.Pow (coslat' 6) * (61.0 - 479 * t * t + 179 * Math.Pow (t' 4) - Math.Pow (t' 6)); " is 128.
Long Statement,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,wgsToUTM,The length of the statement  "	var nterm3 = (Math.Pow (w' 6) / 720.0) * nu * sinlat * Math.Pow (coslat' 5) * (8 * Math.Pow (psi' 4) * (11.0 - 24 * t * t) - 28 * Math.Pow (psi' 3) * (1.0 - 6 * t * t) + psi * psi * (1.0 - 32 * t * t) - psi * 2 * t * t + Math.Pow (t' 4)); " is 238.
Long Statement,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,wgsToUTM,The length of the statement  "	var nterm4 = (Math.Pow (w' 8) / 40320.0) * nu * sinlat * Math.Pow (coslat' 7) * (1385.0 - 3111 * t * t + 543 * Math.Pow (t' 4) - Math.Pow (t' 6)); " is 146.
Long Statement,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,utmToWGS,The length of the statement  "	var footlat = sigma + ((3 * n / 2.0) - (27 * Math.Pow (n' 3) / 32.0)) * Math.Sin (2 * sigma) + ((21 * n * n / 16.0) - (55 * Math.Pow (n' 4) / 32.0)) * Math.Sin (4 * sigma) + (151 * Math.Pow (n' 3) / 96.0) * Math.Sin (6 * sigma) + (1097 * Math.Pow (n' 4) / 512.0) * Math.Sin (8 * sigma); " is 286.
Long Statement,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,utmToWGS,The length of the statement  "	var laterm2 = (t / (k * rho)) * (east * Math.Pow (x' 3) / 24.0) * (-4 * psi * psi + 9 * psi * (1 - t * t) + 12 * t * t); " is 120.
Long Statement,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,utmToWGS,The length of the statement  "	var laterm3 = (t / (k * rho)) * (east * Math.Pow (x' 5) / 720.0) * (8 * Math.Pow (psi' 4) * (11 - 24 * t * t) - 12 * Math.Pow (psi' 3) * (21.0 - 71 * t * t) + 15 * psi * psi * (15.0 - 98 * t * t + 15 * Math.Pow (t' 4)) + 180 * psi * (5 * t * t - 3 * Math.Pow (t' 4)) + 360 * Math.Pow (t' 4)); " is 292.
Long Statement,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,utmToWGS,The length of the statement  "	var laterm4 = (t / (k * rho)) * (east * Math.Pow (x' 7) / 40320.0) * (1385.0 + 3633 * t * t + 4095 * Math.Pow (t' 4) + 1575 * Math.Pow (t' 6)); " is 143.
Long Statement,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,utmToWGS,The length of the statement  "	var loterm3 = (Math.Pow (x' 5) / 120.0) * seclat * (-4 * Math.Pow (psi' 3) * (1 - 6 * t * t) + psi * psi * (9 - 68 * t * t) + 72 * psi * t * t + 24 * Math.Pow (t' 4)); " is 167.
Long Statement,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,utmToWGS,The length of the statement  "	var loterm4 = (Math.Pow (x' 7) / 5040.0) * seclat * (61.0 + 662 * t * t + 1320 * Math.Pow (t' 4) + 720 * Math.Pow (t' 6)); " is 122.
Long Statement,GMap.NET.Projections,MercatorProjectionYandex,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionYandex.cs,FromLatLngToPixel,The length of the statement  "	double z = Math.Tan (MathPiDiv4 + rLat / 2) / Math.Pow ((Math.Tan (MathPiDiv4 + Math.Asin (k * Math.Sin (rLat)) / 2))' k); " is 122.
Long Statement,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,DTM00,The length of the statement  "	double x = scaleFactor * n * al * (1.0 + als / 6.0 * (1.0 - t + c + als / 20.0 * (5.0 - 18.0 * t + Math.Pow (t' 2) + 72.0 * c - 58.0 * esp))) + falseEasting; " is 157.
Long Statement,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,DTM00,The length of the statement  "	double y = scaleFactor * (ml - ml0 + n * tq * (als * (0.5 + als / 24.0 * (5.0 - t + 9.0 * c + 4.0 * Math.Pow (c' 2) + als / 30.0 * (61.0 - 58.0 * t + Math.Pow (t' 2) + 600.0 * c - 330.0 * esp))))) + falseNorthing; " is 213.
Long Statement,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The length of the statement  "		double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs))); " is 195.
Long Statement,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The length of the statement  "		double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi)); " is 180.
Long Statement,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,GetDistance,The length of the statement  "	double a = Math.Pow (Math.Sin (dLatitude / 2)' 2) + Math.Cos (dLat1InRad) * Math.Cos (dLat2InRad) * Math.Pow (Math.Sin (dLongitude / 2)' 2); " is 140.
Long Statement,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,GetBearing,The length of the statement  "	var x = Math.Cos (latitude1) * Math.Sin (latitude2) - Math.Sin (latitude1) * Math.Cos (latitude2) * Math.Cos (longitudeDifference); " is 131.
Long Statement,GMap.NET,GRect,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GRect.cs,Contains,The length of the statement  "	return (this.X <= rect.X) && ((rect.X + rect.Width) <= (this.X + this.Width)) && (this.Y <= rect.Y) && ((rect.Y + rect.Height) <= (this.Y + this.Height)); " is 154.
Long Statement,GMap.NET,GRect,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GRect.cs,GetHashCode,The length of the statement  "	return (int)(((this.X ^ ((this.Y << 13) | (this.Y >> 0x13))) ^ ((this.Width << 0x1a) | (this.Width >> 6))) ^ ((this.Height << 7) | (this.Height >> 0x19))); " is 155.
Long Statement,GMap.NET,GRect,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GRect.cs,IntersectsWith,The length of the statement  "	return (rect.X < this.X + this.Width) && (this.X < (rect.X + rect.Width)) && (rect.Y < this.Y + this.Height) && (this.Y < rect.Y + rect.Height); " is 144.
Long Statement,GMap.NET,GRect,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GRect.cs,ToString,The length of the statement  "	return "{X=" + X.ToString (CultureInfo.CurrentCulture) + "'Y=" + Y.ToString (CultureInfo.CurrentCulture) + "'Width=" + Width.ToString (CultureInfo.CurrentCulture) + "'Height=" + Height.ToString (CultureInfo.CurrentCulture) + "}"; " is 229.
Long Statement,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,ExportToGMDB,The length of the statement  "            db.AppendFormat(CultureInfo.InvariantCulture' "{0}{1}Data.gmdb"' GMapProvider.LanguageStr' Path.DirectorySeparatorChar);" is 120.
Long Statement,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,ImportFromGMDB,The length of the statement  "            db.AppendFormat(CultureInfo.InvariantCulture' "{0}{1}Data.gmdb"' GMapProvider.LanguageStr' Path.DirectorySeparatorChar);" is 120.
Long Statement,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,EnqueueCacheTask,The length of the statement  "			else if (CacheEngine == null || CacheEngine.ThreadState == System.Threading.ThreadState.Stopped || CacheEngine.ThreadState == System.Threading.ThreadState.Unstarted) " is 165.
Long Statement,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The length of the statement  "					Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB..."); " is 122.
Long Statement,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,GetImageFrom,The length of the statement  "						Debug.WriteLine ("Image disposed in MemoryCache o.O' should never happen ;} " + new RawTile (provider.DbId' pos' zoom)); " is 120.
Long Statement,GMap.NET,RectLatLng,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\RectLatLng.cs,Equals,The length of the statement  "	return ((((ef.Lng == this.Lng) && (ef.Lat == this.Lat)) && (ef.WidthLng == this.WidthLng)) && (ef.HeightLat == this.HeightLat)); " is 128.
Long Statement,GMap.NET,RectLatLng,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\RectLatLng.cs,Contains,The length of the statement  "	return ((((this.Lng <= lng) && (lng < (this.Lng + this.WidthLng))) && (this.Lat >= lat)) && (lat > (this.Lat - this.HeightLat))); " is 129.
Long Statement,GMap.NET,RectLatLng,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\RectLatLng.cs,Contains,The length of the statement  "	return ((((this.Lng <= rect.Lng) && ((rect.Lng + rect.WidthLng) <= (this.Lng + this.WidthLng))) && (this.Lat >= rect.Lat)) && ((rect.Lat - rect.HeightLat) >= (this.Lat - this.HeightLat))); " is 188.
Long Statement,GMap.NET,RectLatLng,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\RectLatLng.cs,GetHashCode,The length of the statement  "	return (((this.Lng.GetHashCode () ^ this.Lat.GetHashCode ()) ^ this.WidthLng.GetHashCode ()) ^ this.HeightLat.GetHashCode ()); " is 126.
Long Statement,GMap.NET,RectLatLng,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\RectLatLng.cs,Union,The length of the statement  "	return RectLatLng.FromLTRB (Math.Min (a.Left' b.Left)' Math.Max (a.Top' b.Top)' Math.Max (a.Right' b.Right)' Math.Min (a.Bottom' b.Bottom)); " is 140.
Long Statement,GMap.NET,RectLatLng,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\RectLatLng.cs,ToString,The length of the statement  "	return ("{Lat=" + this.Lat.ToString (CultureInfo.CurrentCulture) + "'Lng=" + this.Lng.ToString (CultureInfo.CurrentCulture) + "'WidthLng=" + this.WidthLng.ToString (CultureInfo.CurrentCulture) + "'HeightLat=" + this.HeightLat.ToString (CultureInfo.CurrentCulture) + "}"); " is 271.
Long Statement,GMap.NET,GSize,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GSize.cs,ToString,The length of the statement  "	return "{Width=" + width.ToString (CultureInfo.CurrentCulture) + "' Height=" + height.ToString (CultureInfo.CurrentCulture) + "}"; " is 130.
Long Statement,GMap.NET,SizeLatLng,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\SizeLatLng.cs,Equals,The length of the statement  "	return (((ef.WidthLng == this.WidthLng) && (ef.HeightLat == this.HeightLat)) && ef.GetType ().Equals (base.GetType ())); " is 120.
Long Statement,GMap.NET,SizeLatLng,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\SizeLatLng.cs,ToString,The length of the statement  "	return ("{WidthLng=" + this.widthLng.ToString (CultureInfo.CurrentCulture) + "' HeightLng=" + this.heightLat.ToString (CultureInfo.CurrentCulture) + "}"); " is 154.
Complex Conditional,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The conditional expression  "img == null && okZoom > 0 && fillEmptyTiles && Provider.Projection is MercatorProjection"  is complex.
Complex Conditional,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,UpdateBounds,The conditional expression  "p.X >= minOfTiles.Width && p.Y >= minOfTiles.Height && p.X <= maxOfTiles.Width && p.Y <= maxOfTiles.Height"  is complex.
Complex Conditional,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,outOfChina,The conditional expression  "((lon >= 72.004) && (lon <= 137.8347)) && ((lat >= 0.8293) && (lat <= 55.8271))"  is complex.
Complex Conditional,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The conditional expression  "abortCacheLoop || noMapInstances || !WaitForCache.WaitOne (33333' false) || noMapInstances"  is complex.
Empty Catch Block,GMap.NET.CacheProviders,MsSQLCePureImageCache,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.CacheProviders\MSSQLCEPureImageCache.cs,Initialize,The method has an empty catch block.
Magic Number,GMap.NET.Internals,SocksHttpWebRequest,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHttpWebRequest.cs,InternalGetResponse,The following statement contains a magic number: using (var _socksConnection = new ProxySocket (AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.Tcp)) {  	var proxyUri = Proxy.GetProxy (RequestUri);  	var ipAddress = GetProxyIpAddress (proxyUri);  	_socksConnection.ProxyEndPoint = new IPEndPoint (ipAddress' proxyUri.Port);  	_socksConnection.ProxyType = ProxyTypes.Socks5;  	// open connection  	_socksConnection.Connect (RequestUri.Host' 80);  	// send an HTTP request  	_socksConnection.Send (Encoding.UTF8.GetBytes (RequestMessage));  	// read the HTTP reply  	var buffer = new byte[1024 * 4];  	int bytesReceived = 0;  	bool headerDone = false;  	while ((bytesReceived = _socksConnection.Receive (buffer)) > 0) {  		if (!headerDone) {  			var headPart = Encoding.UTF8.GetString (buffer' 0' bytesReceived > 1024 ? 1024 : bytesReceived);  			var indexOfFirstBlankLine = headPart.IndexOf ("\r\n\r\n");  			if (indexOfFirstBlankLine > 0) {  				headPart = headPart.Substring (0' indexOfFirstBlankLine);  				header += headPart;  				headerDone = true;  				var headerPartLength = Encoding.UTF8.GetByteCount (headPart) + 4;  				// 0123456789  				//   ----  				if (headerPartLength < bytesReceived) {  					data = new MemoryStream ();  					data.Write (buffer' headerPartLength' bytesReceived - headerPartLength);  				}  			} else {  				header += headPart;  			}  		} else {  			if (data == null) {  				data = new MemoryStream ();  			}  			data.Write (buffer' 0' bytesReceived);  		}  	}  	if (data != null) {  		data.Position = 0;  	}  }  
Magic Number,GMap.NET.Internals,SocksHttpWebRequest,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHttpWebRequest.cs,InternalGetResponse,The following statement contains a magic number: using (var _socksConnection = new ProxySocket (AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.Tcp)) {  	var proxyUri = Proxy.GetProxy (RequestUri);  	var ipAddress = GetProxyIpAddress (proxyUri);  	_socksConnection.ProxyEndPoint = new IPEndPoint (ipAddress' proxyUri.Port);  	_socksConnection.ProxyType = ProxyTypes.Socks5;  	// open connection  	_socksConnection.Connect (RequestUri.Host' 80);  	// send an HTTP request  	_socksConnection.Send (Encoding.UTF8.GetBytes (RequestMessage));  	// read the HTTP reply  	var buffer = new byte[1024 * 4];  	int bytesReceived = 0;  	bool headerDone = false;  	while ((bytesReceived = _socksConnection.Receive (buffer)) > 0) {  		if (!headerDone) {  			var headPart = Encoding.UTF8.GetString (buffer' 0' bytesReceived > 1024 ? 1024 : bytesReceived);  			var indexOfFirstBlankLine = headPart.IndexOf ("\r\n\r\n");  			if (indexOfFirstBlankLine > 0) {  				headPart = headPart.Substring (0' indexOfFirstBlankLine);  				header += headPart;  				headerDone = true;  				var headerPartLength = Encoding.UTF8.GetByteCount (headPart) + 4;  				// 0123456789  				//   ----  				if (headerPartLength < bytesReceived) {  					data = new MemoryStream ();  					data.Write (buffer' headerPartLength' bytesReceived - headerPartLength);  				}  			} else {  				header += headPart;  			}  		} else {  			if (data == null) {  				data = new MemoryStream ();  			}  			data.Write (buffer' 0' bytesReceived);  		}  	}  	if (data != null) {  		data.Position = 0;  	}  }  
Magic Number,GMap.NET.Internals,SocksHttpWebRequest,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHttpWebRequest.cs,InternalGetResponse,The following statement contains a magic number: using (var _socksConnection = new ProxySocket (AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.Tcp)) {  	var proxyUri = Proxy.GetProxy (RequestUri);  	var ipAddress = GetProxyIpAddress (proxyUri);  	_socksConnection.ProxyEndPoint = new IPEndPoint (ipAddress' proxyUri.Port);  	_socksConnection.ProxyType = ProxyTypes.Socks5;  	// open connection  	_socksConnection.Connect (RequestUri.Host' 80);  	// send an HTTP request  	_socksConnection.Send (Encoding.UTF8.GetBytes (RequestMessage));  	// read the HTTP reply  	var buffer = new byte[1024 * 4];  	int bytesReceived = 0;  	bool headerDone = false;  	while ((bytesReceived = _socksConnection.Receive (buffer)) > 0) {  		if (!headerDone) {  			var headPart = Encoding.UTF8.GetString (buffer' 0' bytesReceived > 1024 ? 1024 : bytesReceived);  			var indexOfFirstBlankLine = headPart.IndexOf ("\r\n\r\n");  			if (indexOfFirstBlankLine > 0) {  				headPart = headPart.Substring (0' indexOfFirstBlankLine);  				header += headPart;  				headerDone = true;  				var headerPartLength = Encoding.UTF8.GetByteCount (headPart) + 4;  				// 0123456789  				//   ----  				if (headerPartLength < bytesReceived) {  					data = new MemoryStream ();  					data.Write (buffer' headerPartLength' bytesReceived - headerPartLength);  				}  			} else {  				header += headPart;  			}  		} else {  			if (data == null) {  				data = new MemoryStream ();  			}  			data.Write (buffer' 0' bytesReceived);  		}  	}  	if (data != null) {  		data.Position = 0;  	}  }  
Magic Number,GMap.NET.Internals,SocksHttpWebRequest,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHttpWebRequest.cs,InternalGetResponse,The following statement contains a magic number: using (var _socksConnection = new ProxySocket (AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.Tcp)) {  	var proxyUri = Proxy.GetProxy (RequestUri);  	var ipAddress = GetProxyIpAddress (proxyUri);  	_socksConnection.ProxyEndPoint = new IPEndPoint (ipAddress' proxyUri.Port);  	_socksConnection.ProxyType = ProxyTypes.Socks5;  	// open connection  	_socksConnection.Connect (RequestUri.Host' 80);  	// send an HTTP request  	_socksConnection.Send (Encoding.UTF8.GetBytes (RequestMessage));  	// read the HTTP reply  	var buffer = new byte[1024 * 4];  	int bytesReceived = 0;  	bool headerDone = false;  	while ((bytesReceived = _socksConnection.Receive (buffer)) > 0) {  		if (!headerDone) {  			var headPart = Encoding.UTF8.GetString (buffer' 0' bytesReceived > 1024 ? 1024 : bytesReceived);  			var indexOfFirstBlankLine = headPart.IndexOf ("\r\n\r\n");  			if (indexOfFirstBlankLine > 0) {  				headPart = headPart.Substring (0' indexOfFirstBlankLine);  				header += headPart;  				headerDone = true;  				var headerPartLength = Encoding.UTF8.GetByteCount (headPart) + 4;  				// 0123456789  				//   ----  				if (headerPartLength < bytesReceived) {  					data = new MemoryStream ();  					data.Write (buffer' headerPartLength' bytesReceived - headerPartLength);  				}  			} else {  				header += headPart;  			}  		} else {  			if (data == null) {  				data = new MemoryStream ();  			}  			data.Write (buffer' 0' bytesReceived);  		}  	}  	if (data != null) {  		data.Position = 0;  	}  }  
Magic Number,GMap.NET.Internals,SocksHttpWebRequest,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHttpWebRequest.cs,InternalGetResponse,The following statement contains a magic number: using (var _socksConnection = new ProxySocket (AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.Tcp)) {  	var proxyUri = Proxy.GetProxy (RequestUri);  	var ipAddress = GetProxyIpAddress (proxyUri);  	_socksConnection.ProxyEndPoint = new IPEndPoint (ipAddress' proxyUri.Port);  	_socksConnection.ProxyType = ProxyTypes.Socks5;  	// open connection  	_socksConnection.Connect (RequestUri.Host' 80);  	// send an HTTP request  	_socksConnection.Send (Encoding.UTF8.GetBytes (RequestMessage));  	// read the HTTP reply  	var buffer = new byte[1024 * 4];  	int bytesReceived = 0;  	bool headerDone = false;  	while ((bytesReceived = _socksConnection.Receive (buffer)) > 0) {  		if (!headerDone) {  			var headPart = Encoding.UTF8.GetString (buffer' 0' bytesReceived > 1024 ? 1024 : bytesReceived);  			var indexOfFirstBlankLine = headPart.IndexOf ("\r\n\r\n");  			if (indexOfFirstBlankLine > 0) {  				headPart = headPart.Substring (0' indexOfFirstBlankLine);  				header += headPart;  				headerDone = true;  				var headerPartLength = Encoding.UTF8.GetByteCount (headPart) + 4;  				// 0123456789  				//   ----  				if (headerPartLength < bytesReceived) {  					data = new MemoryStream ();  					data.Write (buffer' headerPartLength' bytesReceived - headerPartLength);  				}  			} else {  				header += headPart;  			}  		} else {  			if (data == null) {  				data = new MemoryStream ();  			}  			data.Write (buffer' 0' bytesReceived);  		}  	}  	if (data != null) {  		data.Position = 0;  	}  }  
Magic Number,GMap.NET.Internals,SocksHttpWebRequest,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHttpWebRequest.cs,InternalGetResponse,The following statement contains a magic number: using (var _socksConnection = new ProxySocket (AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.Tcp)) {  	var proxyUri = Proxy.GetProxy (RequestUri);  	var ipAddress = GetProxyIpAddress (proxyUri);  	_socksConnection.ProxyEndPoint = new IPEndPoint (ipAddress' proxyUri.Port);  	_socksConnection.ProxyType = ProxyTypes.Socks5;  	// open connection  	_socksConnection.Connect (RequestUri.Host' 80);  	// send an HTTP request  	_socksConnection.Send (Encoding.UTF8.GetBytes (RequestMessage));  	// read the HTTP reply  	var buffer = new byte[1024 * 4];  	int bytesReceived = 0;  	bool headerDone = false;  	while ((bytesReceived = _socksConnection.Receive (buffer)) > 0) {  		if (!headerDone) {  			var headPart = Encoding.UTF8.GetString (buffer' 0' bytesReceived > 1024 ? 1024 : bytesReceived);  			var indexOfFirstBlankLine = headPart.IndexOf ("\r\n\r\n");  			if (indexOfFirstBlankLine > 0) {  				headPart = headPart.Substring (0' indexOfFirstBlankLine);  				header += headPart;  				headerDone = true;  				var headerPartLength = Encoding.UTF8.GetByteCount (headPart) + 4;  				// 0123456789  				//   ----  				if (headerPartLength < bytesReceived) {  					data = new MemoryStream ();  					data.Write (buffer' headerPartLength' bytesReceived - headerPartLength);  				}  			} else {  				header += headPart;  			}  		} else {  			if (data == null) {  				data = new MemoryStream ();  			}  			data.Write (buffer' 0' bytesReceived);  		}  	}  	if (data != null) {  		data.Position = 0;  	}  }  
Magic Number,GMap.NET.Internals,SocksHttpWebRequest,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHttpWebRequest.cs,InternalGetResponse,The following statement contains a magic number: _socksConnection.Connect (RequestUri.Host' 80);  
Magic Number,GMap.NET.Internals,SocksHttpWebRequest,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHttpWebRequest.cs,InternalGetResponse,The following statement contains a magic number: while ((bytesReceived = _socksConnection.Receive (buffer)) > 0) {  	if (!headerDone) {  		var headPart = Encoding.UTF8.GetString (buffer' 0' bytesReceived > 1024 ? 1024 : bytesReceived);  		var indexOfFirstBlankLine = headPart.IndexOf ("\r\n\r\n");  		if (indexOfFirstBlankLine > 0) {  			headPart = headPart.Substring (0' indexOfFirstBlankLine);  			header += headPart;  			headerDone = true;  			var headerPartLength = Encoding.UTF8.GetByteCount (headPart) + 4;  			// 0123456789  			//   ----  			if (headerPartLength < bytesReceived) {  				data = new MemoryStream ();  				data.Write (buffer' headerPartLength' bytesReceived - headerPartLength);  			}  		} else {  			header += headPart;  		}  	} else {  		if (data == null) {  			data = new MemoryStream ();  		}  		data.Write (buffer' 0' bytesReceived);  	}  }  
Magic Number,GMap.NET.Internals,SocksHttpWebRequest,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHttpWebRequest.cs,InternalGetResponse,The following statement contains a magic number: while ((bytesReceived = _socksConnection.Receive (buffer)) > 0) {  	if (!headerDone) {  		var headPart = Encoding.UTF8.GetString (buffer' 0' bytesReceived > 1024 ? 1024 : bytesReceived);  		var indexOfFirstBlankLine = headPart.IndexOf ("\r\n\r\n");  		if (indexOfFirstBlankLine > 0) {  			headPart = headPart.Substring (0' indexOfFirstBlankLine);  			header += headPart;  			headerDone = true;  			var headerPartLength = Encoding.UTF8.GetByteCount (headPart) + 4;  			// 0123456789  			//   ----  			if (headerPartLength < bytesReceived) {  				data = new MemoryStream ();  				data.Write (buffer' headerPartLength' bytesReceived - headerPartLength);  			}  		} else {  			header += headPart;  		}  	} else {  		if (data == null) {  			data = new MemoryStream ();  		}  		data.Write (buffer' 0' bytesReceived);  	}  }  
Magic Number,GMap.NET.Internals,SocksHttpWebRequest,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHttpWebRequest.cs,InternalGetResponse,The following statement contains a magic number: while ((bytesReceived = _socksConnection.Receive (buffer)) > 0) {  	if (!headerDone) {  		var headPart = Encoding.UTF8.GetString (buffer' 0' bytesReceived > 1024 ? 1024 : bytesReceived);  		var indexOfFirstBlankLine = headPart.IndexOf ("\r\n\r\n");  		if (indexOfFirstBlankLine > 0) {  			headPart = headPart.Substring (0' indexOfFirstBlankLine);  			header += headPart;  			headerDone = true;  			var headerPartLength = Encoding.UTF8.GetByteCount (headPart) + 4;  			// 0123456789  			//   ----  			if (headerPartLength < bytesReceived) {  				data = new MemoryStream ();  				data.Write (buffer' headerPartLength' bytesReceived - headerPartLength);  			}  		} else {  			header += headPart;  		}  	} else {  		if (data == null) {  			data = new MemoryStream ();  		}  		data.Write (buffer' 0' bytesReceived);  	}  }  
Magic Number,GMap.NET.Internals,SocksHttpWebRequest,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHttpWebRequest.cs,InternalGetResponse,The following statement contains a magic number: if (!headerDone) {  	var headPart = Encoding.UTF8.GetString (buffer' 0' bytesReceived > 1024 ? 1024 : bytesReceived);  	var indexOfFirstBlankLine = headPart.IndexOf ("\r\n\r\n");  	if (indexOfFirstBlankLine > 0) {  		headPart = headPart.Substring (0' indexOfFirstBlankLine);  		header += headPart;  		headerDone = true;  		var headerPartLength = Encoding.UTF8.GetByteCount (headPart) + 4;  		// 0123456789  		//   ----  		if (headerPartLength < bytesReceived) {  			data = new MemoryStream ();  			data.Write (buffer' headerPartLength' bytesReceived - headerPartLength);  		}  	} else {  		header += headPart;  	}  } else {  	if (data == null) {  		data = new MemoryStream ();  	}  	data.Write (buffer' 0' bytesReceived);  }  
Magic Number,GMap.NET.Internals,SocksHttpWebRequest,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHttpWebRequest.cs,InternalGetResponse,The following statement contains a magic number: if (!headerDone) {  	var headPart = Encoding.UTF8.GetString (buffer' 0' bytesReceived > 1024 ? 1024 : bytesReceived);  	var indexOfFirstBlankLine = headPart.IndexOf ("\r\n\r\n");  	if (indexOfFirstBlankLine > 0) {  		headPart = headPart.Substring (0' indexOfFirstBlankLine);  		header += headPart;  		headerDone = true;  		var headerPartLength = Encoding.UTF8.GetByteCount (headPart) + 4;  		// 0123456789  		//   ----  		if (headerPartLength < bytesReceived) {  			data = new MemoryStream ();  			data.Write (buffer' headerPartLength' bytesReceived - headerPartLength);  		}  	} else {  		header += headPart;  	}  } else {  	if (data == null) {  		data = new MemoryStream ();  	}  	data.Write (buffer' 0' bytesReceived);  }  
Magic Number,GMap.NET.Internals,SocksHttpWebRequest,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHttpWebRequest.cs,InternalGetResponse,The following statement contains a magic number: if (!headerDone) {  	var headPart = Encoding.UTF8.GetString (buffer' 0' bytesReceived > 1024 ? 1024 : bytesReceived);  	var indexOfFirstBlankLine = headPart.IndexOf ("\r\n\r\n");  	if (indexOfFirstBlankLine > 0) {  		headPart = headPart.Substring (0' indexOfFirstBlankLine);  		header += headPart;  		headerDone = true;  		var headerPartLength = Encoding.UTF8.GetByteCount (headPart) + 4;  		// 0123456789  		//   ----  		if (headerPartLength < bytesReceived) {  			data = new MemoryStream ();  			data.Write (buffer' headerPartLength' bytesReceived - headerPartLength);  		}  	} else {  		header += headPart;  	}  } else {  	if (data == null) {  		data = new MemoryStream ();  	}  	data.Write (buffer' 0' bytesReceived);  }  
Magic Number,GMap.NET.Internals,SocksHttpWebRequest,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHttpWebRequest.cs,InternalGetResponse,The following statement contains a magic number: if (indexOfFirstBlankLine > 0) {  	headPart = headPart.Substring (0' indexOfFirstBlankLine);  	header += headPart;  	headerDone = true;  	var headerPartLength = Encoding.UTF8.GetByteCount (headPart) + 4;  	// 0123456789  	//   ----  	if (headerPartLength < bytesReceived) {  		data = new MemoryStream ();  		data.Write (buffer' headerPartLength' bytesReceived - headerPartLength);  	}  } else {  	header += headPart;  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,Start,The following statement contains a magic number: while (listen) {  	try {  		if (!server.Pending ()) {  			Thread.Sleep (111);  		} else {  			ThreadPool.QueueUserWorkItem (new WaitCallback (ProcessRequest)' server.AcceptTcpClient ());  		}  	} catch (Exception ex) {  		Debug.WriteLine ("TileHttpHost: " + ex);  	}  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,Start,The following statement contains a magic number: try {  	if (!server.Pending ()) {  		Thread.Sleep (111);  	} else {  		ThreadPool.QueueUserWorkItem (new WaitCallback (ProcessRequest)' server.AcceptTcpClient ());  	}  } catch (Exception ex) {  	Debug.WriteLine ("TileHttpHost: " + ex);  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,Start,The following statement contains a magic number: if (!server.Pending ()) {  	Thread.Sleep (111);  } else {  	ThreadPool.QueueUserWorkItem (new WaitCallback (ProcessRequest)' server.AcceptTcpClient ());  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,Start,The following statement contains a magic number: Thread.Sleep (111);  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: try {  	using (TcpClient c = p as TcpClient) {  		using (var s = c.GetStream ()) {  			using (StreamReader r = new StreamReader (s' Encoding.UTF8)) {  				var request = r.ReadLine ();  				if (!string.IsNullOrEmpty (request) && request.StartsWith ("GET")) {  					//Debug.WriteLine("TileHttpHost: " + request);  					// http://localhost:88/88888/5/15/11  					// GET /8888888888/5/15/11 HTTP/1.1  					var rq = request.Split (' ');  					if (rq.Length >= 2) {  						var ids = rq [1].Split (new char[] {  							'/'  						}' StringSplitOptions.RemoveEmptyEntries);  						if (ids.Length == 4) {  							int dbId = int.Parse (ids [0]);  							int zoom = int.Parse (ids [1]);  							int x = int.Parse (ids [2]);  							int y = int.Parse (ids [3]);  							var pr = GMapProviders.TryGetProvider (dbId);  							if (pr != null) {  								Exception ex;  								var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  								if (img != null) {  									using (img) {  										s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  										img.Data.WriteTo (s);  									}  								}  							}  						}  					}  				}  			}  		}  		c.Close ();  	}  } catch (Exception ex) {  	Debug.WriteLine ("TileHttpHost' ProcessRequest: " + ex);  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: try {  	using (TcpClient c = p as TcpClient) {  		using (var s = c.GetStream ()) {  			using (StreamReader r = new StreamReader (s' Encoding.UTF8)) {  				var request = r.ReadLine ();  				if (!string.IsNullOrEmpty (request) && request.StartsWith ("GET")) {  					//Debug.WriteLine("TileHttpHost: " + request);  					// http://localhost:88/88888/5/15/11  					// GET /8888888888/5/15/11 HTTP/1.1  					var rq = request.Split (' ');  					if (rq.Length >= 2) {  						var ids = rq [1].Split (new char[] {  							'/'  						}' StringSplitOptions.RemoveEmptyEntries);  						if (ids.Length == 4) {  							int dbId = int.Parse (ids [0]);  							int zoom = int.Parse (ids [1]);  							int x = int.Parse (ids [2]);  							int y = int.Parse (ids [3]);  							var pr = GMapProviders.TryGetProvider (dbId);  							if (pr != null) {  								Exception ex;  								var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  								if (img != null) {  									using (img) {  										s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  										img.Data.WriteTo (s);  									}  								}  							}  						}  					}  				}  			}  		}  		c.Close ();  	}  } catch (Exception ex) {  	Debug.WriteLine ("TileHttpHost' ProcessRequest: " + ex);  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: try {  	using (TcpClient c = p as TcpClient) {  		using (var s = c.GetStream ()) {  			using (StreamReader r = new StreamReader (s' Encoding.UTF8)) {  				var request = r.ReadLine ();  				if (!string.IsNullOrEmpty (request) && request.StartsWith ("GET")) {  					//Debug.WriteLine("TileHttpHost: " + request);  					// http://localhost:88/88888/5/15/11  					// GET /8888888888/5/15/11 HTTP/1.1  					var rq = request.Split (' ');  					if (rq.Length >= 2) {  						var ids = rq [1].Split (new char[] {  							'/'  						}' StringSplitOptions.RemoveEmptyEntries);  						if (ids.Length == 4) {  							int dbId = int.Parse (ids [0]);  							int zoom = int.Parse (ids [1]);  							int x = int.Parse (ids [2]);  							int y = int.Parse (ids [3]);  							var pr = GMapProviders.TryGetProvider (dbId);  							if (pr != null) {  								Exception ex;  								var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  								if (img != null) {  									using (img) {  										s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  										img.Data.WriteTo (s);  									}  								}  							}  						}  					}  				}  			}  		}  		c.Close ();  	}  } catch (Exception ex) {  	Debug.WriteLine ("TileHttpHost' ProcessRequest: " + ex);  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: try {  	using (TcpClient c = p as TcpClient) {  		using (var s = c.GetStream ()) {  			using (StreamReader r = new StreamReader (s' Encoding.UTF8)) {  				var request = r.ReadLine ();  				if (!string.IsNullOrEmpty (request) && request.StartsWith ("GET")) {  					//Debug.WriteLine("TileHttpHost: " + request);  					// http://localhost:88/88888/5/15/11  					// GET /8888888888/5/15/11 HTTP/1.1  					var rq = request.Split (' ');  					if (rq.Length >= 2) {  						var ids = rq [1].Split (new char[] {  							'/'  						}' StringSplitOptions.RemoveEmptyEntries);  						if (ids.Length == 4) {  							int dbId = int.Parse (ids [0]);  							int zoom = int.Parse (ids [1]);  							int x = int.Parse (ids [2]);  							int y = int.Parse (ids [3]);  							var pr = GMapProviders.TryGetProvider (dbId);  							if (pr != null) {  								Exception ex;  								var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  								if (img != null) {  									using (img) {  										s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  										img.Data.WriteTo (s);  									}  								}  							}  						}  					}  				}  			}  		}  		c.Close ();  	}  } catch (Exception ex) {  	Debug.WriteLine ("TileHttpHost' ProcessRequest: " + ex);  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: using (TcpClient c = p as TcpClient) {  	using (var s = c.GetStream ()) {  		using (StreamReader r = new StreamReader (s' Encoding.UTF8)) {  			var request = r.ReadLine ();  			if (!string.IsNullOrEmpty (request) && request.StartsWith ("GET")) {  				//Debug.WriteLine("TileHttpHost: " + request);  				// http://localhost:88/88888/5/15/11  				// GET /8888888888/5/15/11 HTTP/1.1  				var rq = request.Split (' ');  				if (rq.Length >= 2) {  					var ids = rq [1].Split (new char[] {  						'/'  					}' StringSplitOptions.RemoveEmptyEntries);  					if (ids.Length == 4) {  						int dbId = int.Parse (ids [0]);  						int zoom = int.Parse (ids [1]);  						int x = int.Parse (ids [2]);  						int y = int.Parse (ids [3]);  						var pr = GMapProviders.TryGetProvider (dbId);  						if (pr != null) {  							Exception ex;  							var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  							if (img != null) {  								using (img) {  									s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  									img.Data.WriteTo (s);  								}  							}  						}  					}  				}  			}  		}  	}  	c.Close ();  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: using (TcpClient c = p as TcpClient) {  	using (var s = c.GetStream ()) {  		using (StreamReader r = new StreamReader (s' Encoding.UTF8)) {  			var request = r.ReadLine ();  			if (!string.IsNullOrEmpty (request) && request.StartsWith ("GET")) {  				//Debug.WriteLine("TileHttpHost: " + request);  				// http://localhost:88/88888/5/15/11  				// GET /8888888888/5/15/11 HTTP/1.1  				var rq = request.Split (' ');  				if (rq.Length >= 2) {  					var ids = rq [1].Split (new char[] {  						'/'  					}' StringSplitOptions.RemoveEmptyEntries);  					if (ids.Length == 4) {  						int dbId = int.Parse (ids [0]);  						int zoom = int.Parse (ids [1]);  						int x = int.Parse (ids [2]);  						int y = int.Parse (ids [3]);  						var pr = GMapProviders.TryGetProvider (dbId);  						if (pr != null) {  							Exception ex;  							var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  							if (img != null) {  								using (img) {  									s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  									img.Data.WriteTo (s);  								}  							}  						}  					}  				}  			}  		}  	}  	c.Close ();  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: using (TcpClient c = p as TcpClient) {  	using (var s = c.GetStream ()) {  		using (StreamReader r = new StreamReader (s' Encoding.UTF8)) {  			var request = r.ReadLine ();  			if (!string.IsNullOrEmpty (request) && request.StartsWith ("GET")) {  				//Debug.WriteLine("TileHttpHost: " + request);  				// http://localhost:88/88888/5/15/11  				// GET /8888888888/5/15/11 HTTP/1.1  				var rq = request.Split (' ');  				if (rq.Length >= 2) {  					var ids = rq [1].Split (new char[] {  						'/'  					}' StringSplitOptions.RemoveEmptyEntries);  					if (ids.Length == 4) {  						int dbId = int.Parse (ids [0]);  						int zoom = int.Parse (ids [1]);  						int x = int.Parse (ids [2]);  						int y = int.Parse (ids [3]);  						var pr = GMapProviders.TryGetProvider (dbId);  						if (pr != null) {  							Exception ex;  							var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  							if (img != null) {  								using (img) {  									s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  									img.Data.WriteTo (s);  								}  							}  						}  					}  				}  			}  		}  	}  	c.Close ();  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: using (TcpClient c = p as TcpClient) {  	using (var s = c.GetStream ()) {  		using (StreamReader r = new StreamReader (s' Encoding.UTF8)) {  			var request = r.ReadLine ();  			if (!string.IsNullOrEmpty (request) && request.StartsWith ("GET")) {  				//Debug.WriteLine("TileHttpHost: " + request);  				// http://localhost:88/88888/5/15/11  				// GET /8888888888/5/15/11 HTTP/1.1  				var rq = request.Split (' ');  				if (rq.Length >= 2) {  					var ids = rq [1].Split (new char[] {  						'/'  					}' StringSplitOptions.RemoveEmptyEntries);  					if (ids.Length == 4) {  						int dbId = int.Parse (ids [0]);  						int zoom = int.Parse (ids [1]);  						int x = int.Parse (ids [2]);  						int y = int.Parse (ids [3]);  						var pr = GMapProviders.TryGetProvider (dbId);  						if (pr != null) {  							Exception ex;  							var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  							if (img != null) {  								using (img) {  									s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  									img.Data.WriteTo (s);  								}  							}  						}  					}  				}  			}  		}  	}  	c.Close ();  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: using (var s = c.GetStream ()) {  	using (StreamReader r = new StreamReader (s' Encoding.UTF8)) {  		var request = r.ReadLine ();  		if (!string.IsNullOrEmpty (request) && request.StartsWith ("GET")) {  			//Debug.WriteLine("TileHttpHost: " + request);  			// http://localhost:88/88888/5/15/11  			// GET /8888888888/5/15/11 HTTP/1.1  			var rq = request.Split (' ');  			if (rq.Length >= 2) {  				var ids = rq [1].Split (new char[] {  					'/'  				}' StringSplitOptions.RemoveEmptyEntries);  				if (ids.Length == 4) {  					int dbId = int.Parse (ids [0]);  					int zoom = int.Parse (ids [1]);  					int x = int.Parse (ids [2]);  					int y = int.Parse (ids [3]);  					var pr = GMapProviders.TryGetProvider (dbId);  					if (pr != null) {  						Exception ex;  						var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  						if (img != null) {  							using (img) {  								s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  								img.Data.WriteTo (s);  							}  						}  					}  				}  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: using (var s = c.GetStream ()) {  	using (StreamReader r = new StreamReader (s' Encoding.UTF8)) {  		var request = r.ReadLine ();  		if (!string.IsNullOrEmpty (request) && request.StartsWith ("GET")) {  			//Debug.WriteLine("TileHttpHost: " + request);  			// http://localhost:88/88888/5/15/11  			// GET /8888888888/5/15/11 HTTP/1.1  			var rq = request.Split (' ');  			if (rq.Length >= 2) {  				var ids = rq [1].Split (new char[] {  					'/'  				}' StringSplitOptions.RemoveEmptyEntries);  				if (ids.Length == 4) {  					int dbId = int.Parse (ids [0]);  					int zoom = int.Parse (ids [1]);  					int x = int.Parse (ids [2]);  					int y = int.Parse (ids [3]);  					var pr = GMapProviders.TryGetProvider (dbId);  					if (pr != null) {  						Exception ex;  						var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  						if (img != null) {  							using (img) {  								s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  								img.Data.WriteTo (s);  							}  						}  					}  				}  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: using (var s = c.GetStream ()) {  	using (StreamReader r = new StreamReader (s' Encoding.UTF8)) {  		var request = r.ReadLine ();  		if (!string.IsNullOrEmpty (request) && request.StartsWith ("GET")) {  			//Debug.WriteLine("TileHttpHost: " + request);  			// http://localhost:88/88888/5/15/11  			// GET /8888888888/5/15/11 HTTP/1.1  			var rq = request.Split (' ');  			if (rq.Length >= 2) {  				var ids = rq [1].Split (new char[] {  					'/'  				}' StringSplitOptions.RemoveEmptyEntries);  				if (ids.Length == 4) {  					int dbId = int.Parse (ids [0]);  					int zoom = int.Parse (ids [1]);  					int x = int.Parse (ids [2]);  					int y = int.Parse (ids [3]);  					var pr = GMapProviders.TryGetProvider (dbId);  					if (pr != null) {  						Exception ex;  						var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  						if (img != null) {  							using (img) {  								s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  								img.Data.WriteTo (s);  							}  						}  					}  				}  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: using (var s = c.GetStream ()) {  	using (StreamReader r = new StreamReader (s' Encoding.UTF8)) {  		var request = r.ReadLine ();  		if (!string.IsNullOrEmpty (request) && request.StartsWith ("GET")) {  			//Debug.WriteLine("TileHttpHost: " + request);  			// http://localhost:88/88888/5/15/11  			// GET /8888888888/5/15/11 HTTP/1.1  			var rq = request.Split (' ');  			if (rq.Length >= 2) {  				var ids = rq [1].Split (new char[] {  					'/'  				}' StringSplitOptions.RemoveEmptyEntries);  				if (ids.Length == 4) {  					int dbId = int.Parse (ids [0]);  					int zoom = int.Parse (ids [1]);  					int x = int.Parse (ids [2]);  					int y = int.Parse (ids [3]);  					var pr = GMapProviders.TryGetProvider (dbId);  					if (pr != null) {  						Exception ex;  						var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  						if (img != null) {  							using (img) {  								s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  								img.Data.WriteTo (s);  							}  						}  					}  				}  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: using (StreamReader r = new StreamReader (s' Encoding.UTF8)) {  	var request = r.ReadLine ();  	if (!string.IsNullOrEmpty (request) && request.StartsWith ("GET")) {  		//Debug.WriteLine("TileHttpHost: " + request);  		// http://localhost:88/88888/5/15/11  		// GET /8888888888/5/15/11 HTTP/1.1  		var rq = request.Split (' ');  		if (rq.Length >= 2) {  			var ids = rq [1].Split (new char[] {  				'/'  			}' StringSplitOptions.RemoveEmptyEntries);  			if (ids.Length == 4) {  				int dbId = int.Parse (ids [0]);  				int zoom = int.Parse (ids [1]);  				int x = int.Parse (ids [2]);  				int y = int.Parse (ids [3]);  				var pr = GMapProviders.TryGetProvider (dbId);  				if (pr != null) {  					Exception ex;  					var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  					if (img != null) {  						using (img) {  							s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  							img.Data.WriteTo (s);  						}  					}  				}  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: using (StreamReader r = new StreamReader (s' Encoding.UTF8)) {  	var request = r.ReadLine ();  	if (!string.IsNullOrEmpty (request) && request.StartsWith ("GET")) {  		//Debug.WriteLine("TileHttpHost: " + request);  		// http://localhost:88/88888/5/15/11  		// GET /8888888888/5/15/11 HTTP/1.1  		var rq = request.Split (' ');  		if (rq.Length >= 2) {  			var ids = rq [1].Split (new char[] {  				'/'  			}' StringSplitOptions.RemoveEmptyEntries);  			if (ids.Length == 4) {  				int dbId = int.Parse (ids [0]);  				int zoom = int.Parse (ids [1]);  				int x = int.Parse (ids [2]);  				int y = int.Parse (ids [3]);  				var pr = GMapProviders.TryGetProvider (dbId);  				if (pr != null) {  					Exception ex;  					var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  					if (img != null) {  						using (img) {  							s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  							img.Data.WriteTo (s);  						}  					}  				}  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: using (StreamReader r = new StreamReader (s' Encoding.UTF8)) {  	var request = r.ReadLine ();  	if (!string.IsNullOrEmpty (request) && request.StartsWith ("GET")) {  		//Debug.WriteLine("TileHttpHost: " + request);  		// http://localhost:88/88888/5/15/11  		// GET /8888888888/5/15/11 HTTP/1.1  		var rq = request.Split (' ');  		if (rq.Length >= 2) {  			var ids = rq [1].Split (new char[] {  				'/'  			}' StringSplitOptions.RemoveEmptyEntries);  			if (ids.Length == 4) {  				int dbId = int.Parse (ids [0]);  				int zoom = int.Parse (ids [1]);  				int x = int.Parse (ids [2]);  				int y = int.Parse (ids [3]);  				var pr = GMapProviders.TryGetProvider (dbId);  				if (pr != null) {  					Exception ex;  					var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  					if (img != null) {  						using (img) {  							s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  							img.Data.WriteTo (s);  						}  					}  				}  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: using (StreamReader r = new StreamReader (s' Encoding.UTF8)) {  	var request = r.ReadLine ();  	if (!string.IsNullOrEmpty (request) && request.StartsWith ("GET")) {  		//Debug.WriteLine("TileHttpHost: " + request);  		// http://localhost:88/88888/5/15/11  		// GET /8888888888/5/15/11 HTTP/1.1  		var rq = request.Split (' ');  		if (rq.Length >= 2) {  			var ids = rq [1].Split (new char[] {  				'/'  			}' StringSplitOptions.RemoveEmptyEntries);  			if (ids.Length == 4) {  				int dbId = int.Parse (ids [0]);  				int zoom = int.Parse (ids [1]);  				int x = int.Parse (ids [2]);  				int y = int.Parse (ids [3]);  				var pr = GMapProviders.TryGetProvider (dbId);  				if (pr != null) {  					Exception ex;  					var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  					if (img != null) {  						using (img) {  							s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  							img.Data.WriteTo (s);  						}  					}  				}  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: if (!string.IsNullOrEmpty (request) && request.StartsWith ("GET")) {  	//Debug.WriteLine("TileHttpHost: " + request);  	// http://localhost:88/88888/5/15/11  	// GET /8888888888/5/15/11 HTTP/1.1  	var rq = request.Split (' ');  	if (rq.Length >= 2) {  		var ids = rq [1].Split (new char[] {  			'/'  		}' StringSplitOptions.RemoveEmptyEntries);  		if (ids.Length == 4) {  			int dbId = int.Parse (ids [0]);  			int zoom = int.Parse (ids [1]);  			int x = int.Parse (ids [2]);  			int y = int.Parse (ids [3]);  			var pr = GMapProviders.TryGetProvider (dbId);  			if (pr != null) {  				Exception ex;  				var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  				if (img != null) {  					using (img) {  						s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  						img.Data.WriteTo (s);  					}  				}  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: if (!string.IsNullOrEmpty (request) && request.StartsWith ("GET")) {  	//Debug.WriteLine("TileHttpHost: " + request);  	// http://localhost:88/88888/5/15/11  	// GET /8888888888/5/15/11 HTTP/1.1  	var rq = request.Split (' ');  	if (rq.Length >= 2) {  		var ids = rq [1].Split (new char[] {  			'/'  		}' StringSplitOptions.RemoveEmptyEntries);  		if (ids.Length == 4) {  			int dbId = int.Parse (ids [0]);  			int zoom = int.Parse (ids [1]);  			int x = int.Parse (ids [2]);  			int y = int.Parse (ids [3]);  			var pr = GMapProviders.TryGetProvider (dbId);  			if (pr != null) {  				Exception ex;  				var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  				if (img != null) {  					using (img) {  						s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  						img.Data.WriteTo (s);  					}  				}  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: if (!string.IsNullOrEmpty (request) && request.StartsWith ("GET")) {  	//Debug.WriteLine("TileHttpHost: " + request);  	// http://localhost:88/88888/5/15/11  	// GET /8888888888/5/15/11 HTTP/1.1  	var rq = request.Split (' ');  	if (rq.Length >= 2) {  		var ids = rq [1].Split (new char[] {  			'/'  		}' StringSplitOptions.RemoveEmptyEntries);  		if (ids.Length == 4) {  			int dbId = int.Parse (ids [0]);  			int zoom = int.Parse (ids [1]);  			int x = int.Parse (ids [2]);  			int y = int.Parse (ids [3]);  			var pr = GMapProviders.TryGetProvider (dbId);  			if (pr != null) {  				Exception ex;  				var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  				if (img != null) {  					using (img) {  						s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  						img.Data.WriteTo (s);  					}  				}  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: if (!string.IsNullOrEmpty (request) && request.StartsWith ("GET")) {  	//Debug.WriteLine("TileHttpHost: " + request);  	// http://localhost:88/88888/5/15/11  	// GET /8888888888/5/15/11 HTTP/1.1  	var rq = request.Split (' ');  	if (rq.Length >= 2) {  		var ids = rq [1].Split (new char[] {  			'/'  		}' StringSplitOptions.RemoveEmptyEntries);  		if (ids.Length == 4) {  			int dbId = int.Parse (ids [0]);  			int zoom = int.Parse (ids [1]);  			int x = int.Parse (ids [2]);  			int y = int.Parse (ids [3]);  			var pr = GMapProviders.TryGetProvider (dbId);  			if (pr != null) {  				Exception ex;  				var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  				if (img != null) {  					using (img) {  						s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  						img.Data.WriteTo (s);  					}  				}  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: if (rq.Length >= 2) {  	var ids = rq [1].Split (new char[] {  		'/'  	}' StringSplitOptions.RemoveEmptyEntries);  	if (ids.Length == 4) {  		int dbId = int.Parse (ids [0]);  		int zoom = int.Parse (ids [1]);  		int x = int.Parse (ids [2]);  		int y = int.Parse (ids [3]);  		var pr = GMapProviders.TryGetProvider (dbId);  		if (pr != null) {  			Exception ex;  			var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  			if (img != null) {  				using (img) {  					s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  					img.Data.WriteTo (s);  				}  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: if (rq.Length >= 2) {  	var ids = rq [1].Split (new char[] {  		'/'  	}' StringSplitOptions.RemoveEmptyEntries);  	if (ids.Length == 4) {  		int dbId = int.Parse (ids [0]);  		int zoom = int.Parse (ids [1]);  		int x = int.Parse (ids [2]);  		int y = int.Parse (ids [3]);  		var pr = GMapProviders.TryGetProvider (dbId);  		if (pr != null) {  			Exception ex;  			var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  			if (img != null) {  				using (img) {  					s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  					img.Data.WriteTo (s);  				}  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: if (rq.Length >= 2) {  	var ids = rq [1].Split (new char[] {  		'/'  	}' StringSplitOptions.RemoveEmptyEntries);  	if (ids.Length == 4) {  		int dbId = int.Parse (ids [0]);  		int zoom = int.Parse (ids [1]);  		int x = int.Parse (ids [2]);  		int y = int.Parse (ids [3]);  		var pr = GMapProviders.TryGetProvider (dbId);  		if (pr != null) {  			Exception ex;  			var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  			if (img != null) {  				using (img) {  					s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  					img.Data.WriteTo (s);  				}  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: if (rq.Length >= 2) {  	var ids = rq [1].Split (new char[] {  		'/'  	}' StringSplitOptions.RemoveEmptyEntries);  	if (ids.Length == 4) {  		int dbId = int.Parse (ids [0]);  		int zoom = int.Parse (ids [1]);  		int x = int.Parse (ids [2]);  		int y = int.Parse (ids [3]);  		var pr = GMapProviders.TryGetProvider (dbId);  		if (pr != null) {  			Exception ex;  			var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  			if (img != null) {  				using (img) {  					s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  					img.Data.WriteTo (s);  				}  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: if (ids.Length == 4) {  	int dbId = int.Parse (ids [0]);  	int zoom = int.Parse (ids [1]);  	int x = int.Parse (ids [2]);  	int y = int.Parse (ids [3]);  	var pr = GMapProviders.TryGetProvider (dbId);  	if (pr != null) {  		Exception ex;  		var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  		if (img != null) {  			using (img) {  				s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  				img.Data.WriteTo (s);  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: if (ids.Length == 4) {  	int dbId = int.Parse (ids [0]);  	int zoom = int.Parse (ids [1]);  	int x = int.Parse (ids [2]);  	int y = int.Parse (ids [3]);  	var pr = GMapProviders.TryGetProvider (dbId);  	if (pr != null) {  		Exception ex;  		var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  		if (img != null) {  			using (img) {  				s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  				img.Data.WriteTo (s);  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,TileHttpHost,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileHttpHost.cs,ProcessRequest,The following statement contains a magic number: if (ids.Length == 4) {  	int dbId = int.Parse (ids [0]);  	int zoom = int.Parse (ids [1]);  	int x = int.Parse (ids [2]);  	int y = int.Parse (ids [3]);  	var pr = GMapProviders.TryGetProvider (dbId);  	if (pr != null) {  		Exception ex;  		var img = GMaps.Instance.GetImageFrom (pr' new GPoint (x' y)' zoom' out ex);  		if (img != null) {  			using (img) {  				s.Write (responseHeaderBytes' 0' responseHeaderBytes.Length);  				img.Data.WriteTo (s);  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,Cache,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Cache.cs,GetContent,The following statement contains a magic number: return GetContent (url' type' TimeSpan.FromDays (88));  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,SetZoomToFitRect,The following statement contains a magic number: if (mmaxZoom > 0) {  	PointLatLng center = new PointLatLng (rect.Lat - (rect.HeightLat / 2)' rect.Lng + (rect.WidthLng / 2));  	Position = center;  	if (mmaxZoom > maxZoom) {  		mmaxZoom = maxZoom;  	}  	if (Zoom != mmaxZoom) {  		Zoom = (int)mmaxZoom;  	}  	return true;  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,SetZoomToFitRect,The following statement contains a magic number: if (mmaxZoom > 0) {  	PointLatLng center = new PointLatLng (rect.Lat - (rect.HeightLat / 2)' rect.Lng + (rect.WidthLng / 2));  	Position = center;  	if (mmaxZoom > maxZoom) {  		mmaxZoom = maxZoom;  	}  	if (Zoom != mmaxZoom) {  		Zoom = (int)mmaxZoom;  	}  	return true;  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,OnMapSizeChanged,The following statement contains a magic number: if (IsRotated) {  	#if !PocketPC  	int diag = (int)Math.Round (Math.Sqrt (Width * Width + Height * Height) / Provider.Projection.TileSize.Width' MidpointRounding.AwayFromZero);  	#else  	            int diag = (int) Math.Round(Math.Sqrt(Width * Width + Height * Height) / Provider.Projection.TileSize.Width); #endif  	sizeOfMapArea.Width = 1 + (diag / 2);  	sizeOfMapArea.Height = 1 + (diag / 2);  } else {  	sizeOfMapArea.Width = 1 + (Width / Provider.Projection.TileSize.Width) / 2;  	sizeOfMapArea.Height = 1 + (Height / Provider.Projection.TileSize.Height) / 2;  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,OnMapSizeChanged,The following statement contains a magic number: if (IsRotated) {  	#if !PocketPC  	int diag = (int)Math.Round (Math.Sqrt (Width * Width + Height * Height) / Provider.Projection.TileSize.Width' MidpointRounding.AwayFromZero);  	#else  	            int diag = (int) Math.Round(Math.Sqrt(Width * Width + Height * Height) / Provider.Projection.TileSize.Width); #endif  	sizeOfMapArea.Width = 1 + (diag / 2);  	sizeOfMapArea.Height = 1 + (diag / 2);  } else {  	sizeOfMapArea.Width = 1 + (Width / Provider.Projection.TileSize.Width) / 2;  	sizeOfMapArea.Height = 1 + (Height / Provider.Projection.TileSize.Height) / 2;  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,OnMapSizeChanged,The following statement contains a magic number: if (IsRotated) {  	#if !PocketPC  	int diag = (int)Math.Round (Math.Sqrt (Width * Width + Height * Height) / Provider.Projection.TileSize.Width' MidpointRounding.AwayFromZero);  	#else  	            int diag = (int) Math.Round(Math.Sqrt(Width * Width + Height * Height) / Provider.Projection.TileSize.Width); #endif  	sizeOfMapArea.Width = 1 + (diag / 2);  	sizeOfMapArea.Height = 1 + (diag / 2);  } else {  	sizeOfMapArea.Width = 1 + (Width / Provider.Projection.TileSize.Width) / 2;  	sizeOfMapArea.Height = 1 + (Height / Provider.Projection.TileSize.Height) / 2;  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,OnMapSizeChanged,The following statement contains a magic number: if (IsRotated) {  	#if !PocketPC  	int diag = (int)Math.Round (Math.Sqrt (Width * Width + Height * Height) / Provider.Projection.TileSize.Width' MidpointRounding.AwayFromZero);  	#else  	            int diag = (int) Math.Round(Math.Sqrt(Width * Width + Height * Height) / Provider.Projection.TileSize.Width); #endif  	sizeOfMapArea.Width = 1 + (diag / 2);  	sizeOfMapArea.Height = 1 + (diag / 2);  } else {  	sizeOfMapArea.Width = 1 + (Width / Provider.Projection.TileSize.Width) / 2;  	sizeOfMapArea.Height = 1 + (Height / Provider.Projection.TileSize.Height) / 2;  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,OnMapSizeChanged,The following statement contains a magic number: sizeOfMapArea.Width = 1 + (diag / 2);  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,OnMapSizeChanged,The following statement contains a magic number: sizeOfMapArea.Height = 1 + (diag / 2);  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,OnMapSizeChanged,The following statement contains a magic number: sizeOfMapArea.Width = 1 + (Width / Provider.Projection.TileSize.Width) / 2;  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,OnMapSizeChanged,The following statement contains a magic number: sizeOfMapArea.Height = 1 + (Height / Provider.Projection.TileSize.Height) / 2;  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,GetMaxZoomToFitRect,The following statement contains a magic number: if (rect.HeightLat == 0 || rect.WidthLng == 0) {  	zoom = maxZoom / 2;  } else {  	for (int i = (int)zoom; i <= maxZoom; i++) {  		GPoint p1 = Provider.Projection.FromLatLngToPixel (rect.LocationTopLeft' i);  		GPoint p2 = Provider.Projection.FromLatLngToPixel (rect.LocationRightBottom' i);  		if (((p2.X - p1.X) <= Width + 10) && (p2.Y - p1.Y) <= Height + 10) {  			zoom = i;  		} else {  			break;  		}  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,GetMaxZoomToFitRect,The following statement contains a magic number: if (rect.HeightLat == 0 || rect.WidthLng == 0) {  	zoom = maxZoom / 2;  } else {  	for (int i = (int)zoom; i <= maxZoom; i++) {  		GPoint p1 = Provider.Projection.FromLatLngToPixel (rect.LocationTopLeft' i);  		GPoint p2 = Provider.Projection.FromLatLngToPixel (rect.LocationRightBottom' i);  		if (((p2.X - p1.X) <= Width + 10) && (p2.Y - p1.Y) <= Height + 10) {  			zoom = i;  		} else {  			break;  		}  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,GetMaxZoomToFitRect,The following statement contains a magic number: if (rect.HeightLat == 0 || rect.WidthLng == 0) {  	zoom = maxZoom / 2;  } else {  	for (int i = (int)zoom; i <= maxZoom; i++) {  		GPoint p1 = Provider.Projection.FromLatLngToPixel (rect.LocationTopLeft' i);  		GPoint p2 = Provider.Projection.FromLatLngToPixel (rect.LocationRightBottom' i);  		if (((p2.X - p1.X) <= Width + 10) && (p2.Y - p1.Y) <= Height + 10) {  			zoom = i;  		} else {  			break;  		}  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,GetMaxZoomToFitRect,The following statement contains a magic number: zoom = maxZoom / 2;  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,GetMaxZoomToFitRect,The following statement contains a magic number: for (int i = (int)zoom; i <= maxZoom; i++) {  	GPoint p1 = Provider.Projection.FromLatLngToPixel (rect.LocationTopLeft' i);  	GPoint p2 = Provider.Projection.FromLatLngToPixel (rect.LocationRightBottom' i);  	if (((p2.X - p1.X) <= Width + 10) && (p2.Y - p1.Y) <= Height + 10) {  		zoom = i;  	} else {  		break;  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,GetMaxZoomToFitRect,The following statement contains a magic number: for (int i = (int)zoom; i <= maxZoom; i++) {  	GPoint p1 = Provider.Projection.FromLatLngToPixel (rect.LocationTopLeft' i);  	GPoint p2 = Provider.Projection.FromLatLngToPixel (rect.LocationRightBottom' i);  	if (((p2.X - p1.X) <= Width + 10) && (p2.Y - p1.Y) <= Height + 10) {  		zoom = i;  	} else {  		break;  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,GetMaxZoomToFitRect,The following statement contains a magic number: if (((p2.X - p1.X) <= Width + 10) && (p2.Y - p1.Y) <= Height + 10) {  	zoom = i;  } else {  	break;  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,GetMaxZoomToFitRect,The following statement contains a magic number: if (((p2.X - p1.X) <= Width + 10) && (p2.Y - p1.Y) <= Height + 10) {  	zoom = i;  } else {  	break;  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,GoToCurrentPositionOnZoom,The following statement contains a magic number: if (MouseWheelZooming) {  	if (MouseWheelZoomType != MouseWheelZoomType.MousePositionWithoutCenter) {  		GPoint pt = new GPoint (-(positionPixel.X - Width / 2)' -(positionPixel.Y - Height / 2));  		pt.Offset (compensationOffset);  		renderOffset.X = pt.X - dragPoint.X;  		renderOffset.Y = pt.Y - dragPoint.Y;  	} else// without centering  	 {  		renderOffset.X = -positionPixel.X - dragPoint.X;  		renderOffset.Y = -positionPixel.Y - dragPoint.Y;  		renderOffset.Offset (mouseLastZoom);  		renderOffset.Offset (compensationOffset);  	}  } else// use current map center   {  	mouseLastZoom = GPoint.Empty;  	GPoint pt = new GPoint (-(positionPixel.X - Width / 2)' -(positionPixel.Y - Height / 2));  	pt.Offset (compensationOffset);  	renderOffset.X = pt.X - dragPoint.X;  	renderOffset.Y = pt.Y - dragPoint.Y;  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,GoToCurrentPositionOnZoom,The following statement contains a magic number: if (MouseWheelZooming) {  	if (MouseWheelZoomType != MouseWheelZoomType.MousePositionWithoutCenter) {  		GPoint pt = new GPoint (-(positionPixel.X - Width / 2)' -(positionPixel.Y - Height / 2));  		pt.Offset (compensationOffset);  		renderOffset.X = pt.X - dragPoint.X;  		renderOffset.Y = pt.Y - dragPoint.Y;  	} else// without centering  	 {  		renderOffset.X = -positionPixel.X - dragPoint.X;  		renderOffset.Y = -positionPixel.Y - dragPoint.Y;  		renderOffset.Offset (mouseLastZoom);  		renderOffset.Offset (compensationOffset);  	}  } else// use current map center   {  	mouseLastZoom = GPoint.Empty;  	GPoint pt = new GPoint (-(positionPixel.X - Width / 2)' -(positionPixel.Y - Height / 2));  	pt.Offset (compensationOffset);  	renderOffset.X = pt.X - dragPoint.X;  	renderOffset.Y = pt.Y - dragPoint.Y;  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,GoToCurrentPositionOnZoom,The following statement contains a magic number: if (MouseWheelZooming) {  	if (MouseWheelZoomType != MouseWheelZoomType.MousePositionWithoutCenter) {  		GPoint pt = new GPoint (-(positionPixel.X - Width / 2)' -(positionPixel.Y - Height / 2));  		pt.Offset (compensationOffset);  		renderOffset.X = pt.X - dragPoint.X;  		renderOffset.Y = pt.Y - dragPoint.Y;  	} else// without centering  	 {  		renderOffset.X = -positionPixel.X - dragPoint.X;  		renderOffset.Y = -positionPixel.Y - dragPoint.Y;  		renderOffset.Offset (mouseLastZoom);  		renderOffset.Offset (compensationOffset);  	}  } else// use current map center   {  	mouseLastZoom = GPoint.Empty;  	GPoint pt = new GPoint (-(positionPixel.X - Width / 2)' -(positionPixel.Y - Height / 2));  	pt.Offset (compensationOffset);  	renderOffset.X = pt.X - dragPoint.X;  	renderOffset.Y = pt.Y - dragPoint.Y;  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,GoToCurrentPositionOnZoom,The following statement contains a magic number: if (MouseWheelZooming) {  	if (MouseWheelZoomType != MouseWheelZoomType.MousePositionWithoutCenter) {  		GPoint pt = new GPoint (-(positionPixel.X - Width / 2)' -(positionPixel.Y - Height / 2));  		pt.Offset (compensationOffset);  		renderOffset.X = pt.X - dragPoint.X;  		renderOffset.Y = pt.Y - dragPoint.Y;  	} else// without centering  	 {  		renderOffset.X = -positionPixel.X - dragPoint.X;  		renderOffset.Y = -positionPixel.Y - dragPoint.Y;  		renderOffset.Offset (mouseLastZoom);  		renderOffset.Offset (compensationOffset);  	}  } else// use current map center   {  	mouseLastZoom = GPoint.Empty;  	GPoint pt = new GPoint (-(positionPixel.X - Width / 2)' -(positionPixel.Y - Height / 2));  	pt.Offset (compensationOffset);  	renderOffset.X = pt.X - dragPoint.X;  	renderOffset.Y = pt.Y - dragPoint.Y;  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,GoToCurrentPositionOnZoom,The following statement contains a magic number: if (MouseWheelZoomType != MouseWheelZoomType.MousePositionWithoutCenter) {  	GPoint pt = new GPoint (-(positionPixel.X - Width / 2)' -(positionPixel.Y - Height / 2));  	pt.Offset (compensationOffset);  	renderOffset.X = pt.X - dragPoint.X;  	renderOffset.Y = pt.Y - dragPoint.Y;  } else// without centering   {  	renderOffset.X = -positionPixel.X - dragPoint.X;  	renderOffset.Y = -positionPixel.Y - dragPoint.Y;  	renderOffset.Offset (mouseLastZoom);  	renderOffset.Offset (compensationOffset);  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,GoToCurrentPositionOnZoom,The following statement contains a magic number: if (MouseWheelZoomType != MouseWheelZoomType.MousePositionWithoutCenter) {  	GPoint pt = new GPoint (-(positionPixel.X - Width / 2)' -(positionPixel.Y - Height / 2));  	pt.Offset (compensationOffset);  	renderOffset.X = pt.X - dragPoint.X;  	renderOffset.Y = pt.Y - dragPoint.Y;  } else// without centering   {  	renderOffset.X = -positionPixel.X - dragPoint.X;  	renderOffset.Y = -positionPixel.Y - dragPoint.Y;  	renderOffset.Offset (mouseLastZoom);  	renderOffset.Offset (compensationOffset);  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,DragOffset,The following statement contains a magic number: Position = FromLocalToLatLng ((int)Width / 2' (int)Height / 2);  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,DragOffset,The following statement contains a magic number: Position = FromLocalToLatLng ((int)Width / 2' (int)Height / 2);  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,Drag,The following statement contains a magic number: if (IsDragging) {  	LastLocationInBounds = Position;  	Position = FromLocalToLatLng ((int)Width / 2' (int)Height / 2);  	if (OnMapDrag != null) {  		OnMapDrag ();  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,Drag,The following statement contains a magic number: if (IsDragging) {  	LastLocationInBounds = Position;  	Position = FromLocalToLatLng ((int)Width / 2' (int)Height / 2);  	if (OnMapDrag != null) {  		OnMapDrag ();  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,Drag,The following statement contains a magic number: Position = FromLocalToLatLng ((int)Width / 2' (int)Height / 2);  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,Drag,The following statement contains a magic number: Position = FromLocalToLatLng ((int)Width / 2' (int)Height / 2);  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: while (!stop && IsStarted) {  	task = null;  	Monitor.Enter (tileLoadQueue);  	try {  		while (tileLoadQueue.Count == 0) {  			Debug.WriteLine (ctid + " - Wait " + loadWaitCount + " - " + DateTime.Now.TimeOfDay);  			if (++loadWaitCount >= GThreadPoolSize) {  				loadWaitCount = 0;  				#region -- last thread takes action --  				{  					LastTileLoadEnd = DateTime.Now;  					lastTileLoadTimeMs = (long)(LastTileLoadEnd - LastTileLoadStart).TotalMilliseconds;  				#region -- clear stuff--  				#endregion  				#if UseGC  				                     GC.Collect();                      GC.WaitForPendingFinalizers();                      GC.Collect(); #endif  				#endregion  				}  				if (IsStarted) {  					GMaps.Instance.MemoryCache.RemoveOverload ();  					tileDrawingListLock.AcquireReaderLock ();  					try {  						Matrix.ClearLevelAndPointsNotIn (Zoom' tileDrawingList);  					} finally {  						tileDrawingListLock.ReleaseReaderLock ();  					}  				}  				UpdateGroundResolution ();  				Debug.WriteLine (ctid + " - OnTileLoadComplete: " + lastTileLoadTimeMs + "ms' MemoryCacheSize: " + GMaps.Instance.MemoryCache.Size + "MB");  				if (OnTileLoadComplete != null) {  					OnTileLoadComplete (lastTileLoadTimeMs);  				}  			}  			if (!IsStarted || false == Monitor.Wait (tileLoadQueue' WaitForTileLoadThreadTimeout' false) || !IsStarted) {  				stop = true;  				break;  			}  		}  		if (IsStarted && !stop || tileLoadQueue.Count > 0) {  			task = tileLoadQueue.Pop ();  		}  	} finally {  		Monitor.Exit (tileLoadQueue);  	}  	if (task.HasValue && IsStarted) {  		try {  			#region -- execute --  			var m = Matrix.GetTileWithReadLock (task.Value.Zoom' task.Value.Pos);  			if (!m.NotEmpty) {  				Debug.WriteLine (ctid + " - try load: " + task);  				Tile t = new Tile (task.Value.Zoom' task.Value.Pos);  				foreach (var tl in provider.Overlays) {  					int retry = 0;  					do {  						PureImage img = null;  						Exception ex = null;  						if (task.Value.Zoom >= provider.MinZoom && (!provider.MaxZoom.HasValue || task.Value.Zoom <= provider.MaxZoom)) {  							if (skipOverZoom == 0 || task.Value.Zoom <= skipOverZoom) {  								// tile number inversion(BottomLeft -> TopLeft)  								if (tl.InvertedAxisY) {  									img = GMaps.Instance.GetImageFrom (tl' new GPoint (task.Value.Pos.X' maxOfTiles.Height - task.Value.Pos.Y)' task.Value.Zoom' out ex);  								} else// ok  								 {  									img = GMaps.Instance.GetImageFrom (tl' task.Value.Pos' task.Value.Zoom' out ex);  								}  							}  						}  						if (img != null && ex == null) {  							if (okZoom < task.Value.Zoom) {  								okZoom = task.Value.Zoom;  								skipOverZoom = 0;  								Debug.WriteLine ("skipOverZoom disabled' okZoom: " + okZoom);  							}  						} else if (ex != null) {  							if ((skipOverZoom != okZoom) && (task.Value.Zoom > okZoom)) {  								if (ex.Message.Contains ("(404) Not Found")) {  									skipOverZoom = okZoom;  									Debug.WriteLine ("skipOverZoom enabled: " + skipOverZoom);  								}  							}  						}  						// check for parent tiles if not found  						if (img == null && okZoom > 0 && fillEmptyTiles && Provider.Projection is MercatorProjection) {  							int zoomOffset = task.Value.Zoom > okZoom ? task.Value.Zoom - okZoom : 1;  							long Ix = 0;  							GPoint parentTile = GPoint.Empty;  							while (img == null && zoomOffset < task.Value.Zoom) {  								Ix = (long)Math.Pow (2' zoomOffset);  								parentTile = new GMap.NET.GPoint ((task.Value.Pos.X / Ix)' (task.Value.Pos.Y / Ix));  								img = GMaps.Instance.GetImageFrom (tl' parentTile' task.Value.Zoom - zoomOffset++' out ex);  							}  							if (img != null) {  								// offsets in quadrant  								long Xoff = Math.Abs (task.Value.Pos.X - (parentTile.X * Ix));  								long Yoff = Math.Abs (task.Value.Pos.Y - (parentTile.Y * Ix));  								img.IsParent = true;  								img.Ix = Ix;  								img.Xoff = Xoff;  								img.Yoff = Yoff;  								// wpf  								//var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6));  								//var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6);  								// gdi+  								//System.Drawing.Rectangle dst = new System.Drawing.Rectangle((int)Core.tileRect.X' (int)Core.tileRect.Y' (int)Core.tileRect.Width' (int)Core.tileRect.Height);  								//System.Drawing.RectangleF srcRect = new System.Drawing.RectangleF((float)(Xoff * (img.Img.Width / Ix))' (float)(Yoff * (img.Img.Height / Ix))' (img.Img.Width / Ix)' (img.Img.Height / Ix));  							}  						}  						if (img != null) {  							Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  							{  								t.AddOverlay (img);  							}  							break;  						} else {  							if (ex != null) {  								lock (FailedLoads) {  									if (!FailedLoads.ContainsKey (task.Value)) {  										FailedLoads.Add (task.Value' ex);  										if (OnEmptyTileError != null) {  											if (!RaiseEmptyTileError) {  												RaiseEmptyTileError = true;  												OnEmptyTileError (task.Value.Zoom' task.Value.Pos);  											}  										}  									}  								}  							}  							if (RetryLoadTile > 0) {  								Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  								{  									Thread.Sleep (1111);  								}  							}  						}  					} while (++retry < RetryLoadTile);  				}  				if (t.HasAnyOverlays && IsStarted) {  					Matrix.SetTile (t);  				} else {  					t.Dispose ();  				}  			}  			#endregion  		} catch (Exception ex) {  			Debug.WriteLine (ctid + " - ProcessLoadTask: " + ex.ToString ());  		} finally {  			if (Refresh != null) {  				Refresh.Set ();  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: while (!stop && IsStarted) {  	task = null;  	Monitor.Enter (tileLoadQueue);  	try {  		while (tileLoadQueue.Count == 0) {  			Debug.WriteLine (ctid + " - Wait " + loadWaitCount + " - " + DateTime.Now.TimeOfDay);  			if (++loadWaitCount >= GThreadPoolSize) {  				loadWaitCount = 0;  				#region -- last thread takes action --  				{  					LastTileLoadEnd = DateTime.Now;  					lastTileLoadTimeMs = (long)(LastTileLoadEnd - LastTileLoadStart).TotalMilliseconds;  				#region -- clear stuff--  				#endregion  				#if UseGC  				                     GC.Collect();                      GC.WaitForPendingFinalizers();                      GC.Collect(); #endif  				#endregion  				}  				if (IsStarted) {  					GMaps.Instance.MemoryCache.RemoveOverload ();  					tileDrawingListLock.AcquireReaderLock ();  					try {  						Matrix.ClearLevelAndPointsNotIn (Zoom' tileDrawingList);  					} finally {  						tileDrawingListLock.ReleaseReaderLock ();  					}  				}  				UpdateGroundResolution ();  				Debug.WriteLine (ctid + " - OnTileLoadComplete: " + lastTileLoadTimeMs + "ms' MemoryCacheSize: " + GMaps.Instance.MemoryCache.Size + "MB");  				if (OnTileLoadComplete != null) {  					OnTileLoadComplete (lastTileLoadTimeMs);  				}  			}  			if (!IsStarted || false == Monitor.Wait (tileLoadQueue' WaitForTileLoadThreadTimeout' false) || !IsStarted) {  				stop = true;  				break;  			}  		}  		if (IsStarted && !stop || tileLoadQueue.Count > 0) {  			task = tileLoadQueue.Pop ();  		}  	} finally {  		Monitor.Exit (tileLoadQueue);  	}  	if (task.HasValue && IsStarted) {  		try {  			#region -- execute --  			var m = Matrix.GetTileWithReadLock (task.Value.Zoom' task.Value.Pos);  			if (!m.NotEmpty) {  				Debug.WriteLine (ctid + " - try load: " + task);  				Tile t = new Tile (task.Value.Zoom' task.Value.Pos);  				foreach (var tl in provider.Overlays) {  					int retry = 0;  					do {  						PureImage img = null;  						Exception ex = null;  						if (task.Value.Zoom >= provider.MinZoom && (!provider.MaxZoom.HasValue || task.Value.Zoom <= provider.MaxZoom)) {  							if (skipOverZoom == 0 || task.Value.Zoom <= skipOverZoom) {  								// tile number inversion(BottomLeft -> TopLeft)  								if (tl.InvertedAxisY) {  									img = GMaps.Instance.GetImageFrom (tl' new GPoint (task.Value.Pos.X' maxOfTiles.Height - task.Value.Pos.Y)' task.Value.Zoom' out ex);  								} else// ok  								 {  									img = GMaps.Instance.GetImageFrom (tl' task.Value.Pos' task.Value.Zoom' out ex);  								}  							}  						}  						if (img != null && ex == null) {  							if (okZoom < task.Value.Zoom) {  								okZoom = task.Value.Zoom;  								skipOverZoom = 0;  								Debug.WriteLine ("skipOverZoom disabled' okZoom: " + okZoom);  							}  						} else if (ex != null) {  							if ((skipOverZoom != okZoom) && (task.Value.Zoom > okZoom)) {  								if (ex.Message.Contains ("(404) Not Found")) {  									skipOverZoom = okZoom;  									Debug.WriteLine ("skipOverZoom enabled: " + skipOverZoom);  								}  							}  						}  						// check for parent tiles if not found  						if (img == null && okZoom > 0 && fillEmptyTiles && Provider.Projection is MercatorProjection) {  							int zoomOffset = task.Value.Zoom > okZoom ? task.Value.Zoom - okZoom : 1;  							long Ix = 0;  							GPoint parentTile = GPoint.Empty;  							while (img == null && zoomOffset < task.Value.Zoom) {  								Ix = (long)Math.Pow (2' zoomOffset);  								parentTile = new GMap.NET.GPoint ((task.Value.Pos.X / Ix)' (task.Value.Pos.Y / Ix));  								img = GMaps.Instance.GetImageFrom (tl' parentTile' task.Value.Zoom - zoomOffset++' out ex);  							}  							if (img != null) {  								// offsets in quadrant  								long Xoff = Math.Abs (task.Value.Pos.X - (parentTile.X * Ix));  								long Yoff = Math.Abs (task.Value.Pos.Y - (parentTile.Y * Ix));  								img.IsParent = true;  								img.Ix = Ix;  								img.Xoff = Xoff;  								img.Yoff = Yoff;  								// wpf  								//var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6));  								//var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6);  								// gdi+  								//System.Drawing.Rectangle dst = new System.Drawing.Rectangle((int)Core.tileRect.X' (int)Core.tileRect.Y' (int)Core.tileRect.Width' (int)Core.tileRect.Height);  								//System.Drawing.RectangleF srcRect = new System.Drawing.RectangleF((float)(Xoff * (img.Img.Width / Ix))' (float)(Yoff * (img.Img.Height / Ix))' (img.Img.Width / Ix)' (img.Img.Height / Ix));  							}  						}  						if (img != null) {  							Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  							{  								t.AddOverlay (img);  							}  							break;  						} else {  							if (ex != null) {  								lock (FailedLoads) {  									if (!FailedLoads.ContainsKey (task.Value)) {  										FailedLoads.Add (task.Value' ex);  										if (OnEmptyTileError != null) {  											if (!RaiseEmptyTileError) {  												RaiseEmptyTileError = true;  												OnEmptyTileError (task.Value.Zoom' task.Value.Pos);  											}  										}  									}  								}  							}  							if (RetryLoadTile > 0) {  								Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  								{  									Thread.Sleep (1111);  								}  							}  						}  					} while (++retry < RetryLoadTile);  				}  				if (t.HasAnyOverlays && IsStarted) {  					Matrix.SetTile (t);  				} else {  					t.Dispose ();  				}  			}  			#endregion  		} catch (Exception ex) {  			Debug.WriteLine (ctid + " - ProcessLoadTask: " + ex.ToString ());  		} finally {  			if (Refresh != null) {  				Refresh.Set ();  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: while (!stop && IsStarted) {  	task = null;  	Monitor.Enter (tileLoadQueue);  	try {  		while (tileLoadQueue.Count == 0) {  			Debug.WriteLine (ctid + " - Wait " + loadWaitCount + " - " + DateTime.Now.TimeOfDay);  			if (++loadWaitCount >= GThreadPoolSize) {  				loadWaitCount = 0;  				#region -- last thread takes action --  				{  					LastTileLoadEnd = DateTime.Now;  					lastTileLoadTimeMs = (long)(LastTileLoadEnd - LastTileLoadStart).TotalMilliseconds;  				#region -- clear stuff--  				#endregion  				#if UseGC  				                     GC.Collect();                      GC.WaitForPendingFinalizers();                      GC.Collect(); #endif  				#endregion  				}  				if (IsStarted) {  					GMaps.Instance.MemoryCache.RemoveOverload ();  					tileDrawingListLock.AcquireReaderLock ();  					try {  						Matrix.ClearLevelAndPointsNotIn (Zoom' tileDrawingList);  					} finally {  						tileDrawingListLock.ReleaseReaderLock ();  					}  				}  				UpdateGroundResolution ();  				Debug.WriteLine (ctid + " - OnTileLoadComplete: " + lastTileLoadTimeMs + "ms' MemoryCacheSize: " + GMaps.Instance.MemoryCache.Size + "MB");  				if (OnTileLoadComplete != null) {  					OnTileLoadComplete (lastTileLoadTimeMs);  				}  			}  			if (!IsStarted || false == Monitor.Wait (tileLoadQueue' WaitForTileLoadThreadTimeout' false) || !IsStarted) {  				stop = true;  				break;  			}  		}  		if (IsStarted && !stop || tileLoadQueue.Count > 0) {  			task = tileLoadQueue.Pop ();  		}  	} finally {  		Monitor.Exit (tileLoadQueue);  	}  	if (task.HasValue && IsStarted) {  		try {  			#region -- execute --  			var m = Matrix.GetTileWithReadLock (task.Value.Zoom' task.Value.Pos);  			if (!m.NotEmpty) {  				Debug.WriteLine (ctid + " - try load: " + task);  				Tile t = new Tile (task.Value.Zoom' task.Value.Pos);  				foreach (var tl in provider.Overlays) {  					int retry = 0;  					do {  						PureImage img = null;  						Exception ex = null;  						if (task.Value.Zoom >= provider.MinZoom && (!provider.MaxZoom.HasValue || task.Value.Zoom <= provider.MaxZoom)) {  							if (skipOverZoom == 0 || task.Value.Zoom <= skipOverZoom) {  								// tile number inversion(BottomLeft -> TopLeft)  								if (tl.InvertedAxisY) {  									img = GMaps.Instance.GetImageFrom (tl' new GPoint (task.Value.Pos.X' maxOfTiles.Height - task.Value.Pos.Y)' task.Value.Zoom' out ex);  								} else// ok  								 {  									img = GMaps.Instance.GetImageFrom (tl' task.Value.Pos' task.Value.Zoom' out ex);  								}  							}  						}  						if (img != null && ex == null) {  							if (okZoom < task.Value.Zoom) {  								okZoom = task.Value.Zoom;  								skipOverZoom = 0;  								Debug.WriteLine ("skipOverZoom disabled' okZoom: " + okZoom);  							}  						} else if (ex != null) {  							if ((skipOverZoom != okZoom) && (task.Value.Zoom > okZoom)) {  								if (ex.Message.Contains ("(404) Not Found")) {  									skipOverZoom = okZoom;  									Debug.WriteLine ("skipOverZoom enabled: " + skipOverZoom);  								}  							}  						}  						// check for parent tiles if not found  						if (img == null && okZoom > 0 && fillEmptyTiles && Provider.Projection is MercatorProjection) {  							int zoomOffset = task.Value.Zoom > okZoom ? task.Value.Zoom - okZoom : 1;  							long Ix = 0;  							GPoint parentTile = GPoint.Empty;  							while (img == null && zoomOffset < task.Value.Zoom) {  								Ix = (long)Math.Pow (2' zoomOffset);  								parentTile = new GMap.NET.GPoint ((task.Value.Pos.X / Ix)' (task.Value.Pos.Y / Ix));  								img = GMaps.Instance.GetImageFrom (tl' parentTile' task.Value.Zoom - zoomOffset++' out ex);  							}  							if (img != null) {  								// offsets in quadrant  								long Xoff = Math.Abs (task.Value.Pos.X - (parentTile.X * Ix));  								long Yoff = Math.Abs (task.Value.Pos.Y - (parentTile.Y * Ix));  								img.IsParent = true;  								img.Ix = Ix;  								img.Xoff = Xoff;  								img.Yoff = Yoff;  								// wpf  								//var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6));  								//var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6);  								// gdi+  								//System.Drawing.Rectangle dst = new System.Drawing.Rectangle((int)Core.tileRect.X' (int)Core.tileRect.Y' (int)Core.tileRect.Width' (int)Core.tileRect.Height);  								//System.Drawing.RectangleF srcRect = new System.Drawing.RectangleF((float)(Xoff * (img.Img.Width / Ix))' (float)(Yoff * (img.Img.Height / Ix))' (img.Img.Width / Ix)' (img.Img.Height / Ix));  							}  						}  						if (img != null) {  							Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  							{  								t.AddOverlay (img);  							}  							break;  						} else {  							if (ex != null) {  								lock (FailedLoads) {  									if (!FailedLoads.ContainsKey (task.Value)) {  										FailedLoads.Add (task.Value' ex);  										if (OnEmptyTileError != null) {  											if (!RaiseEmptyTileError) {  												RaiseEmptyTileError = true;  												OnEmptyTileError (task.Value.Zoom' task.Value.Pos);  											}  										}  									}  								}  							}  							if (RetryLoadTile > 0) {  								Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  								{  									Thread.Sleep (1111);  								}  							}  						}  					} while (++retry < RetryLoadTile);  				}  				if (t.HasAnyOverlays && IsStarted) {  					Matrix.SetTile (t);  				} else {  					t.Dispose ();  				}  			}  			#endregion  		} catch (Exception ex) {  			Debug.WriteLine (ctid + " - ProcessLoadTask: " + ex.ToString ());  		} finally {  			if (Refresh != null) {  				Refresh.Set ();  			}  		}  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: if (task.HasValue && IsStarted) {  	try {  		#region -- execute --  		var m = Matrix.GetTileWithReadLock (task.Value.Zoom' task.Value.Pos);  		if (!m.NotEmpty) {  			Debug.WriteLine (ctid + " - try load: " + task);  			Tile t = new Tile (task.Value.Zoom' task.Value.Pos);  			foreach (var tl in provider.Overlays) {  				int retry = 0;  				do {  					PureImage img = null;  					Exception ex = null;  					if (task.Value.Zoom >= provider.MinZoom && (!provider.MaxZoom.HasValue || task.Value.Zoom <= provider.MaxZoom)) {  						if (skipOverZoom == 0 || task.Value.Zoom <= skipOverZoom) {  							// tile number inversion(BottomLeft -> TopLeft)  							if (tl.InvertedAxisY) {  								img = GMaps.Instance.GetImageFrom (tl' new GPoint (task.Value.Pos.X' maxOfTiles.Height - task.Value.Pos.Y)' task.Value.Zoom' out ex);  							} else// ok  							 {  								img = GMaps.Instance.GetImageFrom (tl' task.Value.Pos' task.Value.Zoom' out ex);  							}  						}  					}  					if (img != null && ex == null) {  						if (okZoom < task.Value.Zoom) {  							okZoom = task.Value.Zoom;  							skipOverZoom = 0;  							Debug.WriteLine ("skipOverZoom disabled' okZoom: " + okZoom);  						}  					} else if (ex != null) {  						if ((skipOverZoom != okZoom) && (task.Value.Zoom > okZoom)) {  							if (ex.Message.Contains ("(404) Not Found")) {  								skipOverZoom = okZoom;  								Debug.WriteLine ("skipOverZoom enabled: " + skipOverZoom);  							}  						}  					}  					// check for parent tiles if not found  					if (img == null && okZoom > 0 && fillEmptyTiles && Provider.Projection is MercatorProjection) {  						int zoomOffset = task.Value.Zoom > okZoom ? task.Value.Zoom - okZoom : 1;  						long Ix = 0;  						GPoint parentTile = GPoint.Empty;  						while (img == null && zoomOffset < task.Value.Zoom) {  							Ix = (long)Math.Pow (2' zoomOffset);  							parentTile = new GMap.NET.GPoint ((task.Value.Pos.X / Ix)' (task.Value.Pos.Y / Ix));  							img = GMaps.Instance.GetImageFrom (tl' parentTile' task.Value.Zoom - zoomOffset++' out ex);  						}  						if (img != null) {  							// offsets in quadrant  							long Xoff = Math.Abs (task.Value.Pos.X - (parentTile.X * Ix));  							long Yoff = Math.Abs (task.Value.Pos.Y - (parentTile.Y * Ix));  							img.IsParent = true;  							img.Ix = Ix;  							img.Xoff = Xoff;  							img.Yoff = Yoff;  							// wpf  							//var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6));  							//var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6);  							// gdi+  							//System.Drawing.Rectangle dst = new System.Drawing.Rectangle((int)Core.tileRect.X' (int)Core.tileRect.Y' (int)Core.tileRect.Width' (int)Core.tileRect.Height);  							//System.Drawing.RectangleF srcRect = new System.Drawing.RectangleF((float)(Xoff * (img.Img.Width / Ix))' (float)(Yoff * (img.Img.Height / Ix))' (img.Img.Width / Ix)' (img.Img.Height / Ix));  						}  					}  					if (img != null) {  						Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  						{  							t.AddOverlay (img);  						}  						break;  					} else {  						if (ex != null) {  							lock (FailedLoads) {  								if (!FailedLoads.ContainsKey (task.Value)) {  									FailedLoads.Add (task.Value' ex);  									if (OnEmptyTileError != null) {  										if (!RaiseEmptyTileError) {  											RaiseEmptyTileError = true;  											OnEmptyTileError (task.Value.Zoom' task.Value.Pos);  										}  									}  								}  							}  						}  						if (RetryLoadTile > 0) {  							Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  							{  								Thread.Sleep (1111);  							}  						}  					}  				} while (++retry < RetryLoadTile);  			}  			if (t.HasAnyOverlays && IsStarted) {  				Matrix.SetTile (t);  			} else {  				t.Dispose ();  			}  		}  		#endregion  	} catch (Exception ex) {  		Debug.WriteLine (ctid + " - ProcessLoadTask: " + ex.ToString ());  	} finally {  		if (Refresh != null) {  			Refresh.Set ();  		}  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: if (task.HasValue && IsStarted) {  	try {  		#region -- execute --  		var m = Matrix.GetTileWithReadLock (task.Value.Zoom' task.Value.Pos);  		if (!m.NotEmpty) {  			Debug.WriteLine (ctid + " - try load: " + task);  			Tile t = new Tile (task.Value.Zoom' task.Value.Pos);  			foreach (var tl in provider.Overlays) {  				int retry = 0;  				do {  					PureImage img = null;  					Exception ex = null;  					if (task.Value.Zoom >= provider.MinZoom && (!provider.MaxZoom.HasValue || task.Value.Zoom <= provider.MaxZoom)) {  						if (skipOverZoom == 0 || task.Value.Zoom <= skipOverZoom) {  							// tile number inversion(BottomLeft -> TopLeft)  							if (tl.InvertedAxisY) {  								img = GMaps.Instance.GetImageFrom (tl' new GPoint (task.Value.Pos.X' maxOfTiles.Height - task.Value.Pos.Y)' task.Value.Zoom' out ex);  							} else// ok  							 {  								img = GMaps.Instance.GetImageFrom (tl' task.Value.Pos' task.Value.Zoom' out ex);  							}  						}  					}  					if (img != null && ex == null) {  						if (okZoom < task.Value.Zoom) {  							okZoom = task.Value.Zoom;  							skipOverZoom = 0;  							Debug.WriteLine ("skipOverZoom disabled' okZoom: " + okZoom);  						}  					} else if (ex != null) {  						if ((skipOverZoom != okZoom) && (task.Value.Zoom > okZoom)) {  							if (ex.Message.Contains ("(404) Not Found")) {  								skipOverZoom = okZoom;  								Debug.WriteLine ("skipOverZoom enabled: " + skipOverZoom);  							}  						}  					}  					// check for parent tiles if not found  					if (img == null && okZoom > 0 && fillEmptyTiles && Provider.Projection is MercatorProjection) {  						int zoomOffset = task.Value.Zoom > okZoom ? task.Value.Zoom - okZoom : 1;  						long Ix = 0;  						GPoint parentTile = GPoint.Empty;  						while (img == null && zoomOffset < task.Value.Zoom) {  							Ix = (long)Math.Pow (2' zoomOffset);  							parentTile = new GMap.NET.GPoint ((task.Value.Pos.X / Ix)' (task.Value.Pos.Y / Ix));  							img = GMaps.Instance.GetImageFrom (tl' parentTile' task.Value.Zoom - zoomOffset++' out ex);  						}  						if (img != null) {  							// offsets in quadrant  							long Xoff = Math.Abs (task.Value.Pos.X - (parentTile.X * Ix));  							long Yoff = Math.Abs (task.Value.Pos.Y - (parentTile.Y * Ix));  							img.IsParent = true;  							img.Ix = Ix;  							img.Xoff = Xoff;  							img.Yoff = Yoff;  							// wpf  							//var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6));  							//var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6);  							// gdi+  							//System.Drawing.Rectangle dst = new System.Drawing.Rectangle((int)Core.tileRect.X' (int)Core.tileRect.Y' (int)Core.tileRect.Width' (int)Core.tileRect.Height);  							//System.Drawing.RectangleF srcRect = new System.Drawing.RectangleF((float)(Xoff * (img.Img.Width / Ix))' (float)(Yoff * (img.Img.Height / Ix))' (img.Img.Width / Ix)' (img.Img.Height / Ix));  						}  					}  					if (img != null) {  						Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  						{  							t.AddOverlay (img);  						}  						break;  					} else {  						if (ex != null) {  							lock (FailedLoads) {  								if (!FailedLoads.ContainsKey (task.Value)) {  									FailedLoads.Add (task.Value' ex);  									if (OnEmptyTileError != null) {  										if (!RaiseEmptyTileError) {  											RaiseEmptyTileError = true;  											OnEmptyTileError (task.Value.Zoom' task.Value.Pos);  										}  									}  								}  							}  						}  						if (RetryLoadTile > 0) {  							Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  							{  								Thread.Sleep (1111);  							}  						}  					}  				} while (++retry < RetryLoadTile);  			}  			if (t.HasAnyOverlays && IsStarted) {  				Matrix.SetTile (t);  			} else {  				t.Dispose ();  			}  		}  		#endregion  	} catch (Exception ex) {  		Debug.WriteLine (ctid + " - ProcessLoadTask: " + ex.ToString ());  	} finally {  		if (Refresh != null) {  			Refresh.Set ();  		}  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: if (task.HasValue && IsStarted) {  	try {  		#region -- execute --  		var m = Matrix.GetTileWithReadLock (task.Value.Zoom' task.Value.Pos);  		if (!m.NotEmpty) {  			Debug.WriteLine (ctid + " - try load: " + task);  			Tile t = new Tile (task.Value.Zoom' task.Value.Pos);  			foreach (var tl in provider.Overlays) {  				int retry = 0;  				do {  					PureImage img = null;  					Exception ex = null;  					if (task.Value.Zoom >= provider.MinZoom && (!provider.MaxZoom.HasValue || task.Value.Zoom <= provider.MaxZoom)) {  						if (skipOverZoom == 0 || task.Value.Zoom <= skipOverZoom) {  							// tile number inversion(BottomLeft -> TopLeft)  							if (tl.InvertedAxisY) {  								img = GMaps.Instance.GetImageFrom (tl' new GPoint (task.Value.Pos.X' maxOfTiles.Height - task.Value.Pos.Y)' task.Value.Zoom' out ex);  							} else// ok  							 {  								img = GMaps.Instance.GetImageFrom (tl' task.Value.Pos' task.Value.Zoom' out ex);  							}  						}  					}  					if (img != null && ex == null) {  						if (okZoom < task.Value.Zoom) {  							okZoom = task.Value.Zoom;  							skipOverZoom = 0;  							Debug.WriteLine ("skipOverZoom disabled' okZoom: " + okZoom);  						}  					} else if (ex != null) {  						if ((skipOverZoom != okZoom) && (task.Value.Zoom > okZoom)) {  							if (ex.Message.Contains ("(404) Not Found")) {  								skipOverZoom = okZoom;  								Debug.WriteLine ("skipOverZoom enabled: " + skipOverZoom);  							}  						}  					}  					// check for parent tiles if not found  					if (img == null && okZoom > 0 && fillEmptyTiles && Provider.Projection is MercatorProjection) {  						int zoomOffset = task.Value.Zoom > okZoom ? task.Value.Zoom - okZoom : 1;  						long Ix = 0;  						GPoint parentTile = GPoint.Empty;  						while (img == null && zoomOffset < task.Value.Zoom) {  							Ix = (long)Math.Pow (2' zoomOffset);  							parentTile = new GMap.NET.GPoint ((task.Value.Pos.X / Ix)' (task.Value.Pos.Y / Ix));  							img = GMaps.Instance.GetImageFrom (tl' parentTile' task.Value.Zoom - zoomOffset++' out ex);  						}  						if (img != null) {  							// offsets in quadrant  							long Xoff = Math.Abs (task.Value.Pos.X - (parentTile.X * Ix));  							long Yoff = Math.Abs (task.Value.Pos.Y - (parentTile.Y * Ix));  							img.IsParent = true;  							img.Ix = Ix;  							img.Xoff = Xoff;  							img.Yoff = Yoff;  							// wpf  							//var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6));  							//var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6);  							// gdi+  							//System.Drawing.Rectangle dst = new System.Drawing.Rectangle((int)Core.tileRect.X' (int)Core.tileRect.Y' (int)Core.tileRect.Width' (int)Core.tileRect.Height);  							//System.Drawing.RectangleF srcRect = new System.Drawing.RectangleF((float)(Xoff * (img.Img.Width / Ix))' (float)(Yoff * (img.Img.Height / Ix))' (img.Img.Width / Ix)' (img.Img.Height / Ix));  						}  					}  					if (img != null) {  						Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  						{  							t.AddOverlay (img);  						}  						break;  					} else {  						if (ex != null) {  							lock (FailedLoads) {  								if (!FailedLoads.ContainsKey (task.Value)) {  									FailedLoads.Add (task.Value' ex);  									if (OnEmptyTileError != null) {  										if (!RaiseEmptyTileError) {  											RaiseEmptyTileError = true;  											OnEmptyTileError (task.Value.Zoom' task.Value.Pos);  										}  									}  								}  							}  						}  						if (RetryLoadTile > 0) {  							Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  							{  								Thread.Sleep (1111);  							}  						}  					}  				} while (++retry < RetryLoadTile);  			}  			if (t.HasAnyOverlays && IsStarted) {  				Matrix.SetTile (t);  			} else {  				t.Dispose ();  			}  		}  		#endregion  	} catch (Exception ex) {  		Debug.WriteLine (ctid + " - ProcessLoadTask: " + ex.ToString ());  	} finally {  		if (Refresh != null) {  			Refresh.Set ();  		}  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: try {  	#region -- execute --  	var m = Matrix.GetTileWithReadLock (task.Value.Zoom' task.Value.Pos);  	if (!m.NotEmpty) {  		Debug.WriteLine (ctid + " - try load: " + task);  		Tile t = new Tile (task.Value.Zoom' task.Value.Pos);  		foreach (var tl in provider.Overlays) {  			int retry = 0;  			do {  				PureImage img = null;  				Exception ex = null;  				if (task.Value.Zoom >= provider.MinZoom && (!provider.MaxZoom.HasValue || task.Value.Zoom <= provider.MaxZoom)) {  					if (skipOverZoom == 0 || task.Value.Zoom <= skipOverZoom) {  						// tile number inversion(BottomLeft -> TopLeft)  						if (tl.InvertedAxisY) {  							img = GMaps.Instance.GetImageFrom (tl' new GPoint (task.Value.Pos.X' maxOfTiles.Height - task.Value.Pos.Y)' task.Value.Zoom' out ex);  						} else// ok  						 {  							img = GMaps.Instance.GetImageFrom (tl' task.Value.Pos' task.Value.Zoom' out ex);  						}  					}  				}  				if (img != null && ex == null) {  					if (okZoom < task.Value.Zoom) {  						okZoom = task.Value.Zoom;  						skipOverZoom = 0;  						Debug.WriteLine ("skipOverZoom disabled' okZoom: " + okZoom);  					}  				} else if (ex != null) {  					if ((skipOverZoom != okZoom) && (task.Value.Zoom > okZoom)) {  						if (ex.Message.Contains ("(404) Not Found")) {  							skipOverZoom = okZoom;  							Debug.WriteLine ("skipOverZoom enabled: " + skipOverZoom);  						}  					}  				}  				// check for parent tiles if not found  				if (img == null && okZoom > 0 && fillEmptyTiles && Provider.Projection is MercatorProjection) {  					int zoomOffset = task.Value.Zoom > okZoom ? task.Value.Zoom - okZoom : 1;  					long Ix = 0;  					GPoint parentTile = GPoint.Empty;  					while (img == null && zoomOffset < task.Value.Zoom) {  						Ix = (long)Math.Pow (2' zoomOffset);  						parentTile = new GMap.NET.GPoint ((task.Value.Pos.X / Ix)' (task.Value.Pos.Y / Ix));  						img = GMaps.Instance.GetImageFrom (tl' parentTile' task.Value.Zoom - zoomOffset++' out ex);  					}  					if (img != null) {  						// offsets in quadrant  						long Xoff = Math.Abs (task.Value.Pos.X - (parentTile.X * Ix));  						long Yoff = Math.Abs (task.Value.Pos.Y - (parentTile.Y * Ix));  						img.IsParent = true;  						img.Ix = Ix;  						img.Xoff = Xoff;  						img.Yoff = Yoff;  						// wpf  						//var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6));  						//var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6);  						// gdi+  						//System.Drawing.Rectangle dst = new System.Drawing.Rectangle((int)Core.tileRect.X' (int)Core.tileRect.Y' (int)Core.tileRect.Width' (int)Core.tileRect.Height);  						//System.Drawing.RectangleF srcRect = new System.Drawing.RectangleF((float)(Xoff * (img.Img.Width / Ix))' (float)(Yoff * (img.Img.Height / Ix))' (img.Img.Width / Ix)' (img.Img.Height / Ix));  					}  				}  				if (img != null) {  					Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  					{  						t.AddOverlay (img);  					}  					break;  				} else {  					if (ex != null) {  						lock (FailedLoads) {  							if (!FailedLoads.ContainsKey (task.Value)) {  								FailedLoads.Add (task.Value' ex);  								if (OnEmptyTileError != null) {  									if (!RaiseEmptyTileError) {  										RaiseEmptyTileError = true;  										OnEmptyTileError (task.Value.Zoom' task.Value.Pos);  									}  								}  							}  						}  					}  					if (RetryLoadTile > 0) {  						Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  						{  							Thread.Sleep (1111);  						}  					}  				}  			} while (++retry < RetryLoadTile);  		}  		if (t.HasAnyOverlays && IsStarted) {  			Matrix.SetTile (t);  		} else {  			t.Dispose ();  		}  	}  	#endregion  } catch (Exception ex) {  	Debug.WriteLine (ctid + " - ProcessLoadTask: " + ex.ToString ());  } finally {  	if (Refresh != null) {  		Refresh.Set ();  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: try {  	#region -- execute --  	var m = Matrix.GetTileWithReadLock (task.Value.Zoom' task.Value.Pos);  	if (!m.NotEmpty) {  		Debug.WriteLine (ctid + " - try load: " + task);  		Tile t = new Tile (task.Value.Zoom' task.Value.Pos);  		foreach (var tl in provider.Overlays) {  			int retry = 0;  			do {  				PureImage img = null;  				Exception ex = null;  				if (task.Value.Zoom >= provider.MinZoom && (!provider.MaxZoom.HasValue || task.Value.Zoom <= provider.MaxZoom)) {  					if (skipOverZoom == 0 || task.Value.Zoom <= skipOverZoom) {  						// tile number inversion(BottomLeft -> TopLeft)  						if (tl.InvertedAxisY) {  							img = GMaps.Instance.GetImageFrom (tl' new GPoint (task.Value.Pos.X' maxOfTiles.Height - task.Value.Pos.Y)' task.Value.Zoom' out ex);  						} else// ok  						 {  							img = GMaps.Instance.GetImageFrom (tl' task.Value.Pos' task.Value.Zoom' out ex);  						}  					}  				}  				if (img != null && ex == null) {  					if (okZoom < task.Value.Zoom) {  						okZoom = task.Value.Zoom;  						skipOverZoom = 0;  						Debug.WriteLine ("skipOverZoom disabled' okZoom: " + okZoom);  					}  				} else if (ex != null) {  					if ((skipOverZoom != okZoom) && (task.Value.Zoom > okZoom)) {  						if (ex.Message.Contains ("(404) Not Found")) {  							skipOverZoom = okZoom;  							Debug.WriteLine ("skipOverZoom enabled: " + skipOverZoom);  						}  					}  				}  				// check for parent tiles if not found  				if (img == null && okZoom > 0 && fillEmptyTiles && Provider.Projection is MercatorProjection) {  					int zoomOffset = task.Value.Zoom > okZoom ? task.Value.Zoom - okZoom : 1;  					long Ix = 0;  					GPoint parentTile = GPoint.Empty;  					while (img == null && zoomOffset < task.Value.Zoom) {  						Ix = (long)Math.Pow (2' zoomOffset);  						parentTile = new GMap.NET.GPoint ((task.Value.Pos.X / Ix)' (task.Value.Pos.Y / Ix));  						img = GMaps.Instance.GetImageFrom (tl' parentTile' task.Value.Zoom - zoomOffset++' out ex);  					}  					if (img != null) {  						// offsets in quadrant  						long Xoff = Math.Abs (task.Value.Pos.X - (parentTile.X * Ix));  						long Yoff = Math.Abs (task.Value.Pos.Y - (parentTile.Y * Ix));  						img.IsParent = true;  						img.Ix = Ix;  						img.Xoff = Xoff;  						img.Yoff = Yoff;  						// wpf  						//var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6));  						//var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6);  						// gdi+  						//System.Drawing.Rectangle dst = new System.Drawing.Rectangle((int)Core.tileRect.X' (int)Core.tileRect.Y' (int)Core.tileRect.Width' (int)Core.tileRect.Height);  						//System.Drawing.RectangleF srcRect = new System.Drawing.RectangleF((float)(Xoff * (img.Img.Width / Ix))' (float)(Yoff * (img.Img.Height / Ix))' (img.Img.Width / Ix)' (img.Img.Height / Ix));  					}  				}  				if (img != null) {  					Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  					{  						t.AddOverlay (img);  					}  					break;  				} else {  					if (ex != null) {  						lock (FailedLoads) {  							if (!FailedLoads.ContainsKey (task.Value)) {  								FailedLoads.Add (task.Value' ex);  								if (OnEmptyTileError != null) {  									if (!RaiseEmptyTileError) {  										RaiseEmptyTileError = true;  										OnEmptyTileError (task.Value.Zoom' task.Value.Pos);  									}  								}  							}  						}  					}  					if (RetryLoadTile > 0) {  						Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  						{  							Thread.Sleep (1111);  						}  					}  				}  			} while (++retry < RetryLoadTile);  		}  		if (t.HasAnyOverlays && IsStarted) {  			Matrix.SetTile (t);  		} else {  			t.Dispose ();  		}  	}  	#endregion  } catch (Exception ex) {  	Debug.WriteLine (ctid + " - ProcessLoadTask: " + ex.ToString ());  } finally {  	if (Refresh != null) {  		Refresh.Set ();  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: try {  	#region -- execute --  	var m = Matrix.GetTileWithReadLock (task.Value.Zoom' task.Value.Pos);  	if (!m.NotEmpty) {  		Debug.WriteLine (ctid + " - try load: " + task);  		Tile t = new Tile (task.Value.Zoom' task.Value.Pos);  		foreach (var tl in provider.Overlays) {  			int retry = 0;  			do {  				PureImage img = null;  				Exception ex = null;  				if (task.Value.Zoom >= provider.MinZoom && (!provider.MaxZoom.HasValue || task.Value.Zoom <= provider.MaxZoom)) {  					if (skipOverZoom == 0 || task.Value.Zoom <= skipOverZoom) {  						// tile number inversion(BottomLeft -> TopLeft)  						if (tl.InvertedAxisY) {  							img = GMaps.Instance.GetImageFrom (tl' new GPoint (task.Value.Pos.X' maxOfTiles.Height - task.Value.Pos.Y)' task.Value.Zoom' out ex);  						} else// ok  						 {  							img = GMaps.Instance.GetImageFrom (tl' task.Value.Pos' task.Value.Zoom' out ex);  						}  					}  				}  				if (img != null && ex == null) {  					if (okZoom < task.Value.Zoom) {  						okZoom = task.Value.Zoom;  						skipOverZoom = 0;  						Debug.WriteLine ("skipOverZoom disabled' okZoom: " + okZoom);  					}  				} else if (ex != null) {  					if ((skipOverZoom != okZoom) && (task.Value.Zoom > okZoom)) {  						if (ex.Message.Contains ("(404) Not Found")) {  							skipOverZoom = okZoom;  							Debug.WriteLine ("skipOverZoom enabled: " + skipOverZoom);  						}  					}  				}  				// check for parent tiles if not found  				if (img == null && okZoom > 0 && fillEmptyTiles && Provider.Projection is MercatorProjection) {  					int zoomOffset = task.Value.Zoom > okZoom ? task.Value.Zoom - okZoom : 1;  					long Ix = 0;  					GPoint parentTile = GPoint.Empty;  					while (img == null && zoomOffset < task.Value.Zoom) {  						Ix = (long)Math.Pow (2' zoomOffset);  						parentTile = new GMap.NET.GPoint ((task.Value.Pos.X / Ix)' (task.Value.Pos.Y / Ix));  						img = GMaps.Instance.GetImageFrom (tl' parentTile' task.Value.Zoom - zoomOffset++' out ex);  					}  					if (img != null) {  						// offsets in quadrant  						long Xoff = Math.Abs (task.Value.Pos.X - (parentTile.X * Ix));  						long Yoff = Math.Abs (task.Value.Pos.Y - (parentTile.Y * Ix));  						img.IsParent = true;  						img.Ix = Ix;  						img.Xoff = Xoff;  						img.Yoff = Yoff;  						// wpf  						//var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6));  						//var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6);  						// gdi+  						//System.Drawing.Rectangle dst = new System.Drawing.Rectangle((int)Core.tileRect.X' (int)Core.tileRect.Y' (int)Core.tileRect.Width' (int)Core.tileRect.Height);  						//System.Drawing.RectangleF srcRect = new System.Drawing.RectangleF((float)(Xoff * (img.Img.Width / Ix))' (float)(Yoff * (img.Img.Height / Ix))' (img.Img.Width / Ix)' (img.Img.Height / Ix));  					}  				}  				if (img != null) {  					Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  					{  						t.AddOverlay (img);  					}  					break;  				} else {  					if (ex != null) {  						lock (FailedLoads) {  							if (!FailedLoads.ContainsKey (task.Value)) {  								FailedLoads.Add (task.Value' ex);  								if (OnEmptyTileError != null) {  									if (!RaiseEmptyTileError) {  										RaiseEmptyTileError = true;  										OnEmptyTileError (task.Value.Zoom' task.Value.Pos);  									}  								}  							}  						}  					}  					if (RetryLoadTile > 0) {  						Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  						{  							Thread.Sleep (1111);  						}  					}  				}  			} while (++retry < RetryLoadTile);  		}  		if (t.HasAnyOverlays && IsStarted) {  			Matrix.SetTile (t);  		} else {  			t.Dispose ();  		}  	}  	#endregion  } catch (Exception ex) {  	Debug.WriteLine (ctid + " - ProcessLoadTask: " + ex.ToString ());  } finally {  	if (Refresh != null) {  		Refresh.Set ();  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: if (!m.NotEmpty) {  	Debug.WriteLine (ctid + " - try load: " + task);  	Tile t = new Tile (task.Value.Zoom' task.Value.Pos);  	foreach (var tl in provider.Overlays) {  		int retry = 0;  		do {  			PureImage img = null;  			Exception ex = null;  			if (task.Value.Zoom >= provider.MinZoom && (!provider.MaxZoom.HasValue || task.Value.Zoom <= provider.MaxZoom)) {  				if (skipOverZoom == 0 || task.Value.Zoom <= skipOverZoom) {  					// tile number inversion(BottomLeft -> TopLeft)  					if (tl.InvertedAxisY) {  						img = GMaps.Instance.GetImageFrom (tl' new GPoint (task.Value.Pos.X' maxOfTiles.Height - task.Value.Pos.Y)' task.Value.Zoom' out ex);  					} else// ok  					 {  						img = GMaps.Instance.GetImageFrom (tl' task.Value.Pos' task.Value.Zoom' out ex);  					}  				}  			}  			if (img != null && ex == null) {  				if (okZoom < task.Value.Zoom) {  					okZoom = task.Value.Zoom;  					skipOverZoom = 0;  					Debug.WriteLine ("skipOverZoom disabled' okZoom: " + okZoom);  				}  			} else if (ex != null) {  				if ((skipOverZoom != okZoom) && (task.Value.Zoom > okZoom)) {  					if (ex.Message.Contains ("(404) Not Found")) {  						skipOverZoom = okZoom;  						Debug.WriteLine ("skipOverZoom enabled: " + skipOverZoom);  					}  				}  			}  			// check for parent tiles if not found  			if (img == null && okZoom > 0 && fillEmptyTiles && Provider.Projection is MercatorProjection) {  				int zoomOffset = task.Value.Zoom > okZoom ? task.Value.Zoom - okZoom : 1;  				long Ix = 0;  				GPoint parentTile = GPoint.Empty;  				while (img == null && zoomOffset < task.Value.Zoom) {  					Ix = (long)Math.Pow (2' zoomOffset);  					parentTile = new GMap.NET.GPoint ((task.Value.Pos.X / Ix)' (task.Value.Pos.Y / Ix));  					img = GMaps.Instance.GetImageFrom (tl' parentTile' task.Value.Zoom - zoomOffset++' out ex);  				}  				if (img != null) {  					// offsets in quadrant  					long Xoff = Math.Abs (task.Value.Pos.X - (parentTile.X * Ix));  					long Yoff = Math.Abs (task.Value.Pos.Y - (parentTile.Y * Ix));  					img.IsParent = true;  					img.Ix = Ix;  					img.Xoff = Xoff;  					img.Yoff = Yoff;  					// wpf  					//var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6));  					//var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6);  					// gdi+  					//System.Drawing.Rectangle dst = new System.Drawing.Rectangle((int)Core.tileRect.X' (int)Core.tileRect.Y' (int)Core.tileRect.Width' (int)Core.tileRect.Height);  					//System.Drawing.RectangleF srcRect = new System.Drawing.RectangleF((float)(Xoff * (img.Img.Width / Ix))' (float)(Yoff * (img.Img.Height / Ix))' (img.Img.Width / Ix)' (img.Img.Height / Ix));  				}  			}  			if (img != null) {  				Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  				{  					t.AddOverlay (img);  				}  				break;  			} else {  				if (ex != null) {  					lock (FailedLoads) {  						if (!FailedLoads.ContainsKey (task.Value)) {  							FailedLoads.Add (task.Value' ex);  							if (OnEmptyTileError != null) {  								if (!RaiseEmptyTileError) {  									RaiseEmptyTileError = true;  									OnEmptyTileError (task.Value.Zoom' task.Value.Pos);  								}  							}  						}  					}  				}  				if (RetryLoadTile > 0) {  					Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  					{  						Thread.Sleep (1111);  					}  				}  			}  		} while (++retry < RetryLoadTile);  	}  	if (t.HasAnyOverlays && IsStarted) {  		Matrix.SetTile (t);  	} else {  		t.Dispose ();  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: if (!m.NotEmpty) {  	Debug.WriteLine (ctid + " - try load: " + task);  	Tile t = new Tile (task.Value.Zoom' task.Value.Pos);  	foreach (var tl in provider.Overlays) {  		int retry = 0;  		do {  			PureImage img = null;  			Exception ex = null;  			if (task.Value.Zoom >= provider.MinZoom && (!provider.MaxZoom.HasValue || task.Value.Zoom <= provider.MaxZoom)) {  				if (skipOverZoom == 0 || task.Value.Zoom <= skipOverZoom) {  					// tile number inversion(BottomLeft -> TopLeft)  					if (tl.InvertedAxisY) {  						img = GMaps.Instance.GetImageFrom (tl' new GPoint (task.Value.Pos.X' maxOfTiles.Height - task.Value.Pos.Y)' task.Value.Zoom' out ex);  					} else// ok  					 {  						img = GMaps.Instance.GetImageFrom (tl' task.Value.Pos' task.Value.Zoom' out ex);  					}  				}  			}  			if (img != null && ex == null) {  				if (okZoom < task.Value.Zoom) {  					okZoom = task.Value.Zoom;  					skipOverZoom = 0;  					Debug.WriteLine ("skipOverZoom disabled' okZoom: " + okZoom);  				}  			} else if (ex != null) {  				if ((skipOverZoom != okZoom) && (task.Value.Zoom > okZoom)) {  					if (ex.Message.Contains ("(404) Not Found")) {  						skipOverZoom = okZoom;  						Debug.WriteLine ("skipOverZoom enabled: " + skipOverZoom);  					}  				}  			}  			// check for parent tiles if not found  			if (img == null && okZoom > 0 && fillEmptyTiles && Provider.Projection is MercatorProjection) {  				int zoomOffset = task.Value.Zoom > okZoom ? task.Value.Zoom - okZoom : 1;  				long Ix = 0;  				GPoint parentTile = GPoint.Empty;  				while (img == null && zoomOffset < task.Value.Zoom) {  					Ix = (long)Math.Pow (2' zoomOffset);  					parentTile = new GMap.NET.GPoint ((task.Value.Pos.X / Ix)' (task.Value.Pos.Y / Ix));  					img = GMaps.Instance.GetImageFrom (tl' parentTile' task.Value.Zoom - zoomOffset++' out ex);  				}  				if (img != null) {  					// offsets in quadrant  					long Xoff = Math.Abs (task.Value.Pos.X - (parentTile.X * Ix));  					long Yoff = Math.Abs (task.Value.Pos.Y - (parentTile.Y * Ix));  					img.IsParent = true;  					img.Ix = Ix;  					img.Xoff = Xoff;  					img.Yoff = Yoff;  					// wpf  					//var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6));  					//var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6);  					// gdi+  					//System.Drawing.Rectangle dst = new System.Drawing.Rectangle((int)Core.tileRect.X' (int)Core.tileRect.Y' (int)Core.tileRect.Width' (int)Core.tileRect.Height);  					//System.Drawing.RectangleF srcRect = new System.Drawing.RectangleF((float)(Xoff * (img.Img.Width / Ix))' (float)(Yoff * (img.Img.Height / Ix))' (img.Img.Width / Ix)' (img.Img.Height / Ix));  				}  			}  			if (img != null) {  				Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  				{  					t.AddOverlay (img);  				}  				break;  			} else {  				if (ex != null) {  					lock (FailedLoads) {  						if (!FailedLoads.ContainsKey (task.Value)) {  							FailedLoads.Add (task.Value' ex);  							if (OnEmptyTileError != null) {  								if (!RaiseEmptyTileError) {  									RaiseEmptyTileError = true;  									OnEmptyTileError (task.Value.Zoom' task.Value.Pos);  								}  							}  						}  					}  				}  				if (RetryLoadTile > 0) {  					Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  					{  						Thread.Sleep (1111);  					}  				}  			}  		} while (++retry < RetryLoadTile);  	}  	if (t.HasAnyOverlays && IsStarted) {  		Matrix.SetTile (t);  	} else {  		t.Dispose ();  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: if (!m.NotEmpty) {  	Debug.WriteLine (ctid + " - try load: " + task);  	Tile t = new Tile (task.Value.Zoom' task.Value.Pos);  	foreach (var tl in provider.Overlays) {  		int retry = 0;  		do {  			PureImage img = null;  			Exception ex = null;  			if (task.Value.Zoom >= provider.MinZoom && (!provider.MaxZoom.HasValue || task.Value.Zoom <= provider.MaxZoom)) {  				if (skipOverZoom == 0 || task.Value.Zoom <= skipOverZoom) {  					// tile number inversion(BottomLeft -> TopLeft)  					if (tl.InvertedAxisY) {  						img = GMaps.Instance.GetImageFrom (tl' new GPoint (task.Value.Pos.X' maxOfTiles.Height - task.Value.Pos.Y)' task.Value.Zoom' out ex);  					} else// ok  					 {  						img = GMaps.Instance.GetImageFrom (tl' task.Value.Pos' task.Value.Zoom' out ex);  					}  				}  			}  			if (img != null && ex == null) {  				if (okZoom < task.Value.Zoom) {  					okZoom = task.Value.Zoom;  					skipOverZoom = 0;  					Debug.WriteLine ("skipOverZoom disabled' okZoom: " + okZoom);  				}  			} else if (ex != null) {  				if ((skipOverZoom != okZoom) && (task.Value.Zoom > okZoom)) {  					if (ex.Message.Contains ("(404) Not Found")) {  						skipOverZoom = okZoom;  						Debug.WriteLine ("skipOverZoom enabled: " + skipOverZoom);  					}  				}  			}  			// check for parent tiles if not found  			if (img == null && okZoom > 0 && fillEmptyTiles && Provider.Projection is MercatorProjection) {  				int zoomOffset = task.Value.Zoom > okZoom ? task.Value.Zoom - okZoom : 1;  				long Ix = 0;  				GPoint parentTile = GPoint.Empty;  				while (img == null && zoomOffset < task.Value.Zoom) {  					Ix = (long)Math.Pow (2' zoomOffset);  					parentTile = new GMap.NET.GPoint ((task.Value.Pos.X / Ix)' (task.Value.Pos.Y / Ix));  					img = GMaps.Instance.GetImageFrom (tl' parentTile' task.Value.Zoom - zoomOffset++' out ex);  				}  				if (img != null) {  					// offsets in quadrant  					long Xoff = Math.Abs (task.Value.Pos.X - (parentTile.X * Ix));  					long Yoff = Math.Abs (task.Value.Pos.Y - (parentTile.Y * Ix));  					img.IsParent = true;  					img.Ix = Ix;  					img.Xoff = Xoff;  					img.Yoff = Yoff;  					// wpf  					//var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6));  					//var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6);  					// gdi+  					//System.Drawing.Rectangle dst = new System.Drawing.Rectangle((int)Core.tileRect.X' (int)Core.tileRect.Y' (int)Core.tileRect.Width' (int)Core.tileRect.Height);  					//System.Drawing.RectangleF srcRect = new System.Drawing.RectangleF((float)(Xoff * (img.Img.Width / Ix))' (float)(Yoff * (img.Img.Height / Ix))' (img.Img.Width / Ix)' (img.Img.Height / Ix));  				}  			}  			if (img != null) {  				Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  				{  					t.AddOverlay (img);  				}  				break;  			} else {  				if (ex != null) {  					lock (FailedLoads) {  						if (!FailedLoads.ContainsKey (task.Value)) {  							FailedLoads.Add (task.Value' ex);  							if (OnEmptyTileError != null) {  								if (!RaiseEmptyTileError) {  									RaiseEmptyTileError = true;  									OnEmptyTileError (task.Value.Zoom' task.Value.Pos);  								}  							}  						}  					}  				}  				if (RetryLoadTile > 0) {  					Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  					{  						Thread.Sleep (1111);  					}  				}  			}  		} while (++retry < RetryLoadTile);  	}  	if (t.HasAnyOverlays && IsStarted) {  		Matrix.SetTile (t);  	} else {  		t.Dispose ();  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: foreach (var tl in provider.Overlays) {  	int retry = 0;  	do {  		PureImage img = null;  		Exception ex = null;  		if (task.Value.Zoom >= provider.MinZoom && (!provider.MaxZoom.HasValue || task.Value.Zoom <= provider.MaxZoom)) {  			if (skipOverZoom == 0 || task.Value.Zoom <= skipOverZoom) {  				// tile number inversion(BottomLeft -> TopLeft)  				if (tl.InvertedAxisY) {  					img = GMaps.Instance.GetImageFrom (tl' new GPoint (task.Value.Pos.X' maxOfTiles.Height - task.Value.Pos.Y)' task.Value.Zoom' out ex);  				} else// ok  				 {  					img = GMaps.Instance.GetImageFrom (tl' task.Value.Pos' task.Value.Zoom' out ex);  				}  			}  		}  		if (img != null && ex == null) {  			if (okZoom < task.Value.Zoom) {  				okZoom = task.Value.Zoom;  				skipOverZoom = 0;  				Debug.WriteLine ("skipOverZoom disabled' okZoom: " + okZoom);  			}  		} else if (ex != null) {  			if ((skipOverZoom != okZoom) && (task.Value.Zoom > okZoom)) {  				if (ex.Message.Contains ("(404) Not Found")) {  					skipOverZoom = okZoom;  					Debug.WriteLine ("skipOverZoom enabled: " + skipOverZoom);  				}  			}  		}  		// check for parent tiles if not found  		if (img == null && okZoom > 0 && fillEmptyTiles && Provider.Projection is MercatorProjection) {  			int zoomOffset = task.Value.Zoom > okZoom ? task.Value.Zoom - okZoom : 1;  			long Ix = 0;  			GPoint parentTile = GPoint.Empty;  			while (img == null && zoomOffset < task.Value.Zoom) {  				Ix = (long)Math.Pow (2' zoomOffset);  				parentTile = new GMap.NET.GPoint ((task.Value.Pos.X / Ix)' (task.Value.Pos.Y / Ix));  				img = GMaps.Instance.GetImageFrom (tl' parentTile' task.Value.Zoom - zoomOffset++' out ex);  			}  			if (img != null) {  				// offsets in quadrant  				long Xoff = Math.Abs (task.Value.Pos.X - (parentTile.X * Ix));  				long Yoff = Math.Abs (task.Value.Pos.Y - (parentTile.Y * Ix));  				img.IsParent = true;  				img.Ix = Ix;  				img.Xoff = Xoff;  				img.Yoff = Yoff;  				// wpf  				//var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6));  				//var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6);  				// gdi+  				//System.Drawing.Rectangle dst = new System.Drawing.Rectangle((int)Core.tileRect.X' (int)Core.tileRect.Y' (int)Core.tileRect.Width' (int)Core.tileRect.Height);  				//System.Drawing.RectangleF srcRect = new System.Drawing.RectangleF((float)(Xoff * (img.Img.Width / Ix))' (float)(Yoff * (img.Img.Height / Ix))' (img.Img.Width / Ix)' (img.Img.Height / Ix));  			}  		}  		if (img != null) {  			Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  			{  				t.AddOverlay (img);  			}  			break;  		} else {  			if (ex != null) {  				lock (FailedLoads) {  					if (!FailedLoads.ContainsKey (task.Value)) {  						FailedLoads.Add (task.Value' ex);  						if (OnEmptyTileError != null) {  							if (!RaiseEmptyTileError) {  								RaiseEmptyTileError = true;  								OnEmptyTileError (task.Value.Zoom' task.Value.Pos);  							}  						}  					}  				}  			}  			if (RetryLoadTile > 0) {  				Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  				{  					Thread.Sleep (1111);  				}  			}  		}  	} while (++retry < RetryLoadTile);  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: foreach (var tl in provider.Overlays) {  	int retry = 0;  	do {  		PureImage img = null;  		Exception ex = null;  		if (task.Value.Zoom >= provider.MinZoom && (!provider.MaxZoom.HasValue || task.Value.Zoom <= provider.MaxZoom)) {  			if (skipOverZoom == 0 || task.Value.Zoom <= skipOverZoom) {  				// tile number inversion(BottomLeft -> TopLeft)  				if (tl.InvertedAxisY) {  					img = GMaps.Instance.GetImageFrom (tl' new GPoint (task.Value.Pos.X' maxOfTiles.Height - task.Value.Pos.Y)' task.Value.Zoom' out ex);  				} else// ok  				 {  					img = GMaps.Instance.GetImageFrom (tl' task.Value.Pos' task.Value.Zoom' out ex);  				}  			}  		}  		if (img != null && ex == null) {  			if (okZoom < task.Value.Zoom) {  				okZoom = task.Value.Zoom;  				skipOverZoom = 0;  				Debug.WriteLine ("skipOverZoom disabled' okZoom: " + okZoom);  			}  		} else if (ex != null) {  			if ((skipOverZoom != okZoom) && (task.Value.Zoom > okZoom)) {  				if (ex.Message.Contains ("(404) Not Found")) {  					skipOverZoom = okZoom;  					Debug.WriteLine ("skipOverZoom enabled: " + skipOverZoom);  				}  			}  		}  		// check for parent tiles if not found  		if (img == null && okZoom > 0 && fillEmptyTiles && Provider.Projection is MercatorProjection) {  			int zoomOffset = task.Value.Zoom > okZoom ? task.Value.Zoom - okZoom : 1;  			long Ix = 0;  			GPoint parentTile = GPoint.Empty;  			while (img == null && zoomOffset < task.Value.Zoom) {  				Ix = (long)Math.Pow (2' zoomOffset);  				parentTile = new GMap.NET.GPoint ((task.Value.Pos.X / Ix)' (task.Value.Pos.Y / Ix));  				img = GMaps.Instance.GetImageFrom (tl' parentTile' task.Value.Zoom - zoomOffset++' out ex);  			}  			if (img != null) {  				// offsets in quadrant  				long Xoff = Math.Abs (task.Value.Pos.X - (parentTile.X * Ix));  				long Yoff = Math.Abs (task.Value.Pos.Y - (parentTile.Y * Ix));  				img.IsParent = true;  				img.Ix = Ix;  				img.Xoff = Xoff;  				img.Yoff = Yoff;  				// wpf  				//var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6));  				//var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6);  				// gdi+  				//System.Drawing.Rectangle dst = new System.Drawing.Rectangle((int)Core.tileRect.X' (int)Core.tileRect.Y' (int)Core.tileRect.Width' (int)Core.tileRect.Height);  				//System.Drawing.RectangleF srcRect = new System.Drawing.RectangleF((float)(Xoff * (img.Img.Width / Ix))' (float)(Yoff * (img.Img.Height / Ix))' (img.Img.Width / Ix)' (img.Img.Height / Ix));  			}  		}  		if (img != null) {  			Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  			{  				t.AddOverlay (img);  			}  			break;  		} else {  			if (ex != null) {  				lock (FailedLoads) {  					if (!FailedLoads.ContainsKey (task.Value)) {  						FailedLoads.Add (task.Value' ex);  						if (OnEmptyTileError != null) {  							if (!RaiseEmptyTileError) {  								RaiseEmptyTileError = true;  								OnEmptyTileError (task.Value.Zoom' task.Value.Pos);  							}  						}  					}  				}  			}  			if (RetryLoadTile > 0) {  				Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  				{  					Thread.Sleep (1111);  				}  			}  		}  	} while (++retry < RetryLoadTile);  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: foreach (var tl in provider.Overlays) {  	int retry = 0;  	do {  		PureImage img = null;  		Exception ex = null;  		if (task.Value.Zoom >= provider.MinZoom && (!provider.MaxZoom.HasValue || task.Value.Zoom <= provider.MaxZoom)) {  			if (skipOverZoom == 0 || task.Value.Zoom <= skipOverZoom) {  				// tile number inversion(BottomLeft -> TopLeft)  				if (tl.InvertedAxisY) {  					img = GMaps.Instance.GetImageFrom (tl' new GPoint (task.Value.Pos.X' maxOfTiles.Height - task.Value.Pos.Y)' task.Value.Zoom' out ex);  				} else// ok  				 {  					img = GMaps.Instance.GetImageFrom (tl' task.Value.Pos' task.Value.Zoom' out ex);  				}  			}  		}  		if (img != null && ex == null) {  			if (okZoom < task.Value.Zoom) {  				okZoom = task.Value.Zoom;  				skipOverZoom = 0;  				Debug.WriteLine ("skipOverZoom disabled' okZoom: " + okZoom);  			}  		} else if (ex != null) {  			if ((skipOverZoom != okZoom) && (task.Value.Zoom > okZoom)) {  				if (ex.Message.Contains ("(404) Not Found")) {  					skipOverZoom = okZoom;  					Debug.WriteLine ("skipOverZoom enabled: " + skipOverZoom);  				}  			}  		}  		// check for parent tiles if not found  		if (img == null && okZoom > 0 && fillEmptyTiles && Provider.Projection is MercatorProjection) {  			int zoomOffset = task.Value.Zoom > okZoom ? task.Value.Zoom - okZoom : 1;  			long Ix = 0;  			GPoint parentTile = GPoint.Empty;  			while (img == null && zoomOffset < task.Value.Zoom) {  				Ix = (long)Math.Pow (2' zoomOffset);  				parentTile = new GMap.NET.GPoint ((task.Value.Pos.X / Ix)' (task.Value.Pos.Y / Ix));  				img = GMaps.Instance.GetImageFrom (tl' parentTile' task.Value.Zoom - zoomOffset++' out ex);  			}  			if (img != null) {  				// offsets in quadrant  				long Xoff = Math.Abs (task.Value.Pos.X - (parentTile.X * Ix));  				long Yoff = Math.Abs (task.Value.Pos.Y - (parentTile.Y * Ix));  				img.IsParent = true;  				img.Ix = Ix;  				img.Xoff = Xoff;  				img.Yoff = Yoff;  				// wpf  				//var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6));  				//var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6);  				// gdi+  				//System.Drawing.Rectangle dst = new System.Drawing.Rectangle((int)Core.tileRect.X' (int)Core.tileRect.Y' (int)Core.tileRect.Width' (int)Core.tileRect.Height);  				//System.Drawing.RectangleF srcRect = new System.Drawing.RectangleF((float)(Xoff * (img.Img.Width / Ix))' (float)(Yoff * (img.Img.Height / Ix))' (img.Img.Width / Ix)' (img.Img.Height / Ix));  			}  		}  		if (img != null) {  			Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  			{  				t.AddOverlay (img);  			}  			break;  		} else {  			if (ex != null) {  				lock (FailedLoads) {  					if (!FailedLoads.ContainsKey (task.Value)) {  						FailedLoads.Add (task.Value' ex);  						if (OnEmptyTileError != null) {  							if (!RaiseEmptyTileError) {  								RaiseEmptyTileError = true;  								OnEmptyTileError (task.Value.Zoom' task.Value.Pos);  							}  						}  					}  				}  			}  			if (RetryLoadTile > 0) {  				Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  				{  					Thread.Sleep (1111);  				}  			}  		}  	} while (++retry < RetryLoadTile);  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: do {  	PureImage img = null;  	Exception ex = null;  	if (task.Value.Zoom >= provider.MinZoom && (!provider.MaxZoom.HasValue || task.Value.Zoom <= provider.MaxZoom)) {  		if (skipOverZoom == 0 || task.Value.Zoom <= skipOverZoom) {  			// tile number inversion(BottomLeft -> TopLeft)  			if (tl.InvertedAxisY) {  				img = GMaps.Instance.GetImageFrom (tl' new GPoint (task.Value.Pos.X' maxOfTiles.Height - task.Value.Pos.Y)' task.Value.Zoom' out ex);  			} else// ok  			 {  				img = GMaps.Instance.GetImageFrom (tl' task.Value.Pos' task.Value.Zoom' out ex);  			}  		}  	}  	if (img != null && ex == null) {  		if (okZoom < task.Value.Zoom) {  			okZoom = task.Value.Zoom;  			skipOverZoom = 0;  			Debug.WriteLine ("skipOverZoom disabled' okZoom: " + okZoom);  		}  	} else if (ex != null) {  		if ((skipOverZoom != okZoom) && (task.Value.Zoom > okZoom)) {  			if (ex.Message.Contains ("(404) Not Found")) {  				skipOverZoom = okZoom;  				Debug.WriteLine ("skipOverZoom enabled: " + skipOverZoom);  			}  		}  	}  	// check for parent tiles if not found  	if (img == null && okZoom > 0 && fillEmptyTiles && Provider.Projection is MercatorProjection) {  		int zoomOffset = task.Value.Zoom > okZoom ? task.Value.Zoom - okZoom : 1;  		long Ix = 0;  		GPoint parentTile = GPoint.Empty;  		while (img == null && zoomOffset < task.Value.Zoom) {  			Ix = (long)Math.Pow (2' zoomOffset);  			parentTile = new GMap.NET.GPoint ((task.Value.Pos.X / Ix)' (task.Value.Pos.Y / Ix));  			img = GMaps.Instance.GetImageFrom (tl' parentTile' task.Value.Zoom - zoomOffset++' out ex);  		}  		if (img != null) {  			// offsets in quadrant  			long Xoff = Math.Abs (task.Value.Pos.X - (parentTile.X * Ix));  			long Yoff = Math.Abs (task.Value.Pos.Y - (parentTile.Y * Ix));  			img.IsParent = true;  			img.Ix = Ix;  			img.Xoff = Xoff;  			img.Yoff = Yoff;  			// wpf  			//var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6));  			//var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6);  			// gdi+  			//System.Drawing.Rectangle dst = new System.Drawing.Rectangle((int)Core.tileRect.X' (int)Core.tileRect.Y' (int)Core.tileRect.Width' (int)Core.tileRect.Height);  			//System.Drawing.RectangleF srcRect = new System.Drawing.RectangleF((float)(Xoff * (img.Img.Width / Ix))' (float)(Yoff * (img.Img.Height / Ix))' (img.Img.Width / Ix)' (img.Img.Height / Ix));  		}  	}  	if (img != null) {  		Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  		{  			t.AddOverlay (img);  		}  		break;  	} else {  		if (ex != null) {  			lock (FailedLoads) {  				if (!FailedLoads.ContainsKey (task.Value)) {  					FailedLoads.Add (task.Value' ex);  					if (OnEmptyTileError != null) {  						if (!RaiseEmptyTileError) {  							RaiseEmptyTileError = true;  							OnEmptyTileError (task.Value.Zoom' task.Value.Pos);  						}  					}  				}  			}  		}  		if (RetryLoadTile > 0) {  			Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  			{  				Thread.Sleep (1111);  			}  		}  	}  } while (++retry < RetryLoadTile);  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: do {  	PureImage img = null;  	Exception ex = null;  	if (task.Value.Zoom >= provider.MinZoom && (!provider.MaxZoom.HasValue || task.Value.Zoom <= provider.MaxZoom)) {  		if (skipOverZoom == 0 || task.Value.Zoom <= skipOverZoom) {  			// tile number inversion(BottomLeft -> TopLeft)  			if (tl.InvertedAxisY) {  				img = GMaps.Instance.GetImageFrom (tl' new GPoint (task.Value.Pos.X' maxOfTiles.Height - task.Value.Pos.Y)' task.Value.Zoom' out ex);  			} else// ok  			 {  				img = GMaps.Instance.GetImageFrom (tl' task.Value.Pos' task.Value.Zoom' out ex);  			}  		}  	}  	if (img != null && ex == null) {  		if (okZoom < task.Value.Zoom) {  			okZoom = task.Value.Zoom;  			skipOverZoom = 0;  			Debug.WriteLine ("skipOverZoom disabled' okZoom: " + okZoom);  		}  	} else if (ex != null) {  		if ((skipOverZoom != okZoom) && (task.Value.Zoom > okZoom)) {  			if (ex.Message.Contains ("(404) Not Found")) {  				skipOverZoom = okZoom;  				Debug.WriteLine ("skipOverZoom enabled: " + skipOverZoom);  			}  		}  	}  	// check for parent tiles if not found  	if (img == null && okZoom > 0 && fillEmptyTiles && Provider.Projection is MercatorProjection) {  		int zoomOffset = task.Value.Zoom > okZoom ? task.Value.Zoom - okZoom : 1;  		long Ix = 0;  		GPoint parentTile = GPoint.Empty;  		while (img == null && zoomOffset < task.Value.Zoom) {  			Ix = (long)Math.Pow (2' zoomOffset);  			parentTile = new GMap.NET.GPoint ((task.Value.Pos.X / Ix)' (task.Value.Pos.Y / Ix));  			img = GMaps.Instance.GetImageFrom (tl' parentTile' task.Value.Zoom - zoomOffset++' out ex);  		}  		if (img != null) {  			// offsets in quadrant  			long Xoff = Math.Abs (task.Value.Pos.X - (parentTile.X * Ix));  			long Yoff = Math.Abs (task.Value.Pos.Y - (parentTile.Y * Ix));  			img.IsParent = true;  			img.Ix = Ix;  			img.Xoff = Xoff;  			img.Yoff = Yoff;  			// wpf  			//var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6));  			//var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6);  			// gdi+  			//System.Drawing.Rectangle dst = new System.Drawing.Rectangle((int)Core.tileRect.X' (int)Core.tileRect.Y' (int)Core.tileRect.Width' (int)Core.tileRect.Height);  			//System.Drawing.RectangleF srcRect = new System.Drawing.RectangleF((float)(Xoff * (img.Img.Width / Ix))' (float)(Yoff * (img.Img.Height / Ix))' (img.Img.Width / Ix)' (img.Img.Height / Ix));  		}  	}  	if (img != null) {  		Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  		{  			t.AddOverlay (img);  		}  		break;  	} else {  		if (ex != null) {  			lock (FailedLoads) {  				if (!FailedLoads.ContainsKey (task.Value)) {  					FailedLoads.Add (task.Value' ex);  					if (OnEmptyTileError != null) {  						if (!RaiseEmptyTileError) {  							RaiseEmptyTileError = true;  							OnEmptyTileError (task.Value.Zoom' task.Value.Pos);  						}  					}  				}  			}  		}  		if (RetryLoadTile > 0) {  			Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  			{  				Thread.Sleep (1111);  			}  		}  	}  } while (++retry < RetryLoadTile);  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: do {  	PureImage img = null;  	Exception ex = null;  	if (task.Value.Zoom >= provider.MinZoom && (!provider.MaxZoom.HasValue || task.Value.Zoom <= provider.MaxZoom)) {  		if (skipOverZoom == 0 || task.Value.Zoom <= skipOverZoom) {  			// tile number inversion(BottomLeft -> TopLeft)  			if (tl.InvertedAxisY) {  				img = GMaps.Instance.GetImageFrom (tl' new GPoint (task.Value.Pos.X' maxOfTiles.Height - task.Value.Pos.Y)' task.Value.Zoom' out ex);  			} else// ok  			 {  				img = GMaps.Instance.GetImageFrom (tl' task.Value.Pos' task.Value.Zoom' out ex);  			}  		}  	}  	if (img != null && ex == null) {  		if (okZoom < task.Value.Zoom) {  			okZoom = task.Value.Zoom;  			skipOverZoom = 0;  			Debug.WriteLine ("skipOverZoom disabled' okZoom: " + okZoom);  		}  	} else if (ex != null) {  		if ((skipOverZoom != okZoom) && (task.Value.Zoom > okZoom)) {  			if (ex.Message.Contains ("(404) Not Found")) {  				skipOverZoom = okZoom;  				Debug.WriteLine ("skipOverZoom enabled: " + skipOverZoom);  			}  		}  	}  	// check for parent tiles if not found  	if (img == null && okZoom > 0 && fillEmptyTiles && Provider.Projection is MercatorProjection) {  		int zoomOffset = task.Value.Zoom > okZoom ? task.Value.Zoom - okZoom : 1;  		long Ix = 0;  		GPoint parentTile = GPoint.Empty;  		while (img == null && zoomOffset < task.Value.Zoom) {  			Ix = (long)Math.Pow (2' zoomOffset);  			parentTile = new GMap.NET.GPoint ((task.Value.Pos.X / Ix)' (task.Value.Pos.Y / Ix));  			img = GMaps.Instance.GetImageFrom (tl' parentTile' task.Value.Zoom - zoomOffset++' out ex);  		}  		if (img != null) {  			// offsets in quadrant  			long Xoff = Math.Abs (task.Value.Pos.X - (parentTile.X * Ix));  			long Yoff = Math.Abs (task.Value.Pos.Y - (parentTile.Y * Ix));  			img.IsParent = true;  			img.Ix = Ix;  			img.Xoff = Xoff;  			img.Yoff = Yoff;  			// wpf  			//var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6));  			//var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6);  			// gdi+  			//System.Drawing.Rectangle dst = new System.Drawing.Rectangle((int)Core.tileRect.X' (int)Core.tileRect.Y' (int)Core.tileRect.Width' (int)Core.tileRect.Height);  			//System.Drawing.RectangleF srcRect = new System.Drawing.RectangleF((float)(Xoff * (img.Img.Width / Ix))' (float)(Yoff * (img.Img.Height / Ix))' (img.Img.Width / Ix)' (img.Img.Height / Ix));  		}  	}  	if (img != null) {  		Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  		{  			t.AddOverlay (img);  		}  		break;  	} else {  		if (ex != null) {  			lock (FailedLoads) {  				if (!FailedLoads.ContainsKey (task.Value)) {  					FailedLoads.Add (task.Value' ex);  					if (OnEmptyTileError != null) {  						if (!RaiseEmptyTileError) {  							RaiseEmptyTileError = true;  							OnEmptyTileError (task.Value.Zoom' task.Value.Pos);  						}  					}  				}  			}  		}  		if (RetryLoadTile > 0) {  			Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  			{  				Thread.Sleep (1111);  			}  		}  	}  } while (++retry < RetryLoadTile);  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: if (img == null && okZoom > 0 && fillEmptyTiles && Provider.Projection is MercatorProjection) {  	int zoomOffset = task.Value.Zoom > okZoom ? task.Value.Zoom - okZoom : 1;  	long Ix = 0;  	GPoint parentTile = GPoint.Empty;  	while (img == null && zoomOffset < task.Value.Zoom) {  		Ix = (long)Math.Pow (2' zoomOffset);  		parentTile = new GMap.NET.GPoint ((task.Value.Pos.X / Ix)' (task.Value.Pos.Y / Ix));  		img = GMaps.Instance.GetImageFrom (tl' parentTile' task.Value.Zoom - zoomOffset++' out ex);  	}  	if (img != null) {  		// offsets in quadrant  		long Xoff = Math.Abs (task.Value.Pos.X - (parentTile.X * Ix));  		long Yoff = Math.Abs (task.Value.Pos.Y - (parentTile.Y * Ix));  		img.IsParent = true;  		img.Ix = Ix;  		img.Xoff = Xoff;  		img.Yoff = Yoff;  		// wpf  		//var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6));  		//var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6);  		// gdi+  		//System.Drawing.Rectangle dst = new System.Drawing.Rectangle((int)Core.tileRect.X' (int)Core.tileRect.Y' (int)Core.tileRect.Width' (int)Core.tileRect.Height);  		//System.Drawing.RectangleF srcRect = new System.Drawing.RectangleF((float)(Xoff * (img.Img.Width / Ix))' (float)(Yoff * (img.Img.Height / Ix))' (img.Img.Width / Ix)' (img.Img.Height / Ix));  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: while (img == null && zoomOffset < task.Value.Zoom) {  	Ix = (long)Math.Pow (2' zoomOffset);  	parentTile = new GMap.NET.GPoint ((task.Value.Pos.X / Ix)' (task.Value.Pos.Y / Ix));  	img = GMaps.Instance.GetImageFrom (tl' parentTile' task.Value.Zoom - zoomOffset++' out ex);  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: Ix = (long)Math.Pow (2' zoomOffset);  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: if (img != null) {  	Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  	{  		t.AddOverlay (img);  	}  	break;  } else {  	if (ex != null) {  		lock (FailedLoads) {  			if (!FailedLoads.ContainsKey (task.Value)) {  				FailedLoads.Add (task.Value' ex);  				if (OnEmptyTileError != null) {  					if (!RaiseEmptyTileError) {  						RaiseEmptyTileError = true;  						OnEmptyTileError (task.Value.Zoom' task.Value.Pos);  					}  				}  			}  		}  	}  	if (RetryLoadTile > 0) {  		Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  		{  			Thread.Sleep (1111);  		}  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: if (img != null) {  	Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  	{  		t.AddOverlay (img);  	}  	break;  } else {  	if (ex != null) {  		lock (FailedLoads) {  			if (!FailedLoads.ContainsKey (task.Value)) {  				FailedLoads.Add (task.Value' ex);  				if (OnEmptyTileError != null) {  					if (!RaiseEmptyTileError) {  						RaiseEmptyTileError = true;  						OnEmptyTileError (task.Value.Zoom' task.Value.Pos);  					}  				}  			}  		}  	}  	if (RetryLoadTile > 0) {  		Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  		{  			Thread.Sleep (1111);  		}  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: Debug.WriteLine (ctid + " - tile loaded: " + img.Data.Length / 1024 + "KB' " + task);  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: if (RetryLoadTile > 0) {  	Debug.WriteLine (ctid + " - ProcessLoadTask: " + task + " -> empty tile' retry " + retry);  	{  		Thread.Sleep (1111);  	}  }  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,ProcessLoadTask,The following statement contains a magic number: Thread.Sleep (1111);  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,UpdateGroundResolution,The following statement contains a magic number: pxRes100m = (int)(100.0 / rez);  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,UpdateGroundResolution,The following statement contains a magic number: pxRes1000m = (int)(1000.0 / rez);  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,UpdateGroundResolution,The following statement contains a magic number: pxRes10km = (int)(10000.0 / rez);  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,UpdateGroundResolution,The following statement contains a magic number: pxRes100km = (int)(100000.0 / rez);  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,UpdateGroundResolution,The following statement contains a magic number: pxRes1000km = (int)(1000000.0 / rez);  
Magic Number,GMap.NET.Internals,Core,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Core.cs,UpdateGroundResolution,The following statement contains a magic number: pxRes5000km = (int)(5000000.0 / rez);  
Magic Number,GMap.NET.Internals,Tile,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Tile.cs,AddOverlay,The following statement contains a magic number: if (overlays == null) {  	overlays = new PureImage[4];  }  
Magic Number,GMap.NET.Internals,Tile,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Tile.cs,AddOverlay,The following statement contains a magic number: overlays = new PureImage[4];  
Magic Number,GMap.NET.Internals,TileMatrix,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileMatrix.cs,TileMatrix,The following statement contains a magic number: for (int i = 0; i < Levels.Capacity; i++) {  	Levels.Add (new Dictionary<GPoint' Tile> (55' new GPointComparer ()));  }  
Magic Number,GMap.NET.Internals,TileMatrix,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\TileMatrix.cs,TileMatrix,The following statement contains a magic number: Levels.Add (new Dictionary<GPoint' Tile> (55' new GPointComparer ()));  
Magic Number,GMap.NET.Internals,Stuff,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Stuff.cs,IsRunningOnVistaOrLater,The following statement contains a magic number: if (os.Platform == PlatformID.Win32NT) {  	Version vs = os.Version;  	if (vs.Major >= 6 && vs.Minor >= 0) {  		return true;  	}  }  
Magic Number,GMap.NET.Internals,Stuff,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Stuff.cs,IsRunningOnVistaOrLater,The following statement contains a magic number: if (vs.Major >= 6 && vs.Minor >= 0) {  	return true;  }  
Magic Number,GMap.NET.Internals,Stuff,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Stuff.cs,IsRunningOnWin7orLater,The following statement contains a magic number: if (os.Platform == PlatformID.Win32NT) {  	Version vs = os.Version;  	if (vs.Major >= 6 && vs.Minor > 0) {  		return true;  	}  }  
Magic Number,GMap.NET.Internals,Stuff,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Stuff.cs,IsRunningOnWin7orLater,The following statement contains a magic number: if (vs.Major >= 6 && vs.Minor > 0) {  	return true;  }  
Magic Number,GMap.NET.Internals,Stuff,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Stuff.cs,EncryptString,The following statement contains a magic number: using (var HashProvider = new SHA1CryptoServiceProvider ()) {  	byte[] TDESKey = HashProvider.ComputeHash (Encoding.UTF8.GetBytes (Passphrase));  	Array.Resize (ref TDESKey' 16);  	using (TripleDESCryptoServiceProvider TDESAlgorithm = new TripleDESCryptoServiceProvider ()) {  		TDESAlgorithm.Key = TDESKey;  		TDESAlgorithm.Mode = CipherMode.ECB;  		TDESAlgorithm.Padding = PaddingMode.PKCS7;  		byte[] DataToEncrypt = Encoding.UTF8.GetBytes (Message);  		// Step 5. Attempt to encrypt the string  		try {  			using (ICryptoTransform Encryptor = TDESAlgorithm.CreateEncryptor ()) {  				Results = Encryptor.TransformFinalBlock (DataToEncrypt' 0' DataToEncrypt.Length);  			}  		} finally {  			// Clear the TripleDes and Hashprovider services of any sensitive information  			TDESAlgorithm.Clear ();  			HashProvider.Clear ();  		}  	}  }  
Magic Number,GMap.NET.Internals,Stuff,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Stuff.cs,EncryptString,The following statement contains a magic number: Array.Resize (ref TDESKey' 16);  
Magic Number,GMap.NET.Internals,Stuff,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Stuff.cs,DecryptString,The following statement contains a magic number: using (var HashProvider = new SHA1CryptoServiceProvider ()) {  	byte[] TDESKey = HashProvider.ComputeHash (Encoding.UTF8.GetBytes (Passphrase));  	Array.Resize (ref TDESKey' 16);  	// Step 2. Create a new TripleDESCryptoServiceProvider object  	using (TripleDESCryptoServiceProvider TDESAlgorithm = new TripleDESCryptoServiceProvider ()) {  		// Step 3. Setup the decoder  		TDESAlgorithm.Key = TDESKey;  		TDESAlgorithm.Mode = CipherMode.ECB;  		TDESAlgorithm.Padding = PaddingMode.PKCS7;  		// Step 4. Convert the input string to a byte[]  		byte[] DataToDecrypt = Convert.FromBase64String (Message);  		// Step 5. Attempt to decrypt the string  		try {  			using (ICryptoTransform Decryptor = TDESAlgorithm.CreateDecryptor ()) {  				Results = Decryptor.TransformFinalBlock (DataToDecrypt' 0' DataToDecrypt.Length);  			}  		} finally {  			// Clear the TripleDes and Hashprovider services of any sensitive information  			TDESAlgorithm.Clear ();  			HashProvider.Clear ();  		}  	}  }  
Magic Number,GMap.NET.Internals,Stuff,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\Stuff.cs,DecryptString,The following statement contains a magic number: Array.Resize (ref TDESKey' 16);  
Magic Number,Org.Mentalis.Network.ProxySocket.Authentication,AuthUserPass,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\AuthUserPass.cs,GetAuthenticationBytes,The following statement contains a magic number: Array.Copy (Encoding.ASCII.GetBytes (Username)' 0' buffer' 2' Username.Length);  
Magic Number,Org.Mentalis.Network.ProxySocket.Authentication,AuthUserPass,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\AuthUserPass.cs,GetAuthenticationBytes,The following statement contains a magic number: buffer [Username.Length + 2] = (byte)Password.Length;  
Magic Number,Org.Mentalis.Network.ProxySocket.Authentication,AuthUserPass,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\AuthUserPass.cs,GetAuthenticationBytes,The following statement contains a magic number: Array.Copy (Encoding.ASCII.GetBytes (Password)' 0' buffer' Username.Length + 3' Password.Length);  
Magic Number,Org.Mentalis.Network.ProxySocket.Authentication,AuthUserPass,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\AuthUserPass.cs,Authenticate,The following statement contains a magic number: while (received != 2) {  	received += Server.Receive (buffer' received' 2 - received' SocketFlags.None);  }  
Magic Number,Org.Mentalis.Network.ProxySocket.Authentication,AuthUserPass,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\AuthUserPass.cs,Authenticate,The following statement contains a magic number: while (received != 2) {  	received += Server.Receive (buffer' received' 2 - received' SocketFlags.None);  }  
Magic Number,Org.Mentalis.Network.ProxySocket.Authentication,AuthUserPass,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\AuthUserPass.cs,Authenticate,The following statement contains a magic number: received += Server.Receive (buffer' received' 2 - received' SocketFlags.None);  
Magic Number,Org.Mentalis.Network.ProxySocket.Authentication,AuthUserPass,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\AuthUserPass.cs,BeginAuthenticate,The following statement contains a magic number: Server.BeginSend (GetAuthenticationBytes ()' 0' 3 + Username.Length + Password.Length' SocketFlags.None' new AsyncCallback (this.OnSent)' Server);  
Magic Number,Org.Mentalis.Network.ProxySocket.Authentication,AuthUserPass,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\AuthUserPass.cs,OnSent,The following statement contains a magic number: try {  	Server.EndSend (ar);  	Buffer = new byte[2];  	Server.BeginReceive (Buffer' 0' 2' SocketFlags.None' new AsyncCallback (this.OnReceive)' Server);  } catch (Exception e) {  	CallBack (e);  }  
Magic Number,Org.Mentalis.Network.ProxySocket.Authentication,AuthUserPass,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\AuthUserPass.cs,OnSent,The following statement contains a magic number: try {  	Server.EndSend (ar);  	Buffer = new byte[2];  	Server.BeginReceive (Buffer' 0' 2' SocketFlags.None' new AsyncCallback (this.OnReceive)' Server);  } catch (Exception e) {  	CallBack (e);  }  
Magic Number,Org.Mentalis.Network.ProxySocket.Authentication,AuthUserPass,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\AuthUserPass.cs,OnSent,The following statement contains a magic number: Buffer = new byte[2];  
Magic Number,Org.Mentalis.Network.ProxySocket.Authentication,AuthUserPass,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\AuthUserPass.cs,OnSent,The following statement contains a magic number: Server.BeginReceive (Buffer' 0' 2' SocketFlags.None' new AsyncCallback (this.OnReceive)' Server);  
Magic Number,Org.Mentalis.Network.ProxySocket,ProxyException,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\ProxyException.cs,Socks5ToString,The following statement contains a magic number: switch (socks5Error) {  case 0:  	return "Connection succeeded.";  case 1:  	return "General SOCKS server failure.";  case 2:  	return "Connection not allowed by ruleset.";  case 3:  	return "Network unreachable.";  case 4:  	return "Host unreachable.";  case 5:  	return "Connection refused.";  case 6:  	return "TTL expired.";  case 7:  	return "Command not supported.";  case 8:  	return "Address type not supported.";  default:  	return "Unspecified SOCKS error.";  }  
Magic Number,Org.Mentalis.Network.ProxySocket,ProxyException,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\ProxyException.cs,Socks5ToString,The following statement contains a magic number: switch (socks5Error) {  case 0:  	return "Connection succeeded.";  case 1:  	return "General SOCKS server failure.";  case 2:  	return "Connection not allowed by ruleset.";  case 3:  	return "Network unreachable.";  case 4:  	return "Host unreachable.";  case 5:  	return "Connection refused.";  case 6:  	return "TTL expired.";  case 7:  	return "Command not supported.";  case 8:  	return "Address type not supported.";  default:  	return "Unspecified SOCKS error.";  }  
Magic Number,Org.Mentalis.Network.ProxySocket,ProxyException,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\ProxyException.cs,Socks5ToString,The following statement contains a magic number: switch (socks5Error) {  case 0:  	return "Connection succeeded.";  case 1:  	return "General SOCKS server failure.";  case 2:  	return "Connection not allowed by ruleset.";  case 3:  	return "Network unreachable.";  case 4:  	return "Host unreachable.";  case 5:  	return "Connection refused.";  case 6:  	return "TTL expired.";  case 7:  	return "Command not supported.";  case 8:  	return "Address type not supported.";  default:  	return "Unspecified SOCKS error.";  }  
Magic Number,Org.Mentalis.Network.ProxySocket,ProxyException,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\ProxyException.cs,Socks5ToString,The following statement contains a magic number: switch (socks5Error) {  case 0:  	return "Connection succeeded.";  case 1:  	return "General SOCKS server failure.";  case 2:  	return "Connection not allowed by ruleset.";  case 3:  	return "Network unreachable.";  case 4:  	return "Host unreachable.";  case 5:  	return "Connection refused.";  case 6:  	return "TTL expired.";  case 7:  	return "Command not supported.";  case 8:  	return "Address type not supported.";  default:  	return "Unspecified SOCKS error.";  }  
Magic Number,Org.Mentalis.Network.ProxySocket,ProxyException,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\ProxyException.cs,Socks5ToString,The following statement contains a magic number: switch (socks5Error) {  case 0:  	return "Connection succeeded.";  case 1:  	return "General SOCKS server failure.";  case 2:  	return "Connection not allowed by ruleset.";  case 3:  	return "Network unreachable.";  case 4:  	return "Host unreachable.";  case 5:  	return "Connection refused.";  case 6:  	return "TTL expired.";  case 7:  	return "Command not supported.";  case 8:  	return "Address type not supported.";  default:  	return "Unspecified SOCKS error.";  }  
Magic Number,Org.Mentalis.Network.ProxySocket,ProxyException,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\ProxyException.cs,Socks5ToString,The following statement contains a magic number: switch (socks5Error) {  case 0:  	return "Connection succeeded.";  case 1:  	return "General SOCKS server failure.";  case 2:  	return "Connection not allowed by ruleset.";  case 3:  	return "Network unreachable.";  case 4:  	return "Host unreachable.";  case 5:  	return "Connection refused.";  case 6:  	return "TTL expired.";  case 7:  	return "Command not supported.";  case 8:  	return "Address type not supported.";  default:  	return "Unspecified SOCKS error.";  }  
Magic Number,Org.Mentalis.Network.ProxySocket,ProxyException,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\ProxyException.cs,Socks5ToString,The following statement contains a magic number: switch (socks5Error) {  case 0:  	return "Connection succeeded.";  case 1:  	return "General SOCKS server failure.";  case 2:  	return "Connection not allowed by ruleset.";  case 3:  	return "Network unreachable.";  case 4:  	return "Host unreachable.";  case 5:  	return "Connection refused.";  case 6:  	return "TTL expired.";  case 7:  	return "Command not supported.";  case 8:  	return "Address type not supported.";  default:  	return "Unspecified SOCKS error.";  }  
Magic Number,Org.Mentalis.Network.ProxySocket,ProxySocket,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\ProxySocket.cs,Connect,The following statement contains a magic number: if (port <= 0 || port > 65535)  	throw new ArgumentException ("Invalid port.");  
Magic Number,Org.Mentalis.Network.ProxySocket,ProxySocket,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\ProxySocket.cs,BeginConnect,The following statement contains a magic number: if (port <= 0 || port > 65535)  	throw new ArgumentException ();  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,GetHostPortBytes,The following statement contains a magic number: if (port <= 0 || port > 65535)  	throw new ArgumentException ();  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,GetHostPortBytes,The following statement contains a magic number: connect [0] = 4;  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,GetHostPortBytes,The following statement contains a magic number: Array.Copy (PortToBytes (port)' 0' connect' 2' 2);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,GetHostPortBytes,The following statement contains a magic number: Array.Copy (PortToBytes (port)' 0' connect' 2' 2);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,GetHostPortBytes,The following statement contains a magic number: connect [4] = connect [5] = connect [6] = 0;  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,GetHostPortBytes,The following statement contains a magic number: connect [4] = connect [5] = connect [6] = 0;  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,GetHostPortBytes,The following statement contains a magic number: connect [4] = connect [5] = connect [6] = 0;  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,GetHostPortBytes,The following statement contains a magic number: connect [7] = 1;  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,GetHostPortBytes,The following statement contains a magic number: Array.Copy (Encoding.ASCII.GetBytes (Username)' 0' connect' 8' Username.Length);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,GetHostPortBytes,The following statement contains a magic number: connect [8 + Username.Length] = 0;  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,GetHostPortBytes,The following statement contains a magic number: Array.Copy (Encoding.ASCII.GetBytes (host)' 0' connect' 9 + Username.Length' host.Length);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,GetHostPortBytes,The following statement contains a magic number: connect [9 + Username.Length + host.Length] = 0;  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,GetEndPointBytes,The following statement contains a magic number: connect [0] = 4;  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,GetEndPointBytes,The following statement contains a magic number: Array.Copy (PortToBytes (remoteEP.Port)' 0' connect' 2' 2);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,GetEndPointBytes,The following statement contains a magic number: Array.Copy (PortToBytes (remoteEP.Port)' 0' connect' 2' 2);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,GetEndPointBytes,The following statement contains a magic number: Array.Copy (remoteEP.Address.GetAddressBytes ()' 0' connect' 4' 4);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,GetEndPointBytes,The following statement contains a magic number: Array.Copy (remoteEP.Address.GetAddressBytes ()' 0' connect' 4' 4);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,GetEndPointBytes,The following statement contains a magic number: Array.Copy (Encoding.ASCII.GetBytes (Username)' 0' connect' 8' Username.Length);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,GetEndPointBytes,The following statement contains a magic number: connect [8 + Username.Length] = 0;  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,Negotiate,The following statement contains a magic number: if (connect.Length < 2)  	throw new ArgumentException ();  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,Negotiate,The following statement contains a magic number: if (buffer [1] != 90) {  	Server.Close ();  	throw new ProxyException ("Negotiation failed.");  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,OnSent,The following statement contains a magic number: try {  	Buffer = new byte[8];  	Received = 0;  	Server.BeginReceive (Buffer' 0' Buffer.Length' SocketFlags.None' new AsyncCallback (this.OnReceive)' Server);  } catch (Exception e) {  	ProtocolComplete (e);  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,OnSent,The following statement contains a magic number: Buffer = new byte[8];  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,OnReceive,The following statement contains a magic number: try {  	int received = Server.EndReceive (ar);  	if (received <= 0) {  		ProtocolComplete (new SocketException ());  		return;  	}  	Received += received;  	if (Received == 8) {  		if (Buffer [1] == 90)  			ProtocolComplete (null);  		else {  			Server.Close ();  			ProtocolComplete (new ProxyException ("Negotiation failed."));  		}  	} else {  		Server.BeginReceive (Buffer' Received' Buffer.Length - Received' SocketFlags.None' new AsyncCallback (this.OnReceive)' Server);  	}  } catch (Exception e) {  	ProtocolComplete (e);  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,OnReceive,The following statement contains a magic number: try {  	int received = Server.EndReceive (ar);  	if (received <= 0) {  		ProtocolComplete (new SocketException ());  		return;  	}  	Received += received;  	if (Received == 8) {  		if (Buffer [1] == 90)  			ProtocolComplete (null);  		else {  			Server.Close ();  			ProtocolComplete (new ProxyException ("Negotiation failed."));  		}  	} else {  		Server.BeginReceive (Buffer' Received' Buffer.Length - Received' SocketFlags.None' new AsyncCallback (this.OnReceive)' Server);  	}  } catch (Exception e) {  	ProtocolComplete (e);  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,OnReceive,The following statement contains a magic number: if (Received == 8) {  	if (Buffer [1] == 90)  		ProtocolComplete (null);  	else {  		Server.Close ();  		ProtocolComplete (new ProxyException ("Negotiation failed."));  	}  } else {  	Server.BeginReceive (Buffer' Received' Buffer.Length - Received' SocketFlags.None' new AsyncCallback (this.OnReceive)' Server);  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,OnReceive,The following statement contains a magic number: if (Received == 8) {  	if (Buffer [1] == 90)  		ProtocolComplete (null);  	else {  		Server.Close ();  		ProtocolComplete (new ProxyException ("Negotiation failed."));  	}  } else {  	Server.BeginReceive (Buffer' Received' Buffer.Length - Received' SocketFlags.None' new AsyncCallback (this.OnReceive)' Server);  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks4Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks4Handler.cs,OnReceive,The following statement contains a magic number: if (Buffer [1] == 90)  	ProtocolComplete (null);  else {  	Server.Close ();  	ProtocolComplete (new ProxyException ("Negotiation failed."));  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,Authenticate,The following statement contains a magic number: Server.Send (new byte[] {  	5'  	2'  	0'  	2  });  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,Authenticate,The following statement contains a magic number: Server.Send (new byte[] {  	5'  	2'  	0'  	2  });  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,Authenticate,The following statement contains a magic number: Server.Send (new byte[] {  	5'  	2'  	0'  	2  });  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,Authenticate,The following statement contains a magic number: if (buffer [1] == 255)  	throw new ProxyException ("No authentication method accepted.");  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,Authenticate,The following statement contains a magic number: switch (buffer [1]) {  case 0:  	authenticate = new AuthNone (Server);  	break;  case 2:  	authenticate = new AuthUserPass (Server' Username' Password);  	break;  default:  	throw new ProtocolViolationException ();  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,GetHostPortBytes,The following statement contains a magic number: if (port <= 0 || port > 65535 || host.Length > 255)  	throw new ArgumentException ();  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,GetHostPortBytes,The following statement contains a magic number: if (port <= 0 || port > 65535 || host.Length > 255)  	throw new ArgumentException ();  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,GetHostPortBytes,The following statement contains a magic number: connect [0] = 5;  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,GetHostPortBytes,The following statement contains a magic number: connect [2] = 0;  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,GetHostPortBytes,The following statement contains a magic number: connect [3] = 3;  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,GetHostPortBytes,The following statement contains a magic number: connect [3] = 3;  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,GetHostPortBytes,The following statement contains a magic number: connect [4] = (byte)host.Length;  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,GetHostPortBytes,The following statement contains a magic number: Array.Copy (Encoding.ASCII.GetBytes (host)' 0' connect' 5' host.Length);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,GetHostPortBytes,The following statement contains a magic number: Array.Copy (PortToBytes (port)' 0' connect' host.Length + 5' 2);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,GetHostPortBytes,The following statement contains a magic number: Array.Copy (PortToBytes (port)' 0' connect' host.Length + 5' 2);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,GetEndPointBytes,The following statement contains a magic number: connect [0] = 5;  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,GetEndPointBytes,The following statement contains a magic number: connect [2] = 0;  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,GetEndPointBytes,The following statement contains a magic number: connect [3] = 1;  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,GetEndPointBytes,The following statement contains a magic number: Array.Copy (remoteEP.Address.GetAddressBytes ()' 0' connect' 4' 4);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,GetEndPointBytes,The following statement contains a magic number: Array.Copy (remoteEP.Address.GetAddressBytes ()' 0' connect' 4' 4);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,GetEndPointBytes,The following statement contains a magic number: Array.Copy (PortToBytes (remoteEP.Port)' 0' connect' 8' 2);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,GetEndPointBytes,The following statement contains a magic number: Array.Copy (PortToBytes (remoteEP.Port)' 0' connect' 8' 2);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,Negotiate,The following statement contains a magic number: switch (buffer [3]) {  case 1:  	buffer = ReadBytes (6);  	//IPv4 address with port  	break;  case 3:  	buffer = ReadBytes (1);  	buffer = ReadBytes (buffer [0] + 2);  	//domain name with port  	break;  case 4:  	buffer = ReadBytes (18);  	//IPv6 address with port  	break;  default:  	Server.Close ();  	throw new ProtocolViolationException ();  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,Negotiate,The following statement contains a magic number: switch (buffer [3]) {  case 1:  	buffer = ReadBytes (6);  	//IPv4 address with port  	break;  case 3:  	buffer = ReadBytes (1);  	buffer = ReadBytes (buffer [0] + 2);  	//domain name with port  	break;  case 4:  	buffer = ReadBytes (18);  	//IPv6 address with port  	break;  default:  	Server.Close ();  	throw new ProtocolViolationException ();  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,Negotiate,The following statement contains a magic number: switch (buffer [3]) {  case 1:  	buffer = ReadBytes (6);  	//IPv4 address with port  	break;  case 3:  	buffer = ReadBytes (1);  	buffer = ReadBytes (buffer [0] + 2);  	//domain name with port  	break;  case 4:  	buffer = ReadBytes (18);  	//IPv6 address with port  	break;  default:  	Server.Close ();  	throw new ProtocolViolationException ();  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,Negotiate,The following statement contains a magic number: switch (buffer [3]) {  case 1:  	buffer = ReadBytes (6);  	//IPv4 address with port  	break;  case 3:  	buffer = ReadBytes (1);  	buffer = ReadBytes (buffer [0] + 2);  	//domain name with port  	break;  case 4:  	buffer = ReadBytes (18);  	//IPv6 address with port  	break;  default:  	Server.Close ();  	throw new ProtocolViolationException ();  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,Negotiate,The following statement contains a magic number: switch (buffer [3]) {  case 1:  	buffer = ReadBytes (6);  	//IPv4 address with port  	break;  case 3:  	buffer = ReadBytes (1);  	buffer = ReadBytes (buffer [0] + 2);  	//domain name with port  	break;  case 4:  	buffer = ReadBytes (18);  	//IPv6 address with port  	break;  default:  	Server.Close ();  	throw new ProtocolViolationException ();  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,Negotiate,The following statement contains a magic number: switch (buffer [3]) {  case 1:  	buffer = ReadBytes (6);  	//IPv4 address with port  	break;  case 3:  	buffer = ReadBytes (1);  	buffer = ReadBytes (buffer [0] + 2);  	//domain name with port  	break;  case 4:  	buffer = ReadBytes (18);  	//IPv6 address with port  	break;  default:  	Server.Close ();  	throw new ProtocolViolationException ();  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,Negotiate,The following statement contains a magic number: buffer = ReadBytes (6);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,Negotiate,The following statement contains a magic number: buffer = ReadBytes (buffer [0] + 2);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,Negotiate,The following statement contains a magic number: buffer = ReadBytes (18);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnConnect,The following statement contains a magic number: try {  	Server.BeginSend (new byte[] {  		5'  		2'  		0'  		2  	}' 0' 4' SocketFlags.None' new AsyncCallback (this.OnAuthSent)' Server);  } catch (Exception e) {  	ProtocolComplete (e);  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnConnect,The following statement contains a magic number: try {  	Server.BeginSend (new byte[] {  		5'  		2'  		0'  		2  	}' 0' 4' SocketFlags.None' new AsyncCallback (this.OnAuthSent)' Server);  } catch (Exception e) {  	ProtocolComplete (e);  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnConnect,The following statement contains a magic number: try {  	Server.BeginSend (new byte[] {  		5'  		2'  		0'  		2  	}' 0' 4' SocketFlags.None' new AsyncCallback (this.OnAuthSent)' Server);  } catch (Exception e) {  	ProtocolComplete (e);  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnConnect,The following statement contains a magic number: try {  	Server.BeginSend (new byte[] {  		5'  		2'  		0'  		2  	}' 0' 4' SocketFlags.None' new AsyncCallback (this.OnAuthSent)' Server);  } catch (Exception e) {  	ProtocolComplete (e);  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnConnect,The following statement contains a magic number: Server.BeginSend (new byte[] {  	5'  	2'  	0'  	2  }' 0' 4' SocketFlags.None' new AsyncCallback (this.OnAuthSent)' Server);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnConnect,The following statement contains a magic number: Server.BeginSend (new byte[] {  	5'  	2'  	0'  	2  }' 0' 4' SocketFlags.None' new AsyncCallback (this.OnAuthSent)' Server);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnConnect,The following statement contains a magic number: Server.BeginSend (new byte[] {  	5'  	2'  	0'  	2  }' 0' 4' SocketFlags.None' new AsyncCallback (this.OnAuthSent)' Server);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnConnect,The following statement contains a magic number: Server.BeginSend (new byte[] {  	5'  	2'  	0'  	2  }' 0' 4' SocketFlags.None' new AsyncCallback (this.OnAuthSent)' Server);  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnAuthSent,The following statement contains a magic number: try {  	Buffer = new byte[1024];  	Received = 0;  	Server.BeginReceive (Buffer' 0' Buffer.Length' SocketFlags.None' new AsyncCallback (this.OnAuthReceive)' Server);  } catch (Exception e) {  	ProtocolComplete (e);  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnAuthSent,The following statement contains a magic number: Buffer = new byte[1024];  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnAuthReceive,The following statement contains a magic number: try {  	if (Received < 2) {  		Server.BeginReceive (Buffer' Received' Buffer.Length - Received' SocketFlags.None' new AsyncCallback (this.OnAuthReceive)' Server);  	} else {  		AuthMethod authenticate;  		switch (Buffer [1]) {  		case 0:  			authenticate = new AuthNone (Server);  			break;  		case 2:  			authenticate = new AuthUserPass (Server' Username' Password);  			break;  		default:  			ProtocolComplete (new SocketException ());  			return;  		}  		authenticate.BeginAuthenticate (new HandShakeComplete (this.OnAuthenticated));  	}  } catch (Exception e) {  	ProtocolComplete (e);  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnAuthReceive,The following statement contains a magic number: try {  	if (Received < 2) {  		Server.BeginReceive (Buffer' Received' Buffer.Length - Received' SocketFlags.None' new AsyncCallback (this.OnAuthReceive)' Server);  	} else {  		AuthMethod authenticate;  		switch (Buffer [1]) {  		case 0:  			authenticate = new AuthNone (Server);  			break;  		case 2:  			authenticate = new AuthUserPass (Server' Username' Password);  			break;  		default:  			ProtocolComplete (new SocketException ());  			return;  		}  		authenticate.BeginAuthenticate (new HandShakeComplete (this.OnAuthenticated));  	}  } catch (Exception e) {  	ProtocolComplete (e);  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnAuthReceive,The following statement contains a magic number: if (Received < 2) {  	Server.BeginReceive (Buffer' Received' Buffer.Length - Received' SocketFlags.None' new AsyncCallback (this.OnAuthReceive)' Server);  } else {  	AuthMethod authenticate;  	switch (Buffer [1]) {  	case 0:  		authenticate = new AuthNone (Server);  		break;  	case 2:  		authenticate = new AuthUserPass (Server' Username' Password);  		break;  	default:  		ProtocolComplete (new SocketException ());  		return;  	}  	authenticate.BeginAuthenticate (new HandShakeComplete (this.OnAuthenticated));  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnAuthReceive,The following statement contains a magic number: if (Received < 2) {  	Server.BeginReceive (Buffer' Received' Buffer.Length - Received' SocketFlags.None' new AsyncCallback (this.OnAuthReceive)' Server);  } else {  	AuthMethod authenticate;  	switch (Buffer [1]) {  	case 0:  		authenticate = new AuthNone (Server);  		break;  	case 2:  		authenticate = new AuthUserPass (Server' Username' Password);  		break;  	default:  		ProtocolComplete (new SocketException ());  		return;  	}  	authenticate.BeginAuthenticate (new HandShakeComplete (this.OnAuthenticated));  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnAuthReceive,The following statement contains a magic number: switch (Buffer [1]) {  case 0:  	authenticate = new AuthNone (Server);  	break;  case 2:  	authenticate = new AuthUserPass (Server' Username' Password);  	break;  default:  	ProtocolComplete (new SocketException ());  	return;  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnSent,The following statement contains a magic number: try {  	Buffer = new byte[5];  	Received = 0;  	Server.BeginReceive (Buffer' 0' Buffer.Length' SocketFlags.None' new AsyncCallback (this.OnReceive)' Server);  } catch (Exception e) {  	ProtocolComplete (e);  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,OnSent,The following statement contains a magic number: Buffer = new byte[5];  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,ProcessReply,The following statement contains a magic number: switch (buffer [3]) {  case 1:  	Buffer = new byte[5];  	//IPv4 address with port - 1 byte  	break;  case 3:  	Buffer = new byte[buffer [4] + 2];  	//domain name with port  	break;  case 4:  	buffer = new byte[17];  	//IPv6 address with port - 1 byte  	break;  default:  	throw new ProtocolViolationException ();  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,ProcessReply,The following statement contains a magic number: switch (buffer [3]) {  case 1:  	Buffer = new byte[5];  	//IPv4 address with port - 1 byte  	break;  case 3:  	Buffer = new byte[buffer [4] + 2];  	//domain name with port  	break;  case 4:  	buffer = new byte[17];  	//IPv6 address with port - 1 byte  	break;  default:  	throw new ProtocolViolationException ();  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,ProcessReply,The following statement contains a magic number: switch (buffer [3]) {  case 1:  	Buffer = new byte[5];  	//IPv4 address with port - 1 byte  	break;  case 3:  	Buffer = new byte[buffer [4] + 2];  	//domain name with port  	break;  case 4:  	buffer = new byte[17];  	//IPv6 address with port - 1 byte  	break;  default:  	throw new ProtocolViolationException ();  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,ProcessReply,The following statement contains a magic number: switch (buffer [3]) {  case 1:  	Buffer = new byte[5];  	//IPv4 address with port - 1 byte  	break;  case 3:  	Buffer = new byte[buffer [4] + 2];  	//domain name with port  	break;  case 4:  	buffer = new byte[17];  	//IPv6 address with port - 1 byte  	break;  default:  	throw new ProtocolViolationException ();  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,ProcessReply,The following statement contains a magic number: switch (buffer [3]) {  case 1:  	Buffer = new byte[5];  	//IPv4 address with port - 1 byte  	break;  case 3:  	Buffer = new byte[buffer [4] + 2];  	//domain name with port  	break;  case 4:  	buffer = new byte[17];  	//IPv6 address with port - 1 byte  	break;  default:  	throw new ProtocolViolationException ();  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,ProcessReply,The following statement contains a magic number: switch (buffer [3]) {  case 1:  	Buffer = new byte[5];  	//IPv4 address with port - 1 byte  	break;  case 3:  	Buffer = new byte[buffer [4] + 2];  	//domain name with port  	break;  case 4:  	buffer = new byte[17];  	//IPv6 address with port - 1 byte  	break;  default:  	throw new ProtocolViolationException ();  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,ProcessReply,The following statement contains a magic number: switch (buffer [3]) {  case 1:  	Buffer = new byte[5];  	//IPv4 address with port - 1 byte  	break;  case 3:  	Buffer = new byte[buffer [4] + 2];  	//domain name with port  	break;  case 4:  	buffer = new byte[17];  	//IPv6 address with port - 1 byte  	break;  default:  	throw new ProtocolViolationException ();  }  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,ProcessReply,The following statement contains a magic number: Buffer = new byte[5];  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,ProcessReply,The following statement contains a magic number: Buffer = new byte[buffer [4] + 2];  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,ProcessReply,The following statement contains a magic number: Buffer = new byte[buffer [4] + 2];  
Magic Number,Org.Mentalis.Network.ProxySocket,Socks5Handler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\Socks5Handler.cs,ProcessReply,The following statement contains a magic number: buffer = new byte[17];  
Magic Number,Org.Mentalis.Network.ProxySocket,SocksHandler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHandler.cs,PortToBytes,The following statement contains a magic number: ret [0] = (byte)(port / 256);  
Magic Number,Org.Mentalis.Network.ProxySocket,SocksHandler,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHandler.cs,PortToBytes,The following statement contains a magic number: ret [1] = (byte)(port % 256);  
Magic Number,GMap.NET.MapProviders,ArcGIS_DarbAE_Q2_2011_NAVTQ_Eng_V5_MapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\ArcGIS\ArcGIS_DarbAE_Q2_2011_NAVTQ_Eng_V5_MapProvider.cs,ArcGIS_DarbAE_Q2_2011_NAVTQ_Eng_V5_MapProvider,The following statement contains a magic number: MaxZoom = 12;  
Magic Number,GMap.NET.MapProviders,ArcGIS_DarbAE_Q2_2011_NAVTQ_Eng_V5_MapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\ArcGIS\ArcGIS_DarbAE_Q2_2011_NAVTQ_Eng_V5_MapProvider.cs,ArcGIS_DarbAE_Q2_2011_NAVTQ_Eng_V5_MapProvider,The following statement contains a magic number: Area = RectLatLng.FromLTRB (49.8846923723311' 28.0188609585523' 58.2247031977662' 21.154115956732);  
Magic Number,GMap.NET.MapProviders,ArcGIS_DarbAE_Q2_2011_NAVTQ_Eng_V5_MapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\ArcGIS\ArcGIS_DarbAE_Q2_2011_NAVTQ_Eng_V5_MapProvider.cs,ArcGIS_DarbAE_Q2_2011_NAVTQ_Eng_V5_MapProvider,The following statement contains a magic number: Area = RectLatLng.FromLTRB (49.8846923723311' 28.0188609585523' 58.2247031977662' 21.154115956732);  
Magic Number,GMap.NET.MapProviders,ArcGIS_DarbAE_Q2_2011_NAVTQ_Eng_V5_MapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\ArcGIS\ArcGIS_DarbAE_Q2_2011_NAVTQ_Eng_V5_MapProvider.cs,ArcGIS_DarbAE_Q2_2011_NAVTQ_Eng_V5_MapProvider,The following statement contains a magic number: Area = RectLatLng.FromLTRB (49.8846923723311' 28.0188609585523' 58.2247031977662' 21.154115956732);  
Magic Number,GMap.NET.MapProviders,ArcGIS_DarbAE_Q2_2011_NAVTQ_Eng_V5_MapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\ArcGIS\ArcGIS_DarbAE_Q2_2011_NAVTQ_Eng_V5_MapProvider.cs,ArcGIS_DarbAE_Q2_2011_NAVTQ_Eng_V5_MapProvider,The following statement contains a magic number: Area = RectLatLng.FromLTRB (49.8846923723311' 28.0188609585523' 58.2247031977662' 21.154115956732);  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: if (!init) {  	try {  		if (TryCorrectVersion) {  			#region -- get the version --  			string url = @"http://www.bing.com/maps";  			string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  			if (string.IsNullOrEmpty (html)) {  				html = GetContentUsingHttp (url);  				if (!string.IsNullOrEmpty (html)) {  					if (GMaps.Instance.UseUrlCache) {  						Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  					}  				}  			}  			if (!string.IsNullOrEmpty (html)) {  				#region -- match versions --  				Regex reg = new Regex ("tilegeneration:(\\d*)"' RegexOptions.IgnoreCase);  				Match mat = reg.Match (html);  				if (mat.Success) {  					GroupCollection gc = mat.Groups;  					int count = gc.Count;  					if (count == 2) {  						string ver = gc [1].Value;  						string old = GMapProviders.BingMap.Version;  						if (ver != old) {  							GMapProviders.BingMap.Version = ver;  							GMapProviders.BingSatelliteMap.Version = ver;  							GMapProviders.BingHybridMap.Version = ver;  							#if DEBUG  							Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' old: " + old + "' consider updating source");  							if (Debugger.IsAttached) {  								Thread.Sleep (5555);  							}  							#endif  						} else {  							Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' OK");  						}  					}  				}  				#endregion  			}  			#endregion  		}  		init = true;  		// try it only once   		#region -- try get default key --  		if (TryGetDefaultKey && string.IsNullOrEmpty (ClientKey)) {  			string keyUrl = "http://dev.virtualearth.net/webservices/v1/LoggingService/LoggingService.svc/Log?entry=0&fmt=1&type=3&group=MapControl&name=AJAX&mkt=en-us&auth=Akw4XWHH0ngzzB_4DmHOv_XByRBtX5qwLAS9RgRYDamxvLeIxRfSzmuvWFB9RF7d&jsonp=microsoftMapsNetworkCallback";  			// Bing Maps WPF Control  			// http://dev.virtualearth.net/webservices/v1/LoggingService/LoggingService.svc/Log?entry=0&auth=Akw4XWHH0ngzzB_4DmHOv_XByRBtX5qwLAS9RgRYDamxvLeIxRfSzmuvWFB9RF7d&fmt=1&type=3&group=MapControl&name=WPF&version=1.0.0.0&session=00000000-0000-0000-0000-000000000000&mkt=en-US  			string keyResponse = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent ("BingLoggingServiceV1"' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  			if (string.IsNullOrEmpty (keyResponse)) {  				keyResponse = GetContentUsingHttp (keyUrl);  				if (!string.IsNullOrEmpty (keyResponse) && keyResponse.Contains ("ValidCredentials")) {  					if (GMaps.Instance.UseUrlCache) {  						Cache.Instance.SaveContent ("BingLoggingServiceV1"' CacheType.UrlCache' keyResponse);  					}  				}  			}  			if (!string.IsNullOrEmpty (keyResponse) && keyResponse.Contains ("sessionId") && keyResponse.Contains ("ValidCredentials")) {  				// microsoftMapsNetworkCallback({"sessionId" : "xxx"' "authenticationResultCode" : "ValidCredentials"})  				ClientKey = keyResponse.Split (''') [0].Split (':') [1].Replace ("\""' string.Empty).Replace (" "' string.Empty);  				Debug.WriteLine ("GMapProviders.BingMap.ClientKey: " + ClientKey);  			}  		}  		#endregion  	} catch (Exception ex) {  		Debug.WriteLine ("TryCorrectBingVersions failed: " + ex.ToString ());  	}  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: if (!init) {  	try {  		if (TryCorrectVersion) {  			#region -- get the version --  			string url = @"http://www.bing.com/maps";  			string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  			if (string.IsNullOrEmpty (html)) {  				html = GetContentUsingHttp (url);  				if (!string.IsNullOrEmpty (html)) {  					if (GMaps.Instance.UseUrlCache) {  						Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  					}  				}  			}  			if (!string.IsNullOrEmpty (html)) {  				#region -- match versions --  				Regex reg = new Regex ("tilegeneration:(\\d*)"' RegexOptions.IgnoreCase);  				Match mat = reg.Match (html);  				if (mat.Success) {  					GroupCollection gc = mat.Groups;  					int count = gc.Count;  					if (count == 2) {  						string ver = gc [1].Value;  						string old = GMapProviders.BingMap.Version;  						if (ver != old) {  							GMapProviders.BingMap.Version = ver;  							GMapProviders.BingSatelliteMap.Version = ver;  							GMapProviders.BingHybridMap.Version = ver;  							#if DEBUG  							Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' old: " + old + "' consider updating source");  							if (Debugger.IsAttached) {  								Thread.Sleep (5555);  							}  							#endif  						} else {  							Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' OK");  						}  					}  				}  				#endregion  			}  			#endregion  		}  		init = true;  		// try it only once   		#region -- try get default key --  		if (TryGetDefaultKey && string.IsNullOrEmpty (ClientKey)) {  			string keyUrl = "http://dev.virtualearth.net/webservices/v1/LoggingService/LoggingService.svc/Log?entry=0&fmt=1&type=3&group=MapControl&name=AJAX&mkt=en-us&auth=Akw4XWHH0ngzzB_4DmHOv_XByRBtX5qwLAS9RgRYDamxvLeIxRfSzmuvWFB9RF7d&jsonp=microsoftMapsNetworkCallback";  			// Bing Maps WPF Control  			// http://dev.virtualearth.net/webservices/v1/LoggingService/LoggingService.svc/Log?entry=0&auth=Akw4XWHH0ngzzB_4DmHOv_XByRBtX5qwLAS9RgRYDamxvLeIxRfSzmuvWFB9RF7d&fmt=1&type=3&group=MapControl&name=WPF&version=1.0.0.0&session=00000000-0000-0000-0000-000000000000&mkt=en-US  			string keyResponse = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent ("BingLoggingServiceV1"' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  			if (string.IsNullOrEmpty (keyResponse)) {  				keyResponse = GetContentUsingHttp (keyUrl);  				if (!string.IsNullOrEmpty (keyResponse) && keyResponse.Contains ("ValidCredentials")) {  					if (GMaps.Instance.UseUrlCache) {  						Cache.Instance.SaveContent ("BingLoggingServiceV1"' CacheType.UrlCache' keyResponse);  					}  				}  			}  			if (!string.IsNullOrEmpty (keyResponse) && keyResponse.Contains ("sessionId") && keyResponse.Contains ("ValidCredentials")) {  				// microsoftMapsNetworkCallback({"sessionId" : "xxx"' "authenticationResultCode" : "ValidCredentials"})  				ClientKey = keyResponse.Split (''') [0].Split (':') [1].Replace ("\""' string.Empty).Replace (" "' string.Empty);  				Debug.WriteLine ("GMapProviders.BingMap.ClientKey: " + ClientKey);  			}  		}  		#endregion  	} catch (Exception ex) {  		Debug.WriteLine ("TryCorrectBingVersions failed: " + ex.ToString ());  	}  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: if (!init) {  	try {  		if (TryCorrectVersion) {  			#region -- get the version --  			string url = @"http://www.bing.com/maps";  			string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  			if (string.IsNullOrEmpty (html)) {  				html = GetContentUsingHttp (url);  				if (!string.IsNullOrEmpty (html)) {  					if (GMaps.Instance.UseUrlCache) {  						Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  					}  				}  			}  			if (!string.IsNullOrEmpty (html)) {  				#region -- match versions --  				Regex reg = new Regex ("tilegeneration:(\\d*)"' RegexOptions.IgnoreCase);  				Match mat = reg.Match (html);  				if (mat.Success) {  					GroupCollection gc = mat.Groups;  					int count = gc.Count;  					if (count == 2) {  						string ver = gc [1].Value;  						string old = GMapProviders.BingMap.Version;  						if (ver != old) {  							GMapProviders.BingMap.Version = ver;  							GMapProviders.BingSatelliteMap.Version = ver;  							GMapProviders.BingHybridMap.Version = ver;  							#if DEBUG  							Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' old: " + old + "' consider updating source");  							if (Debugger.IsAttached) {  								Thread.Sleep (5555);  							}  							#endif  						} else {  							Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' OK");  						}  					}  				}  				#endregion  			}  			#endregion  		}  		init = true;  		// try it only once   		#region -- try get default key --  		if (TryGetDefaultKey && string.IsNullOrEmpty (ClientKey)) {  			string keyUrl = "http://dev.virtualearth.net/webservices/v1/LoggingService/LoggingService.svc/Log?entry=0&fmt=1&type=3&group=MapControl&name=AJAX&mkt=en-us&auth=Akw4XWHH0ngzzB_4DmHOv_XByRBtX5qwLAS9RgRYDamxvLeIxRfSzmuvWFB9RF7d&jsonp=microsoftMapsNetworkCallback";  			// Bing Maps WPF Control  			// http://dev.virtualearth.net/webservices/v1/LoggingService/LoggingService.svc/Log?entry=0&auth=Akw4XWHH0ngzzB_4DmHOv_XByRBtX5qwLAS9RgRYDamxvLeIxRfSzmuvWFB9RF7d&fmt=1&type=3&group=MapControl&name=WPF&version=1.0.0.0&session=00000000-0000-0000-0000-000000000000&mkt=en-US  			string keyResponse = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent ("BingLoggingServiceV1"' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  			if (string.IsNullOrEmpty (keyResponse)) {  				keyResponse = GetContentUsingHttp (keyUrl);  				if (!string.IsNullOrEmpty (keyResponse) && keyResponse.Contains ("ValidCredentials")) {  					if (GMaps.Instance.UseUrlCache) {  						Cache.Instance.SaveContent ("BingLoggingServiceV1"' CacheType.UrlCache' keyResponse);  					}  				}  			}  			if (!string.IsNullOrEmpty (keyResponse) && keyResponse.Contains ("sessionId") && keyResponse.Contains ("ValidCredentials")) {  				// microsoftMapsNetworkCallback({"sessionId" : "xxx"' "authenticationResultCode" : "ValidCredentials"})  				ClientKey = keyResponse.Split (''') [0].Split (':') [1].Replace ("\""' string.Empty).Replace (" "' string.Empty);  				Debug.WriteLine ("GMapProviders.BingMap.ClientKey: " + ClientKey);  			}  		}  		#endregion  	} catch (Exception ex) {  		Debug.WriteLine ("TryCorrectBingVersions failed: " + ex.ToString ());  	}  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: if (!init) {  	try {  		if (TryCorrectVersion) {  			#region -- get the version --  			string url = @"http://www.bing.com/maps";  			string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  			if (string.IsNullOrEmpty (html)) {  				html = GetContentUsingHttp (url);  				if (!string.IsNullOrEmpty (html)) {  					if (GMaps.Instance.UseUrlCache) {  						Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  					}  				}  			}  			if (!string.IsNullOrEmpty (html)) {  				#region -- match versions --  				Regex reg = new Regex ("tilegeneration:(\\d*)"' RegexOptions.IgnoreCase);  				Match mat = reg.Match (html);  				if (mat.Success) {  					GroupCollection gc = mat.Groups;  					int count = gc.Count;  					if (count == 2) {  						string ver = gc [1].Value;  						string old = GMapProviders.BingMap.Version;  						if (ver != old) {  							GMapProviders.BingMap.Version = ver;  							GMapProviders.BingSatelliteMap.Version = ver;  							GMapProviders.BingHybridMap.Version = ver;  							#if DEBUG  							Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' old: " + old + "' consider updating source");  							if (Debugger.IsAttached) {  								Thread.Sleep (5555);  							}  							#endif  						} else {  							Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' OK");  						}  					}  				}  				#endregion  			}  			#endregion  		}  		init = true;  		// try it only once   		#region -- try get default key --  		if (TryGetDefaultKey && string.IsNullOrEmpty (ClientKey)) {  			string keyUrl = "http://dev.virtualearth.net/webservices/v1/LoggingService/LoggingService.svc/Log?entry=0&fmt=1&type=3&group=MapControl&name=AJAX&mkt=en-us&auth=Akw4XWHH0ngzzB_4DmHOv_XByRBtX5qwLAS9RgRYDamxvLeIxRfSzmuvWFB9RF7d&jsonp=microsoftMapsNetworkCallback";  			// Bing Maps WPF Control  			// http://dev.virtualearth.net/webservices/v1/LoggingService/LoggingService.svc/Log?entry=0&auth=Akw4XWHH0ngzzB_4DmHOv_XByRBtX5qwLAS9RgRYDamxvLeIxRfSzmuvWFB9RF7d&fmt=1&type=3&group=MapControl&name=WPF&version=1.0.0.0&session=00000000-0000-0000-0000-000000000000&mkt=en-US  			string keyResponse = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent ("BingLoggingServiceV1"' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  			if (string.IsNullOrEmpty (keyResponse)) {  				keyResponse = GetContentUsingHttp (keyUrl);  				if (!string.IsNullOrEmpty (keyResponse) && keyResponse.Contains ("ValidCredentials")) {  					if (GMaps.Instance.UseUrlCache) {  						Cache.Instance.SaveContent ("BingLoggingServiceV1"' CacheType.UrlCache' keyResponse);  					}  				}  			}  			if (!string.IsNullOrEmpty (keyResponse) && keyResponse.Contains ("sessionId") && keyResponse.Contains ("ValidCredentials")) {  				// microsoftMapsNetworkCallback({"sessionId" : "xxx"' "authenticationResultCode" : "ValidCredentials"})  				ClientKey = keyResponse.Split (''') [0].Split (':') [1].Replace ("\""' string.Empty).Replace (" "' string.Empty);  				Debug.WriteLine ("GMapProviders.BingMap.ClientKey: " + ClientKey);  			}  		}  		#endregion  	} catch (Exception ex) {  		Debug.WriteLine ("TryCorrectBingVersions failed: " + ex.ToString ());  	}  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: try {  	if (TryCorrectVersion) {  		#region -- get the version --  		string url = @"http://www.bing.com/maps";  		string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  		if (string.IsNullOrEmpty (html)) {  			html = GetContentUsingHttp (url);  			if (!string.IsNullOrEmpty (html)) {  				if (GMaps.Instance.UseUrlCache) {  					Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  				}  			}  		}  		if (!string.IsNullOrEmpty (html)) {  			#region -- match versions --  			Regex reg = new Regex ("tilegeneration:(\\d*)"' RegexOptions.IgnoreCase);  			Match mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count == 2) {  					string ver = gc [1].Value;  					string old = GMapProviders.BingMap.Version;  					if (ver != old) {  						GMapProviders.BingMap.Version = ver;  						GMapProviders.BingSatelliteMap.Version = ver;  						GMapProviders.BingHybridMap.Version = ver;  						#if DEBUG  						Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' old: " + old + "' consider updating source");  						if (Debugger.IsAttached) {  							Thread.Sleep (5555);  						}  						#endif  					} else {  						Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' OK");  					}  				}  			}  			#endregion  		}  		#endregion  	}  	init = true;  	// try it only once   	#region -- try get default key --  	if (TryGetDefaultKey && string.IsNullOrEmpty (ClientKey)) {  		string keyUrl = "http://dev.virtualearth.net/webservices/v1/LoggingService/LoggingService.svc/Log?entry=0&fmt=1&type=3&group=MapControl&name=AJAX&mkt=en-us&auth=Akw4XWHH0ngzzB_4DmHOv_XByRBtX5qwLAS9RgRYDamxvLeIxRfSzmuvWFB9RF7d&jsonp=microsoftMapsNetworkCallback";  		// Bing Maps WPF Control  		// http://dev.virtualearth.net/webservices/v1/LoggingService/LoggingService.svc/Log?entry=0&auth=Akw4XWHH0ngzzB_4DmHOv_XByRBtX5qwLAS9RgRYDamxvLeIxRfSzmuvWFB9RF7d&fmt=1&type=3&group=MapControl&name=WPF&version=1.0.0.0&session=00000000-0000-0000-0000-000000000000&mkt=en-US  		string keyResponse = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent ("BingLoggingServiceV1"' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  		if (string.IsNullOrEmpty (keyResponse)) {  			keyResponse = GetContentUsingHttp (keyUrl);  			if (!string.IsNullOrEmpty (keyResponse) && keyResponse.Contains ("ValidCredentials")) {  				if (GMaps.Instance.UseUrlCache) {  					Cache.Instance.SaveContent ("BingLoggingServiceV1"' CacheType.UrlCache' keyResponse);  				}  			}  		}  		if (!string.IsNullOrEmpty (keyResponse) && keyResponse.Contains ("sessionId") && keyResponse.Contains ("ValidCredentials")) {  			// microsoftMapsNetworkCallback({"sessionId" : "xxx"' "authenticationResultCode" : "ValidCredentials"})  			ClientKey = keyResponse.Split (''') [0].Split (':') [1].Replace ("\""' string.Empty).Replace (" "' string.Empty);  			Debug.WriteLine ("GMapProviders.BingMap.ClientKey: " + ClientKey);  		}  	}  	#endregion  } catch (Exception ex) {  	Debug.WriteLine ("TryCorrectBingVersions failed: " + ex.ToString ());  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: try {  	if (TryCorrectVersion) {  		#region -- get the version --  		string url = @"http://www.bing.com/maps";  		string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  		if (string.IsNullOrEmpty (html)) {  			html = GetContentUsingHttp (url);  			if (!string.IsNullOrEmpty (html)) {  				if (GMaps.Instance.UseUrlCache) {  					Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  				}  			}  		}  		if (!string.IsNullOrEmpty (html)) {  			#region -- match versions --  			Regex reg = new Regex ("tilegeneration:(\\d*)"' RegexOptions.IgnoreCase);  			Match mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count == 2) {  					string ver = gc [1].Value;  					string old = GMapProviders.BingMap.Version;  					if (ver != old) {  						GMapProviders.BingMap.Version = ver;  						GMapProviders.BingSatelliteMap.Version = ver;  						GMapProviders.BingHybridMap.Version = ver;  						#if DEBUG  						Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' old: " + old + "' consider updating source");  						if (Debugger.IsAttached) {  							Thread.Sleep (5555);  						}  						#endif  					} else {  						Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' OK");  					}  				}  			}  			#endregion  		}  		#endregion  	}  	init = true;  	// try it only once   	#region -- try get default key --  	if (TryGetDefaultKey && string.IsNullOrEmpty (ClientKey)) {  		string keyUrl = "http://dev.virtualearth.net/webservices/v1/LoggingService/LoggingService.svc/Log?entry=0&fmt=1&type=3&group=MapControl&name=AJAX&mkt=en-us&auth=Akw4XWHH0ngzzB_4DmHOv_XByRBtX5qwLAS9RgRYDamxvLeIxRfSzmuvWFB9RF7d&jsonp=microsoftMapsNetworkCallback";  		// Bing Maps WPF Control  		// http://dev.virtualearth.net/webservices/v1/LoggingService/LoggingService.svc/Log?entry=0&auth=Akw4XWHH0ngzzB_4DmHOv_XByRBtX5qwLAS9RgRYDamxvLeIxRfSzmuvWFB9RF7d&fmt=1&type=3&group=MapControl&name=WPF&version=1.0.0.0&session=00000000-0000-0000-0000-000000000000&mkt=en-US  		string keyResponse = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent ("BingLoggingServiceV1"' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  		if (string.IsNullOrEmpty (keyResponse)) {  			keyResponse = GetContentUsingHttp (keyUrl);  			if (!string.IsNullOrEmpty (keyResponse) && keyResponse.Contains ("ValidCredentials")) {  				if (GMaps.Instance.UseUrlCache) {  					Cache.Instance.SaveContent ("BingLoggingServiceV1"' CacheType.UrlCache' keyResponse);  				}  			}  		}  		if (!string.IsNullOrEmpty (keyResponse) && keyResponse.Contains ("sessionId") && keyResponse.Contains ("ValidCredentials")) {  			// microsoftMapsNetworkCallback({"sessionId" : "xxx"' "authenticationResultCode" : "ValidCredentials"})  			ClientKey = keyResponse.Split (''') [0].Split (':') [1].Replace ("\""' string.Empty).Replace (" "' string.Empty);  			Debug.WriteLine ("GMapProviders.BingMap.ClientKey: " + ClientKey);  		}  	}  	#endregion  } catch (Exception ex) {  	Debug.WriteLine ("TryCorrectBingVersions failed: " + ex.ToString ());  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: try {  	if (TryCorrectVersion) {  		#region -- get the version --  		string url = @"http://www.bing.com/maps";  		string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  		if (string.IsNullOrEmpty (html)) {  			html = GetContentUsingHttp (url);  			if (!string.IsNullOrEmpty (html)) {  				if (GMaps.Instance.UseUrlCache) {  					Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  				}  			}  		}  		if (!string.IsNullOrEmpty (html)) {  			#region -- match versions --  			Regex reg = new Regex ("tilegeneration:(\\d*)"' RegexOptions.IgnoreCase);  			Match mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count == 2) {  					string ver = gc [1].Value;  					string old = GMapProviders.BingMap.Version;  					if (ver != old) {  						GMapProviders.BingMap.Version = ver;  						GMapProviders.BingSatelliteMap.Version = ver;  						GMapProviders.BingHybridMap.Version = ver;  						#if DEBUG  						Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' old: " + old + "' consider updating source");  						if (Debugger.IsAttached) {  							Thread.Sleep (5555);  						}  						#endif  					} else {  						Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' OK");  					}  				}  			}  			#endregion  		}  		#endregion  	}  	init = true;  	// try it only once   	#region -- try get default key --  	if (TryGetDefaultKey && string.IsNullOrEmpty (ClientKey)) {  		string keyUrl = "http://dev.virtualearth.net/webservices/v1/LoggingService/LoggingService.svc/Log?entry=0&fmt=1&type=3&group=MapControl&name=AJAX&mkt=en-us&auth=Akw4XWHH0ngzzB_4DmHOv_XByRBtX5qwLAS9RgRYDamxvLeIxRfSzmuvWFB9RF7d&jsonp=microsoftMapsNetworkCallback";  		// Bing Maps WPF Control  		// http://dev.virtualearth.net/webservices/v1/LoggingService/LoggingService.svc/Log?entry=0&auth=Akw4XWHH0ngzzB_4DmHOv_XByRBtX5qwLAS9RgRYDamxvLeIxRfSzmuvWFB9RF7d&fmt=1&type=3&group=MapControl&name=WPF&version=1.0.0.0&session=00000000-0000-0000-0000-000000000000&mkt=en-US  		string keyResponse = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent ("BingLoggingServiceV1"' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  		if (string.IsNullOrEmpty (keyResponse)) {  			keyResponse = GetContentUsingHttp (keyUrl);  			if (!string.IsNullOrEmpty (keyResponse) && keyResponse.Contains ("ValidCredentials")) {  				if (GMaps.Instance.UseUrlCache) {  					Cache.Instance.SaveContent ("BingLoggingServiceV1"' CacheType.UrlCache' keyResponse);  				}  			}  		}  		if (!string.IsNullOrEmpty (keyResponse) && keyResponse.Contains ("sessionId") && keyResponse.Contains ("ValidCredentials")) {  			// microsoftMapsNetworkCallback({"sessionId" : "xxx"' "authenticationResultCode" : "ValidCredentials"})  			ClientKey = keyResponse.Split (''') [0].Split (':') [1].Replace ("\""' string.Empty).Replace (" "' string.Empty);  			Debug.WriteLine ("GMapProviders.BingMap.ClientKey: " + ClientKey);  		}  	}  	#endregion  } catch (Exception ex) {  	Debug.WriteLine ("TryCorrectBingVersions failed: " + ex.ToString ());  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: try {  	if (TryCorrectVersion) {  		#region -- get the version --  		string url = @"http://www.bing.com/maps";  		string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  		if (string.IsNullOrEmpty (html)) {  			html = GetContentUsingHttp (url);  			if (!string.IsNullOrEmpty (html)) {  				if (GMaps.Instance.UseUrlCache) {  					Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  				}  			}  		}  		if (!string.IsNullOrEmpty (html)) {  			#region -- match versions --  			Regex reg = new Regex ("tilegeneration:(\\d*)"' RegexOptions.IgnoreCase);  			Match mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count == 2) {  					string ver = gc [1].Value;  					string old = GMapProviders.BingMap.Version;  					if (ver != old) {  						GMapProviders.BingMap.Version = ver;  						GMapProviders.BingSatelliteMap.Version = ver;  						GMapProviders.BingHybridMap.Version = ver;  						#if DEBUG  						Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' old: " + old + "' consider updating source");  						if (Debugger.IsAttached) {  							Thread.Sleep (5555);  						}  						#endif  					} else {  						Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' OK");  					}  				}  			}  			#endregion  		}  		#endregion  	}  	init = true;  	// try it only once   	#region -- try get default key --  	if (TryGetDefaultKey && string.IsNullOrEmpty (ClientKey)) {  		string keyUrl = "http://dev.virtualearth.net/webservices/v1/LoggingService/LoggingService.svc/Log?entry=0&fmt=1&type=3&group=MapControl&name=AJAX&mkt=en-us&auth=Akw4XWHH0ngzzB_4DmHOv_XByRBtX5qwLAS9RgRYDamxvLeIxRfSzmuvWFB9RF7d&jsonp=microsoftMapsNetworkCallback";  		// Bing Maps WPF Control  		// http://dev.virtualearth.net/webservices/v1/LoggingService/LoggingService.svc/Log?entry=0&auth=Akw4XWHH0ngzzB_4DmHOv_XByRBtX5qwLAS9RgRYDamxvLeIxRfSzmuvWFB9RF7d&fmt=1&type=3&group=MapControl&name=WPF&version=1.0.0.0&session=00000000-0000-0000-0000-000000000000&mkt=en-US  		string keyResponse = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent ("BingLoggingServiceV1"' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  		if (string.IsNullOrEmpty (keyResponse)) {  			keyResponse = GetContentUsingHttp (keyUrl);  			if (!string.IsNullOrEmpty (keyResponse) && keyResponse.Contains ("ValidCredentials")) {  				if (GMaps.Instance.UseUrlCache) {  					Cache.Instance.SaveContent ("BingLoggingServiceV1"' CacheType.UrlCache' keyResponse);  				}  			}  		}  		if (!string.IsNullOrEmpty (keyResponse) && keyResponse.Contains ("sessionId") && keyResponse.Contains ("ValidCredentials")) {  			// microsoftMapsNetworkCallback({"sessionId" : "xxx"' "authenticationResultCode" : "ValidCredentials"})  			ClientKey = keyResponse.Split (''') [0].Split (':') [1].Replace ("\""' string.Empty).Replace (" "' string.Empty);  			Debug.WriteLine ("GMapProviders.BingMap.ClientKey: " + ClientKey);  		}  	}  	#endregion  } catch (Exception ex) {  	Debug.WriteLine ("TryCorrectBingVersions failed: " + ex.ToString ());  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: if (TryCorrectVersion) {  	#region -- get the version --  	string url = @"http://www.bing.com/maps";  	string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  	if (string.IsNullOrEmpty (html)) {  		html = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (html)) {  			if (GMaps.Instance.UseUrlCache) {  				Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  			}  		}  	}  	if (!string.IsNullOrEmpty (html)) {  		#region -- match versions --  		Regex reg = new Regex ("tilegeneration:(\\d*)"' RegexOptions.IgnoreCase);  		Match mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count == 2) {  				string ver = gc [1].Value;  				string old = GMapProviders.BingMap.Version;  				if (ver != old) {  					GMapProviders.BingMap.Version = ver;  					GMapProviders.BingSatelliteMap.Version = ver;  					GMapProviders.BingHybridMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' old: " + old + "' consider updating source");  					if (Debugger.IsAttached) {  						Thread.Sleep (5555);  					}  					#endif  				} else {  					Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' OK");  				}  			}  		}  		#endregion  	}  	#endregion  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: if (TryCorrectVersion) {  	#region -- get the version --  	string url = @"http://www.bing.com/maps";  	string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  	if (string.IsNullOrEmpty (html)) {  		html = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (html)) {  			if (GMaps.Instance.UseUrlCache) {  				Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  			}  		}  	}  	if (!string.IsNullOrEmpty (html)) {  		#region -- match versions --  		Regex reg = new Regex ("tilegeneration:(\\d*)"' RegexOptions.IgnoreCase);  		Match mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count == 2) {  				string ver = gc [1].Value;  				string old = GMapProviders.BingMap.Version;  				if (ver != old) {  					GMapProviders.BingMap.Version = ver;  					GMapProviders.BingSatelliteMap.Version = ver;  					GMapProviders.BingHybridMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' old: " + old + "' consider updating source");  					if (Debugger.IsAttached) {  						Thread.Sleep (5555);  					}  					#endif  				} else {  					Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' OK");  				}  			}  		}  		#endregion  	}  	#endregion  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: if (TryCorrectVersion) {  	#region -- get the version --  	string url = @"http://www.bing.com/maps";  	string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  	if (string.IsNullOrEmpty (html)) {  		html = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (html)) {  			if (GMaps.Instance.UseUrlCache) {  				Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  			}  		}  	}  	if (!string.IsNullOrEmpty (html)) {  		#region -- match versions --  		Regex reg = new Regex ("tilegeneration:(\\d*)"' RegexOptions.IgnoreCase);  		Match mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count == 2) {  				string ver = gc [1].Value;  				string old = GMapProviders.BingMap.Version;  				if (ver != old) {  					GMapProviders.BingMap.Version = ver;  					GMapProviders.BingSatelliteMap.Version = ver;  					GMapProviders.BingHybridMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' old: " + old + "' consider updating source");  					if (Debugger.IsAttached) {  						Thread.Sleep (5555);  					}  					#endif  				} else {  					Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' OK");  				}  			}  		}  		#endregion  	}  	#endregion  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: if (!string.IsNullOrEmpty (html)) {  	#region -- match versions --  	Regex reg = new Regex ("tilegeneration:(\\d*)"' RegexOptions.IgnoreCase);  	Match mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count == 2) {  			string ver = gc [1].Value;  			string old = GMapProviders.BingMap.Version;  			if (ver != old) {  				GMapProviders.BingMap.Version = ver;  				GMapProviders.BingSatelliteMap.Version = ver;  				GMapProviders.BingHybridMap.Version = ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' old: " + old + "' consider updating source");  				if (Debugger.IsAttached) {  					Thread.Sleep (5555);  				}  				#endif  			} else {  				Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' OK");  			}  		}  	}  	#endregion  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: if (!string.IsNullOrEmpty (html)) {  	#region -- match versions --  	Regex reg = new Regex ("tilegeneration:(\\d*)"' RegexOptions.IgnoreCase);  	Match mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count == 2) {  			string ver = gc [1].Value;  			string old = GMapProviders.BingMap.Version;  			if (ver != old) {  				GMapProviders.BingMap.Version = ver;  				GMapProviders.BingSatelliteMap.Version = ver;  				GMapProviders.BingHybridMap.Version = ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' old: " + old + "' consider updating source");  				if (Debugger.IsAttached) {  					Thread.Sleep (5555);  				}  				#endif  			} else {  				Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' OK");  			}  		}  	}  	#endregion  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: if (mat.Success) {  	GroupCollection gc = mat.Groups;  	int count = gc.Count;  	if (count == 2) {  		string ver = gc [1].Value;  		string old = GMapProviders.BingMap.Version;  		if (ver != old) {  			GMapProviders.BingMap.Version = ver;  			GMapProviders.BingSatelliteMap.Version = ver;  			GMapProviders.BingHybridMap.Version = ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' old: " + old + "' consider updating source");  			if (Debugger.IsAttached) {  				Thread.Sleep (5555);  			}  			#endif  		} else {  			Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' OK");  		}  	}  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: if (mat.Success) {  	GroupCollection gc = mat.Groups;  	int count = gc.Count;  	if (count == 2) {  		string ver = gc [1].Value;  		string old = GMapProviders.BingMap.Version;  		if (ver != old) {  			GMapProviders.BingMap.Version = ver;  			GMapProviders.BingSatelliteMap.Version = ver;  			GMapProviders.BingHybridMap.Version = ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' old: " + old + "' consider updating source");  			if (Debugger.IsAttached) {  				Thread.Sleep (5555);  			}  			#endif  		} else {  			Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' OK");  		}  	}  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: if (count == 2) {  	string ver = gc [1].Value;  	string old = GMapProviders.BingMap.Version;  	if (ver != old) {  		GMapProviders.BingMap.Version = ver;  		GMapProviders.BingSatelliteMap.Version = ver;  		GMapProviders.BingHybridMap.Version = ver;  		#if DEBUG  		Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' old: " + old + "' consider updating source");  		if (Debugger.IsAttached) {  			Thread.Sleep (5555);  		}  		#endif  	} else {  		Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' OK");  	}  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: if (count == 2) {  	string ver = gc [1].Value;  	string old = GMapProviders.BingMap.Version;  	if (ver != old) {  		GMapProviders.BingMap.Version = ver;  		GMapProviders.BingSatelliteMap.Version = ver;  		GMapProviders.BingHybridMap.Version = ver;  		#if DEBUG  		Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' old: " + old + "' consider updating source");  		if (Debugger.IsAttached) {  			Thread.Sleep (5555);  		}  		#endif  	} else {  		Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' OK");  	}  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: if (ver != old) {  	GMapProviders.BingMap.Version = ver;  	GMapProviders.BingSatelliteMap.Version = ver;  	GMapProviders.BingHybridMap.Version = ver;  	#if DEBUG  	Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' old: " + old + "' consider updating source");  	if (Debugger.IsAttached) {  		Thread.Sleep (5555);  	}  	#endif  } else {  	Debug.WriteLine ("GMapProviders.BingMap.Version: " + ver + "' OK");  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: if (Debugger.IsAttached) {  	Thread.Sleep (5555);  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: Thread.Sleep (5555);  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,OnInitialized,The following statement contains a magic number: if (TryGetDefaultKey && string.IsNullOrEmpty (ClientKey)) {  	string keyUrl = "http://dev.virtualearth.net/webservices/v1/LoggingService/LoggingService.svc/Log?entry=0&fmt=1&type=3&group=MapControl&name=AJAX&mkt=en-us&auth=Akw4XWHH0ngzzB_4DmHOv_XByRBtX5qwLAS9RgRYDamxvLeIxRfSzmuvWFB9RF7d&jsonp=microsoftMapsNetworkCallback";  	// Bing Maps WPF Control  	// http://dev.virtualearth.net/webservices/v1/LoggingService/LoggingService.svc/Log?entry=0&auth=Akw4XWHH0ngzzB_4DmHOv_XByRBtX5qwLAS9RgRYDamxvLeIxRfSzmuvWFB9RF7d&fmt=1&type=3&group=MapControl&name=WPF&version=1.0.0.0&session=00000000-0000-0000-0000-000000000000&mkt=en-US  	string keyResponse = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent ("BingLoggingServiceV1"' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  	if (string.IsNullOrEmpty (keyResponse)) {  		keyResponse = GetContentUsingHttp (keyUrl);  		if (!string.IsNullOrEmpty (keyResponse) && keyResponse.Contains ("ValidCredentials")) {  			if (GMaps.Instance.UseUrlCache) {  				Cache.Instance.SaveContent ("BingLoggingServiceV1"' CacheType.UrlCache' keyResponse);  			}  		}  	}  	if (!string.IsNullOrEmpty (keyResponse) && keyResponse.Contains ("sessionId") && keyResponse.Contains ("ValidCredentials")) {  		// microsoftMapsNetworkCallback({"sessionId" : "xxx"' "authenticationResultCode" : "ValidCredentials"})  		ClientKey = keyResponse.Split (''') [0].Split (':') [1].Replace ("\""' string.Empty).Replace (" "' string.Empty);  		Debug.WriteLine ("GMapProviders.BingMap.ClientKey: " + ClientKey);  	}  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,GetRoutePoints,The following statement contains a magic number: try {  	string route = GMaps.Instance.UseRouteCache ? Cache.Instance.GetContent (url' CacheType.RouteCache) : string.Empty;  	if (string.IsNullOrEmpty (route)) {  		route = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (route)) {  			if (GMaps.Instance.UseRouteCache) {  				Cache.Instance.SaveContent (url' CacheType.RouteCache' route);  			}  		}  	}  	// parse values  	if (!string.IsNullOrEmpty (route)) {  		#region -- title --  		int tooltipEnd = 0;  		{  			int x = route.IndexOf ("<RoutePath><Line>") + 17;  			if (x >= 17) {  				tooltipEnd = route.IndexOf ("</Line></RoutePath>"' x + 1);  				if (tooltipEnd > 0) {  					int l = tooltipEnd - x;  					if (l > 0) {  						//tooltipHtml = route.Substring(x' l).Replace(@"\x26#160;"' " ");  						tooltipHtml = route.Substring (x' l);  					}  				}  			}  		#endregion  		#region -- points --  		#endregion  		}  		XmlDocument doc = new XmlDocument ();  		doc.LoadXml (route);  		XmlNode xn = doc ["Response"];  		string statuscode = xn ["StatusCode"].InnerText;  		switch (statuscode) {  		case "200": {  			xn = xn ["ResourceSets"] ["ResourceSet"] ["Resources"] ["Route"] ["RoutePath"] ["Line"];  			XmlNodeList xnl = xn.ChildNodes;  			if (xnl.Count > 0) {  				points = new List<PointLatLng> ();  				foreach (XmlNode xno in xnl) {  					XmlNode latitude = xno ["Latitude"];  					XmlNode longitude = xno ["Longitude"];  					points.Add (new PointLatLng (double.Parse (latitude.InnerText' CultureInfo.InvariantCulture)' double.Parse (longitude.InnerText' CultureInfo.InvariantCulture)));  				}  			}  			break;  		}  		// no status implementation on routes yet although when introduced these are the codes. Exception will be catched.  		case "400":  			throw new Exception ("Bad Request' The request contained an error.");  		case "401":  			throw new Exception ("Unauthorized' Access was denied. You may have entered your credentials incorrectly' or you might not have access to the requested resource or operation.");  		case "403":  			throw new Exception ("Forbidden' The request is for something forbidden. Authorization will not help.");  		case "404":  			throw new Exception ("Not Found' The requested resource was not found.");  		case "500":  			throw new Exception ("Internal Server Error' Your request could not be completed because there was a problem with the service.");  		case "501":  			throw new Exception ("Service Unavailable' There's a problem with the service right now. Please try again later.");  		default:  			points = null;  			break;  		// unknown' for possible future error codes  		}  	}  } catch (Exception ex) {  	points = null;  	Debug.WriteLine ("GetRoutePoints: " + ex);  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,GetRoutePoints,The following statement contains a magic number: try {  	string route = GMaps.Instance.UseRouteCache ? Cache.Instance.GetContent (url' CacheType.RouteCache) : string.Empty;  	if (string.IsNullOrEmpty (route)) {  		route = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (route)) {  			if (GMaps.Instance.UseRouteCache) {  				Cache.Instance.SaveContent (url' CacheType.RouteCache' route);  			}  		}  	}  	// parse values  	if (!string.IsNullOrEmpty (route)) {  		#region -- title --  		int tooltipEnd = 0;  		{  			int x = route.IndexOf ("<RoutePath><Line>") + 17;  			if (x >= 17) {  				tooltipEnd = route.IndexOf ("</Line></RoutePath>"' x + 1);  				if (tooltipEnd > 0) {  					int l = tooltipEnd - x;  					if (l > 0) {  						//tooltipHtml = route.Substring(x' l).Replace(@"\x26#160;"' " ");  						tooltipHtml = route.Substring (x' l);  					}  				}  			}  		#endregion  		#region -- points --  		#endregion  		}  		XmlDocument doc = new XmlDocument ();  		doc.LoadXml (route);  		XmlNode xn = doc ["Response"];  		string statuscode = xn ["StatusCode"].InnerText;  		switch (statuscode) {  		case "200": {  			xn = xn ["ResourceSets"] ["ResourceSet"] ["Resources"] ["Route"] ["RoutePath"] ["Line"];  			XmlNodeList xnl = xn.ChildNodes;  			if (xnl.Count > 0) {  				points = new List<PointLatLng> ();  				foreach (XmlNode xno in xnl) {  					XmlNode latitude = xno ["Latitude"];  					XmlNode longitude = xno ["Longitude"];  					points.Add (new PointLatLng (double.Parse (latitude.InnerText' CultureInfo.InvariantCulture)' double.Parse (longitude.InnerText' CultureInfo.InvariantCulture)));  				}  			}  			break;  		}  		// no status implementation on routes yet although when introduced these are the codes. Exception will be catched.  		case "400":  			throw new Exception ("Bad Request' The request contained an error.");  		case "401":  			throw new Exception ("Unauthorized' Access was denied. You may have entered your credentials incorrectly' or you might not have access to the requested resource or operation.");  		case "403":  			throw new Exception ("Forbidden' The request is for something forbidden. Authorization will not help.");  		case "404":  			throw new Exception ("Not Found' The requested resource was not found.");  		case "500":  			throw new Exception ("Internal Server Error' Your request could not be completed because there was a problem with the service.");  		case "501":  			throw new Exception ("Service Unavailable' There's a problem with the service right now. Please try again later.");  		default:  			points = null;  			break;  		// unknown' for possible future error codes  		}  	}  } catch (Exception ex) {  	points = null;  	Debug.WriteLine ("GetRoutePoints: " + ex);  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (!string.IsNullOrEmpty (route)) {  	#region -- title --  	int tooltipEnd = 0;  	{  		int x = route.IndexOf ("<RoutePath><Line>") + 17;  		if (x >= 17) {  			tooltipEnd = route.IndexOf ("</Line></RoutePath>"' x + 1);  			if (tooltipEnd > 0) {  				int l = tooltipEnd - x;  				if (l > 0) {  					//tooltipHtml = route.Substring(x' l).Replace(@"\x26#160;"' " ");  					tooltipHtml = route.Substring (x' l);  				}  			}  		}  	#endregion  	#region -- points --  	#endregion  	}  	XmlDocument doc = new XmlDocument ();  	doc.LoadXml (route);  	XmlNode xn = doc ["Response"];  	string statuscode = xn ["StatusCode"].InnerText;  	switch (statuscode) {  	case "200": {  		xn = xn ["ResourceSets"] ["ResourceSet"] ["Resources"] ["Route"] ["RoutePath"] ["Line"];  		XmlNodeList xnl = xn.ChildNodes;  		if (xnl.Count > 0) {  			points = new List<PointLatLng> ();  			foreach (XmlNode xno in xnl) {  				XmlNode latitude = xno ["Latitude"];  				XmlNode longitude = xno ["Longitude"];  				points.Add (new PointLatLng (double.Parse (latitude.InnerText' CultureInfo.InvariantCulture)' double.Parse (longitude.InnerText' CultureInfo.InvariantCulture)));  			}  		}  		break;  	}  	// no status implementation on routes yet although when introduced these are the codes. Exception will be catched.  	case "400":  		throw new Exception ("Bad Request' The request contained an error.");  	case "401":  		throw new Exception ("Unauthorized' Access was denied. You may have entered your credentials incorrectly' or you might not have access to the requested resource or operation.");  	case "403":  		throw new Exception ("Forbidden' The request is for something forbidden. Authorization will not help.");  	case "404":  		throw new Exception ("Not Found' The requested resource was not found.");  	case "500":  		throw new Exception ("Internal Server Error' Your request could not be completed because there was a problem with the service.");  	case "501":  		throw new Exception ("Service Unavailable' There's a problem with the service right now. Please try again later.");  	default:  		points = null;  		break;  	// unknown' for possible future error codes  	}  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (!string.IsNullOrEmpty (route)) {  	#region -- title --  	int tooltipEnd = 0;  	{  		int x = route.IndexOf ("<RoutePath><Line>") + 17;  		if (x >= 17) {  			tooltipEnd = route.IndexOf ("</Line></RoutePath>"' x + 1);  			if (tooltipEnd > 0) {  				int l = tooltipEnd - x;  				if (l > 0) {  					//tooltipHtml = route.Substring(x' l).Replace(@"\x26#160;"' " ");  					tooltipHtml = route.Substring (x' l);  				}  			}  		}  	#endregion  	#region -- points --  	#endregion  	}  	XmlDocument doc = new XmlDocument ();  	doc.LoadXml (route);  	XmlNode xn = doc ["Response"];  	string statuscode = xn ["StatusCode"].InnerText;  	switch (statuscode) {  	case "200": {  		xn = xn ["ResourceSets"] ["ResourceSet"] ["Resources"] ["Route"] ["RoutePath"] ["Line"];  		XmlNodeList xnl = xn.ChildNodes;  		if (xnl.Count > 0) {  			points = new List<PointLatLng> ();  			foreach (XmlNode xno in xnl) {  				XmlNode latitude = xno ["Latitude"];  				XmlNode longitude = xno ["Longitude"];  				points.Add (new PointLatLng (double.Parse (latitude.InnerText' CultureInfo.InvariantCulture)' double.Parse (longitude.InnerText' CultureInfo.InvariantCulture)));  			}  		}  		break;  	}  	// no status implementation on routes yet although when introduced these are the codes. Exception will be catched.  	case "400":  		throw new Exception ("Bad Request' The request contained an error.");  	case "401":  		throw new Exception ("Unauthorized' Access was denied. You may have entered your credentials incorrectly' or you might not have access to the requested resource or operation.");  	case "403":  		throw new Exception ("Forbidden' The request is for something forbidden. Authorization will not help.");  	case "404":  		throw new Exception ("Not Found' The requested resource was not found.");  	case "500":  		throw new Exception ("Internal Server Error' Your request could not be completed because there was a problem with the service.");  	case "501":  		throw new Exception ("Service Unavailable' There's a problem with the service right now. Please try again later.");  	default:  		points = null;  		break;  	// unknown' for possible future error codes  	}  }  
Magic Number,GMap.NET.MapProviders,BingMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (x >= 17) {  	tooltipEnd = route.IndexOf ("</Line></RoutePath>"' x + 1);  	if (tooltipEnd > 0) {  		int l = tooltipEnd - x;  		if (l > 0) {  			//tooltipHtml = route.Substring(x' l).Replace(@"\x26#160;"' " ");  			tooltipHtml = route.Substring (x' l);  		}  	}  }  
Magic Number,GMap.NET.MapProviders,BingMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' GetServerNum (pos' 4)' key' Version' language' (!string.IsNullOrEmpty (ClientKey) ? "&key=" + ClientKey : string.Empty));  
Magic Number,GMap.NET.MapProviders,BingSatelliteMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingSatelliteMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' GetServerNum (pos' 4)' key' Version' language' (!string.IsNullOrEmpty (ClientKey) ? "&key=" + ClientKey : string.Empty));  
Magic Number,GMap.NET.MapProviders,BingHybridMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Bing\BingHybridMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' GetServerNum (pos' 4)' key' Version' language' (!string.IsNullOrEmpty (ClientKey) ? "&key=" + ClientKey : string.Empty));  
Magic Number,GMap.NET.MapProviders,CloudMadeMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\CloudMadeMapProvider.cs,CloudMadeMapProvider,The following statement contains a magic number: StyleID = 45363;  
Magic Number,GMap.NET.MapProviders,CloudMadeMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\CloudMadeMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' ServerLetters [GetServerNum (pos' 3)]' Key' StyleID' (DoubleResolution ? DoubleResolutionString : string.Empty)' zoom' pos.X' pos.Y);  
Magic Number,GMap.NET.MapProviders,WikiMapiaMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\WikiMapiaMapProvider.cs,WikiMapiaMapProviderBase,The following statement contains a magic number: MaxZoom = 22;  
Magic Number,GMap.NET.MapProviders,WikiMapiaMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\WikiMapiaMapProvider.cs,GetServerNum,The following statement contains a magic number: return (int)(pos.X % 4 + (pos.Y % 4) * 4);  
Magic Number,GMap.NET.MapProviders,WikiMapiaMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\WikiMapiaMapProvider.cs,GetServerNum,The following statement contains a magic number: return (int)(pos.X % 4 + (pos.Y % 4) * 4);  
Magic Number,GMap.NET.MapProviders,WikiMapiaMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\WikiMapiaMapProvider.cs,GetServerNum,The following statement contains a magic number: return (int)(pos.X % 4 + (pos.Y % 4) * 4);  
Magic Number,GMap.NET.MapProviders,CzechHistoryMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Czech\CzechHistoryMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' GetServerNum (pos' 3) + 1' zoom' xx' yy);  
Magic Number,GMap.NET.MapProviders,CzechHybridMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Czech\CzechHybridMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' GetServerNum (pos' 3) + 1' zoom' xx' yy);  
Magic Number,GMap.NET.MapProviders,CzechSatelliteMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Czech\CzechSatelliteMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' GetServerNum (pos' 3) + 1' zoom' xx' yy);  
Magic Number,GMap.NET.MapProviders,CzechTuristMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Czech\CzechTuristMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' GetServerNum (pos' 3) + 1' zoom' xx' yy);  
Magic Number,GMap.NET.MapProviders,CzechMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Czech\CzechMapProvider.cs,CzechMapProviderBase,The following statement contains a magic number: Area = new RectLatLng (51.2024819920053' 11.8401353319027' 7.22833716731277' 2.78312271922872);  
Magic Number,GMap.NET.MapProviders,CzechMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Czech\CzechMapProvider.cs,CzechMapProviderBase,The following statement contains a magic number: Area = new RectLatLng (51.2024819920053' 11.8401353319027' 7.22833716731277' 2.78312271922872);  
Magic Number,GMap.NET.MapProviders,CzechMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Czech\CzechMapProvider.cs,CzechMapProviderBase,The following statement contains a magic number: Area = new RectLatLng (51.2024819920053' 11.8401353319027' 7.22833716731277' 2.78312271922872);  
Magic Number,GMap.NET.MapProviders,CzechMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Czech\CzechMapProvider.cs,CzechMapProviderBase,The following statement contains a magic number: Area = new RectLatLng (51.2024819920053' 11.8401353319027' 7.22833716731277' 2.78312271922872);  
Magic Number,GMap.NET.MapProviders,CzechMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Czech\CzechMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' GetServerNum (pos' 3) + 1' zoom' xx' yy);  
Magic Number,GMap.NET.MapProviders,TurkeyMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\TurkeyMapProvider.cs,TurkeyMapProvider,The following statement contains a magic number: Area = new RectLatLng (42.5830078125' 25.48828125' 19.05029296875' 6.83349609375);  
Magic Number,GMap.NET.MapProviders,TurkeyMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\TurkeyMapProvider.cs,TurkeyMapProvider,The following statement contains a magic number: Area = new RectLatLng (42.5830078125' 25.48828125' 19.05029296875' 6.83349609375);  
Magic Number,GMap.NET.MapProviders,TurkeyMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\TurkeyMapProvider.cs,TurkeyMapProvider,The following statement contains a magic number: Area = new RectLatLng (42.5830078125' 25.48828125' 19.05029296875' 6.83349609375);  
Magic Number,GMap.NET.MapProviders,TurkeyMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\TurkeyMapProvider.cs,TurkeyMapProvider,The following statement contains a magic number: Area = new RectLatLng (42.5830078125' 25.48828125' 19.05029296875' 6.83349609375);  
Magic Number,GMap.NET.MapProviders,TurkeyMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\TurkeyMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' GetServerNum (pos' 3)' zoom' x' y);  
Magic Number,GMap.NET.MapProviders,SpainMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\SpainMapProvider.cs,SpainMapProvider,The following statement contains a magic number: Area = new RectLatLng (43.8741381814747' -9.700927734375' 14.34814453125' 7.8605775962932);  
Magic Number,GMap.NET.MapProviders,SpainMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\SpainMapProvider.cs,SpainMapProvider,The following statement contains a magic number: Area = new RectLatLng (43.8741381814747' -9.700927734375' 14.34814453125' 7.8605775962932);  
Magic Number,GMap.NET.MapProviders,SpainMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\SpainMapProvider.cs,SpainMapProvider,The following statement contains a magic number: Area = new RectLatLng (43.8741381814747' -9.700927734375' 14.34814453125' 7.8605775962932);  
Magic Number,GMap.NET.MapProviders,SpainMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\SpainMapProvider.cs,SpainMapProvider,The following statement contains a magic number: Area = new RectLatLng (43.8741381814747' -9.700927734375' 14.34814453125' 7.8605775962932);  
Magic Number,GMap.NET.MapProviders,LatviaMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\LatviaMapProvider.cs,LatviaMapProviderBase,The following statement contains a magic number: MaxZoom = 11;  
Magic Number,GMap.NET.MapProviders,LatviaMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\LatviaMapProvider.cs,LatviaMapProviderBase,The following statement contains a magic number: Area = new RectLatLng (58.0794870805093' 20.3286067123543' 7.90883164336887' 2.506129113082);  
Magic Number,GMap.NET.MapProviders,LatviaMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\LatviaMapProvider.cs,LatviaMapProviderBase,The following statement contains a magic number: Area = new RectLatLng (58.0794870805093' 20.3286067123543' 7.90883164336887' 2.506129113082);  
Magic Number,GMap.NET.MapProviders,LatviaMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\LatviaMapProvider.cs,LatviaMapProviderBase,The following statement contains a magic number: Area = new RectLatLng (58.0794870805093' 20.3286067123543' 7.90883164336887' 2.506129113082);  
Magic Number,GMap.NET.MapProviders,LatviaMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Etc\LatviaMapProvider.cs,LatviaMapProviderBase,The following statement contains a magic number: Area = new RectLatLng (58.0794870805093' 20.3286067123543' 7.90883164336887' 2.506129113082);  
Magic Number,GMap.NET.MapProviders,Lithuania3dMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Lithuania\Lithuania3dMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: if (zoom >= 10) {  	z -= 10;  }  
Magic Number,GMap.NET.MapProviders,Lithuania3dMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Lithuania\Lithuania3dMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: if (zoom >= 10) {  	z -= 10;  }  
Magic Number,GMap.NET.MapProviders,Lithuania3dMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Lithuania\Lithuania3dMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: z -= 10;  
Magic Number,GMap.NET.MapProviders,LithuaniaMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Lithuania\LithuaniaMapProvider.cs,LithuaniaMapProviderBase,The following statement contains a magic number: MaxZoom = 12;  
Magic Number,GMap.NET.MapProviders,LithuaniaMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Lithuania\LithuaniaMapProvider.cs,LithuaniaMapProviderBase,The following statement contains a magic number: Area = new RectLatLng (56.431489960361' 20.8962105239809' 5.8924169643369' 2.58940626652217);  
Magic Number,GMap.NET.MapProviders,LithuaniaMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Lithuania\LithuaniaMapProvider.cs,LithuaniaMapProviderBase,The following statement contains a magic number: Area = new RectLatLng (56.431489960361' 20.8962105239809' 5.8924169643369' 2.58940626652217);  
Magic Number,GMap.NET.MapProviders,LithuaniaMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Lithuania\LithuaniaMapProvider.cs,LithuaniaMapProviderBase,The following statement contains a magic number: Area = new RectLatLng (56.431489960361' 20.8962105239809' 5.8924169643369' 2.58940626652217);  
Magic Number,GMap.NET.MapProviders,LithuaniaMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Lithuania\LithuaniaMapProvider.cs,LithuaniaMapProviderBase,The following statement contains a magic number: Area = new RectLatLng (56.431489960361' 20.8962105239809' 5.8924169643369' 2.58940626652217);  
Magic Number,GMap.NET.MapProviders,LithuaniaTOP50,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Lithuania\LithuaniaTOP50.cs,LithuaniaTOP50,The following statement contains a magic number: MaxZoom = 15;  
Magic Number,GMap.NET.MapProviders,OpenStreetMapQuestSatteliteProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapQuestSatteliteProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' GetServerNum (pos' 3) + 1' zoom' pos.X' pos.Y);  
Magic Number,GMap.NET.MapProviders,OpenStreetMapQuestHybridProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapQuestHybridProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' GetServerNum (pos' 3) + 1' zoom' pos.X' pos.Y);  
Magic Number,GMap.NET.MapProviders,OpenStreetMapQuestProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapQuestProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' GetServerNum (pos' 3) + 1' zoom' pos.X' pos.Y);  
Magic Number,GMap.NET.MapProviders,YandexHybridMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Yandex\YandexHybridMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' UrlServer' GetServerNum (pos' 4) + 1' Version' pos.X' pos.Y' zoom' language' Server);  
Magic Number,GMap.NET.MapProviders,YandexSatelliteMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Yandex\YandexSatelliteMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' UrlServer' GetServerNum (pos' 4) + 1' Version' pos.X' pos.Y' zoom' language' Server);  
Magic Number,GMap.NET.MapProviders,YandexMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Yandex\YandexMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' UrlServer' GetServerNum (pos' 4) + 1' Version' pos.X' pos.Y' zoom' language' Server);  
Magic Number,GMap.NET.MapProviders,OviHybridMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Ovi\OviHybridMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' UrlServerLetters [GetServerNum (pos' 4)]' zoom' pos.X' pos.Y);  
Magic Number,GMap.NET.MapProviders,OviTerrainMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Ovi\OviTerrainMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' UrlServerLetters [GetServerNum (pos' 4)]' zoom' pos.X' pos.Y);  
Magic Number,GMap.NET.MapProviders,OviSatelliteMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Ovi\OviSatelliteMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' UrlServerLetters [GetServerNum (pos' 4)]' zoom' pos.X' pos.Y);  
Magic Number,GMap.NET.MapProviders,OviMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Ovi\OviMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' UrlServerLetters [GetServerNum (pos' 4)]' zoom' pos.X' pos.Y);  
Magic Number,GMap.NET.MapProviders,NearHybridMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\NearMap\NearHybridMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' GetServerNum (pos' 3)' pos.X' pos.Y' zoom);  
Magic Number,GMap.NET.MapProviders,NearSatelliteMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\NearMap\NearSatelliteMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' GetServerNum (pos' 4)' pos.X' pos.Y' zoom' GetSafeString (pos));  
Magic Number,GMap.NET.MapProviders,NearMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\NearMap\NearMapProvider.cs,GetServerNum,The following statement contains a magic number: return (int)(pos.X & 2) % max;  
Magic Number,GMap.NET.MapProviders,NearMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\NearMap\NearMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' GetServerNum (pos' 3)' pos.X' pos.Y' zoom' GetSafeString (pos));  
Magic Number,GMap.NET.MapProviders,GoogleKoreaHybridMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\Korea\GoogleKoreaHybridMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' language' pos.X' sec1' pos.Y' zoom' sec2' ServerKorea);  
Magic Number,GMap.NET.MapProviders,GoogleKoreaSatelliteMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\Korea\GoogleKoreaSatelliteMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' language' pos.X' sec1' pos.Y' zoom' sec2' ServerKoreaKr);  
Magic Number,GMap.NET.MapProviders,GoogleKoreaMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\Korea\GoogleKoreaMapProvider.cs,GoogleKoreaMapProvider,The following statement contains a magic number: Area = new RectLatLng (38.6597777307125' 125.738525390625' 4.02099609375' 4.42072406219614);  
Magic Number,GMap.NET.MapProviders,GoogleKoreaMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\Korea\GoogleKoreaMapProvider.cs,GoogleKoreaMapProvider,The following statement contains a magic number: Area = new RectLatLng (38.6597777307125' 125.738525390625' 4.02099609375' 4.42072406219614);  
Magic Number,GMap.NET.MapProviders,GoogleKoreaMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\Korea\GoogleKoreaMapProvider.cs,GoogleKoreaMapProvider,The following statement contains a magic number: Area = new RectLatLng (38.6597777307125' 125.738525390625' 4.02099609375' 4.42072406219614);  
Magic Number,GMap.NET.MapProviders,GoogleKoreaMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\Korea\GoogleKoreaMapProvider.cs,GoogleKoreaMapProvider,The following statement contains a magic number: Area = new RectLatLng (38.6597777307125' 125.738525390625' 4.02099609375' 4.42072406219614);  
Magic Number,GMap.NET.MapProviders,GoogleKoreaMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\Korea\GoogleKoreaMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' language' pos.X' sec1' pos.Y' zoom' sec2' ServerKorea);  
Magic Number,GMap.NET.MapProviders,GoogleChinaTerrainMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\China\GoogleChinaTerrainMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' ChinaLanguage' pos.X' sec1' pos.Y' zoom' sec2' ServerChina);  
Magic Number,GMap.NET.MapProviders,GoogleChinaHybridMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\China\GoogleChinaHybridMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' ChinaLanguage' pos.X' sec1' pos.Y' zoom' sec2' ServerChina);  
Magic Number,GMap.NET.MapProviders,GoogleChinaSatelliteMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\China\GoogleChinaSatelliteMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' pos.X' sec1' pos.Y' zoom' sec2' ServerChina);  
Magic Number,GMap.NET.MapProviders,GoogleChinaMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\China\GoogleChinaMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' ChinaLanguage' pos.X' sec1' pos.Y' zoom' sec2' ServerChina);  
Magic Number,GMap.NET.MapProviders,GoogleTerrainMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleTerrainMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' language' pos.X' sec1' pos.Y' zoom' sec2' Server);  
Magic Number,GMap.NET.MapProviders,GoogleHybridMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleHybridMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' language' pos.X' sec1' pos.Y' zoom' sec2' Server);  
Magic Number,GMap.NET.MapProviders,GoogleSatelliteMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleSatelliteMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' language' pos.X' sec1' pos.Y' zoom' sec2' Server);  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (!init && TryCorrectVersion) {  	//http://maps.google.com/maps/api/js?v=3.2&sensor=false  	string url = string.Format ("http://maps.{0}"' Server);  	url = @"http://maps.google.com/maps/api/js?v=3.2&sensor=false";  	try {  		string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  		if (string.IsNullOrEmpty (html)) {  			html = GetContentUsingHttp (url);  			if (!string.IsNullOrEmpty (html)) {  				if (GMaps.Instance.UseUrlCache) {  					Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  				}  			}  		}  		if (!string.IsNullOrEmpty (html)) {  			#region -- match versions --  			Regex reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=m@(\\d*)"' Server)' RegexOptions.IgnoreCase);  			Match mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 0) {  					string ver = string.Format ("m@{0}"' gc [1].Value);  					string old = GMapProviders.GoogleMap.Version;  					GMapProviders.GoogleMap.Version = ver;  					GMapProviders.GoogleChinaMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=h@(\\d*)"' Server)' RegexOptions.IgnoreCase);  			mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 0) {  					string ver = string.Format ("h@{0}"' gc [1].Value);  					string old = GMapProviders.GoogleHybridMap.Version;  					GMapProviders.GoogleHybridMap.Version = ver;  					GMapProviders.GoogleChinaHybridMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleHybridMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			reg = new Regex (string.Format ("\"*https?://khm\\D?\\d.{0}/kh\\?v=(\\d*)"' "googleapis.com")' RegexOptions.IgnoreCase);  			mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 0) {  					string ver = gc [1].Value;  					string old = GMapProviders.GoogleSatelliteMap.Version;  					GMapProviders.GoogleSatelliteMap.Version = ver;  					GMapProviders.GoogleKoreaSatelliteMap.Version = ver;  					GMapProviders.GoogleChinaSatelliteMap.Version = "s@" + ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleSatelliteMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=t@(\\d*)'r@(\\d*)"' Server)' RegexOptions.IgnoreCase);  			mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 1) {  					string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  					string old = GMapProviders.GoogleTerrainMap.Version;  					GMapProviders.GoogleTerrainMap.Version = ver;  					GMapProviders.GoogleChinaTerrainMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			#endregion  		}  		init = true;  		// try it only once  	} catch (Exception ex) {  		Debug.WriteLine ("TryCorrectGoogleVersions failed: " + ex.ToString ());  		if (ex.InnerException != null)  			Debug.WriteLine (ex.InnerException.ToString ());  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (!init && TryCorrectVersion) {  	//http://maps.google.com/maps/api/js?v=3.2&sensor=false  	string url = string.Format ("http://maps.{0}"' Server);  	url = @"http://maps.google.com/maps/api/js?v=3.2&sensor=false";  	try {  		string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  		if (string.IsNullOrEmpty (html)) {  			html = GetContentUsingHttp (url);  			if (!string.IsNullOrEmpty (html)) {  				if (GMaps.Instance.UseUrlCache) {  					Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  				}  			}  		}  		if (!string.IsNullOrEmpty (html)) {  			#region -- match versions --  			Regex reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=m@(\\d*)"' Server)' RegexOptions.IgnoreCase);  			Match mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 0) {  					string ver = string.Format ("m@{0}"' gc [1].Value);  					string old = GMapProviders.GoogleMap.Version;  					GMapProviders.GoogleMap.Version = ver;  					GMapProviders.GoogleChinaMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=h@(\\d*)"' Server)' RegexOptions.IgnoreCase);  			mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 0) {  					string ver = string.Format ("h@{0}"' gc [1].Value);  					string old = GMapProviders.GoogleHybridMap.Version;  					GMapProviders.GoogleHybridMap.Version = ver;  					GMapProviders.GoogleChinaHybridMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleHybridMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			reg = new Regex (string.Format ("\"*https?://khm\\D?\\d.{0}/kh\\?v=(\\d*)"' "googleapis.com")' RegexOptions.IgnoreCase);  			mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 0) {  					string ver = gc [1].Value;  					string old = GMapProviders.GoogleSatelliteMap.Version;  					GMapProviders.GoogleSatelliteMap.Version = ver;  					GMapProviders.GoogleKoreaSatelliteMap.Version = ver;  					GMapProviders.GoogleChinaSatelliteMap.Version = "s@" + ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleSatelliteMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=t@(\\d*)'r@(\\d*)"' Server)' RegexOptions.IgnoreCase);  			mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 1) {  					string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  					string old = GMapProviders.GoogleTerrainMap.Version;  					GMapProviders.GoogleTerrainMap.Version = ver;  					GMapProviders.GoogleChinaTerrainMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			#endregion  		}  		init = true;  		// try it only once  	} catch (Exception ex) {  		Debug.WriteLine ("TryCorrectGoogleVersions failed: " + ex.ToString ());  		if (ex.InnerException != null)  			Debug.WriteLine (ex.InnerException.ToString ());  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (!init && TryCorrectVersion) {  	//http://maps.google.com/maps/api/js?v=3.2&sensor=false  	string url = string.Format ("http://maps.{0}"' Server);  	url = @"http://maps.google.com/maps/api/js?v=3.2&sensor=false";  	try {  		string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  		if (string.IsNullOrEmpty (html)) {  			html = GetContentUsingHttp (url);  			if (!string.IsNullOrEmpty (html)) {  				if (GMaps.Instance.UseUrlCache) {  					Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  				}  			}  		}  		if (!string.IsNullOrEmpty (html)) {  			#region -- match versions --  			Regex reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=m@(\\d*)"' Server)' RegexOptions.IgnoreCase);  			Match mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 0) {  					string ver = string.Format ("m@{0}"' gc [1].Value);  					string old = GMapProviders.GoogleMap.Version;  					GMapProviders.GoogleMap.Version = ver;  					GMapProviders.GoogleChinaMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=h@(\\d*)"' Server)' RegexOptions.IgnoreCase);  			mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 0) {  					string ver = string.Format ("h@{0}"' gc [1].Value);  					string old = GMapProviders.GoogleHybridMap.Version;  					GMapProviders.GoogleHybridMap.Version = ver;  					GMapProviders.GoogleChinaHybridMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleHybridMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			reg = new Regex (string.Format ("\"*https?://khm\\D?\\d.{0}/kh\\?v=(\\d*)"' "googleapis.com")' RegexOptions.IgnoreCase);  			mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 0) {  					string ver = gc [1].Value;  					string old = GMapProviders.GoogleSatelliteMap.Version;  					GMapProviders.GoogleSatelliteMap.Version = ver;  					GMapProviders.GoogleKoreaSatelliteMap.Version = ver;  					GMapProviders.GoogleChinaSatelliteMap.Version = "s@" + ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleSatelliteMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=t@(\\d*)'r@(\\d*)"' Server)' RegexOptions.IgnoreCase);  			mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 1) {  					string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  					string old = GMapProviders.GoogleTerrainMap.Version;  					GMapProviders.GoogleTerrainMap.Version = ver;  					GMapProviders.GoogleChinaTerrainMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			#endregion  		}  		init = true;  		// try it only once  	} catch (Exception ex) {  		Debug.WriteLine ("TryCorrectGoogleVersions failed: " + ex.ToString ());  		if (ex.InnerException != null)  			Debug.WriteLine (ex.InnerException.ToString ());  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (!init && TryCorrectVersion) {  	//http://maps.google.com/maps/api/js?v=3.2&sensor=false  	string url = string.Format ("http://maps.{0}"' Server);  	url = @"http://maps.google.com/maps/api/js?v=3.2&sensor=false";  	try {  		string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  		if (string.IsNullOrEmpty (html)) {  			html = GetContentUsingHttp (url);  			if (!string.IsNullOrEmpty (html)) {  				if (GMaps.Instance.UseUrlCache) {  					Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  				}  			}  		}  		if (!string.IsNullOrEmpty (html)) {  			#region -- match versions --  			Regex reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=m@(\\d*)"' Server)' RegexOptions.IgnoreCase);  			Match mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 0) {  					string ver = string.Format ("m@{0}"' gc [1].Value);  					string old = GMapProviders.GoogleMap.Version;  					GMapProviders.GoogleMap.Version = ver;  					GMapProviders.GoogleChinaMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=h@(\\d*)"' Server)' RegexOptions.IgnoreCase);  			mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 0) {  					string ver = string.Format ("h@{0}"' gc [1].Value);  					string old = GMapProviders.GoogleHybridMap.Version;  					GMapProviders.GoogleHybridMap.Version = ver;  					GMapProviders.GoogleChinaHybridMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleHybridMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			reg = new Regex (string.Format ("\"*https?://khm\\D?\\d.{0}/kh\\?v=(\\d*)"' "googleapis.com")' RegexOptions.IgnoreCase);  			mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 0) {  					string ver = gc [1].Value;  					string old = GMapProviders.GoogleSatelliteMap.Version;  					GMapProviders.GoogleSatelliteMap.Version = ver;  					GMapProviders.GoogleKoreaSatelliteMap.Version = ver;  					GMapProviders.GoogleChinaSatelliteMap.Version = "s@" + ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleSatelliteMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=t@(\\d*)'r@(\\d*)"' Server)' RegexOptions.IgnoreCase);  			mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 1) {  					string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  					string old = GMapProviders.GoogleTerrainMap.Version;  					GMapProviders.GoogleTerrainMap.Version = ver;  					GMapProviders.GoogleChinaTerrainMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			#endregion  		}  		init = true;  		// try it only once  	} catch (Exception ex) {  		Debug.WriteLine ("TryCorrectGoogleVersions failed: " + ex.ToString ());  		if (ex.InnerException != null)  			Debug.WriteLine (ex.InnerException.ToString ());  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (!init && TryCorrectVersion) {  	//http://maps.google.com/maps/api/js?v=3.2&sensor=false  	string url = string.Format ("http://maps.{0}"' Server);  	url = @"http://maps.google.com/maps/api/js?v=3.2&sensor=false";  	try {  		string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  		if (string.IsNullOrEmpty (html)) {  			html = GetContentUsingHttp (url);  			if (!string.IsNullOrEmpty (html)) {  				if (GMaps.Instance.UseUrlCache) {  					Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  				}  			}  		}  		if (!string.IsNullOrEmpty (html)) {  			#region -- match versions --  			Regex reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=m@(\\d*)"' Server)' RegexOptions.IgnoreCase);  			Match mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 0) {  					string ver = string.Format ("m@{0}"' gc [1].Value);  					string old = GMapProviders.GoogleMap.Version;  					GMapProviders.GoogleMap.Version = ver;  					GMapProviders.GoogleChinaMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=h@(\\d*)"' Server)' RegexOptions.IgnoreCase);  			mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 0) {  					string ver = string.Format ("h@{0}"' gc [1].Value);  					string old = GMapProviders.GoogleHybridMap.Version;  					GMapProviders.GoogleHybridMap.Version = ver;  					GMapProviders.GoogleChinaHybridMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleHybridMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			reg = new Regex (string.Format ("\"*https?://khm\\D?\\d.{0}/kh\\?v=(\\d*)"' "googleapis.com")' RegexOptions.IgnoreCase);  			mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 0) {  					string ver = gc [1].Value;  					string old = GMapProviders.GoogleSatelliteMap.Version;  					GMapProviders.GoogleSatelliteMap.Version = ver;  					GMapProviders.GoogleKoreaSatelliteMap.Version = ver;  					GMapProviders.GoogleChinaSatelliteMap.Version = "s@" + ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleSatelliteMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=t@(\\d*)'r@(\\d*)"' Server)' RegexOptions.IgnoreCase);  			mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 1) {  					string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  					string old = GMapProviders.GoogleTerrainMap.Version;  					GMapProviders.GoogleTerrainMap.Version = ver;  					GMapProviders.GoogleChinaTerrainMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			#endregion  		}  		init = true;  		// try it only once  	} catch (Exception ex) {  		Debug.WriteLine ("TryCorrectGoogleVersions failed: " + ex.ToString ());  		if (ex.InnerException != null)  			Debug.WriteLine (ex.InnerException.ToString ());  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (!init && TryCorrectVersion) {  	//http://maps.google.com/maps/api/js?v=3.2&sensor=false  	string url = string.Format ("http://maps.{0}"' Server);  	url = @"http://maps.google.com/maps/api/js?v=3.2&sensor=false";  	try {  		string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  		if (string.IsNullOrEmpty (html)) {  			html = GetContentUsingHttp (url);  			if (!string.IsNullOrEmpty (html)) {  				if (GMaps.Instance.UseUrlCache) {  					Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  				}  			}  		}  		if (!string.IsNullOrEmpty (html)) {  			#region -- match versions --  			Regex reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=m@(\\d*)"' Server)' RegexOptions.IgnoreCase);  			Match mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 0) {  					string ver = string.Format ("m@{0}"' gc [1].Value);  					string old = GMapProviders.GoogleMap.Version;  					GMapProviders.GoogleMap.Version = ver;  					GMapProviders.GoogleChinaMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=h@(\\d*)"' Server)' RegexOptions.IgnoreCase);  			mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 0) {  					string ver = string.Format ("h@{0}"' gc [1].Value);  					string old = GMapProviders.GoogleHybridMap.Version;  					GMapProviders.GoogleHybridMap.Version = ver;  					GMapProviders.GoogleChinaHybridMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleHybridMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			reg = new Regex (string.Format ("\"*https?://khm\\D?\\d.{0}/kh\\?v=(\\d*)"' "googleapis.com")' RegexOptions.IgnoreCase);  			mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 0) {  					string ver = gc [1].Value;  					string old = GMapProviders.GoogleSatelliteMap.Version;  					GMapProviders.GoogleSatelliteMap.Version = ver;  					GMapProviders.GoogleKoreaSatelliteMap.Version = ver;  					GMapProviders.GoogleChinaSatelliteMap.Version = "s@" + ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleSatelliteMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=t@(\\d*)'r@(\\d*)"' Server)' RegexOptions.IgnoreCase);  			mat = reg.Match (html);  			if (mat.Success) {  				GroupCollection gc = mat.Groups;  				int count = gc.Count;  				if (count > 1) {  					string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  					string old = GMapProviders.GoogleTerrainMap.Version;  					GMapProviders.GoogleTerrainMap.Version = ver;  					GMapProviders.GoogleChinaTerrainMap.Version = ver;  					#if DEBUG  					Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  					if (Debugger.IsAttached && ver != old) {  						Thread.Sleep (1111);  					}  					#endif  				}  			}  			#endregion  		}  		init = true;  		// try it only once  	} catch (Exception ex) {  		Debug.WriteLine ("TryCorrectGoogleVersions failed: " + ex.ToString ());  		if (ex.InnerException != null)  			Debug.WriteLine (ex.InnerException.ToString ());  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: try {  	string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  	if (string.IsNullOrEmpty (html)) {  		html = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (html)) {  			if (GMaps.Instance.UseUrlCache) {  				Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  			}  		}  	}  	if (!string.IsNullOrEmpty (html)) {  		#region -- match versions --  		Regex reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=m@(\\d*)"' Server)' RegexOptions.IgnoreCase);  		Match mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 0) {  				string ver = string.Format ("m@{0}"' gc [1].Value);  				string old = GMapProviders.GoogleMap.Version;  				GMapProviders.GoogleMap.Version = ver;  				GMapProviders.GoogleChinaMap.Version = ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=h@(\\d*)"' Server)' RegexOptions.IgnoreCase);  		mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 0) {  				string ver = string.Format ("h@{0}"' gc [1].Value);  				string old = GMapProviders.GoogleHybridMap.Version;  				GMapProviders.GoogleHybridMap.Version = ver;  				GMapProviders.GoogleChinaHybridMap.Version = ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleHybridMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		reg = new Regex (string.Format ("\"*https?://khm\\D?\\d.{0}/kh\\?v=(\\d*)"' "googleapis.com")' RegexOptions.IgnoreCase);  		mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 0) {  				string ver = gc [1].Value;  				string old = GMapProviders.GoogleSatelliteMap.Version;  				GMapProviders.GoogleSatelliteMap.Version = ver;  				GMapProviders.GoogleKoreaSatelliteMap.Version = ver;  				GMapProviders.GoogleChinaSatelliteMap.Version = "s@" + ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleSatelliteMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=t@(\\d*)'r@(\\d*)"' Server)' RegexOptions.IgnoreCase);  		mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 1) {  				string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  				string old = GMapProviders.GoogleTerrainMap.Version;  				GMapProviders.GoogleTerrainMap.Version = ver;  				GMapProviders.GoogleChinaTerrainMap.Version = ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		#endregion  	}  	init = true;  	// try it only once  } catch (Exception ex) {  	Debug.WriteLine ("TryCorrectGoogleVersions failed: " + ex.ToString ());  	if (ex.InnerException != null)  		Debug.WriteLine (ex.InnerException.ToString ());  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: try {  	string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  	if (string.IsNullOrEmpty (html)) {  		html = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (html)) {  			if (GMaps.Instance.UseUrlCache) {  				Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  			}  		}  	}  	if (!string.IsNullOrEmpty (html)) {  		#region -- match versions --  		Regex reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=m@(\\d*)"' Server)' RegexOptions.IgnoreCase);  		Match mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 0) {  				string ver = string.Format ("m@{0}"' gc [1].Value);  				string old = GMapProviders.GoogleMap.Version;  				GMapProviders.GoogleMap.Version = ver;  				GMapProviders.GoogleChinaMap.Version = ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=h@(\\d*)"' Server)' RegexOptions.IgnoreCase);  		mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 0) {  				string ver = string.Format ("h@{0}"' gc [1].Value);  				string old = GMapProviders.GoogleHybridMap.Version;  				GMapProviders.GoogleHybridMap.Version = ver;  				GMapProviders.GoogleChinaHybridMap.Version = ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleHybridMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		reg = new Regex (string.Format ("\"*https?://khm\\D?\\d.{0}/kh\\?v=(\\d*)"' "googleapis.com")' RegexOptions.IgnoreCase);  		mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 0) {  				string ver = gc [1].Value;  				string old = GMapProviders.GoogleSatelliteMap.Version;  				GMapProviders.GoogleSatelliteMap.Version = ver;  				GMapProviders.GoogleKoreaSatelliteMap.Version = ver;  				GMapProviders.GoogleChinaSatelliteMap.Version = "s@" + ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleSatelliteMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=t@(\\d*)'r@(\\d*)"' Server)' RegexOptions.IgnoreCase);  		mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 1) {  				string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  				string old = GMapProviders.GoogleTerrainMap.Version;  				GMapProviders.GoogleTerrainMap.Version = ver;  				GMapProviders.GoogleChinaTerrainMap.Version = ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		#endregion  	}  	init = true;  	// try it only once  } catch (Exception ex) {  	Debug.WriteLine ("TryCorrectGoogleVersions failed: " + ex.ToString ());  	if (ex.InnerException != null)  		Debug.WriteLine (ex.InnerException.ToString ());  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: try {  	string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  	if (string.IsNullOrEmpty (html)) {  		html = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (html)) {  			if (GMaps.Instance.UseUrlCache) {  				Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  			}  		}  	}  	if (!string.IsNullOrEmpty (html)) {  		#region -- match versions --  		Regex reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=m@(\\d*)"' Server)' RegexOptions.IgnoreCase);  		Match mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 0) {  				string ver = string.Format ("m@{0}"' gc [1].Value);  				string old = GMapProviders.GoogleMap.Version;  				GMapProviders.GoogleMap.Version = ver;  				GMapProviders.GoogleChinaMap.Version = ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=h@(\\d*)"' Server)' RegexOptions.IgnoreCase);  		mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 0) {  				string ver = string.Format ("h@{0}"' gc [1].Value);  				string old = GMapProviders.GoogleHybridMap.Version;  				GMapProviders.GoogleHybridMap.Version = ver;  				GMapProviders.GoogleChinaHybridMap.Version = ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleHybridMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		reg = new Regex (string.Format ("\"*https?://khm\\D?\\d.{0}/kh\\?v=(\\d*)"' "googleapis.com")' RegexOptions.IgnoreCase);  		mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 0) {  				string ver = gc [1].Value;  				string old = GMapProviders.GoogleSatelliteMap.Version;  				GMapProviders.GoogleSatelliteMap.Version = ver;  				GMapProviders.GoogleKoreaSatelliteMap.Version = ver;  				GMapProviders.GoogleChinaSatelliteMap.Version = "s@" + ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleSatelliteMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=t@(\\d*)'r@(\\d*)"' Server)' RegexOptions.IgnoreCase);  		mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 1) {  				string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  				string old = GMapProviders.GoogleTerrainMap.Version;  				GMapProviders.GoogleTerrainMap.Version = ver;  				GMapProviders.GoogleChinaTerrainMap.Version = ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		#endregion  	}  	init = true;  	// try it only once  } catch (Exception ex) {  	Debug.WriteLine ("TryCorrectGoogleVersions failed: " + ex.ToString ());  	if (ex.InnerException != null)  		Debug.WriteLine (ex.InnerException.ToString ());  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: try {  	string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  	if (string.IsNullOrEmpty (html)) {  		html = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (html)) {  			if (GMaps.Instance.UseUrlCache) {  				Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  			}  		}  	}  	if (!string.IsNullOrEmpty (html)) {  		#region -- match versions --  		Regex reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=m@(\\d*)"' Server)' RegexOptions.IgnoreCase);  		Match mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 0) {  				string ver = string.Format ("m@{0}"' gc [1].Value);  				string old = GMapProviders.GoogleMap.Version;  				GMapProviders.GoogleMap.Version = ver;  				GMapProviders.GoogleChinaMap.Version = ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=h@(\\d*)"' Server)' RegexOptions.IgnoreCase);  		mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 0) {  				string ver = string.Format ("h@{0}"' gc [1].Value);  				string old = GMapProviders.GoogleHybridMap.Version;  				GMapProviders.GoogleHybridMap.Version = ver;  				GMapProviders.GoogleChinaHybridMap.Version = ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleHybridMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		reg = new Regex (string.Format ("\"*https?://khm\\D?\\d.{0}/kh\\?v=(\\d*)"' "googleapis.com")' RegexOptions.IgnoreCase);  		mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 0) {  				string ver = gc [1].Value;  				string old = GMapProviders.GoogleSatelliteMap.Version;  				GMapProviders.GoogleSatelliteMap.Version = ver;  				GMapProviders.GoogleKoreaSatelliteMap.Version = ver;  				GMapProviders.GoogleChinaSatelliteMap.Version = "s@" + ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleSatelliteMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=t@(\\d*)'r@(\\d*)"' Server)' RegexOptions.IgnoreCase);  		mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 1) {  				string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  				string old = GMapProviders.GoogleTerrainMap.Version;  				GMapProviders.GoogleTerrainMap.Version = ver;  				GMapProviders.GoogleChinaTerrainMap.Version = ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		#endregion  	}  	init = true;  	// try it only once  } catch (Exception ex) {  	Debug.WriteLine ("TryCorrectGoogleVersions failed: " + ex.ToString ());  	if (ex.InnerException != null)  		Debug.WriteLine (ex.InnerException.ToString ());  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: try {  	string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  	if (string.IsNullOrEmpty (html)) {  		html = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (html)) {  			if (GMaps.Instance.UseUrlCache) {  				Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  			}  		}  	}  	if (!string.IsNullOrEmpty (html)) {  		#region -- match versions --  		Regex reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=m@(\\d*)"' Server)' RegexOptions.IgnoreCase);  		Match mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 0) {  				string ver = string.Format ("m@{0}"' gc [1].Value);  				string old = GMapProviders.GoogleMap.Version;  				GMapProviders.GoogleMap.Version = ver;  				GMapProviders.GoogleChinaMap.Version = ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=h@(\\d*)"' Server)' RegexOptions.IgnoreCase);  		mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 0) {  				string ver = string.Format ("h@{0}"' gc [1].Value);  				string old = GMapProviders.GoogleHybridMap.Version;  				GMapProviders.GoogleHybridMap.Version = ver;  				GMapProviders.GoogleChinaHybridMap.Version = ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleHybridMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		reg = new Regex (string.Format ("\"*https?://khm\\D?\\d.{0}/kh\\?v=(\\d*)"' "googleapis.com")' RegexOptions.IgnoreCase);  		mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 0) {  				string ver = gc [1].Value;  				string old = GMapProviders.GoogleSatelliteMap.Version;  				GMapProviders.GoogleSatelliteMap.Version = ver;  				GMapProviders.GoogleKoreaSatelliteMap.Version = ver;  				GMapProviders.GoogleChinaSatelliteMap.Version = "s@" + ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleSatelliteMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=t@(\\d*)'r@(\\d*)"' Server)' RegexOptions.IgnoreCase);  		mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 1) {  				string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  				string old = GMapProviders.GoogleTerrainMap.Version;  				GMapProviders.GoogleTerrainMap.Version = ver;  				GMapProviders.GoogleChinaTerrainMap.Version = ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		#endregion  	}  	init = true;  	// try it only once  } catch (Exception ex) {  	Debug.WriteLine ("TryCorrectGoogleVersions failed: " + ex.ToString ());  	if (ex.InnerException != null)  		Debug.WriteLine (ex.InnerException.ToString ());  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: try {  	string html = GMaps.Instance.UseUrlCache ? Cache.Instance.GetContent (url' CacheType.UrlCache' TimeSpan.FromHours (8)) : string.Empty;  	if (string.IsNullOrEmpty (html)) {  		html = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (html)) {  			if (GMaps.Instance.UseUrlCache) {  				Cache.Instance.SaveContent (url' CacheType.UrlCache' html);  			}  		}  	}  	if (!string.IsNullOrEmpty (html)) {  		#region -- match versions --  		Regex reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=m@(\\d*)"' Server)' RegexOptions.IgnoreCase);  		Match mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 0) {  				string ver = string.Format ("m@{0}"' gc [1].Value);  				string old = GMapProviders.GoogleMap.Version;  				GMapProviders.GoogleMap.Version = ver;  				GMapProviders.GoogleChinaMap.Version = ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=h@(\\d*)"' Server)' RegexOptions.IgnoreCase);  		mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 0) {  				string ver = string.Format ("h@{0}"' gc [1].Value);  				string old = GMapProviders.GoogleHybridMap.Version;  				GMapProviders.GoogleHybridMap.Version = ver;  				GMapProviders.GoogleChinaHybridMap.Version = ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleHybridMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		reg = new Regex (string.Format ("\"*https?://khm\\D?\\d.{0}/kh\\?v=(\\d*)"' "googleapis.com")' RegexOptions.IgnoreCase);  		mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 0) {  				string ver = gc [1].Value;  				string old = GMapProviders.GoogleSatelliteMap.Version;  				GMapProviders.GoogleSatelliteMap.Version = ver;  				GMapProviders.GoogleKoreaSatelliteMap.Version = ver;  				GMapProviders.GoogleChinaSatelliteMap.Version = "s@" + ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleSatelliteMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=t@(\\d*)'r@(\\d*)"' Server)' RegexOptions.IgnoreCase);  		mat = reg.Match (html);  		if (mat.Success) {  			GroupCollection gc = mat.Groups;  			int count = gc.Count;  			if (count > 1) {  				string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  				string old = GMapProviders.GoogleTerrainMap.Version;  				GMapProviders.GoogleTerrainMap.Version = ver;  				GMapProviders.GoogleChinaTerrainMap.Version = ver;  				#if DEBUG  				Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  				if (Debugger.IsAttached && ver != old) {  					Thread.Sleep (1111);  				}  				#endif  			}  		}  		#endregion  	}  	init = true;  	// try it only once  } catch (Exception ex) {  	Debug.WriteLine ("TryCorrectGoogleVersions failed: " + ex.ToString ());  	if (ex.InnerException != null)  		Debug.WriteLine (ex.InnerException.ToString ());  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (!string.IsNullOrEmpty (html)) {  	#region -- match versions --  	Regex reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=m@(\\d*)"' Server)' RegexOptions.IgnoreCase);  	Match mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count > 0) {  			string ver = string.Format ("m@{0}"' gc [1].Value);  			string old = GMapProviders.GoogleMap.Version;  			GMapProviders.GoogleMap.Version = ver;  			GMapProviders.GoogleChinaMap.Version = ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.GoogleMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  			if (Debugger.IsAttached && ver != old) {  				Thread.Sleep (1111);  			}  			#endif  		}  	}  	reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=h@(\\d*)"' Server)' RegexOptions.IgnoreCase);  	mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count > 0) {  			string ver = string.Format ("h@{0}"' gc [1].Value);  			string old = GMapProviders.GoogleHybridMap.Version;  			GMapProviders.GoogleHybridMap.Version = ver;  			GMapProviders.GoogleChinaHybridMap.Version = ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.GoogleHybridMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  			if (Debugger.IsAttached && ver != old) {  				Thread.Sleep (1111);  			}  			#endif  		}  	}  	reg = new Regex (string.Format ("\"*https?://khm\\D?\\d.{0}/kh\\?v=(\\d*)"' "googleapis.com")' RegexOptions.IgnoreCase);  	mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count > 0) {  			string ver = gc [1].Value;  			string old = GMapProviders.GoogleSatelliteMap.Version;  			GMapProviders.GoogleSatelliteMap.Version = ver;  			GMapProviders.GoogleKoreaSatelliteMap.Version = ver;  			GMapProviders.GoogleChinaSatelliteMap.Version = "s@" + ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.GoogleSatelliteMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  			if (Debugger.IsAttached && ver != old) {  				Thread.Sleep (1111);  			}  			#endif  		}  	}  	reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=t@(\\d*)'r@(\\d*)"' Server)' RegexOptions.IgnoreCase);  	mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count > 1) {  			string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  			string old = GMapProviders.GoogleTerrainMap.Version;  			GMapProviders.GoogleTerrainMap.Version = ver;  			GMapProviders.GoogleChinaTerrainMap.Version = ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  			if (Debugger.IsAttached && ver != old) {  				Thread.Sleep (1111);  			}  			#endif  		}  	}  	#endregion  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (!string.IsNullOrEmpty (html)) {  	#region -- match versions --  	Regex reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=m@(\\d*)"' Server)' RegexOptions.IgnoreCase);  	Match mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count > 0) {  			string ver = string.Format ("m@{0}"' gc [1].Value);  			string old = GMapProviders.GoogleMap.Version;  			GMapProviders.GoogleMap.Version = ver;  			GMapProviders.GoogleChinaMap.Version = ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.GoogleMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  			if (Debugger.IsAttached && ver != old) {  				Thread.Sleep (1111);  			}  			#endif  		}  	}  	reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=h@(\\d*)"' Server)' RegexOptions.IgnoreCase);  	mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count > 0) {  			string ver = string.Format ("h@{0}"' gc [1].Value);  			string old = GMapProviders.GoogleHybridMap.Version;  			GMapProviders.GoogleHybridMap.Version = ver;  			GMapProviders.GoogleChinaHybridMap.Version = ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.GoogleHybridMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  			if (Debugger.IsAttached && ver != old) {  				Thread.Sleep (1111);  			}  			#endif  		}  	}  	reg = new Regex (string.Format ("\"*https?://khm\\D?\\d.{0}/kh\\?v=(\\d*)"' "googleapis.com")' RegexOptions.IgnoreCase);  	mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count > 0) {  			string ver = gc [1].Value;  			string old = GMapProviders.GoogleSatelliteMap.Version;  			GMapProviders.GoogleSatelliteMap.Version = ver;  			GMapProviders.GoogleKoreaSatelliteMap.Version = ver;  			GMapProviders.GoogleChinaSatelliteMap.Version = "s@" + ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.GoogleSatelliteMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  			if (Debugger.IsAttached && ver != old) {  				Thread.Sleep (1111);  			}  			#endif  		}  	}  	reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=t@(\\d*)'r@(\\d*)"' Server)' RegexOptions.IgnoreCase);  	mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count > 1) {  			string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  			string old = GMapProviders.GoogleTerrainMap.Version;  			GMapProviders.GoogleTerrainMap.Version = ver;  			GMapProviders.GoogleChinaTerrainMap.Version = ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  			if (Debugger.IsAttached && ver != old) {  				Thread.Sleep (1111);  			}  			#endif  		}  	}  	#endregion  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (!string.IsNullOrEmpty (html)) {  	#region -- match versions --  	Regex reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=m@(\\d*)"' Server)' RegexOptions.IgnoreCase);  	Match mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count > 0) {  			string ver = string.Format ("m@{0}"' gc [1].Value);  			string old = GMapProviders.GoogleMap.Version;  			GMapProviders.GoogleMap.Version = ver;  			GMapProviders.GoogleChinaMap.Version = ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.GoogleMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  			if (Debugger.IsAttached && ver != old) {  				Thread.Sleep (1111);  			}  			#endif  		}  	}  	reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=h@(\\d*)"' Server)' RegexOptions.IgnoreCase);  	mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count > 0) {  			string ver = string.Format ("h@{0}"' gc [1].Value);  			string old = GMapProviders.GoogleHybridMap.Version;  			GMapProviders.GoogleHybridMap.Version = ver;  			GMapProviders.GoogleChinaHybridMap.Version = ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.GoogleHybridMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  			if (Debugger.IsAttached && ver != old) {  				Thread.Sleep (1111);  			}  			#endif  		}  	}  	reg = new Regex (string.Format ("\"*https?://khm\\D?\\d.{0}/kh\\?v=(\\d*)"' "googleapis.com")' RegexOptions.IgnoreCase);  	mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count > 0) {  			string ver = gc [1].Value;  			string old = GMapProviders.GoogleSatelliteMap.Version;  			GMapProviders.GoogleSatelliteMap.Version = ver;  			GMapProviders.GoogleKoreaSatelliteMap.Version = ver;  			GMapProviders.GoogleChinaSatelliteMap.Version = "s@" + ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.GoogleSatelliteMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  			if (Debugger.IsAttached && ver != old) {  				Thread.Sleep (1111);  			}  			#endif  		}  	}  	reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=t@(\\d*)'r@(\\d*)"' Server)' RegexOptions.IgnoreCase);  	mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count > 1) {  			string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  			string old = GMapProviders.GoogleTerrainMap.Version;  			GMapProviders.GoogleTerrainMap.Version = ver;  			GMapProviders.GoogleChinaTerrainMap.Version = ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  			if (Debugger.IsAttached && ver != old) {  				Thread.Sleep (1111);  			}  			#endif  		}  	}  	#endregion  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (!string.IsNullOrEmpty (html)) {  	#region -- match versions --  	Regex reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=m@(\\d*)"' Server)' RegexOptions.IgnoreCase);  	Match mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count > 0) {  			string ver = string.Format ("m@{0}"' gc [1].Value);  			string old = GMapProviders.GoogleMap.Version;  			GMapProviders.GoogleMap.Version = ver;  			GMapProviders.GoogleChinaMap.Version = ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.GoogleMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  			if (Debugger.IsAttached && ver != old) {  				Thread.Sleep (1111);  			}  			#endif  		}  	}  	reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=h@(\\d*)"' Server)' RegexOptions.IgnoreCase);  	mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count > 0) {  			string ver = string.Format ("h@{0}"' gc [1].Value);  			string old = GMapProviders.GoogleHybridMap.Version;  			GMapProviders.GoogleHybridMap.Version = ver;  			GMapProviders.GoogleChinaHybridMap.Version = ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.GoogleHybridMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  			if (Debugger.IsAttached && ver != old) {  				Thread.Sleep (1111);  			}  			#endif  		}  	}  	reg = new Regex (string.Format ("\"*https?://khm\\D?\\d.{0}/kh\\?v=(\\d*)"' "googleapis.com")' RegexOptions.IgnoreCase);  	mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count > 0) {  			string ver = gc [1].Value;  			string old = GMapProviders.GoogleSatelliteMap.Version;  			GMapProviders.GoogleSatelliteMap.Version = ver;  			GMapProviders.GoogleKoreaSatelliteMap.Version = ver;  			GMapProviders.GoogleChinaSatelliteMap.Version = "s@" + ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.GoogleSatelliteMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  			if (Debugger.IsAttached && ver != old) {  				Thread.Sleep (1111);  			}  			#endif  		}  	}  	reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=t@(\\d*)'r@(\\d*)"' Server)' RegexOptions.IgnoreCase);  	mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count > 1) {  			string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  			string old = GMapProviders.GoogleTerrainMap.Version;  			GMapProviders.GoogleTerrainMap.Version = ver;  			GMapProviders.GoogleChinaTerrainMap.Version = ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  			if (Debugger.IsAttached && ver != old) {  				Thread.Sleep (1111);  			}  			#endif  		}  	}  	#endregion  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (!string.IsNullOrEmpty (html)) {  	#region -- match versions --  	Regex reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=m@(\\d*)"' Server)' RegexOptions.IgnoreCase);  	Match mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count > 0) {  			string ver = string.Format ("m@{0}"' gc [1].Value);  			string old = GMapProviders.GoogleMap.Version;  			GMapProviders.GoogleMap.Version = ver;  			GMapProviders.GoogleChinaMap.Version = ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.GoogleMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  			if (Debugger.IsAttached && ver != old) {  				Thread.Sleep (1111);  			}  			#endif  		}  	}  	reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=h@(\\d*)"' Server)' RegexOptions.IgnoreCase);  	mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count > 0) {  			string ver = string.Format ("h@{0}"' gc [1].Value);  			string old = GMapProviders.GoogleHybridMap.Version;  			GMapProviders.GoogleHybridMap.Version = ver;  			GMapProviders.GoogleChinaHybridMap.Version = ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.GoogleHybridMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  			if (Debugger.IsAttached && ver != old) {  				Thread.Sleep (1111);  			}  			#endif  		}  	}  	reg = new Regex (string.Format ("\"*https?://khm\\D?\\d.{0}/kh\\?v=(\\d*)"' "googleapis.com")' RegexOptions.IgnoreCase);  	mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count > 0) {  			string ver = gc [1].Value;  			string old = GMapProviders.GoogleSatelliteMap.Version;  			GMapProviders.GoogleSatelliteMap.Version = ver;  			GMapProviders.GoogleKoreaSatelliteMap.Version = ver;  			GMapProviders.GoogleChinaSatelliteMap.Version = "s@" + ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.GoogleSatelliteMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  			if (Debugger.IsAttached && ver != old) {  				Thread.Sleep (1111);  			}  			#endif  		}  	}  	reg = new Regex (string.Format ("\"*https?://mt\\D?\\d..*/vt\\?lyrs=t@(\\d*)'r@(\\d*)"' Server)' RegexOptions.IgnoreCase);  	mat = reg.Match (html);  	if (mat.Success) {  		GroupCollection gc = mat.Groups;  		int count = gc.Count;  		if (count > 1) {  			string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  			string old = GMapProviders.GoogleTerrainMap.Version;  			GMapProviders.GoogleTerrainMap.Version = ver;  			GMapProviders.GoogleChinaTerrainMap.Version = ver;  			#if DEBUG  			Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  			if (Debugger.IsAttached && ver != old) {  				Thread.Sleep (1111);  			}  			#endif  		}  	}  	#endregion  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (mat.Success) {  	GroupCollection gc = mat.Groups;  	int count = gc.Count;  	if (count > 0) {  		string ver = string.Format ("m@{0}"' gc [1].Value);  		string old = GMapProviders.GoogleMap.Version;  		GMapProviders.GoogleMap.Version = ver;  		GMapProviders.GoogleChinaMap.Version = ver;  		#if DEBUG  		Debug.WriteLine ("GMapProviders.GoogleMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  		if (Debugger.IsAttached && ver != old) {  			Thread.Sleep (1111);  		}  		#endif  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (count > 0) {  	string ver = string.Format ("m@{0}"' gc [1].Value);  	string old = GMapProviders.GoogleMap.Version;  	GMapProviders.GoogleMap.Version = ver;  	GMapProviders.GoogleChinaMap.Version = ver;  	#if DEBUG  	Debug.WriteLine ("GMapProviders.GoogleMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  	if (Debugger.IsAttached && ver != old) {  		Thread.Sleep (1111);  	}  	#endif  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (Debugger.IsAttached && ver != old) {  	Thread.Sleep (1111);  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: Thread.Sleep (1111);  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (mat.Success) {  	GroupCollection gc = mat.Groups;  	int count = gc.Count;  	if (count > 0) {  		string ver = string.Format ("h@{0}"' gc [1].Value);  		string old = GMapProviders.GoogleHybridMap.Version;  		GMapProviders.GoogleHybridMap.Version = ver;  		GMapProviders.GoogleChinaHybridMap.Version = ver;  		#if DEBUG  		Debug.WriteLine ("GMapProviders.GoogleHybridMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  		if (Debugger.IsAttached && ver != old) {  			Thread.Sleep (1111);  		}  		#endif  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (count > 0) {  	string ver = string.Format ("h@{0}"' gc [1].Value);  	string old = GMapProviders.GoogleHybridMap.Version;  	GMapProviders.GoogleHybridMap.Version = ver;  	GMapProviders.GoogleChinaHybridMap.Version = ver;  	#if DEBUG  	Debug.WriteLine ("GMapProviders.GoogleHybridMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  	if (Debugger.IsAttached && ver != old) {  		Thread.Sleep (1111);  	}  	#endif  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (Debugger.IsAttached && ver != old) {  	Thread.Sleep (1111);  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: Thread.Sleep (1111);  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (mat.Success) {  	GroupCollection gc = mat.Groups;  	int count = gc.Count;  	if (count > 0) {  		string ver = gc [1].Value;  		string old = GMapProviders.GoogleSatelliteMap.Version;  		GMapProviders.GoogleSatelliteMap.Version = ver;  		GMapProviders.GoogleKoreaSatelliteMap.Version = ver;  		GMapProviders.GoogleChinaSatelliteMap.Version = "s@" + ver;  		#if DEBUG  		Debug.WriteLine ("GMapProviders.GoogleSatelliteMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  		if (Debugger.IsAttached && ver != old) {  			Thread.Sleep (1111);  		}  		#endif  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (count > 0) {  	string ver = gc [1].Value;  	string old = GMapProviders.GoogleSatelliteMap.Version;  	GMapProviders.GoogleSatelliteMap.Version = ver;  	GMapProviders.GoogleKoreaSatelliteMap.Version = ver;  	GMapProviders.GoogleChinaSatelliteMap.Version = "s@" + ver;  	#if DEBUG  	Debug.WriteLine ("GMapProviders.GoogleSatelliteMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  	if (Debugger.IsAttached && ver != old) {  		Thread.Sleep (1111);  	}  	#endif  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (Debugger.IsAttached && ver != old) {  	Thread.Sleep (1111);  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: Thread.Sleep (1111);  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (mat.Success) {  	GroupCollection gc = mat.Groups;  	int count = gc.Count;  	if (count > 1) {  		string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  		string old = GMapProviders.GoogleTerrainMap.Version;  		GMapProviders.GoogleTerrainMap.Version = ver;  		GMapProviders.GoogleChinaTerrainMap.Version = ver;  		#if DEBUG  		Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  		if (Debugger.IsAttached && ver != old) {  			Thread.Sleep (1111);  		}  		#endif  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (mat.Success) {  	GroupCollection gc = mat.Groups;  	int count = gc.Count;  	if (count > 1) {  		string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  		string old = GMapProviders.GoogleTerrainMap.Version;  		GMapProviders.GoogleTerrainMap.Version = ver;  		GMapProviders.GoogleChinaTerrainMap.Version = ver;  		#if DEBUG  		Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  		if (Debugger.IsAttached && ver != old) {  			Thread.Sleep (1111);  		}  		#endif  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (count > 1) {  	string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  	string old = GMapProviders.GoogleTerrainMap.Version;  	GMapProviders.GoogleTerrainMap.Version = ver;  	GMapProviders.GoogleChinaTerrainMap.Version = ver;  	#if DEBUG  	Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  	if (Debugger.IsAttached && ver != old) {  		Thread.Sleep (1111);  	}  	#endif  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (count > 1) {  	string ver = string.Format ("t@{0}'r@{1}"' gc [1].Value' gc [2].Value);  	string old = GMapProviders.GoogleTerrainMap.Version;  	GMapProviders.GoogleTerrainMap.Version = ver;  	GMapProviders.GoogleChinaTerrainMap.Version = ver;  	#if DEBUG  	Debug.WriteLine ("GMapProviders.GoogleTerrainMap.Version: " + ver + "' " + (ver == old ? "OK" : "old: " + old + "' consider updating source"));  	if (Debugger.IsAttached && ver != old) {  		Thread.Sleep (1111);  	}  	#endif  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: if (Debugger.IsAttached && ver != old) {  	Thread.Sleep (1111);  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,OnInitialized,The following statement contains a magic number: Thread.Sleep (1111);  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetSecureWords,The following statement contains a magic number: if (pos.Y >= 10000 && pos.Y < 100000) {  	sec1 = Sec1;  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetSecureWords,The following statement contains a magic number: if (pos.Y >= 10000 && pos.Y < 100000) {  	sec1 = Sec1;  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: try {  	string route = GMaps.Instance.UseRouteCache ? Cache.Instance.GetContent (url' CacheType.RouteCache) : string.Empty;  	if (string.IsNullOrEmpty (route)) {  		route = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (route)) {  			if (GMaps.Instance.UseRouteCache) {  				Cache.Instance.SaveContent (url' CacheType.RouteCache' route);  			}  		}  	}  	// parse values  	if (!string.IsNullOrEmpty (route)) {  		//{  		//tooltipHtml:" (300\x26#160;km / 2 valandos 59 min.)"'  		//polylines:  		//[{  		//   id:"route0"'  		//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"'  		//   levels		//   numLevels:4'  		//   zoomFactor:16  		//}]  		//}  		#region -- title --  		int tooltipEnd = 0;  		{  			int x = route.IndexOf ("tooltipHtml:") + 13;  			if (x >= 13) {  				tooltipEnd = route.IndexOf ("\""' x + 1);  				if (tooltipEnd > 0) {  					int l = tooltipEnd - x;  					if (l > 0) {  						tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  					}  				}  			}  		#endregion  		#region -- points --  		#endregion  		#region -- levels --  		#endregion  		#region -- numLevel --  		#endregion  		#region -- zoomFactor --  		#endregion  		#region -- trim point overload --  		#endregion  		}  		int pointsEnd = 0;  		{  			int x = route.IndexOf ("points:"' tooltipEnd >= 0 ? tooltipEnd : 0) + 8;  			if (x >= 8) {  				pointsEnd = route.IndexOf ("\""' x + 1);  				if (pointsEnd > 0) {  					int l = pointsEnd - x;  					if (l > 0) {  						/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  						DecodePointsInto (points' route.Substring (x' l));  					}  				}  			}  		}  		string levels = string.Empty;  		int levelsEnd = 0;  		{  			int x = route.IndexOf ("levels:"' pointsEnd >= 0 ? pointsEnd : 0) + 8;  			if (x >= 8) {  				levelsEnd = route.IndexOf ("\""' x + 1);  				if (levelsEnd > 0) {  					int l = levelsEnd - x;  					if (l > 0) {  						levels = route.Substring (x' l);  					}  				}  			}  		}  		int numLevelsEnd = 0;  		{  			int x = route.IndexOf ("numLevels:"' levelsEnd >= 0 ? levelsEnd : 0) + 10;  			if (x >= 10) {  				numLevelsEnd = route.IndexOf ("'"' x);  				if (numLevelsEnd > 0) {  					int l = numLevelsEnd - x;  					if (l > 0) {  						numLevel = int.Parse (route.Substring (x' l));  					}  				}  			}  		}  		{  			int x = route.IndexOf ("zoomFactor:"' numLevelsEnd >= 0 ? numLevelsEnd : 0) + 11;  			if (x >= 11) {  				int end = route.IndexOf ("}"' x);  				if (end > 0) {  					int l = end - x;  					if (l > 0) {  						zoomFactor = int.Parse (route.Substring (x' l));  					}  				}  			}  		}  		if (points != null && numLevel > 0 && !string.IsNullOrEmpty (levels)) {  			if (points.Count - levels.Length > 0) {  				points.RemoveRange (levels.Length' points.Count - levels.Length);  			}  			//http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/description.html  			//  			string allZlevels = "TSRPONMLKJIHGFEDCBA@?";  			if (numLevel > allZlevels.Length) {  				numLevel = allZlevels.Length;  			}  			// used letters in levels string  			string pLevels = allZlevels.Substring (allZlevels.Length - numLevel);  			// remove useless points at zoom  			{  				List<PointLatLng> removedPoints = new List<PointLatLng> ();  				for (int i = 0; i < levels.Length; i++) {  					int zi = pLevels.IndexOf (levels [i]);  					if (zi > 0) {  						if (zi * numLevel > zoom) {  							removedPoints.Add (points [i]);  						}  					}  				}  				foreach (var v in removedPoints) {  					points.Remove (v);  				}  				removedPoints.Clear ();  				removedPoints = null;  			}  		}  	}  } catch (Exception ex) {  	points = null;  	Debug.WriteLine ("GetRoutePoints: " + ex);  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: try {  	string route = GMaps.Instance.UseRouteCache ? Cache.Instance.GetContent (url' CacheType.RouteCache) : string.Empty;  	if (string.IsNullOrEmpty (route)) {  		route = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (route)) {  			if (GMaps.Instance.UseRouteCache) {  				Cache.Instance.SaveContent (url' CacheType.RouteCache' route);  			}  		}  	}  	// parse values  	if (!string.IsNullOrEmpty (route)) {  		//{  		//tooltipHtml:" (300\x26#160;km / 2 valandos 59 min.)"'  		//polylines:  		//[{  		//   id:"route0"'  		//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"'  		//   levels		//   numLevels:4'  		//   zoomFactor:16  		//}]  		//}  		#region -- title --  		int tooltipEnd = 0;  		{  			int x = route.IndexOf ("tooltipHtml:") + 13;  			if (x >= 13) {  				tooltipEnd = route.IndexOf ("\""' x + 1);  				if (tooltipEnd > 0) {  					int l = tooltipEnd - x;  					if (l > 0) {  						tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  					}  				}  			}  		#endregion  		#region -- points --  		#endregion  		#region -- levels --  		#endregion  		#region -- numLevel --  		#endregion  		#region -- zoomFactor --  		#endregion  		#region -- trim point overload --  		#endregion  		}  		int pointsEnd = 0;  		{  			int x = route.IndexOf ("points:"' tooltipEnd >= 0 ? tooltipEnd : 0) + 8;  			if (x >= 8) {  				pointsEnd = route.IndexOf ("\""' x + 1);  				if (pointsEnd > 0) {  					int l = pointsEnd - x;  					if (l > 0) {  						/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  						DecodePointsInto (points' route.Substring (x' l));  					}  				}  			}  		}  		string levels = string.Empty;  		int levelsEnd = 0;  		{  			int x = route.IndexOf ("levels:"' pointsEnd >= 0 ? pointsEnd : 0) + 8;  			if (x >= 8) {  				levelsEnd = route.IndexOf ("\""' x + 1);  				if (levelsEnd > 0) {  					int l = levelsEnd - x;  					if (l > 0) {  						levels = route.Substring (x' l);  					}  				}  			}  		}  		int numLevelsEnd = 0;  		{  			int x = route.IndexOf ("numLevels:"' levelsEnd >= 0 ? levelsEnd : 0) + 10;  			if (x >= 10) {  				numLevelsEnd = route.IndexOf ("'"' x);  				if (numLevelsEnd > 0) {  					int l = numLevelsEnd - x;  					if (l > 0) {  						numLevel = int.Parse (route.Substring (x' l));  					}  				}  			}  		}  		{  			int x = route.IndexOf ("zoomFactor:"' numLevelsEnd >= 0 ? numLevelsEnd : 0) + 11;  			if (x >= 11) {  				int end = route.IndexOf ("}"' x);  				if (end > 0) {  					int l = end - x;  					if (l > 0) {  						zoomFactor = int.Parse (route.Substring (x' l));  					}  				}  			}  		}  		if (points != null && numLevel > 0 && !string.IsNullOrEmpty (levels)) {  			if (points.Count - levels.Length > 0) {  				points.RemoveRange (levels.Length' points.Count - levels.Length);  			}  			//http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/description.html  			//  			string allZlevels = "TSRPONMLKJIHGFEDCBA@?";  			if (numLevel > allZlevels.Length) {  				numLevel = allZlevels.Length;  			}  			// used letters in levels string  			string pLevels = allZlevels.Substring (allZlevels.Length - numLevel);  			// remove useless points at zoom  			{  				List<PointLatLng> removedPoints = new List<PointLatLng> ();  				for (int i = 0; i < levels.Length; i++) {  					int zi = pLevels.IndexOf (levels [i]);  					if (zi > 0) {  						if (zi * numLevel > zoom) {  							removedPoints.Add (points [i]);  						}  					}  				}  				foreach (var v in removedPoints) {  					points.Remove (v);  				}  				removedPoints.Clear ();  				removedPoints = null;  			}  		}  	}  } catch (Exception ex) {  	points = null;  	Debug.WriteLine ("GetRoutePoints: " + ex);  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: try {  	string route = GMaps.Instance.UseRouteCache ? Cache.Instance.GetContent (url' CacheType.RouteCache) : string.Empty;  	if (string.IsNullOrEmpty (route)) {  		route = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (route)) {  			if (GMaps.Instance.UseRouteCache) {  				Cache.Instance.SaveContent (url' CacheType.RouteCache' route);  			}  		}  	}  	// parse values  	if (!string.IsNullOrEmpty (route)) {  		//{  		//tooltipHtml:" (300\x26#160;km / 2 valandos 59 min.)"'  		//polylines:  		//[{  		//   id:"route0"'  		//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"'  		//   levels		//   numLevels:4'  		//   zoomFactor:16  		//}]  		//}  		#region -- title --  		int tooltipEnd = 0;  		{  			int x = route.IndexOf ("tooltipHtml:") + 13;  			if (x >= 13) {  				tooltipEnd = route.IndexOf ("\""' x + 1);  				if (tooltipEnd > 0) {  					int l = tooltipEnd - x;  					if (l > 0) {  						tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  					}  				}  			}  		#endregion  		#region -- points --  		#endregion  		#region -- levels --  		#endregion  		#region -- numLevel --  		#endregion  		#region -- zoomFactor --  		#endregion  		#region -- trim point overload --  		#endregion  		}  		int pointsEnd = 0;  		{  			int x = route.IndexOf ("points:"' tooltipEnd >= 0 ? tooltipEnd : 0) + 8;  			if (x >= 8) {  				pointsEnd = route.IndexOf ("\""' x + 1);  				if (pointsEnd > 0) {  					int l = pointsEnd - x;  					if (l > 0) {  						/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  						DecodePointsInto (points' route.Substring (x' l));  					}  				}  			}  		}  		string levels = string.Empty;  		int levelsEnd = 0;  		{  			int x = route.IndexOf ("levels:"' pointsEnd >= 0 ? pointsEnd : 0) + 8;  			if (x >= 8) {  				levelsEnd = route.IndexOf ("\""' x + 1);  				if (levelsEnd > 0) {  					int l = levelsEnd - x;  					if (l > 0) {  						levels = route.Substring (x' l);  					}  				}  			}  		}  		int numLevelsEnd = 0;  		{  			int x = route.IndexOf ("numLevels:"' levelsEnd >= 0 ? levelsEnd : 0) + 10;  			if (x >= 10) {  				numLevelsEnd = route.IndexOf ("'"' x);  				if (numLevelsEnd > 0) {  					int l = numLevelsEnd - x;  					if (l > 0) {  						numLevel = int.Parse (route.Substring (x' l));  					}  				}  			}  		}  		{  			int x = route.IndexOf ("zoomFactor:"' numLevelsEnd >= 0 ? numLevelsEnd : 0) + 11;  			if (x >= 11) {  				int end = route.IndexOf ("}"' x);  				if (end > 0) {  					int l = end - x;  					if (l > 0) {  						zoomFactor = int.Parse (route.Substring (x' l));  					}  				}  			}  		}  		if (points != null && numLevel > 0 && !string.IsNullOrEmpty (levels)) {  			if (points.Count - levels.Length > 0) {  				points.RemoveRange (levels.Length' points.Count - levels.Length);  			}  			//http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/description.html  			//  			string allZlevels = "TSRPONMLKJIHGFEDCBA@?";  			if (numLevel > allZlevels.Length) {  				numLevel = allZlevels.Length;  			}  			// used letters in levels string  			string pLevels = allZlevels.Substring (allZlevels.Length - numLevel);  			// remove useless points at zoom  			{  				List<PointLatLng> removedPoints = new List<PointLatLng> ();  				for (int i = 0; i < levels.Length; i++) {  					int zi = pLevels.IndexOf (levels [i]);  					if (zi > 0) {  						if (zi * numLevel > zoom) {  							removedPoints.Add (points [i]);  						}  					}  				}  				foreach (var v in removedPoints) {  					points.Remove (v);  				}  				removedPoints.Clear ();  				removedPoints = null;  			}  		}  	}  } catch (Exception ex) {  	points = null;  	Debug.WriteLine ("GetRoutePoints: " + ex);  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: try {  	string route = GMaps.Instance.UseRouteCache ? Cache.Instance.GetContent (url' CacheType.RouteCache) : string.Empty;  	if (string.IsNullOrEmpty (route)) {  		route = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (route)) {  			if (GMaps.Instance.UseRouteCache) {  				Cache.Instance.SaveContent (url' CacheType.RouteCache' route);  			}  		}  	}  	// parse values  	if (!string.IsNullOrEmpty (route)) {  		//{  		//tooltipHtml:" (300\x26#160;km / 2 valandos 59 min.)"'  		//polylines:  		//[{  		//   id:"route0"'  		//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"'  		//   levels		//   numLevels:4'  		//   zoomFactor:16  		//}]  		//}  		#region -- title --  		int tooltipEnd = 0;  		{  			int x = route.IndexOf ("tooltipHtml:") + 13;  			if (x >= 13) {  				tooltipEnd = route.IndexOf ("\""' x + 1);  				if (tooltipEnd > 0) {  					int l = tooltipEnd - x;  					if (l > 0) {  						tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  					}  				}  			}  		#endregion  		#region -- points --  		#endregion  		#region -- levels --  		#endregion  		#region -- numLevel --  		#endregion  		#region -- zoomFactor --  		#endregion  		#region -- trim point overload --  		#endregion  		}  		int pointsEnd = 0;  		{  			int x = route.IndexOf ("points:"' tooltipEnd >= 0 ? tooltipEnd : 0) + 8;  			if (x >= 8) {  				pointsEnd = route.IndexOf ("\""' x + 1);  				if (pointsEnd > 0) {  					int l = pointsEnd - x;  					if (l > 0) {  						/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  						DecodePointsInto (points' route.Substring (x' l));  					}  				}  			}  		}  		string levels = string.Empty;  		int levelsEnd = 0;  		{  			int x = route.IndexOf ("levels:"' pointsEnd >= 0 ? pointsEnd : 0) + 8;  			if (x >= 8) {  				levelsEnd = route.IndexOf ("\""' x + 1);  				if (levelsEnd > 0) {  					int l = levelsEnd - x;  					if (l > 0) {  						levels = route.Substring (x' l);  					}  				}  			}  		}  		int numLevelsEnd = 0;  		{  			int x = route.IndexOf ("numLevels:"' levelsEnd >= 0 ? levelsEnd : 0) + 10;  			if (x >= 10) {  				numLevelsEnd = route.IndexOf ("'"' x);  				if (numLevelsEnd > 0) {  					int l = numLevelsEnd - x;  					if (l > 0) {  						numLevel = int.Parse (route.Substring (x' l));  					}  				}  			}  		}  		{  			int x = route.IndexOf ("zoomFactor:"' numLevelsEnd >= 0 ? numLevelsEnd : 0) + 11;  			if (x >= 11) {  				int end = route.IndexOf ("}"' x);  				if (end > 0) {  					int l = end - x;  					if (l > 0) {  						zoomFactor = int.Parse (route.Substring (x' l));  					}  				}  			}  		}  		if (points != null && numLevel > 0 && !string.IsNullOrEmpty (levels)) {  			if (points.Count - levels.Length > 0) {  				points.RemoveRange (levels.Length' points.Count - levels.Length);  			}  			//http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/description.html  			//  			string allZlevels = "TSRPONMLKJIHGFEDCBA@?";  			if (numLevel > allZlevels.Length) {  				numLevel = allZlevels.Length;  			}  			// used letters in levels string  			string pLevels = allZlevels.Substring (allZlevels.Length - numLevel);  			// remove useless points at zoom  			{  				List<PointLatLng> removedPoints = new List<PointLatLng> ();  				for (int i = 0; i < levels.Length; i++) {  					int zi = pLevels.IndexOf (levels [i]);  					if (zi > 0) {  						if (zi * numLevel > zoom) {  							removedPoints.Add (points [i]);  						}  					}  				}  				foreach (var v in removedPoints) {  					points.Remove (v);  				}  				removedPoints.Clear ();  				removedPoints = null;  			}  		}  	}  } catch (Exception ex) {  	points = null;  	Debug.WriteLine ("GetRoutePoints: " + ex);  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: try {  	string route = GMaps.Instance.UseRouteCache ? Cache.Instance.GetContent (url' CacheType.RouteCache) : string.Empty;  	if (string.IsNullOrEmpty (route)) {  		route = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (route)) {  			if (GMaps.Instance.UseRouteCache) {  				Cache.Instance.SaveContent (url' CacheType.RouteCache' route);  			}  		}  	}  	// parse values  	if (!string.IsNullOrEmpty (route)) {  		//{  		//tooltipHtml:" (300\x26#160;km / 2 valandos 59 min.)"'  		//polylines:  		//[{  		//   id:"route0"'  		//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"'  		//   levels		//   numLevels:4'  		//   zoomFactor:16  		//}]  		//}  		#region -- title --  		int tooltipEnd = 0;  		{  			int x = route.IndexOf ("tooltipHtml:") + 13;  			if (x >= 13) {  				tooltipEnd = route.IndexOf ("\""' x + 1);  				if (tooltipEnd > 0) {  					int l = tooltipEnd - x;  					if (l > 0) {  						tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  					}  				}  			}  		#endregion  		#region -- points --  		#endregion  		#region -- levels --  		#endregion  		#region -- numLevel --  		#endregion  		#region -- zoomFactor --  		#endregion  		#region -- trim point overload --  		#endregion  		}  		int pointsEnd = 0;  		{  			int x = route.IndexOf ("points:"' tooltipEnd >= 0 ? tooltipEnd : 0) + 8;  			if (x >= 8) {  				pointsEnd = route.IndexOf ("\""' x + 1);  				if (pointsEnd > 0) {  					int l = pointsEnd - x;  					if (l > 0) {  						/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  						DecodePointsInto (points' route.Substring (x' l));  					}  				}  			}  		}  		string levels = string.Empty;  		int levelsEnd = 0;  		{  			int x = route.IndexOf ("levels:"' pointsEnd >= 0 ? pointsEnd : 0) + 8;  			if (x >= 8) {  				levelsEnd = route.IndexOf ("\""' x + 1);  				if (levelsEnd > 0) {  					int l = levelsEnd - x;  					if (l > 0) {  						levels = route.Substring (x' l);  					}  				}  			}  		}  		int numLevelsEnd = 0;  		{  			int x = route.IndexOf ("numLevels:"' levelsEnd >= 0 ? levelsEnd : 0) + 10;  			if (x >= 10) {  				numLevelsEnd = route.IndexOf ("'"' x);  				if (numLevelsEnd > 0) {  					int l = numLevelsEnd - x;  					if (l > 0) {  						numLevel = int.Parse (route.Substring (x' l));  					}  				}  			}  		}  		{  			int x = route.IndexOf ("zoomFactor:"' numLevelsEnd >= 0 ? numLevelsEnd : 0) + 11;  			if (x >= 11) {  				int end = route.IndexOf ("}"' x);  				if (end > 0) {  					int l = end - x;  					if (l > 0) {  						zoomFactor = int.Parse (route.Substring (x' l));  					}  				}  			}  		}  		if (points != null && numLevel > 0 && !string.IsNullOrEmpty (levels)) {  			if (points.Count - levels.Length > 0) {  				points.RemoveRange (levels.Length' points.Count - levels.Length);  			}  			//http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/description.html  			//  			string allZlevels = "TSRPONMLKJIHGFEDCBA@?";  			if (numLevel > allZlevels.Length) {  				numLevel = allZlevels.Length;  			}  			// used letters in levels string  			string pLevels = allZlevels.Substring (allZlevels.Length - numLevel);  			// remove useless points at zoom  			{  				List<PointLatLng> removedPoints = new List<PointLatLng> ();  				for (int i = 0; i < levels.Length; i++) {  					int zi = pLevels.IndexOf (levels [i]);  					if (zi > 0) {  						if (zi * numLevel > zoom) {  							removedPoints.Add (points [i]);  						}  					}  				}  				foreach (var v in removedPoints) {  					points.Remove (v);  				}  				removedPoints.Clear ();  				removedPoints = null;  			}  		}  	}  } catch (Exception ex) {  	points = null;  	Debug.WriteLine ("GetRoutePoints: " + ex);  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: try {  	string route = GMaps.Instance.UseRouteCache ? Cache.Instance.GetContent (url' CacheType.RouteCache) : string.Empty;  	if (string.IsNullOrEmpty (route)) {  		route = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (route)) {  			if (GMaps.Instance.UseRouteCache) {  				Cache.Instance.SaveContent (url' CacheType.RouteCache' route);  			}  		}  	}  	// parse values  	if (!string.IsNullOrEmpty (route)) {  		//{  		//tooltipHtml:" (300\x26#160;km / 2 valandos 59 min.)"'  		//polylines:  		//[{  		//   id:"route0"'  		//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"'  		//   levels:"B?@?????@?@???A???@?@????@??@????????@????@???A????@????@??@???@??@???A???@??@???A??@???@????A??@???@??@????@??@???@????@???@??A@?@???@????A????@??@?@???@???????@??@?@????@????@?A??@???@????@??@?A??????@???????@??A???@??@???@??@????@??@?@?????@?@?A?@????@???@??@??@????@?@??@?@??@??????@???@?@????@???B???@??@??????@??@???A?????@????@???A??@??????@??@??A?@???@???@??A????@???@???@????A????@@??A???@???@??@??A????@??????@??@???@???B????@?@????????@????@????A?????@????@??A???@???@???B???@?????@???@????@????@???A???????@??A@??@?@??@@?????A?@@????????@??@?A????@?????@???@???@???@???@?@?A???@??@?@??@???@?????@???A??@???????@????@???@????@????@@???A????@?@??@?B"'  		//   numLevels:4'  		//   zoomFactor:16  		//}]  		//}  		#region -- title --  		int tooltipEnd = 0;  		{  			int x = route.IndexOf ("tooltipHtml:") + 13;  			if (x >= 13) {  				tooltipEnd = route.IndexOf ("\""' x + 1);  				if (tooltipEnd > 0) {  					int l = tooltipEnd - x;  					if (l > 0) {  						tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  					}  				}  			}  		#endregion  		#region -- points --  		#endregion  		#region -- levels --  		#endregion  		#region -- numLevel --  		#endregion  		#region -- zoomFactor --  		#endregion  		#region -- trim point overload --  		#endregion  		}  		int pointsEnd = 0;  		{  			int x = route.IndexOf ("points:"' tooltipEnd >= 0 ? tooltipEnd : 0) + 8;  			if (x >= 8) {  				pointsEnd = route.IndexOf ("\""' x + 1);  				if (pointsEnd > 0) {  					int l = pointsEnd - x;  					if (l > 0) {  						/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  						DecodePointsInto (points' route.Substring (x' l));  					}  				}  			}  		}  		string levels = string.Empty;  		int levelsEnd = 0;  		{  			int x = route.IndexOf ("levels:"' pointsEnd >= 0 ? pointsEnd : 0) + 8;  			if (x >= 8) {  				levelsEnd = route.IndexOf ("\""' x + 1);  				if (levelsEnd > 0) {  					int l = levelsEnd - x;  					if (l > 0) {  						levels = route.Substring (x' l);  					}  				}  			}  		}  		int numLevelsEnd = 0;  		{  			int x = route.IndexOf ("numLevels:"' levelsEnd >= 0 ? levelsEnd : 0) + 10;  			if (x >= 10) {  				numLevelsEnd = route.IndexOf ("'"' x);  				if (numLevelsEnd > 0) {  					int l = numLevelsEnd - x;  					if (l > 0) {  						numLevel = int.Parse (route.Substring (x' l));  					}  				}  			}  		}  		{  			int x = route.IndexOf ("zoomFactor:"' numLevelsEnd >= 0 ? numLevelsEnd : 0) + 11;  			if (x >= 11) {  				int end = route.IndexOf ("}"' x);  				if (end > 0) {  					int l = end - x;  					if (l > 0) {  						zoomFactor = int.Parse (route.Substring (x' l));  					}  				}  			}  		}  		if (points != null && numLevel > 0 && !string.IsNullOrEmpty (levels)) {  			if (points.Count - levels.Length > 0) {  				points.RemoveRange (levels.Length' points.Count - levels.Length);  			}  			//http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/description.html  			//  			string allZlevels = "TSRPONMLKJIHGFEDCBA@?";  			if (numLevel > allZlevels.Length) {  				numLevel = allZlevels.Length;  			}  			// used letters in levels string  			string pLevels = allZlevels.Substring (allZlevels.Length - numLevel);  			// remove useless points at zoom  			{  				List<PointLatLng> removedPoints = new List<PointLatLng> ();  				for (int i = 0; i < levels.Length; i++) {  					int zi = pLevels.IndexOf (levels [i]);  					if (zi > 0) {  						if (zi * numLevel > zoom) {  							removedPoints.Add (points [i]);  						}  					}  				}  				foreach (var v in removedPoints) {  					points.Remove (v);  				}  				removedPoints.Clear ();  				removedPoints = null;  			}  		}  	}  } catch (Exception ex) {  	points = null;  	Debug.WriteLine ("GetRoutePoints: " + ex);  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: try {  	string route = GMaps.Instance.UseRouteCache ? Cache.Instance.GetContent (url' CacheType.RouteCache) : string.Empty;  	if (string.IsNullOrEmpty (route)) {  		route = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (route)) {  			if (GMaps.Instance.UseRouteCache) {  				Cache.Instance.SaveContent (url' CacheType.RouteCache' route);  			}  		}  	}  	// parse values  	if (!string.IsNullOrEmpty (route)) {  		//{  		//tooltipHtml:" (300\x26#160;km / 2 valandos 59 min.)"'  		//polylines:  		//[{  		//   id:"route0"'  		//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"'  		//   levels		//   numLevels:4'  		//   zoomFactor:16  		//}]  		//}  		#region -- title --  		int tooltipEnd = 0;  		{  			int x = route.IndexOf ("tooltipHtml:") + 13;  			if (x >= 13) {  				tooltipEnd = route.IndexOf ("\""' x + 1);  				if (tooltipEnd > 0) {  					int l = tooltipEnd - x;  					if (l > 0) {  						tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  					}  				}  			}  		#endregion  		#region -- points --  		#endregion  		#region -- levels --  		#endregion  		#region -- numLevel --  		#endregion  		#region -- zoomFactor --  		#endregion  		#region -- trim point overload --  		#endregion  		}  		int pointsEnd = 0;  		{  			int x = route.IndexOf ("points:"' tooltipEnd >= 0 ? tooltipEnd : 0) + 8;  			if (x >= 8) {  				pointsEnd = route.IndexOf ("\""' x + 1);  				if (pointsEnd > 0) {  					int l = pointsEnd - x;  					if (l > 0) {  						/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  						DecodePointsInto (points' route.Substring (x' l));  					}  				}  			}  		}  		string levels = string.Empty;  		int levelsEnd = 0;  		{  			int x = route.IndexOf ("levels:"' pointsEnd >= 0 ? pointsEnd : 0) + 8;  			if (x >= 8) {  				levelsEnd = route.IndexOf ("\""' x + 1);  				if (levelsEnd > 0) {  					int l = levelsEnd - x;  					if (l > 0) {  						levels = route.Substring (x' l);  					}  				}  			}  		}  		int numLevelsEnd = 0;  		{  			int x = route.IndexOf ("numLevels:"' levelsEnd >= 0 ? levelsEnd : 0) + 10;  			if (x >= 10) {  				numLevelsEnd = route.IndexOf ("'"' x);  				if (numLevelsEnd > 0) {  					int l = numLevelsEnd - x;  					if (l > 0) {  						numLevel = int.Parse (route.Substring (x' l));  					}  				}  			}  		}  		{  			int x = route.IndexOf ("zoomFactor:"' numLevelsEnd >= 0 ? numLevelsEnd : 0) + 11;  			if (x >= 11) {  				int end = route.IndexOf ("}"' x);  				if (end > 0) {  					int l = end - x;  					if (l > 0) {  						zoomFactor = int.Parse (route.Substring (x' l));  					}  				}  			}  		}  		if (points != null && numLevel > 0 && !string.IsNullOrEmpty (levels)) {  			if (points.Count - levels.Length > 0) {  				points.RemoveRange (levels.Length' points.Count - levels.Length);  			}  			//http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/description.html  			//  			string allZlevels = "TSRPONMLKJIHGFEDCBA@?";  			if (numLevel > allZlevels.Length) {  				numLevel = allZlevels.Length;  			}  			// used letters in levels string  			string pLevels = allZlevels.Substring (allZlevels.Length - numLevel);  			// remove useless points at zoom  			{  				List<PointLatLng> removedPoints = new List<PointLatLng> ();  				for (int i = 0; i < levels.Length; i++) {  					int zi = pLevels.IndexOf (levels [i]);  					if (zi > 0) {  						if (zi * numLevel > zoom) {  							removedPoints.Add (points [i]);  						}  					}  				}  				foreach (var v in removedPoints) {  					points.Remove (v);  				}  				removedPoints.Clear ();  				removedPoints = null;  			}  		}  	}  } catch (Exception ex) {  	points = null;  	Debug.WriteLine ("GetRoutePoints: " + ex);  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: try {  	string route = GMaps.Instance.UseRouteCache ? Cache.Instance.GetContent (url' CacheType.RouteCache) : string.Empty;  	if (string.IsNullOrEmpty (route)) {  		route = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (route)) {  			if (GMaps.Instance.UseRouteCache) {  				Cache.Instance.SaveContent (url' CacheType.RouteCache' route);  			}  		}  	}  	// parse values  	if (!string.IsNullOrEmpty (route)) {  		//{  		//tooltipHtml:" (300\x26#160;km / 2 valandos 59 min.)"'  		//polylines:  		//[{  		//   id:"route0"'  		//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"'  		//   levels		//   numLevels:4'  		//   zoomFactor:16  		//}]  		//}  		#region -- title --  		int tooltipEnd = 0;  		{  			int x = route.IndexOf ("tooltipHtml:") + 13;  			if (x >= 13) {  				tooltipEnd = route.IndexOf ("\""' x + 1);  				if (tooltipEnd > 0) {  					int l = tooltipEnd - x;  					if (l > 0) {  						tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  					}  				}  			}  		#endregion  		#region -- points --  		#endregion  		#region -- levels --  		#endregion  		#region -- numLevel --  		#endregion  		#region -- zoomFactor --  		#endregion  		#region -- trim point overload --  		#endregion  		}  		int pointsEnd = 0;  		{  			int x = route.IndexOf ("points:"' tooltipEnd >= 0 ? tooltipEnd : 0) + 8;  			if (x >= 8) {  				pointsEnd = route.IndexOf ("\""' x + 1);  				if (pointsEnd > 0) {  					int l = pointsEnd - x;  					if (l > 0) {  						/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  						DecodePointsInto (points' route.Substring (x' l));  					}  				}  			}  		}  		string levels = string.Empty;  		int levelsEnd = 0;  		{  			int x = route.IndexOf ("levels:"' pointsEnd >= 0 ? pointsEnd : 0) + 8;  			if (x >= 8) {  				levelsEnd = route.IndexOf ("\""' x + 1);  				if (levelsEnd > 0) {  					int l = levelsEnd - x;  					if (l > 0) {  						levels = route.Substring (x' l);  					}  				}  			}  		}  		int numLevelsEnd = 0;  		{  			int x = route.IndexOf ("numLevels:"' levelsEnd >= 0 ? levelsEnd : 0) + 10;  			if (x >= 10) {  				numLevelsEnd = route.IndexOf ("'"' x);  				if (numLevelsEnd > 0) {  					int l = numLevelsEnd - x;  					if (l > 0) {  						numLevel = int.Parse (route.Substring (x' l));  					}  				}  			}  		}  		{  			int x = route.IndexOf ("zoomFactor:"' numLevelsEnd >= 0 ? numLevelsEnd : 0) + 11;  			if (x >= 11) {  				int end = route.IndexOf ("}"' x);  				if (end > 0) {  					int l = end - x;  					if (l > 0) {  						zoomFactor = int.Parse (route.Substring (x' l));  					}  				}  			}  		}  		if (points != null && numLevel > 0 && !string.IsNullOrEmpty (levels)) {  			if (points.Count - levels.Length > 0) {  				points.RemoveRange (levels.Length' points.Count - levels.Length);  			}  			//http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/description.html  			//  			string allZlevels = "TSRPONMLKJIHGFEDCBA@?";  			if (numLevel > allZlevels.Length) {  				numLevel = allZlevels.Length;  			}  			// used letters in levels string  			string pLevels = allZlevels.Substring (allZlevels.Length - numLevel);  			// remove useless points at zoom  			{  				List<PointLatLng> removedPoints = new List<PointLatLng> ();  				for (int i = 0; i < levels.Length; i++) {  					int zi = pLevels.IndexOf (levels [i]);  					if (zi > 0) {  						if (zi * numLevel > zoom) {  							removedPoints.Add (points [i]);  						}  					}  				}  				foreach (var v in removedPoints) {  					points.Remove (v);  				}  				removedPoints.Clear ();  				removedPoints = null;  			}  		}  	}  } catch (Exception ex) {  	points = null;  	Debug.WriteLine ("GetRoutePoints: " + ex);  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: try {  	string route = GMaps.Instance.UseRouteCache ? Cache.Instance.GetContent (url' CacheType.RouteCache) : string.Empty;  	if (string.IsNullOrEmpty (route)) {  		route = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (route)) {  			if (GMaps.Instance.UseRouteCache) {  				Cache.Instance.SaveContent (url' CacheType.RouteCache' route);  			}  		}  	}  	// parse values  	if (!string.IsNullOrEmpty (route)) {  		//{  		//tooltipHtml:" (300\x26#160;km / 2 valandos 59 min.)"'  		//polylines:  		//[{  		//   id:"route0"'  		//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"'  		//   levels		//   numLevels:4'  		//   zoomFactor:16  		//}]  		//}  		#region -- title --  		int tooltipEnd = 0;  		{  			int x = route.IndexOf ("tooltipHtml:") + 13;  			if (x >= 13) {  				tooltipEnd = route.IndexOf ("\""' x + 1);  				if (tooltipEnd > 0) {  					int l = tooltipEnd - x;  					if (l > 0) {  						tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  					}  				}  			}  		#endregion  		#region -- points --  		#endregion  		#region -- levels --  		#endregion  		#region -- numLevel --  		#endregion  		#region -- zoomFactor --  		#endregion  		#region -- trim point overload --  		#endregion  		}  		int pointsEnd = 0;  		{  			int x = route.IndexOf ("points:"' tooltipEnd >= 0 ? tooltipEnd : 0) + 8;  			if (x >= 8) {  				pointsEnd = route.IndexOf ("\""' x + 1);  				if (pointsEnd > 0) {  					int l = pointsEnd - x;  					if (l > 0) {  						/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  						DecodePointsInto (points' route.Substring (x' l));  					}  				}  			}  		}  		string levels = string.Empty;  		int levelsEnd = 0;  		{  			int x = route.IndexOf ("levels:"' pointsEnd >= 0 ? pointsEnd : 0) + 8;  			if (x >= 8) {  				levelsEnd = route.IndexOf ("\""' x + 1);  				if (levelsEnd > 0) {  					int l = levelsEnd - x;  					if (l > 0) {  						levels = route.Substring (x' l);  					}  				}  			}  		}  		int numLevelsEnd = 0;  		{  			int x = route.IndexOf ("numLevels:"' levelsEnd >= 0 ? levelsEnd : 0) + 10;  			if (x >= 10) {  				numLevelsEnd = route.IndexOf ("'"' x);  				if (numLevelsEnd > 0) {  					int l = numLevelsEnd - x;  					if (l > 0) {  						numLevel = int.Parse (route.Substring (x' l));  					}  				}  			}  		}  		{  			int x = route.IndexOf ("zoomFactor:"' numLevelsEnd >= 0 ? numLevelsEnd : 0) + 11;  			if (x >= 11) {  				int end = route.IndexOf ("}"' x);  				if (end > 0) {  					int l = end - x;  					if (l > 0) {  						zoomFactor = int.Parse (route.Substring (x' l));  					}  				}  			}  		}  		if (points != null && numLevel > 0 && !string.IsNullOrEmpty (levels)) {  			if (points.Count - levels.Length > 0) {  				points.RemoveRange (levels.Length' points.Count - levels.Length);  			}  			//http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/description.html  			//  			string allZlevels = "TSRPONMLKJIHGFEDCBA@?";  			if (numLevel > allZlevels.Length) {  				numLevel = allZlevels.Length;  			}  			// used letters in levels string  			string pLevels = allZlevels.Substring (allZlevels.Length - numLevel);  			// remove useless points at zoom  			{  				List<PointLatLng> removedPoints = new List<PointLatLng> ();  				for (int i = 0; i < levels.Length; i++) {  					int zi = pLevels.IndexOf (levels [i]);  					if (zi > 0) {  						if (zi * numLevel > zoom) {  							removedPoints.Add (points [i]);  						}  					}  				}  				foreach (var v in removedPoints) {  					points.Remove (v);  				}  				removedPoints.Clear ();  				removedPoints = null;  			}  		}  	}  } catch (Exception ex) {  	points = null;  	Debug.WriteLine ("GetRoutePoints: " + ex);  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: try {  	string route = GMaps.Instance.UseRouteCache ? Cache.Instance.GetContent (url' CacheType.RouteCache) : string.Empty;  	if (string.IsNullOrEmpty (route)) {  		route = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (route)) {  			if (GMaps.Instance.UseRouteCache) {  				Cache.Instance.SaveContent (url' CacheType.RouteCache' route);  			}  		}  	}  	// parse values  	if (!string.IsNullOrEmpty (route)) {  		//{  		//tooltipHtml:" (300\x26#160;km / 2 valandos 59 min.)"'  		//polylines:  		//[{  		//   id:"route0"'  		//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"'  		//   levels		//   numLevels:4'  		//   zoomFactor:16  		//}]  		//}  		#region -- title --  		int tooltipEnd = 0;  		{  			int x = route.IndexOf ("tooltipHtml:") + 13;  			if (x >= 13) {  				tooltipEnd = route.IndexOf ("\""' x + 1);  				if (tooltipEnd > 0) {  					int l = tooltipEnd - x;  					if (l > 0) {  						tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  					}  				}  			}  		#endregion  		#region -- points --  		#endregion  		#region -- levels --  		#endregion  		#region -- numLevel --  		#endregion  		#region -- zoomFactor --  		#endregion  		#region -- trim point overload --  		#endregion  		}  		int pointsEnd = 0;  		{  			int x = route.IndexOf ("points:"' tooltipEnd >= 0 ? tooltipEnd : 0) + 8;  			if (x >= 8) {  				pointsEnd = route.IndexOf ("\""' x + 1);  				if (pointsEnd > 0) {  					int l = pointsEnd - x;  					if (l > 0) {  						/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  						DecodePointsInto (points' route.Substring (x' l));  					}  				}  			}  		}  		string levels = string.Empty;  		int levelsEnd = 0;  		{  			int x = route.IndexOf ("levels:"' pointsEnd >= 0 ? pointsEnd : 0) + 8;  			if (x >= 8) {  				levelsEnd = route.IndexOf ("\""' x + 1);  				if (levelsEnd > 0) {  					int l = levelsEnd - x;  					if (l > 0) {  						levels = route.Substring (x' l);  					}  				}  			}  		}  		int numLevelsEnd = 0;  		{  			int x = route.IndexOf ("numLevels:"' levelsEnd >= 0 ? levelsEnd : 0) + 10;  			if (x >= 10) {  				numLevelsEnd = route.IndexOf ("'"' x);  				if (numLevelsEnd > 0) {  					int l = numLevelsEnd - x;  					if (l > 0) {  						numLevel = int.Parse (route.Substring (x' l));  					}  				}  			}  		}  		{  			int x = route.IndexOf ("zoomFactor:"' numLevelsEnd >= 0 ? numLevelsEnd : 0) + 11;  			if (x >= 11) {  				int end = route.IndexOf ("}"' x);  				if (end > 0) {  					int l = end - x;  					if (l > 0) {  						zoomFactor = int.Parse (route.Substring (x' l));  					}  				}  			}  		}  		if (points != null && numLevel > 0 && !string.IsNullOrEmpty (levels)) {  			if (points.Count - levels.Length > 0) {  				points.RemoveRange (levels.Length' points.Count - levels.Length);  			}  			//http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/description.html  			//  			string allZlevels = "TSRPONMLKJIHGFEDCBA@?";  			if (numLevel > allZlevels.Length) {  				numLevel = allZlevels.Length;  			}  			// used letters in levels string  			string pLevels = allZlevels.Substring (allZlevels.Length - numLevel);  			// remove useless points at zoom  			{  				List<PointLatLng> removedPoints = new List<PointLatLng> ();  				for (int i = 0; i < levels.Length; i++) {  					int zi = pLevels.IndexOf (levels [i]);  					if (zi > 0) {  						if (zi * numLevel > zoom) {  							removedPoints.Add (points [i]);  						}  					}  				}  				foreach (var v in removedPoints) {  					points.Remove (v);  				}  				removedPoints.Clear ();  				removedPoints = null;  			}  		}  	}  } catch (Exception ex) {  	points = null;  	Debug.WriteLine ("GetRoutePoints: " + ex);  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (!string.IsNullOrEmpty (route)) {  	//{  	//tooltipHtml:" (300\x26#160;km / 2 valandos 59 min.)"'  	//polylines:  	//[{  	//   id:"route0"'  	//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"'  	//   levels:"B?@?????@?@???A???@?@????@??@????????@????@???A????@????@??@???@??@???A???@??@???A??@???@????A??@???@??@????@??@???@????@???@??A@?@???@????A????@??@?@???@???????@??@?@????@????@?A??@???@????@??@?A??????@???????@??A???@??@???@??@????@??@?@?????@?@?A?@????@???@??@??@????@?@??@?@??@??????@???@?@????@???B???@??@??????@??@???A?????@????@???A??@??????@??@??A?@???@???@??A????@???@???@????A????@@??A???@???@??@??A????@??????@??@???@???B????@?@????????@????@????A?????@????@??A???@???@???B???@?????@???@????@????@???A???????@??A@??@?@??@@?????A?@@????????@??@?A????@?????@???@???@???@???@?@?A???@??@?@??@???@?????@???A??@???????@????@???@????@????@@???A????@?@??@?B"'  	//   numLevels:4'  	//   zoomFactor:16  	//}]  	//}  	#region -- title --  	int tooltipEnd = 0;  	{  		int x = route.IndexOf ("tooltipHtml:") + 13;  		if (x >= 13) {  			tooltipEnd = route.IndexOf ("\""' x + 1);  			if (tooltipEnd > 0) {  				int l = tooltipEnd - x;  				if (l > 0) {  					tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  				}  			}  		}  	#endregion  	#region -- points --  	#endregion  	#region -- levels --  	#endregion  	#region -- numLevel --  	#endregion  	#region -- zoomFactor --  	#endregion  	#region -- trim point overload --  	#endregion  	}  	int pointsEnd = 0;  	{  		int x = route.IndexOf ("points:"' tooltipEnd >= 0 ? tooltipEnd : 0) + 8;  		if (x >= 8) {  			pointsEnd = route.IndexOf ("\""' x + 1);  			if (pointsEnd > 0) {  				int l = pointsEnd - x;  				if (l > 0) {  					/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  					DecodePointsInto (points' route.Substring (x' l));  				}  			}  		}  	}  	string levels = string.Empty;  	int levelsEnd = 0;  	{  		int x = route.IndexOf ("levels:"' pointsEnd >= 0 ? pointsEnd : 0) + 8;  		if (x >= 8) {  			levelsEnd = route.IndexOf ("\""' x + 1);  			if (levelsEnd > 0) {  				int l = levelsEnd - x;  				if (l > 0) {  					levels = route.Substring (x' l);  				}  			}  		}  	}  	int numLevelsEnd = 0;  	{  		int x = route.IndexOf ("numLevels:"' levelsEnd >= 0 ? levelsEnd : 0) + 10;  		if (x >= 10) {  			numLevelsEnd = route.IndexOf ("'"' x);  			if (numLevelsEnd > 0) {  				int l = numLevelsEnd - x;  				if (l > 0) {  					numLevel = int.Parse (route.Substring (x' l));  				}  			}  		}  	}  	{  		int x = route.IndexOf ("zoomFactor:"' numLevelsEnd >= 0 ? numLevelsEnd : 0) + 11;  		if (x >= 11) {  			int end = route.IndexOf ("}"' x);  			if (end > 0) {  				int l = end - x;  				if (l > 0) {  					zoomFactor = int.Parse (route.Substring (x' l));  				}  			}  		}  	}  	if (points != null && numLevel > 0 && !string.IsNullOrEmpty (levels)) {  		if (points.Count - levels.Length > 0) {  			points.RemoveRange (levels.Length' points.Count - levels.Length);  		}  		//http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/description.html  		//  		string allZlevels = "TSRPONMLKJIHGFEDCBA@?";  		if (numLevel > allZlevels.Length) {  			numLevel = allZlevels.Length;  		}  		// used letters in levels string  		string pLevels = allZlevels.Substring (allZlevels.Length - numLevel);  		// remove useless points at zoom  		{  			List<PointLatLng> removedPoints = new List<PointLatLng> ();  			for (int i = 0; i < levels.Length; i++) {  				int zi = pLevels.IndexOf (levels [i]);  				if (zi > 0) {  					if (zi * numLevel > zoom) {  						removedPoints.Add (points [i]);  					}  				}  			}  			foreach (var v in removedPoints) {  				points.Remove (v);  			}  			removedPoints.Clear ();  			removedPoints = null;  		}  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (!string.IsNullOrEmpty (route)) {  	//{  	//tooltipHtml:" (300\x26#160;km / 2 valandos 59 min.)"'  	//polylines:  	//[{  	//   id:"route0"'  	//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"'  	//   levels	//   numLevels:4'  	//   zoomFactor:16  	//}]  	//}  	#region -- title --  	int tooltipEnd = 0;  	{  		int x = route.IndexOf ("tooltipHtml:") + 13;  		if (x >= 13) {  			tooltipEnd = route.IndexOf ("\""' x + 1);  			if (tooltipEnd > 0) {  				int l = tooltipEnd - x;  				if (l > 0) {  					tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  				}  			}  		}  	#endregion  	#region -- points --  	#endregion  	#region -- levels --  	#endregion  	#region -- numLevel --  	#endregion  	#region -- zoomFactor --  	#endregion  	#region -- trim point overload --  	#endregion  	}  	int pointsEnd = 0;  	{  		int x = route.IndexOf ("points:"' tooltipEnd >= 0 ? tooltipEnd : 0) + 8;  		if (x >= 8) {  			pointsEnd = route.IndexOf ("\""' x + 1);  			if (pointsEnd > 0) {  				int l = pointsEnd - x;  				if (l > 0) {  					/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  					DecodePointsInto (points' route.Substring (x' l));  				}  			}  		}  	}  	string levels = string.Empty;  	int levelsEnd = 0;  	{  		int x = route.IndexOf ("levels:"' pointsEnd >= 0 ? pointsEnd : 0) + 8;  		if (x >= 8) {  			levelsEnd = route.IndexOf ("\""' x + 1);  			if (levelsEnd > 0) {  				int l = levelsEnd - x;  				if (l > 0) {  					levels = route.Substring (x' l);  				}  			}  		}  	}  	int numLevelsEnd = 0;  	{  		int x = route.IndexOf ("numLevels:"' levelsEnd >= 0 ? levelsEnd : 0) + 10;  		if (x >= 10) {  			numLevelsEnd = route.IndexOf ("'"' x);  			if (numLevelsEnd > 0) {  				int l = numLevelsEnd - x;  				if (l > 0) {  					numLevel = int.Parse (route.Substring (x' l));  				}  			}  		}  	}  	{  		int x = route.IndexOf ("zoomFactor:"' numLevelsEnd >= 0 ? numLevelsEnd : 0) + 11;  		if (x >= 11) {  			int end = route.IndexOf ("}"' x);  			if (end > 0) {  				int l = end - x;  				if (l > 0) {  					zoomFactor = int.Parse (route.Substring (x' l));  				}  			}  		}  	}  	if (points != null && numLevel > 0 && !string.IsNullOrEmpty (levels)) {  		if (points.Count - levels.Length > 0) {  			points.RemoveRange (levels.Length' points.Count - levels.Length);  		}  		//http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/description.html  		//  		string allZlevels = "TSRPONMLKJIHGFEDCBA@?";  		if (numLevel > allZlevels.Length) {  			numLevel = allZlevels.Length;  		}  		// used letters in levels string  		string pLevels = allZlevels.Substring (allZlevels.Length - numLevel);  		// remove useless points at zoom  		{  			List<PointLatLng> removedPoints = new List<PointLatLng> ();  			for (int i = 0; i < levels.Length; i++) {  				int zi = pLevels.IndexOf (levels [i]);  				if (zi > 0) {  					if (zi * numLevel > zoom) {  						removedPoints.Add (points [i]);  					}  				}  			}  			foreach (var v in removedPoints) {  				points.Remove (v);  			}  			removedPoints.Clear ();  			removedPoints = null;  		}  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (!string.IsNullOrEmpty (route)) {  	//{  	//tooltipHtml:" (300\x26#160;km / 2 valandos 59 min.)"'  	//polylines:  	//[{  	//   id:"route0"'  	//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"'  	//   levels	//   numLevels:4'  	//   zoomFactor:16  	//}]  	//}  	#region -- title --  	int tooltipEnd = 0;  	{  		int x = route.IndexOf ("tooltipHtml:") + 13;  		if (x >= 13) {  			tooltipEnd = route.IndexOf ("\""' x + 1);  			if (tooltipEnd > 0) {  				int l = tooltipEnd - x;  				if (l > 0) {  					tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  				}  			}  		}  	#endregion  	#region -- points --  	#endregion  	#region -- levels --  	#endregion  	#region -- numLevel --  	#endregion  	#region -- zoomFactor --  	#endregion  	#region -- trim point overload --  	#endregion  	}  	int pointsEnd = 0;  	{  		int x = route.IndexOf ("points:"' tooltipEnd >= 0 ? tooltipEnd : 0) + 8;  		if (x >= 8) {  			pointsEnd = route.IndexOf ("\""' x + 1);  			if (pointsEnd > 0) {  				int l = pointsEnd - x;  				if (l > 0) {  					/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  					DecodePointsInto (points' route.Substring (x' l));  				}  			}  		}  	}  	string levels = string.Empty;  	int levelsEnd = 0;  	{  		int x = route.IndexOf ("levels:"' pointsEnd >= 0 ? pointsEnd : 0) + 8;  		if (x >= 8) {  			levelsEnd = route.IndexOf ("\""' x + 1);  			if (levelsEnd > 0) {  				int l = levelsEnd - x;  				if (l > 0) {  					levels = route.Substring (x' l);  				}  			}  		}  	}  	int numLevelsEnd = 0;  	{  		int x = route.IndexOf ("numLevels:"' levelsEnd >= 0 ? levelsEnd : 0) + 10;  		if (x >= 10) {  			numLevelsEnd = route.IndexOf ("'"' x);  			if (numLevelsEnd > 0) {  				int l = numLevelsEnd - x;  				if (l > 0) {  					numLevel = int.Parse (route.Substring (x' l));  				}  			}  		}  	}  	{  		int x = route.IndexOf ("zoomFactor:"' numLevelsEnd >= 0 ? numLevelsEnd : 0) + 11;  		if (x >= 11) {  			int end = route.IndexOf ("}"' x);  			if (end > 0) {  				int l = end - x;  				if (l > 0) {  					zoomFactor = int.Parse (route.Substring (x' l));  				}  			}  		}  	}  	if (points != null && numLevel > 0 && !string.IsNullOrEmpty (levels)) {  		if (points.Count - levels.Length > 0) {  			points.RemoveRange (levels.Length' points.Count - levels.Length);  		}  		//http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/description.html  		//  		string allZlevels = "TSRPONMLKJIHGFEDCBA@?";  		if (numLevel > allZlevels.Length) {  			numLevel = allZlevels.Length;  		}  		// used letters in levels string  		string pLevels = allZlevels.Substring (allZlevels.Length - numLevel);  		// remove useless points at zoom  		{  			List<PointLatLng> removedPoints = new List<PointLatLng> ();  			for (int i = 0; i < levels.Length; i++) {  				int zi = pLevels.IndexOf (levels [i]);  				if (zi > 0) {  					if (zi * numLevel > zoom) {  						removedPoints.Add (points [i]);  					}  				}  			}  			foreach (var v in removedPoints) {  				points.Remove (v);  			}  			removedPoints.Clear ();  			removedPoints = null;  		}  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (!string.IsNullOrEmpty (route)) {  	//{  	//tooltipHtml:" (300\x26#160;km / 2 valandos 59 min.)"'  	//polylines:  	//[{  	//   id:"route0"'  	//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"'  	//   levels	//   numLevels:4'  	//   zoomFactor:16  	//}]  	//}  	#region -- title --  	int tooltipEnd = 0;  	{  		int x = route.IndexOf ("tooltipHtml:") + 13;  		if (x >= 13) {  			tooltipEnd = route.IndexOf ("\""' x + 1);  			if (tooltipEnd > 0) {  				int l = tooltipEnd - x;  				if (l > 0) {  					tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  				}  			}  		}  	#endregion  	#region -- points --  	#endregion  	#region -- levels --  	#endregion  	#region -- numLevel --  	#endregion  	#region -- zoomFactor --  	#endregion  	#region -- trim point overload --  	#endregion  	}  	int pointsEnd = 0;  	{  		int x = route.IndexOf ("points:"' tooltipEnd >= 0 ? tooltipEnd : 0) + 8;  		if (x >= 8) {  			pointsEnd = route.IndexOf ("\""' x + 1);  			if (pointsEnd > 0) {  				int l = pointsEnd - x;  				if (l > 0) {  					/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  					DecodePointsInto (points' route.Substring (x' l));  				}  			}  		}  	}  	string levels = string.Empty;  	int levelsEnd = 0;  	{  		int x = route.IndexOf ("levels:"' pointsEnd >= 0 ? pointsEnd : 0) + 8;  		if (x >= 8) {  			levelsEnd = route.IndexOf ("\""' x + 1);  			if (levelsEnd > 0) {  				int l = levelsEnd - x;  				if (l > 0) {  					levels = route.Substring (x' l);  				}  			}  		}  	}  	int numLevelsEnd = 0;  	{  		int x = route.IndexOf ("numLevels:"' levelsEnd >= 0 ? levelsEnd : 0) + 10;  		if (x >= 10) {  			numLevelsEnd = route.IndexOf ("'"' x);  			if (numLevelsEnd > 0) {  				int l = numLevelsEnd - x;  				if (l > 0) {  					numLevel = int.Parse (route.Substring (x' l));  				}  			}  		}  	}  	{  		int x = route.IndexOf ("zoomFactor:"' numLevelsEnd >= 0 ? numLevelsEnd : 0) + 11;  		if (x >= 11) {  			int end = route.IndexOf ("}"' x);  			if (end > 0) {  				int l = end - x;  				if (l > 0) {  					zoomFactor = int.Parse (route.Substring (x' l));  				}  			}  		}  	}  	if (points != null && numLevel > 0 && !string.IsNullOrEmpty (levels)) {  		if (points.Count - levels.Length > 0) {  			points.RemoveRange (levels.Length' points.Count - levels.Length);  		}  		//http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/description.html  		//  		string allZlevels = "TSRPONMLKJIHGFEDCBA@?";  		if (numLevel > allZlevels.Length) {  			numLevel = allZlevels.Length;  		}  		// used letters in levels string  		string pLevels = allZlevels.Substring (allZlevels.Length - numLevel);  		// remove useless points at zoom  		{  			List<PointLatLng> removedPoints = new List<PointLatLng> ();  			for (int i = 0; i < levels.Length; i++) {  				int zi = pLevels.IndexOf (levels [i]);  				if (zi > 0) {  					if (zi * numLevel > zoom) {  						removedPoints.Add (points [i]);  					}  				}  			}  			foreach (var v in removedPoints) {  				points.Remove (v);  			}  			removedPoints.Clear ();  			removedPoints = null;  		}  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (!string.IsNullOrEmpty (route)) {  	//{  	//tooltipHtml:" (300\x26#160;km / 2 valandos 59 min.)"'  	//polylines:  	//[{  	//   id:"route0"'  	//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"'  	//   levels:"B?@?????@?@???A???@?@????@??@????????@????@???A????@????@??@???@??@???A???@??@???A??@???@????A??@???@??@????@??@???@????@???@??A@?@???@????A????@??@?@???@???????@??@?@????@????@?A??@???@????@??@?A??????@???????@??A???@??@???@??@????@??@?@?????@?@?A?@????@???@??@??@????@?@??@?@??@??????@???@?@????@???B???@??@??????@??@???A?????@????@???A??@??????@??@??A?@???@???@??A????@???@???@????A????@@??A???@???@??@??A????@??????@??@???@???B????@?@????????@????@????A?????@????@??A???@???@???B???@?????@???@????@????@???A???????@??A@??@?@??@@?????A?@@????????@??@?A????@?????@???@???@???@???@?@?A???@??@?@??@???@?????@???A??@???????@????@???@????@????@@???A????@?@??@?B"'  	//   numLevels:4'  	//   zoomFactor:16  	//}]  	//}  	#region -- title --  	int tooltipEnd = 0;  	{  		int x = route.IndexOf ("tooltipHtml:") + 13;  		if (x >= 13) {  			tooltipEnd = route.IndexOf ("\""' x + 1);  			if (tooltipEnd > 0) {  				int l = tooltipEnd - x;  				if (l > 0) {  					tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  				}  			}  		}  	#endregion  	#region -- points --  	#endregion  	#region -- levels --  	#endregion  	#region -- numLevel --  	#endregion  	#region -- zoomFactor --  	#endregion  	#region -- trim point overload --  	#endregion  	}  	int pointsEnd = 0;  	{  		int x = route.IndexOf ("points:"' tooltipEnd >= 0 ? tooltipEnd : 0) + 8;  		if (x >= 8) {  			pointsEnd = route.IndexOf ("\""' x + 1);  			if (pointsEnd > 0) {  				int l = pointsEnd - x;  				if (l > 0) {  					/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  					DecodePointsInto (points' route.Substring (x' l));  				}  			}  		}  	}  	string levels = string.Empty;  	int levelsEnd = 0;  	{  		int x = route.IndexOf ("levels:"' pointsEnd >= 0 ? pointsEnd : 0) + 8;  		if (x >= 8) {  			levelsEnd = route.IndexOf ("\""' x + 1);  			if (levelsEnd > 0) {  				int l = levelsEnd - x;  				if (l > 0) {  					levels = route.Substring (x' l);  				}  			}  		}  	}  	int numLevelsEnd = 0;  	{  		int x = route.IndexOf ("numLevels:"' levelsEnd >= 0 ? levelsEnd : 0) + 10;  		if (x >= 10) {  			numLevelsEnd = route.IndexOf ("'"' x);  			if (numLevelsEnd > 0) {  				int l = numLevelsEnd - x;  				if (l > 0) {  					numLevel = int.Parse (route.Substring (x' l));  				}  			}  		}  	}  	{  		int x = route.IndexOf ("zoomFactor:"' numLevelsEnd >= 0 ? numLevelsEnd : 0) + 11;  		if (x >= 11) {  			int end = route.IndexOf ("}"' x);  			if (end > 0) {  				int l = end - x;  				if (l > 0) {  					zoomFactor = int.Parse (route.Substring (x' l));  				}  			}  		}  	}  	if (points != null && numLevel > 0 && !string.IsNullOrEmpty (levels)) {  		if (points.Count - levels.Length > 0) {  			points.RemoveRange (levels.Length' points.Count - levels.Length);  		}  		//http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/description.html  		//  		string allZlevels = "TSRPONMLKJIHGFEDCBA@?";  		if (numLevel > allZlevels.Length) {  			numLevel = allZlevels.Length;  		}  		// used letters in levels string  		string pLevels = allZlevels.Substring (allZlevels.Length - numLevel);  		// remove useless points at zoom  		{  			List<PointLatLng> removedPoints = new List<PointLatLng> ();  			for (int i = 0; i < levels.Length; i++) {  				int zi = pLevels.IndexOf (levels [i]);  				if (zi > 0) {  					if (zi * numLevel > zoom) {  						removedPoints.Add (points [i]);  					}  				}  			}  			foreach (var v in removedPoints) {  				points.Remove (v);  			}  			removedPoints.Clear ();  			removedPoints = null;  		}  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (!string.IsNullOrEmpty (route)) {  	//{  	//tooltipHtml:" (300\x26#160;km / 2 valandos 59 min.)"'  	//polylines:  	//[{  	//   id:"route0"'  	//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"'  	//   levels	//   numLevels:4'  	//   zoomFactor:16  	//}]  	//}  	#region -- title --  	int tooltipEnd = 0;  	{  		int x = route.IndexOf ("tooltipHtml:") + 13;  		if (x >= 13) {  			tooltipEnd = route.IndexOf ("\""' x + 1);  			if (tooltipEnd > 0) {  				int l = tooltipEnd - x;  				if (l > 0) {  					tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  				}  			}  		}  	#endregion  	#region -- points --  	#endregion  	#region -- levels --  	#endregion  	#region -- numLevel --  	#endregion  	#region -- zoomFactor --  	#endregion  	#region -- trim point overload --  	#endregion  	}  	int pointsEnd = 0;  	{  		int x = route.IndexOf ("points:"' tooltipEnd >= 0 ? tooltipEnd : 0) + 8;  		if (x >= 8) {  			pointsEnd = route.IndexOf ("\""' x + 1);  			if (pointsEnd > 0) {  				int l = pointsEnd - x;  				if (l > 0) {  					/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  					DecodePointsInto (points' route.Substring (x' l));  				}  			}  		}  	}  	string levels = string.Empty;  	int levelsEnd = 0;  	{  		int x = route.IndexOf ("levels:"' pointsEnd >= 0 ? pointsEnd : 0) + 8;  		if (x >= 8) {  			levelsEnd = route.IndexOf ("\""' x + 1);  			if (levelsEnd > 0) {  				int l = levelsEnd - x;  				if (l > 0) {  					levels = route.Substring (x' l);  				}  			}  		}  	}  	int numLevelsEnd = 0;  	{  		int x = route.IndexOf ("numLevels:"' levelsEnd >= 0 ? levelsEnd : 0) + 10;  		if (x >= 10) {  			numLevelsEnd = route.IndexOf ("'"' x);  			if (numLevelsEnd > 0) {  				int l = numLevelsEnd - x;  				if (l > 0) {  					numLevel = int.Parse (route.Substring (x' l));  				}  			}  		}  	}  	{  		int x = route.IndexOf ("zoomFactor:"' numLevelsEnd >= 0 ? numLevelsEnd : 0) + 11;  		if (x >= 11) {  			int end = route.IndexOf ("}"' x);  			if (end > 0) {  				int l = end - x;  				if (l > 0) {  					zoomFactor = int.Parse (route.Substring (x' l));  				}  			}  		}  	}  	if (points != null && numLevel > 0 && !string.IsNullOrEmpty (levels)) {  		if (points.Count - levels.Length > 0) {  			points.RemoveRange (levels.Length' points.Count - levels.Length);  		}  		//http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/description.html  		//  		string allZlevels = "TSRPONMLKJIHGFEDCBA@?";  		if (numLevel > allZlevels.Length) {  			numLevel = allZlevels.Length;  		}  		// used letters in levels string  		string pLevels = allZlevels.Substring (allZlevels.Length - numLevel);  		// remove useless points at zoom  		{  			List<PointLatLng> removedPoints = new List<PointLatLng> ();  			for (int i = 0; i < levels.Length; i++) {  				int zi = pLevels.IndexOf (levels [i]);  				if (zi > 0) {  					if (zi * numLevel > zoom) {  						removedPoints.Add (points [i]);  					}  				}  			}  			foreach (var v in removedPoints) {  				points.Remove (v);  			}  			removedPoints.Clear ();  			removedPoints = null;  		}  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (!string.IsNullOrEmpty (route)) {  	//{  	//tooltipHtml:" (300\x26#160;km / 2 valandos 59 min.)"'  	//polylines:  	//[{  	//   id:"route0"'  	//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"'  	//   levels	//   numLevels:4'  	//   zoomFactor:16  	//}]  	//}  	#region -- title --  	int tooltipEnd = 0;  	{  		int x = route.IndexOf ("tooltipHtml:") + 13;  		if (x >= 13) {  			tooltipEnd = route.IndexOf ("\""' x + 1);  			if (tooltipEnd > 0) {  				int l = tooltipEnd - x;  				if (l > 0) {  					tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  				}  			}  		}  	#endregion  	#region -- points --  	#endregion  	#region -- levels --  	#endregion  	#region -- numLevel --  	#endregion  	#region -- zoomFactor --  	#endregion  	#region -- trim point overload --  	#endregion  	}  	int pointsEnd = 0;  	{  		int x = route.IndexOf ("points:"' tooltipEnd >= 0 ? tooltipEnd : 0) + 8;  		if (x >= 8) {  			pointsEnd = route.IndexOf ("\""' x + 1);  			if (pointsEnd > 0) {  				int l = pointsEnd - x;  				if (l > 0) {  					/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  					DecodePointsInto (points' route.Substring (x' l));  				}  			}  		}  	}  	string levels = string.Empty;  	int levelsEnd = 0;  	{  		int x = route.IndexOf ("levels:"' pointsEnd >= 0 ? pointsEnd : 0) + 8;  		if (x >= 8) {  			levelsEnd = route.IndexOf ("\""' x + 1);  			if (levelsEnd > 0) {  				int l = levelsEnd - x;  				if (l > 0) {  					levels = route.Substring (x' l);  				}  			}  		}  	}  	int numLevelsEnd = 0;  	{  		int x = route.IndexOf ("numLevels:"' levelsEnd >= 0 ? levelsEnd : 0) + 10;  		if (x >= 10) {  			numLevelsEnd = route.IndexOf ("'"' x);  			if (numLevelsEnd > 0) {  				int l = numLevelsEnd - x;  				if (l > 0) {  					numLevel = int.Parse (route.Substring (x' l));  				}  			}  		}  	}  	{  		int x = route.IndexOf ("zoomFactor:"' numLevelsEnd >= 0 ? numLevelsEnd : 0) + 11;  		if (x >= 11) {  			int end = route.IndexOf ("}"' x);  			if (end > 0) {  				int l = end - x;  				if (l > 0) {  					zoomFactor = int.Parse (route.Substring (x' l));  				}  			}  		}  	}  	if (points != null && numLevel > 0 && !string.IsNullOrEmpty (levels)) {  		if (points.Count - levels.Length > 0) {  			points.RemoveRange (levels.Length' points.Count - levels.Length);  		}  		//http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/description.html  		//  		string allZlevels = "TSRPONMLKJIHGFEDCBA@?";  		if (numLevel > allZlevels.Length) {  			numLevel = allZlevels.Length;  		}  		// used letters in levels string  		string pLevels = allZlevels.Substring (allZlevels.Length - numLevel);  		// remove useless points at zoom  		{  			List<PointLatLng> removedPoints = new List<PointLatLng> ();  			for (int i = 0; i < levels.Length; i++) {  				int zi = pLevels.IndexOf (levels [i]);  				if (zi > 0) {  					if (zi * numLevel > zoom) {  						removedPoints.Add (points [i]);  					}  				}  			}  			foreach (var v in removedPoints) {  				points.Remove (v);  			}  			removedPoints.Clear ();  			removedPoints = null;  		}  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (!string.IsNullOrEmpty (route)) {  	//{  	//tooltipHtml:" (300\x26#160;km / 2 valandos 59 min.)"'  	//polylines:  	//[{  	//   id:"route0"'  	//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"'  	//   levels	//   numLevels:4'  	//   zoomFactor:16  	//}]  	//}  	#region -- title --  	int tooltipEnd = 0;  	{  		int x = route.IndexOf ("tooltipHtml:") + 13;  		if (x >= 13) {  			tooltipEnd = route.IndexOf ("\""' x + 1);  			if (tooltipEnd > 0) {  				int l = tooltipEnd - x;  				if (l > 0) {  					tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  				}  			}  		}  	#endregion  	#region -- points --  	#endregion  	#region -- levels --  	#endregion  	#region -- numLevel --  	#endregion  	#region -- zoomFactor --  	#endregion  	#region -- trim point overload --  	#endregion  	}  	int pointsEnd = 0;  	{  		int x = route.IndexOf ("points:"' tooltipEnd >= 0 ? tooltipEnd : 0) + 8;  		if (x >= 8) {  			pointsEnd = route.IndexOf ("\""' x + 1);  			if (pointsEnd > 0) {  				int l = pointsEnd - x;  				if (l > 0) {  					/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  					DecodePointsInto (points' route.Substring (x' l));  				}  			}  		}  	}  	string levels = string.Empty;  	int levelsEnd = 0;  	{  		int x = route.IndexOf ("levels:"' pointsEnd >= 0 ? pointsEnd : 0) + 8;  		if (x >= 8) {  			levelsEnd = route.IndexOf ("\""' x + 1);  			if (levelsEnd > 0) {  				int l = levelsEnd - x;  				if (l > 0) {  					levels = route.Substring (x' l);  				}  			}  		}  	}  	int numLevelsEnd = 0;  	{  		int x = route.IndexOf ("numLevels:"' levelsEnd >= 0 ? levelsEnd : 0) + 10;  		if (x >= 10) {  			numLevelsEnd = route.IndexOf ("'"' x);  			if (numLevelsEnd > 0) {  				int l = numLevelsEnd - x;  				if (l > 0) {  					numLevel = int.Parse (route.Substring (x' l));  				}  			}  		}  	}  	{  		int x = route.IndexOf ("zoomFactor:"' numLevelsEnd >= 0 ? numLevelsEnd : 0) + 11;  		if (x >= 11) {  			int end = route.IndexOf ("}"' x);  			if (end > 0) {  				int l = end - x;  				if (l > 0) {  					zoomFactor = int.Parse (route.Substring (x' l));  				}  			}  		}  	}  	if (points != null && numLevel > 0 && !string.IsNullOrEmpty (levels)) {  		if (points.Count - levels.Length > 0) {  			points.RemoveRange (levels.Length' points.Count - levels.Length);  		}  		//http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/description.html  		//  		string allZlevels = "TSRPONMLKJIHGFEDCBA@?";  		if (numLevel > allZlevels.Length) {  			numLevel = allZlevels.Length;  		}  		// used letters in levels string  		string pLevels = allZlevels.Substring (allZlevels.Length - numLevel);  		// remove useless points at zoom  		{  			List<PointLatLng> removedPoints = new List<PointLatLng> ();  			for (int i = 0; i < levels.Length; i++) {  				int zi = pLevels.IndexOf (levels [i]);  				if (zi > 0) {  					if (zi * numLevel > zoom) {  						removedPoints.Add (points [i]);  					}  				}  			}  			foreach (var v in removedPoints) {  				points.Remove (v);  			}  			removedPoints.Clear ();  			removedPoints = null;  		}  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (!string.IsNullOrEmpty (route)) {  	//{  	//tooltipHtml:" (300\x26#160;km / 2 valandos 59 min.)"'  	//polylines:  	//[{  	//   id:"route0"'  	//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"'  	//   levels	//   numLevels:4'  	//   zoomFactor:16  	//}]  	//}  	#region -- title --  	int tooltipEnd = 0;  	{  		int x = route.IndexOf ("tooltipHtml:") + 13;  		if (x >= 13) {  			tooltipEnd = route.IndexOf ("\""' x + 1);  			if (tooltipEnd > 0) {  				int l = tooltipEnd - x;  				if (l > 0) {  					tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  				}  			}  		}  	#endregion  	#region -- points --  	#endregion  	#region -- levels --  	#endregion  	#region -- numLevel --  	#endregion  	#region -- zoomFactor --  	#endregion  	#region -- trim point overload --  	#endregion  	}  	int pointsEnd = 0;  	{  		int x = route.IndexOf ("points:"' tooltipEnd >= 0 ? tooltipEnd : 0) + 8;  		if (x >= 8) {  			pointsEnd = route.IndexOf ("\""' x + 1);  			if (pointsEnd > 0) {  				int l = pointsEnd - x;  				if (l > 0) {  					/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  					DecodePointsInto (points' route.Substring (x' l));  				}  			}  		}  	}  	string levels = string.Empty;  	int levelsEnd = 0;  	{  		int x = route.IndexOf ("levels:"' pointsEnd >= 0 ? pointsEnd : 0) + 8;  		if (x >= 8) {  			levelsEnd = route.IndexOf ("\""' x + 1);  			if (levelsEnd > 0) {  				int l = levelsEnd - x;  				if (l > 0) {  					levels = route.Substring (x' l);  				}  			}  		}  	}  	int numLevelsEnd = 0;  	{  		int x = route.IndexOf ("numLevels:"' levelsEnd >= 0 ? levelsEnd : 0) + 10;  		if (x >= 10) {  			numLevelsEnd = route.IndexOf ("'"' x);  			if (numLevelsEnd > 0) {  				int l = numLevelsEnd - x;  				if (l > 0) {  					numLevel = int.Parse (route.Substring (x' l));  				}  			}  		}  	}  	{  		int x = route.IndexOf ("zoomFactor:"' numLevelsEnd >= 0 ? numLevelsEnd : 0) + 11;  		if (x >= 11) {  			int end = route.IndexOf ("}"' x);  			if (end > 0) {  				int l = end - x;  				if (l > 0) {  					zoomFactor = int.Parse (route.Substring (x' l));  				}  			}  		}  	}  	if (points != null && numLevel > 0 && !string.IsNullOrEmpty (levels)) {  		if (points.Count - levels.Length > 0) {  			points.RemoveRange (levels.Length' points.Count - levels.Length);  		}  		//http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/description.html  		//  		string allZlevels = "TSRPONMLKJIHGFEDCBA@?";  		if (numLevel > allZlevels.Length) {  			numLevel = allZlevels.Length;  		}  		// used letters in levels string  		string pLevels = allZlevels.Substring (allZlevels.Length - numLevel);  		// remove useless points at zoom  		{  			List<PointLatLng> removedPoints = new List<PointLatLng> ();  			for (int i = 0; i < levels.Length; i++) {  				int zi = pLevels.IndexOf (levels [i]);  				if (zi > 0) {  					if (zi * numLevel > zoom) {  						removedPoints.Add (points [i]);  					}  				}  			}  			foreach (var v in removedPoints) {  				points.Remove (v);  			}  			removedPoints.Clear ();  			removedPoints = null;  		}  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (!string.IsNullOrEmpty (route)) {  	//{  	//tooltipHtml:" (300\x26#160;km / 2 valandos 59 min.)"'  	//polylines:  	//[{  	//   id:"route0"'  	//   points:"cy~rIcvp`ClJ~v@jHpu@N|BB~A?tA_@`J@nAJrB|AhEf@h@~@^pANh@Mr@a@`@_@x@cBPk@ZiBHeDQ{C]wAc@mAqCeEoA_C{@_Cy@iDoEaW}AsJcJ}t@iWowB{C_Vyw@gvGyTyjBu@gHwDoZ{W_zBsX}~BiA_MmAyOcAwOs@yNy@eTk@mVUmTE}PJ_W`@cVd@cQ`@}KjA_V`AeOn@oItAkOdAaKfBaOhDiVbD}RpBuKtEkTtP}q@fr@ypCfCmK|CmNvEqVvCuQ`BgLnAmJ`CgTpA_N~@sLlBwYh@yLp@cSj@e]zFkzKHaVViSf@wZjFwqBt@{Wr@qS`AaUjAgStBkYrEwe@xIuw@`Gmj@rFok@~BkYtCy_@|KccBvBgZjC}[tD__@pDaYjB_MpBuLhGi[fC}KfFcSnEkObFgOrFkOzEoLt[ys@tJeUlIsSbKqXtFiPfKi]rG_W|CiNhDkPfDuQlDoShEuXrEy[nOgiAxF{`@|DoVzFk[fDwPlXupA~CoPfDuQxGcd@l@yEdH{r@xDam@`AiWz@mYtAq~@p@uqAfAqx@|@kZxA}^lBq\\|Be\\lAaO~Dm`@|Gsj@tS_~AhCyUrCeZrByWv@uLlUiyDpA}NdHkn@pGmb@LkAtAoIjDqR`I{`@`BcH|I_b@zJcd@lKig@\\_CbBaIlJ}g@lIoj@pAuJtFoh@~Eqs@hDmv@h@qOfF{jBn@gSxCio@dAuQn@gIVoBjAiOlCqWbCiT`PekAzKiu@~EgYfIya@fA{ExGwWnDkMdHiU|G}R`HgQhRsa@hW}g@jVsg@|a@cbAbJkUxKoYxLa_@`IiZzHu[`DoOXsBhBuJbCwNdBaL`EkYvAwM`CeVtEwj@nDqj@BkAnB{YpGgeAn@eJ`CmYvEid@tBkQpGkd@rE}UxB}JdJo_@nDcNfSan@nS}j@lCeIvDsMbC{J|CyNbAwFfCgPz@uGvBiSdD}`@rFon@nKaqAxDmc@xBuT|Fqc@nC_PrEcUtC_MpFcT`GqQxJmXfXwq@jQgh@hBeGhG_U|BaK|G}[nRikAzIam@tDsYfE}^v@_MbAwKn@oIr@yLrBub@jAoa@b@sRdDmjBx@aZdA}XnAqVpAgTlAqPn@oGvFye@dCeRzGwb@xT_}A`BcPrAoOvCad@jAmXv@eV`BieA~@a[fBg_@`CiZ~A_OhHqk@hHcn@tEwe@rDub@nBoW~@sN|BeZnAgMvDm\\hFs^hSigArFaY`Gc\\`C}OhD}YfByQdAaNbAkOtOu~Cn@wKz@uLfCeY|CkW~B}OhCmO|AcI~A_IvDoPpEyPdImWrDuKnL_YjI{Ptl@qfAle@u|@xI}PbImQvFwMbGgOxFkOpdAosCdD_KxGsU|E}RxFcXhCwNjDwTvBiPfBqOrAyMfBcTxAaVhAwVrCy_Al@iPt@_OtA}Q`AuJ`AgIzAkK`EoUtBsJhCaKxCaKdDaKhQeg@jGiRfGaSrFyR`HsWvL}f@xp@grC`Sq|@pEsVdAoGjF{XlkAgwHxHgj@|Jex@fg@qlEjQs{AdHwh@zDkVhEkVzI_e@v}AgzHpK_l@tE}YtEy[rC}TpFme@jg@cpEbF{d@~BoXfBqUbAyOx@yN|Ao]bAo[tIazC`@iLb@aJ~AkWbBgRdBgPjA{IdCePlAmHfBmJdCiL~CuM|DoNxhDezKdDkLvBoInFqVbCuMxBqNnAeJ~CwXdBoSb^crElFsl@`Dy[zDu^xBiRzc@aaE|Fsd@vCkShDmTpG}^lD}QzDoR|zAcdHvIob@dKoj@jDmSlKiq@xVacBhEqXnBqL|Ga^zJke@`y@ktD~Mop@tP}_AdOg`AtCiQxCyOlDkPfDoN`GiTfGkRjEwLvEsL|HkQtEkJdE{HrwAkaCrT{a@rpDiuHtE_KvLuV|{AwaDzAqCb@mAf{Ac`D~FqL~y@_fBlNmZbGaNtF}Mpn@s~AlYss@dFgK|DoGhBoCrDuE~AcBtGaGnByAnDwBnCwAfDwAnFaBjGkA~[{E`iEkn@pQaDvIwBnIiCl\\qLn}J{pDhMcGrFcDhGeEvoDehC|AsArCwChBaC`C_EzC_HbBcFd@uB`@qAn@gDdB}Kz@}Hn@iPjByx@jDcvAj@}RDsEn@yTv@a]VcPtEamFBcHT_LNkEdAiShDsi@`GudAbFgx@`@iKdP}yFhBgs@p@yRjCo_AJwCXeEb@uEz@_H|@yEnBqHrCiIpAmE`o@qhBxC_IjIuVdIcXh{AgmG`i@_{BfCuLrhAssGfFeXxbBklInCsN|_AoiGpGs_@pl@w}Czy@_kEvG{]h}@ieFbQehAdHye@lPagA|Eu\\tAmI|CwWjn@mwGj@eH|]azFl@kPjAqd@jJe|DlD}vAxAeh@@eBvVk}JzIkqDfE_aBfA{YbBk[zp@e}LhAaObCeUlAuIzAeJrb@q`CjCcOnAaIpBwOtBkTjDsg@~AiPvBwOlAcH|AkIlCkLlYudApDoN`BgHhBaJvAeIvAqJbAuHrBqQbAsLx@oL`MwrCXkFr@uJh@{FhBsOvXwoB|EqVdBmHxC}KtCcJtDgKjDoIxE}JdHcMdCuDdIoKlmB}|BjJuMfFgIlE{HlEyIdEeJ~FaOvCgInCuI`EmN`J}]rEsP`EuMzCoIxGwPpi@cnAhGgPzCiJvFmRrEwQbDyOtCoPbDwTxDq\\rAsK`BgLhB{KxBoLfCgLjDqKdBqEfEkJtSy^`EcJnDuJjAwDrCeK\\}AjCaNr@qEjAaJtNaqAdCqQ`BsItS}bAbQs{@|Kor@xBmKz}@}uDze@{zAjk@}fBjTsq@r@uCd@aDFyCIwCWcCY}Aq_@w|A{AwF_DyHgHwOgu@m_BSb@nFhL"'  	//   levels	//   numLevels:4'  	//   zoomFactor:16  	//}]  	//}  	#region -- title --  	int tooltipEnd = 0;  	{  		int x = route.IndexOf ("tooltipHtml:") + 13;  		if (x >= 13) {  			tooltipEnd = route.IndexOf ("\""' x + 1);  			if (tooltipEnd > 0) {  				int l = tooltipEnd - x;  				if (l > 0) {  					tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  				}  			}  		}  	#endregion  	#region -- points --  	#endregion  	#region -- levels --  	#endregion  	#region -- numLevel --  	#endregion  	#region -- zoomFactor --  	#endregion  	#region -- trim point overload --  	#endregion  	}  	int pointsEnd = 0;  	{  		int x = route.IndexOf ("points:"' tooltipEnd >= 0 ? tooltipEnd : 0) + 8;  		if (x >= 8) {  			pointsEnd = route.IndexOf ("\""' x + 1);  			if (pointsEnd > 0) {  				int l = pointsEnd - x;  				if (l > 0) {  					/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  					DecodePointsInto (points' route.Substring (x' l));  				}  			}  		}  	}  	string levels = string.Empty;  	int levelsEnd = 0;  	{  		int x = route.IndexOf ("levels:"' pointsEnd >= 0 ? pointsEnd : 0) + 8;  		if (x >= 8) {  			levelsEnd = route.IndexOf ("\""' x + 1);  			if (levelsEnd > 0) {  				int l = levelsEnd - x;  				if (l > 0) {  					levels = route.Substring (x' l);  				}  			}  		}  	}  	int numLevelsEnd = 0;  	{  		int x = route.IndexOf ("numLevels:"' levelsEnd >= 0 ? levelsEnd : 0) + 10;  		if (x >= 10) {  			numLevelsEnd = route.IndexOf ("'"' x);  			if (numLevelsEnd > 0) {  				int l = numLevelsEnd - x;  				if (l > 0) {  					numLevel = int.Parse (route.Substring (x' l));  				}  			}  		}  	}  	{  		int x = route.IndexOf ("zoomFactor:"' numLevelsEnd >= 0 ? numLevelsEnd : 0) + 11;  		if (x >= 11) {  			int end = route.IndexOf ("}"' x);  			if (end > 0) {  				int l = end - x;  				if (l > 0) {  					zoomFactor = int.Parse (route.Substring (x' l));  				}  			}  		}  	}  	if (points != null && numLevel > 0 && !string.IsNullOrEmpty (levels)) {  		if (points.Count - levels.Length > 0) {  			points.RemoveRange (levels.Length' points.Count - levels.Length);  		}  		//http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/description.html  		//  		string allZlevels = "TSRPONMLKJIHGFEDCBA@?";  		if (numLevel > allZlevels.Length) {  			numLevel = allZlevels.Length;  		}  		// used letters in levels string  		string pLevels = allZlevels.Substring (allZlevels.Length - numLevel);  		// remove useless points at zoom  		{  			List<PointLatLng> removedPoints = new List<PointLatLng> ();  			for (int i = 0; i < levels.Length; i++) {  				int zi = pLevels.IndexOf (levels [i]);  				if (zi > 0) {  					if (zi * numLevel > zoom) {  						removedPoints.Add (points [i]);  					}  				}  			}  			foreach (var v in removedPoints) {  				points.Remove (v);  			}  			removedPoints.Clear ();  			removedPoints = null;  		}  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (x >= 13) {  	tooltipEnd = route.IndexOf ("\""' x + 1);  	if (tooltipEnd > 0) {  		int l = tooltipEnd - x;  		if (l > 0) {  			tooltipHtml = route.Substring (x' l).Replace (@"\x26#160;"' " ");  		}  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (x >= 8) {  	pointsEnd = route.IndexOf ("\""' x + 1);  	if (pointsEnd > 0) {  		int l = pointsEnd - x;  		if (l > 0) {  			/*                                     while(l % 5 != 0)                                     {                                        l--;                                     }                                     */points = new List<PointLatLng> ();  			DecodePointsInto (points' route.Substring (x' l));  		}  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (x >= 8) {  	levelsEnd = route.IndexOf ("\""' x + 1);  	if (levelsEnd > 0) {  		int l = levelsEnd - x;  		if (l > 0) {  			levels = route.Substring (x' l);  		}  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (x >= 10) {  	numLevelsEnd = route.IndexOf ("'"' x);  	if (numLevelsEnd > 0) {  		int l = numLevelsEnd - x;  		if (l > 0) {  			numLevel = int.Parse (route.Substring (x' l));  		}  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (x >= 11) {  	int end = route.IndexOf ("}"' x);  	if (end > 0) {  		int l = end - x;  		if (l > 0) {  			zoomFactor = int.Parse (route.Substring (x' l));  		}  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,DecodePointsInto,The following statement contains a magic number: while (index < len) {  	int b;  	int shift = 0;  	int result = 0;  	do {  		b = encoded [index++] - 63;  		result |= (b & 0x1f) << shift;  		shift += 5;  	} while (b >= 0x20 && index < len);  	dlat += ((result & 1) == 1 ? ~(result >> 1) : (result >> 1));  	shift = 0;  	result = 0;  	if (index < len) {  		do {  			b = encoded [index++] - 63;  			result |= (b & 0x1f) << shift;  			shift += 5;  		} while (b >= 0x20 && index < len);  		dlng += ((result & 1) == 1 ? ~(result >> 1) : (result >> 1));  		list.Add (new PointLatLng (dlat * 1e-5' dlng * 1e-5));  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,DecodePointsInto,The following statement contains a magic number: while (index < len) {  	int b;  	int shift = 0;  	int result = 0;  	do {  		b = encoded [index++] - 63;  		result |= (b & 0x1f) << shift;  		shift += 5;  	} while (b >= 0x20 && index < len);  	dlat += ((result & 1) == 1 ? ~(result >> 1) : (result >> 1));  	shift = 0;  	result = 0;  	if (index < len) {  		do {  			b = encoded [index++] - 63;  			result |= (b & 0x1f) << shift;  			shift += 5;  		} while (b >= 0x20 && index < len);  		dlng += ((result & 1) == 1 ? ~(result >> 1) : (result >> 1));  		list.Add (new PointLatLng (dlat * 1e-5' dlng * 1e-5));  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,DecodePointsInto,The following statement contains a magic number: while (index < len) {  	int b;  	int shift = 0;  	int result = 0;  	do {  		b = encoded [index++] - 63;  		result |= (b & 0x1f) << shift;  		shift += 5;  	} while (b >= 0x20 && index < len);  	dlat += ((result & 1) == 1 ? ~(result >> 1) : (result >> 1));  	shift = 0;  	result = 0;  	if (index < len) {  		do {  			b = encoded [index++] - 63;  			result |= (b & 0x1f) << shift;  			shift += 5;  		} while (b >= 0x20 && index < len);  		dlng += ((result & 1) == 1 ? ~(result >> 1) : (result >> 1));  		list.Add (new PointLatLng (dlat * 1e-5' dlng * 1e-5));  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,DecodePointsInto,The following statement contains a magic number: while (index < len) {  	int b;  	int shift = 0;  	int result = 0;  	do {  		b = encoded [index++] - 63;  		result |= (b & 0x1f) << shift;  		shift += 5;  	} while (b >= 0x20 && index < len);  	dlat += ((result & 1) == 1 ? ~(result >> 1) : (result >> 1));  	shift = 0;  	result = 0;  	if (index < len) {  		do {  			b = encoded [index++] - 63;  			result |= (b & 0x1f) << shift;  			shift += 5;  		} while (b >= 0x20 && index < len);  		dlng += ((result & 1) == 1 ? ~(result >> 1) : (result >> 1));  		list.Add (new PointLatLng (dlat * 1e-5' dlng * 1e-5));  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,DecodePointsInto,The following statement contains a magic number: while (index < len) {  	int b;  	int shift = 0;  	int result = 0;  	do {  		b = encoded [index++] - 63;  		result |= (b & 0x1f) << shift;  		shift += 5;  	} while (b >= 0x20 && index < len);  	dlat += ((result & 1) == 1 ? ~(result >> 1) : (result >> 1));  	shift = 0;  	result = 0;  	if (index < len) {  		do {  			b = encoded [index++] - 63;  			result |= (b & 0x1f) << shift;  			shift += 5;  		} while (b >= 0x20 && index < len);  		dlng += ((result & 1) == 1 ? ~(result >> 1) : (result >> 1));  		list.Add (new PointLatLng (dlat * 1e-5' dlng * 1e-5));  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,DecodePointsInto,The following statement contains a magic number: while (index < len) {  	int b;  	int shift = 0;  	int result = 0;  	do {  		b = encoded [index++] - 63;  		result |= (b & 0x1f) << shift;  		shift += 5;  	} while (b >= 0x20 && index < len);  	dlat += ((result & 1) == 1 ? ~(result >> 1) : (result >> 1));  	shift = 0;  	result = 0;  	if (index < len) {  		do {  			b = encoded [index++] - 63;  			result |= (b & 0x1f) << shift;  			shift += 5;  		} while (b >= 0x20 && index < len);  		dlng += ((result & 1) == 1 ? ~(result >> 1) : (result >> 1));  		list.Add (new PointLatLng (dlat * 1e-5' dlng * 1e-5));  	}  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,DecodePointsInto,The following statement contains a magic number: do {  	b = encoded [index++] - 63;  	result |= (b & 0x1f) << shift;  	shift += 5;  } while (b >= 0x20 && index < len);  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,DecodePointsInto,The following statement contains a magic number: do {  	b = encoded [index++] - 63;  	result |= (b & 0x1f) << shift;  	shift += 5;  } while (b >= 0x20 && index < len);  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,DecodePointsInto,The following statement contains a magic number: b = encoded [index++] - 63;  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,DecodePointsInto,The following statement contains a magic number: shift += 5;  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,DecodePointsInto,The following statement contains a magic number: if (index < len) {  	do {  		b = encoded [index++] - 63;  		result |= (b & 0x1f) << shift;  		shift += 5;  	} while (b >= 0x20 && index < len);  	dlng += ((result & 1) == 1 ? ~(result >> 1) : (result >> 1));  	list.Add (new PointLatLng (dlat * 1e-5' dlng * 1e-5));  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,DecodePointsInto,The following statement contains a magic number: if (index < len) {  	do {  		b = encoded [index++] - 63;  		result |= (b & 0x1f) << shift;  		shift += 5;  	} while (b >= 0x20 && index < len);  	dlng += ((result & 1) == 1 ? ~(result >> 1) : (result >> 1));  	list.Add (new PointLatLng (dlat * 1e-5' dlng * 1e-5));  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,DecodePointsInto,The following statement contains a magic number: if (index < len) {  	do {  		b = encoded [index++] - 63;  		result |= (b & 0x1f) << shift;  		shift += 5;  	} while (b >= 0x20 && index < len);  	dlng += ((result & 1) == 1 ? ~(result >> 1) : (result >> 1));  	list.Add (new PointLatLng (dlat * 1e-5' dlng * 1e-5));  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,DecodePointsInto,The following statement contains a magic number: if (index < len) {  	do {  		b = encoded [index++] - 63;  		result |= (b & 0x1f) << shift;  		shift += 5;  	} while (b >= 0x20 && index < len);  	dlng += ((result & 1) == 1 ? ~(result >> 1) : (result >> 1));  	list.Add (new PointLatLng (dlat * 1e-5' dlng * 1e-5));  }  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,DecodePointsInto,The following statement contains a magic number: do {  	b = encoded [index++] - 63;  	result |= (b & 0x1f) << shift;  	shift += 5;  } while (b >= 0x20 && index < len);  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,DecodePointsInto,The following statement contains a magic number: do {  	b = encoded [index++] - 63;  	result |= (b & 0x1f) << shift;  	shift += 5;  } while (b >= 0x20 && index < len);  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,DecodePointsInto,The following statement contains a magic number: b = encoded [index++] - 63;  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,DecodePointsInto,The following statement contains a magic number: shift += 5;  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,DecodePointsInto,The following statement contains a magic number: list.Add (new PointLatLng (dlat * 1e-5' dlng * 1e-5));  
Magic Number,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,DecodePointsInto,The following statement contains a magic number: list.Add (new PointLatLng (dlat * 1e-5' dlng * 1e-5));  
Magic Number,GMap.NET.MapProviders,GoogleMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,MakeTileImageUrl,The following statement contains a magic number: return string.Format (UrlFormat' UrlFormatServer' GetServerNum (pos' 4)' UrlFormatRequest' Version' language' pos.X' sec1' pos.Y' zoom' sec2' Server);  
Magic Number,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetRoutePoints,The following statement contains a magic number: try {  	string route = GMaps.Instance.UseRouteCache ? Cache.Instance.GetContent (url' CacheType.RouteCache) : string.Empty;  	if (string.IsNullOrEmpty (route)) {  		route = GetContentUsingHttp (url);  		if (!string.IsNullOrEmpty (route)) {  			if (GMaps.Instance.UseRouteCache) {  				Cache.Instance.SaveContent (url' CacheType.RouteCache' route);  			}  		}  	}  	if (!string.IsNullOrEmpty (route)) {  		XmlDocument xmldoc = new XmlDocument ();  		xmldoc.LoadXml (route);  		System.Xml.XmlNamespaceManager xmlnsManager = new System.Xml.XmlNamespaceManager (xmldoc.NameTable);  		xmlnsManager.AddNamespace ("sm"' "http://earth.google.com/kml/2.0");  		///Folder/Placemark/LineString/coordinates  		var coordNode = xmldoc.SelectSingleNode ("/sm:kml/sm:Document/sm:Folder/sm:Placemark/sm:LineString/sm:coordinates"' xmlnsManager);  		string[] coordinates = coordNode.InnerText.Split ('\n');  		if (coordinates.Length > 0) {  			points = new List<PointLatLng> ();  			foreach (string coordinate in coordinates) {  				if (coordinate != string.Empty) {  					string[] XY = coordinate.Split (''');  					if (XY.Length == 2) {  						double lat = double.Parse (XY [1]' CultureInfo.InvariantCulture);  						double lng = double.Parse (XY [0]' CultureInfo.InvariantCulture);  						points.Add (new PointLatLng (lat' lng));  					}  				}  			}  		}  	}  } catch (Exception ex) {  	Debug.WriteLine ("GetRoutePoints: " + ex);  }  
Magic Number,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (!string.IsNullOrEmpty (route)) {  	XmlDocument xmldoc = new XmlDocument ();  	xmldoc.LoadXml (route);  	System.Xml.XmlNamespaceManager xmlnsManager = new System.Xml.XmlNamespaceManager (xmldoc.NameTable);  	xmlnsManager.AddNamespace ("sm"' "http://earth.google.com/kml/2.0");  	///Folder/Placemark/LineString/coordinates  	var coordNode = xmldoc.SelectSingleNode ("/sm:kml/sm:Document/sm:Folder/sm:Placemark/sm:LineString/sm:coordinates"' xmlnsManager);  	string[] coordinates = coordNode.InnerText.Split ('\n');  	if (coordinates.Length > 0) {  		points = new List<PointLatLng> ();  		foreach (string coordinate in coordinates) {  			if (coordinate != string.Empty) {  				string[] XY = coordinate.Split (''');  				if (XY.Length == 2) {  					double lat = double.Parse (XY [1]' CultureInfo.InvariantCulture);  					double lng = double.Parse (XY [0]' CultureInfo.InvariantCulture);  					points.Add (new PointLatLng (lat' lng));  				}  			}  		}  	}  }  
Magic Number,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (coordinates.Length > 0) {  	points = new List<PointLatLng> ();  	foreach (string coordinate in coordinates) {  		if (coordinate != string.Empty) {  			string[] XY = coordinate.Split (''');  			if (XY.Length == 2) {  				double lat = double.Parse (XY [1]' CultureInfo.InvariantCulture);  				double lng = double.Parse (XY [0]' CultureInfo.InvariantCulture);  				points.Add (new PointLatLng (lat' lng));  			}  		}  	}  }  
Magic Number,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetRoutePoints,The following statement contains a magic number: foreach (string coordinate in coordinates) {  	if (coordinate != string.Empty) {  		string[] XY = coordinate.Split (''');  		if (XY.Length == 2) {  			double lat = double.Parse (XY [1]' CultureInfo.InvariantCulture);  			double lng = double.Parse (XY [0]' CultureInfo.InvariantCulture);  			points.Add (new PointLatLng (lat' lng));  		}  	}  }  
Magic Number,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (coordinate != string.Empty) {  	string[] XY = coordinate.Split (''');  	if (XY.Length == 2) {  		double lat = double.Parse (XY [1]' CultureInfo.InvariantCulture);  		double lng = double.Parse (XY [0]' CultureInfo.InvariantCulture);  		points.Add (new PointLatLng (lat' lng));  	}  }  
Magic Number,GMap.NET.MapProviders,OpenStreetMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\OpenStreetMap\OpenStreetMapProvider.cs,GetRoutePoints,The following statement contains a magic number: if (XY.Length == 2) {  	double lat = double.Parse (XY [1]' CultureInfo.InvariantCulture);  	double lng = double.Parse (XY [0]' CultureInfo.InvariantCulture);  	points.Add (new PointLatLng (lat' lng));  }  
Magic Number,GMap.NET.MapProviders,GMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\GMapProvider.cs,GetTileImageUsingHttp,The following statement contains a magic number: if (request is HttpWebRequest) {  	var r = request as HttpWebRequest;  	r.UserAgent = UserAgent;  	r.ReadWriteTimeout = TimeoutMs * 6;  	r.Accept = requestAccept;  	r.Referer = RefererUrl;  	r.Timeout = TimeoutMs;  }   #if !PocketPC  else if (request is SocksHttpWebRequest) {  	var r = request as SocksHttpWebRequest;  	if (!string.IsNullOrEmpty (UserAgent)) {  		r.Headers.Add ("User-Agent"' UserAgent);  	}  	if (!string.IsNullOrEmpty (requestAccept)) {  		r.Headers.Add ("Accept"' requestAccept);  	}  	if (!string.IsNullOrEmpty (RefererUrl)) {  		r.Headers.Add ("Referer"' RefererUrl);  	}  }  
Magic Number,GMap.NET.MapProviders,GMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\GMapProvider.cs,GetTileImageUsingHttp,The following statement contains a magic number: r.ReadWriteTimeout = TimeoutMs * 6;  
Magic Number,GMap.NET.MapProviders,GMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\GMapProvider.cs,GetContentUsingHttp,The following statement contains a magic number: if (request is HttpWebRequest) {  	var r = request as HttpWebRequest;  	r.UserAgent = UserAgent;  	r.ReadWriteTimeout = TimeoutMs * 6;  	r.Accept = requestAccept;  	r.Referer = RefererUrl;  	r.Timeout = TimeoutMs;  }   #if !PocketPC  else if (request is SocksHttpWebRequest) {  	var r = request as SocksHttpWebRequest;  	if (!string.IsNullOrEmpty (UserAgent)) {  		r.Headers.Add ("User-Agent"' UserAgent);  	}  	if (!string.IsNullOrEmpty (requestAccept)) {  		r.Headers.Add ("Accept"' requestAccept);  	}  	if (!string.IsNullOrEmpty (RefererUrl)) {  		r.Headers.Add ("Referer"' RefererUrl);  	}  }  
Magic Number,GMap.NET.MapProviders,GMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\GMapProvider.cs,GetContentUsingHttp,The following statement contains a magic number: r.ReadWriteTimeout = TimeoutMs * 6;  
Magic Number,GMap.NET.MapProviders,GMapProvider,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\GMapProvider.cs,GetServerNum,The following statement contains a magic number: return (int)(pos.X + 2 * pos.Y) % max;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,FromLatLngToPixel,The following statement contains a magic number: empty.X = (long)PureProjection.Clip ((num * width) + 0.5' 0.0' (double)(width - 1L));  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,FromLatLngToPixel,The following statement contains a magic number: empty.Y = (long)PureProjection.Clip ((num3 * height) + 0.5' 0.0' (double)(height - 1L));  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,FromPixelToLatLng,The following statement contains a magic number: empty.Lat = 90.0 - ((360.0 * Math.Atan (Math.Exp ((-num4 * 2.0) * 3.1415926535897931))) / 3.1415926535897931);  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,FromPixelToLatLng,The following statement contains a magic number: empty.Lat = 90.0 - ((360.0 * Math.Atan (Math.Exp ((-num4 * 2.0) * 3.1415926535897931))) / 3.1415926535897931);  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,FromPixelToLatLng,The following statement contains a magic number: empty.Lat = 90.0 - ((360.0 * Math.Atan (Math.Exp ((-num4 * 2.0) * 3.1415926535897931))) / 3.1415926535897931);  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,FromPixelToLatLng,The following statement contains a magic number: empty.Lat = 90.0 - ((360.0 * Math.Atan (Math.Exp ((-num4 * 2.0) * 3.1415926535897931))) / 3.1415926535897931);  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,FromPixelToLatLng,The following statement contains a magic number: empty.Lat = 90.0 - ((360.0 * Math.Atan (Math.Exp ((-num4 * 2.0) * 3.1415926535897931))) / 3.1415926535897931);  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,FromPixelToLatLng,The following statement contains a magic number: empty.Lng = 360.0 * num3;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,outOfChina,The following statement contains a magic number: if (((lon >= 72.004) && (lon <= 137.8347)) && ((lat >= 0.8293) && (lat <= 55.8271))) {  	return false;  }  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,outOfChina,The following statement contains a magic number: if (((lon >= 72.004) && (lon <= 137.8347)) && ((lat >= 0.8293) && (lat <= 55.8271))) {  	return false;  }  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,outOfChina,The following statement contains a magic number: if (((lon >= 72.004) && (lon <= 137.8347)) && ((lat >= 0.8293) && (lat <= 55.8271))) {  	return false;  }  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,outOfChina,The following statement contains a magic number: if (((lon >= 72.004) && (lon <= 137.8347)) && ((lat >= 0.8293) && (lat <= 55.8271))) {  	return false;  }  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transform,The following statement contains a magic number: if (outOfChina (wgLat' wgLon)) {  	latlng [0] = wgLat;  	latlng [1] = wgLon;  } else {  	double num = this.transformLat (wgLon - 105.0' wgLat - 35.0);  	double num2 = this.transformLon (wgLon - 105.0' wgLat - 35.0);  	double a = (wgLat / 180.0) * 3.1415926535897931;  	double d = Math.Sin (a);  	d = 1.0 - ((this.ee * d) * d);  	double num5 = Math.Sqrt (d);  	num = (num * 180.0) / (((this.a * (1.0 - this.ee)) / (d * num5)) * 3.1415926535897931);  	num2 = (num2 * 180.0) / (((this.a / num5) * Math.Cos (a)) * 3.1415926535897931);  	latlng [0] = wgLat + num;  	latlng [1] = wgLon + num2;  }  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transform,The following statement contains a magic number: if (outOfChina (wgLat' wgLon)) {  	latlng [0] = wgLat;  	latlng [1] = wgLon;  } else {  	double num = this.transformLat (wgLon - 105.0' wgLat - 35.0);  	double num2 = this.transformLon (wgLon - 105.0' wgLat - 35.0);  	double a = (wgLat / 180.0) * 3.1415926535897931;  	double d = Math.Sin (a);  	d = 1.0 - ((this.ee * d) * d);  	double num5 = Math.Sqrt (d);  	num = (num * 180.0) / (((this.a * (1.0 - this.ee)) / (d * num5)) * 3.1415926535897931);  	num2 = (num2 * 180.0) / (((this.a / num5) * Math.Cos (a)) * 3.1415926535897931);  	latlng [0] = wgLat + num;  	latlng [1] = wgLon + num2;  }  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transform,The following statement contains a magic number: if (outOfChina (wgLat' wgLon)) {  	latlng [0] = wgLat;  	latlng [1] = wgLon;  } else {  	double num = this.transformLat (wgLon - 105.0' wgLat - 35.0);  	double num2 = this.transformLon (wgLon - 105.0' wgLat - 35.0);  	double a = (wgLat / 180.0) * 3.1415926535897931;  	double d = Math.Sin (a);  	d = 1.0 - ((this.ee * d) * d);  	double num5 = Math.Sqrt (d);  	num = (num * 180.0) / (((this.a * (1.0 - this.ee)) / (d * num5)) * 3.1415926535897931);  	num2 = (num2 * 180.0) / (((this.a / num5) * Math.Cos (a)) * 3.1415926535897931);  	latlng [0] = wgLat + num;  	latlng [1] = wgLon + num2;  }  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transform,The following statement contains a magic number: if (outOfChina (wgLat' wgLon)) {  	latlng [0] = wgLat;  	latlng [1] = wgLon;  } else {  	double num = this.transformLat (wgLon - 105.0' wgLat - 35.0);  	double num2 = this.transformLon (wgLon - 105.0' wgLat - 35.0);  	double a = (wgLat / 180.0) * 3.1415926535897931;  	double d = Math.Sin (a);  	d = 1.0 - ((this.ee * d) * d);  	double num5 = Math.Sqrt (d);  	num = (num * 180.0) / (((this.a * (1.0 - this.ee)) / (d * num5)) * 3.1415926535897931);  	num2 = (num2 * 180.0) / (((this.a / num5) * Math.Cos (a)) * 3.1415926535897931);  	latlng [0] = wgLat + num;  	latlng [1] = wgLon + num2;  }  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transform,The following statement contains a magic number: if (outOfChina (wgLat' wgLon)) {  	latlng [0] = wgLat;  	latlng [1] = wgLon;  } else {  	double num = this.transformLat (wgLon - 105.0' wgLat - 35.0);  	double num2 = this.transformLon (wgLon - 105.0' wgLat - 35.0);  	double a = (wgLat / 180.0) * 3.1415926535897931;  	double d = Math.Sin (a);  	d = 1.0 - ((this.ee * d) * d);  	double num5 = Math.Sqrt (d);  	num = (num * 180.0) / (((this.a * (1.0 - this.ee)) / (d * num5)) * 3.1415926535897931);  	num2 = (num2 * 180.0) / (((this.a / num5) * Math.Cos (a)) * 3.1415926535897931);  	latlng [0] = wgLat + num;  	latlng [1] = wgLon + num2;  }  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transform,The following statement contains a magic number: if (outOfChina (wgLat' wgLon)) {  	latlng [0] = wgLat;  	latlng [1] = wgLon;  } else {  	double num = this.transformLat (wgLon - 105.0' wgLat - 35.0);  	double num2 = this.transformLon (wgLon - 105.0' wgLat - 35.0);  	double a = (wgLat / 180.0) * 3.1415926535897931;  	double d = Math.Sin (a);  	d = 1.0 - ((this.ee * d) * d);  	double num5 = Math.Sqrt (d);  	num = (num * 180.0) / (((this.a * (1.0 - this.ee)) / (d * num5)) * 3.1415926535897931);  	num2 = (num2 * 180.0) / (((this.a / num5) * Math.Cos (a)) * 3.1415926535897931);  	latlng [0] = wgLat + num;  	latlng [1] = wgLon + num2;  }  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transform,The following statement contains a magic number: if (outOfChina (wgLat' wgLon)) {  	latlng [0] = wgLat;  	latlng [1] = wgLon;  } else {  	double num = this.transformLat (wgLon - 105.0' wgLat - 35.0);  	double num2 = this.transformLon (wgLon - 105.0' wgLat - 35.0);  	double a = (wgLat / 180.0) * 3.1415926535897931;  	double d = Math.Sin (a);  	d = 1.0 - ((this.ee * d) * d);  	double num5 = Math.Sqrt (d);  	num = (num * 180.0) / (((this.a * (1.0 - this.ee)) / (d * num5)) * 3.1415926535897931);  	num2 = (num2 * 180.0) / (((this.a / num5) * Math.Cos (a)) * 3.1415926535897931);  	latlng [0] = wgLat + num;  	latlng [1] = wgLon + num2;  }  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transform,The following statement contains a magic number: if (outOfChina (wgLat' wgLon)) {  	latlng [0] = wgLat;  	latlng [1] = wgLon;  } else {  	double num = this.transformLat (wgLon - 105.0' wgLat - 35.0);  	double num2 = this.transformLon (wgLon - 105.0' wgLat - 35.0);  	double a = (wgLat / 180.0) * 3.1415926535897931;  	double d = Math.Sin (a);  	d = 1.0 - ((this.ee * d) * d);  	double num5 = Math.Sqrt (d);  	num = (num * 180.0) / (((this.a * (1.0 - this.ee)) / (d * num5)) * 3.1415926535897931);  	num2 = (num2 * 180.0) / (((this.a / num5) * Math.Cos (a)) * 3.1415926535897931);  	latlng [0] = wgLat + num;  	latlng [1] = wgLon + num2;  }  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transform,The following statement contains a magic number: if (outOfChina (wgLat' wgLon)) {  	latlng [0] = wgLat;  	latlng [1] = wgLon;  } else {  	double num = this.transformLat (wgLon - 105.0' wgLat - 35.0);  	double num2 = this.transformLon (wgLon - 105.0' wgLat - 35.0);  	double a = (wgLat / 180.0) * 3.1415926535897931;  	double d = Math.Sin (a);  	d = 1.0 - ((this.ee * d) * d);  	double num5 = Math.Sqrt (d);  	num = (num * 180.0) / (((this.a * (1.0 - this.ee)) / (d * num5)) * 3.1415926535897931);  	num2 = (num2 * 180.0) / (((this.a / num5) * Math.Cos (a)) * 3.1415926535897931);  	latlng [0] = wgLat + num;  	latlng [1] = wgLon + num2;  }  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transform,The following statement contains a magic number: if (outOfChina (wgLat' wgLon)) {  	latlng [0] = wgLat;  	latlng [1] = wgLon;  } else {  	double num = this.transformLat (wgLon - 105.0' wgLat - 35.0);  	double num2 = this.transformLon (wgLon - 105.0' wgLat - 35.0);  	double a = (wgLat / 180.0) * 3.1415926535897931;  	double d = Math.Sin (a);  	d = 1.0 - ((this.ee * d) * d);  	double num5 = Math.Sqrt (d);  	num = (num * 180.0) / (((this.a * (1.0 - this.ee)) / (d * num5)) * 3.1415926535897931);  	num2 = (num2 * 180.0) / (((this.a / num5) * Math.Cos (a)) * 3.1415926535897931);  	latlng [0] = wgLat + num;  	latlng [1] = wgLon + num2;  }  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transform,The following statement contains a magic number: num = (num * 180.0) / (((this.a * (1.0 - this.ee)) / (d * num5)) * 3.1415926535897931);  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transform,The following statement contains a magic number: num = (num * 180.0) / (((this.a * (1.0 - this.ee)) / (d * num5)) * 3.1415926535897931);  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transform,The following statement contains a magic number: num2 = (num2 * 180.0) / (((this.a / num5) * Math.Cos (a)) * 3.1415926535897931);  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transform,The following statement contains a magic number: num2 = (num2 * 180.0) / (((this.a / num5) * Math.Cos (a)) * 3.1415926535897931);  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: num += (((20.0 * Math.Sin ((6.0 * x) * 3.1415926535897931)) + (20.0 * Math.Sin ((2.0 * x) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: num += (((20.0 * Math.Sin ((6.0 * x) * 3.1415926535897931)) + (20.0 * Math.Sin ((2.0 * x) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: num += (((20.0 * Math.Sin ((6.0 * x) * 3.1415926535897931)) + (20.0 * Math.Sin ((2.0 * x) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: num += (((20.0 * Math.Sin ((6.0 * x) * 3.1415926535897931)) + (20.0 * Math.Sin ((2.0 * x) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: num += (((20.0 * Math.Sin ((6.0 * x) * 3.1415926535897931)) + (20.0 * Math.Sin ((2.0 * x) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: num += (((20.0 * Math.Sin ((6.0 * x) * 3.1415926535897931)) + (20.0 * Math.Sin ((2.0 * x) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: num += (((20.0 * Math.Sin ((6.0 * x) * 3.1415926535897931)) + (20.0 * Math.Sin ((2.0 * x) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: num += (((20.0 * Math.Sin ((6.0 * x) * 3.1415926535897931)) + (20.0 * Math.Sin ((2.0 * x) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: num += (((20.0 * Math.Sin (y * 3.1415926535897931)) + (40.0 * Math.Sin ((y / 3.0) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: num += (((20.0 * Math.Sin (y * 3.1415926535897931)) + (40.0 * Math.Sin ((y / 3.0) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: num += (((20.0 * Math.Sin (y * 3.1415926535897931)) + (40.0 * Math.Sin ((y / 3.0) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: num += (((20.0 * Math.Sin (y * 3.1415926535897931)) + (40.0 * Math.Sin ((y / 3.0) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: num += (((20.0 * Math.Sin (y * 3.1415926535897931)) + (40.0 * Math.Sin ((y / 3.0) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: num += (((20.0 * Math.Sin (y * 3.1415926535897931)) + (40.0 * Math.Sin ((y / 3.0) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: num += (((20.0 * Math.Sin (y * 3.1415926535897931)) + (40.0 * Math.Sin ((y / 3.0) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: return (num + ((((160.0 * Math.Sin ((y / 12.0) * 3.1415926535897931)) + (320.0 * Math.Sin ((y * 3.1415926535897931) / 30.0))) * 2.0) / 3.0));  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: return (num + ((((160.0 * Math.Sin ((y / 12.0) * 3.1415926535897931)) + (320.0 * Math.Sin ((y * 3.1415926535897931) / 30.0))) * 2.0) / 3.0));  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: return (num + ((((160.0 * Math.Sin ((y / 12.0) * 3.1415926535897931)) + (320.0 * Math.Sin ((y * 3.1415926535897931) / 30.0))) * 2.0) / 3.0));  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: return (num + ((((160.0 * Math.Sin ((y / 12.0) * 3.1415926535897931)) + (320.0 * Math.Sin ((y * 3.1415926535897931) / 30.0))) * 2.0) / 3.0));  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: return (num + ((((160.0 * Math.Sin ((y / 12.0) * 3.1415926535897931)) + (320.0 * Math.Sin ((y * 3.1415926535897931) / 30.0))) * 2.0) / 3.0));  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: return (num + ((((160.0 * Math.Sin ((y / 12.0) * 3.1415926535897931)) + (320.0 * Math.Sin ((y * 3.1415926535897931) / 30.0))) * 2.0) / 3.0));  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: return (num + ((((160.0 * Math.Sin ((y / 12.0) * 3.1415926535897931)) + (320.0 * Math.Sin ((y * 3.1415926535897931) / 30.0))) * 2.0) / 3.0));  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLat,The following statement contains a magic number: return (num + ((((160.0 * Math.Sin ((y / 12.0) * 3.1415926535897931)) + (320.0 * Math.Sin ((y * 3.1415926535897931) / 30.0))) * 2.0) / 3.0));  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: num += (((20.0 * Math.Sin ((6.0 * x) * 3.1415926535897931)) + (20.0 * Math.Sin ((2.0 * x) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: num += (((20.0 * Math.Sin ((6.0 * x) * 3.1415926535897931)) + (20.0 * Math.Sin ((2.0 * x) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: num += (((20.0 * Math.Sin ((6.0 * x) * 3.1415926535897931)) + (20.0 * Math.Sin ((2.0 * x) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: num += (((20.0 * Math.Sin ((6.0 * x) * 3.1415926535897931)) + (20.0 * Math.Sin ((2.0 * x) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: num += (((20.0 * Math.Sin ((6.0 * x) * 3.1415926535897931)) + (20.0 * Math.Sin ((2.0 * x) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: num += (((20.0 * Math.Sin ((6.0 * x) * 3.1415926535897931)) + (20.0 * Math.Sin ((2.0 * x) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: num += (((20.0 * Math.Sin ((6.0 * x) * 3.1415926535897931)) + (20.0 * Math.Sin ((2.0 * x) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: num += (((20.0 * Math.Sin ((6.0 * x) * 3.1415926535897931)) + (20.0 * Math.Sin ((2.0 * x) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: num += (((20.0 * Math.Sin (x * 3.1415926535897931)) + (40.0 * Math.Sin ((x / 3.0) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: num += (((20.0 * Math.Sin (x * 3.1415926535897931)) + (40.0 * Math.Sin ((x / 3.0) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: num += (((20.0 * Math.Sin (x * 3.1415926535897931)) + (40.0 * Math.Sin ((x / 3.0) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: num += (((20.0 * Math.Sin (x * 3.1415926535897931)) + (40.0 * Math.Sin ((x / 3.0) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: num += (((20.0 * Math.Sin (x * 3.1415926535897931)) + (40.0 * Math.Sin ((x / 3.0) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: num += (((20.0 * Math.Sin (x * 3.1415926535897931)) + (40.0 * Math.Sin ((x / 3.0) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: num += (((20.0 * Math.Sin (x * 3.1415926535897931)) + (40.0 * Math.Sin ((x / 3.0) * 3.1415926535897931))) * 2.0) / 3.0;  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: return (num + ((((150.0 * Math.Sin ((x / 12.0) * 3.1415926535897931)) + (300.0 * Math.Sin ((x / 30.0) * 3.1415926535897931))) * 2.0) / 3.0));  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: return (num + ((((150.0 * Math.Sin ((x / 12.0) * 3.1415926535897931)) + (300.0 * Math.Sin ((x / 30.0) * 3.1415926535897931))) * 2.0) / 3.0));  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: return (num + ((((150.0 * Math.Sin ((x / 12.0) * 3.1415926535897931)) + (300.0 * Math.Sin ((x / 30.0) * 3.1415926535897931))) * 2.0) / 3.0));  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: return (num + ((((150.0 * Math.Sin ((x / 12.0) * 3.1415926535897931)) + (300.0 * Math.Sin ((x / 30.0) * 3.1415926535897931))) * 2.0) / 3.0));  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: return (num + ((((150.0 * Math.Sin ((x / 12.0) * 3.1415926535897931)) + (300.0 * Math.Sin ((x / 30.0) * 3.1415926535897931))) * 2.0) / 3.0));  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: return (num + ((((150.0 * Math.Sin ((x / 12.0) * 3.1415926535897931)) + (300.0 * Math.Sin ((x / 30.0) * 3.1415926535897931))) * 2.0) / 3.0));  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: return (num + ((((150.0 * Math.Sin ((x / 12.0) * 3.1415926535897931)) + (300.0 * Math.Sin ((x / 30.0) * 3.1415926535897931))) * 2.0) / 3.0));  
Magic Number,GMap.NET.Projections,MercatorProjectionGCJ,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjectionGCJ.cs,transformLon,The following statement contains a magic number: return (num + ((((150.0 * Math.Sin ((x / 12.0) * 3.1415926535897931)) + (300.0 * Math.Sin ((x / 30.0) * 3.1415926535897931))) * 2.0) / 3.0));  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 0.0118973050291514;  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 0.0059486525145757;  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 0.00297432625728785;  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 0.00118973050291514;  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 0.00059486525145757;  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 0.000356919150874542;  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 0.000178459575437271;  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 0.000118973050291514;  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 5.9486525145757E-05;  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 3.56919150874542E-05;  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 1.90356880466422E-05;  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 9.51784402332112E-06;  
Magic Number,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 4.75892201166056E-06;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: if (pnt [0] != 0.0) {  	lon = Math.Atan2 (pnt [1]' pnt [0]);  } else {  	if (pnt [1] > 0) {  		lon = Math.PI / 2;  	} else if (pnt [1] < 0) {  		lon = -Math.PI * 0.5;  	} else {  		AtPole = true;  		lon = 0.0;  		if (Z > 0.0)// north pole  		 {  			lat = Math.PI * 0.5;  		} else if (Z < 0.0)// south pole  		 {  			lat = -Math.PI * 0.5;  		} else// center of earth  		 {  			return new double[] {  				RadiansToDegrees (lon)'  				RadiansToDegrees (Math.PI * 0.5)'  				-semiMinor'  			};  		}  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: if (pnt [0] != 0.0) {  	lon = Math.Atan2 (pnt [1]' pnt [0]);  } else {  	if (pnt [1] > 0) {  		lon = Math.PI / 2;  	} else if (pnt [1] < 0) {  		lon = -Math.PI * 0.5;  	} else {  		AtPole = true;  		lon = 0.0;  		if (Z > 0.0)// north pole  		 {  			lat = Math.PI * 0.5;  		} else if (Z < 0.0)// south pole  		 {  			lat = -Math.PI * 0.5;  		} else// center of earth  		 {  			return new double[] {  				RadiansToDegrees (lon)'  				RadiansToDegrees (Math.PI * 0.5)'  				-semiMinor'  			};  		}  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: if (pnt [0] != 0.0) {  	lon = Math.Atan2 (pnt [1]' pnt [0]);  } else {  	if (pnt [1] > 0) {  		lon = Math.PI / 2;  	} else if (pnt [1] < 0) {  		lon = -Math.PI * 0.5;  	} else {  		AtPole = true;  		lon = 0.0;  		if (Z > 0.0)// north pole  		 {  			lat = Math.PI * 0.5;  		} else if (Z < 0.0)// south pole  		 {  			lat = -Math.PI * 0.5;  		} else// center of earth  		 {  			return new double[] {  				RadiansToDegrees (lon)'  				RadiansToDegrees (Math.PI * 0.5)'  				-semiMinor'  			};  		}  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: if (pnt [0] != 0.0) {  	lon = Math.Atan2 (pnt [1]' pnt [0]);  } else {  	if (pnt [1] > 0) {  		lon = Math.PI / 2;  	} else if (pnt [1] < 0) {  		lon = -Math.PI * 0.5;  	} else {  		AtPole = true;  		lon = 0.0;  		if (Z > 0.0)// north pole  		 {  			lat = Math.PI * 0.5;  		} else if (Z < 0.0)// south pole  		 {  			lat = -Math.PI * 0.5;  		} else// center of earth  		 {  			return new double[] {  				RadiansToDegrees (lon)'  				RadiansToDegrees (Math.PI * 0.5)'  				-semiMinor'  			};  		}  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: if (pnt [0] != 0.0) {  	lon = Math.Atan2 (pnt [1]' pnt [0]);  } else {  	if (pnt [1] > 0) {  		lon = Math.PI / 2;  	} else if (pnt [1] < 0) {  		lon = -Math.PI * 0.5;  	} else {  		AtPole = true;  		lon = 0.0;  		if (Z > 0.0)// north pole  		 {  			lat = Math.PI * 0.5;  		} else if (Z < 0.0)// south pole  		 {  			lat = -Math.PI * 0.5;  		} else// center of earth  		 {  			return new double[] {  				RadiansToDegrees (lon)'  				RadiansToDegrees (Math.PI * 0.5)'  				-semiMinor'  			};  		}  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: if (pnt [1] > 0) {  	lon = Math.PI / 2;  } else if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	AtPole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: if (pnt [1] > 0) {  	lon = Math.PI / 2;  } else if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	AtPole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: if (pnt [1] > 0) {  	lon = Math.PI / 2;  } else if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	AtPole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: if (pnt [1] > 0) {  	lon = Math.PI / 2;  } else if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	AtPole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: if (pnt [1] > 0) {  	lon = Math.PI / 2;  } else if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	AtPole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: lon = Math.PI / 2;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	AtPole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	AtPole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	AtPole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	AtPole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: lon = -Math.PI * 0.5;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: if (Z > 0.0)// north pole   {  	lat = Math.PI * 0.5;  } else if (Z < 0.0)// south pole   {  	lat = -Math.PI * 0.5;  } else// center of earth   {  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (Math.PI * 0.5)'  		-semiMinor'  	};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: if (Z > 0.0)// north pole   {  	lat = Math.PI * 0.5;  } else if (Z < 0.0)// south pole   {  	lat = -Math.PI * 0.5;  } else// center of earth   {  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (Math.PI * 0.5)'  		-semiMinor'  	};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: if (Z > 0.0)// north pole   {  	lat = Math.PI * 0.5;  } else if (Z < 0.0)// south pole   {  	lat = -Math.PI * 0.5;  } else// center of earth   {  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (Math.PI * 0.5)'  		-semiMinor'  	};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: lat = Math.PI * 0.5;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: if (Z < 0.0)// south pole   {  	lat = -Math.PI * 0.5;  } else// center of earth   {  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (Math.PI * 0.5)'  		-semiMinor'  	};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: if (Z < 0.0)// south pole   {  	lat = -Math.PI * 0.5;  } else// center of earth   {  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (Math.PI * 0.5)'  		-semiMinor'  	};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: lat = -Math.PI * 0.5;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD10,The following statement contains a magic number: return new double[] {  	RadiansToDegrees (lon)'  	RadiansToDegrees (Math.PI * 0.5)'  	-semiMinor'  };  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,DTM00,The following statement contains a magic number: es = 1.0 - Math.Pow (semiMinor / semiMajor' 2);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,DTM00,The following statement contains a magic number: als = Math.Pow (al' 2);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,DTM00,The following statement contains a magic number: c = esp * Math.Pow (cos_phi' 2);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,DTM00,The following statement contains a magic number: t = Math.Pow (tq' 2);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,DTM00,The following statement contains a magic number: con = 1.0 - es * Math.Pow (sin_phi' 2);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,DTM00,The following statement contains a magic number: if (lonlat.Length < 3)  	return new double[] {  		x / metersPerUnit'  		y / metersPerUnit  	};  else  	return new double[] {  		x / metersPerUnit'  		y / metersPerUnit'  		lonlat [2]  	};  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,DTM00,The following statement contains a magic number: if (lonlat.Length < 3)  	return new double[] {  		x / metersPerUnit'  		y / metersPerUnit  	};  else  	return new double[] {  		x / metersPerUnit'  		y / metersPerUnit'  		lonlat [2]  	};  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,DTM00,The following statement contains a magic number: return new double[] {  	x / metersPerUnit'  	y / metersPerUnit'  	lonlat [2]  };  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: if (pnt [0] != 0.0) {  	lon = Math.Atan2 (pnt [1]' pnt [0]);  } else {  	if (pnt [1] > 0) {  		lon = Math.PI / 2;  	} else if (pnt [1] < 0) {  		lon = -Math.PI * 0.5;  	} else {  		At_Pole = true;  		lon = 0.0;  		if (Z > 0.0)// north pole  		 {  			lat = Math.PI * 0.5;  		} else if (Z < 0.0)// south pole  		 {  			lat = -Math.PI * 0.5;  		} else// center of earth  		 {  			return new double[] {  				RadiansToDegrees (lon)'  				RadiansToDegrees (Math.PI * 0.5)'  				-semiMinor2'  			};  		}  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: if (pnt [0] != 0.0) {  	lon = Math.Atan2 (pnt [1]' pnt [0]);  } else {  	if (pnt [1] > 0) {  		lon = Math.PI / 2;  	} else if (pnt [1] < 0) {  		lon = -Math.PI * 0.5;  	} else {  		At_Pole = true;  		lon = 0.0;  		if (Z > 0.0)// north pole  		 {  			lat = Math.PI * 0.5;  		} else if (Z < 0.0)// south pole  		 {  			lat = -Math.PI * 0.5;  		} else// center of earth  		 {  			return new double[] {  				RadiansToDegrees (lon)'  				RadiansToDegrees (Math.PI * 0.5)'  				-semiMinor2'  			};  		}  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: if (pnt [0] != 0.0) {  	lon = Math.Atan2 (pnt [1]' pnt [0]);  } else {  	if (pnt [1] > 0) {  		lon = Math.PI / 2;  	} else if (pnt [1] < 0) {  		lon = -Math.PI * 0.5;  	} else {  		At_Pole = true;  		lon = 0.0;  		if (Z > 0.0)// north pole  		 {  			lat = Math.PI * 0.5;  		} else if (Z < 0.0)// south pole  		 {  			lat = -Math.PI * 0.5;  		} else// center of earth  		 {  			return new double[] {  				RadiansToDegrees (lon)'  				RadiansToDegrees (Math.PI * 0.5)'  				-semiMinor2'  			};  		}  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: if (pnt [0] != 0.0) {  	lon = Math.Atan2 (pnt [1]' pnt [0]);  } else {  	if (pnt [1] > 0) {  		lon = Math.PI / 2;  	} else if (pnt [1] < 0) {  		lon = -Math.PI * 0.5;  	} else {  		At_Pole = true;  		lon = 0.0;  		if (Z > 0.0)// north pole  		 {  			lat = Math.PI * 0.5;  		} else if (Z < 0.0)// south pole  		 {  			lat = -Math.PI * 0.5;  		} else// center of earth  		 {  			return new double[] {  				RadiansToDegrees (lon)'  				RadiansToDegrees (Math.PI * 0.5)'  				-semiMinor2'  			};  		}  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: if (pnt [0] != 0.0) {  	lon = Math.Atan2 (pnt [1]' pnt [0]);  } else {  	if (pnt [1] > 0) {  		lon = Math.PI / 2;  	} else if (pnt [1] < 0) {  		lon = -Math.PI * 0.5;  	} else {  		At_Pole = true;  		lon = 0.0;  		if (Z > 0.0)// north pole  		 {  			lat = Math.PI * 0.5;  		} else if (Z < 0.0)// south pole  		 {  			lat = -Math.PI * 0.5;  		} else// center of earth  		 {  			return new double[] {  				RadiansToDegrees (lon)'  				RadiansToDegrees (Math.PI * 0.5)'  				-semiMinor2'  			};  		}  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: if (pnt [1] > 0) {  	lon = Math.PI / 2;  } else if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	At_Pole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor2'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: if (pnt [1] > 0) {  	lon = Math.PI / 2;  } else if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	At_Pole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor2'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: if (pnt [1] > 0) {  	lon = Math.PI / 2;  } else if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	At_Pole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor2'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: if (pnt [1] > 0) {  	lon = Math.PI / 2;  } else if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	At_Pole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor2'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: if (pnt [1] > 0) {  	lon = Math.PI / 2;  } else if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	At_Pole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor2'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: lon = Math.PI / 2;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	At_Pole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor2'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	At_Pole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor2'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	At_Pole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor2'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	At_Pole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor2'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: lon = -Math.PI * 0.5;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: if (Z > 0.0)// north pole   {  	lat = Math.PI * 0.5;  } else if (Z < 0.0)// south pole   {  	lat = -Math.PI * 0.5;  } else// center of earth   {  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (Math.PI * 0.5)'  		-semiMinor2'  	};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: if (Z > 0.0)// north pole   {  	lat = Math.PI * 0.5;  } else if (Z < 0.0)// south pole   {  	lat = -Math.PI * 0.5;  } else// center of earth   {  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (Math.PI * 0.5)'  		-semiMinor2'  	};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: if (Z > 0.0)// north pole   {  	lat = Math.PI * 0.5;  } else if (Z < 0.0)// south pole   {  	lat = -Math.PI * 0.5;  } else// center of earth   {  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (Math.PI * 0.5)'  		-semiMinor2'  	};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: lat = Math.PI * 0.5;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: if (Z < 0.0)// south pole   {  	lat = -Math.PI * 0.5;  } else// center of earth   {  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (Math.PI * 0.5)'  		-semiMinor2'  	};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: if (Z < 0.0)// south pole   {  	lat = -Math.PI * 0.5;  } else// center of earth   {  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (Math.PI * 0.5)'  		-semiMinor2'  	};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: lat = -Math.PI * 0.5;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD01,The following statement contains a magic number: return new double[] {  	RadiansToDegrees (lon)'  	RadiansToDegrees (Math.PI * 0.5)'  	-semiMinor2'  };  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: es = 1.0 - Math.Pow (semiMinor / semiMajor' 2);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: for (i = 0; ; i++) {  	delta_phi = ((con + e1 * Math.Sin (2.0 * phi) - e2 * Math.Sin (4.0 * phi) + e3 * Math.Sin (6.0 * phi)) / e0) - phi;  	phi += delta_phi;  	if (Math.Abs (delta_phi) <= EPSLoN)  		break;  	if (i >= max_iter)  		throw new ArgumentException ("Latitude failed to converge");  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: for (i = 0; ; i++) {  	delta_phi = ((con + e1 * Math.Sin (2.0 * phi) - e2 * Math.Sin (4.0 * phi) + e3 * Math.Sin (6.0 * phi)) / e0) - phi;  	phi += delta_phi;  	if (Math.Abs (delta_phi) <= EPSLoN)  		break;  	if (i >= max_iter)  		throw new ArgumentException ("Latitude failed to converge");  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: for (i = 0; ; i++) {  	delta_phi = ((con + e1 * Math.Sin (2.0 * phi) - e2 * Math.Sin (4.0 * phi) + e3 * Math.Sin (6.0 * phi)) / e0) - phi;  	phi += delta_phi;  	if (Math.Abs (delta_phi) <= EPSLoN)  		break;  	if (i >= max_iter)  		throw new ArgumentException ("Latitude failed to converge");  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: delta_phi = ((con + e1 * Math.Sin (2.0 * phi) - e2 * Math.Sin (4.0 * phi) + e3 * Math.Sin (6.0 * phi)) / e0) - phi;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: delta_phi = ((con + e1 * Math.Sin (2.0 * phi) - e2 * Math.Sin (4.0 * phi) + e3 * Math.Sin (6.0 * phi)) / e0) - phi;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: delta_phi = ((con + e1 * Math.Sin (2.0 * phi) - e2 * Math.Sin (4.0 * phi) + e3 * Math.Sin (6.0 * phi)) / e0) - phi;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: c = esp * Math.Pow (cos_phi' 2);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: cs = Math.Pow (c' 2);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: t = Math.Pow (tan_phi' 2);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: ts = Math.Pow (t' 2);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: con = 1.0 - es * Math.Pow (sin_phi' 2);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: ds = Math.Pow (d' 2);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (p.Length < 3)  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (lat)  	};  else  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (lat)'  		p [2]  	};  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (p.Length < 3)  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (lat)  	};  else  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (lat)'  		p [2]  	};  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: return new double[] {  	RadiansToDegrees (lon)'  	RadiansToDegrees (lat)'  	p [2]  };  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (p.Length < 3)  	return new double[] {  		RadiansToDegrees (HALF_PI * Sign (y))'  		RadiansToDegrees (centralMeridian)  	};  else  	return new double[] {  		RadiansToDegrees (HALF_PI * Sign (y))'  		RadiansToDegrees (centralMeridian)'  		p [2]  	};  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: if (p.Length < 3)  	return new double[] {  		RadiansToDegrees (HALF_PI * Sign (y))'  		RadiansToDegrees (centralMeridian)  	};  else  	return new double[] {  		RadiansToDegrees (HALF_PI * Sign (y))'  		RadiansToDegrees (centralMeridian)'  		p [2]  	};  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,MTD11,The following statement contains a magic number: return new double[] {  	RadiansToDegrees (HALF_PI * Sign (y))'  	RadiansToDegrees (centralMeridian)'  	p [2]  };  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 1587.50317500635;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 793.751587503175;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 529.167725002117;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 264.583862501058;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 132.291931250529;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 52.9167725002117;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 26.4583862501058;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 13.2291931250529;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 6.61459656252646;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 2.64583862501058;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 1.32291931250529;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 0.529167725002117;  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (13' 8);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (13' 8);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (26' 17);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (26' 17);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (39' 26);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (39' 26);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (79' 52);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (79' 52);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (159' 105);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (159' 105);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (399' 262);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (399' 262);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (798' 525);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (798' 525);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (1597' 1050);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (1597' 1050);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (3195' 2101);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (3195' 2101);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (7989' 5254);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (7989' 5254);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (15978' 10509);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (15978' 10509);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (39945' 26273);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (39945' 26273);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (14' 9);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (14' 9);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (28' 18);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (28' 18);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (43' 28);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (43' 28);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (86' 56);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (86' 56);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (173' 112);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (173' 112);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (434' 282);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (434' 282);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (868' 564);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (868' 564);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (1737' 1129);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (1737' 1129);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (3474' 2258);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (3474' 2258);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (8686' 5647);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (8686' 5647);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (17372' 11294);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (17372' 11294);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (43430' 28236);  
Magic Number,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (43430' 28236);  
Magic Number,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,getLCM,The following statement contains a magic number: if ((zone < 1) || (zone > 60)) {  	throw new Exception ("MapyCZProjection: UTM Zone number is not between 1 and 60.");  } else {  	return ((zone * 6) - 183);  }  
Magic Number,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,getLCM,The following statement contains a magic number: if ((zone < 1) || (zone > 60)) {  	throw new Exception ("MapyCZProjection: UTM Zone number is not between 1 and 60.");  } else {  	return ((zone * 6) - 183);  }  
Magic Number,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,getLCM,The following statement contains a magic number: if ((zone < 1) || (zone > 60)) {  	throw new Exception ("MapyCZProjection: UTM Zone number is not between 1 and 60.");  } else {  	return ((zone * 6) - 183);  }  
Magic Number,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,getLCM,The following statement contains a magic number: return ((zone * 6) - 183);  
Magic Number,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,getLCM,The following statement contains a magic number: return ((zone * 6) - 183);  
Magic Number,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,roundoff,The following statement contains a magic number: x = Math.Round (x * Math.Pow (10' y)) / Math.Pow (10' y);  
Magic Number,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,roundoff,The following statement contains a magic number: x = Math.Round (x * Math.Pow (10' y)) / Math.Pow (10' y);  
Magic Number,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,FromLatLngToPixel,The following statement contains a magic number: ret.X = (long)l [0] >> (20 - zoom);  
Magic Number,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,FromLatLngToPixel,The following statement contains a magic number: ret.Y = size.Height - ((long)l [1] >> (20 - zoom));  
Magic Number,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,GetTileMatrixSizeXY,The following statement contains a magic number: return new GSize ((long)Math.Pow (2' zoom)' (long)Math.Pow (2' zoom));  
Magic Number,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,GetTileMatrixSizeXY,The following statement contains a magic number: return new GSize ((long)Math.Pow (2' zoom)' (long)Math.Pow (2' zoom));  
Magic Number,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,GetTileMatrixSizePixel,The following statement contains a magic number: return new GSize (s.Width << 8' s.Height << 8);  
Magic Number,GMap.NET.Projections,MapyCZProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapyCZProjection.cs,GetTileMatrixSizePixel,The following statement contains a magic number: return new GSize (s.Width << 8' s.Height << 8);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: if (pnt [0] != 0.0) {  	lon = Math.Atan2 (pnt [1]' pnt [0]);  } else {  	if (pnt [1] > 0) {  		lon = Math.PI / 2;  	} else if (pnt [1] < 0) {  		lon = -Math.PI * 0.5;  	} else {  		AtPole = true;  		lon = 0.0;  		if (Z > 0.0)// north pole  		 {  			lat = Math.PI * 0.5;  		} else if (Z < 0.0)// south pole  		 {  			lat = -Math.PI * 0.5;  		} else// center of earth  		 {  			return new double[] {  				RadiansToDegrees (lon)'  				RadiansToDegrees (Math.PI * 0.5)'  				-semiMinor'  			};  		}  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: if (pnt [0] != 0.0) {  	lon = Math.Atan2 (pnt [1]' pnt [0]);  } else {  	if (pnt [1] > 0) {  		lon = Math.PI / 2;  	} else if (pnt [1] < 0) {  		lon = -Math.PI * 0.5;  	} else {  		AtPole = true;  		lon = 0.0;  		if (Z > 0.0)// north pole  		 {  			lat = Math.PI * 0.5;  		} else if (Z < 0.0)// south pole  		 {  			lat = -Math.PI * 0.5;  		} else// center of earth  		 {  			return new double[] {  				RadiansToDegrees (lon)'  				RadiansToDegrees (Math.PI * 0.5)'  				-semiMinor'  			};  		}  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: if (pnt [0] != 0.0) {  	lon = Math.Atan2 (pnt [1]' pnt [0]);  } else {  	if (pnt [1] > 0) {  		lon = Math.PI / 2;  	} else if (pnt [1] < 0) {  		lon = -Math.PI * 0.5;  	} else {  		AtPole = true;  		lon = 0.0;  		if (Z > 0.0)// north pole  		 {  			lat = Math.PI * 0.5;  		} else if (Z < 0.0)// south pole  		 {  			lat = -Math.PI * 0.5;  		} else// center of earth  		 {  			return new double[] {  				RadiansToDegrees (lon)'  				RadiansToDegrees (Math.PI * 0.5)'  				-semiMinor'  			};  		}  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: if (pnt [0] != 0.0) {  	lon = Math.Atan2 (pnt [1]' pnt [0]);  } else {  	if (pnt [1] > 0) {  		lon = Math.PI / 2;  	} else if (pnt [1] < 0) {  		lon = -Math.PI * 0.5;  	} else {  		AtPole = true;  		lon = 0.0;  		if (Z > 0.0)// north pole  		 {  			lat = Math.PI * 0.5;  		} else if (Z < 0.0)// south pole  		 {  			lat = -Math.PI * 0.5;  		} else// center of earth  		 {  			return new double[] {  				RadiansToDegrees (lon)'  				RadiansToDegrees (Math.PI * 0.5)'  				-semiMinor'  			};  		}  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: if (pnt [0] != 0.0) {  	lon = Math.Atan2 (pnt [1]' pnt [0]);  } else {  	if (pnt [1] > 0) {  		lon = Math.PI / 2;  	} else if (pnt [1] < 0) {  		lon = -Math.PI * 0.5;  	} else {  		AtPole = true;  		lon = 0.0;  		if (Z > 0.0)// north pole  		 {  			lat = Math.PI * 0.5;  		} else if (Z < 0.0)// south pole  		 {  			lat = -Math.PI * 0.5;  		} else// center of earth  		 {  			return new double[] {  				RadiansToDegrees (lon)'  				RadiansToDegrees (Math.PI * 0.5)'  				-semiMinor'  			};  		}  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: if (pnt [1] > 0) {  	lon = Math.PI / 2;  } else if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	AtPole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: if (pnt [1] > 0) {  	lon = Math.PI / 2;  } else if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	AtPole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: if (pnt [1] > 0) {  	lon = Math.PI / 2;  } else if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	AtPole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: if (pnt [1] > 0) {  	lon = Math.PI / 2;  } else if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	AtPole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: if (pnt [1] > 0) {  	lon = Math.PI / 2;  } else if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	AtPole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: lon = Math.PI / 2;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	AtPole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	AtPole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	AtPole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	AtPole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: lon = -Math.PI * 0.5;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: if (Z > 0.0)// north pole   {  	lat = Math.PI * 0.5;  } else if (Z < 0.0)// south pole   {  	lat = -Math.PI * 0.5;  } else// center of earth   {  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (Math.PI * 0.5)'  		-semiMinor'  	};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: if (Z > 0.0)// north pole   {  	lat = Math.PI * 0.5;  } else if (Z < 0.0)// south pole   {  	lat = -Math.PI * 0.5;  } else// center of earth   {  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (Math.PI * 0.5)'  		-semiMinor'  	};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: if (Z > 0.0)// north pole   {  	lat = Math.PI * 0.5;  } else if (Z < 0.0)// south pole   {  	lat = -Math.PI * 0.5;  } else// center of earth   {  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (Math.PI * 0.5)'  		-semiMinor'  	};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: lat = Math.PI * 0.5;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: if (Z < 0.0)// south pole   {  	lat = -Math.PI * 0.5;  } else// center of earth   {  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (Math.PI * 0.5)'  		-semiMinor'  	};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: if (Z < 0.0)// south pole   {  	lat = -Math.PI * 0.5;  } else// center of earth   {  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (Math.PI * 0.5)'  		-semiMinor'  	};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: lat = -Math.PI * 0.5;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD10,The following statement contains a magic number: return new double[] {  	RadiansToDegrees (lon)'  	RadiansToDegrees (Math.PI * 0.5)'  	-semiMinor'  };  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,DTM00,The following statement contains a magic number: es = 1.0 - Math.Pow (semiMinor / semiMajor' 2);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,DTM00,The following statement contains a magic number: als = Math.Pow (al' 2);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,DTM00,The following statement contains a magic number: c = esp * Math.Pow (cos_phi' 2);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,DTM00,The following statement contains a magic number: t = Math.Pow (tq' 2);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,DTM00,The following statement contains a magic number: con = 1.0 - es * Math.Pow (sin_phi' 2);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,DTM00,The following statement contains a magic number: if (lonlat.Length < 3)  	return new double[] {  		x / metersPerUnit'  		y / metersPerUnit  	};  else  	return new double[] {  		x / metersPerUnit'  		y / metersPerUnit'  		lonlat [2]  	};  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,DTM00,The following statement contains a magic number: if (lonlat.Length < 3)  	return new double[] {  		x / metersPerUnit'  		y / metersPerUnit  	};  else  	return new double[] {  		x / metersPerUnit'  		y / metersPerUnit'  		lonlat [2]  	};  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,DTM00,The following statement contains a magic number: return new double[] {  	x / metersPerUnit'  	y / metersPerUnit'  	lonlat [2]  };  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: if (pnt [0] != 0.0) {  	lon = Math.Atan2 (pnt [1]' pnt [0]);  } else {  	if (pnt [1] > 0) {  		lon = Math.PI / 2;  	} else if (pnt [1] < 0) {  		lon = -Math.PI * 0.5;  	} else {  		At_Pole = true;  		lon = 0.0;  		if (Z > 0.0)// north pole  		 {  			lat = Math.PI * 0.5;  		} else if (Z < 0.0)// south pole  		 {  			lat = -Math.PI * 0.5;  		} else// center of earth  		 {  			return new double[] {  				RadiansToDegrees (lon)'  				RadiansToDegrees (Math.PI * 0.5)'  				-semiMinor2'  			};  		}  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: if (pnt [0] != 0.0) {  	lon = Math.Atan2 (pnt [1]' pnt [0]);  } else {  	if (pnt [1] > 0) {  		lon = Math.PI / 2;  	} else if (pnt [1] < 0) {  		lon = -Math.PI * 0.5;  	} else {  		At_Pole = true;  		lon = 0.0;  		if (Z > 0.0)// north pole  		 {  			lat = Math.PI * 0.5;  		} else if (Z < 0.0)// south pole  		 {  			lat = -Math.PI * 0.5;  		} else// center of earth  		 {  			return new double[] {  				RadiansToDegrees (lon)'  				RadiansToDegrees (Math.PI * 0.5)'  				-semiMinor2'  			};  		}  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: if (pnt [0] != 0.0) {  	lon = Math.Atan2 (pnt [1]' pnt [0]);  } else {  	if (pnt [1] > 0) {  		lon = Math.PI / 2;  	} else if (pnt [1] < 0) {  		lon = -Math.PI * 0.5;  	} else {  		At_Pole = true;  		lon = 0.0;  		if (Z > 0.0)// north pole  		 {  			lat = Math.PI * 0.5;  		} else if (Z < 0.0)// south pole  		 {  			lat = -Math.PI * 0.5;  		} else// center of earth  		 {  			return new double[] {  				RadiansToDegrees (lon)'  				RadiansToDegrees (Math.PI * 0.5)'  				-semiMinor2'  			};  		}  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: if (pnt [0] != 0.0) {  	lon = Math.Atan2 (pnt [1]' pnt [0]);  } else {  	if (pnt [1] > 0) {  		lon = Math.PI / 2;  	} else if (pnt [1] < 0) {  		lon = -Math.PI * 0.5;  	} else {  		At_Pole = true;  		lon = 0.0;  		if (Z > 0.0)// north pole  		 {  			lat = Math.PI * 0.5;  		} else if (Z < 0.0)// south pole  		 {  			lat = -Math.PI * 0.5;  		} else// center of earth  		 {  			return new double[] {  				RadiansToDegrees (lon)'  				RadiansToDegrees (Math.PI * 0.5)'  				-semiMinor2'  			};  		}  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: if (pnt [0] != 0.0) {  	lon = Math.Atan2 (pnt [1]' pnt [0]);  } else {  	if (pnt [1] > 0) {  		lon = Math.PI / 2;  	} else if (pnt [1] < 0) {  		lon = -Math.PI * 0.5;  	} else {  		At_Pole = true;  		lon = 0.0;  		if (Z > 0.0)// north pole  		 {  			lat = Math.PI * 0.5;  		} else if (Z < 0.0)// south pole  		 {  			lat = -Math.PI * 0.5;  		} else// center of earth  		 {  			return new double[] {  				RadiansToDegrees (lon)'  				RadiansToDegrees (Math.PI * 0.5)'  				-semiMinor2'  			};  		}  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: if (pnt [1] > 0) {  	lon = Math.PI / 2;  } else if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	At_Pole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor2'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: if (pnt [1] > 0) {  	lon = Math.PI / 2;  } else if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	At_Pole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor2'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: if (pnt [1] > 0) {  	lon = Math.PI / 2;  } else if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	At_Pole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor2'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: if (pnt [1] > 0) {  	lon = Math.PI / 2;  } else if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	At_Pole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor2'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: if (pnt [1] > 0) {  	lon = Math.PI / 2;  } else if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	At_Pole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor2'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: lon = Math.PI / 2;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	At_Pole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor2'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	At_Pole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor2'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	At_Pole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor2'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: if (pnt [1] < 0) {  	lon = -Math.PI * 0.5;  } else {  	At_Pole = true;  	lon = 0.0;  	if (Z > 0.0)// north pole  	 {  		lat = Math.PI * 0.5;  	} else if (Z < 0.0)// south pole  	 {  		lat = -Math.PI * 0.5;  	} else// center of earth  	 {  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (Math.PI * 0.5)'  			-semiMinor2'  		};  	}  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: lon = -Math.PI * 0.5;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: if (Z > 0.0)// north pole   {  	lat = Math.PI * 0.5;  } else if (Z < 0.0)// south pole   {  	lat = -Math.PI * 0.5;  } else// center of earth   {  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (Math.PI * 0.5)'  		-semiMinor2'  	};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: if (Z > 0.0)// north pole   {  	lat = Math.PI * 0.5;  } else if (Z < 0.0)// south pole   {  	lat = -Math.PI * 0.5;  } else// center of earth   {  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (Math.PI * 0.5)'  		-semiMinor2'  	};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: if (Z > 0.0)// north pole   {  	lat = Math.PI * 0.5;  } else if (Z < 0.0)// south pole   {  	lat = -Math.PI * 0.5;  } else// center of earth   {  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (Math.PI * 0.5)'  		-semiMinor2'  	};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: lat = Math.PI * 0.5;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: if (Z < 0.0)// south pole   {  	lat = -Math.PI * 0.5;  } else// center of earth   {  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (Math.PI * 0.5)'  		-semiMinor2'  	};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: if (Z < 0.0)// south pole   {  	lat = -Math.PI * 0.5;  } else// center of earth   {  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (Math.PI * 0.5)'  		-semiMinor2'  	};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: lat = -Math.PI * 0.5;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD01,The following statement contains a magic number: return new double[] {  	RadiansToDegrees (lon)'  	RadiansToDegrees (Math.PI * 0.5)'  	-semiMinor2'  };  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: es = 1.0 - Math.Pow (semiMinor / semiMajor' 2);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: for (i = 0; ; i++) {  	delta_phi = ((con + e1 * Math.Sin (2.0 * phi) - e2 * Math.Sin (4.0 * phi) + e3 * Math.Sin (6.0 * phi)) / e0) - phi;  	phi += delta_phi;  	if (Math.Abs (delta_phi) <= EPSLoN)  		break;  	if (i >= max_iter)  		throw new ArgumentException ("Latitude failed to converge");  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: for (i = 0; ; i++) {  	delta_phi = ((con + e1 * Math.Sin (2.0 * phi) - e2 * Math.Sin (4.0 * phi) + e3 * Math.Sin (6.0 * phi)) / e0) - phi;  	phi += delta_phi;  	if (Math.Abs (delta_phi) <= EPSLoN)  		break;  	if (i >= max_iter)  		throw new ArgumentException ("Latitude failed to converge");  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: for (i = 0; ; i++) {  	delta_phi = ((con + e1 * Math.Sin (2.0 * phi) - e2 * Math.Sin (4.0 * phi) + e3 * Math.Sin (6.0 * phi)) / e0) - phi;  	phi += delta_phi;  	if (Math.Abs (delta_phi) <= EPSLoN)  		break;  	if (i >= max_iter)  		throw new ArgumentException ("Latitude failed to converge");  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: delta_phi = ((con + e1 * Math.Sin (2.0 * phi) - e2 * Math.Sin (4.0 * phi) + e3 * Math.Sin (6.0 * phi)) / e0) - phi;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: delta_phi = ((con + e1 * Math.Sin (2.0 * phi) - e2 * Math.Sin (4.0 * phi) + e3 * Math.Sin (6.0 * phi)) / e0) - phi;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: delta_phi = ((con + e1 * Math.Sin (2.0 * phi) - e2 * Math.Sin (4.0 * phi) + e3 * Math.Sin (6.0 * phi)) / e0) - phi;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (Math.Abs (phi) < HALF_PI) {  	SinCos (phi' out sin_phi' out cos_phi);  	tan_phi = Math.Tan (phi);  	c = esp * Math.Pow (cos_phi' 2);  	cs = Math.Pow (c' 2);  	t = Math.Pow (tan_phi' 2);  	ts = Math.Pow (t' 2);  	con = 1.0 - es * Math.Pow (sin_phi' 2);  	n = semiMajor / Math.Sqrt (con);  	r = n * (1.0 - es) / con;  	d = x / (n * scaleFactor);  	ds = Math.Pow (d' 2);  	double lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * esp - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * esp - 3.0 * cs)));  	double lon = AdjustLongitude (centralMeridian + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * esp + 24.0 * ts))) / cos_phi));  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)  		};  	else  		return new double[] {  			RadiansToDegrees (lon)'  			RadiansToDegrees (lat)'  			p [2]  		};  } else {  	if (p.Length < 3)  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)  		};  	else  		return new double[] {  			RadiansToDegrees (HALF_PI * Sign (y))'  			RadiansToDegrees (centralMeridian)'  			p [2]  		};  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: c = esp * Math.Pow (cos_phi' 2);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: cs = Math.Pow (c' 2);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: t = Math.Pow (tan_phi' 2);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: ts = Math.Pow (t' 2);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: con = 1.0 - es * Math.Pow (sin_phi' 2);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: ds = Math.Pow (d' 2);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (p.Length < 3)  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (lat)  	};  else  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (lat)'  		p [2]  	};  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (p.Length < 3)  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (lat)  	};  else  	return new double[] {  		RadiansToDegrees (lon)'  		RadiansToDegrees (lat)'  		p [2]  	};  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: return new double[] {  	RadiansToDegrees (lon)'  	RadiansToDegrees (lat)'  	p [2]  };  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (p.Length < 3)  	return new double[] {  		RadiansToDegrees (HALF_PI * Sign (y))'  		RadiansToDegrees (centralMeridian)  	};  else  	return new double[] {  		RadiansToDegrees (HALF_PI * Sign (y))'  		RadiansToDegrees (centralMeridian)'  		p [2]  	};  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: if (p.Length < 3)  	return new double[] {  		RadiansToDegrees (HALF_PI * Sign (y))'  		RadiansToDegrees (centralMeridian)  	};  else  	return new double[] {  		RadiansToDegrees (HALF_PI * Sign (y))'  		RadiansToDegrees (centralMeridian)'  		p [2]  	};  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,MTD11,The following statement contains a magic number: return new double[] {  	RadiansToDegrees (HALF_PI * Sign (y))'  	RadiansToDegrees (centralMeridian)'  	p [2]  };  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 1587.50317500635;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 793.751587503175;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 529.167725002117;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 264.583862501058;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 132.291931250529;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 52.9167725002117;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 26.4583862501058;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 13.2291931250529;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 6.61459656252646;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 2.64583862501058;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 1.32291931250529;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 0.529167725002117;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following statement contains a magic number: ret = 0.264583862501058;  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (12' 8);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (12' 8);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (24' 17);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (24' 17);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (37' 25);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (37' 25);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (74' 51);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (74' 51);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (149' 103);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (149' 103);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (374' 259);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (374' 259);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (749' 519);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (749' 519);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (1594' 1100);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (1594' 1100);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (3188' 2201);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (3188' 2201);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (7971' 5502);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (7971' 5502);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (15943' 11005);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (15943' 11005);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (39858' 27514);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (39858' 27514);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (79716' 27514);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following statement contains a magic number: ret = new GSize (79716' 27514);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (14' 10);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (14' 10);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (30' 20);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (30' 20);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (45' 31);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (45' 31);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (90' 62);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (90' 62);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (181' 125);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (181' 125);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (454' 311);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (454' 311);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (903' 623);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (903' 623);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (1718' 1193);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (1718' 1193);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (3437' 2386);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (3437' 2386);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (8594' 5966);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (8594' 5966);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (17189' 11932);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (17189' 11932);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (42972' 29831);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (42972' 29831);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (85944' 59662);  
Magic Number,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: ret = new GSize (85944' 59662);  
Magic Number,GMap.NET.Projections,MercatorProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjection.cs,FromLatLngToPixel,The following statement contains a magic number: ret.X = (long)Clip (x * mapSizeX + 0.5' 0' mapSizeX - 1);  
Magic Number,GMap.NET.Projections,MercatorProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjection.cs,FromLatLngToPixel,The following statement contains a magic number: ret.Y = (long)Clip (y * mapSizeY + 0.5' 0' mapSizeY - 1);  
Magic Number,GMap.NET.Projections,MercatorProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjection.cs,FromPixelToLatLng,The following statement contains a magic number: ret.Lat = 90 - 360 * Math.Atan (Math.Exp (-yy * 2 * Math.PI)) / Math.PI;  
Magic Number,GMap.NET.Projections,MercatorProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjection.cs,FromPixelToLatLng,The following statement contains a magic number: ret.Lat = 90 - 360 * Math.Atan (Math.Exp (-yy * 2 * Math.PI)) / Math.PI;  
Magic Number,GMap.NET.Projections,MercatorProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjection.cs,FromPixelToLatLng,The following statement contains a magic number: ret.Lat = 90 - 360 * Math.Atan (Math.Exp (-yy * 2 * Math.PI)) / Math.PI;  
Magic Number,GMap.NET.Projections,MercatorProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MercatorProjection.cs,FromPixelToLatLng,The following statement contains a magic number: ret.Lng = 360 * xx;  
Magic Number,GMap.NET.Projections,PlateCarreeProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjection.cs,FromLatLngToPixel,The following statement contains a magic number: ret.Y = (long)((90.0 - lat) / scale);  
Magic Number,GMap.NET.Projections,PlateCarreeProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjection.cs,FromLatLngToPixel,The following statement contains a magic number: ret.X = (long)((lng + 180.0) / scale);  
Magic Number,GMap.NET.Projections,PlateCarreeProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjection.cs,FromPixelToLatLng,The following statement contains a magic number: ret.Lat = 90 - (y * scale);  
Magic Number,GMap.NET.Projections,PlateCarreeProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjection.cs,FromPixelToLatLng,The following statement contains a magic number: ret.Lng = (x * scale) - 180;  
Magic Number,GMap.NET.Projections,PlateCarreeProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjection.cs,GetTileMatrixMaxXY,The following statement contains a magic number: return new GSize ((2 * y) - 1' y - 1);  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,GetGroundResolution,The following statement contains a magic number: return (Math.Cos (latitude * (Math.PI / 180)) * 2 * Math.PI * Axis) / GetTileMatrixSizePixel (zoom).Width;  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,GetGroundResolution,The following statement contains a magic number: return (Math.Cos (latitude * (Math.PI / 180)) * 2 * Math.PI * Axis) / GetTileMatrixSizePixel (zoom).Width;  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,AdjustLongitude,The following statement contains a magic number: while (true) {  	if (Math.Abs (x) <= PI)  		break;  	else if (((long)Math.Abs (x / Math.PI)) < 2)  		x = x - (Sign (x) * TWO_PI);  	else if (((long)Math.Abs (x / TWO_PI)) < MAXLONG) {  		x = x - (((long)(x / TWO_PI)) * TWO_PI);  	} else if (((long)Math.Abs (x / (MAXLONG * TWO_PI))) < MAXLONG) {  		x = x - (((long)(x / (MAXLONG * TWO_PI))) * (TWO_PI * MAXLONG));  	} else if (((long)Math.Abs (x / (DBLLONG * TWO_PI))) < MAXLONG) {  		x = x - (((long)(x / (DBLLONG * TWO_PI))) * (TWO_PI * DBLLONG));  	} else  		x = x - (Sign (x) * TWO_PI);  	count++;  	if (count > MAX_VAL)  		break;  }  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,AdjustLongitude,The following statement contains a magic number: if (Math.Abs (x) <= PI)  	break;  else if (((long)Math.Abs (x / Math.PI)) < 2)  	x = x - (Sign (x) * TWO_PI);  else if (((long)Math.Abs (x / TWO_PI)) < MAXLONG) {  	x = x - (((long)(x / TWO_PI)) * TWO_PI);  } else if (((long)Math.Abs (x / (MAXLONG * TWO_PI))) < MAXLONG) {  	x = x - (((long)(x / (MAXLONG * TWO_PI))) * (TWO_PI * MAXLONG));  } else if (((long)Math.Abs (x / (DBLLONG * TWO_PI))) < MAXLONG) {  	x = x - (((long)(x / (DBLLONG * TWO_PI))) * (TWO_PI * DBLLONG));  } else  	x = x - (Sign (x) * TWO_PI);  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,AdjustLongitude,The following statement contains a magic number: if (((long)Math.Abs (x / Math.PI)) < 2)  	x = x - (Sign (x) * TWO_PI);  else if (((long)Math.Abs (x / TWO_PI)) < MAXLONG) {  	x = x - (((long)(x / TWO_PI)) * TWO_PI);  } else if (((long)Math.Abs (x / (MAXLONG * TWO_PI))) < MAXLONG) {  	x = x - (((long)(x / (MAXLONG * TWO_PI))) * (TWO_PI * MAXLONG));  } else if (((long)Math.Abs (x / (DBLLONG * TWO_PI))) < MAXLONG) {  	x = x - (((long)(x / (DBLLONG * TWO_PI))) * (TWO_PI * DBLLONG));  } else  	x = x - (Sign (x) * TWO_PI);  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,e0fn,The following statement contains a magic number: return (1.0 - 0.25 * x * (1.0 + x / 16.0 * (3.0 + 1.25 * x)));  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,e0fn,The following statement contains a magic number: return (1.0 - 0.25 * x * (1.0 + x / 16.0 * (3.0 + 1.25 * x)));  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,e0fn,The following statement contains a magic number: return (1.0 - 0.25 * x * (1.0 + x / 16.0 * (3.0 + 1.25 * x)));  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,e0fn,The following statement contains a magic number: return (1.0 - 0.25 * x * (1.0 + x / 16.0 * (3.0 + 1.25 * x)));  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,e1fn,The following statement contains a magic number: return (0.375 * x * (1.0 + 0.25 * x * (1.0 + 0.46875 * x)));  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,e1fn,The following statement contains a magic number: return (0.375 * x * (1.0 + 0.25 * x * (1.0 + 0.46875 * x)));  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,e1fn,The following statement contains a magic number: return (0.375 * x * (1.0 + 0.25 * x * (1.0 + 0.46875 * x)));  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,e2fn,The following statement contains a magic number: return (0.05859375 * x * x * (1.0 + 0.75 * x));  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,e2fn,The following statement contains a magic number: return (0.05859375 * x * x * (1.0 + 0.75 * x));  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,e3fn,The following statement contains a magic number: return (x * x * x * (35.0 / 3072.0));  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,e3fn,The following statement contains a magic number: return (x * x * x * (35.0 / 3072.0));  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,mlfn,The following statement contains a magic number: return (e0 * phi - e1 * Math.Sin (2.0 * phi) + e2 * Math.Sin (4.0 * phi) - e3 * Math.Sin (6.0 * phi));  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,mlfn,The following statement contains a magic number: return (e0 * phi - e1 * Math.Sin (2.0 * phi) + e2 * Math.Sin (4.0 * phi) - e3 * Math.Sin (6.0 * phi));  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,mlfn,The following statement contains a magic number: return (e0 * phi - e1 * Math.Sin (2.0 * phi) + e2 * Math.Sin (4.0 * phi) - e3 * Math.Sin (6.0 * phi));  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,GetUTMzone,The following statement contains a magic number: return ((long)(((lon + 180.0) / 6.0) + 1.0));  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,GetUTMzone,The following statement contains a magic number: return ((long)(((lon + 180.0) / 6.0) + 1.0));  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,GetBearing,The following statement contains a magic number: return (RadiansToDegrees (Math.Atan2 (y' x)) + 360) % 360;  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,GetBearing,The following statement contains a magic number: return (RadiansToDegrees (Math.Atan2 (y' x)) + 360) % 360;  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,FromGeodeticToCartesian,The following statement contains a magic number: Lat = (Math.PI / 180) * Lat;  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,FromGeodeticToCartesian,The following statement contains a magic number: Lng = (Math.PI / 180) * Lng;  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,FromCartesianTGeodetic,The following statement contains a magic number: Lat /= (Math.PI / 180);  
Magic Number,GMap.NET,PureProjection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\PureProjection.cs,FromCartesianTGeodetic,The following statement contains a magic number: Lng /= (Math.PI / 180);  
Magic Number,GMap.NET,GRect,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GRect.cs,GetHashCode,The following statement contains a magic number: return (int)(((this.X ^ ((this.Y << 13) | (this.Y >> 0x13))) ^ ((this.Width << 0x1a) | (this.Width >> 6))) ^ ((this.Height << 7) | (this.Height >> 0x19)));  
Magic Number,GMap.NET,GRect,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GRect.cs,GetHashCode,The following statement contains a magic number: return (int)(((this.X ^ ((this.Y << 13) | (this.Y >> 0x13))) ^ ((this.Width << 0x1a) | (this.Width >> 6))) ^ ((this.Height << 7) | (this.Height >> 0x19)));  
Magic Number,GMap.NET,GRect,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GRect.cs,GetHashCode,The following statement contains a magic number: return (int)(((this.X ^ ((this.Y << 13) | (this.Y >> 0x13))) ^ ((this.Width << 0x1a) | (this.Width >> 6))) ^ ((this.Height << 7) | (this.Height >> 0x19)));  
Magic Number,GMap.NET,GRect,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GRect.cs,Inflate,The following statement contains a magic number: this.Width += 2 * width;  
Magic Number,GMap.NET,GRect,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GRect.cs,Inflate,The following statement contains a magic number: this.Height += 2 * height;  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,GMaps,The following statement contains a magic number: ServicePointManager.DefaultConnectionLimit = 5;  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: while (!abortCacheLoop) {  	try {  		CacheQueueItem? task = null;  		lock (tileCacheQueue) {  			left = tileCacheQueue.Count;  			if (left > 0) {  				task = tileCacheQueue.Dequeue ();  			}  		}  		if (task.HasValue) {  			if (startEvent) {  				startEvent = false;  				if (OnTileCacheStart != null) {  					OnTileCacheStart ();  				}  			}  			if (OnTileCacheProgress != null) {  				OnTileCacheProgress (left);  			}  			#region -- save --  			// check if stream wasn't disposed somehow  			if (task.Value.Img != null) {  				Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB...");  				if ((task.Value.CacheType & CacheUsage.First) == CacheUsage.First && PrimaryCache != null) {  					if (cacheOnIdleRead) {  						while (Interlocked.Decrement (ref readingCache) > 0) {  							Thread.Sleep (1000);  						}  					}  					PrimaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  				}  				if ((task.Value.CacheType & CacheUsage.Second) == CacheUsage.Second && SecondaryCache != null) {  					if (cacheOnIdleRead) {  						while (Interlocked.Decrement (ref readingCache) > 0) {  							Thread.Sleep (1000);  						}  					}  					SecondaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  				}  				task.Value.Clear ();  				if (!boostCacheEngine) {  					#if PocketPC  					                        Thread.Sleep(3333); #else  					Thread.Sleep (333);  					#endif  				}  			} else {  				Debug.WriteLine ("CacheEngineLoop: skip' tile disposed to early -> " + task.Value);  			}  			task = null;  			#endregion  		} else {  			if (!startEvent) {  				startEvent = true;  				if (OnTileCacheComplete != null) {  					OnTileCacheComplete ();  				}  			}  			if (abortCacheLoop || noMapInstances || !WaitForCache.WaitOne (33333' false) || noMapInstances) {  				break;  			}  		}  	}   	#if !PocketPC  	catch (AbandonedMutexException) {  		break;  	}   	#endif  	catch (Exception ex) {  		Debug.WriteLine ("CacheEngineLoop: " + ex.ToString ());  	}  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: while (!abortCacheLoop) {  	try {  		CacheQueueItem? task = null;  		lock (tileCacheQueue) {  			left = tileCacheQueue.Count;  			if (left > 0) {  				task = tileCacheQueue.Dequeue ();  			}  		}  		if (task.HasValue) {  			if (startEvent) {  				startEvent = false;  				if (OnTileCacheStart != null) {  					OnTileCacheStart ();  				}  			}  			if (OnTileCacheProgress != null) {  				OnTileCacheProgress (left);  			}  			#region -- save --  			// check if stream wasn't disposed somehow  			if (task.Value.Img != null) {  				Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB...");  				if ((task.Value.CacheType & CacheUsage.First) == CacheUsage.First && PrimaryCache != null) {  					if (cacheOnIdleRead) {  						while (Interlocked.Decrement (ref readingCache) > 0) {  							Thread.Sleep (1000);  						}  					}  					PrimaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  				}  				if ((task.Value.CacheType & CacheUsage.Second) == CacheUsage.Second && SecondaryCache != null) {  					if (cacheOnIdleRead) {  						while (Interlocked.Decrement (ref readingCache) > 0) {  							Thread.Sleep (1000);  						}  					}  					SecondaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  				}  				task.Value.Clear ();  				if (!boostCacheEngine) {  					#if PocketPC  					                        Thread.Sleep(3333); #else  					Thread.Sleep (333);  					#endif  				}  			} else {  				Debug.WriteLine ("CacheEngineLoop: skip' tile disposed to early -> " + task.Value);  			}  			task = null;  			#endregion  		} else {  			if (!startEvent) {  				startEvent = true;  				if (OnTileCacheComplete != null) {  					OnTileCacheComplete ();  				}  			}  			if (abortCacheLoop || noMapInstances || !WaitForCache.WaitOne (33333' false) || noMapInstances) {  				break;  			}  		}  	}   	#if !PocketPC  	catch (AbandonedMutexException) {  		break;  	}   	#endif  	catch (Exception ex) {  		Debug.WriteLine ("CacheEngineLoop: " + ex.ToString ());  	}  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: while (!abortCacheLoop) {  	try {  		CacheQueueItem? task = null;  		lock (tileCacheQueue) {  			left = tileCacheQueue.Count;  			if (left > 0) {  				task = tileCacheQueue.Dequeue ();  			}  		}  		if (task.HasValue) {  			if (startEvent) {  				startEvent = false;  				if (OnTileCacheStart != null) {  					OnTileCacheStart ();  				}  			}  			if (OnTileCacheProgress != null) {  				OnTileCacheProgress (left);  			}  			#region -- save --  			// check if stream wasn't disposed somehow  			if (task.Value.Img != null) {  				Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB...");  				if ((task.Value.CacheType & CacheUsage.First) == CacheUsage.First && PrimaryCache != null) {  					if (cacheOnIdleRead) {  						while (Interlocked.Decrement (ref readingCache) > 0) {  							Thread.Sleep (1000);  						}  					}  					PrimaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  				}  				if ((task.Value.CacheType & CacheUsage.Second) == CacheUsage.Second && SecondaryCache != null) {  					if (cacheOnIdleRead) {  						while (Interlocked.Decrement (ref readingCache) > 0) {  							Thread.Sleep (1000);  						}  					}  					SecondaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  				}  				task.Value.Clear ();  				if (!boostCacheEngine) {  					#if PocketPC  					                        Thread.Sleep(3333); #else  					Thread.Sleep (333);  					#endif  				}  			} else {  				Debug.WriteLine ("CacheEngineLoop: skip' tile disposed to early -> " + task.Value);  			}  			task = null;  			#endregion  		} else {  			if (!startEvent) {  				startEvent = true;  				if (OnTileCacheComplete != null) {  					OnTileCacheComplete ();  				}  			}  			if (abortCacheLoop || noMapInstances || !WaitForCache.WaitOne (33333' false) || noMapInstances) {  				break;  			}  		}  	}   	#if !PocketPC  	catch (AbandonedMutexException) {  		break;  	}   	#endif  	catch (Exception ex) {  		Debug.WriteLine ("CacheEngineLoop: " + ex.ToString ());  	}  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: while (!abortCacheLoop) {  	try {  		CacheQueueItem? task = null;  		lock (tileCacheQueue) {  			left = tileCacheQueue.Count;  			if (left > 0) {  				task = tileCacheQueue.Dequeue ();  			}  		}  		if (task.HasValue) {  			if (startEvent) {  				startEvent = false;  				if (OnTileCacheStart != null) {  					OnTileCacheStart ();  				}  			}  			if (OnTileCacheProgress != null) {  				OnTileCacheProgress (left);  			}  			#region -- save --  			// check if stream wasn't disposed somehow  			if (task.Value.Img != null) {  				Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB...");  				if ((task.Value.CacheType & CacheUsage.First) == CacheUsage.First && PrimaryCache != null) {  					if (cacheOnIdleRead) {  						while (Interlocked.Decrement (ref readingCache) > 0) {  							Thread.Sleep (1000);  						}  					}  					PrimaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  				}  				if ((task.Value.CacheType & CacheUsage.Second) == CacheUsage.Second && SecondaryCache != null) {  					if (cacheOnIdleRead) {  						while (Interlocked.Decrement (ref readingCache) > 0) {  							Thread.Sleep (1000);  						}  					}  					SecondaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  				}  				task.Value.Clear ();  				if (!boostCacheEngine) {  					#if PocketPC  					                        Thread.Sleep(3333); #else  					Thread.Sleep (333);  					#endif  				}  			} else {  				Debug.WriteLine ("CacheEngineLoop: skip' tile disposed to early -> " + task.Value);  			}  			task = null;  			#endregion  		} else {  			if (!startEvent) {  				startEvent = true;  				if (OnTileCacheComplete != null) {  					OnTileCacheComplete ();  				}  			}  			if (abortCacheLoop || noMapInstances || !WaitForCache.WaitOne (33333' false) || noMapInstances) {  				break;  			}  		}  	}   	#if !PocketPC  	catch (AbandonedMutexException) {  		break;  	}   	#endif  	catch (Exception ex) {  		Debug.WriteLine ("CacheEngineLoop: " + ex.ToString ());  	}  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: while (!abortCacheLoop) {  	try {  		CacheQueueItem? task = null;  		lock (tileCacheQueue) {  			left = tileCacheQueue.Count;  			if (left > 0) {  				task = tileCacheQueue.Dequeue ();  			}  		}  		if (task.HasValue) {  			if (startEvent) {  				startEvent = false;  				if (OnTileCacheStart != null) {  					OnTileCacheStart ();  				}  			}  			if (OnTileCacheProgress != null) {  				OnTileCacheProgress (left);  			}  			#region -- save --  			// check if stream wasn't disposed somehow  			if (task.Value.Img != null) {  				Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB...");  				if ((task.Value.CacheType & CacheUsage.First) == CacheUsage.First && PrimaryCache != null) {  					if (cacheOnIdleRead) {  						while (Interlocked.Decrement (ref readingCache) > 0) {  							Thread.Sleep (1000);  						}  					}  					PrimaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  				}  				if ((task.Value.CacheType & CacheUsage.Second) == CacheUsage.Second && SecondaryCache != null) {  					if (cacheOnIdleRead) {  						while (Interlocked.Decrement (ref readingCache) > 0) {  							Thread.Sleep (1000);  						}  					}  					SecondaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  				}  				task.Value.Clear ();  				if (!boostCacheEngine) {  					#if PocketPC  					                        Thread.Sleep(3333); #else  					Thread.Sleep (333);  					#endif  				}  			} else {  				Debug.WriteLine ("CacheEngineLoop: skip' tile disposed to early -> " + task.Value);  			}  			task = null;  			#endregion  		} else {  			if (!startEvent) {  				startEvent = true;  				if (OnTileCacheComplete != null) {  					OnTileCacheComplete ();  				}  			}  			if (abortCacheLoop || noMapInstances || !WaitForCache.WaitOne (33333' false) || noMapInstances) {  				break;  			}  		}  	}   	#if !PocketPC  	catch (AbandonedMutexException) {  		break;  	}   	#endif  	catch (Exception ex) {  		Debug.WriteLine ("CacheEngineLoop: " + ex.ToString ());  	}  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: try {  	CacheQueueItem? task = null;  	lock (tileCacheQueue) {  		left = tileCacheQueue.Count;  		if (left > 0) {  			task = tileCacheQueue.Dequeue ();  		}  	}  	if (task.HasValue) {  		if (startEvent) {  			startEvent = false;  			if (OnTileCacheStart != null) {  				OnTileCacheStart ();  			}  		}  		if (OnTileCacheProgress != null) {  			OnTileCacheProgress (left);  		}  		#region -- save --  		// check if stream wasn't disposed somehow  		if (task.Value.Img != null) {  			Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB...");  			if ((task.Value.CacheType & CacheUsage.First) == CacheUsage.First && PrimaryCache != null) {  				if (cacheOnIdleRead) {  					while (Interlocked.Decrement (ref readingCache) > 0) {  						Thread.Sleep (1000);  					}  				}  				PrimaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  			}  			if ((task.Value.CacheType & CacheUsage.Second) == CacheUsage.Second && SecondaryCache != null) {  				if (cacheOnIdleRead) {  					while (Interlocked.Decrement (ref readingCache) > 0) {  						Thread.Sleep (1000);  					}  				}  				SecondaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  			}  			task.Value.Clear ();  			if (!boostCacheEngine) {  				#if PocketPC  				                        Thread.Sleep(3333); #else  				Thread.Sleep (333);  				#endif  			}  		} else {  			Debug.WriteLine ("CacheEngineLoop: skip' tile disposed to early -> " + task.Value);  		}  		task = null;  		#endregion  	} else {  		if (!startEvent) {  			startEvent = true;  			if (OnTileCacheComplete != null) {  				OnTileCacheComplete ();  			}  		}  		if (abortCacheLoop || noMapInstances || !WaitForCache.WaitOne (33333' false) || noMapInstances) {  			break;  		}  	}  }   #if !PocketPC  catch (AbandonedMutexException) {  	break;  }   #endif  catch (Exception ex) {  	Debug.WriteLine ("CacheEngineLoop: " + ex.ToString ());  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: try {  	CacheQueueItem? task = null;  	lock (tileCacheQueue) {  		left = tileCacheQueue.Count;  		if (left > 0) {  			task = tileCacheQueue.Dequeue ();  		}  	}  	if (task.HasValue) {  		if (startEvent) {  			startEvent = false;  			if (OnTileCacheStart != null) {  				OnTileCacheStart ();  			}  		}  		if (OnTileCacheProgress != null) {  			OnTileCacheProgress (left);  		}  		#region -- save --  		// check if stream wasn't disposed somehow  		if (task.Value.Img != null) {  			Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB...");  			if ((task.Value.CacheType & CacheUsage.First) == CacheUsage.First && PrimaryCache != null) {  				if (cacheOnIdleRead) {  					while (Interlocked.Decrement (ref readingCache) > 0) {  						Thread.Sleep (1000);  					}  				}  				PrimaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  			}  			if ((task.Value.CacheType & CacheUsage.Second) == CacheUsage.Second && SecondaryCache != null) {  				if (cacheOnIdleRead) {  					while (Interlocked.Decrement (ref readingCache) > 0) {  						Thread.Sleep (1000);  					}  				}  				SecondaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  			}  			task.Value.Clear ();  			if (!boostCacheEngine) {  				#if PocketPC  				                        Thread.Sleep(3333); #else  				Thread.Sleep (333);  				#endif  			}  		} else {  			Debug.WriteLine ("CacheEngineLoop: skip' tile disposed to early -> " + task.Value);  		}  		task = null;  		#endregion  	} else {  		if (!startEvent) {  			startEvent = true;  			if (OnTileCacheComplete != null) {  				OnTileCacheComplete ();  			}  		}  		if (abortCacheLoop || noMapInstances || !WaitForCache.WaitOne (33333' false) || noMapInstances) {  			break;  		}  	}  }   #if !PocketPC  catch (AbandonedMutexException) {  	break;  }   #endif  catch (Exception ex) {  	Debug.WriteLine ("CacheEngineLoop: " + ex.ToString ());  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: try {  	CacheQueueItem? task = null;  	lock (tileCacheQueue) {  		left = tileCacheQueue.Count;  		if (left > 0) {  			task = tileCacheQueue.Dequeue ();  		}  	}  	if (task.HasValue) {  		if (startEvent) {  			startEvent = false;  			if (OnTileCacheStart != null) {  				OnTileCacheStart ();  			}  		}  		if (OnTileCacheProgress != null) {  			OnTileCacheProgress (left);  		}  		#region -- save --  		// check if stream wasn't disposed somehow  		if (task.Value.Img != null) {  			Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB...");  			if ((task.Value.CacheType & CacheUsage.First) == CacheUsage.First && PrimaryCache != null) {  				if (cacheOnIdleRead) {  					while (Interlocked.Decrement (ref readingCache) > 0) {  						Thread.Sleep (1000);  					}  				}  				PrimaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  			}  			if ((task.Value.CacheType & CacheUsage.Second) == CacheUsage.Second && SecondaryCache != null) {  				if (cacheOnIdleRead) {  					while (Interlocked.Decrement (ref readingCache) > 0) {  						Thread.Sleep (1000);  					}  				}  				SecondaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  			}  			task.Value.Clear ();  			if (!boostCacheEngine) {  				#if PocketPC  				                        Thread.Sleep(3333); #else  				Thread.Sleep (333);  				#endif  			}  		} else {  			Debug.WriteLine ("CacheEngineLoop: skip' tile disposed to early -> " + task.Value);  		}  		task = null;  		#endregion  	} else {  		if (!startEvent) {  			startEvent = true;  			if (OnTileCacheComplete != null) {  				OnTileCacheComplete ();  			}  		}  		if (abortCacheLoop || noMapInstances || !WaitForCache.WaitOne (33333' false) || noMapInstances) {  			break;  		}  	}  }   #if !PocketPC  catch (AbandonedMutexException) {  	break;  }   #endif  catch (Exception ex) {  	Debug.WriteLine ("CacheEngineLoop: " + ex.ToString ());  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: try {  	CacheQueueItem? task = null;  	lock (tileCacheQueue) {  		left = tileCacheQueue.Count;  		if (left > 0) {  			task = tileCacheQueue.Dequeue ();  		}  	}  	if (task.HasValue) {  		if (startEvent) {  			startEvent = false;  			if (OnTileCacheStart != null) {  				OnTileCacheStart ();  			}  		}  		if (OnTileCacheProgress != null) {  			OnTileCacheProgress (left);  		}  		#region -- save --  		// check if stream wasn't disposed somehow  		if (task.Value.Img != null) {  			Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB...");  			if ((task.Value.CacheType & CacheUsage.First) == CacheUsage.First && PrimaryCache != null) {  				if (cacheOnIdleRead) {  					while (Interlocked.Decrement (ref readingCache) > 0) {  						Thread.Sleep (1000);  					}  				}  				PrimaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  			}  			if ((task.Value.CacheType & CacheUsage.Second) == CacheUsage.Second && SecondaryCache != null) {  				if (cacheOnIdleRead) {  					while (Interlocked.Decrement (ref readingCache) > 0) {  						Thread.Sleep (1000);  					}  				}  				SecondaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  			}  			task.Value.Clear ();  			if (!boostCacheEngine) {  				#if PocketPC  				                        Thread.Sleep(3333); #else  				Thread.Sleep (333);  				#endif  			}  		} else {  			Debug.WriteLine ("CacheEngineLoop: skip' tile disposed to early -> " + task.Value);  		}  		task = null;  		#endregion  	} else {  		if (!startEvent) {  			startEvent = true;  			if (OnTileCacheComplete != null) {  				OnTileCacheComplete ();  			}  		}  		if (abortCacheLoop || noMapInstances || !WaitForCache.WaitOne (33333' false) || noMapInstances) {  			break;  		}  	}  }   #if !PocketPC  catch (AbandonedMutexException) {  	break;  }   #endif  catch (Exception ex) {  	Debug.WriteLine ("CacheEngineLoop: " + ex.ToString ());  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: try {  	CacheQueueItem? task = null;  	lock (tileCacheQueue) {  		left = tileCacheQueue.Count;  		if (left > 0) {  			task = tileCacheQueue.Dequeue ();  		}  	}  	if (task.HasValue) {  		if (startEvent) {  			startEvent = false;  			if (OnTileCacheStart != null) {  				OnTileCacheStart ();  			}  		}  		if (OnTileCacheProgress != null) {  			OnTileCacheProgress (left);  		}  		#region -- save --  		// check if stream wasn't disposed somehow  		if (task.Value.Img != null) {  			Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB...");  			if ((task.Value.CacheType & CacheUsage.First) == CacheUsage.First && PrimaryCache != null) {  				if (cacheOnIdleRead) {  					while (Interlocked.Decrement (ref readingCache) > 0) {  						Thread.Sleep (1000);  					}  				}  				PrimaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  			}  			if ((task.Value.CacheType & CacheUsage.Second) == CacheUsage.Second && SecondaryCache != null) {  				if (cacheOnIdleRead) {  					while (Interlocked.Decrement (ref readingCache) > 0) {  						Thread.Sleep (1000);  					}  				}  				SecondaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  			}  			task.Value.Clear ();  			if (!boostCacheEngine) {  				#if PocketPC  				                        Thread.Sleep(3333); #else  				Thread.Sleep (333);  				#endif  			}  		} else {  			Debug.WriteLine ("CacheEngineLoop: skip' tile disposed to early -> " + task.Value);  		}  		task = null;  		#endregion  	} else {  		if (!startEvent) {  			startEvent = true;  			if (OnTileCacheComplete != null) {  				OnTileCacheComplete ();  			}  		}  		if (abortCacheLoop || noMapInstances || !WaitForCache.WaitOne (33333' false) || noMapInstances) {  			break;  		}  	}  }   #if !PocketPC  catch (AbandonedMutexException) {  	break;  }   #endif  catch (Exception ex) {  	Debug.WriteLine ("CacheEngineLoop: " + ex.ToString ());  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: if (task.HasValue) {  	if (startEvent) {  		startEvent = false;  		if (OnTileCacheStart != null) {  			OnTileCacheStart ();  		}  	}  	if (OnTileCacheProgress != null) {  		OnTileCacheProgress (left);  	}  	#region -- save --  	// check if stream wasn't disposed somehow  	if (task.Value.Img != null) {  		Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB...");  		if ((task.Value.CacheType & CacheUsage.First) == CacheUsage.First && PrimaryCache != null) {  			if (cacheOnIdleRead) {  				while (Interlocked.Decrement (ref readingCache) > 0) {  					Thread.Sleep (1000);  				}  			}  			PrimaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  		}  		if ((task.Value.CacheType & CacheUsage.Second) == CacheUsage.Second && SecondaryCache != null) {  			if (cacheOnIdleRead) {  				while (Interlocked.Decrement (ref readingCache) > 0) {  					Thread.Sleep (1000);  				}  			}  			SecondaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  		}  		task.Value.Clear ();  		if (!boostCacheEngine) {  			#if PocketPC  			                        Thread.Sleep(3333); #else  			Thread.Sleep (333);  			#endif  		}  	} else {  		Debug.WriteLine ("CacheEngineLoop: skip' tile disposed to early -> " + task.Value);  	}  	task = null;  	#endregion  } else {  	if (!startEvent) {  		startEvent = true;  		if (OnTileCacheComplete != null) {  			OnTileCacheComplete ();  		}  	}  	if (abortCacheLoop || noMapInstances || !WaitForCache.WaitOne (33333' false) || noMapInstances) {  		break;  	}  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: if (task.HasValue) {  	if (startEvent) {  		startEvent = false;  		if (OnTileCacheStart != null) {  			OnTileCacheStart ();  		}  	}  	if (OnTileCacheProgress != null) {  		OnTileCacheProgress (left);  	}  	#region -- save --  	// check if stream wasn't disposed somehow  	if (task.Value.Img != null) {  		Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB...");  		if ((task.Value.CacheType & CacheUsage.First) == CacheUsage.First && PrimaryCache != null) {  			if (cacheOnIdleRead) {  				while (Interlocked.Decrement (ref readingCache) > 0) {  					Thread.Sleep (1000);  				}  			}  			PrimaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  		}  		if ((task.Value.CacheType & CacheUsage.Second) == CacheUsage.Second && SecondaryCache != null) {  			if (cacheOnIdleRead) {  				while (Interlocked.Decrement (ref readingCache) > 0) {  					Thread.Sleep (1000);  				}  			}  			SecondaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  		}  		task.Value.Clear ();  		if (!boostCacheEngine) {  			#if PocketPC  			                        Thread.Sleep(3333); #else  			Thread.Sleep (333);  			#endif  		}  	} else {  		Debug.WriteLine ("CacheEngineLoop: skip' tile disposed to early -> " + task.Value);  	}  	task = null;  	#endregion  } else {  	if (!startEvent) {  		startEvent = true;  		if (OnTileCacheComplete != null) {  			OnTileCacheComplete ();  		}  	}  	if (abortCacheLoop || noMapInstances || !WaitForCache.WaitOne (33333' false) || noMapInstances) {  		break;  	}  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: if (task.HasValue) {  	if (startEvent) {  		startEvent = false;  		if (OnTileCacheStart != null) {  			OnTileCacheStart ();  		}  	}  	if (OnTileCacheProgress != null) {  		OnTileCacheProgress (left);  	}  	#region -- save --  	// check if stream wasn't disposed somehow  	if (task.Value.Img != null) {  		Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB...");  		if ((task.Value.CacheType & CacheUsage.First) == CacheUsage.First && PrimaryCache != null) {  			if (cacheOnIdleRead) {  				while (Interlocked.Decrement (ref readingCache) > 0) {  					Thread.Sleep (1000);  				}  			}  			PrimaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  		}  		if ((task.Value.CacheType & CacheUsage.Second) == CacheUsage.Second && SecondaryCache != null) {  			if (cacheOnIdleRead) {  				while (Interlocked.Decrement (ref readingCache) > 0) {  					Thread.Sleep (1000);  				}  			}  			SecondaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  		}  		task.Value.Clear ();  		if (!boostCacheEngine) {  			#if PocketPC  			                        Thread.Sleep(3333); #else  			Thread.Sleep (333);  			#endif  		}  	} else {  		Debug.WriteLine ("CacheEngineLoop: skip' tile disposed to early -> " + task.Value);  	}  	task = null;  	#endregion  } else {  	if (!startEvent) {  		startEvent = true;  		if (OnTileCacheComplete != null) {  			OnTileCacheComplete ();  		}  	}  	if (abortCacheLoop || noMapInstances || !WaitForCache.WaitOne (33333' false) || noMapInstances) {  		break;  	}  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: if (task.HasValue) {  	if (startEvent) {  		startEvent = false;  		if (OnTileCacheStart != null) {  			OnTileCacheStart ();  		}  	}  	if (OnTileCacheProgress != null) {  		OnTileCacheProgress (left);  	}  	#region -- save --  	// check if stream wasn't disposed somehow  	if (task.Value.Img != null) {  		Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB...");  		if ((task.Value.CacheType & CacheUsage.First) == CacheUsage.First && PrimaryCache != null) {  			if (cacheOnIdleRead) {  				while (Interlocked.Decrement (ref readingCache) > 0) {  					Thread.Sleep (1000);  				}  			}  			PrimaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  		}  		if ((task.Value.CacheType & CacheUsage.Second) == CacheUsage.Second && SecondaryCache != null) {  			if (cacheOnIdleRead) {  				while (Interlocked.Decrement (ref readingCache) > 0) {  					Thread.Sleep (1000);  				}  			}  			SecondaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  		}  		task.Value.Clear ();  		if (!boostCacheEngine) {  			#if PocketPC  			                        Thread.Sleep(3333); #else  			Thread.Sleep (333);  			#endif  		}  	} else {  		Debug.WriteLine ("CacheEngineLoop: skip' tile disposed to early -> " + task.Value);  	}  	task = null;  	#endregion  } else {  	if (!startEvent) {  		startEvent = true;  		if (OnTileCacheComplete != null) {  			OnTileCacheComplete ();  		}  	}  	if (abortCacheLoop || noMapInstances || !WaitForCache.WaitOne (33333' false) || noMapInstances) {  		break;  	}  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: if (task.HasValue) {  	if (startEvent) {  		startEvent = false;  		if (OnTileCacheStart != null) {  			OnTileCacheStart ();  		}  	}  	if (OnTileCacheProgress != null) {  		OnTileCacheProgress (left);  	}  	#region -- save --  	// check if stream wasn't disposed somehow  	if (task.Value.Img != null) {  		Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB...");  		if ((task.Value.CacheType & CacheUsage.First) == CacheUsage.First && PrimaryCache != null) {  			if (cacheOnIdleRead) {  				while (Interlocked.Decrement (ref readingCache) > 0) {  					Thread.Sleep (1000);  				}  			}  			PrimaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  		}  		if ((task.Value.CacheType & CacheUsage.Second) == CacheUsage.Second && SecondaryCache != null) {  			if (cacheOnIdleRead) {  				while (Interlocked.Decrement (ref readingCache) > 0) {  					Thread.Sleep (1000);  				}  			}  			SecondaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  		}  		task.Value.Clear ();  		if (!boostCacheEngine) {  			#if PocketPC  			                        Thread.Sleep(3333); #else  			Thread.Sleep (333);  			#endif  		}  	} else {  		Debug.WriteLine ("CacheEngineLoop: skip' tile disposed to early -> " + task.Value);  	}  	task = null;  	#endregion  } else {  	if (!startEvent) {  		startEvent = true;  		if (OnTileCacheComplete != null) {  			OnTileCacheComplete ();  		}  	}  	if (abortCacheLoop || noMapInstances || !WaitForCache.WaitOne (33333' false) || noMapInstances) {  		break;  	}  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: if (task.Value.Img != null) {  	Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB...");  	if ((task.Value.CacheType & CacheUsage.First) == CacheUsage.First && PrimaryCache != null) {  		if (cacheOnIdleRead) {  			while (Interlocked.Decrement (ref readingCache) > 0) {  				Thread.Sleep (1000);  			}  		}  		PrimaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  	}  	if ((task.Value.CacheType & CacheUsage.Second) == CacheUsage.Second && SecondaryCache != null) {  		if (cacheOnIdleRead) {  			while (Interlocked.Decrement (ref readingCache) > 0) {  				Thread.Sleep (1000);  			}  		}  		SecondaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  	}  	task.Value.Clear ();  	if (!boostCacheEngine) {  		#if PocketPC  		                        Thread.Sleep(3333); #else  		Thread.Sleep (333);  		#endif  	}  } else {  	Debug.WriteLine ("CacheEngineLoop: skip' tile disposed to early -> " + task.Value);  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: if (task.Value.Img != null) {  	Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB...");  	if ((task.Value.CacheType & CacheUsage.First) == CacheUsage.First && PrimaryCache != null) {  		if (cacheOnIdleRead) {  			while (Interlocked.Decrement (ref readingCache) > 0) {  				Thread.Sleep (1000);  			}  		}  		PrimaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  	}  	if ((task.Value.CacheType & CacheUsage.Second) == CacheUsage.Second && SecondaryCache != null) {  		if (cacheOnIdleRead) {  			while (Interlocked.Decrement (ref readingCache) > 0) {  				Thread.Sleep (1000);  			}  		}  		SecondaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  	}  	task.Value.Clear ();  	if (!boostCacheEngine) {  		#if PocketPC  		                        Thread.Sleep(3333); #else  		Thread.Sleep (333);  		#endif  	}  } else {  	Debug.WriteLine ("CacheEngineLoop: skip' tile disposed to early -> " + task.Value);  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: if (task.Value.Img != null) {  	Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB...");  	if ((task.Value.CacheType & CacheUsage.First) == CacheUsage.First && PrimaryCache != null) {  		if (cacheOnIdleRead) {  			while (Interlocked.Decrement (ref readingCache) > 0) {  				Thread.Sleep (1000);  			}  		}  		PrimaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  	}  	if ((task.Value.CacheType & CacheUsage.Second) == CacheUsage.Second && SecondaryCache != null) {  		if (cacheOnIdleRead) {  			while (Interlocked.Decrement (ref readingCache) > 0) {  				Thread.Sleep (1000);  			}  		}  		SecondaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  	}  	task.Value.Clear ();  	if (!boostCacheEngine) {  		#if PocketPC  		                        Thread.Sleep(3333); #else  		Thread.Sleep (333);  		#endif  	}  } else {  	Debug.WriteLine ("CacheEngineLoop: skip' tile disposed to early -> " + task.Value);  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: if (task.Value.Img != null) {  	Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB...");  	if ((task.Value.CacheType & CacheUsage.First) == CacheUsage.First && PrimaryCache != null) {  		if (cacheOnIdleRead) {  			while (Interlocked.Decrement (ref readingCache) > 0) {  				Thread.Sleep (1000);  			}  		}  		PrimaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  	}  	if ((task.Value.CacheType & CacheUsage.Second) == CacheUsage.Second && SecondaryCache != null) {  		if (cacheOnIdleRead) {  			while (Interlocked.Decrement (ref readingCache) > 0) {  				Thread.Sleep (1000);  			}  		}  		SecondaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  	}  	task.Value.Clear ();  	if (!boostCacheEngine) {  		#if PocketPC  		                        Thread.Sleep(3333); #else  		Thread.Sleep (333);  		#endif  	}  } else {  	Debug.WriteLine ("CacheEngineLoop: skip' tile disposed to early -> " + task.Value);  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: Debug.WriteLine ("CacheEngine[" + left + "]: storing tile " + task.Value + "' " + task.Value.Img.Length / 1024 + "kB...");  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: if ((task.Value.CacheType & CacheUsage.First) == CacheUsage.First && PrimaryCache != null) {  	if (cacheOnIdleRead) {  		while (Interlocked.Decrement (ref readingCache) > 0) {  			Thread.Sleep (1000);  		}  	}  	PrimaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: if (cacheOnIdleRead) {  	while (Interlocked.Decrement (ref readingCache) > 0) {  		Thread.Sleep (1000);  	}  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: while (Interlocked.Decrement (ref readingCache) > 0) {  	Thread.Sleep (1000);  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: if ((task.Value.CacheType & CacheUsage.Second) == CacheUsage.Second && SecondaryCache != null) {  	if (cacheOnIdleRead) {  		while (Interlocked.Decrement (ref readingCache) > 0) {  			Thread.Sleep (1000);  		}  	}  	SecondaryCache.PutImageToCache (task.Value.Img' task.Value.Tile.Type' task.Value.Tile.Pos' task.Value.Tile.Zoom);  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: if (cacheOnIdleRead) {  	while (Interlocked.Decrement (ref readingCache) > 0) {  		Thread.Sleep (1000);  	}  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: while (Interlocked.Decrement (ref readingCache) > 0) {  	Thread.Sleep (1000);  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: if (!boostCacheEngine) {  	#if PocketPC  	                        Thread.Sleep(3333); #else  	Thread.Sleep (333);  	#endif  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: Thread.Sleep (333);  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,CacheEngineLoop,The following statement contains a magic number: if (abortCacheLoop || noMapInstances || !WaitForCache.WaitOne (33333' false) || noMapInstances) {  	break;  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,GetImageFrom,The following statement contains a magic number: try {  	var rtile = new RawTile (provider.DbId' pos' zoom);  	// let't check memmory first  	if (UseMemoryCache) {  		var m = MemoryCache.GetTileFromMemoryCache (rtile);  		if (m != null) {  			if (GMapProvider.TileImageProxy != null) {  				ret = GMapProvider.TileImageProxy.FromArray (m);  				if (ret == null) {  					#if DEBUG  					Debug.WriteLine ("Image disposed in MemoryCache o.O' should never happen ;} " + new RawTile (provider.DbId' pos' zoom));  					if (Debugger.IsAttached) {  						Debugger.Break ();  					}  					#endif  					m = null;  				}  			}  		}  	}  	if (ret == null) {  		if (Mode != AccessMode.ServerOnly && !provider.BypassCache) {  			if (PrimaryCache != null) {  				// hold writer for 5s  				if (cacheOnIdleRead) {  					Interlocked.Exchange (ref readingCache' 5);  				}  				ret = PrimaryCache.GetImageFromCache (provider.DbId' pos' zoom);  				if (ret != null) {  					if (UseMemoryCache) {  						MemoryCache.AddTileToMemoryCache (rtile' ret.Data.GetBuffer ());  					}  					return ret;  				}  			}  			if (SecondaryCache != null) {  				// hold writer for 5s  				if (cacheOnIdleRead) {  					Interlocked.Exchange (ref readingCache' 5);  				}  				ret = SecondaryCache.GetImageFromCache (provider.DbId' pos' zoom);  				if (ret != null) {  					if (UseMemoryCache) {  						MemoryCache.AddTileToMemoryCache (rtile' ret.Data.GetBuffer ());  					}  					EnqueueCacheTask (new CacheQueueItem (rtile' ret.Data.GetBuffer ()' CacheUsage.First));  					return ret;  				}  			}  		}  		if (Mode != AccessMode.CacheOnly) {  			ret = provider.GetTileImage (pos' zoom);  			{  				// Enqueue Cache  				if (ret != null) {  					if (UseMemoryCache) {  						MemoryCache.AddTileToMemoryCache (rtile' ret.Data.GetBuffer ());  					}  					if (Mode != AccessMode.ServerOnly && !provider.BypassCache) {  						EnqueueCacheTask (new CacheQueueItem (rtile' ret.Data.GetBuffer ()' CacheUsage.Both));  					}  				}  			}  		} else {  			result = noDataException;  		}  	}  } catch (Exception ex) {  	result = ex;  	ret = null;  	Debug.WriteLine ("GetImageFrom: " + ex.ToString ());  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,GetImageFrom,The following statement contains a magic number: try {  	var rtile = new RawTile (provider.DbId' pos' zoom);  	// let't check memmory first  	if (UseMemoryCache) {  		var m = MemoryCache.GetTileFromMemoryCache (rtile);  		if (m != null) {  			if (GMapProvider.TileImageProxy != null) {  				ret = GMapProvider.TileImageProxy.FromArray (m);  				if (ret == null) {  					#if DEBUG  					Debug.WriteLine ("Image disposed in MemoryCache o.O' should never happen ;} " + new RawTile (provider.DbId' pos' zoom));  					if (Debugger.IsAttached) {  						Debugger.Break ();  					}  					#endif  					m = null;  				}  			}  		}  	}  	if (ret == null) {  		if (Mode != AccessMode.ServerOnly && !provider.BypassCache) {  			if (PrimaryCache != null) {  				// hold writer for 5s  				if (cacheOnIdleRead) {  					Interlocked.Exchange (ref readingCache' 5);  				}  				ret = PrimaryCache.GetImageFromCache (provider.DbId' pos' zoom);  				if (ret != null) {  					if (UseMemoryCache) {  						MemoryCache.AddTileToMemoryCache (rtile' ret.Data.GetBuffer ());  					}  					return ret;  				}  			}  			if (SecondaryCache != null) {  				// hold writer for 5s  				if (cacheOnIdleRead) {  					Interlocked.Exchange (ref readingCache' 5);  				}  				ret = SecondaryCache.GetImageFromCache (provider.DbId' pos' zoom);  				if (ret != null) {  					if (UseMemoryCache) {  						MemoryCache.AddTileToMemoryCache (rtile' ret.Data.GetBuffer ());  					}  					EnqueueCacheTask (new CacheQueueItem (rtile' ret.Data.GetBuffer ()' CacheUsage.First));  					return ret;  				}  			}  		}  		if (Mode != AccessMode.CacheOnly) {  			ret = provider.GetTileImage (pos' zoom);  			{  				// Enqueue Cache  				if (ret != null) {  					if (UseMemoryCache) {  						MemoryCache.AddTileToMemoryCache (rtile' ret.Data.GetBuffer ());  					}  					if (Mode != AccessMode.ServerOnly && !provider.BypassCache) {  						EnqueueCacheTask (new CacheQueueItem (rtile' ret.Data.GetBuffer ()' CacheUsage.Both));  					}  				}  			}  		} else {  			result = noDataException;  		}  	}  } catch (Exception ex) {  	result = ex;  	ret = null;  	Debug.WriteLine ("GetImageFrom: " + ex.ToString ());  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,GetImageFrom,The following statement contains a magic number: if (ret == null) {  	if (Mode != AccessMode.ServerOnly && !provider.BypassCache) {  		if (PrimaryCache != null) {  			// hold writer for 5s  			if (cacheOnIdleRead) {  				Interlocked.Exchange (ref readingCache' 5);  			}  			ret = PrimaryCache.GetImageFromCache (provider.DbId' pos' zoom);  			if (ret != null) {  				if (UseMemoryCache) {  					MemoryCache.AddTileToMemoryCache (rtile' ret.Data.GetBuffer ());  				}  				return ret;  			}  		}  		if (SecondaryCache != null) {  			// hold writer for 5s  			if (cacheOnIdleRead) {  				Interlocked.Exchange (ref readingCache' 5);  			}  			ret = SecondaryCache.GetImageFromCache (provider.DbId' pos' zoom);  			if (ret != null) {  				if (UseMemoryCache) {  					MemoryCache.AddTileToMemoryCache (rtile' ret.Data.GetBuffer ());  				}  				EnqueueCacheTask (new CacheQueueItem (rtile' ret.Data.GetBuffer ()' CacheUsage.First));  				return ret;  			}  		}  	}  	if (Mode != AccessMode.CacheOnly) {  		ret = provider.GetTileImage (pos' zoom);  		{  			// Enqueue Cache  			if (ret != null) {  				if (UseMemoryCache) {  					MemoryCache.AddTileToMemoryCache (rtile' ret.Data.GetBuffer ());  				}  				if (Mode != AccessMode.ServerOnly && !provider.BypassCache) {  					EnqueueCacheTask (new CacheQueueItem (rtile' ret.Data.GetBuffer ()' CacheUsage.Both));  				}  			}  		}  	} else {  		result = noDataException;  	}  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,GetImageFrom,The following statement contains a magic number: if (ret == null) {  	if (Mode != AccessMode.ServerOnly && !provider.BypassCache) {  		if (PrimaryCache != null) {  			// hold writer for 5s  			if (cacheOnIdleRead) {  				Interlocked.Exchange (ref readingCache' 5);  			}  			ret = PrimaryCache.GetImageFromCache (provider.DbId' pos' zoom);  			if (ret != null) {  				if (UseMemoryCache) {  					MemoryCache.AddTileToMemoryCache (rtile' ret.Data.GetBuffer ());  				}  				return ret;  			}  		}  		if (SecondaryCache != null) {  			// hold writer for 5s  			if (cacheOnIdleRead) {  				Interlocked.Exchange (ref readingCache' 5);  			}  			ret = SecondaryCache.GetImageFromCache (provider.DbId' pos' zoom);  			if (ret != null) {  				if (UseMemoryCache) {  					MemoryCache.AddTileToMemoryCache (rtile' ret.Data.GetBuffer ());  				}  				EnqueueCacheTask (new CacheQueueItem (rtile' ret.Data.GetBuffer ()' CacheUsage.First));  				return ret;  			}  		}  	}  	if (Mode != AccessMode.CacheOnly) {  		ret = provider.GetTileImage (pos' zoom);  		{  			// Enqueue Cache  			if (ret != null) {  				if (UseMemoryCache) {  					MemoryCache.AddTileToMemoryCache (rtile' ret.Data.GetBuffer ());  				}  				if (Mode != AccessMode.ServerOnly && !provider.BypassCache) {  					EnqueueCacheTask (new CacheQueueItem (rtile' ret.Data.GetBuffer ()' CacheUsage.Both));  				}  			}  		}  	} else {  		result = noDataException;  	}  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,GetImageFrom,The following statement contains a magic number: if (Mode != AccessMode.ServerOnly && !provider.BypassCache) {  	if (PrimaryCache != null) {  		// hold writer for 5s  		if (cacheOnIdleRead) {  			Interlocked.Exchange (ref readingCache' 5);  		}  		ret = PrimaryCache.GetImageFromCache (provider.DbId' pos' zoom);  		if (ret != null) {  			if (UseMemoryCache) {  				MemoryCache.AddTileToMemoryCache (rtile' ret.Data.GetBuffer ());  			}  			return ret;  		}  	}  	if (SecondaryCache != null) {  		// hold writer for 5s  		if (cacheOnIdleRead) {  			Interlocked.Exchange (ref readingCache' 5);  		}  		ret = SecondaryCache.GetImageFromCache (provider.DbId' pos' zoom);  		if (ret != null) {  			if (UseMemoryCache) {  				MemoryCache.AddTileToMemoryCache (rtile' ret.Data.GetBuffer ());  			}  			EnqueueCacheTask (new CacheQueueItem (rtile' ret.Data.GetBuffer ()' CacheUsage.First));  			return ret;  		}  	}  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,GetImageFrom,The following statement contains a magic number: if (Mode != AccessMode.ServerOnly && !provider.BypassCache) {  	if (PrimaryCache != null) {  		// hold writer for 5s  		if (cacheOnIdleRead) {  			Interlocked.Exchange (ref readingCache' 5);  		}  		ret = PrimaryCache.GetImageFromCache (provider.DbId' pos' zoom);  		if (ret != null) {  			if (UseMemoryCache) {  				MemoryCache.AddTileToMemoryCache (rtile' ret.Data.GetBuffer ());  			}  			return ret;  		}  	}  	if (SecondaryCache != null) {  		// hold writer for 5s  		if (cacheOnIdleRead) {  			Interlocked.Exchange (ref readingCache' 5);  		}  		ret = SecondaryCache.GetImageFromCache (provider.DbId' pos' zoom);  		if (ret != null) {  			if (UseMemoryCache) {  				MemoryCache.AddTileToMemoryCache (rtile' ret.Data.GetBuffer ());  			}  			EnqueueCacheTask (new CacheQueueItem (rtile' ret.Data.GetBuffer ()' CacheUsage.First));  			return ret;  		}  	}  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,GetImageFrom,The following statement contains a magic number: if (PrimaryCache != null) {  	// hold writer for 5s  	if (cacheOnIdleRead) {  		Interlocked.Exchange (ref readingCache' 5);  	}  	ret = PrimaryCache.GetImageFromCache (provider.DbId' pos' zoom);  	if (ret != null) {  		if (UseMemoryCache) {  			MemoryCache.AddTileToMemoryCache (rtile' ret.Data.GetBuffer ());  		}  		return ret;  	}  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,GetImageFrom,The following statement contains a magic number: if (cacheOnIdleRead) {  	Interlocked.Exchange (ref readingCache' 5);  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,GetImageFrom,The following statement contains a magic number: Interlocked.Exchange (ref readingCache' 5);  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,GetImageFrom,The following statement contains a magic number: if (SecondaryCache != null) {  	// hold writer for 5s  	if (cacheOnIdleRead) {  		Interlocked.Exchange (ref readingCache' 5);  	}  	ret = SecondaryCache.GetImageFromCache (provider.DbId' pos' zoom);  	if (ret != null) {  		if (UseMemoryCache) {  			MemoryCache.AddTileToMemoryCache (rtile' ret.Data.GetBuffer ());  		}  		EnqueueCacheTask (new CacheQueueItem (rtile' ret.Data.GetBuffer ()' CacheUsage.First));  		return ret;  	}  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,GetImageFrom,The following statement contains a magic number: if (cacheOnIdleRead) {  	Interlocked.Exchange (ref readingCache' 5);  }  
Magic Number,GMap.NET,GMaps,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET\GMaps.cs,GetImageFrom,The following statement contains a magic number: Interlocked.Exchange (ref readingCache' 5);  
Duplicate Code,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetLatLngFromGeocoderUrl,The method contains a code clone-set at the following line numbers (starting from the method definition): ((23' 48)' (90' 115))
Duplicate Code,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetPlacemarkFromReverseGeocoderUrl,The method contains a code clone-set at the following line numbers (starting from the method definition): ((31' 55)' (86' 110)' (148' 172))
Duplicate Code,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetPlacemarkFromReverseGeocoderUrl,The method contains a code clone-set at the following line numbers (starting from the method definition): ((86' 112)' (148' 174))
Duplicate Code,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetPlacemarkFromReverseGeocoderUrl,The method contains a code clone-set at the following line numbers (starting from the method definition): ((32' 51)' (87' 106)' (149' 168)' (261' 280))
Duplicate Code,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetPlacemarkFromReverseGeocoderUrl,The method contains a code clone-set at the following line numbers (starting from the method definition): ((32' 55)' (261' 284))
Duplicate Code,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetPlacemarkFromReverseGeocoderUrl,The method contains a code clone-set at the following line numbers (starting from the method definition): ((87' 112)' (261' 286)' (149' 174))
Duplicate Code,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetPlacemarkFromReverseGeocoderUrl,The method contains a code clone-set at the following line numbers (starting from the method definition): ((36' 55)' (91' 110)' (153' 172)' (209' 228)' (265' 284))
Duplicate Code,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetPlacemarkFromReverseGeocoderUrl,The method contains a code clone-set at the following line numbers (starting from the method definition): ((36' 55)' (209' 228))
Duplicate Code,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetPlacemarkFromReverseGeocoderUrl,The method contains a code clone-set at the following line numbers (starting from the method definition): ((91' 112)' (209' 230)' (265' 286))
Duplicate Code,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetPlacemarkFromReverseGeocoderUrl,The method contains a code clone-set at the following line numbers (starting from the method definition): ((153' 180)' (209' 236))
Duplicate Code,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetPlacemarkFromReverseGeocoderUrl,The method contains a code clone-set at the following line numbers (starting from the method definition): ((93' 112)' (155' 174)' (211' 230)' (267' 286)' (317' 336))
Duplicate Code,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetPlacemarkFromReverseGeocoderUrl,The method contains a code clone-set at the following line numbers (starting from the method definition): ((93' 112)' (317' 336)' (155' 174)' (211' 230)' (267' 286))
Duplicate Code,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetPlacemarkFromReverseGeocoderUrl,The method contains a code clone-set at the following line numbers (starting from the method definition): ((289' 313)' (339' 363))
Missing Default,GMap.NET.Internals,SocksHttpWebResponse,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Internals\SocksProxySocket\SocksHttpWebRequest.cs,SocksHttpWebResponse,The following switch statement is missing a default case: switch (headerEntry [0]) {  case "Content-Type":  	{  		ContentType = headerEntry [1];  	}  	break;  case "Content-Length":  	{  		long r = 0;  		if (long.TryParse (headerEntry [1]' out r)) {  			ContentLength = r;  		}  	}  	break;  }  
Missing Default,GMap.NET.MapProviders,GoogleMapProviderBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.MapProviders\Google\GoogleMapProvider.cs,GetPlacemarkFromReverseGeocoderUrl,The following switch statement is missing a default case: switch (type) {  case "street_address":  	{  		ret.StreetNumber = nn.InnerText;  	}  	break;  case "route":  	{  		ret.ThoroughfareName = nn.InnerText;  	}  	break;  case "postal_code":  	{  		ret.PostalCodeNumber = nn.InnerText;  	}  	break;  case "country":  	{  		ret.CountryName = nn.InnerText;  	}  	break;  case "locality":  	{  		ret.LocalityName = nn.InnerText;  	}  	break;  case "administrative_area_level_2":  	{  		ret.DistrictName = nn.InnerText;  	}  	break;  case "administrative_area_level_1":  	{  		ret.AdministrativeAreaName = nn.InnerText;  	}  	break;  case "administrative_area_level_3":  	{  		ret.SubAdministrativeAreaName = nn.InnerText;  	}  	break;  case "neighborhood":  	{  		ret.Neighborhood = nn.InnerText;  	}  	break;  }  
Missing Default,GMap.NET.Projections,PlateCarreeProjectionDarbAe,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\PlateCarreeProjectionDarbAe.cs,GetTileMatrixResolution,The following switch statement is missing a default case: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 0.0118973050291514;  	}  	break;  case 1:  	{  		ret = 0.0059486525145757;  	}  	break;  case 2:  	{  		ret = 0.00297432625728785;  	}  	break;  case 3:  	{  		ret = 0.00118973050291514;  	}  	break;  case 4:  	{  		ret = 0.00059486525145757;  	}  	break;  case 5:  	{  		ret = 0.000356919150874542;  	}  	break;  case 6:  	{  		ret = 0.000178459575437271;  	}  	break;  case 7:  	{  		ret = 0.000118973050291514;  	}  	break;  case 8:  	{  		ret = 5.9486525145757E-05;  	}  	break;  case 9:  	{  		ret = 3.56919150874542E-05;  	}  	break;  case 10:  	{  		ret = 1.90356880466422E-05;  	}  	break;  case 11:  	{  		ret = 9.51784402332112E-06;  	}  	break;  case 12:  	{  		ret = 4.75892201166056E-06;  	}  	break;  #endregion  }  
Missing Default,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixResolution,The following switch statement is missing a default case: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  #endregion  }  
Missing Default,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMinXY,The following switch statement is missing a default case: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (13' 8);  	}  	break;  case 1:  	{  		ret = new GSize (26' 17);  	}  	break;  case 2:  	{  		ret = new GSize (39' 26);  	}  	break;  case 3:  	{  		ret = new GSize (79' 52);  	}  	break;  case 4:  	{  		ret = new GSize (159' 105);  	}  	break;  case 5:  	{  		ret = new GSize (399' 262);  	}  	break;  case 6:  	{  		ret = new GSize (798' 525);  	}  	break;  case 7:  	{  		ret = new GSize (1597' 1050);  	}  	break;  case 8:  	{  		ret = new GSize (3195' 2101);  	}  	break;  case 9:  	{  		ret = new GSize (7989' 5254);  	}  	break;  case 10:  	{  		ret = new GSize (15978' 10509);  	}  	break;  case 11:  	{  		ret = new GSize (39945' 26273);  	}  	break;  #endregion  }  
Missing Default,GMap.NET.Projections,LKS92Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLVProjection.cs,GetTileMatrixMaxXY,The following switch statement is missing a default case: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 9);  	}  	break;  case 1:  	{  		ret = new GSize (28' 18);  	}  	break;  case 2:  	{  		ret = new GSize (43' 28);  	}  	break;  case 3:  	{  		ret = new GSize (86' 56);  	}  	break;  case 4:  	{  		ret = new GSize (173' 112);  	}  	break;  case 5:  	{  		ret = new GSize (434' 282);  	}  	break;  case 6:  	{  		ret = new GSize (868' 564);  	}  	break;  case 7:  	{  		ret = new GSize (1737' 1129);  	}  	break;  case 8:  	{  		ret = new GSize (3474' 2258);  	}  	break;  case 9:  	{  		ret = new GSize (8686' 5647);  	}  	break;  case 10:  	{  		ret = new GSize (17372' 11294);  	}  	break;  case 11:  	{  		ret = new GSize (43430' 28236);  	}  	break;  #endregion  }  
Missing Default,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixResolution,The following switch statement is missing a default case: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = 1587.50317500635;  	}  	break;  case 1:  	{  		ret = 793.751587503175;  	}  	break;  case 2:  	{  		ret = 529.167725002117;  	}  	break;  case 3:  	{  		ret = 264.583862501058;  	}  	break;  case 4:  	{  		ret = 132.291931250529;  	}  	break;  case 5:  	{  		ret = 52.9167725002117;  	}  	break;  case 6:  	{  		ret = 26.4583862501058;  	}  	break;  case 7:  	{  		ret = 13.2291931250529;  	}  	break;  case 8:  	{  		ret = 6.61459656252646;  	}  	break;  case 9:  	{  		ret = 2.64583862501058;  	}  	break;  case 10:  	{  		ret = 1.32291931250529;  	}  	break;  case 11:  	{  		ret = 0.529167725002117;  	}  	break;  case 12:  	{  		ret = 0.264583862501058;  	}  	break;  #endregion  }  
Missing Default,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMinXY,The following switch statement is missing a default case: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (12' 8);  	}  	break;  case 1:  	{  		ret = new GSize (24' 17);  	}  	break;  case 2:  	{  		ret = new GSize (37' 25);  	}  	break;  case 3:  	{  		ret = new GSize (74' 51);  	}  	break;  case 4:  	{  		ret = new GSize (149' 103);  	}  	break;  case 5:  	{  		ret = new GSize (374' 259);  	}  	break;  case 6:  	{  		ret = new GSize (749' 519);  	}  	break;  case 7:  	{  		ret = new GSize (1594' 1100);  	}  	break;  case 8:  	{  		ret = new GSize (3188' 2201);  	}  	break;  case 9:  	{  		ret = new GSize (7971' 5502);  	}  	break;  case 10:  	{  		ret = new GSize (15943' 11005);  	}  	break;  case 11:  	{  		ret = new GSize (39858' 27514);  	}  	break;  case 12:  	{  		ret = new GSize (79716' 27514);  	}  	break;  #endregion  }  
Missing Default,GMap.NET.Projections,LKS94Projection,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\GMap.NET.Core\GMap.NET.Projections\MapsLTProjection.cs,GetTileMatrixMaxXY,The following switch statement is missing a default case: switch (zoom) {  #region -- sizes --  case 0:  	{  		ret = new GSize (14' 10);  	}  	break;  case 1:  	{  		ret = new GSize (30' 20);  	}  	break;  case 2:  	{  		ret = new GSize (45' 31);  	}  	break;  case 3:  	{  		ret = new GSize (90' 62);  	}  	break;  case 4:  	{  		ret = new GSize (181' 125);  	}  	break;  case 5:  	{  		ret = new GSize (454' 311);  	}  	break;  case 6:  	{  		ret = new GSize (903' 623);  	}  	break;  case 7:  	{  		ret = new GSize (1718' 1193);  	}  	break;  case 8:  	{  		ret = new GSize (3437' 2386);  	}  	break;  case 9:  	{  		ret = new GSize (8594' 5966);  	}  	break;  case 10:  	{  		ret = new GSize (17189' 11932);  	}  	break;  case 11:  	{  		ret = new GSize (42972' 29831);  	}  	break;  case 12:  	{  		ret = new GSize (85944' 59662);  	}  	break;  #endregion  }  
