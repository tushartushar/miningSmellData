Implementation smell,Namespace,Class,File,Method,Description
Long Method,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabTextRect,The method has 148 lines of code.
Complex Method,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,Dispose,Cyclomatic complexity of the method is 8
Complex Method,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,ShowTab,Cyclomatic complexity of the method is 9
Complex Method,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,OnResize,Cyclomatic complexity of the method is 8
Complex Method,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,CustomPaint,Cyclomatic complexity of the method is 13
Complex Method,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabTextRect,Cyclomatic complexity of the method is 30
Complex Method,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabPosition,Cyclomatic complexity of the method is 8
Complex Method,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabImageRect,Cyclomatic complexity of the method is 15
Complex Method,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabCloserRect,Cyclomatic complexity of the method is 11
Complex Method,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,CreateProvider,Cyclomatic complexity of the method is 9
Complex Method,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetTabRect,Cyclomatic complexity of the method is 8
Complex Method,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,EnsureFirstTabIsInView,Cyclomatic complexity of the method is 13
Complex Method,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetTabBackgroundBrush,Cyclomatic complexity of the method is 8
Complex Method,Altman.CustomControl.TabStyleProviders,TabStyleDefaultProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleDefaultProvider.cs,GetTabRect,Cyclomatic complexity of the method is 17
Complex Method,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetTabRect,Cyclomatic complexity of the method is 13
Long Statement,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,ShowTab,The length of the statement  "				TabPage tab = this._TabPages.Find(delegate(TabPage page){return page.Name.Equals(key' StringComparison.OrdinalIgnoreCase);}); " is 125.
Long Statement,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,WndProc,The length of the statement  "					this.OnHScroll(new ScrollEventArgs(((ScrollEventType)NativeMethods.LoWord(m.WParam))'_oldValue' NativeMethods.HiWord(m.WParam)' ScrollOrientation.HorizontalScroll)); " is 165.
Long Statement,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,OnMouseClick,The length of the statement  "			} else if (!this.DesignMode && index > -1 && this._StyleProvider.ShowTabCloser && this.GetTabCloserRect(index).Contains(this.MousePosition)){ " is 141.
Long Statement,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,CustomPaint,The length of the statement  "						this._TabBufferGraphics.Clip = new Region(new RectangleF(this.ClientRectangle.X + 3' this.ClientRectangle.Y' this.ClientRectangle.Width - 6' this.ClientRectangle.Height)); " is 171.
Long Statement,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,DrawTabImage,The length of the statement  "			if (this.TabPages[index].ImageIndex > -1 && this.ImageList != null && this.ImageList.Images.Count > this.TabPages[index].ImageIndex){ " is 133.
Long Statement,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,DrawTabImage,The length of the statement  "			} else if ((!string.IsNullOrEmpty(this.TabPages[index].ImageKey) && !this.TabPages[index].ImageKey.Equals("(none)"' StringComparison.OrdinalIgnoreCase)) " is 152.
Long Statement,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabImageRect,The length of the statement  "					imageRect = new Rectangle((int)rect.X + (int)Math.Floor((double)(((int)rect.Right - (int)rect.X - (int)rect.Height + 2)/2))' (int)rect.Y + (int)Math.Floor((double)((int)rect.Height - 16)/2)' 16' 16); " is 199.
Long Statement,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabImageRect,The length of the statement  "					imageRect = new Rectangle((int)rect.X + (int)Math.Floor((double)((int)rect.Width - 16)/2)' (int)rect.Y + (int)Math.Floor((double)(((int)rect.Bottom - (int)rect.Y - (int)rect.Width + 2)/2))' 16' 16); " is 198.
Long Statement,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,DrawTabFocusIndicator,The length of the statement  "						focusBrush = new LinearGradientBrush(focusRect' SystemColors.ControlLight' this._FocusColor' LinearGradientMode.Vertical); " is 122.
Long Statement,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,DrawTabFocusIndicator,The length of the statement  "						focusBrush = new LinearGradientBrush(focusRect' this._FocusColor' SystemColors.ControlLight' LinearGradientMode.Horizontal); " is 124.
Long Statement,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,DrawTabFocusIndicator,The length of the statement  "						focusBrush = new LinearGradientBrush(focusRect' SystemColors.ControlLight' this._FocusColor' LinearGradientMode.Horizontal); " is 124.
Long Statement,Altman.CustomControl,ThemedColors,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\ThemedColors.cs,GetCurrentThemeIndex,The length of the statement  "			if (VisualStyleInformation.IsSupportedByOS && VisualStyleInformation.IsEnabledByUser && Application.RenderWithVisualStyles) " is 123.
Long Statement,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The length of the statement  "					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90); " is 128.
Long Statement,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The length of the statement  "					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90); " is 128.
Long Statement,Altman,Program,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\Program.cs,Main,The length of the statement  "				var appDomain = AppDomain.CreateDomain("Host_AppDomain"' AppDomain.CurrentDomain.Evidence' setup' trustedLoadFromRemoteSource); " is 127.
Complex Conditional,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,OnMouseClick,The conditional expression  "index > -1 && this.TabImageClick != null  			    && (this.TabPages[index].ImageIndex > -1 || !string.IsNullOrEmpty(this.TabPages[index].ImageKey))  			    && this.GetTabImageRect(index).Contains(this.MousePosition)"  is complex.
Complex Conditional,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,OnMouseClick,The conditional expression  "!this.DesignMode && index > -1 && this._StyleProvider.ShowTabCloser && this.GetTabCloserRect(index).Contains(this.MousePosition)"  is complex.
Complex Conditional,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,DrawTabImage,The conditional expression  "(!string.IsNullOrEmpty(this.TabPages[index].ImageKey) && !this.TabPages[index].ImageKey.Equals("(none)"' StringComparison.OrdinalIgnoreCase))  			           && this.ImageList != null && this.ImageList.Images.ContainsKey(this.TabPages[index].ImageKey)"  is complex.
Complex Conditional,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabTextRect,The conditional expression  "this.ImageList != null && (this.TabPages[index].ImageIndex > -1   				                               || (!string.IsNullOrEmpty(this.TabPages[index].ImageKey)  				                                   && !this.TabPages[index].ImageKey.Equals("(none)"' StringComparison.OrdinalIgnoreCase)))"  is complex.
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,CustomPaint,The following statement contains a magic number: this._TabBufferGraphics.Clip = new Region(new RectangleF(this.ClientRectangle.X + 3' this.ClientRectangle.Y' this.ClientRectangle.Width - 6' this.ClientRectangle.Height));
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,CustomPaint,The following statement contains a magic number: this._TabBufferGraphics.Clip = new Region(new RectangleF(this.ClientRectangle.X + 3' this.ClientRectangle.Y' this.ClientRectangle.Width - 6' this.ClientRectangle.Height));
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetPageBounds,The following statement contains a magic number: pageBounds.Height -= (pageBounds.Bottom - this.Height + 4);
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetPageBounds,The following statement contains a magic number: pageBounds.Bottom > this.Height - 4
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabTextRect,The following statement contains a magic number: switch (this.Alignment) {  					case TabAlignment.Top:  						textRect.Y += 4;  						textRect.Height -= 6;  						break;  					case TabAlignment.Bottom:  						textRect.Y += 2;  						textRect.Height -= 6;  						break;  					case TabAlignment.Left:  						textRect.X += 4;  						textRect.Width -= 6;  						break;  					case TabAlignment.Right:  						textRect.X += 2;  						textRect.Width -= 6;  						break;  				}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabTextRect,The following statement contains a magic number: switch (this.Alignment) {  					case TabAlignment.Top:  						textRect.Y += 4;  						textRect.Height -= 6;  						break;  					case TabAlignment.Bottom:  						textRect.Y += 2;  						textRect.Height -= 6;  						break;  					case TabAlignment.Left:  						textRect.X += 4;  						textRect.Width -= 6;  						break;  					case TabAlignment.Right:  						textRect.X += 2;  						textRect.Width -= 6;  						break;  				}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabTextRect,The following statement contains a magic number: switch (this.Alignment) {  					case TabAlignment.Top:  						textRect.Y += 4;  						textRect.Height -= 6;  						break;  					case TabAlignment.Bottom:  						textRect.Y += 2;  						textRect.Height -= 6;  						break;  					case TabAlignment.Left:  						textRect.X += 4;  						textRect.Width -= 6;  						break;  					case TabAlignment.Right:  						textRect.X += 2;  						textRect.Width -= 6;  						break;  				}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabTextRect,The following statement contains a magic number: switch (this.Alignment) {  					case TabAlignment.Top:  						textRect.Y += 4;  						textRect.Height -= 6;  						break;  					case TabAlignment.Bottom:  						textRect.Y += 2;  						textRect.Height -= 6;  						break;  					case TabAlignment.Left:  						textRect.X += 4;  						textRect.Width -= 6;  						break;  					case TabAlignment.Right:  						textRect.X += 2;  						textRect.Width -= 6;  						break;  				}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabTextRect,The following statement contains a magic number: switch (this.Alignment) {  					case TabAlignment.Top:  						textRect.Y += 4;  						textRect.Height -= 6;  						break;  					case TabAlignment.Bottom:  						textRect.Y += 2;  						textRect.Height -= 6;  						break;  					case TabAlignment.Left:  						textRect.X += 4;  						textRect.Width -= 6;  						break;  					case TabAlignment.Right:  						textRect.X += 2;  						textRect.Width -= 6;  						break;  				}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabTextRect,The following statement contains a magic number: switch (this.Alignment) {  					case TabAlignment.Top:  						textRect.Y += 4;  						textRect.Height -= 6;  						break;  					case TabAlignment.Bottom:  						textRect.Y += 2;  						textRect.Height -= 6;  						break;  					case TabAlignment.Left:  						textRect.X += 4;  						textRect.Width -= 6;  						break;  					case TabAlignment.Right:  						textRect.X += 2;  						textRect.Width -= 6;  						break;  				}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabTextRect,The following statement contains a magic number: switch (this.Alignment) {  					case TabAlignment.Top:  						textRect.Y += 4;  						textRect.Height -= 6;  						break;  					case TabAlignment.Bottom:  						textRect.Y += 2;  						textRect.Height -= 6;  						break;  					case TabAlignment.Left:  						textRect.X += 4;  						textRect.Width -= 6;  						break;  					case TabAlignment.Right:  						textRect.X += 2;  						textRect.Width -= 6;  						break;  				}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabTextRect,The following statement contains a magic number: switch (this.Alignment) {  					case TabAlignment.Top:  						textRect.Y += 4;  						textRect.Height -= 6;  						break;  					case TabAlignment.Bottom:  						textRect.Y += 2;  						textRect.Height -= 6;  						break;  					case TabAlignment.Left:  						textRect.X += 4;  						textRect.Width -= 6;  						break;  					case TabAlignment.Right:  						textRect.X += 2;  						textRect.Width -= 6;  						break;  				}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabTextRect,The following statement contains a magic number: textRect.X = imageRect.Right + 4;
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabTextRect,The following statement contains a magic number: textRect.Width -= (closerRect.Right + 4 - textRect.X);
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabTextRect,The following statement contains a magic number: textRect.X = closerRect.Right + 4;
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabRow,The following statement contains a magic number: switch (this.Alignment) {  				case TabAlignment.Top:  					row = (rect.Y - 2)/rect.Height;  					break;  				case TabAlignment.Bottom:  					row = ((this.Height - rect.Y - 2)/rect.Height) - 1;  					break;  				case TabAlignment.Left:  					row = (rect.X - 2)/rect.Width;  					break;  				case TabAlignment.Right:  					row = ((this.Width - rect.X - 2)/rect.Width) - 1;  					break;  			}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabRow,The following statement contains a magic number: switch (this.Alignment) {  				case TabAlignment.Top:  					row = (rect.Y - 2)/rect.Height;  					break;  				case TabAlignment.Bottom:  					row = ((this.Height - rect.Y - 2)/rect.Height) - 1;  					break;  				case TabAlignment.Left:  					row = (rect.X - 2)/rect.Width;  					break;  				case TabAlignment.Right:  					row = ((this.Width - rect.X - 2)/rect.Width) - 1;  					break;  			}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabRow,The following statement contains a magic number: switch (this.Alignment) {  				case TabAlignment.Top:  					row = (rect.Y - 2)/rect.Height;  					break;  				case TabAlignment.Bottom:  					row = ((this.Height - rect.Y - 2)/rect.Height) - 1;  					break;  				case TabAlignment.Left:  					row = (rect.X - 2)/rect.Width;  					break;  				case TabAlignment.Right:  					row = ((this.Width - rect.X - 2)/rect.Width) - 1;  					break;  			}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabRow,The following statement contains a magic number: switch (this.Alignment) {  				case TabAlignment.Top:  					row = (rect.Y - 2)/rect.Height;  					break;  				case TabAlignment.Bottom:  					row = ((this.Height - rect.Y - 2)/rect.Height) - 1;  					break;  				case TabAlignment.Left:  					row = (rect.X - 2)/rect.Width;  					break;  				case TabAlignment.Right:  					row = ((this.Width - rect.X - 2)/rect.Width) - 1;  					break;  			}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,IsFirstTabInRow,The following statement contains a magic number: this.GetTabRect(index).X == 2
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabImageRect,The following statement contains a magic number: switch (this.Alignment) {  				case TabAlignment.Top:  					rect.Y += 4;  					rect.Height -= 6;  					break;  				case TabAlignment.Bottom:  					rect.Y += 2;  					rect.Height -= 6;  					break;  				case TabAlignment.Left:  					rect.X += 4;  					rect.Width -= 6;  					break;  				case TabAlignment.Right:  					rect.X += 2;  					rect.Width -= 6;  					break;  			}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabImageRect,The following statement contains a magic number: switch (this.Alignment) {  				case TabAlignment.Top:  					rect.Y += 4;  					rect.Height -= 6;  					break;  				case TabAlignment.Bottom:  					rect.Y += 2;  					rect.Height -= 6;  					break;  				case TabAlignment.Left:  					rect.X += 4;  					rect.Width -= 6;  					break;  				case TabAlignment.Right:  					rect.X += 2;  					rect.Width -= 6;  					break;  			}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabImageRect,The following statement contains a magic number: switch (this.Alignment) {  				case TabAlignment.Top:  					rect.Y += 4;  					rect.Height -= 6;  					break;  				case TabAlignment.Bottom:  					rect.Y += 2;  					rect.Height -= 6;  					break;  				case TabAlignment.Left:  					rect.X += 4;  					rect.Width -= 6;  					break;  				case TabAlignment.Right:  					rect.X += 2;  					rect.Width -= 6;  					break;  			}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabImageRect,The following statement contains a magic number: switch (this.Alignment) {  				case TabAlignment.Top:  					rect.Y += 4;  					rect.Height -= 6;  					break;  				case TabAlignment.Bottom:  					rect.Y += 2;  					rect.Height -= 6;  					break;  				case TabAlignment.Left:  					rect.X += 4;  					rect.Width -= 6;  					break;  				case TabAlignment.Right:  					rect.X += 2;  					rect.Width -= 6;  					break;  			}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabImageRect,The following statement contains a magic number: switch (this.Alignment) {  				case TabAlignment.Top:  					rect.Y += 4;  					rect.Height -= 6;  					break;  				case TabAlignment.Bottom:  					rect.Y += 2;  					rect.Height -= 6;  					break;  				case TabAlignment.Left:  					rect.X += 4;  					rect.Width -= 6;  					break;  				case TabAlignment.Right:  					rect.X += 2;  					rect.Width -= 6;  					break;  			}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabImageRect,The following statement contains a magic number: switch (this.Alignment) {  				case TabAlignment.Top:  					rect.Y += 4;  					rect.Height -= 6;  					break;  				case TabAlignment.Bottom:  					rect.Y += 2;  					rect.Height -= 6;  					break;  				case TabAlignment.Left:  					rect.X += 4;  					rect.Width -= 6;  					break;  				case TabAlignment.Right:  					rect.X += 2;  					rect.Width -= 6;  					break;  			}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabImageRect,The following statement contains a magic number: switch (this.Alignment) {  				case TabAlignment.Top:  					rect.Y += 4;  					rect.Height -= 6;  					break;  				case TabAlignment.Bottom:  					rect.Y += 2;  					rect.Height -= 6;  					break;  				case TabAlignment.Left:  					rect.X += 4;  					rect.Width -= 6;  					break;  				case TabAlignment.Right:  					rect.X += 2;  					rect.Width -= 6;  					break;  			}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabImageRect,The following statement contains a magic number: switch (this.Alignment) {  				case TabAlignment.Top:  					rect.Y += 4;  					rect.Height -= 6;  					break;  				case TabAlignment.Bottom:  					rect.Y += 2;  					rect.Height -= 6;  					break;  				case TabAlignment.Left:  					rect.X += 4;  					rect.Width -= 6;  					break;  				case TabAlignment.Right:  					rect.X += 2;  					rect.Width -= 6;  					break;  			}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabImageRect,The following statement contains a magic number: imageRect = new Rectangle((int)rect.X' (int)rect.Y + (int)Math.Floor((double)((int)rect.Height - 16)/2)' 16' 16);
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabImageRect,The following statement contains a magic number: imageRect = new Rectangle((int)rect.X' (int)rect.Y + (int)Math.Floor((double)((int)rect.Height - 16)/2)' 16' 16);
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabImageRect,The following statement contains a magic number: imageRect = new Rectangle((int)rect.X' (int)rect.Y + (int)Math.Floor((double)((int)rect.Height - 16)/2)' 16' 16);
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabImageRect,The following statement contains a magic number: imageRect = new Rectangle((int)rect.X' (int)rect.Y + (int)Math.Floor((double)((int)rect.Height - 16)/2)' 16' 16);
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabImageRect,The following statement contains a magic number: imageRect.X += 4;
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabCloserRect,The following statement contains a magic number: switch (this.Alignment) {  					case TabAlignment.Top:  						rect.Y += 4;  						rect.Height -= 6;  						break;  					case TabAlignment.Bottom:  						rect.Y += 2;  						rect.Height -= 6;  						break;  					case TabAlignment.Left:  						rect.X += 4;  						rect.Width -= 6;  						break;  					case TabAlignment.Right:  						rect.X += 2;  						rect.Width -= 6;  						break;  				}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabCloserRect,The following statement contains a magic number: switch (this.Alignment) {  					case TabAlignment.Top:  						rect.Y += 4;  						rect.Height -= 6;  						break;  					case TabAlignment.Bottom:  						rect.Y += 2;  						rect.Height -= 6;  						break;  					case TabAlignment.Left:  						rect.X += 4;  						rect.Width -= 6;  						break;  					case TabAlignment.Right:  						rect.X += 2;  						rect.Width -= 6;  						break;  				}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabCloserRect,The following statement contains a magic number: switch (this.Alignment) {  					case TabAlignment.Top:  						rect.Y += 4;  						rect.Height -= 6;  						break;  					case TabAlignment.Bottom:  						rect.Y += 2;  						rect.Height -= 6;  						break;  					case TabAlignment.Left:  						rect.X += 4;  						rect.Width -= 6;  						break;  					case TabAlignment.Right:  						rect.X += 2;  						rect.Width -= 6;  						break;  				}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabCloserRect,The following statement contains a magic number: switch (this.Alignment) {  					case TabAlignment.Top:  						rect.Y += 4;  						rect.Height -= 6;  						break;  					case TabAlignment.Bottom:  						rect.Y += 2;  						rect.Height -= 6;  						break;  					case TabAlignment.Left:  						rect.X += 4;  						rect.Width -= 6;  						break;  					case TabAlignment.Right:  						rect.X += 2;  						rect.Width -= 6;  						break;  				}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabCloserRect,The following statement contains a magic number: switch (this.Alignment) {  					case TabAlignment.Top:  						rect.Y += 4;  						rect.Height -= 6;  						break;  					case TabAlignment.Bottom:  						rect.Y += 2;  						rect.Height -= 6;  						break;  					case TabAlignment.Left:  						rect.X += 4;  						rect.Width -= 6;  						break;  					case TabAlignment.Right:  						rect.X += 2;  						rect.Width -= 6;  						break;  				}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabCloserRect,The following statement contains a magic number: switch (this.Alignment) {  					case TabAlignment.Top:  						rect.Y += 4;  						rect.Height -= 6;  						break;  					case TabAlignment.Bottom:  						rect.Y += 2;  						rect.Height -= 6;  						break;  					case TabAlignment.Left:  						rect.X += 4;  						rect.Width -= 6;  						break;  					case TabAlignment.Right:  						rect.X += 2;  						rect.Width -= 6;  						break;  				}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabCloserRect,The following statement contains a magic number: switch (this.Alignment) {  					case TabAlignment.Top:  						rect.Y += 4;  						rect.Height -= 6;  						break;  					case TabAlignment.Bottom:  						rect.Y += 2;  						rect.Height -= 6;  						break;  					case TabAlignment.Left:  						rect.X += 4;  						rect.Width -= 6;  						break;  					case TabAlignment.Right:  						rect.X += 2;  						rect.Width -= 6;  						break;  				}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabCloserRect,The following statement contains a magic number: switch (this.Alignment) {  					case TabAlignment.Top:  						rect.Y += 4;  						rect.Height -= 6;  						break;  					case TabAlignment.Bottom:  						rect.Y += 2;  						rect.Height -= 6;  						break;  					case TabAlignment.Left:  						rect.X += 4;  						rect.Width -= 6;  						break;  					case TabAlignment.Right:  						rect.X += 2;  						rect.Width -= 6;  						break;  				}
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabCloserRect,The following statement contains a magic number: closerRect = new Rectangle((int)rect.Left' (int)rect.Y + (int)Math.Floor((double)((int)rect.Height - 6)/2)' 6' 6);
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabCloserRect,The following statement contains a magic number: closerRect = new Rectangle((int)rect.Left' (int)rect.Y + (int)Math.Floor((double)((int)rect.Height - 6)/2)' 6' 6);
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabCloserRect,The following statement contains a magic number: closerRect = new Rectangle((int)rect.Left' (int)rect.Y + (int)Math.Floor((double)((int)rect.Height - 6)/2)' 6' 6);
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabCloserRect,The following statement contains a magic number: closerRect = new Rectangle((int)rect.Left' (int)rect.Y + (int)Math.Floor((double)((int)rect.Height - 6)/2)' 6' 6);
Magic Number,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabCloserRect,The following statement contains a magic number: closerRect.X += 4;
Magic Number,Altman.CustomControl,NativeMethods,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\NativeMethods.cs,HiWord,The following statement contains a magic number: return (dWord.ToInt32() >> 16);
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,TabStyleProvider,The following statement contains a magic number: this.Padding = new Point(6'3);
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,TabStyleProvider,The following statement contains a magic number: this.Padding = new Point(6'3);
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetTabRect,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					tabBounds.Height += 2;  					break;  				case TabAlignment.Bottom:  					tabBounds.Height += 2;  					tabBounds.Y -= 2;  					break;  				case TabAlignment.Left:  					tabBounds.Width += 2;  					break;  				case TabAlignment.Right:  					tabBounds.X -= 2;  					tabBounds.Width += 2;  					break;  			}
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetTabRect,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					tabBounds.Height += 2;  					break;  				case TabAlignment.Bottom:  					tabBounds.Height += 2;  					tabBounds.Y -= 2;  					break;  				case TabAlignment.Left:  					tabBounds.Width += 2;  					break;  				case TabAlignment.Right:  					tabBounds.X -= 2;  					tabBounds.Width += 2;  					break;  			}
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetTabRect,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					tabBounds.Height += 2;  					break;  				case TabAlignment.Bottom:  					tabBounds.Height += 2;  					tabBounds.Y -= 2;  					break;  				case TabAlignment.Left:  					tabBounds.Width += 2;  					break;  				case TabAlignment.Right:  					tabBounds.X -= 2;  					tabBounds.Width += 2;  					break;  			}
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetTabRect,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					tabBounds.Height += 2;  					break;  				case TabAlignment.Bottom:  					tabBounds.Height += 2;  					tabBounds.Y -= 2;  					break;  				case TabAlignment.Left:  					tabBounds.Width += 2;  					break;  				case TabAlignment.Right:  					tabBounds.X -= 2;  					tabBounds.Width += 2;  					break;  			}
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetTabRect,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					tabBounds.Height += 2;  					break;  				case TabAlignment.Bottom:  					tabBounds.Height += 2;  					tabBounds.Y -= 2;  					break;  				case TabAlignment.Left:  					tabBounds.Width += 2;  					break;  				case TabAlignment.Right:  					tabBounds.X -= 2;  					tabBounds.Width += 2;  					break;  			}
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetTabRect,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					tabBounds.Height += 2;  					break;  				case TabAlignment.Bottom:  					tabBounds.Height += 2;  					tabBounds.Y -= 2;  					break;  				case TabAlignment.Left:  					tabBounds.Width += 2;  					break;  				case TabAlignment.Right:  					tabBounds.X -= 2;  					tabBounds.Width += 2;  					break;  			}
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetTabBackgroundBrush,The following statement contains a magic number: Color dark = Color.FromArgb(207' 207' 207);
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetTabBackgroundBrush,The following statement contains a magic number: Color dark = Color.FromArgb(207' 207' 207);
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetTabBackgroundBrush,The following statement contains a magic number: Color dark = Color.FromArgb(207' 207' 207);
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetTabBackgroundBrush,The following statement contains a magic number: Color light = Color.FromArgb(242' 242' 242);
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetTabBackgroundBrush,The following statement contains a magic number: Color light = Color.FromArgb(242' 242' 242);
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetTabBackgroundBrush,The following statement contains a magic number: Color light = Color.FromArgb(242' 242' 242);
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetTabBackgroundBrush,The following statement contains a magic number: tabBounds.Inflate(3'3);
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetTabBackgroundBrush,The following statement contains a magic number: tabBounds.Inflate(3'3);
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,DrawTabFocusIndicator,The following statement contains a magic number: switch (this._TabControl.Alignment) {  					case TabAlignment.Top:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Y' (int)pathRect.Width' 4);  						focusBrush = new LinearGradientBrush(focusRect'this._FocusColor' SystemColors.Window' LinearGradientMode.Vertical);  						break;  					case TabAlignment.Bottom:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Bottom - 4' (int)pathRect.Width' 4);  						focusBrush = new LinearGradientBrush(focusRect' SystemColors.ControlLight' this._FocusColor' LinearGradientMode.Vertical);  						break;  					case TabAlignment.Left:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Y' 4' (int)pathRect.Height);  						focusBrush = new LinearGradientBrush(focusRect' this._FocusColor' SystemColors.ControlLight' LinearGradientMode.Horizontal);  						break;  					case TabAlignment.Right:  						focusRect = new Rectangle((int)pathRect.Right - 4' (int)pathRect.Y' 4' (int)pathRect.Height);  						focusBrush = new LinearGradientBrush(focusRect' SystemColors.ControlLight' this._FocusColor' LinearGradientMode.Horizontal);  						break;  				}
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,DrawTabFocusIndicator,The following statement contains a magic number: switch (this._TabControl.Alignment) {  					case TabAlignment.Top:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Y' (int)pathRect.Width' 4);  						focusBrush = new LinearGradientBrush(focusRect'this._FocusColor' SystemColors.Window' LinearGradientMode.Vertical);  						break;  					case TabAlignment.Bottom:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Bottom - 4' (int)pathRect.Width' 4);  						focusBrush = new LinearGradientBrush(focusRect' SystemColors.ControlLight' this._FocusColor' LinearGradientMode.Vertical);  						break;  					case TabAlignment.Left:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Y' 4' (int)pathRect.Height);  						focusBrush = new LinearGradientBrush(focusRect' this._FocusColor' SystemColors.ControlLight' LinearGradientMode.Horizontal);  						break;  					case TabAlignment.Right:  						focusRect = new Rectangle((int)pathRect.Right - 4' (int)pathRect.Y' 4' (int)pathRect.Height);  						focusBrush = new LinearGradientBrush(focusRect' SystemColors.ControlLight' this._FocusColor' LinearGradientMode.Horizontal);  						break;  				}
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,DrawTabFocusIndicator,The following statement contains a magic number: switch (this._TabControl.Alignment) {  					case TabAlignment.Top:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Y' (int)pathRect.Width' 4);  						focusBrush = new LinearGradientBrush(focusRect'this._FocusColor' SystemColors.Window' LinearGradientMode.Vertical);  						break;  					case TabAlignment.Bottom:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Bottom - 4' (int)pathRect.Width' 4);  						focusBrush = new LinearGradientBrush(focusRect' SystemColors.ControlLight' this._FocusColor' LinearGradientMode.Vertical);  						break;  					case TabAlignment.Left:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Y' 4' (int)pathRect.Height);  						focusBrush = new LinearGradientBrush(focusRect' this._FocusColor' SystemColors.ControlLight' LinearGradientMode.Horizontal);  						break;  					case TabAlignment.Right:  						focusRect = new Rectangle((int)pathRect.Right - 4' (int)pathRect.Y' 4' (int)pathRect.Height);  						focusBrush = new LinearGradientBrush(focusRect' SystemColors.ControlLight' this._FocusColor' LinearGradientMode.Horizontal);  						break;  				}
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,DrawTabFocusIndicator,The following statement contains a magic number: switch (this._TabControl.Alignment) {  					case TabAlignment.Top:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Y' (int)pathRect.Width' 4);  						focusBrush = new LinearGradientBrush(focusRect'this._FocusColor' SystemColors.Window' LinearGradientMode.Vertical);  						break;  					case TabAlignment.Bottom:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Bottom - 4' (int)pathRect.Width' 4);  						focusBrush = new LinearGradientBrush(focusRect' SystemColors.ControlLight' this._FocusColor' LinearGradientMode.Vertical);  						break;  					case TabAlignment.Left:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Y' 4' (int)pathRect.Height);  						focusBrush = new LinearGradientBrush(focusRect' this._FocusColor' SystemColors.ControlLight' LinearGradientMode.Horizontal);  						break;  					case TabAlignment.Right:  						focusRect = new Rectangle((int)pathRect.Right - 4' (int)pathRect.Y' 4' (int)pathRect.Height);  						focusBrush = new LinearGradientBrush(focusRect' SystemColors.ControlLight' this._FocusColor' LinearGradientMode.Horizontal);  						break;  				}
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,DrawTabFocusIndicator,The following statement contains a magic number: switch (this._TabControl.Alignment) {  					case TabAlignment.Top:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Y' (int)pathRect.Width' 4);  						focusBrush = new LinearGradientBrush(focusRect'this._FocusColor' SystemColors.Window' LinearGradientMode.Vertical);  						break;  					case TabAlignment.Bottom:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Bottom - 4' (int)pathRect.Width' 4);  						focusBrush = new LinearGradientBrush(focusRect' SystemColors.ControlLight' this._FocusColor' LinearGradientMode.Vertical);  						break;  					case TabAlignment.Left:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Y' 4' (int)pathRect.Height);  						focusBrush = new LinearGradientBrush(focusRect' this._FocusColor' SystemColors.ControlLight' LinearGradientMode.Horizontal);  						break;  					case TabAlignment.Right:  						focusRect = new Rectangle((int)pathRect.Right - 4' (int)pathRect.Y' 4' (int)pathRect.Height);  						focusBrush = new LinearGradientBrush(focusRect' SystemColors.ControlLight' this._FocusColor' LinearGradientMode.Horizontal);  						break;  				}
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,DrawTabFocusIndicator,The following statement contains a magic number: switch (this._TabControl.Alignment) {  					case TabAlignment.Top:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Y' (int)pathRect.Width' 4);  						focusBrush = new LinearGradientBrush(focusRect'this._FocusColor' SystemColors.Window' LinearGradientMode.Vertical);  						break;  					case TabAlignment.Bottom:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Bottom - 4' (int)pathRect.Width' 4);  						focusBrush = new LinearGradientBrush(focusRect' SystemColors.ControlLight' this._FocusColor' LinearGradientMode.Vertical);  						break;  					case TabAlignment.Left:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Y' 4' (int)pathRect.Height);  						focusBrush = new LinearGradientBrush(focusRect' this._FocusColor' SystemColors.ControlLight' LinearGradientMode.Horizontal);  						break;  					case TabAlignment.Right:  						focusRect = new Rectangle((int)pathRect.Right - 4' (int)pathRect.Y' 4' (int)pathRect.Height);  						focusBrush = new LinearGradientBrush(focusRect' SystemColors.ControlLight' this._FocusColor' LinearGradientMode.Horizontal);  						break;  				}
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetBackgroundBlend,The following statement contains a magic number: float[] relativeIntensities = new float[]{0f' 0.7f' 1f};
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetBackgroundBlend,The following statement contains a magic number: float[] relativePositions = new float[]{0f' 0.6f' 1f};
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetBackgroundBlend,The following statement contains a magic number: relativeIntensities = new float[]{0f' 0.5f' 1f' 1f};
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetBackgroundBlend,The following statement contains a magic number: relativePositions = new float[]{0f' 0.5f' 0.51f' 1f};
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetBackgroundBlend,The following statement contains a magic number: relativePositions = new float[]{0f' 0.5f' 0.51f' 1f};
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetPageBackgroundBrush,The following statement contains a magic number: Color light = Color.FromArgb(242' 242' 242);
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetPageBackgroundBrush,The following statement contains a magic number: Color light = Color.FromArgb(242' 242' 242);
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetPageBackgroundBrush,The following statement contains a magic number: Color light = Color.FromArgb(242' 242' 242);
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetPageBackgroundBrush,The following statement contains a magic number: light = Color.FromArgb(207' 207' 207);
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetPageBackgroundBrush,The following statement contains a magic number: light = Color.FromArgb(207' 207' 207);
Magic Number,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetPageBackgroundBrush,The following statement contains a magic number: light = Color.FromArgb(207' 207' 207);
Magic Number,Altman.CustomControl,ThemedColors,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\ThemedColors.cs,ThemedColors,The following statement contains a magic number: ThemedColors._toolBorder = new Color[] {Color.FromArgb(127' 157' 185)' Color.FromArgb(164' 185' 127)' Color.FromArgb(165' 172' 178)' Color.FromArgb(132' 130' 132)};
Magic Number,Altman.CustomControl,ThemedColors,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\ThemedColors.cs,ThemedColors,The following statement contains a magic number: ThemedColors._toolBorder = new Color[] {Color.FromArgb(127' 157' 185)' Color.FromArgb(164' 185' 127)' Color.FromArgb(165' 172' 178)' Color.FromArgb(132' 130' 132)};
Magic Number,Altman.CustomControl,ThemedColors,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\ThemedColors.cs,ThemedColors,The following statement contains a magic number: ThemedColors._toolBorder = new Color[] {Color.FromArgb(127' 157' 185)' Color.FromArgb(164' 185' 127)' Color.FromArgb(165' 172' 178)' Color.FromArgb(132' 130' 132)};
Magic Number,Altman.CustomControl,ThemedColors,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\ThemedColors.cs,ThemedColors,The following statement contains a magic number: ThemedColors._toolBorder = new Color[] {Color.FromArgb(127' 157' 185)' Color.FromArgb(164' 185' 127)' Color.FromArgb(165' 172' 178)' Color.FromArgb(132' 130' 132)};
Magic Number,Altman.CustomControl,ThemedColors,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\ThemedColors.cs,ThemedColors,The following statement contains a magic number: ThemedColors._toolBorder = new Color[] {Color.FromArgb(127' 157' 185)' Color.FromArgb(164' 185' 127)' Color.FromArgb(165' 172' 178)' Color.FromArgb(132' 130' 132)};
Magic Number,Altman.CustomControl,ThemedColors,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\ThemedColors.cs,ThemedColors,The following statement contains a magic number: ThemedColors._toolBorder = new Color[] {Color.FromArgb(127' 157' 185)' Color.FromArgb(164' 185' 127)' Color.FromArgb(165' 172' 178)' Color.FromArgb(132' 130' 132)};
Magic Number,Altman.CustomControl,ThemedColors,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\ThemedColors.cs,ThemedColors,The following statement contains a magic number: ThemedColors._toolBorder = new Color[] {Color.FromArgb(127' 157' 185)' Color.FromArgb(164' 185' 127)' Color.FromArgb(165' 172' 178)' Color.FromArgb(132' 130' 132)};
Magic Number,Altman.CustomControl,ThemedColors,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\ThemedColors.cs,ThemedColors,The following statement contains a magic number: ThemedColors._toolBorder = new Color[] {Color.FromArgb(127' 157' 185)' Color.FromArgb(164' 185' 127)' Color.FromArgb(165' 172' 178)' Color.FromArgb(132' 130' 132)};
Magic Number,Altman.CustomControl,ThemedColors,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\ThemedColors.cs,ThemedColors,The following statement contains a magic number: ThemedColors._toolBorder = new Color[] {Color.FromArgb(127' 157' 185)' Color.FromArgb(164' 185' 127)' Color.FromArgb(165' 172' 178)' Color.FromArgb(132' 130' 132)};
Magic Number,Altman.CustomControl,ThemedColors,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\ThemedColors.cs,ThemedColors,The following statement contains a magic number: ThemedColors._toolBorder = new Color[] {Color.FromArgb(127' 157' 185)' Color.FromArgb(164' 185' 127)' Color.FromArgb(165' 172' 178)' Color.FromArgb(132' 130' 132)};
Magic Number,Altman.CustomControl,ThemedColors,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\ThemedColors.cs,ThemedColors,The following statement contains a magic number: ThemedColors._toolBorder = new Color[] {Color.FromArgb(127' 157' 185)' Color.FromArgb(164' 185' 127)' Color.FromArgb(165' 172' 178)' Color.FromArgb(132' 130' 132)};
Magic Number,Altman.CustomControl,ThemedColors,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\ThemedColors.cs,ThemedColors,The following statement contains a magic number: ThemedColors._toolBorder = new Color[] {Color.FromArgb(127' 157' 185)' Color.FromArgb(164' 185' 127)' Color.FromArgb(165' 172' 178)' Color.FromArgb(132' 130' 132)};
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,TabStyleAngledProvider,The following statement contains a magic number: this._Overlap = 7;
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,TabStyleAngledProvider,The following statement contains a magic number: this._Radius = 10;
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,TabStyleAngledProvider,The following statement contains a magic number: this.Padding = new Point(10' 3);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,TabStyleAngledProvider,The following statement contains a magic number: this.Padding = new Point(10' 3);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + this._Radius - 2' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddLine(tabBounds.Right - this._Radius + 2' tabBounds.Y + 2' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right - this._Radius + 2' tabBounds.Bottom - 2);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddLine(tabBounds.X + this._Radius - 2' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 2' tabBounds.Bottom - this._Radius + 2);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + this._Radius - 2' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + this._Radius - 2);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddLine(tabBounds.Right - 2' tabBounds.Bottom - this._Radius + 2' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + this._Radius - 2' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddLine(tabBounds.Right - this._Radius + 2' tabBounds.Y + 2' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right - this._Radius + 2' tabBounds.Bottom - 2);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddLine(tabBounds.X + this._Radius - 2' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 2' tabBounds.Bottom - this._Radius + 2);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + this._Radius - 2' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + this._Radius - 2);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddLine(tabBounds.Right - 2' tabBounds.Bottom - this._Radius + 2' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + this._Radius - 2' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddLine(tabBounds.Right - this._Radius + 2' tabBounds.Y + 2' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right - this._Radius + 2' tabBounds.Bottom - 2);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddLine(tabBounds.X + this._Radius - 2' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 2' tabBounds.Bottom - this._Radius + 2);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + this._Radius - 2' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + this._Radius - 2);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddLine(tabBounds.Right - 2' tabBounds.Bottom - this._Radius + 2' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + this._Radius - 2' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddLine(tabBounds.Right - this._Radius + 2' tabBounds.Y + 2' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right - this._Radius + 2' tabBounds.Bottom - 2);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddLine(tabBounds.X + this._Radius - 2' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 2' tabBounds.Bottom - this._Radius + 2);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + this._Radius - 2' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + this._Radius - 2);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddLine(tabBounds.Right - 2' tabBounds.Bottom - this._Radius + 2' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + this._Radius - 2' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddLine(tabBounds.Right - this._Radius + 2' tabBounds.Y + 2' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right - this._Radius + 2' tabBounds.Bottom - 2);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddLine(tabBounds.X + this._Radius - 2' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 2' tabBounds.Bottom - this._Radius + 2);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + this._Radius - 2' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + this._Radius - 2);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddLine(tabBounds.Right - 2' tabBounds.Bottom - this._Radius + 2' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + this._Radius - 2' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddLine(tabBounds.Right - this._Radius + 2' tabBounds.Y + 2' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right - this._Radius + 2' tabBounds.Bottom - 2);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddLine(tabBounds.X + this._Radius - 2' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 2' tabBounds.Bottom - this._Radius + 2);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + this._Radius - 2' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + this._Radius - 2);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddLine(tabBounds.Right - 2' tabBounds.Bottom - this._Radius + 2' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + this._Radius - 2' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddLine(tabBounds.Right - this._Radius + 2' tabBounds.Y + 2' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right - this._Radius + 2' tabBounds.Bottom - 2);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddLine(tabBounds.X + this._Radius - 2' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 2' tabBounds.Bottom - this._Radius + 2);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + this._Radius - 2' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + this._Radius - 2);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddLine(tabBounds.Right - 2' tabBounds.Bottom - this._Radius + 2' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + this._Radius - 2' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddLine(tabBounds.Right - this._Radius + 2' tabBounds.Y + 2' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right - this._Radius + 2' tabBounds.Bottom - 2);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddLine(tabBounds.X + this._Radius - 2' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 2' tabBounds.Bottom - this._Radius + 2);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + this._Radius - 2' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + this._Radius - 2);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddLine(tabBounds.Right - 2' tabBounds.Bottom - this._Radius + 2' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + this._Radius - 2' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddLine(tabBounds.Right - this._Radius + 2' tabBounds.Y + 2' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right - this._Radius + 2' tabBounds.Bottom - 2);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddLine(tabBounds.X + this._Radius - 2' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 2' tabBounds.Bottom - this._Radius + 2);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + this._Radius - 2' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + this._Radius - 2);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddLine(tabBounds.Right - 2' tabBounds.Bottom - this._Radius + 2' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + this._Radius - 2' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddLine(tabBounds.Right - this._Radius + 2' tabBounds.Y + 2' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right - this._Radius + 2' tabBounds.Bottom - 2);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddLine(tabBounds.X + this._Radius - 2' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 2' tabBounds.Bottom - this._Radius + 2);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + this._Radius - 2' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + this._Radius - 2);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddLine(tabBounds.Right - 2' tabBounds.Bottom - this._Radius + 2' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + this._Radius - 2' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddLine(tabBounds.Right - this._Radius + 2' tabBounds.Y + 2' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right - this._Radius + 2' tabBounds.Bottom - 2);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddLine(tabBounds.X + this._Radius - 2' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 2' tabBounds.Bottom - this._Radius + 2);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + this._Radius - 2' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + this._Radius - 2);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddLine(tabBounds.Right - 2' tabBounds.Bottom - this._Radius + 2' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + this._Radius - 2' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddLine(tabBounds.Right - this._Radius + 2' tabBounds.Y + 2' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right - this._Radius + 2' tabBounds.Bottom - 2);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddLine(tabBounds.X + this._Radius - 2' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 2' tabBounds.Bottom - this._Radius + 2);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + this._Radius - 2' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + this._Radius - 2);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddLine(tabBounds.Right - 2' tabBounds.Bottom - this._Radius + 2' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + this._Radius - 2' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddLine(tabBounds.Right - this._Radius + 2' tabBounds.Y + 2' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right - this._Radius + 2' tabBounds.Bottom - 2);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddLine(tabBounds.X + this._Radius - 2' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 2' tabBounds.Bottom - this._Radius + 2);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + this._Radius - 2' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + this._Radius - 2);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddLine(tabBounds.Right - 2' tabBounds.Bottom - this._Radius + 2' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + this._Radius - 2' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddLine(tabBounds.Right - this._Radius + 2' tabBounds.Y + 2' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right - this._Radius + 2' tabBounds.Bottom - 2);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddLine(tabBounds.X + this._Radius - 2' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 2' tabBounds.Bottom - this._Radius + 2);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + this._Radius - 2' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + this._Radius - 2);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddLine(tabBounds.Right - 2' tabBounds.Bottom - this._Radius + 2' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + this._Radius - 2' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddLine(tabBounds.Right - this._Radius + 2' tabBounds.Y + 2' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right - this._Radius + 2' tabBounds.Bottom - 2);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddLine(tabBounds.X + this._Radius - 2' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 2' tabBounds.Bottom - this._Radius + 2);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + this._Radius - 2' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + this._Radius - 2);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddLine(tabBounds.Right - 2' tabBounds.Bottom - this._Radius + 2' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + this._Radius - 2' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddLine(tabBounds.Right - this._Radius + 2' tabBounds.Y + 2' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right - this._Radius + 2' tabBounds.Bottom - 2);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddLine(tabBounds.X + this._Radius - 2' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 2' tabBounds.Bottom - this._Radius + 2);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + this._Radius - 2' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + this._Radius - 2);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddLine(tabBounds.Right - 2' tabBounds.Bottom - this._Radius + 2' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleChromeProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleChromeProvider.cs,TabStyleChromeProvider,The following statement contains a magic number: this._Overlap = 16;
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleChromeProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleChromeProvider.cs,TabStyleChromeProvider,The following statement contains a magic number: this._Radius = 16;
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleChromeProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleChromeProvider.cs,TabStyleChromeProvider,The following statement contains a magic number: this.Padding = new Point(7' 5);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleChromeProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleChromeProvider.cs,TabStyleChromeProvider,The following statement contains a magic number: this.Padding = new Point(7' 5);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleChromeProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleChromeProvider.cs,AddTabBorder,The following statement contains a magic number: spread = (int)Math.Floor((decimal)tabBounds.Height * 2/3);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleChromeProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleChromeProvider.cs,AddTabBorder,The following statement contains a magic number: spread = (int)Math.Floor((decimal)tabBounds.Height * 2/3);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleChromeProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleChromeProvider.cs,AddTabBorder,The following statement contains a magic number: eigth = (int)Math.Floor((decimal)tabBounds.Height * 1/8);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleChromeProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleChromeProvider.cs,AddTabBorder,The following statement contains a magic number: sixth = (int)Math.Floor((decimal)tabBounds.Height * 1/6);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleChromeProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleChromeProvider.cs,AddTabBorder,The following statement contains a magic number: quarter = (int)Math.Floor((decimal)tabBounds.Height * 1/4);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleChromeProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleChromeProvider.cs,GetCloserButtonPath,The following statement contains a magic number: closerPath.AddEllipse(new Rectangle(closerRect.X - 2' closerRect.Y - 2' closerRect.Width + 4' closerRect.Height + 4));
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleChromeProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleChromeProvider.cs,GetCloserButtonPath,The following statement contains a magic number: closerPath.AddEllipse(new Rectangle(closerRect.X - 2' closerRect.Y - 2' closerRect.Width + 4' closerRect.Height + 4));
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleChromeProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleChromeProvider.cs,GetCloserButtonPath,The following statement contains a magic number: closerPath.AddEllipse(new Rectangle(closerRect.X - 2' closerRect.Y - 2' closerRect.Width + 4' closerRect.Height + 4));
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleChromeProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleChromeProvider.cs,GetCloserButtonPath,The following statement contains a magic number: closerPath.AddEllipse(new Rectangle(closerRect.X - 2' closerRect.Y - 2' closerRect.Width + 4' closerRect.Height + 4));
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleDefaultProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleDefaultProvider.cs,TabStyleDefaultProvider,The following statement contains a magic number: this._Radius = 2;
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,TabStyleIE8Provider,The following statement contains a magic number: this._Radius = 3;
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,TabStyleIE8Provider,The following statement contains a magic number: this.Padding = new Point(6' 5);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,TabStyleIE8Provider,The following statement contains a magic number: this.Padding = new Point(6' 5);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetTabBackgroundBrush,The following statement contains a magic number: Color dark = Color.FromArgb(227' 238' 251);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetTabBackgroundBrush,The following statement contains a magic number: Color dark = Color.FromArgb(227' 238' 251);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetTabBackgroundBrush,The following statement contains a magic number: Color dark = Color.FromArgb(227' 238' 251);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetTabBackgroundBrush,The following statement contains a magic number: Color light = Color.FromArgb(227' 238' 251);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetTabBackgroundBrush,The following statement contains a magic number: Color light = Color.FromArgb(227' 238' 251);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetTabBackgroundBrush,The following statement contains a magic number: Color light = Color.FromArgb(227' 238' 251);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetTabBackgroundBrush,The following statement contains a magic number: dark = Color.FromArgb(196' 222' 251);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetTabBackgroundBrush,The following statement contains a magic number: dark = Color.FromArgb(196' 222' 251);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetTabBackgroundBrush,The following statement contains a magic number: dark = Color.FromArgb(196' 222' 251);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetTabBackgroundBrush,The following statement contains a magic number: tabBounds.Inflate(3'3);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetTabBackgroundBrush,The following statement contains a magic number: tabBounds.Inflate(3'3);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetBackgroundBlend,The following statement contains a magic number: float[] relativeIntensities = new float[]{0f' 0.7f' 1f};
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetBackgroundBlend,The following statement contains a magic number: float[] relativePositions = new float[]{0f' 0.8f' 1f};
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetBackgroundBlend,The following statement contains a magic number: relativeIntensities = new float[]{0f' 0.3f' 1f};
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetBackgroundBlend,The following statement contains a magic number: relativePositions = new float[]{0f' 0.2f' 1f};
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,DrawTabCloser,The following statement contains a magic number: closerPen.Width = 2;
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetCloserButtonPath,The following statement contains a magic number: closerPath.AddLine(closerRect.X - 1' closerRect.Y - 2' closerRect.Right + 1' closerRect.Y - 2);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetCloserButtonPath,The following statement contains a magic number: closerPath.AddLine(closerRect.X - 1' closerRect.Y - 2' closerRect.Right + 1' closerRect.Y - 2);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetCloserButtonPath,The following statement contains a magic number: closerPath.AddLine(closerRect.Right + 2' closerRect.Y - 1' closerRect.Right + 2' closerRect.Bottom + 1);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetCloserButtonPath,The following statement contains a magic number: closerPath.AddLine(closerRect.Right + 2' closerRect.Y - 1' closerRect.Right + 2' closerRect.Bottom + 1);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetCloserButtonPath,The following statement contains a magic number: closerPath.AddLine(closerRect.Right + 1' closerRect.Bottom + 2' closerRect.X - 1' closerRect.Bottom + 2);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetCloserButtonPath,The following statement contains a magic number: closerPath.AddLine(closerRect.Right + 1' closerRect.Bottom + 2' closerRect.X - 1' closerRect.Bottom + 2);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetCloserButtonPath,The following statement contains a magic number: closerPath.AddLine(closerRect.X - 2' closerRect.Bottom + 1' closerRect.X - 2' closerRect.Y - 1);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetCloserButtonPath,The following statement contains a magic number: closerPath.AddLine(closerRect.X - 2' closerRect.Bottom + 1' closerRect.X - 2' closerRect.Y - 1);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetPageBackgroundBrush,The following statement contains a magic number: Color light = Color.FromArgb(227' 238' 251);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetPageBackgroundBrush,The following statement contains a magic number: Color light = Color.FromArgb(227' 238' 251);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetPageBackgroundBrush,The following statement contains a magic number: Color light = Color.FromArgb(227' 238' 251);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,TabStyleRoundedProvider,The following statement contains a magic number: this._Radius = 10;
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,TabStyleRoundedProvider,The following statement contains a magic number: this.Padding = new Point(6' 3);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,TabStyleRoundedProvider,The following statement contains a magic number: this.Padding = new Point(6' 3);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,TabStyleVisualStudioProvider,The following statement contains a magic number: this._Overlap = 7;
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,TabStyleVisualStudioProvider,The following statement contains a magic number: this.Padding = new Point(14' 1);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following statement contains a magic number: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,TabStyleVS2010Provider,The following statement contains a magic number: this._Radius = 3;
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,TabStyleVS2010Provider,The following statement contains a magic number: this._CloserColor = Color.FromArgb(117' 99' 61);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,TabStyleVS2010Provider,The following statement contains a magic number: this._CloserColor = Color.FromArgb(117' 99' 61);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,TabStyleVS2010Provider,The following statement contains a magic number: this._CloserColor = Color.FromArgb(117' 99' 61);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,TabStyleVS2010Provider,The following statement contains a magic number: this._BorderColorHot = Color.FromArgb(155' 167' 183);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,TabStyleVS2010Provider,The following statement contains a magic number: this._BorderColorHot = Color.FromArgb(155' 167' 183);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,TabStyleVS2010Provider,The following statement contains a magic number: this._BorderColorHot = Color.FromArgb(155' 167' 183);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,TabStyleVS2010Provider,The following statement contains a magic number: this.Padding = new Point(6' 5);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,TabStyleVS2010Provider,The following statement contains a magic number: this.Padding = new Point(6' 5);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,GetTabBackgroundBrush,The following statement contains a magic number: dark = Color.FromArgb(229' 195' 101);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,GetTabBackgroundBrush,The following statement contains a magic number: dark = Color.FromArgb(229' 195' 101);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,GetTabBackgroundBrush,The following statement contains a magic number: dark = Color.FromArgb(229' 195' 101);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,GetTabBackgroundBrush,The following statement contains a magic number: tabBounds.Inflate(3'3);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,GetTabBackgroundBrush,The following statement contains a magic number: tabBounds.Inflate(3'3);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,GetBackgroundBlend,The following statement contains a magic number: float[] relativeIntensities = new float[]{0f' 0.5f' 1f' 1f};
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,GetBackgroundBlend,The following statement contains a magic number: float[] relativePositions = new float[]{0f' 0.5f' 0.51f' 1f};
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,GetBackgroundBlend,The following statement contains a magic number: float[] relativePositions = new float[]{0f' 0.5f' 0.51f' 1f};
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,GetPageBackgroundBrush,The following statement contains a magic number: light = Color.FromArgb(229' 195' 101);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,GetPageBackgroundBrush,The following statement contains a magic number: light = Color.FromArgb(229' 195' 101);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,GetPageBackgroundBrush,The following statement contains a magic number: light = Color.FromArgb(229' 195' 101);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,DrawTabCloser,The following statement contains a magic number: closerPen.Width = 2;
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,GetCloserButtonPath,The following statement contains a magic number: closerPath.AddLine(closerRect.X - 1' closerRect.Y - 2' closerRect.Right + 1' closerRect.Y - 2);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,GetCloserButtonPath,The following statement contains a magic number: closerPath.AddLine(closerRect.X - 1' closerRect.Y - 2' closerRect.Right + 1' closerRect.Y - 2);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,GetCloserButtonPath,The following statement contains a magic number: closerPath.AddLine(closerRect.Right + 2' closerRect.Y - 1' closerRect.Right + 2' closerRect.Bottom + 1);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,GetCloserButtonPath,The following statement contains a magic number: closerPath.AddLine(closerRect.Right + 2' closerRect.Y - 1' closerRect.Right + 2' closerRect.Bottom + 1);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,GetCloserButtonPath,The following statement contains a magic number: closerPath.AddLine(closerRect.Right + 1' closerRect.Bottom + 2' closerRect.X - 1' closerRect.Bottom + 2);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,GetCloserButtonPath,The following statement contains a magic number: closerPath.AddLine(closerRect.Right + 1' closerRect.Bottom + 2' closerRect.X - 1' closerRect.Bottom + 2);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,GetCloserButtonPath,The following statement contains a magic number: closerPath.AddLine(closerRect.X - 2' closerRect.Bottom + 1' closerRect.X - 2' closerRect.Y - 1);
Magic Number,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,GetCloserButtonPath,The following statement contains a magic number: closerPath.AddLine(closerRect.X - 2' closerRect.Bottom + 1' closerRect.X - 2' closerRect.Y - 1);
Magic Number,Altman,Program,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\Program.cs,Start,The following statement contains a magic number: Style.Add<DropDownHandler>(null' h =>  			{  				h.Control.Font = new System.Drawing.Font(h.Control.Font.FontFamily' 10.5F' System.Drawing.FontStyle.Regular);  			});
Magic Number,Altman,Program,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\Program.cs,Start,The following statement contains a magic number: Style.Add<ComboBoxHandler>(null' h =>  			{  				h.Control.Font = new System.Drawing.Font(h.Control.Font.FontFamily' 10.5F' System.Drawing.FontStyle.Regular);  			});
Magic Number,Altman,Program,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\Program.cs,Start,The following statement contains a magic number: Style.Add<TextBoxHandler>(null' h =>  			{  				h.Control.Font = new System.Drawing.Font(h.Control.Font.FontFamily' 9.5F' System.Drawing.FontStyle.Regular);  				//h.Control.ImeMode = System.Windows.Forms.ImeMode.Disable;  			});
Duplicate Code,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabTextRect,The method contains a code clone-set at the following line numbers (starting from the method definition): ((40' 59)' (85' 104)' (86' 105)' (107' 126))
Missing Default,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetStringFormat,The following switch statement is missing a default case: switch (this.Alignment) {  				case TabAlignment.Top:  				case TabAlignment.Bottom:  					format = new StringFormat();  					break;  				case TabAlignment.Left:  				case TabAlignment.Right:  					format = new StringFormat(StringFormatFlags.DirectionVertical);  					break;  			}
Missing Default,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabTextRect,The following switch statement is missing a default case: switch (this.Alignment) {  					case TabAlignment.Top:  						textRect.Y += 4;  						textRect.Height -= 6;  						break;  					case TabAlignment.Bottom:  						textRect.Y += 2;  						textRect.Height -= 6;  						break;  					case TabAlignment.Left:  						textRect.X += 4;  						textRect.Width -= 6;  						break;  					case TabAlignment.Right:  						textRect.X += 2;  						textRect.Width -= 6;  						break;  				}
Missing Default,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabRow,The following switch statement is missing a default case: switch (this.Alignment) {  				case TabAlignment.Top:  					row = (rect.Y - 2)/rect.Height;  					break;  				case TabAlignment.Bottom:  					row = ((this.Height - rect.Y - 2)/rect.Height) - 1;  					break;  				case TabAlignment.Left:  					row = (rect.X - 2)/rect.Width;  					break;  				case TabAlignment.Right:  					row = ((this.Width - rect.X - 2)/rect.Width) - 1;  					break;  			}
Missing Default,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,AddPageBorder,The following switch statement is missing a default case: switch (this.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.Right' pageBounds.Y' pageBounds.Right' pageBounds.Y);  					path.AddLine(pageBounds.Right' pageBounds.Y' pageBounds.Right' pageBounds.Bottom);  					path.AddLine(pageBounds.Right' pageBounds.Bottom' pageBounds.X' pageBounds.Bottom);  					path.AddLine(pageBounds.X' pageBounds.Bottom' pageBounds.X' pageBounds.Y);  					path.AddLine(pageBounds.X' pageBounds.Y' tabBounds.X' pageBounds.Y);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.X' pageBounds.Bottom' pageBounds.X' pageBounds.Bottom);  					path.AddLine(pageBounds.X' pageBounds.Bottom' pageBounds.X' pageBounds.Y);  					path.AddLine(pageBounds.X' pageBounds.Y' pageBounds.Right' pageBounds.Y);  					path.AddLine(pageBounds.Right' pageBounds.Y' pageBounds.Right' pageBounds.Bottom);  					path.AddLine(pageBounds.Right' pageBounds.Bottom' tabBounds.Right' pageBounds.Bottom);  					break;  				case TabAlignment.Left:  					path.AddLine(pageBounds.X' tabBounds.Y' pageBounds.X' pageBounds.Y);  					path.AddLine(pageBounds.X' pageBounds.Y' pageBounds.Right' pageBounds.Y);  					path.AddLine(pageBounds.Right' pageBounds.Y' pageBounds.Right' pageBounds.Bottom);  					path.AddLine(pageBounds.Right' pageBounds.Bottom' pageBounds.X' pageBounds.Bottom);  					path.AddLine(pageBounds.X' pageBounds.Bottom' pageBounds.X' tabBounds.Bottom);  					break;  				case TabAlignment.Right:  					path.AddLine(pageBounds.Right' tabBounds.Bottom' pageBounds.Right' pageBounds.Bottom);  					path.AddLine(pageBounds.Right' pageBounds.Bottom' pageBounds.X' pageBounds.Bottom);  					path.AddLine(pageBounds.X' pageBounds.Bottom' pageBounds.X' pageBounds.Y);  					path.AddLine(pageBounds.X' pageBounds.Y' pageBounds.Right' pageBounds.Y);  					path.AddLine(pageBounds.Right' pageBounds.Y' pageBounds.Right' tabBounds.Y);  					break;  			}
Missing Default,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabImageRect,The following switch statement is missing a default case: switch (this.Alignment) {  				case TabAlignment.Top:  					rect.Y += 4;  					rect.Height -= 6;  					break;  				case TabAlignment.Bottom:  					rect.Y += 2;  					rect.Height -= 6;  					break;  				case TabAlignment.Left:  					rect.X += 4;  					rect.Width -= 6;  					break;  				case TabAlignment.Right:  					rect.X += 2;  					rect.Width -= 6;  					break;  			}
Missing Default,Altman.CustomControl,TabControlPlus,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabControlPlus.cs,GetTabCloserRect,The following switch statement is missing a default case: switch (this.Alignment) {  					case TabAlignment.Top:  						rect.Y += 4;  						rect.Height -= 6;  						break;  					case TabAlignment.Bottom:  						rect.Y += 2;  						rect.Height -= 6;  						break;  					case TabAlignment.Left:  						rect.X += 4;  						rect.Width -= 6;  						break;  					case TabAlignment.Right:  						rect.X += 2;  						rect.Width -= 6;  						break;  				}
Missing Default,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetTabRect,The following switch statement is missing a default case: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					tabBounds.Height += 2;  					break;  				case TabAlignment.Bottom:  					tabBounds.Height += 2;  					tabBounds.Y -= 2;  					break;  				case TabAlignment.Left:  					tabBounds.Width += 2;  					break;  				case TabAlignment.Right:  					tabBounds.X -= 2;  					tabBounds.Width += 2;  					break;  			}
Missing Default,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,GetTabBackgroundBrush,The following switch statement is missing a default case: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					if (this._TabControl.SelectedIndex == index) {  						dark = light;  					}  					fillBrush = new LinearGradientBrush(tabBounds' light' dark' LinearGradientMode.Vertical);  					break;  				case TabAlignment.Bottom:  					fillBrush = new LinearGradientBrush(tabBounds' light' dark' LinearGradientMode.Vertical);  					break;  				case TabAlignment.Left:  					fillBrush = new LinearGradientBrush(tabBounds' dark' light' LinearGradientMode.Horizontal);  					break;  				case TabAlignment.Right:  					fillBrush = new LinearGradientBrush(tabBounds' light' dark' LinearGradientMode.Horizontal);  					break;  			}
Missing Default,Altman.CustomControl,TabStyleProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProvider.cs,DrawTabFocusIndicator,The following switch statement is missing a default case: switch (this._TabControl.Alignment) {  					case TabAlignment.Top:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Y' (int)pathRect.Width' 4);  						focusBrush = new LinearGradientBrush(focusRect'this._FocusColor' SystemColors.Window' LinearGradientMode.Vertical);  						break;  					case TabAlignment.Bottom:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Bottom - 4' (int)pathRect.Width' 4);  						focusBrush = new LinearGradientBrush(focusRect' SystemColors.ControlLight' this._FocusColor' LinearGradientMode.Vertical);  						break;  					case TabAlignment.Left:  						focusRect = new Rectangle((int)pathRect.X' (int)pathRect.Y' 4' (int)pathRect.Height);  						focusBrush = new LinearGradientBrush(focusRect' this._FocusColor' SystemColors.ControlLight' LinearGradientMode.Horizontal);  						break;  					case TabAlignment.Right:  						focusRect = new Rectangle((int)pathRect.Right - 4' (int)pathRect.Y' 4' (int)pathRect.Height);  						focusBrush = new LinearGradientBrush(focusRect' SystemColors.ControlLight' this._FocusColor' LinearGradientMode.Horizontal);  						break;  				}
Missing Default,Altman.CustomControl.TabStyleProviders,TabStyleAngledProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleAngledProvider.cs,AddTabBorder,The following switch statement is missing a default case: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + this._Radius - 2' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddLine(tabBounds.Right - this._Radius + 2' tabBounds.Y + 2' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right - this._Radius + 2' tabBounds.Bottom - 2);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddLine(tabBounds.X + this._Radius - 2' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 2' tabBounds.Bottom - this._Radius + 2);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + this._Radius - 2' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + this._Radius - 2);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddLine(tabBounds.Right - 2' tabBounds.Bottom - this._Radius + 2' tabBounds.X' tabBounds.Bottom);  					break;  			}
Missing Default,Altman.CustomControl.TabStyleProviders,TabStyleChromeProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleChromeProvider.cs,AddTabBorder,The following switch statement is missing a default case: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					  					path.AddCurve(new Point[] {  new Point(tabBounds.X' tabBounds.Bottom)  					              		'new Point(tabBounds.X + sixth' tabBounds.Bottom - eigth)  					              		'new Point(tabBounds.X + spread - quarter' tabBounds.Y + eigth)  					              		'new Point(tabBounds.X + spread' tabBounds.Y)});  					path.AddLine(tabBounds.X + spread' tabBounds.Y' tabBounds.Right - spread' tabBounds.Y);  					path.AddCurve(new Point[] {  new Point(tabBounds.Right - spread' tabBounds.Y)  					              		'new Point(tabBounds.Right - spread + quarter' tabBounds.Y + eigth)  					              		'new Point(tabBounds.Right - sixth' tabBounds.Bottom - eigth)  					              		'new Point(tabBounds.Right' tabBounds.Bottom)});  					break;  				case TabAlignment.Bottom:  					path.AddCurve(new Point[] {  new Point(tabBounds.Right' tabBounds.Y)  					              		'new Point(tabBounds.Right - sixth' tabBounds.Y + eigth)  					              		'new Point(tabBounds.Right - spread + quarter' tabBounds.Bottom - eigth)  					              		'new Point(tabBounds.Right - spread' tabBounds.Bottom)});  					path.AddLine(tabBounds.Right - spread' tabBounds.Bottom' tabBounds.X + spread' tabBounds.Bottom);  					path.AddCurve(new Point[] {  new Point(tabBounds.X + spread' tabBounds.Bottom)  					              		'new Point(tabBounds.X + spread - quarter' tabBounds.Bottom - eigth)  					              		'new Point(tabBounds.X + sixth' tabBounds.Y + eigth)  					              		'new Point(tabBounds.X' tabBounds.Y)});  					break;  				case TabAlignment.Left:  					path.AddCurve(new Point[] {  new Point(tabBounds.Right' tabBounds.Bottom)  					              		'new Point(tabBounds.Right - eigth' tabBounds.Bottom - sixth)  					              		'new Point(tabBounds.X + eigth' tabBounds.Bottom - spread + quarter)  					              		'new Point(tabBounds.X' tabBounds.Bottom - spread)});  					path.AddLine(tabBounds.X' tabBounds.Bottom - spread' tabBounds.X 'tabBounds.Y + spread);  					path.AddCurve(new Point[] {  new Point(tabBounds.X' tabBounds.Y + spread)  					              		'new Point(tabBounds.X + eigth' tabBounds.Y + spread - quarter)  					              		'new Point(tabBounds.Right - eigth' tabBounds.Y + sixth)  					              		'new Point(tabBounds.Right' tabBounds.Y)});    					break;  				case TabAlignment.Right:  					path.AddCurve(new Point[] {  new Point(tabBounds.X' tabBounds.Y)  					              		'new Point(tabBounds.X + eigth' tabBounds.Y + sixth)  					              		'new Point(tabBounds.Right - eigth' tabBounds.Y + spread - quarter)  					              		'new Point(tabBounds.Right' tabBounds.Y + spread)});  					path.AddLine(tabBounds.Right' tabBounds.Y + spread' tabBounds.Right' tabBounds.Bottom - spread);  					path.AddCurve(new Point[] {  new Point(tabBounds.Right' tabBounds.Bottom - spread)  					              		'new Point(tabBounds.Right - eigth' tabBounds.Bottom - spread + quarter)  					              		'new Point(tabBounds.X + eigth' tabBounds.Bottom - sixth)  					              		'new Point(tabBounds.X' tabBounds.Bottom)});  					break;  			}
Missing Default,Altman.CustomControl.TabStyleProviders,TabStyleDefaultProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleDefaultProvider.cs,AddTabBorder,The following switch statement is missing a default case: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y);  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom);  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y);  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom);  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Missing Default,Altman.CustomControl.TabStyleProviders,TabStyleDefaultProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleDefaultProvider.cs,GetTabRect,The following switch statement is missing a default case: switch (this._TabControl.Alignment) {  					case TabAlignment.Top:  						tabBounds.Y += 1;  						tabBounds.Height -= 1;  						break;  					case TabAlignment.Bottom:  						tabBounds.Height -= 1;  						break;  					case TabAlignment.Left:  						tabBounds.X += 1;  						tabBounds.Width -= 1;  						break;  					case TabAlignment.Right:  						tabBounds.Width -= 1;  						break;  				}
Missing Default,Altman.CustomControl.TabStyleProviders,TabStyleDefaultProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleDefaultProvider.cs,GetTabRect,The following switch statement is missing a default case: switch (this._TabControl.Alignment) {  					case TabAlignment.Top:  						if (tabBounds.Y > 0){  							tabBounds.Y -= 1;  							tabBounds.Height += 1;  						}  						  						if (firstTabinRow){  							tabBounds.Width += 1;  						} else {  							tabBounds.X -= 1;  							tabBounds.Width += 2;  						}  						break;  					case TabAlignment.Bottom:  						if (tabBounds.Bottom < this._TabControl.Bottom){  							tabBounds.Height += 1;  						}  						if (firstTabinRow){  							tabBounds.Width += 1;  						} else {  							tabBounds.X -= 1;  							tabBounds.Width += 2;  						}  						break;  					case TabAlignment.Left:  						if (tabBounds.X > 0){  							tabBounds.X -= 1;  							tabBounds.Width += 1;  						}    						if (firstTabinRow){  							tabBounds.Height += 1;  						} else {  							tabBounds.Y -= 1;  							tabBounds.Height += 2;  						}  						break;  					case TabAlignment.Right:  						if (tabBounds.Right < this._TabControl.Right){  							tabBounds.Width += 1;  						}  						if (firstTabinRow){  							tabBounds.Height += 1;  						} else {  							tabBounds.Y -= 1;  							tabBounds.Height += 2;  						}  						break;  				}
Missing Default,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetTabRect,The following switch statement is missing a default case: switch (this._TabControl.Alignment) {  					case TabAlignment.Top:  						tabBounds.Y += 1;  						tabBounds.Height -= 1;  						break;  					case TabAlignment.Bottom:  						tabBounds.Height -= 1;  						break;  					case TabAlignment.Left:  						tabBounds.X += 1;  						tabBounds.Width -= 1;  						break;  					case TabAlignment.Right:  						tabBounds.Width -= 1;  						break;  				}
Missing Default,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetTabRect,The following switch statement is missing a default case: switch (this._TabControl.Alignment) {  					case TabAlignment.Top:  						tabBounds.Y -= 1;  						tabBounds.Height += 1;  						  						if (firstTabinRow){  							tabBounds.Width += 1;  						} else {  							tabBounds.X -= 1;  							tabBounds.Width += 2;  						}  						break;  					case TabAlignment.Bottom:  						tabBounds.Height += 1;    						if (firstTabinRow){  							tabBounds.Width += 1;  						} else {  							tabBounds.X -= 1;  							tabBounds.Width += 2;  						}  						break;  					case TabAlignment.Left:  						tabBounds.X -= 1;  						tabBounds.Width += 1;    						if (firstTabinRow){  							tabBounds.Height += 1;  						} else {  							tabBounds.Y -= 1;  							tabBounds.Height += 2;  						}  						break;  					case TabAlignment.Right:  						tabBounds.Width += 1;  						if (firstTabinRow){  							tabBounds.Height += 1;  						} else {  							tabBounds.Y -= 1;  							tabBounds.Height += 2;  						}  						break;  				}
Missing Default,Altman.CustomControl.TabStyleProviders,TabStyleIE8Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleIE8Provider.cs,GetTabBackgroundBrush,The following switch statement is missing a default case: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					fillBrush = new LinearGradientBrush(tabBounds' dark' light' LinearGradientMode.Vertical);  					break;  				case TabAlignment.Bottom:  					fillBrush = new LinearGradientBrush(tabBounds' light' dark' LinearGradientMode.Vertical);  					break;  				case TabAlignment.Left:  					fillBrush = new LinearGradientBrush(tabBounds' dark' light' LinearGradientMode.Horizontal);  					break;  				case TabAlignment.Right:  					fillBrush = new LinearGradientBrush(tabBounds' light' dark' LinearGradientMode.Horizontal);  					break;  			}
Missing Default,Altman.CustomControl.TabStyleProviders,TabStyleRoundedProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleRoundedProvider.cs,AddTabBorder,The following switch statement is missing a default case: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + this._Radius' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - this._Radius' tabBounds.X' tabBounds.Y + this._Radius);  					path.AddArc(tabBounds.X' tabBounds.Y' this._Radius * 2' this._Radius * 2' 180' 90);  					path.AddLine(tabBounds.X + this._Radius' tabBounds.Y' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - this._Radius' tabBounds.Y);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Y' this._Radius * 2' this._Radius * 2' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + this._Radius' tabBounds.Right' tabBounds.Bottom - this._Radius);  					path.AddArc(tabBounds.Right - this._Radius * 2' tabBounds.Bottom - this._Radius * 2' this._Radius * 2' this._Radius * 2' 0' 90);  					path.AddLine(tabBounds.Right - this._Radius' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Missing Default,Altman.CustomControl.TabStyleProviders,TabStyleVisualStudioProvider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVisualStudioProvider.cs,AddTabBorder,The following switch statement is missing a default case: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					path.AddLine(tabBounds.X' tabBounds.Bottom' tabBounds.X + tabBounds.Height - 4' tabBounds.Y + 2);  					path.AddLine(tabBounds.X + tabBounds.Height' tabBounds.Y' tabBounds.Right - 3' tabBounds.Y);  					path.AddArc(tabBounds.Right - 6' tabBounds.Y' 6' 6' 270' 90);  					path.AddLine(tabBounds.Right' tabBounds.Y + 3' tabBounds.Right' tabBounds.Bottom);  					break;  				case TabAlignment.Bottom:  					path.AddLine(tabBounds.Right' tabBounds.Y' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X + tabBounds.Height' tabBounds.Bottom);  					path.AddLine(tabBounds.X + tabBounds.Height - 4' tabBounds.Bottom - 2' tabBounds.X' tabBounds.Y);  					break;  				case TabAlignment.Left:  					path.AddLine(tabBounds.Right' tabBounds.Bottom' tabBounds.X + 3' tabBounds.Bottom);  					path.AddArc(tabBounds.X' tabBounds.Bottom - 6' 6' 6' 90' 90);  					path.AddLine(tabBounds.X' tabBounds.Bottom - 3' tabBounds.X' tabBounds.Y + tabBounds.Width);  					path.AddLine(tabBounds.X + 2' tabBounds.Y + tabBounds.Width - 4' tabBounds.Right' tabBounds.Y);  					break;  				case TabAlignment.Right:  					path.AddLine(tabBounds.X' tabBounds.Y' tabBounds.Right - 2' tabBounds.Y + tabBounds.Width - 4);  					path.AddLine(tabBounds.Right' tabBounds.Y + tabBounds.Width' tabBounds.Right' tabBounds.Bottom - 3);  					path.AddArc(tabBounds.Right - 6' tabBounds.Bottom - 6' 6' 6' 0' 90);  					path.AddLine(tabBounds.Right - 3' tabBounds.Bottom' tabBounds.X' tabBounds.Bottom);  					break;  			}
Missing Default,Altman.CustomControl.TabStyleProviders,TabStyleVS2010Provider,D:\research\architectureSmells\repos\keepwn_Altman\Source\Altman.WinForm\CustomControl\TabStyleProviders\TabStyleVS2010Provider.cs,GetTabBackgroundBrush,The following switch statement is missing a default case: switch (this._TabControl.Alignment) {  				case TabAlignment.Top:  					fillBrush = new LinearGradientBrush(tabBounds' light' dark' LinearGradientMode.Vertical);  					break;  				case TabAlignment.Bottom:  					fillBrush = new LinearGradientBrush(tabBounds' dark' light' LinearGradientMode.Vertical);  					break;  				case TabAlignment.Left:  					fillBrush = new LinearGradientBrush(tabBounds' light' dark' LinearGradientMode.Horizontal);  					break;  				case TabAlignment.Right:  					fillBrush = new LinearGradientBrush(tabBounds' dark' light' LinearGradientMode.Horizontal);  					break;  			}
