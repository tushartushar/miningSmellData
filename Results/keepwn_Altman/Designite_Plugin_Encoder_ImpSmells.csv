Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Plugin_Encoder,EncoderService,F:\newReposMay17\keepwn_Altman\Source\Plugin_Encoder\EncoderService.cs,FromUrlEncode,The length of the statement  "		if (Regex.IsMatch (HttpUtility.UrlDecode (str' Encoding.GetEncoding ("iso-8859-1"))' @"^(?:[\x00-\x7f]|[\xe0-\xef][\x80-\xbf]{2})+$")) { " is 136.
Magic Number,Plugin_Encoder.Interface,PanelEncoder,F:\newReposMay17\keepwn_Altman\Source\Plugin_Encoder\Interface\PanelEncoder.cs,Init,The following statement contains a magic number: _textAreaInput.Font = new Font (FontFamilies.Monospace' 10);  
Magic Number,Plugin_Encoder.Interface,PanelEncoder,F:\newReposMay17\keepwn_Altman\Source\Plugin_Encoder\Interface\PanelEncoder.cs,Init,The following statement contains a magic number: _dropDownServices = new DropDown {  	Width = 200  };  
Magic Number,Plugin_Encoder.Interface,PanelEncoder,F:\newReposMay17\keepwn_Altman\Source\Plugin_Encoder\Interface\PanelEncoder.cs,Init,The following statement contains a magic number: _textAreaOutput.Font = new Font (FontFamilies.Monospace' 10);  
Magic Number,Plugin_Encoder,EncoderService,F:\newReposMay17\keepwn_Altman\Source\Plugin_Encoder\EncoderService.cs,ToUrlEncodeAll,The following statement contains a magic number: foreach (var b in bytes) {  	sb.Append ("%" + Convert.ToString (b' 16));  }  
Magic Number,Plugin_Encoder,EncoderService,F:\newReposMay17\keepwn_Altman\Source\Plugin_Encoder\EncoderService.cs,ToUrlEncodeAll,The following statement contains a magic number: sb.Append ("%" + Convert.ToString (b' 16));  
Magic Number,Plugin_Encoder,EncoderService,F:\newReposMay17\keepwn_Altman\Source\Plugin_Encoder\EncoderService.cs,FromHex,The following statement contains a magic number: try {  	str = str.Replace (" "' "");  	if ((str.Length % 2) != 0)  		str += " ";  	var returnBytes = new byte[str.Length / 2];  	for (var i = 0; i < returnBytes.Length; i++)  		returnBytes [i] = Convert.ToByte (str.Substring (i * 2' 2)' 16);  	return Encoding.UTF8.GetString (returnBytes);  } catch {  	return "FromHex Fail";  }  
Magic Number,Plugin_Encoder,EncoderService,F:\newReposMay17\keepwn_Altman\Source\Plugin_Encoder\EncoderService.cs,FromHex,The following statement contains a magic number: try {  	str = str.Replace (" "' "");  	if ((str.Length % 2) != 0)  		str += " ";  	var returnBytes = new byte[str.Length / 2];  	for (var i = 0; i < returnBytes.Length; i++)  		returnBytes [i] = Convert.ToByte (str.Substring (i * 2' 2)' 16);  	return Encoding.UTF8.GetString (returnBytes);  } catch {  	return "FromHex Fail";  }  
Magic Number,Plugin_Encoder,EncoderService,F:\newReposMay17\keepwn_Altman\Source\Plugin_Encoder\EncoderService.cs,FromHex,The following statement contains a magic number: try {  	str = str.Replace (" "' "");  	if ((str.Length % 2) != 0)  		str += " ";  	var returnBytes = new byte[str.Length / 2];  	for (var i = 0; i < returnBytes.Length; i++)  		returnBytes [i] = Convert.ToByte (str.Substring (i * 2' 2)' 16);  	return Encoding.UTF8.GetString (returnBytes);  } catch {  	return "FromHex Fail";  }  
Magic Number,Plugin_Encoder,EncoderService,F:\newReposMay17\keepwn_Altman\Source\Plugin_Encoder\EncoderService.cs,FromHex,The following statement contains a magic number: try {  	str = str.Replace (" "' "");  	if ((str.Length % 2) != 0)  		str += " ";  	var returnBytes = new byte[str.Length / 2];  	for (var i = 0; i < returnBytes.Length; i++)  		returnBytes [i] = Convert.ToByte (str.Substring (i * 2' 2)' 16);  	return Encoding.UTF8.GetString (returnBytes);  } catch {  	return "FromHex Fail";  }  
Magic Number,Plugin_Encoder,EncoderService,F:\newReposMay17\keepwn_Altman\Source\Plugin_Encoder\EncoderService.cs,FromHex,The following statement contains a magic number: try {  	str = str.Replace (" "' "");  	if ((str.Length % 2) != 0)  		str += " ";  	var returnBytes = new byte[str.Length / 2];  	for (var i = 0; i < returnBytes.Length; i++)  		returnBytes [i] = Convert.ToByte (str.Substring (i * 2' 2)' 16);  	return Encoding.UTF8.GetString (returnBytes);  } catch {  	return "FromHex Fail";  }  
Magic Number,Plugin_Encoder,EncoderService,F:\newReposMay17\keepwn_Altman\Source\Plugin_Encoder\EncoderService.cs,FromHex,The following statement contains a magic number: if ((str.Length % 2) != 0)  	str += " ";  
Magic Number,Plugin_Encoder,EncoderService,F:\newReposMay17\keepwn_Altman\Source\Plugin_Encoder\EncoderService.cs,FromHex,The following statement contains a magic number: for (var i = 0; i < returnBytes.Length; i++)  	returnBytes [i] = Convert.ToByte (str.Substring (i * 2' 2)' 16);  
Magic Number,Plugin_Encoder,EncoderService,F:\newReposMay17\keepwn_Altman\Source\Plugin_Encoder\EncoderService.cs,FromHex,The following statement contains a magic number: for (var i = 0; i < returnBytes.Length; i++)  	returnBytes [i] = Convert.ToByte (str.Substring (i * 2' 2)' 16);  
Magic Number,Plugin_Encoder,EncoderService,F:\newReposMay17\keepwn_Altman\Source\Plugin_Encoder\EncoderService.cs,FromHex,The following statement contains a magic number: for (var i = 0; i < returnBytes.Length; i++)  	returnBytes [i] = Convert.ToByte (str.Substring (i * 2' 2)' 16);  
Magic Number,Plugin_Encoder,EncoderService,F:\newReposMay17\keepwn_Altman\Source\Plugin_Encoder\EncoderService.cs,FromHex,The following statement contains a magic number: returnBytes [i] = Convert.ToByte (str.Substring (i * 2' 2)' 16);  
Magic Number,Plugin_Encoder,EncoderService,F:\newReposMay17\keepwn_Altman\Source\Plugin_Encoder\EncoderService.cs,FromHex,The following statement contains a magic number: returnBytes [i] = Convert.ToByte (str.Substring (i * 2' 2)' 16);  
Magic Number,Plugin_Encoder,EncoderService,F:\newReposMay17\keepwn_Altman\Source\Plugin_Encoder\EncoderService.cs,FromHex,The following statement contains a magic number: returnBytes [i] = Convert.ToByte (str.Substring (i * 2' 2)' 16);  
