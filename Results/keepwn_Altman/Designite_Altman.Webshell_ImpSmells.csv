Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Altman.Webshell.Core,CustomShellTypeXmlHandle,F:\newReposMay17\keepwn_Altman\Source\Altman.Webshell\Core\CustomShellTypeXmlHandle.cs,WriteXml,Cyclomatic complexity of the method is 12
Complex Method,Altman.Webshell.Core,CustomShellTypeXmlHandle,F:\newReposMay17\keepwn_Altman\Source\Altman.Webshell\Core\CustomShellTypeXmlHandle.cs,ReadFuncCodeSettingNode,Cyclomatic complexity of the method is 9
Complex Method,Altman.Webshell,InitWorker,F:\newReposMay17\keepwn_Altman\Source\Altman.Webshell\InitWorker.cs,RegisterCustomShellType,Cyclomatic complexity of the method is 9
Long Parameter List,Altman.Webshell.Core,CustomShellTypeXmlHandle,F:\newReposMay17\keepwn_Altman\Source\Altman.Webshell\Core\CustomShellTypeXmlHandle.cs,WriteXml,The method has 5 parameters.
Long Parameter List,Altman.Webshell.Core,CustomShellTypeXmlHandle,F:\newReposMay17\keepwn_Altman\Source\Altman.Webshell\Core\CustomShellTypeXmlHandle.cs,ReadXml,The method has 5 parameters.
Long Parameter List,Altman.Webshell,Service,F:\newReposMay17\keepwn_Altman\Source\Altman.Webshell\Service.cs,SubmitCommand,The method has 5 parameters.
Long Identifier,Altman.Webshell,Service,F:\newReposMay17\keepwn_Altman\Source\Altman.Webshell\Service.cs,SubmitCommand,The length of the parameter isBindUploadProgressChangedEvent is 32.
Long Identifier,Altman.Webshell,Service,F:\newReposMay17\keepwn_Altman\Source\Altman.Webshell\Service.cs,SubmitCommand,The length of the parameter isBindDownloadProgressChangedEvent is 34.
Long Statement,Altman.Webshell.Core,CustomCommandCode,F:\newReposMay17\keepwn_Altman\Source\Altman.Webshell\Core\CustomCommandCode.cs,GetCode,The length of the statement  "	string mainCodeString = FillParams (customShellType.MainCodeSetting.Item' customShellType.MainCodeSetting.FuncCodeParam); " is 121.
Long Statement,Altman.Webshell.Core,CustomShellType,F:\newReposMay17\keepwn_Altman\Source\Altman.Webshell\Core\CustomShellType.cs,AddFuncCode,The length of the statement  "		throw new Exception (string.Format ("FuncCode:[{0}/{1}/{2}] has been registered"' _shellTypeName' nodeXpath' funcCode.Name)); " is 125.
Long Statement,Altman.Webshell.Core,CustomShellType,F:\newReposMay17\keepwn_Altman\Source\Altman.Webshell\Core\CustomShellType.cs,GetFuncCode,The length of the statement  "	throw new Exception (string.Format ("FuncCode:[{0}/{1}/{2}] hasn't been registered"' _shellTypeName' nodeXpath' funcCodeName)); " is 127.
Magic Number,Altman.Webshell.Core,CustomCommandCode,F:\newReposMay17\keepwn_Altman\Source\Altman.Webshell\Core\CustomCommandCode.cs,GetRandomStr,The following statement contains a magic number: for (int i = 0; i < length; i++) {  	string s = ((char)r.Next (97' 123)).ToString ();  	str += s;  }  
Magic Number,Altman.Webshell.Core,CustomCommandCode,F:\newReposMay17\keepwn_Altman\Source\Altman.Webshell\Core\CustomCommandCode.cs,GetRandomStr,The following statement contains a magic number: for (int i = 0; i < length; i++) {  	string s = ((char)r.Next (97' 123)).ToString ();  	str += s;  }  
Magic Number,Altman.Webshell.Core,CustomShellTypeXmlHandle,F:\newReposMay17\keepwn_Altman\Source\Altman.Webshell\Core\CustomShellTypeXmlHandle.cs,WriteXml,The following statement contains a magic number: try {  	xmlWriter = new XmlTextWriter (filename' Encoding.UTF8);  	xmlWriter.Formatting = Formatting.Indented;  	xmlWriter.WriteStartDocument ();  	xmlWriter.WriteStartElement ("customShellType");  	{  		//BasicSetting  		xmlWriter.WriteStartElement ("basicSetting");  		{  			xmlWriter.WriteStartElement ("name");  			xmlWriter.WriteString (shellTypeName.Substring (0' shellTypeName.Length - 4));  			xmlWriter.WriteEndElement ();  			xmlWriter.WriteStartElement ("serviceExample");  			xmlWriter.WriteCData (basicSetting.ServiceExample);  			xmlWriter.WriteEndElement ();  			xmlWriter.WriteStartElement ("mainCodeParam");  			{  				xmlWriter.WriteStartAttribute ("location");  				xmlWriter.WriteString (basicSetting.MainCodeParam.Location);  				xmlWriter.WriteEndAttribute ();  				xmlWriter.WriteStartAttribute ("encrymode");  				xmlWriter.WriteString (basicSetting.MainCodeParam.EncryMode.ToString ());  				xmlWriter.WriteEndAttribute ();  				xmlWriter.WriteString (basicSetting.MainCodeParam.Name);  			}  			xmlWriter.WriteEndElement ();  		//MainCodeSetting  		//FuncCodeSetting  		}  		xmlWriter.WriteEndElement ();  		xmlWriter.WriteStartElement ("mainCodeSetting");  		{  			xmlWriter.WriteStartElement ("funcCodeParam");  			{  				xmlWriter.WriteStartAttribute ("location");  				xmlWriter.WriteString (mainCode.FuncCodeParam.Location);  				xmlWriter.WriteEndAttribute ();  				xmlWriter.WriteStartAttribute ("encrymode");  				xmlWriter.WriteString (mainCode.FuncCodeParam.EncryMode.ToString ());  				xmlWriter.WriteEndAttribute ();  				xmlWriter.WriteString (mainCode.FuncCodeParam.Name);  			}  			xmlWriter.WriteEndElement ();  			xmlWriter.WriteStartElement ("item");  			xmlWriter.WriteCData (mainCode.Item);  			xmlWriter.WriteEndElement ();  		}  		xmlWriter.WriteEndElement ();  		xmlWriter.WriteStartElement ("funcCodeSetting");  		{  			foreach (CustomShellType.FuncCode func in funcCodeList) {  				xmlWriter.WriteStartElement ("func");  				{  					xmlWriter.WriteStartElement ("name");  					xmlWriter.WriteString (func.Name);  					xmlWriter.WriteEndElement ();  					foreach (CustomShellType.ParamStruct par in func.FuncParams) {  						xmlWriter.WriteStartElement ("funcParameter");  						{  							xmlWriter.WriteStartAttribute ("location");  							xmlWriter.WriteString (par.Location);  							xmlWriter.WriteEndAttribute ();  							xmlWriter.WriteStartAttribute ("encrymode");  							xmlWriter.WriteString (par.EncryMode.ToString ());  							xmlWriter.WriteEndAttribute ();  							xmlWriter.WriteString (par.Name);  						}  						xmlWriter.WriteEndElement ();  					}  					xmlWriter.WriteStartElement ("item");  					xmlWriter.WriteCData (func.Item);  					xmlWriter.WriteEndElement ();  				}  				xmlWriter.WriteEndElement ();  			}  		}  		xmlWriter.WriteEndElement ();  	}  } catch (Exception ex) {  	throw new Exception (ex.Message);  } finally {  	xmlWriter.Close ();  }  
Magic Number,Altman.Webshell.Core,CustomShellTypeXmlHandle,F:\newReposMay17\keepwn_Altman\Source\Altman.Webshell\Core\CustomShellTypeXmlHandle.cs,WriteXml,The following statement contains a magic number: xmlWriter.WriteString (shellTypeName.Substring (0' shellTypeName.Length - 4));  
