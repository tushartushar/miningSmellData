Implementation smell,Namespace,Class,File,Method,Description
Long Method,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,Upload,The method has 104 lines of code.
Complex Method,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseObject,Cyclomatic complexity of the method is 8
Complex Method,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseValue,Cyclomatic complexity of the method is 12
Complex Method,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,Cyclomatic complexity of the method is 18
Complex Method,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,Cyclomatic complexity of the method is 25
Complex Method,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeValue,Cyclomatic complexity of the method is 8
Complex Method,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,Cyclomatic complexity of the method is 10
Complex Method,ApiCore,ApiManager,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\ApiManager.cs,Method,Cyclomatic complexity of the method is 8
Complex Method,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,Upload,Cyclomatic complexity of the method is 8
Complex Method,ApiCore,MessageAttachment,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\MessageAttachment.cs,AttachmentTypeToString,Cyclomatic complexity of the method is 24
Complex Method,ApiCore,AttachmentFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\AttachmentFactory.cs,GetAttachment,Cyclomatic complexity of the method is 22
Complex Method,ApiCore.Utils.Authorization,OAuthHidden,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Utils\Authorization\OAuth\OAuthHidden.cs,GetSessionData,Cyclomatic complexity of the method is 10
Complex Method,ApiCore.Utils.Authorization,OAuthHidden,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Utils\Authorization\OAuth\OAuthHidden.cs,GetRetArray,Cyclomatic complexity of the method is 9
Complex Method,ApiCore.Utils,EntityBuilder,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Utils\EntityBuilder.cs,MapTo,Cyclomatic complexity of the method is 8
Complex Method,ApiCore.Messages,LongPollServerConnection,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Messages\LongPollServerConnection.cs,run,Cyclomatic complexity of the method is 9
Complex Method,ApiCore.Messages,MessagesFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Messages\MessagesFactory.cs,buildMessagesList,Cyclomatic complexity of the method is 11
Complex Method,ApiCore.Wall,WallFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Wall\WallFactory.cs,getAttachment,Cyclomatic complexity of the method is 26
Long Parameter List,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,FindMimeFromData,The method has 8 parameters.
Long Parameter List,ApiCore.Utils.Authorization,OAuthHidden,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Utils\Authorization\OAuth\OAuthHidden.cs,Authorize,The method has 5 parameters.
Long Parameter List,ApiCore.Audio,AudioFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Audio\AudioFactory.cs,Search,The method has 5 parameters.
Long Parameter List,ApiCore.Messages,MessagesFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Messages\MessagesFactory.cs,Get,The method has 6 parameters.
Long Parameter List,ApiCore.Messages,MessagesFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Messages\MessagesFactory.cs,Send,The method has 7 parameters.
Long Parameter List,ApiCore.Friends,FriendsFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Friends\FriendsFactory.cs,Get,The method has 6 parameters.
Long Parameter List,ApiCore.Photos,PhotosFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Photos\PhotosFactory.cs,GetPhotos,The method has 5 parameters.
Long Parameter List,ApiCore.Photos,PhotosFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Photos\PhotosFactory.cs,PutTag,The method has 7 parameters.
Long Parameter List,ApiCore.Photos,PhotosFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Photos\PhotosFactory.cs,EditAlbum,The method has 5 parameters.
Long Parameter List,ApiCore.Wall,WallFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Wall\WallFactory.cs,GetComments,The method has 5 parameters.
Long Statement,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The length of the statement  "					if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) { " is 134.
Long Statement,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseNumber,The length of the statement  "	success = Double.TryParse (new string (json' index' charLength)' NumberStyles.Any' CultureInfo.InvariantCulture' out number); " is 125.
Long Statement,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The length of the statement  "		if (json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e') { " is 134.
Long Statement,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,updateFileUploadEvent,The length of the statement  "	this.filesEventArgs.FilePercentComplete = (float)this.filesEventArgs.CurrentBytesWritten / this.filesEventArgs.FileSize * 100; " is 126.
Long Statement,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,calculateContentLength,The length of the statement  "			size += System.Text.Encoding.ASCII.GetBytes (this.formatFormUploadHeader (boundary' formFieldName' formItems [formFieldName])).Length; " is 134.
Long Statement,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,calculateContentLength,The length of the statement  "			size += System.Text.Encoding.ASCII.GetBytes (this.formatFileUploadHeader (fileFieldName' Path.GetFileName (files [fileFieldName])' this.getMimeType (files [fileFieldName]))).Length + boundaryBytes.Length; " is 204.
Long Statement,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,Upload,The length of the statement  "	this.Log (string.Format ("make request to {0}' form values count: {1}' files: {2}"' url' ((formItems == null) ? 0 : formItems.Count)' ((files == null) ? 0 : files.Count))); " is 172.
Long Statement,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,Upload,The length of the statement  "	httpRequest.UserAgent = "Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.19 (KHTML' like Gecko) Chrome/18.0.1025.142 Safari/535.19"; " is 129.
Long Statement,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,Upload,The length of the statement  "			this.updateFormUploadEvent (formItems [key].Length' formItems [key].Length' (float)((float)this.formEventArgs.CurrentBytesWritten / formItemBytes.Length) * 100); " is 161.
Long Statement,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,Upload,The length of the statement  "			string header = this.formatFileUploadHeader (formFieldName' Path.GetFileName (files [formFieldName])' this.getMimeType (files [formFieldName])); " is 144.
Long Statement,ApiCore.Utils.Authorization,OAuthHidden,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Utils\Authorization\OAuth\OAuthHidden.cs,Authorize,The length of the statement  "	string startUrl = string.Format ("http://oauth.vk.com/oauth/authorize?redirect_uri={0}&response_type=token&client_id={1}&scope={2}&display=wap&no_session=1"' blankHtml' appId' scope); " is 183.
Long Statement,ApiCore.Utils.Authorization,OAuthHidden,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Utils\Authorization\OAuth\OAuthHidden.cs,Authorize,The length of the statement  "	string authorizeHtmlLocal = authorizeHtml.Substring (0' authorizeHtml.IndexOf ("<script")) + authorizeHtml.Substring (authorizeHtml.IndexOf ("</script>") + "</script>".Length); " is 176.
Long Statement,ApiCore.Utils.Authorization,OAuthWnd,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Utils\Authorization\OAuth\OAuthWnd.cs,LoginWnd_Shown,The length of the statement  "	string urlTemplate = "http://api.vkontakte.ru/oauth/authorize?client_id={0}&scope={1}&redirect_uri={2}&display={3}&response_type=token"; " is 136.
Long Statement,ApiCore.Messages,LongPollServerConnection,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Messages\LongPollServerConnection.cs,Start,The length of the statement  "		if (this.connectionListenerThread.ThreadState == System.Threading.ThreadState.Unstarted || this.connectionListenerThread.ThreadState == System.Threading.ThreadState.Suspended) { " is 177.
Long Statement,ApiCore.Messages,LongPollServerConnection,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Messages\LongPollServerConnection.cs,run,The length of the statement  "			this.lastLongPollMessage = this.request.Send ("http://" + this.Server + "?act=a_check&key=" + this.Key + "&ts=" + this.LastEventId.ToString () + "&wait=" + this.WaitTime.ToString () + "&mode=0"); " is 195.
Long Statement,ApiCore.Messages,LongPollServerConnection,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Messages\LongPollServerConnection.cs,run,The length of the statement  "				this.LastEventId = Convert.ToInt32 (new Regex ("\\{[\\s]*?\\\"ts\\\"[\\s]*?\\:[\\s]*?(\\d+)[\\s]*?").Match (this.lastLongPollMessage).Groups [1].Value); " is 152.
Long Statement,ApiCore.Messages,MessagesFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Messages\MessagesFactory.cs,Get,The length of the statement  "		this.Manager.DebugMessage (string.Format ("No messages found with Type: {0}; MessageFilter: {1}; Offset: {2}"' type' filter' timeOffset)); " is 138.
Complex Conditional,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The conditional expression  "json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e'"  is complex.
Complex Conditional,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The conditional expression  "json [index] == 't' && json [index + 1] == 'r' && json [index + 2] == 'u' && json [index + 3] == 'e'"  is complex.
Complex Conditional,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The conditional expression  "json [index] == 'n' && json [index + 1] == 'u' && json [index + 2] == 'l' && json [index + 3] == 'l'"  is complex.
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: while (!complete) {  	if (index == json.Length) {  		break;  	}  	c = json [index++];  	if (c == '"') {  		complete = true;  		break;  	}  	else if (c == '\\') {  		if (index == json.Length) {  			break;  		}  		c = json [index++];  		if (c == '"') {  			s.Append ('"');  		}  		else if (c == '\\') {  			s.Append ('\\');  		}  		else if (c == '/') {  			s.Append ('/');  		}  		else if (c == 'b') {  			s.Append ('\b');  		}  		else if (c == 'f') {  			s.Append ('\f');  		}  		else if (c == 'n') {  			s.Append ('\n');  		}  		else if (c == 'r') {  			s.Append ('\r');  		}  		else if (c == 't') {  			s.Append ('\t');  		}  		else if (c == 'u') {  			int remainingLength = json.Length - index;  			if (remainingLength >= 4) {  				// parse the 32 bit hex into an integer codepoint  				uint codePoint;  				if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  					return "";  				}  				// convert the integer codepoint to a unicode char and add to string  				s.Append (Char.ConvertFromUtf32 ((int)codePoint));  				// skip 4 chars  				index += 4;  			}  			else {  				break;  			}  		}  	}  	else {  		s.Append (c);  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: while (!complete) {  	if (index == json.Length) {  		break;  	}  	c = json [index++];  	if (c == '"') {  		complete = true;  		break;  	}  	else if (c == '\\') {  		if (index == json.Length) {  			break;  		}  		c = json [index++];  		if (c == '"') {  			s.Append ('"');  		}  		else if (c == '\\') {  			s.Append ('\\');  		}  		else if (c == '/') {  			s.Append ('/');  		}  		else if (c == 'b') {  			s.Append ('\b');  		}  		else if (c == 'f') {  			s.Append ('\f');  		}  		else if (c == 'n') {  			s.Append ('\n');  		}  		else if (c == 'r') {  			s.Append ('\r');  		}  		else if (c == 't') {  			s.Append ('\t');  		}  		else if (c == 'u') {  			int remainingLength = json.Length - index;  			if (remainingLength >= 4) {  				// parse the 32 bit hex into an integer codepoint  				uint codePoint;  				if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  					return "";  				}  				// convert the integer codepoint to a unicode char and add to string  				s.Append (Char.ConvertFromUtf32 ((int)codePoint));  				// skip 4 chars  				index += 4;  			}  			else {  				break;  			}  		}  	}  	else {  		s.Append (c);  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: while (!complete) {  	if (index == json.Length) {  		break;  	}  	c = json [index++];  	if (c == '"') {  		complete = true;  		break;  	}  	else if (c == '\\') {  		if (index == json.Length) {  			break;  		}  		c = json [index++];  		if (c == '"') {  			s.Append ('"');  		}  		else if (c == '\\') {  			s.Append ('\\');  		}  		else if (c == '/') {  			s.Append ('/');  		}  		else if (c == 'b') {  			s.Append ('\b');  		}  		else if (c == 'f') {  			s.Append ('\f');  		}  		else if (c == 'n') {  			s.Append ('\n');  		}  		else if (c == 'r') {  			s.Append ('\r');  		}  		else if (c == 't') {  			s.Append ('\t');  		}  		else if (c == 'u') {  			int remainingLength = json.Length - index;  			if (remainingLength >= 4) {  				// parse the 32 bit hex into an integer codepoint  				uint codePoint;  				if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  					return "";  				}  				// convert the integer codepoint to a unicode char and add to string  				s.Append (Char.ConvertFromUtf32 ((int)codePoint));  				// skip 4 chars  				index += 4;  			}  			else {  				break;  			}  		}  	}  	else {  		s.Append (c);  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == '"') {  	complete = true;  	break;  }  else if (c == '\\') {  	if (index == json.Length) {  		break;  	}  	c = json [index++];  	if (c == '"') {  		s.Append ('"');  	}  	else if (c == '\\') {  		s.Append ('\\');  	}  	else if (c == '/') {  		s.Append ('/');  	}  	else if (c == 'b') {  		s.Append ('\b');  	}  	else if (c == 'f') {  		s.Append ('\f');  	}  	else if (c == 'n') {  		s.Append ('\n');  	}  	else if (c == 'r') {  		s.Append ('\r');  	}  	else if (c == 't') {  		s.Append ('\t');  	}  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  				return "";  			}  			// convert the integer codepoint to a unicode char and add to string  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			// skip 4 chars  			index += 4;  		}  		else {  			break;  		}  	}  }  else {  	s.Append (c);  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == '"') {  	complete = true;  	break;  }  else if (c == '\\') {  	if (index == json.Length) {  		break;  	}  	c = json [index++];  	if (c == '"') {  		s.Append ('"');  	}  	else if (c == '\\') {  		s.Append ('\\');  	}  	else if (c == '/') {  		s.Append ('/');  	}  	else if (c == 'b') {  		s.Append ('\b');  	}  	else if (c == 'f') {  		s.Append ('\f');  	}  	else if (c == 'n') {  		s.Append ('\n');  	}  	else if (c == 'r') {  		s.Append ('\r');  	}  	else if (c == 't') {  		s.Append ('\t');  	}  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  				return "";  			}  			// convert the integer codepoint to a unicode char and add to string  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			// skip 4 chars  			index += 4;  		}  		else {  			break;  		}  	}  }  else {  	s.Append (c);  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == '"') {  	complete = true;  	break;  }  else if (c == '\\') {  	if (index == json.Length) {  		break;  	}  	c = json [index++];  	if (c == '"') {  		s.Append ('"');  	}  	else if (c == '\\') {  		s.Append ('\\');  	}  	else if (c == '/') {  		s.Append ('/');  	}  	else if (c == 'b') {  		s.Append ('\b');  	}  	else if (c == 'f') {  		s.Append ('\f');  	}  	else if (c == 'n') {  		s.Append ('\n');  	}  	else if (c == 'r') {  		s.Append ('\r');  	}  	else if (c == 't') {  		s.Append ('\t');  	}  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  				return "";  			}  			// convert the integer codepoint to a unicode char and add to string  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			// skip 4 chars  			index += 4;  		}  		else {  			break;  		}  	}  }  else {  	s.Append (c);  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == '\\') {  	if (index == json.Length) {  		break;  	}  	c = json [index++];  	if (c == '"') {  		s.Append ('"');  	}  	else if (c == '\\') {  		s.Append ('\\');  	}  	else if (c == '/') {  		s.Append ('/');  	}  	else if (c == 'b') {  		s.Append ('\b');  	}  	else if (c == 'f') {  		s.Append ('\f');  	}  	else if (c == 'n') {  		s.Append ('\n');  	}  	else if (c == 'r') {  		s.Append ('\r');  	}  	else if (c == 't') {  		s.Append ('\t');  	}  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  				return "";  			}  			// convert the integer codepoint to a unicode char and add to string  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			// skip 4 chars  			index += 4;  		}  		else {  			break;  		}  	}  }  else {  	s.Append (c);  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == '\\') {  	if (index == json.Length) {  		break;  	}  	c = json [index++];  	if (c == '"') {  		s.Append ('"');  	}  	else if (c == '\\') {  		s.Append ('\\');  	}  	else if (c == '/') {  		s.Append ('/');  	}  	else if (c == 'b') {  		s.Append ('\b');  	}  	else if (c == 'f') {  		s.Append ('\f');  	}  	else if (c == 'n') {  		s.Append ('\n');  	}  	else if (c == 'r') {  		s.Append ('\r');  	}  	else if (c == 't') {  		s.Append ('\t');  	}  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  				return "";  			}  			// convert the integer codepoint to a unicode char and add to string  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			// skip 4 chars  			index += 4;  		}  		else {  			break;  		}  	}  }  else {  	s.Append (c);  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == '\\') {  	if (index == json.Length) {  		break;  	}  	c = json [index++];  	if (c == '"') {  		s.Append ('"');  	}  	else if (c == '\\') {  		s.Append ('\\');  	}  	else if (c == '/') {  		s.Append ('/');  	}  	else if (c == 'b') {  		s.Append ('\b');  	}  	else if (c == 'f') {  		s.Append ('\f');  	}  	else if (c == 'n') {  		s.Append ('\n');  	}  	else if (c == 'r') {  		s.Append ('\r');  	}  	else if (c == 't') {  		s.Append ('\t');  	}  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  				return "";  			}  			// convert the integer codepoint to a unicode char and add to string  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			// skip 4 chars  			index += 4;  		}  		else {  			break;  		}  	}  }  else {  	s.Append (c);  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == '"') {  	s.Append ('"');  }  else if (c == '\\') {  	s.Append ('\\');  }  else if (c == '/') {  	s.Append ('/');  }  else if (c == 'b') {  	s.Append ('\b');  }  else if (c == 'f') {  	s.Append ('\f');  }  else if (c == 'n') {  	s.Append ('\n');  }  else if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == '"') {  	s.Append ('"');  }  else if (c == '\\') {  	s.Append ('\\');  }  else if (c == '/') {  	s.Append ('/');  }  else if (c == 'b') {  	s.Append ('\b');  }  else if (c == 'f') {  	s.Append ('\f');  }  else if (c == 'n') {  	s.Append ('\n');  }  else if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == '"') {  	s.Append ('"');  }  else if (c == '\\') {  	s.Append ('\\');  }  else if (c == '/') {  	s.Append ('/');  }  else if (c == 'b') {  	s.Append ('\b');  }  else if (c == 'f') {  	s.Append ('\f');  }  else if (c == 'n') {  	s.Append ('\n');  }  else if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == '\\') {  	s.Append ('\\');  }  else if (c == '/') {  	s.Append ('/');  }  else if (c == 'b') {  	s.Append ('\b');  }  else if (c == 'f') {  	s.Append ('\f');  }  else if (c == 'n') {  	s.Append ('\n');  }  else if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == '\\') {  	s.Append ('\\');  }  else if (c == '/') {  	s.Append ('/');  }  else if (c == 'b') {  	s.Append ('\b');  }  else if (c == 'f') {  	s.Append ('\f');  }  else if (c == 'n') {  	s.Append ('\n');  }  else if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == '\\') {  	s.Append ('\\');  }  else if (c == '/') {  	s.Append ('/');  }  else if (c == 'b') {  	s.Append ('\b');  }  else if (c == 'f') {  	s.Append ('\f');  }  else if (c == 'n') {  	s.Append ('\n');  }  else if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == '/') {  	s.Append ('/');  }  else if (c == 'b') {  	s.Append ('\b');  }  else if (c == 'f') {  	s.Append ('\f');  }  else if (c == 'n') {  	s.Append ('\n');  }  else if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == '/') {  	s.Append ('/');  }  else if (c == 'b') {  	s.Append ('\b');  }  else if (c == 'f') {  	s.Append ('\f');  }  else if (c == 'n') {  	s.Append ('\n');  }  else if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == '/') {  	s.Append ('/');  }  else if (c == 'b') {  	s.Append ('\b');  }  else if (c == 'f') {  	s.Append ('\f');  }  else if (c == 'n') {  	s.Append ('\n');  }  else if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == 'b') {  	s.Append ('\b');  }  else if (c == 'f') {  	s.Append ('\f');  }  else if (c == 'n') {  	s.Append ('\n');  }  else if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == 'b') {  	s.Append ('\b');  }  else if (c == 'f') {  	s.Append ('\f');  }  else if (c == 'n') {  	s.Append ('\n');  }  else if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == 'b') {  	s.Append ('\b');  }  else if (c == 'f') {  	s.Append ('\f');  }  else if (c == 'n') {  	s.Append ('\n');  }  else if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == 'f') {  	s.Append ('\f');  }  else if (c == 'n') {  	s.Append ('\n');  }  else if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == 'f') {  	s.Append ('\f');  }  else if (c == 'n') {  	s.Append ('\n');  }  else if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == 'f') {  	s.Append ('\f');  }  else if (c == 'n') {  	s.Append ('\n');  }  else if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == 'n') {  	s.Append ('\n');  }  else if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == 'n') {  	s.Append ('\n');  }  else if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == 'n') {  	s.Append ('\n');  }  else if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == 'r') {  	s.Append ('\r');  }  else if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == 't') {  	s.Append ('\t');  }  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  			return "";  		}  		// convert the integer codepoint to a unicode char and add to string  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		// skip 4 chars  		index += 4;  	}  	else {  		break;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (remainingLength >= 4) {  	// parse the 32 bit hex into an integer codepoint  	uint codePoint;  	if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  		return "";  	}  	// convert the integer codepoint to a unicode char and add to string  	s.Append (Char.ConvertFromUtf32 ((int)codePoint));  	// skip 4 chars  	index += 4;  }  else {  	break;  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (remainingLength >= 4) {  	// parse the 32 bit hex into an integer codepoint  	uint codePoint;  	if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  		return "";  	}  	// convert the integer codepoint to a unicode char and add to string  	s.Append (Char.ConvertFromUtf32 ((int)codePoint));  	// skip 4 chars  	index += 4;  }  else {  	break;  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (remainingLength >= 4) {  	// parse the 32 bit hex into an integer codepoint  	uint codePoint;  	if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  		return "";  	}  	// convert the integer codepoint to a unicode char and add to string  	s.Append (Char.ConvertFromUtf32 ((int)codePoint));  	// skip 4 chars  	index += 4;  }  else {  	break;  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) {  	return "";  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseString,The following statement contains a magic number: index += 4;  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 5) {  	if (json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e') {  		index += 5;  		return JSON.TOKEN_FALSE;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 5) {  	if (json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e') {  		index += 5;  		return JSON.TOKEN_FALSE;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 5) {  	if (json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e') {  		index += 5;  		return JSON.TOKEN_FALSE;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 5) {  	if (json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e') {  		index += 5;  		return JSON.TOKEN_FALSE;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 5) {  	if (json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e') {  		index += 5;  		return JSON.TOKEN_FALSE;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e') {  	index += 5;  	return JSON.TOKEN_FALSE;  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e') {  	index += 5;  	return JSON.TOKEN_FALSE;  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e') {  	index += 5;  	return JSON.TOKEN_FALSE;  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e') {  	index += 5;  	return JSON.TOKEN_FALSE;  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: index += 5;  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 4) {  	if (json [index] == 't' && json [index + 1] == 'r' && json [index + 2] == 'u' && json [index + 3] == 'e') {  		index += 4;  		return JSON.TOKEN_TRUE;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 4) {  	if (json [index] == 't' && json [index + 1] == 'r' && json [index + 2] == 'u' && json [index + 3] == 'e') {  		index += 4;  		return JSON.TOKEN_TRUE;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 4) {  	if (json [index] == 't' && json [index + 1] == 'r' && json [index + 2] == 'u' && json [index + 3] == 'e') {  		index += 4;  		return JSON.TOKEN_TRUE;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 4) {  	if (json [index] == 't' && json [index + 1] == 'r' && json [index + 2] == 'u' && json [index + 3] == 'e') {  		index += 4;  		return JSON.TOKEN_TRUE;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (json [index] == 't' && json [index + 1] == 'r' && json [index + 2] == 'u' && json [index + 3] == 'e') {  	index += 4;  	return JSON.TOKEN_TRUE;  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (json [index] == 't' && json [index + 1] == 'r' && json [index + 2] == 'u' && json [index + 3] == 'e') {  	index += 4;  	return JSON.TOKEN_TRUE;  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (json [index] == 't' && json [index + 1] == 'r' && json [index + 2] == 'u' && json [index + 3] == 'e') {  	index += 4;  	return JSON.TOKEN_TRUE;  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: index += 4;  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 4) {  	if (json [index] == 'n' && json [index + 1] == 'u' && json [index + 2] == 'l' && json [index + 3] == 'l') {  		index += 4;  		return JSON.TOKEN_NULL;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 4) {  	if (json [index] == 'n' && json [index + 1] == 'u' && json [index + 2] == 'l' && json [index + 3] == 'l') {  		index += 4;  		return JSON.TOKEN_NULL;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 4) {  	if (json [index] == 'n' && json [index + 1] == 'u' && json [index + 2] == 'l' && json [index + 3] == 'l') {  		index += 4;  		return JSON.TOKEN_NULL;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 4) {  	if (json [index] == 'n' && json [index + 1] == 'u' && json [index + 2] == 'l' && json [index + 3] == 'l') {  		index += 4;  		return JSON.TOKEN_NULL;  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (json [index] == 'n' && json [index + 1] == 'u' && json [index + 2] == 'l' && json [index + 3] == 'l') {  	index += 4;  	return JSON.TOKEN_NULL;  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (json [index] == 'n' && json [index + 1] == 'u' && json [index + 2] == 'l' && json [index + 3] == 'l') {  	index += 4;  	return JSON.TOKEN_NULL;  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: if (json [index] == 'n' && json [index + 1] == 'u' && json [index + 2] == 'l' && json [index + 3] == 'l') {  	index += 4;  	return JSON.TOKEN_NULL;  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following statement contains a magic number: index += 4;  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: for (int i = 0; i < charArray.Length; i++) {  	char c = charArray [i];  	if (c == '"') {  		builder.Append ("\\\"");  	}  	else if (c == '\\') {  		builder.Append ("\\\\");  	}  	else if (c == '\b') {  		builder.Append ("\\b");  	}  	else if (c == '\f') {  		builder.Append ("\\f");  	}  	else if (c == '\n') {  		builder.Append ("\\n");  	}  	else if (c == '\r') {  		builder.Append ("\\r");  	}  	else if (c == '\t') {  		builder.Append ("\\t");  	}  	else {  		int codepoint = Convert.ToInt32 (c);  		if ((codepoint >= 32) && (codepoint <= 126)) {  			builder.Append (c);  		}  		else {  			builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  		}  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: for (int i = 0; i < charArray.Length; i++) {  	char c = charArray [i];  	if (c == '"') {  		builder.Append ("\\\"");  	}  	else if (c == '\\') {  		builder.Append ("\\\\");  	}  	else if (c == '\b') {  		builder.Append ("\\b");  	}  	else if (c == '\f') {  		builder.Append ("\\f");  	}  	else if (c == '\n') {  		builder.Append ("\\n");  	}  	else if (c == '\r') {  		builder.Append ("\\r");  	}  	else if (c == '\t') {  		builder.Append ("\\t");  	}  	else {  		int codepoint = Convert.ToInt32 (c);  		if ((codepoint >= 32) && (codepoint <= 126)) {  			builder.Append (c);  		}  		else {  			builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  		}  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: for (int i = 0; i < charArray.Length; i++) {  	char c = charArray [i];  	if (c == '"') {  		builder.Append ("\\\"");  	}  	else if (c == '\\') {  		builder.Append ("\\\\");  	}  	else if (c == '\b') {  		builder.Append ("\\b");  	}  	else if (c == '\f') {  		builder.Append ("\\f");  	}  	else if (c == '\n') {  		builder.Append ("\\n");  	}  	else if (c == '\r') {  		builder.Append ("\\r");  	}  	else if (c == '\t') {  		builder.Append ("\\t");  	}  	else {  		int codepoint = Convert.ToInt32 (c);  		if ((codepoint >= 32) && (codepoint <= 126)) {  			builder.Append (c);  		}  		else {  			builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  		}  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: for (int i = 0; i < charArray.Length; i++) {  	char c = charArray [i];  	if (c == '"') {  		builder.Append ("\\\"");  	}  	else if (c == '\\') {  		builder.Append ("\\\\");  	}  	else if (c == '\b') {  		builder.Append ("\\b");  	}  	else if (c == '\f') {  		builder.Append ("\\f");  	}  	else if (c == '\n') {  		builder.Append ("\\n");  	}  	else if (c == '\r') {  		builder.Append ("\\r");  	}  	else if (c == '\t') {  		builder.Append ("\\t");  	}  	else {  		int codepoint = Convert.ToInt32 (c);  		if ((codepoint >= 32) && (codepoint <= 126)) {  			builder.Append (c);  		}  		else {  			builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  		}  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '"') {  	builder.Append ("\\\"");  }  else if (c == '\\') {  	builder.Append ("\\\\");  }  else if (c == '\b') {  	builder.Append ("\\b");  }  else if (c == '\f') {  	builder.Append ("\\f");  }  else if (c == '\n') {  	builder.Append ("\\n");  }  else if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '"') {  	builder.Append ("\\\"");  }  else if (c == '\\') {  	builder.Append ("\\\\");  }  else if (c == '\b') {  	builder.Append ("\\b");  }  else if (c == '\f') {  	builder.Append ("\\f");  }  else if (c == '\n') {  	builder.Append ("\\n");  }  else if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '"') {  	builder.Append ("\\\"");  }  else if (c == '\\') {  	builder.Append ("\\\\");  }  else if (c == '\b') {  	builder.Append ("\\b");  }  else if (c == '\f') {  	builder.Append ("\\f");  }  else if (c == '\n') {  	builder.Append ("\\n");  }  else if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '"') {  	builder.Append ("\\\"");  }  else if (c == '\\') {  	builder.Append ("\\\\");  }  else if (c == '\b') {  	builder.Append ("\\b");  }  else if (c == '\f') {  	builder.Append ("\\f");  }  else if (c == '\n') {  	builder.Append ("\\n");  }  else if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\\') {  	builder.Append ("\\\\");  }  else if (c == '\b') {  	builder.Append ("\\b");  }  else if (c == '\f') {  	builder.Append ("\\f");  }  else if (c == '\n') {  	builder.Append ("\\n");  }  else if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\\') {  	builder.Append ("\\\\");  }  else if (c == '\b') {  	builder.Append ("\\b");  }  else if (c == '\f') {  	builder.Append ("\\f");  }  else if (c == '\n') {  	builder.Append ("\\n");  }  else if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\\') {  	builder.Append ("\\\\");  }  else if (c == '\b') {  	builder.Append ("\\b");  }  else if (c == '\f') {  	builder.Append ("\\f");  }  else if (c == '\n') {  	builder.Append ("\\n");  }  else if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\\') {  	builder.Append ("\\\\");  }  else if (c == '\b') {  	builder.Append ("\\b");  }  else if (c == '\f') {  	builder.Append ("\\f");  }  else if (c == '\n') {  	builder.Append ("\\n");  }  else if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\b') {  	builder.Append ("\\b");  }  else if (c == '\f') {  	builder.Append ("\\f");  }  else if (c == '\n') {  	builder.Append ("\\n");  }  else if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\b') {  	builder.Append ("\\b");  }  else if (c == '\f') {  	builder.Append ("\\f");  }  else if (c == '\n') {  	builder.Append ("\\n");  }  else if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\b') {  	builder.Append ("\\b");  }  else if (c == '\f') {  	builder.Append ("\\f");  }  else if (c == '\n') {  	builder.Append ("\\n");  }  else if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\b') {  	builder.Append ("\\b");  }  else if (c == '\f') {  	builder.Append ("\\f");  }  else if (c == '\n') {  	builder.Append ("\\n");  }  else if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\f') {  	builder.Append ("\\f");  }  else if (c == '\n') {  	builder.Append ("\\n");  }  else if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\f') {  	builder.Append ("\\f");  }  else if (c == '\n') {  	builder.Append ("\\n");  }  else if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\f') {  	builder.Append ("\\f");  }  else if (c == '\n') {  	builder.Append ("\\n");  }  else if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\f') {  	builder.Append ("\\f");  }  else if (c == '\n') {  	builder.Append ("\\n");  }  else if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\n') {  	builder.Append ("\\n");  }  else if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\n') {  	builder.Append ("\\n");  }  else if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\n') {  	builder.Append ("\\n");  }  else if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\n') {  	builder.Append ("\\n");  }  else if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\r') {  	builder.Append ("\\r");  }  else if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if (c == '\t') {  	builder.Append ("\\t");  }  else {  	int codepoint = Convert.ToInt32 (c);  	if ((codepoint >= 32) && (codepoint <= 126)) {  		builder.Append (c);  	}  	else {  		builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  	}  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if ((codepoint >= 32) && (codepoint <= 126)) {  	builder.Append (c);  }  else {  	builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if ((codepoint >= 32) && (codepoint <= 126)) {  	builder.Append (c);  }  else {  	builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if ((codepoint >= 32) && (codepoint <= 126)) {  	builder.Append (c);  }  else {  	builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: if ((codepoint >= 32) && (codepoint <= 126)) {  	builder.Append (c);  }  else {  	builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  }  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  
Magic Number,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,SerializeString,The following statement contains a magic number: builder.Append ("\\u" + Convert.ToString (codepoint' 16).PadLeft (4' '0'));  
Magic Number,ApiCore,ApiManager,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\ApiManager.cs,Method,The following statement contains a magic number: for (int i = 0; i < args.Length; i += 2) {  	if (args [i + 1] != null) {  		if (args [i + 1].GetType ().ToString ().Equals ("System.Int32[]")) {  			this.Params (args [i].ToString ()' CommonUtils.IntArrayToCommaSeparatedString ((int[])args [i + 1]));  		}  		else if (args [i + 1].GetType ().ToString ().Equals ("System.String[]")) {  			this.Params (args [i].ToString ()' CommonUtils.StringArrayToCommaSeparatedString ((string[])args [i + 1]));  		}  		else if (args [i + 1].GetType ().ToString ().Equals ("System.Boolean")) {  			this.Params (args [i].ToString ()' Convert.ToInt32 (args [i + 1]));  		}  		else if (args [i + 1].GetType ().ToString ().Equals ("ApiCore.MessageAttachment[]")) {  			this.Params (args [i].ToString ()' CommonUtils.ObjectsArrayToCommaSeparatedString ((object[])args [i + 1]));  		}  		else if (args [i + 1] is Object) {  			this.Params (args [i].ToString ()' args [i + 1].ToString ());  		}  		else {  			this.Params (args [i].ToString ()' args [i + 1]);  		}  	}  }  
Magic Number,ApiCore,ApiManager,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\ApiManager.cs,Method,The following statement contains a magic number: i += 2
Magic Number,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,getMimeType,The following statement contains a magic number: using (FileStream fs = new FileStream (filename' FileMode.Open)) {  	if (fs.Length >= 256)  		fs.Read (buffer' 0' 256);  	else  		fs.Read (buffer' 0' (int)fs.Length);  }  
Magic Number,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,getMimeType,The following statement contains a magic number: using (FileStream fs = new FileStream (filename' FileMode.Open)) {  	if (fs.Length >= 256)  		fs.Read (buffer' 0' 256);  	else  		fs.Read (buffer' 0' (int)fs.Length);  }  
Magic Number,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,getMimeType,The following statement contains a magic number: if (fs.Length >= 256)  	fs.Read (buffer' 0' 256);  else  	fs.Read (buffer' 0' (int)fs.Length);  
Magic Number,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,getMimeType,The following statement contains a magic number: if (fs.Length >= 256)  	fs.Read (buffer' 0' 256);  else  	fs.Read (buffer' 0' (int)fs.Length);  
Magic Number,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,getMimeType,The following statement contains a magic number: fs.Read (buffer' 0' 256);  
Magic Number,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,getMimeType,The following statement contains a magic number: try {  	System.UInt32 mimetype;  	FindMimeFromData (0' null' buffer' 256' null' 0' out mimetype' 0);  	System.IntPtr mimeTypePtr = new IntPtr (mimetype);  	string mime = Marshal.PtrToStringUni (mimeTypePtr);  	Marshal.FreeCoTaskMem (mimeTypePtr);  	return mime;  }  catch {  	return "application/unknown";  }  
Magic Number,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,getMimeType,The following statement contains a magic number: FindMimeFromData (0' null' buffer' 256' null' 0' out mimetype' 0);  
Magic Number,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,updateFileUploadEvent,The following statement contains a magic number: this.filesEventArgs.FilePercentComplete = (float)this.filesEventArgs.CurrentBytesWritten / this.filesEventArgs.FileSize * 100;  
Magic Number,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,Upload,The following statement contains a magic number: if (formItems != null && formItems.Count > 0) {  	formFieldsItems = formItems.Count;  	totalItems += formFieldsItems;  	// шаблон передаваемых строковых параметров "формы"  	// записываем переданные параметры "формы" в поток  	foreach (string key in formItems.Keys) {  		this.initFormUpload (key' formItems [key]);  		string formItem = this.formatFormUploadHeader (boundary' key' formItems [key]);  		// string.Format(formHeaderTemplate' key' formItems[key]);  		byte[] formItemBytes = System.Text.Encoding.UTF8.GetBytes (formItem);  		reqStream.Write (formItemBytes' 0' formItemBytes.Length);  		this.updateFormUploadEvent (formItems [key].Length' formItems [key].Length' (float)((float)this.formEventArgs.CurrentBytesWritten / formItemBytes.Length) * 100);  		itemsCompleted++;  		formFieldsCompleted++;  		this.OnFormFieldUploadProgress (formEventArgs);  	}  	// дописали разделитель данных  	reqStream.Write (boundaryBytes' 0' boundaryBytes.Length);  }  else {  	// если список полей формы пуст' нужно дописать boundary  	reqStream.Write (boundaryBytes' 0' boundaryBytes.Length);  }  
Magic Number,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,Upload,The following statement contains a magic number: foreach (string key in formItems.Keys) {  	this.initFormUpload (key' formItems [key]);  	string formItem = this.formatFormUploadHeader (boundary' key' formItems [key]);  	// string.Format(formHeaderTemplate' key' formItems[key]);  	byte[] formItemBytes = System.Text.Encoding.UTF8.GetBytes (formItem);  	reqStream.Write (formItemBytes' 0' formItemBytes.Length);  	this.updateFormUploadEvent (formItems [key].Length' formItems [key].Length' (float)((float)this.formEventArgs.CurrentBytesWritten / formItemBytes.Length) * 100);  	itemsCompleted++;  	formFieldsCompleted++;  	this.OnFormFieldUploadProgress (formEventArgs);  }  
Magic Number,ApiCore,HttpUploaderFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\HttpUploaderFactory.cs,Upload,The following statement contains a magic number: this.updateFormUploadEvent (formItems [key].Length' formItems [key].Length' (float)((float)this.formEventArgs.CurrentBytesWritten / formItemBytes.Length) * 100);  
Magic Number,ApiCore,CommonUtils,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Utils\CommonUtils.cs,FromUnixTime,The following statement contains a magic number: return new DateTime (1970' 1' 1' 0' 0' 0).AddSeconds (time);  
Magic Number,ApiCore,CommonUtils,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Utils\CommonUtils.cs,FromUnixTime,The following statement contains a magic number: return new DateTime (1970' 1' 1' 0' 0' 0).AddSeconds (Convert.ToDouble (time));  
Magic Number,ApiCore,CommonUtils,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Utils\CommonUtils.cs,FromUnixTime,The following statement contains a magic number: return new DateTime (1970' 1' 1' 0' 0' 0).AddSeconds (Convert.ToDouble (time));  
Magic Number,ApiCore.Utils.Authorization,OAuthHidden,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Utils\Authorization\OAuth\OAuthHidden.cs,GetFormParams,The following statement contains a magic number: foreach (Match match in foundFormParams)  	formParams [match.Groups [1].Value] = match.Groups [2].Value;  
Magic Number,ApiCore.Utils.Authorization,OAuthHidden,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Utils\Authorization\OAuth\OAuthHidden.cs,GetFormParams,The following statement contains a magic number: formParams [match.Groups [1].Value] = match.Groups [2].Value;  
Magic Number,ApiCore.Utils,EntityBuilder,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Utils\EntityBuilder.cs,FromUnixTime,The following statement contains a magic number: return new DateTime (1970' 1' 1' 0' 0' 0).AddSeconds (Convert.ToDouble (time));  
Magic Number,ApiCore.Messages,LongPollServerConnection,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Messages\LongPollServerConnection.cs,doGetSendRequest,The following statement contains a magic number: this.request.Timeout = this.WaitTime * 1000;  
Magic Number,ApiCore.Messages,Message,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Messages\Message.cs,ToString,The following statement contains a magic number: return this.Title + " " + ((this.Body.Length > 20) ? this.Body.Substring (0' 20) : this.Body);  
Magic Number,ApiCore.Messages,Message,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Messages\Message.cs,ToString,The following statement contains a magic number: return this.Title + " " + ((this.Body.Length > 20) ? this.Body.Substring (0' 20) : this.Body);  
Magic Number,ApiCore.Photos,PhotoUploadedInfo,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Photos\PhotoUploadedInfo.cs,PhotoUploadedInfo,The following statement contains a magic number: foreach (string str in json) {  	string[] kv = r.Split (str);  	h [kv [0]] = kv [2];  }  
Magic Number,ApiCore.Photos,PhotoUploadedInfo,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Photos\PhotoUploadedInfo.cs,PhotoUploadedInfo,The following statement contains a magic number: h [kv [0]] = kv [2];  
Missing Default,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,ParseValue,The following switch statement is missing a default case: switch (LookAhead (json' index)) {  case JSON.TOKEN_STRING:  	return ParseString (json' ref index' ref success);  case JSON.TOKEN_NUMBER:  	return ParseNumber (json' ref index' ref success);  case JSON.TOKEN_CURLY_OPEN:  	return ParseObject (json' ref index' ref success);  case JSON.TOKEN_SQUARED_OPEN:  	return ParseArray (json' ref index' ref success);  case JSON.TOKEN_TRUE:  	NextToken (json' ref index);  	return true;  case JSON.TOKEN_FALSE:  	NextToken (json' ref index);  	return false;  case JSON.TOKEN_NULL:  	NextToken (json' ref index);  	return null;  case JSON.TOKEN_NONE:  	break;  }  
Missing Default,Procurios.Public,JSON,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\3rdParty\JSON.cs,NextToken,The following switch statement is missing a default case: switch (c) {  case '{':  	return JSON.TOKEN_CURLY_OPEN;  case '}':  	return JSON.TOKEN_CURLY_CLOSE;  case '[':  	return JSON.TOKEN_SQUARED_OPEN;  case ']':  	return JSON.TOKEN_SQUARED_CLOSE;  case ''':  	return JSON.TOKEN_COMMA;  case '"':  	return JSON.TOKEN_STRING;  case '0':  case '1':  case '2':  case '3':  case '4':  case '5':  case '6':  case '7':  case '8':  case '9':  case '-':  	return JSON.TOKEN_NUMBER;  case ':':  	return JSON.TOKEN_COLON;  }  
Missing Default,ApiCore,MessageAttachment,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\MessageAttachment.cs,AttachmentTypeToString,The following switch statement is missing a default case: switch (this.Type) {  case AttachmentType.Application: {  	return "app";  }  case AttachmentType.Audio: {  	return "audio";  }  case AttachmentType.Checkin: {  	return "checkin";  }  case AttachmentType.Document: {  	return "doc";  }  case AttachmentType.Graffiti: {  	return "graffiti";  }  case AttachmentType.Note: {  	return "note";  }  case AttachmentType.Photo: {  	return "photo";  }  case AttachmentType.Poll: {  	return "poll";  }  case AttachmentType.PostedPhoto: {  	return "posted_photo";  }  case AttachmentType.Share: {  	return "share";  }  case AttachmentType.Url: {  	return "link";  }  case AttachmentType.Video: {  	return "video";  }  }  
Missing Default,ApiCore,AttachmentFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Common\Factories\AttachmentFactory.cs,GetAttachment,The following switch statement is missing a default case: switch (type) {  case AttachmentType.Application: {  	AttachmentApplication a = new AttachmentApplication ();  	a.Id = XmlUtils.Int ("app_id");  	a.Name = XmlUtils.String ("app_name");  	a.PictureUrl = XmlUtils.String ("src_big");  	a.ThumbnailUrl = XmlUtils.String ("src");  	return a;  }  case AttachmentType.Audio: {  	AttachmentAudio a = new AttachmentAudio ();  	a.Id = XmlUtils.Int ("aid");  	a.OwnerId = XmlUtils.Int ("owner_id");  	a.Performer = XmlUtils.String ("performer");  	a.Title = XmlUtils.String ("title");  	a.Duration = XmlUtils.Int ("duration");  	return a;  }  case AttachmentType.Checkin: {  	break;  }  case AttachmentType.Graffiti: {  	AttachmentGraffiti a = new AttachmentGraffiti ();  	a.Id = XmlUtils.Int ("gid");  	a.OwnerId = XmlUtils.Int ("owner_id");  	a.PictureUrl = XmlUtils.String ("src_big");  	a.ThumbnailUrl = XmlUtils.String ("src");  	return a;  }  case AttachmentType.Note: {  	AttachmentNote a = new AttachmentNote ();  	a.Id = XmlUtils.Int ("nid");  	a.OwnerId = XmlUtils.Int ("owner_id");  	a.Title = XmlUtils.String ("title");  	a.CommentsCount = XmlUtils.Int ("ncom");  	return a;  }  case AttachmentType.Photo: {  	AttachmentPhoto a = new AttachmentPhoto ();  	a.Id = XmlUtils.Int ("pid");  	a.OwnerId = XmlUtils.Int ("owner_id");  	a.PictureUrl = XmlUtils.String ("src_big");  	a.ThumbnailUrl = XmlUtils.String ("src");  	return a;  }  case AttachmentType.PostedPhoto: {  	AttachmentPhoto a = new AttachmentPhoto ();  	a.Id = XmlUtils.Int ("pid");  	a.OwnerId = XmlUtils.Int ("owner_id");  	a.PictureUrl = XmlUtils.String ("src_big");  	a.ThumbnailUrl = XmlUtils.String ("src");  	return a;  }  case AttachmentType.Poll: {  	AttachmentPoll a = new AttachmentPoll ();  	a.Question = XmlUtils.String ("question");  	return a;  }  case AttachmentType.Share: {  	break;  }  case AttachmentType.Video: {  	AttachmentVideo a = new AttachmentVideo ();  	a.Id = XmlUtils.Int ("vid");  	a.OwnerId = XmlUtils.Int ("owner_id");  	a.Title = XmlUtils.String ("title");  	a.Duration = XmlUtils.Int ("duration");  	return a;  }  case AttachmentType.Url: {  	AttachmentUrl a = new AttachmentUrl ();  	a.Url = XmlUtils.String ("url");  	a.Title = XmlUtils.String ("title");  	a.Description = XmlUtils.String ("description");  	a.ThumbnailUrl = XmlUtils.String ("image_src");  	return a;  }  }  
Missing Default,ApiCore.Utils.Authorization,OAuthHidden,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Utils\Authorization\OAuth\OAuthHidden.cs,GetSessionData,The following switch statement is missing a default case: switch (fragmentNameValue [0]) {  case "access_token":  	SessionData.Token = fragmentNameValue [1];  	break;  case "expires_in":  	SessionData.Expire = int.Parse (fragmentNameValue [1]);  	break;  case "user_id":  	SessionData.UserId = int.Parse (fragmentNameValue [1]);  	break;  }  
Missing Default,ApiCore.Messages,LongPollServerConnection,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Messages\LongPollServerConnection.cs,run,The following switch statement is missing a default case: switch (e.Status) {  case System.Net.WebExceptionStatus.Timeout: {  	if (!this.stopPending) {  		this.run (state);  	}  	break;  }  }  
Missing Default,ApiCore.Messages,MessagesFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Messages\MessagesFactory.cs,buildMessagesList,The following switch statement is missing a default case: switch (type) {  case MessageType.Incoming:  	this.IncomingMessagesCount = msgCount;  	break;  case MessageType.Outgoing:  	this.OutgoingMessagesCount = msgCount;  	break;  }  
Missing Default,ApiCore.Messages,MessagesFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Messages\MessagesFactory.cs,Get,The following switch statement is missing a default case: switch (type) {  case MessageType.History:  	return this.buildMessagesList (x' MessageType.History);  //break;  case MessageType.Incoming:  	return this.buildMessagesList (x' MessageType.Incoming);  //break;  case MessageType.Outgoing:  	return this.buildMessagesList (x' MessageType.Outgoing);  //break;  }  
Missing Default,ApiCore.Wall,WallFactory,C:\repos\kholodovitch_vk_winamp\src\api\ApiCore\Wrappers\Wall\WallFactory.cs,getAttachment,The following switch statement is missing a default case: switch (attachmentType) {  case "app": {  	attachment.Type = AttachmentType.Application;  	break;  }  case "graffiti": {  	attachment.Type = AttachmentType.Graffiti;  	break;  }  case "video": {  	attachment.Type = AttachmentType.Video;  	break;  }  case "audio": {  	attachment.Type = AttachmentType.Audio;  	break;  }  case "doc": {  	attachment.Type = AttachmentType.Document;  	break;  }  case "photo": {  	attachment.Type = AttachmentType.Photo;  	break;  }  case "posted_photo": {  	attachment.Type = AttachmentType.PostedPhoto;  	break;  }  case "note": {  	attachment.Type = AttachmentType.Note;  	break;  }  case "poll": {  	attachment.Type = AttachmentType.Poll;  	break;  }  case "link": {  	attachment.Type = AttachmentType.Url;  	break;  }  case "checkin": {  	attachment.Type = AttachmentType.Checkin;  	break;  }  case "share": {  	attachment.Type = AttachmentType.Share;  	break;  }  }  
