Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MongoMembership.Providers,MongoMembershipProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoMembershipProvider.cs,CreateUser,Cyclomatic complexity of the method is 9
Long Parameter List,MongoMembership.Mongo,IMongoGateway,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Mongo\IMongoGateway.cs,GetAllByEmail,The method has 5 parameters. Parameters: applicationName' email' pageIndex' pageSize' totalRecords
Long Parameter List,MongoMembership.Mongo,IMongoGateway,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Mongo\IMongoGateway.cs,GetAllByUserName,The method has 5 parameters. Parameters: applicationName' username' pageIndex' pageSize' totalRecords
Long Parameter List,MongoMembership.Mongo,IMongoGateway,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Mongo\IMongoGateway.cs,GetAllAnonymByUserName,The method has 5 parameters. Parameters: applicationName' username' pageIndex' pageSize' totalRecords
Long Parameter List,MongoMembership.Mongo,IMongoGateway,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Mongo\IMongoGateway.cs,GetAllInactiveSince,The method has 5 parameters. Parameters: applicationName' inactiveDate' pageIndex' pageSize' totalRecords
Long Parameter List,MongoMembership.Mongo,IMongoGateway,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Mongo\IMongoGateway.cs,GetAllInactiveAnonymSince,The method has 5 parameters. Parameters: applicationName' inactiveDate' pageIndex' pageSize' totalRecords
Long Parameter List,MongoMembership.Mongo,IMongoGateway,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Mongo\IMongoGateway.cs,GetInactiveSinceByUserName,The method has 6 parameters. Parameters: applicationName' username' userInactiveSinceDate' pageIndex' pageSize' totalRecords
Long Parameter List,MongoMembership.Mongo,IMongoGateway,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Mongo\IMongoGateway.cs,GetInactiveAnonymSinceByUserName,The method has 6 parameters. Parameters: applicationName' username' userInactiveSinceDate' pageIndex' pageSize' totalRecords
Long Parameter List,MongoMembership.Mongo,MongoGateway,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Mongo\MongoGateway.cs,GetAllByEmail,The method has 5 parameters. Parameters: applicationName' email' pageIndex' pageSize' totalRecords
Long Parameter List,MongoMembership.Mongo,MongoGateway,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Mongo\MongoGateway.cs,GetAllByUserName,The method has 5 parameters. Parameters: applicationName' username' pageIndex' pageSize' totalRecords
Long Parameter List,MongoMembership.Mongo,MongoGateway,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Mongo\MongoGateway.cs,GetAllAnonymByUserName,The method has 5 parameters. Parameters: applicationName' username' pageIndex' pageSize' totalRecords
Long Parameter List,MongoMembership.Mongo,MongoGateway,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Mongo\MongoGateway.cs,GetAllInactiveSince,The method has 5 parameters. Parameters: applicationName' inactiveDate' pageIndex' pageSize' totalRecords
Long Parameter List,MongoMembership.Mongo,MongoGateway,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Mongo\MongoGateway.cs,GetAllInactiveAnonymSince,The method has 5 parameters. Parameters: applicationName' inactiveDate' pageIndex' pageSize' totalRecords
Long Parameter List,MongoMembership.Mongo,MongoGateway,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Mongo\MongoGateway.cs,GetInactiveSinceByUserName,The method has 6 parameters. Parameters: applicationName' username' userInactiveSinceDate' pageIndex' pageSize' totalRecords
Long Parameter List,MongoMembership.Mongo,MongoGateway,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Mongo\MongoGateway.cs,GetInactiveAnonymSinceByUserName,The method has 6 parameters. Parameters: applicationName' username' userInactiveSinceDate' pageIndex' pageSize' totalRecords
Long Parameter List,MongoMembership.Providers,MongoMembershipProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoMembershipProvider.cs,CreateUser,The method has 8 parameters. Parameters: username' password' email' passwordQuestion' passwordAnswer' isApproved' providerUserKey' status
Long Parameter List,MongoMembership.Providers,MongoProfileProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoProfileProvider.cs,FindInactiveProfilesByUserName,The method has 6 parameters. Parameters: authenticationOption' usernameToMatch' userInactiveSinceDate' pageIndex' pageSize' totalRecords
Long Parameter List,MongoMembership.Providers,MongoProfileProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoProfileProvider.cs,FindProfilesByUserName,The method has 5 parameters. Parameters: authenticationOption' usernameToMatch' pageIndex' pageSize' totalRecords
Long Parameter List,MongoMembership.Providers,MongoProfileProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoProfileProvider.cs,GetAllInactiveProfiles,The method has 5 parameters. Parameters: authenticationOption' userInactiveSinceDate' pageIndex' pageSize' totalRecords
Long Identifier,MongoMembership.Providers,MongoMembershipProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoMembershipProvider.cs,,The length of the parameter minRequiredNonAlphanumericCharacters is 36.
Long Identifier,MongoMembership.Providers,MongoMembershipProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoMembershipProvider.cs,,The length of the parameter passwordStrengthRegularExpression is 33.
Long Identifier,MongoMembership.Providers,MongoProfileProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoProfileProvider.cs,GetPropertyValues,The length of the parameter settingsPropertyValueCollection is 31.
Long Statement,MongoMembership.Providers,MongoMembershipProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoMembershipProvider.cs,Initialize,The length of the statement  "                throw new ProviderException("Configured settings are invalid: Hashed passwords cannot be retrieved. Either set the password format to different type' or set enablePasswordRetrieval to false."); " is 193.
Long Statement,MongoMembership.Providers,MongoMembershipProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoMembershipProvider.cs,ResetPassword,The length of the statement  "                throw new NotSupportedException("This provider is not configured to allow password resets. To enable password reset' set enablePasswordReset to \"true\" in the configuration file."); " is 182.
Long Statement,MongoMembership.Providers,MongoProfileProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoProfileProvider.cs,FindInactiveProfilesByUserName,The length of the statement  "                    users = mongoGateway.GetInactiveAnonymSinceByUserName(ApplicationName' usernameToMatch' userInactiveSinceDate' pageIndex' pageSize' out totalRecords); " is 150.
Long Statement,MongoMembership.Providers,MongoProfileProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoProfileProvider.cs,FindInactiveProfilesByUserName,The length of the statement  "                    users = mongoGateway.GetInactiveSinceByUserName(ApplicationName' usernameToMatch' userInactiveSinceDate' pageIndex' pageSize' out totalRecords); " is 144.
Long Statement,MongoMembership.Providers,MongoProfileProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoProfileProvider.cs,GetAllInactiveProfiles,The length of the statement  "                    users = mongoGateway.GetAllInactiveAnonymSince(ApplicationName' userInactiveSinceDate' pageIndex' pageSize' out totalRecords); " is 126.
Long Statement,MongoMembership.Providers,MongoProfileProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoProfileProvider.cs,GetAllInactiveProfiles,The length of the statement  "                    users = mongoGateway.GetAllInactiveSince(ApplicationName' userInactiveSinceDate' pageIndex' pageSize' out totalRecords); " is 120.
Long Statement,MongoMembership,User,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\User.cs,ToMembershipUser,The length of the statement  "            return new MembershipUser(providerName' Username' Id' Email' PasswordQuestion' Comment' IsApproved' IsLockedOut' CreateDate' LastLoginDate' LastActivityDate' LastPasswordChangedDate' LastLockedOutDate); " is 202.
Magic Number,MongoMembership.Providers,MongoMembershipProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoMembershipProvider.cs,Initialize,The following statement contains a magic number: maxInvalidPasswordAttempts = config["maxInvalidPasswordAttempts"].ConvertOrDefault(5);
Magic Number,MongoMembership.Providers,MongoMembershipProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoMembershipProvider.cs,Initialize,The following statement contains a magic number: minRequiredPasswordLength = config["minRequiredPasswordLength"].ConvertOrDefault(7);
Magic Number,MongoMembership.Providers,MongoMembershipProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoMembershipProvider.cs,Initialize,The following statement contains a magic number: passwordAttemptWindow = config["passwordAttemptWindow"].ConvertOrDefault(10);
Magic Number,MongoMembership.Providers,MongoMembershipProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoMembershipProvider.cs,CreateUser,The following statement contains a magic number: var buffer = new byte[16];
Magic Number,MongoMembership.Providers,MongoMembershipProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoMembershipProvider.cs,CreateUser,The following statement contains a magic number: var user = new User              {                  Id = providerUserKey.ToString()'                  ApplicationName = ApplicationName'                  CreateDate = createDate'                  EmailLowercase = email?.ToLowerInvariant()'                  Email = email'                  FailedPasswordAnswerAttemptCount = 0'                  FailedPasswordAnswerAttemptWindowStart = createDate'                  FailedPasswordAttemptCount = 0'                  FailedPasswordAttemptWindowStart = createDate'                  IsApproved = isApproved'                  IsDeleted = false'                  IsLockedOut = false'                  LastActivityDate = createDate'                  LastLockedOutDate = new DateTime(1970' 1' 1)'                  LastLoginDate = createDate'                  LastPasswordChangedDate = createDate'                  Password = Encode(password' passwordSalt)'                  PasswordAnswer = Encode(passwordAnswer' passwordSalt)'                  PasswordQuestion = passwordQuestion'                  PasswordSalt = passwordSalt'                  UsernameLowercase = username?.ToLowerInvariant()'                  Username = username              };
Magic Number,MongoMembership.Providers,MongoMembershipProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoMembershipProvider.cs,DecodePassword,The following statement contains a magic number: switch (PasswordFormat)              {                  case MembershipPasswordFormat.Clear:                      return password;                    case MembershipPasswordFormat.Hashed:                      throw new ProviderException("Hashed passwords cannot be decoded.");                    default:                      var passwordBytes = Convert.FromBase64String(password);                      var decryptedBytes = DecryptPassword(passwordBytes);                      return decryptedBytes?.ToUnicodeString(16);              }
Magic Number,MongoMembership,User,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\User.cs,Unlock,The following statement contains a magic number: FailedPasswordAttemptWindowStart = new DateTime(1970' 1' 1);
Magic Number,MongoMembership,User,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\User.cs,Unlock,The following statement contains a magic number: FailedPasswordAnswerAttemptWindowStart = new DateTime(1970' 1' 1);
Magic Number,MongoMembership,User,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\User.cs,Unlock,The following statement contains a magic number: LastLockedOutDate = new DateTime(1970' 1' 1);
Missing Default,MongoMembership.Providers,MongoProfileProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoProfileProvider.cs,FindInactiveProfilesByUserName,The following switch statement is missing a default case: switch (authenticationOption)              {                  case ProfileAuthenticationOption.Anonymous:                      users = mongoGateway.GetInactiveAnonymSinceByUserName(ApplicationName' usernameToMatch' userInactiveSinceDate' pageIndex' pageSize' out totalRecords);                      break;                  case ProfileAuthenticationOption.Authenticated:                  case ProfileAuthenticationOption.All:                      users = mongoGateway.GetInactiveSinceByUserName(ApplicationName' usernameToMatch' userInactiveSinceDate' pageIndex' pageSize' out totalRecords);                      break;              }
Missing Default,MongoMembership.Providers,MongoProfileProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoProfileProvider.cs,FindProfilesByUserName,The following switch statement is missing a default case: switch (authenticationOption)              {                  case ProfileAuthenticationOption.Anonymous:                      users = mongoGateway.GetAllAnonymByUserName(ApplicationName' usernameToMatch' pageIndex' pageSize' out totalRecords);                      break;                  case ProfileAuthenticationOption.Authenticated:                  case ProfileAuthenticationOption.All:                      users = mongoGateway.GetAllByUserName(ApplicationName' usernameToMatch' pageIndex' pageSize' out totalRecords);                      break;              }
Missing Default,MongoMembership.Providers,MongoProfileProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoProfileProvider.cs,GetAllInactiveProfiles,The following switch statement is missing a default case: switch (authenticationOption)              {                  case ProfileAuthenticationOption.Anonymous:                      users = mongoGateway.GetAllInactiveAnonymSince(ApplicationName' userInactiveSinceDate' pageIndex' pageSize' out totalRecords);                      break;                  case ProfileAuthenticationOption.Authenticated:                  case ProfileAuthenticationOption.All:                      users = mongoGateway.GetAllInactiveSince(ApplicationName' userInactiveSinceDate' pageIndex' pageSize' out totalRecords);                      break;              }
Missing Default,MongoMembership.Providers,MongoProfileProvider,D:\research\architectureSmells\repos\FoC-_MongoMembership\MongoMembership\Providers\MongoProfileProvider.cs,GetAllProfiles,The following switch statement is missing a default case: switch (authenticationOption)              {                  case ProfileAuthenticationOption.Anonymous:                      users = mongoGateway.GetAllAnonym(ApplicationName' pageIndex' pageSize' out totalRecords);                      break;                  case ProfileAuthenticationOption.Authenticated:                  case ProfileAuthenticationOption.All:                      users = mongoGateway.GetAll(ApplicationName' pageIndex' pageSize' out totalRecords);                      break;              }
