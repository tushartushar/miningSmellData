Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ITS.MiniCMS.Worker,Program,C:\repos\marcoparenzan_TSAIM2013-Core\ITS.MiniCMS.Worker\Program.cs,Main,The length of the statement  "	var storageCredentials = new StorageCredentials (ConfigurationManager.AppSettings ["storageName"]' ConfigurationManager.AppSettings ["storageKey"]); " is 148.
Magic Number,ITS.MiniCMS.Worker,Program,C:\repos\marcoparenzan_TSAIM2013-Core\ITS.MiniCMS.Worker\Program.cs,Main,The following statement contains a magic number: while (true) {  	var message = uploadImageQueue.GetMessage ();  	if (message == null)  		break;  	var viewModel = JsonConvert.DeserializeObject<UploadImageViewModel> (message.AsString);  	var blob = imagesContainer.GetBlockBlobReference (viewModel.Name);  	var ms = new MemoryStream ();  	blob.DownloadToStream (ms);  	var imageTableEntity = new ImageTableEntity {  		PartitionKey = "default"'  		RowKey = Guid.NewGuid ().ToString ()'  		Name = viewModel.Name'  		Description = viewModel.Description'  		Created = DateTime.Now'  		Size = (int)ms.Length  	};  	// process message  	var insertImageOperation = TableOperation.Insert (imageTableEntity);  	imagesTable.Execute (insertImageOperation);  	ms.Seek (0' SeekOrigin.Begin);  	var image = Image.FromStream (ms);  	var targetX = 64;  	var targetY = (int)(image.Height * targetX / image.Width);  	var thumbnail = new Bitmap (targetX' targetY);  	using (Graphics graphicsHandle = Graphics.FromImage (thumbnail)) {  		graphicsHandle.InterpolationMode = InterpolationMode.HighQualityBicubic;  		graphicsHandle.DrawImage (image' 0' 0' targetX' targetY);  	}  	var thumbnailMS = new MemoryStream ();  	thumbnail.Save (thumbnailMS' ImageFormat.Png);  	thumbnailMS.Seek (0' SeekOrigin.Begin);  	var thumbNailBlob = thumbnamilsContainer.GetBlockBlobReference (imageTableEntity.RowKey);  	thumbNailBlob.UploadFromStream (thumbnailMS);  	uploadImageQueue.DeleteMessage (message);  }  
