Implementation smell,Namespace,Class,File,Method,Description
Long Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BinInit,The method has 103 lines of code.
Long Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,LangInit,The method has 266 lines of code.
Long Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The method has 118 lines of code.
Long Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The method has 258 lines of code.
Long Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button22_Click,The method has 107 lines of code.
Long Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The method has 145 lines of code.
Complex Method,MTFAT,About,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\About.cs,LangInit,Cyclomatic complexity of the method is 9
Complex Method,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,LangInit,Cyclomatic complexity of the method is 19
Complex Method,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,Cyclomatic complexity of the method is 13
Complex Method,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,LangInit,Cyclomatic complexity of the method is 23
Complex Method,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button2_Click,Cyclomatic complexity of the method is 9
Complex Method,MTFAT,Settings,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Settings.cs,Init,Cyclomatic complexity of the method is 16
Complex Method,MTFAT,Settings,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Settings.cs,comboBox1_SelectedIndexChanged,Cyclomatic complexity of the method is 8
Complex Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BinInit,Cyclomatic complexity of the method is 49
Complex Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ProjectInit,Cyclomatic complexity of the method is 8
Complex Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,LangInit,Cyclomatic complexity of the method is 86
Complex Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ProjectEditRM,Cyclomatic complexity of the method is 9
Complex Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,Cyclomatic complexity of the method is 22
Complex Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,Cyclomatic complexity of the method is 15
Complex Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FromPhone,Cyclomatic complexity of the method is 13
Complex Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,Cyclomatic complexity of the method is 8
Complex Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,Cyclomatic complexity of the method is 29
Complex Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,adbw,Cyclomatic complexity of the method is 10
Complex Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,adblog,Cyclomatic complexity of the method is 14
Complex Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button29_Click,Cyclomatic complexity of the method is 10
Complex Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button30_Click,Cyclomatic complexity of the method is 10
Complex Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button22_Click,Cyclomatic complexity of the method is 40
Complex Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,Cyclomatic complexity of the method is 11
Complex Method,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,checkedListBox1_DragDrop,Cyclomatic complexity of the method is 43
Long Parameter List,MTFAT,Message,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Message.cs,Message,The method has 9 parameters.
Long Parameter List,MTFAT,IniFile,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\ini.cs,GetPrivateProfileString,The method has 6 parameters.
Long Statement,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,The length of the statement  "		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2)); " is 131.
Long Statement,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,The length of the statement  "					BatFile.WriteLine ("adb push " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\prop\"" + " /system/build.prop"); " is 120.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button2_Click,The length of the statement  "	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant %username%:F /t"); " is 352.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button2_Click,The length of the statement  "	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant все:F"); " is 328.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button2_Click,The length of the statement  "	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant все:F /t"); " is 345.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button2_Click,The length of the statement  "	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant all:F"); " is 328.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button2_Click,The length of the statement  "	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant all:F /t"); " is 345.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button2_Click,The length of the statement  "	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant %username%:F"); " is 335.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button2_Click,The length of the statement  "	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2)); " is 131.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button6_Click,The length of the statement  "		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2)); " is 131.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button4_Click,The length of the statement  "			Directory.Move ("Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())' "Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())); " is 193.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button4_Click,The length of the statement  "			File.Move ("Bin\\new_image.img"' "Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + DateTime.Now.ToString ("_dd.MM.yy_HH-mm-ss") + ".img"); " is 185.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button4_Click,The length of the statement  "	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2)); " is 131.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button1_Click,The length of the statement  "		perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant %username%:F /t"); " is 352.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button1_Click,The length of the statement  "		//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant все:F"); " is 328.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button1_Click,The length of the statement  "		perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant все:F /t"); " is 345.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button1_Click,The length of the statement  "		//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant all:F"); " is 328.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button1_Click,The length of the statement  "		perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant all:F /t"); " is 345.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button1_Click,The length of the statement  "		//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant %username%:F"); " is 335.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button1_Click,The length of the statement  "			Directory.Delete ("Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())' true); " is 120.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button1_Click,The length of the statement  "		Directory.Move ("Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())' "Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())); " is 193.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button1_Click,The length of the statement  "		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2)); " is 131.
Long Statement,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button3_Click,The length of the statement  "	if (Directory.Exists ("Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())) == true) " is 126.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BinInit,The length of the statement  "		File.WriteAllBytes ("Projects\\IQ446_4.2.1_BaiduYIOS_from_N828.fat"' MFAT.Properties.Resources.IQ446_4_2_1_BaiduYIOS_from_N828); " is 128.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BinInit,The length of the statement  "		File.WriteAllBytes ("Projects\\IQ446_4.2.1_StockROM_from_Acer_E2.fat"' MFAT.Properties.Resources.IQ446_4_2_1_StockROM_from_Acer_E2); " is 132.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BinInit,The length of the statement  "		File.WriteAllBytes ("Projects\\LewaOS_5.1_no crash browsers.IQ446_4.2.1_by_Galaxy_Ace_ICS.fat"' MFAT.Properties.Resources.LewaOS_5_1_no_crash_browsers_IQ446_4_2_1_by_Galaxy_Ace_ICS); " is 182.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The length of the statement  "				BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y"); " is 183.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The length of the statement  "									CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D); " is 135.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The length of the statement  "									File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true); " is 137.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The length of the statement  "										CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"); " is 143.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The length of the statement  "								M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2)); " is 128.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The length of the statement  "				MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2)); " is 131.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The length of the statement  "				M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2)); " is 128.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The length of the statement  "			win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\system\""; " is 128.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The length of the statement  "								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D); " is 135.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The length of the statement  "								File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true); " is 137.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The length of the statement  "							M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2)); " is 128.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The length of the statement  "				MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2)); " is 131.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The length of the statement  "						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D); " is 135.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The length of the statement  "						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true); " is 137.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The length of the statement  "					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2)); " is 128.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The length of the statement  "	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2)); " is 131.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FromPhone,The length of the statement  "				BatFile.WriteLine ("adb pull /data/tmp/uboot.bin " + " \"WorkDIR/" + comboBox1.SelectedItem + "/" + L + "/" + D + "\""); " is 120.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FromPhone,The length of the statement  "	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2)); " is 131.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The length of the statement  "		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootP.img"' true); " is 135.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The length of the statement  "		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2)); " is 128.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The length of the statement  "		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2)); " is 128.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The length of the statement  "		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootO.img"' true); " is 135.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The length of the statement  "	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\bootO" + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\bootO" + "\"" + " /grant %username%:F /t"); " is 218.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The length of the statement  "	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\bootO" + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\bootO" + "\"" + " /grant все:F"); " is 198.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The length of the statement  "	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\bootO" + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\bootO" + "\"" + " /grant все:F /t"); " is 211.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The length of the statement  "	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\bootO" + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\bootO" + "\"" + " /grant all:F"); " is 198.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The length of the statement  "	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\bootO" + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\bootO" + "\"" + " /grant all:F /t"); " is 211.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The length of the statement  "	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\bootO" + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\bootO" + "\"" + " /grant %username%:F"); " is 205.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The length of the statement  "	per.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\bootP" + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory () + "\\Bin\\bootP" + "\"" + " /grant все:F"); " is 198.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The length of the statement  "	per.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\bootP" + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\bootP" + "\"" + " /grant все:F /t"); " is 210.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The length of the statement  "	per.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\bootP" + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory () + "\\Bin\\bootP" + "\"" + " /grant all:F"); " is 198.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The length of the statement  "	per.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\bootP" + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\bootP" + "\"" + " /grant all:F /t"); " is 210.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The length of the statement  "	per.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\bootP" + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory () + "\\Bin\\bootP" + "\"" + " /grant %username%:F"); " is 205.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The length of the statement  "	per.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\bootP" + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\bootP" + "\"" + " /grant %username%:F /t"); " is 217.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The length of the statement  "	MF.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MF.Width / 2)' this.Location.Y + (this.Height / 2) - (MF.Height / 2)); " is 131.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootPack,The length of the statement  "		MF.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MF.Width / 2)' this.Location.Y + (this.Height / 2) - (MF.Height / 2)); " is 131.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootPack,The length of the statement  "		MD.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MD.Width / 2)' this.Location.Y + (this.Height / 2) - (MD.Height / 2)); " is 131.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,SignROM,The length of the statement  "			File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (openFileDialog2.FileName) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName)); " is 206.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,SignROM,The length of the statement  "			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2)); " is 131.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,SignROM,The length of the statement  "				startInfo.Arguments = @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName) + "\""; " is 158.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The length of the statement  "		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2)); " is 128.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The length of the statement  "		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2)); " is 128.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The length of the statement  "			File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootP.img"' true); " is 135.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The length of the statement  "			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2)); " is 128.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The length of the statement  "			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2)); " is 128.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The length of the statement  "			File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootO.img"' true); " is 135.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The length of the statement  "		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == false && Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\META-INF") == false) { " is 189.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The length of the statement  "			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2)); " is 128.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The length of the statement  "			if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == true || Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF") == true) { " is 182.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The length of the statement  "			File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img"' true); " is 128.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The length of the statement  "			using (StreamWriter sw = new StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop"' true' Encoding.ASCII)) { " is 134.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The length of the statement  "		System.IO.StreamWriter swr = new System.IO.StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data\PortProgect.fat"); " is 134.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The length of the statement  "				File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (h) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + h); " is 141.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The length of the statement  "		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2)); " is 131.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button2_Click,The length of the statement  "	F3.SetDesktopLocation (this.Location.X + (this.Width / 2) - (F3.Width / 2)' this.Location.Y + (this.Height / 2) - (F3.Height / 2)); " is 131.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button21_Click,The length of the statement  "	ab.SetDesktopLocation (this.Location.X + (this.Width / 2) - (ab.Width / 2)' this.Location.Y + (this.Height / 2) - (ab.Height / 2)); " is 131.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button9_Click,The length of the statement  "	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF\com\google\android\updater-script") == true) " is 122.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button10_Click,The length of the statement  "	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\META-INF\com\google\android\updater-script") == true) " is 122.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The length of the statement  "			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2)); " is 128.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The length of the statement  "		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2)); " is 128.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button26_Click,The length of the statement  "	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2)); " is 131.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button22_Click,The length of the statement  "	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2)); " is 128.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button22_Click,The length of the statement  "						checkedListBox1.Items.Add (file.FullName.Replace (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles" + "\\"' "").Replace (@"\"' "/")); " is 136.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button22_Click,The length of the statement  "							if (ImportList.SelectedPath.EndsWith ("app") || ImportList.SelectedPath.EndsWith ("bin") || ImportList.SelectedPath.EndsWith ("mobile_toolkit") || ImportList.SelectedPath.EndsWith ("etc") || ImportList.SelectedPath.EndsWith ("fonts") || ImportList.SelectedPath.EndsWith ("framework") || ImportList.SelectedPath.EndsWith ("lib") || ImportList.SelectedPath.EndsWith ("data") || ImportList.SelectedPath.EndsWith ("media") || ImportList.SelectedPath.EndsWith ("usr") || ImportList.SelectedPath.EndsWith ("vendor") || ImportList.SelectedPath.EndsWith ("xbin")) { " is 557.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button22_Click,The length of the statement  "									checkedListBox1.Items.Add ("system/framework" + file.FullName.Replace (ImportList.SelectedPath' "").Replace (@"\"' "/")); " is 121.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button22_Click,The length of the statement  "									checkedListBox1.Items.Add ("system/mobile_toolkit" + file.FullName.Replace (ImportList.SelectedPath' "").Replace (@"\"' "/")); " is 126.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button22_Click,The length of the statement  "							if (ImportList.SelectedPath.EndsWith ("app") || ImportList.SelectedPath.EndsWith ("bin") || ImportList.SelectedPath.EndsWith ("mobile_toolkit") || ImportList.SelectedPath.EndsWith ("etc") || ImportList.SelectedPath.EndsWith ("fonts") || ImportList.SelectedPath.EndsWith ("framework") || ImportList.SelectedPath.EndsWith ("lib") || ImportList.SelectedPath.EndsWith ("data") || ImportList.SelectedPath.EndsWith ("media") || ImportList.SelectedPath.EndsWith ("usr") || ImportList.SelectedPath.EndsWith ("vendor") || ImportList.SelectedPath.EndsWith ("xbin")) { " is 557.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button22_Click,The length of the statement  "									checkedListBox1.Items.Add ("system/framework" + file.FullName.Replace (ImportList.SelectedPath' "").Replace (@"\"' "/")); " is 121.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button22_Click,The length of the statement  "									checkedListBox1.Items.Add ("system/mobile_toolkit" + file.FullName.Replace (ImportList.SelectedPath' "").Replace (@"\"' "/")); " is 126.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The length of the statement  "	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2)); " is 131.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The length of the statement  "				M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2)); " is 128.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The length of the statement  "						BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\" META-INF -r -y"); " is 163.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The length of the statement  "					BatFile0.WriteLine ("7z.exe a " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\FTtoZIP" + "_" + tmp + ".zip" + "\" \"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\\*"); " is 187.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button34_Click,The length of the statement  "		Process.Start (@"Explorer"' @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\Projects\\" + comboBox1.SelectedItem + ".fat\""); " is 136.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,textBox1_TextChanged,The length of the statement  "	if (textBox1.Text == "Введите название папки или файла с расширением" || textBox1.Text == text1 || textBox1.Text == null) " is 121.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,comboBox2_SelectedIndexChanged,The length of the statement  "	if (textBox1.Text == "Введите название папки или файла с расширением" || textBox1.Text == "Input folder or file name with expansion") " is 133.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,checkedListBox1_DragDrop,The length of the statement  "					if (s [f].EndsWith ("app") || s [f].EndsWith ("bin") || s [f].EndsWith ("mobile_toolkit") || s [f].EndsWith ("etc") || s [f].EndsWith ("fonts") || s [f].EndsWith ("framework") || s [f].EndsWith ("lib") || s [f].EndsWith ("data") || s [f].EndsWith ("media") || s [f].EndsWith ("usr") || s [f].EndsWith ("vendor") || s [f].EndsWith ("xbin")) { " is 341.
Long Statement,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,checkedListBox1_DragDrop,The length of the statement  "				else if (s [f].EndsWith ("app") || s [f].EndsWith ("bin") || s [f].EndsWith ("etc") || s [f].EndsWith ("mobile_toolkit") || s [f].EndsWith ("fonts") || s [f].EndsWith ("framework") || s [f].EndsWith ("lib") || s [f].EndsWith ("data") || s [f].EndsWith ("media") || s [f].EndsWith ("usr") || s [f].EndsWith ("vendor") || s [f].EndsWith ("xbin")) { " is 346.
Long Statement,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,OnPaintBackground,The length of the statement  "			RectangleF rc = new RectangleF (tabRect.Left + ((tabRect.Width / 2) - (textSize.Width / 2))' tabRect.Top + tabRect.Height / 2 - textSize.Height / 2' textSize.Width' textSize.Height); " is 182.
Complex Conditional,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button22_Click,The conditional expression  "ImportList.SelectedPath.EndsWith ("app") || ImportList.SelectedPath.EndsWith ("bin") || ImportList.SelectedPath.EndsWith ("mobile_toolkit") || ImportList.SelectedPath.EndsWith ("etc") || ImportList.SelectedPath.EndsWith ("fonts") || ImportList.SelectedPath.EndsWith ("framework") || ImportList.SelectedPath.EndsWith ("lib") || ImportList.SelectedPath.EndsWith ("data") || ImportList.SelectedPath.EndsWith ("media") || ImportList.SelectedPath.EndsWith ("usr") || ImportList.SelectedPath.EndsWith ("vendor") || ImportList.SelectedPath.EndsWith ("xbin")"  is complex.
Complex Conditional,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button22_Click,The conditional expression  "ImportList.SelectedPath.EndsWith ("app") || ImportList.SelectedPath.EndsWith ("bin") || ImportList.SelectedPath.EndsWith ("mobile_toolkit") || ImportList.SelectedPath.EndsWith ("etc") || ImportList.SelectedPath.EndsWith ("fonts") || ImportList.SelectedPath.EndsWith ("framework") || ImportList.SelectedPath.EndsWith ("lib") || ImportList.SelectedPath.EndsWith ("data") || ImportList.SelectedPath.EndsWith ("media") || ImportList.SelectedPath.EndsWith ("usr") || ImportList.SelectedPath.EndsWith ("vendor") || ImportList.SelectedPath.EndsWith ("xbin")"  is complex.
Complex Conditional,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,checkedListBox1_DragDrop,The conditional expression  "s [f].EndsWith ("app") || s [f].EndsWith ("bin") || s [f].EndsWith ("mobile_toolkit") || s [f].EndsWith ("etc") || s [f].EndsWith ("fonts") || s [f].EndsWith ("framework") || s [f].EndsWith ("lib") || s [f].EndsWith ("data") || s [f].EndsWith ("media") || s [f].EndsWith ("usr") || s [f].EndsWith ("vendor") || s [f].EndsWith ("xbin")"  is complex.
Complex Conditional,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,checkedListBox1_DragDrop,The conditional expression  "s [f].EndsWith ("app") || s [f].EndsWith ("bin") || s [f].EndsWith ("etc") || s [f].EndsWith ("mobile_toolkit") || s [f].EndsWith ("fonts") || s [f].EndsWith ("framework") || s [f].EndsWith ("lib") || s [f].EndsWith ("data") || s [f].EndsWith ("media") || s [f].EndsWith ("usr") || s [f].EndsWith ("vendor") || s [f].EndsWith ("xbin")"  is complex.
Empty Catch Block,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button4_Click,The method has an empty catch block.
Empty Catch Block,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ProjectEditRM,The method has an empty catch block.
Empty Catch Block,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The method has an empty catch block.
Empty Catch Block,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The method has an empty catch block.
Magic Number,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,The following statement contains a magic number: if (richTextBox1.Modified == true) {  	Message MS = new Message (null' str' null' canc' no' yes' null' 3' 0);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	int l = MS.fk;  	switch (l) {  	case 3: {  		using (StreamWriter sw = new StreamWriter (f' false' Encoding.ASCII)) {  			if (f.EndsWith ("\\prop") == true) {  				sw.Write (richTextBox1.Text);  				sw.Close ();  				string Patch = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  				StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (1250));  				BatFile.WriteLine ("@echo off");  				BatFile.WriteLine ("echo Starting ADB...");  				BatFile.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin");  				BatFile.WriteLine ("adb start-server");  				BatFile.WriteLine ("echo connect phone...");  				BatFile.WriteLine ("rem adb wait-for-device");  				BatFile.WriteLine ("adb shell su mount -o rw'remount /system");  				BatFile.WriteLine ("echo Gett files from phone...");  				BatFile.WriteLine ("adb remount");  				BatFile.WriteLine ("adb push " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\prop\"" + " /system/build.prop");  				BatFile.WriteLine ("adb -d shell su -c \"chmod 0644 system/build.prop\"");  				BatFile.Close ();  				Process win = new Process ();  				win.StartInfo.ErrorDialog = true;  				win.StartInfo.FileName = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  				win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				this.Cursor = Cursors.WaitCursor;  				win.Start ();  				win.WaitForExit ();  				this.Cursor = Cursors.Default;  				Process winс = new Process ();  				winс.StartInfo.FileName = "taskkill";  				winс.StartInfo.Arguments = "/F /IM adb.exe";  				winс.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				this.Cursor = Cursors.WaitCursor;  				winс.Start ();  				winс.WaitForExit ();  				this.Cursor = Cursors.Default;  				File.Delete ("Bin\\trace.bat");  				File.Delete ("Utilits\\prop");  			}  			else {  				if (f.EndsWith (".fat")) {  					sw.Write (richTextBox1.Text);  					sw.Close ();  					Form1 main = this.Owner as Form1;  					StreamReader SR = new StreamReader ("WorkDIR\\Temp.fat");  					main.checkedListBox1.Items.Clear ();  					while (SR.EndOfStream == false) {  						main.checkedListBox1.Items.Add (SR.ReadLine ());  					}  					SR.Close ();  					File.Delete ("WorkDIR\\Temp.fat");  				}  				else {  					sw.Write (richTextBox1.Text);  					sw.Close ();  				}  			}  		}  		break;  	}  	case 1: {  		e.Cancel = true;  		break;  	}  	case 2: {  		return;  	}  	}  }  else if (File.Exists ("WorkDIR\\Temp.fat"))  	File.Delete ("WorkDIR\\Temp.fat");  
Magic Number,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,The following statement contains a magic number: if (richTextBox1.Modified == true) {  	Message MS = new Message (null' str' null' canc' no' yes' null' 3' 0);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	int l = MS.fk;  	switch (l) {  	case 3: {  		using (StreamWriter sw = new StreamWriter (f' false' Encoding.ASCII)) {  			if (f.EndsWith ("\\prop") == true) {  				sw.Write (richTextBox1.Text);  				sw.Close ();  				string Patch = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  				StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (1250));  				BatFile.WriteLine ("@echo off");  				BatFile.WriteLine ("echo Starting ADB...");  				BatFile.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin");  				BatFile.WriteLine ("adb start-server");  				BatFile.WriteLine ("echo connect phone...");  				BatFile.WriteLine ("rem adb wait-for-device");  				BatFile.WriteLine ("adb shell su mount -o rw'remount /system");  				BatFile.WriteLine ("echo Gett files from phone...");  				BatFile.WriteLine ("adb remount");  				BatFile.WriteLine ("adb push " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\prop\"" + " /system/build.prop");  				BatFile.WriteLine ("adb -d shell su -c \"chmod 0644 system/build.prop\"");  				BatFile.Close ();  				Process win = new Process ();  				win.StartInfo.ErrorDialog = true;  				win.StartInfo.FileName = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  				win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				this.Cursor = Cursors.WaitCursor;  				win.Start ();  				win.WaitForExit ();  				this.Cursor = Cursors.Default;  				Process winс = new Process ();  				winс.StartInfo.FileName = "taskkill";  				winс.StartInfo.Arguments = "/F /IM adb.exe";  				winс.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				this.Cursor = Cursors.WaitCursor;  				winс.Start ();  				winс.WaitForExit ();  				this.Cursor = Cursors.Default;  				File.Delete ("Bin\\trace.bat");  				File.Delete ("Utilits\\prop");  			}  			else {  				if (f.EndsWith (".fat")) {  					sw.Write (richTextBox1.Text);  					sw.Close ();  					Form1 main = this.Owner as Form1;  					StreamReader SR = new StreamReader ("WorkDIR\\Temp.fat");  					main.checkedListBox1.Items.Clear ();  					while (SR.EndOfStream == false) {  						main.checkedListBox1.Items.Add (SR.ReadLine ());  					}  					SR.Close ();  					File.Delete ("WorkDIR\\Temp.fat");  				}  				else {  					sw.Write (richTextBox1.Text);  					sw.Close ();  				}  			}  		}  		break;  	}  	case 1: {  		e.Cancel = true;  		break;  	}  	case 2: {  		return;  	}  	}  }  else if (File.Exists ("WorkDIR\\Temp.fat"))  	File.Delete ("WorkDIR\\Temp.fat");  
Magic Number,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,The following statement contains a magic number: if (richTextBox1.Modified == true) {  	Message MS = new Message (null' str' null' canc' no' yes' null' 3' 0);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	int l = MS.fk;  	switch (l) {  	case 3: {  		using (StreamWriter sw = new StreamWriter (f' false' Encoding.ASCII)) {  			if (f.EndsWith ("\\prop") == true) {  				sw.Write (richTextBox1.Text);  				sw.Close ();  				string Patch = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  				StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (1250));  				BatFile.WriteLine ("@echo off");  				BatFile.WriteLine ("echo Starting ADB...");  				BatFile.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin");  				BatFile.WriteLine ("adb start-server");  				BatFile.WriteLine ("echo connect phone...");  				BatFile.WriteLine ("rem adb wait-for-device");  				BatFile.WriteLine ("adb shell su mount -o rw'remount /system");  				BatFile.WriteLine ("echo Gett files from phone...");  				BatFile.WriteLine ("adb remount");  				BatFile.WriteLine ("adb push " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\prop\"" + " /system/build.prop");  				BatFile.WriteLine ("adb -d shell su -c \"chmod 0644 system/build.prop\"");  				BatFile.Close ();  				Process win = new Process ();  				win.StartInfo.ErrorDialog = true;  				win.StartInfo.FileName = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  				win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				this.Cursor = Cursors.WaitCursor;  				win.Start ();  				win.WaitForExit ();  				this.Cursor = Cursors.Default;  				Process winс = new Process ();  				winс.StartInfo.FileName = "taskkill";  				winс.StartInfo.Arguments = "/F /IM adb.exe";  				winс.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				this.Cursor = Cursors.WaitCursor;  				winс.Start ();  				winс.WaitForExit ();  				this.Cursor = Cursors.Default;  				File.Delete ("Bin\\trace.bat");  				File.Delete ("Utilits\\prop");  			}  			else {  				if (f.EndsWith (".fat")) {  					sw.Write (richTextBox1.Text);  					sw.Close ();  					Form1 main = this.Owner as Form1;  					StreamReader SR = new StreamReader ("WorkDIR\\Temp.fat");  					main.checkedListBox1.Items.Clear ();  					while (SR.EndOfStream == false) {  						main.checkedListBox1.Items.Add (SR.ReadLine ());  					}  					SR.Close ();  					File.Delete ("WorkDIR\\Temp.fat");  				}  				else {  					sw.Write (richTextBox1.Text);  					sw.Close ();  				}  			}  		}  		break;  	}  	case 1: {  		e.Cancel = true;  		break;  	}  	case 2: {  		return;  	}  	}  }  else if (File.Exists ("WorkDIR\\Temp.fat"))  	File.Delete ("WorkDIR\\Temp.fat");  
Magic Number,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,The following statement contains a magic number: if (richTextBox1.Modified == true) {  	Message MS = new Message (null' str' null' canc' no' yes' null' 3' 0);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	int l = MS.fk;  	switch (l) {  	case 3: {  		using (StreamWriter sw = new StreamWriter (f' false' Encoding.ASCII)) {  			if (f.EndsWith ("\\prop") == true) {  				sw.Write (richTextBox1.Text);  				sw.Close ();  				string Patch = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  				StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (1250));  				BatFile.WriteLine ("@echo off");  				BatFile.WriteLine ("echo Starting ADB...");  				BatFile.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin");  				BatFile.WriteLine ("adb start-server");  				BatFile.WriteLine ("echo connect phone...");  				BatFile.WriteLine ("rem adb wait-for-device");  				BatFile.WriteLine ("adb shell su mount -o rw'remount /system");  				BatFile.WriteLine ("echo Gett files from phone...");  				BatFile.WriteLine ("adb remount");  				BatFile.WriteLine ("adb push " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\prop\"" + " /system/build.prop");  				BatFile.WriteLine ("adb -d shell su -c \"chmod 0644 system/build.prop\"");  				BatFile.Close ();  				Process win = new Process ();  				win.StartInfo.ErrorDialog = true;  				win.StartInfo.FileName = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  				win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				this.Cursor = Cursors.WaitCursor;  				win.Start ();  				win.WaitForExit ();  				this.Cursor = Cursors.Default;  				Process winс = new Process ();  				winс.StartInfo.FileName = "taskkill";  				winс.StartInfo.Arguments = "/F /IM adb.exe";  				winс.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				this.Cursor = Cursors.WaitCursor;  				winс.Start ();  				winс.WaitForExit ();  				this.Cursor = Cursors.Default;  				File.Delete ("Bin\\trace.bat");  				File.Delete ("Utilits\\prop");  			}  			else {  				if (f.EndsWith (".fat")) {  					sw.Write (richTextBox1.Text);  					sw.Close ();  					Form1 main = this.Owner as Form1;  					StreamReader SR = new StreamReader ("WorkDIR\\Temp.fat");  					main.checkedListBox1.Items.Clear ();  					while (SR.EndOfStream == false) {  						main.checkedListBox1.Items.Add (SR.ReadLine ());  					}  					SR.Close ();  					File.Delete ("WorkDIR\\Temp.fat");  				}  				else {  					sw.Write (richTextBox1.Text);  					sw.Close ();  				}  			}  		}  		break;  	}  	case 1: {  		e.Cancel = true;  		break;  	}  	case 2: {  		return;  	}  	}  }  else if (File.Exists ("WorkDIR\\Temp.fat"))  	File.Delete ("WorkDIR\\Temp.fat");  
Magic Number,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,The following statement contains a magic number: if (richTextBox1.Modified == true) {  	Message MS = new Message (null' str' null' canc' no' yes' null' 3' 0);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	int l = MS.fk;  	switch (l) {  	case 3: {  		using (StreamWriter sw = new StreamWriter (f' false' Encoding.ASCII)) {  			if (f.EndsWith ("\\prop") == true) {  				sw.Write (richTextBox1.Text);  				sw.Close ();  				string Patch = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  				StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (1250));  				BatFile.WriteLine ("@echo off");  				BatFile.WriteLine ("echo Starting ADB...");  				BatFile.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin");  				BatFile.WriteLine ("adb start-server");  				BatFile.WriteLine ("echo connect phone...");  				BatFile.WriteLine ("rem adb wait-for-device");  				BatFile.WriteLine ("adb shell su mount -o rw'remount /system");  				BatFile.WriteLine ("echo Gett files from phone...");  				BatFile.WriteLine ("adb remount");  				BatFile.WriteLine ("adb push " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\prop\"" + " /system/build.prop");  				BatFile.WriteLine ("adb -d shell su -c \"chmod 0644 system/build.prop\"");  				BatFile.Close ();  				Process win = new Process ();  				win.StartInfo.ErrorDialog = true;  				win.StartInfo.FileName = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  				win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				this.Cursor = Cursors.WaitCursor;  				win.Start ();  				win.WaitForExit ();  				this.Cursor = Cursors.Default;  				Process winс = new Process ();  				winс.StartInfo.FileName = "taskkill";  				winс.StartInfo.Arguments = "/F /IM adb.exe";  				winс.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				this.Cursor = Cursors.WaitCursor;  				winс.Start ();  				winс.WaitForExit ();  				this.Cursor = Cursors.Default;  				File.Delete ("Bin\\trace.bat");  				File.Delete ("Utilits\\prop");  			}  			else {  				if (f.EndsWith (".fat")) {  					sw.Write (richTextBox1.Text);  					sw.Close ();  					Form1 main = this.Owner as Form1;  					StreamReader SR = new StreamReader ("WorkDIR\\Temp.fat");  					main.checkedListBox1.Items.Clear ();  					while (SR.EndOfStream == false) {  						main.checkedListBox1.Items.Add (SR.ReadLine ());  					}  					SR.Close ();  					File.Delete ("WorkDIR\\Temp.fat");  				}  				else {  					sw.Write (richTextBox1.Text);  					sw.Close ();  				}  			}  		}  		break;  	}  	case 1: {  		e.Cancel = true;  		break;  	}  	case 2: {  		return;  	}  	}  }  else if (File.Exists ("WorkDIR\\Temp.fat"))  	File.Delete ("WorkDIR\\Temp.fat");  
Magic Number,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,The following statement contains a magic number: if (richTextBox1.Modified == true) {  	Message MS = new Message (null' str' null' canc' no' yes' null' 3' 0);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	int l = MS.fk;  	switch (l) {  	case 3: {  		using (StreamWriter sw = new StreamWriter (f' false' Encoding.ASCII)) {  			if (f.EndsWith ("\\prop") == true) {  				sw.Write (richTextBox1.Text);  				sw.Close ();  				string Patch = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  				StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (1250));  				BatFile.WriteLine ("@echo off");  				BatFile.WriteLine ("echo Starting ADB...");  				BatFile.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin");  				BatFile.WriteLine ("adb start-server");  				BatFile.WriteLine ("echo connect phone...");  				BatFile.WriteLine ("rem adb wait-for-device");  				BatFile.WriteLine ("adb shell su mount -o rw'remount /system");  				BatFile.WriteLine ("echo Gett files from phone...");  				BatFile.WriteLine ("adb remount");  				BatFile.WriteLine ("adb push " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\prop\"" + " /system/build.prop");  				BatFile.WriteLine ("adb -d shell su -c \"chmod 0644 system/build.prop\"");  				BatFile.Close ();  				Process win = new Process ();  				win.StartInfo.ErrorDialog = true;  				win.StartInfo.FileName = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  				win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				this.Cursor = Cursors.WaitCursor;  				win.Start ();  				win.WaitForExit ();  				this.Cursor = Cursors.Default;  				Process winс = new Process ();  				winс.StartInfo.FileName = "taskkill";  				winс.StartInfo.Arguments = "/F /IM adb.exe";  				winс.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				this.Cursor = Cursors.WaitCursor;  				winс.Start ();  				winс.WaitForExit ();  				this.Cursor = Cursors.Default;  				File.Delete ("Bin\\trace.bat");  				File.Delete ("Utilits\\prop");  			}  			else {  				if (f.EndsWith (".fat")) {  					sw.Write (richTextBox1.Text);  					sw.Close ();  					Form1 main = this.Owner as Form1;  					StreamReader SR = new StreamReader ("WorkDIR\\Temp.fat");  					main.checkedListBox1.Items.Clear ();  					while (SR.EndOfStream == false) {  						main.checkedListBox1.Items.Add (SR.ReadLine ());  					}  					SR.Close ();  					File.Delete ("WorkDIR\\Temp.fat");  				}  				else {  					sw.Write (richTextBox1.Text);  					sw.Close ();  				}  			}  		}  		break;  	}  	case 1: {  		e.Cancel = true;  		break;  	}  	case 2: {  		return;  	}  	}  }  else if (File.Exists ("WorkDIR\\Temp.fat"))  	File.Delete ("WorkDIR\\Temp.fat");  
Magic Number,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,The following statement contains a magic number: if (richTextBox1.Modified == true) {  	Message MS = new Message (null' str' null' canc' no' yes' null' 3' 0);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	int l = MS.fk;  	switch (l) {  	case 3: {  		using (StreamWriter sw = new StreamWriter (f' false' Encoding.ASCII)) {  			if (f.EndsWith ("\\prop") == true) {  				sw.Write (richTextBox1.Text);  				sw.Close ();  				string Patch = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  				StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (1250));  				BatFile.WriteLine ("@echo off");  				BatFile.WriteLine ("echo Starting ADB...");  				BatFile.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin");  				BatFile.WriteLine ("adb start-server");  				BatFile.WriteLine ("echo connect phone...");  				BatFile.WriteLine ("rem adb wait-for-device");  				BatFile.WriteLine ("adb shell su mount -o rw'remount /system");  				BatFile.WriteLine ("echo Gett files from phone...");  				BatFile.WriteLine ("adb remount");  				BatFile.WriteLine ("adb push " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\prop\"" + " /system/build.prop");  				BatFile.WriteLine ("adb -d shell su -c \"chmod 0644 system/build.prop\"");  				BatFile.Close ();  				Process win = new Process ();  				win.StartInfo.ErrorDialog = true;  				win.StartInfo.FileName = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  				win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				this.Cursor = Cursors.WaitCursor;  				win.Start ();  				win.WaitForExit ();  				this.Cursor = Cursors.Default;  				Process winс = new Process ();  				winс.StartInfo.FileName = "taskkill";  				winс.StartInfo.Arguments = "/F /IM adb.exe";  				winс.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				this.Cursor = Cursors.WaitCursor;  				winс.Start ();  				winс.WaitForExit ();  				this.Cursor = Cursors.Default;  				File.Delete ("Bin\\trace.bat");  				File.Delete ("Utilits\\prop");  			}  			else {  				if (f.EndsWith (".fat")) {  					sw.Write (richTextBox1.Text);  					sw.Close ();  					Form1 main = this.Owner as Form1;  					StreamReader SR = new StreamReader ("WorkDIR\\Temp.fat");  					main.checkedListBox1.Items.Clear ();  					while (SR.EndOfStream == false) {  						main.checkedListBox1.Items.Add (SR.ReadLine ());  					}  					SR.Close ();  					File.Delete ("WorkDIR\\Temp.fat");  				}  				else {  					sw.Write (richTextBox1.Text);  					sw.Close ();  				}  			}  		}  		break;  	}  	case 1: {  		e.Cancel = true;  		break;  	}  	case 2: {  		return;  	}  	}  }  else if (File.Exists ("WorkDIR\\Temp.fat"))  	File.Delete ("WorkDIR\\Temp.fat");  
Magic Number,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,The following statement contains a magic number: if (richTextBox1.Modified == true) {  	Message MS = new Message (null' str' null' canc' no' yes' null' 3' 0);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	int l = MS.fk;  	switch (l) {  	case 3: {  		using (StreamWriter sw = new StreamWriter (f' false' Encoding.ASCII)) {  			if (f.EndsWith ("\\prop") == true) {  				sw.Write (richTextBox1.Text);  				sw.Close ();  				string Patch = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  				StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (1250));  				BatFile.WriteLine ("@echo off");  				BatFile.WriteLine ("echo Starting ADB...");  				BatFile.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin");  				BatFile.WriteLine ("adb start-server");  				BatFile.WriteLine ("echo connect phone...");  				BatFile.WriteLine ("rem adb wait-for-device");  				BatFile.WriteLine ("adb shell su mount -o rw'remount /system");  				BatFile.WriteLine ("echo Gett files from phone...");  				BatFile.WriteLine ("adb remount");  				BatFile.WriteLine ("adb push " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\prop\"" + " /system/build.prop");  				BatFile.WriteLine ("adb -d shell su -c \"chmod 0644 system/build.prop\"");  				BatFile.Close ();  				Process win = new Process ();  				win.StartInfo.ErrorDialog = true;  				win.StartInfo.FileName = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  				win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				this.Cursor = Cursors.WaitCursor;  				win.Start ();  				win.WaitForExit ();  				this.Cursor = Cursors.Default;  				Process winс = new Process ();  				winс.StartInfo.FileName = "taskkill";  				winс.StartInfo.Arguments = "/F /IM adb.exe";  				winс.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				this.Cursor = Cursors.WaitCursor;  				winс.Start ();  				winс.WaitForExit ();  				this.Cursor = Cursors.Default;  				File.Delete ("Bin\\trace.bat");  				File.Delete ("Utilits\\prop");  			}  			else {  				if (f.EndsWith (".fat")) {  					sw.Write (richTextBox1.Text);  					sw.Close ();  					Form1 main = this.Owner as Form1;  					StreamReader SR = new StreamReader ("WorkDIR\\Temp.fat");  					main.checkedListBox1.Items.Clear ();  					while (SR.EndOfStream == false) {  						main.checkedListBox1.Items.Add (SR.ReadLine ());  					}  					SR.Close ();  					File.Delete ("WorkDIR\\Temp.fat");  				}  				else {  					sw.Write (richTextBox1.Text);  					sw.Close ();  				}  			}  		}  		break;  	}  	case 1: {  		e.Cancel = true;  		break;  	}  	case 2: {  		return;  	}  	}  }  else if (File.Exists ("WorkDIR\\Temp.fat"))  	File.Delete ("WorkDIR\\Temp.fat");  
Magic Number,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,The following statement contains a magic number: switch (l) {  case 3: {  	using (StreamWriter sw = new StreamWriter (f' false' Encoding.ASCII)) {  		if (f.EndsWith ("\\prop") == true) {  			sw.Write (richTextBox1.Text);  			sw.Close ();  			string Patch = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  			StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (1250));  			BatFile.WriteLine ("@echo off");  			BatFile.WriteLine ("echo Starting ADB...");  			BatFile.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin");  			BatFile.WriteLine ("adb start-server");  			BatFile.WriteLine ("echo connect phone...");  			BatFile.WriteLine ("rem adb wait-for-device");  			BatFile.WriteLine ("adb shell su mount -o rw'remount /system");  			BatFile.WriteLine ("echo Gett files from phone...");  			BatFile.WriteLine ("adb remount");  			BatFile.WriteLine ("adb push " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\prop\"" + " /system/build.prop");  			BatFile.WriteLine ("adb -d shell su -c \"chmod 0644 system/build.prop\"");  			BatFile.Close ();  			Process win = new Process ();  			win.StartInfo.ErrorDialog = true;  			win.StartInfo.FileName = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  			win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			this.Cursor = Cursors.WaitCursor;  			win.Start ();  			win.WaitForExit ();  			this.Cursor = Cursors.Default;  			Process winс = new Process ();  			winс.StartInfo.FileName = "taskkill";  			winс.StartInfo.Arguments = "/F /IM adb.exe";  			winс.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			this.Cursor = Cursors.WaitCursor;  			winс.Start ();  			winс.WaitForExit ();  			this.Cursor = Cursors.Default;  			File.Delete ("Bin\\trace.bat");  			File.Delete ("Utilits\\prop");  		}  		else {  			if (f.EndsWith (".fat")) {  				sw.Write (richTextBox1.Text);  				sw.Close ();  				Form1 main = this.Owner as Form1;  				StreamReader SR = new StreamReader ("WorkDIR\\Temp.fat");  				main.checkedListBox1.Items.Clear ();  				while (SR.EndOfStream == false) {  					main.checkedListBox1.Items.Add (SR.ReadLine ());  				}  				SR.Close ();  				File.Delete ("WorkDIR\\Temp.fat");  			}  			else {  				sw.Write (richTextBox1.Text);  				sw.Close ();  			}  		}  	}  	break;  }  case 1: {  	e.Cancel = true;  	break;  }  case 2: {  	return;  }  }  
Magic Number,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,The following statement contains a magic number: switch (l) {  case 3: {  	using (StreamWriter sw = new StreamWriter (f' false' Encoding.ASCII)) {  		if (f.EndsWith ("\\prop") == true) {  			sw.Write (richTextBox1.Text);  			sw.Close ();  			string Patch = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  			StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (1250));  			BatFile.WriteLine ("@echo off");  			BatFile.WriteLine ("echo Starting ADB...");  			BatFile.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin");  			BatFile.WriteLine ("adb start-server");  			BatFile.WriteLine ("echo connect phone...");  			BatFile.WriteLine ("rem adb wait-for-device");  			BatFile.WriteLine ("adb shell su mount -o rw'remount /system");  			BatFile.WriteLine ("echo Gett files from phone...");  			BatFile.WriteLine ("adb remount");  			BatFile.WriteLine ("adb push " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\prop\"" + " /system/build.prop");  			BatFile.WriteLine ("adb -d shell su -c \"chmod 0644 system/build.prop\"");  			BatFile.Close ();  			Process win = new Process ();  			win.StartInfo.ErrorDialog = true;  			win.StartInfo.FileName = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  			win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			this.Cursor = Cursors.WaitCursor;  			win.Start ();  			win.WaitForExit ();  			this.Cursor = Cursors.Default;  			Process winс = new Process ();  			winс.StartInfo.FileName = "taskkill";  			winс.StartInfo.Arguments = "/F /IM adb.exe";  			winс.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			this.Cursor = Cursors.WaitCursor;  			winс.Start ();  			winс.WaitForExit ();  			this.Cursor = Cursors.Default;  			File.Delete ("Bin\\trace.bat");  			File.Delete ("Utilits\\prop");  		}  		else {  			if (f.EndsWith (".fat")) {  				sw.Write (richTextBox1.Text);  				sw.Close ();  				Form1 main = this.Owner as Form1;  				StreamReader SR = new StreamReader ("WorkDIR\\Temp.fat");  				main.checkedListBox1.Items.Clear ();  				while (SR.EndOfStream == false) {  					main.checkedListBox1.Items.Add (SR.ReadLine ());  				}  				SR.Close ();  				File.Delete ("WorkDIR\\Temp.fat");  			}  			else {  				sw.Write (richTextBox1.Text);  				sw.Close ();  			}  		}  	}  	break;  }  case 1: {  	e.Cancel = true;  	break;  }  case 2: {  	return;  }  }  
Magic Number,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,The following statement contains a magic number: switch (l) {  case 3: {  	using (StreamWriter sw = new StreamWriter (f' false' Encoding.ASCII)) {  		if (f.EndsWith ("\\prop") == true) {  			sw.Write (richTextBox1.Text);  			sw.Close ();  			string Patch = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  			StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (1250));  			BatFile.WriteLine ("@echo off");  			BatFile.WriteLine ("echo Starting ADB...");  			BatFile.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin");  			BatFile.WriteLine ("adb start-server");  			BatFile.WriteLine ("echo connect phone...");  			BatFile.WriteLine ("rem adb wait-for-device");  			BatFile.WriteLine ("adb shell su mount -o rw'remount /system");  			BatFile.WriteLine ("echo Gett files from phone...");  			BatFile.WriteLine ("adb remount");  			BatFile.WriteLine ("adb push " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\prop\"" + " /system/build.prop");  			BatFile.WriteLine ("adb -d shell su -c \"chmod 0644 system/build.prop\"");  			BatFile.Close ();  			Process win = new Process ();  			win.StartInfo.ErrorDialog = true;  			win.StartInfo.FileName = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  			win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			this.Cursor = Cursors.WaitCursor;  			win.Start ();  			win.WaitForExit ();  			this.Cursor = Cursors.Default;  			Process winс = new Process ();  			winс.StartInfo.FileName = "taskkill";  			winс.StartInfo.Arguments = "/F /IM adb.exe";  			winс.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			this.Cursor = Cursors.WaitCursor;  			winс.Start ();  			winс.WaitForExit ();  			this.Cursor = Cursors.Default;  			File.Delete ("Bin\\trace.bat");  			File.Delete ("Utilits\\prop");  		}  		else {  			if (f.EndsWith (".fat")) {  				sw.Write (richTextBox1.Text);  				sw.Close ();  				Form1 main = this.Owner as Form1;  				StreamReader SR = new StreamReader ("WorkDIR\\Temp.fat");  				main.checkedListBox1.Items.Clear ();  				while (SR.EndOfStream == false) {  					main.checkedListBox1.Items.Add (SR.ReadLine ());  				}  				SR.Close ();  				File.Delete ("WorkDIR\\Temp.fat");  			}  			else {  				sw.Write (richTextBox1.Text);  				sw.Close ();  			}  		}  	}  	break;  }  case 1: {  	e.Cancel = true;  	break;  }  case 2: {  	return;  }  }  
Magic Number,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,The following statement contains a magic number: using (StreamWriter sw = new StreamWriter (f' false' Encoding.ASCII)) {  	if (f.EndsWith ("\\prop") == true) {  		sw.Write (richTextBox1.Text);  		sw.Close ();  		string Patch = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (1250));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("echo Starting ADB...");  		BatFile.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin");  		BatFile.WriteLine ("adb start-server");  		BatFile.WriteLine ("echo connect phone...");  		BatFile.WriteLine ("rem adb wait-for-device");  		BatFile.WriteLine ("adb shell su mount -o rw'remount /system");  		BatFile.WriteLine ("echo Gett files from phone...");  		BatFile.WriteLine ("adb remount");  		BatFile.WriteLine ("adb push " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\prop\"" + " /system/build.prop");  		BatFile.WriteLine ("adb -d shell su -c \"chmod 0644 system/build.prop\"");  		BatFile.Close ();  		Process win = new Process ();  		win.StartInfo.ErrorDialog = true;  		win.StartInfo.FileName = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  		Process winс = new Process ();  		winс.StartInfo.FileName = "taskkill";  		winс.StartInfo.Arguments = "/F /IM adb.exe";  		winс.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		this.Cursor = Cursors.WaitCursor;  		winс.Start ();  		winс.WaitForExit ();  		this.Cursor = Cursors.Default;  		File.Delete ("Bin\\trace.bat");  		File.Delete ("Utilits\\prop");  	}  	else {  		if (f.EndsWith (".fat")) {  			sw.Write (richTextBox1.Text);  			sw.Close ();  			Form1 main = this.Owner as Form1;  			StreamReader SR = new StreamReader ("WorkDIR\\Temp.fat");  			main.checkedListBox1.Items.Clear ();  			while (SR.EndOfStream == false) {  				main.checkedListBox1.Items.Add (SR.ReadLine ());  			}  			SR.Close ();  			File.Delete ("WorkDIR\\Temp.fat");  		}  		else {  			sw.Write (richTextBox1.Text);  			sw.Close ();  		}  	}  }  
Magic Number,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,The following statement contains a magic number: if (f.EndsWith ("\\prop") == true) {  	sw.Write (richTextBox1.Text);  	sw.Close ();  	string Patch = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (1250));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("echo Starting ADB...");  	BatFile.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin");  	BatFile.WriteLine ("adb start-server");  	BatFile.WriteLine ("echo connect phone...");  	BatFile.WriteLine ("rem adb wait-for-device");  	BatFile.WriteLine ("adb shell su mount -o rw'remount /system");  	BatFile.WriteLine ("echo Gett files from phone...");  	BatFile.WriteLine ("adb remount");  	BatFile.WriteLine ("adb push " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\prop\"" + " /system/build.prop");  	BatFile.WriteLine ("adb -d shell su -c \"chmod 0644 system/build.prop\"");  	BatFile.Close ();  	Process win = new Process ();  	win.StartInfo.ErrorDialog = true;  	win.StartInfo.FileName = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	Process winс = new Process ();  	winс.StartInfo.FileName = "taskkill";  	winс.StartInfo.Arguments = "/F /IM adb.exe";  	winс.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	winс.Start ();  	winс.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace.bat");  	File.Delete ("Utilits\\prop");  }  else {  	if (f.EndsWith (".fat")) {  		sw.Write (richTextBox1.Text);  		sw.Close ();  		Form1 main = this.Owner as Form1;  		StreamReader SR = new StreamReader ("WorkDIR\\Temp.fat");  		main.checkedListBox1.Items.Clear ();  		while (SR.EndOfStream == false) {  			main.checkedListBox1.Items.Add (SR.ReadLine ());  		}  		SR.Close ();  		File.Delete ("WorkDIR\\Temp.fat");  	}  	else {  		sw.Write (richTextBox1.Text);  		sw.Close ();  	}  }  
Magic Number,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Editor_Resize,The following statement contains a magic number: button1.Left = this.Width - 48;  
Magic Number,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Editor_Resize,The following statement contains a magic number: button2.Left = this.Width - 82;  
Magic Number,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Editor_Resize,The following statement contains a magic number: button3.Left = this.Width - 116;  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button2_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button2_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button2_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button2_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button6_Click,The following statement contains a magic number: if (File.Exists ("Utilits\\IMGRepack\\" + comboBox1.SelectedItem) == false)  	return;  else {  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("echo Starting ADB...");  	BatFile.WriteLine ("adb start-server");  	BatFile.WriteLine ("echo connect phone...");  	BatFile.WriteLine ("rem adb wait-for-device");  	BatFile.WriteLine ("echo Gett files from phone...");  	BatFile.WriteLine ("adb remount");  	BatFile.WriteLine ("adb shell su -c \"mkdir /data/tmp/\"");  	if (comboBox1.SelectedIndex == 0) {  		BatFile.WriteLine ("adb shell su -c \"dd if=/dev/bootimg of=/data/tmp/boot.img bs=6291456c count=1\"");  		BatFile.WriteLine ("adb pull /data/tmp/boot.img " + "Utilits\\IMGRepack\\bootO.img");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/boot.img\"");  	}  	else {  		BatFile.WriteLine ("adb shell su -c \"dd if=/dev/recovery of=/data/tmp/recovery.img bs=6291456c count=1\"");  		BatFile.WriteLine ("adb pull /data/tmp/recovery.img " + "Utilits\\IMGRepack\\recoveryO.img");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/recovery.img\"");  	}  	BatFile.WriteLine ("taskkill /F /IM adb.exe");  	BatFile.WriteLine ("adb remount");  	BatFile.WriteLine ("adb shell su -c \"mkdir /data/tmp/\"");  	if (comboBox1.SelectedIndex == 0) {  		BatFile.WriteLine ("adb push Utilits\\IMGRepack\\boot.img " + "/data/tmp/boot.img");  		BatFile.WriteLine ("adb shell su -c \"dd if=/data/tmp/boot.img of=/dev/bootimg bs=6291456c count=1\"");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/boot.img\"");  	}  	else {  		BatFile.WriteLine ("adb push Utilits\\IMGRepack\\recovery.img " + "/data/tmp/recovery.img");  		BatFile.WriteLine ("adb shell su -c \"dd if=/data/tmp/recovery.img of=/dev/recovery bs=6291456c count=1\"");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/recovery.img\"");  	}  	BatFile.WriteLine ("taskkill /F /IM adb.exe");  	BatFile.Close ();  	Process win = new Process ();  	win.StartInfo.ErrorDialog = true;  	win.StartInfo.FileName = Patch;  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace.bat");  	Message MS = new Message (attention' str' str1 + "\n" + str2' no' yes' null' null' 2' 0);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	this.f = MS.fk;  	if (f == 1) {  		string Patch1 = Directory.GetCurrentDirectory () + @"\trace1.bat";  		StreamWriter BatFile1 = new StreamWriter (Patch1' false' Encoding.GetEncoding (866));  		BatFile1.WriteLine ("@echo off");  		BatFile1.WriteLine ("echo Starting ADB...");  		BatFile1.WriteLine ("adb start-server");  		BatFile1.WriteLine ("echo connect phone...");  		BatFile1.WriteLine ("rem adb wait-for-device");  		BatFile1.WriteLine ("echo Gett files from phone...");  		BatFile1.WriteLine ("adb remount");  		BatFile1.WriteLine ("adb shell su -c \"mkdir /data/tmp/\"");  		if (comboBox1.SelectedIndex == 0) {  			BatFile1.WriteLine ("adb push Utilits\\IMGRepack\\bootO.img " + "/data/tmp/boot.img");  			BatFile1.WriteLine ("adb shell su -c \"dd if=/data/tmp/boot.img of=/dev/bootimg bs=6291456c count=1\"");  			BatFile1.WriteLine ("adb shell su -c \"rm /data/tmp/boot.img\"");  		}  		else {  			BatFile1.WriteLine ("adb push Utilits\\IMGRepack\\recoveryO.img " + "/data/tmp/recovery.img");  			BatFile1.WriteLine ("adb shell su -c \"dd if=/data/tmp/recovery.img of=/dev/recovery bs=6291456c count=1\"");  			BatFile1.WriteLine ("adb shell su -c \"rm /data/tmp/recovery.img\"");  		}  		BatFile1.WriteLine ("taskkill /F /IM adb.exe");  		BatFile1.Close ();  		Process win1 = new Process ();  		win1.StartInfo.ErrorDialog = true;  		win1.StartInfo.FileName = "trace1.bat";  		win1.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		this.Cursor = Cursors.WaitCursor;  		win1.Start ();  		win1.WaitForExit ();  		this.Cursor = Cursors.Default;  		File.Delete ("Bin\\trace1.bat");  	}  	if (File.Exists ("Utilits\\IMGRepack\\bootO.img"))  		File.Delete ("Utilits\\IMGRepack\\bootO.img");  	if (File.Exists ("Utilits\\IMGRepack\\recoveryO.img"))  		File.Delete ("Utilits\\IMGRepack\\recoveryO.img");  }  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button6_Click,The following statement contains a magic number: if (File.Exists ("Utilits\\IMGRepack\\" + comboBox1.SelectedItem) == false)  	return;  else {  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("echo Starting ADB...");  	BatFile.WriteLine ("adb start-server");  	BatFile.WriteLine ("echo connect phone...");  	BatFile.WriteLine ("rem adb wait-for-device");  	BatFile.WriteLine ("echo Gett files from phone...");  	BatFile.WriteLine ("adb remount");  	BatFile.WriteLine ("adb shell su -c \"mkdir /data/tmp/\"");  	if (comboBox1.SelectedIndex == 0) {  		BatFile.WriteLine ("adb shell su -c \"dd if=/dev/bootimg of=/data/tmp/boot.img bs=6291456c count=1\"");  		BatFile.WriteLine ("adb pull /data/tmp/boot.img " + "Utilits\\IMGRepack\\bootO.img");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/boot.img\"");  	}  	else {  		BatFile.WriteLine ("adb shell su -c \"dd if=/dev/recovery of=/data/tmp/recovery.img bs=6291456c count=1\"");  		BatFile.WriteLine ("adb pull /data/tmp/recovery.img " + "Utilits\\IMGRepack\\recoveryO.img");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/recovery.img\"");  	}  	BatFile.WriteLine ("taskkill /F /IM adb.exe");  	BatFile.WriteLine ("adb remount");  	BatFile.WriteLine ("adb shell su -c \"mkdir /data/tmp/\"");  	if (comboBox1.SelectedIndex == 0) {  		BatFile.WriteLine ("adb push Utilits\\IMGRepack\\boot.img " + "/data/tmp/boot.img");  		BatFile.WriteLine ("adb shell su -c \"dd if=/data/tmp/boot.img of=/dev/bootimg bs=6291456c count=1\"");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/boot.img\"");  	}  	else {  		BatFile.WriteLine ("adb push Utilits\\IMGRepack\\recovery.img " + "/data/tmp/recovery.img");  		BatFile.WriteLine ("adb shell su -c \"dd if=/data/tmp/recovery.img of=/dev/recovery bs=6291456c count=1\"");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/recovery.img\"");  	}  	BatFile.WriteLine ("taskkill /F /IM adb.exe");  	BatFile.Close ();  	Process win = new Process ();  	win.StartInfo.ErrorDialog = true;  	win.StartInfo.FileName = Patch;  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace.bat");  	Message MS = new Message (attention' str' str1 + "\n" + str2' no' yes' null' null' 2' 0);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	this.f = MS.fk;  	if (f == 1) {  		string Patch1 = Directory.GetCurrentDirectory () + @"\trace1.bat";  		StreamWriter BatFile1 = new StreamWriter (Patch1' false' Encoding.GetEncoding (866));  		BatFile1.WriteLine ("@echo off");  		BatFile1.WriteLine ("echo Starting ADB...");  		BatFile1.WriteLine ("adb start-server");  		BatFile1.WriteLine ("echo connect phone...");  		BatFile1.WriteLine ("rem adb wait-for-device");  		BatFile1.WriteLine ("echo Gett files from phone...");  		BatFile1.WriteLine ("adb remount");  		BatFile1.WriteLine ("adb shell su -c \"mkdir /data/tmp/\"");  		if (comboBox1.SelectedIndex == 0) {  			BatFile1.WriteLine ("adb push Utilits\\IMGRepack\\bootO.img " + "/data/tmp/boot.img");  			BatFile1.WriteLine ("adb shell su -c \"dd if=/data/tmp/boot.img of=/dev/bootimg bs=6291456c count=1\"");  			BatFile1.WriteLine ("adb shell su -c \"rm /data/tmp/boot.img\"");  		}  		else {  			BatFile1.WriteLine ("adb push Utilits\\IMGRepack\\recoveryO.img " + "/data/tmp/recovery.img");  			BatFile1.WriteLine ("adb shell su -c \"dd if=/data/tmp/recovery.img of=/dev/recovery bs=6291456c count=1\"");  			BatFile1.WriteLine ("adb shell su -c \"rm /data/tmp/recovery.img\"");  		}  		BatFile1.WriteLine ("taskkill /F /IM adb.exe");  		BatFile1.Close ();  		Process win1 = new Process ();  		win1.StartInfo.ErrorDialog = true;  		win1.StartInfo.FileName = "trace1.bat";  		win1.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		this.Cursor = Cursors.WaitCursor;  		win1.Start ();  		win1.WaitForExit ();  		this.Cursor = Cursors.Default;  		File.Delete ("Bin\\trace1.bat");  	}  	if (File.Exists ("Utilits\\IMGRepack\\bootO.img"))  		File.Delete ("Utilits\\IMGRepack\\bootO.img");  	if (File.Exists ("Utilits\\IMGRepack\\recoveryO.img"))  		File.Delete ("Utilits\\IMGRepack\\recoveryO.img");  }  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button6_Click,The following statement contains a magic number: if (File.Exists ("Utilits\\IMGRepack\\" + comboBox1.SelectedItem) == false)  	return;  else {  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("echo Starting ADB...");  	BatFile.WriteLine ("adb start-server");  	BatFile.WriteLine ("echo connect phone...");  	BatFile.WriteLine ("rem adb wait-for-device");  	BatFile.WriteLine ("echo Gett files from phone...");  	BatFile.WriteLine ("adb remount");  	BatFile.WriteLine ("adb shell su -c \"mkdir /data/tmp/\"");  	if (comboBox1.SelectedIndex == 0) {  		BatFile.WriteLine ("adb shell su -c \"dd if=/dev/bootimg of=/data/tmp/boot.img bs=6291456c count=1\"");  		BatFile.WriteLine ("adb pull /data/tmp/boot.img " + "Utilits\\IMGRepack\\bootO.img");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/boot.img\"");  	}  	else {  		BatFile.WriteLine ("adb shell su -c \"dd if=/dev/recovery of=/data/tmp/recovery.img bs=6291456c count=1\"");  		BatFile.WriteLine ("adb pull /data/tmp/recovery.img " + "Utilits\\IMGRepack\\recoveryO.img");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/recovery.img\"");  	}  	BatFile.WriteLine ("taskkill /F /IM adb.exe");  	BatFile.WriteLine ("adb remount");  	BatFile.WriteLine ("adb shell su -c \"mkdir /data/tmp/\"");  	if (comboBox1.SelectedIndex == 0) {  		BatFile.WriteLine ("adb push Utilits\\IMGRepack\\boot.img " + "/data/tmp/boot.img");  		BatFile.WriteLine ("adb shell su -c \"dd if=/data/tmp/boot.img of=/dev/bootimg bs=6291456c count=1\"");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/boot.img\"");  	}  	else {  		BatFile.WriteLine ("adb push Utilits\\IMGRepack\\recovery.img " + "/data/tmp/recovery.img");  		BatFile.WriteLine ("adb shell su -c \"dd if=/data/tmp/recovery.img of=/dev/recovery bs=6291456c count=1\"");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/recovery.img\"");  	}  	BatFile.WriteLine ("taskkill /F /IM adb.exe");  	BatFile.Close ();  	Process win = new Process ();  	win.StartInfo.ErrorDialog = true;  	win.StartInfo.FileName = Patch;  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace.bat");  	Message MS = new Message (attention' str' str1 + "\n" + str2' no' yes' null' null' 2' 0);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	this.f = MS.fk;  	if (f == 1) {  		string Patch1 = Directory.GetCurrentDirectory () + @"\trace1.bat";  		StreamWriter BatFile1 = new StreamWriter (Patch1' false' Encoding.GetEncoding (866));  		BatFile1.WriteLine ("@echo off");  		BatFile1.WriteLine ("echo Starting ADB...");  		BatFile1.WriteLine ("adb start-server");  		BatFile1.WriteLine ("echo connect phone...");  		BatFile1.WriteLine ("rem adb wait-for-device");  		BatFile1.WriteLine ("echo Gett files from phone...");  		BatFile1.WriteLine ("adb remount");  		BatFile1.WriteLine ("adb shell su -c \"mkdir /data/tmp/\"");  		if (comboBox1.SelectedIndex == 0) {  			BatFile1.WriteLine ("adb push Utilits\\IMGRepack\\bootO.img " + "/data/tmp/boot.img");  			BatFile1.WriteLine ("adb shell su -c \"dd if=/data/tmp/boot.img of=/dev/bootimg bs=6291456c count=1\"");  			BatFile1.WriteLine ("adb shell su -c \"rm /data/tmp/boot.img\"");  		}  		else {  			BatFile1.WriteLine ("adb push Utilits\\IMGRepack\\recoveryO.img " + "/data/tmp/recovery.img");  			BatFile1.WriteLine ("adb shell su -c \"dd if=/data/tmp/recovery.img of=/dev/recovery bs=6291456c count=1\"");  			BatFile1.WriteLine ("adb shell su -c \"rm /data/tmp/recovery.img\"");  		}  		BatFile1.WriteLine ("taskkill /F /IM adb.exe");  		BatFile1.Close ();  		Process win1 = new Process ();  		win1.StartInfo.ErrorDialog = true;  		win1.StartInfo.FileName = "trace1.bat";  		win1.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		this.Cursor = Cursors.WaitCursor;  		win1.Start ();  		win1.WaitForExit ();  		this.Cursor = Cursors.Default;  		File.Delete ("Bin\\trace1.bat");  	}  	if (File.Exists ("Utilits\\IMGRepack\\bootO.img"))  		File.Delete ("Utilits\\IMGRepack\\bootO.img");  	if (File.Exists ("Utilits\\IMGRepack\\recoveryO.img"))  		File.Delete ("Utilits\\IMGRepack\\recoveryO.img");  }  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button6_Click,The following statement contains a magic number: if (File.Exists ("Utilits\\IMGRepack\\" + comboBox1.SelectedItem) == false)  	return;  else {  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("echo Starting ADB...");  	BatFile.WriteLine ("adb start-server");  	BatFile.WriteLine ("echo connect phone...");  	BatFile.WriteLine ("rem adb wait-for-device");  	BatFile.WriteLine ("echo Gett files from phone...");  	BatFile.WriteLine ("adb remount");  	BatFile.WriteLine ("adb shell su -c \"mkdir /data/tmp/\"");  	if (comboBox1.SelectedIndex == 0) {  		BatFile.WriteLine ("adb shell su -c \"dd if=/dev/bootimg of=/data/tmp/boot.img bs=6291456c count=1\"");  		BatFile.WriteLine ("adb pull /data/tmp/boot.img " + "Utilits\\IMGRepack\\bootO.img");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/boot.img\"");  	}  	else {  		BatFile.WriteLine ("adb shell su -c \"dd if=/dev/recovery of=/data/tmp/recovery.img bs=6291456c count=1\"");  		BatFile.WriteLine ("adb pull /data/tmp/recovery.img " + "Utilits\\IMGRepack\\recoveryO.img");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/recovery.img\"");  	}  	BatFile.WriteLine ("taskkill /F /IM adb.exe");  	BatFile.WriteLine ("adb remount");  	BatFile.WriteLine ("adb shell su -c \"mkdir /data/tmp/\"");  	if (comboBox1.SelectedIndex == 0) {  		BatFile.WriteLine ("adb push Utilits\\IMGRepack\\boot.img " + "/data/tmp/boot.img");  		BatFile.WriteLine ("adb shell su -c \"dd if=/data/tmp/boot.img of=/dev/bootimg bs=6291456c count=1\"");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/boot.img\"");  	}  	else {  		BatFile.WriteLine ("adb push Utilits\\IMGRepack\\recovery.img " + "/data/tmp/recovery.img");  		BatFile.WriteLine ("adb shell su -c \"dd if=/data/tmp/recovery.img of=/dev/recovery bs=6291456c count=1\"");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/recovery.img\"");  	}  	BatFile.WriteLine ("taskkill /F /IM adb.exe");  	BatFile.Close ();  	Process win = new Process ();  	win.StartInfo.ErrorDialog = true;  	win.StartInfo.FileName = Patch;  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace.bat");  	Message MS = new Message (attention' str' str1 + "\n" + str2' no' yes' null' null' 2' 0);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	this.f = MS.fk;  	if (f == 1) {  		string Patch1 = Directory.GetCurrentDirectory () + @"\trace1.bat";  		StreamWriter BatFile1 = new StreamWriter (Patch1' false' Encoding.GetEncoding (866));  		BatFile1.WriteLine ("@echo off");  		BatFile1.WriteLine ("echo Starting ADB...");  		BatFile1.WriteLine ("adb start-server");  		BatFile1.WriteLine ("echo connect phone...");  		BatFile1.WriteLine ("rem adb wait-for-device");  		BatFile1.WriteLine ("echo Gett files from phone...");  		BatFile1.WriteLine ("adb remount");  		BatFile1.WriteLine ("adb shell su -c \"mkdir /data/tmp/\"");  		if (comboBox1.SelectedIndex == 0) {  			BatFile1.WriteLine ("adb push Utilits\\IMGRepack\\bootO.img " + "/data/tmp/boot.img");  			BatFile1.WriteLine ("adb shell su -c \"dd if=/data/tmp/boot.img of=/dev/bootimg bs=6291456c count=1\"");  			BatFile1.WriteLine ("adb shell su -c \"rm /data/tmp/boot.img\"");  		}  		else {  			BatFile1.WriteLine ("adb push Utilits\\IMGRepack\\recoveryO.img " + "/data/tmp/recovery.img");  			BatFile1.WriteLine ("adb shell su -c \"dd if=/data/tmp/recovery.img of=/dev/recovery bs=6291456c count=1\"");  			BatFile1.WriteLine ("adb shell su -c \"rm /data/tmp/recovery.img\"");  		}  		BatFile1.WriteLine ("taskkill /F /IM adb.exe");  		BatFile1.Close ();  		Process win1 = new Process ();  		win1.StartInfo.ErrorDialog = true;  		win1.StartInfo.FileName = "trace1.bat";  		win1.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		this.Cursor = Cursors.WaitCursor;  		win1.Start ();  		win1.WaitForExit ();  		this.Cursor = Cursors.Default;  		File.Delete ("Bin\\trace1.bat");  	}  	if (File.Exists ("Utilits\\IMGRepack\\bootO.img"))  		File.Delete ("Utilits\\IMGRepack\\bootO.img");  	if (File.Exists ("Utilits\\IMGRepack\\recoveryO.img"))  		File.Delete ("Utilits\\IMGRepack\\recoveryO.img");  }  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button6_Click,The following statement contains a magic number: if (File.Exists ("Utilits\\IMGRepack\\" + comboBox1.SelectedItem) == false)  	return;  else {  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("echo Starting ADB...");  	BatFile.WriteLine ("adb start-server");  	BatFile.WriteLine ("echo connect phone...");  	BatFile.WriteLine ("rem adb wait-for-device");  	BatFile.WriteLine ("echo Gett files from phone...");  	BatFile.WriteLine ("adb remount");  	BatFile.WriteLine ("adb shell su -c \"mkdir /data/tmp/\"");  	if (comboBox1.SelectedIndex == 0) {  		BatFile.WriteLine ("adb shell su -c \"dd if=/dev/bootimg of=/data/tmp/boot.img bs=6291456c count=1\"");  		BatFile.WriteLine ("adb pull /data/tmp/boot.img " + "Utilits\\IMGRepack\\bootO.img");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/boot.img\"");  	}  	else {  		BatFile.WriteLine ("adb shell su -c \"dd if=/dev/recovery of=/data/tmp/recovery.img bs=6291456c count=1\"");  		BatFile.WriteLine ("adb pull /data/tmp/recovery.img " + "Utilits\\IMGRepack\\recoveryO.img");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/recovery.img\"");  	}  	BatFile.WriteLine ("taskkill /F /IM adb.exe");  	BatFile.WriteLine ("adb remount");  	BatFile.WriteLine ("adb shell su -c \"mkdir /data/tmp/\"");  	if (comboBox1.SelectedIndex == 0) {  		BatFile.WriteLine ("adb push Utilits\\IMGRepack\\boot.img " + "/data/tmp/boot.img");  		BatFile.WriteLine ("adb shell su -c \"dd if=/data/tmp/boot.img of=/dev/bootimg bs=6291456c count=1\"");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/boot.img\"");  	}  	else {  		BatFile.WriteLine ("adb push Utilits\\IMGRepack\\recovery.img " + "/data/tmp/recovery.img");  		BatFile.WriteLine ("adb shell su -c \"dd if=/data/tmp/recovery.img of=/dev/recovery bs=6291456c count=1\"");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/recovery.img\"");  	}  	BatFile.WriteLine ("taskkill /F /IM adb.exe");  	BatFile.Close ();  	Process win = new Process ();  	win.StartInfo.ErrorDialog = true;  	win.StartInfo.FileName = Patch;  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace.bat");  	Message MS = new Message (attention' str' str1 + "\n" + str2' no' yes' null' null' 2' 0);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	this.f = MS.fk;  	if (f == 1) {  		string Patch1 = Directory.GetCurrentDirectory () + @"\trace1.bat";  		StreamWriter BatFile1 = new StreamWriter (Patch1' false' Encoding.GetEncoding (866));  		BatFile1.WriteLine ("@echo off");  		BatFile1.WriteLine ("echo Starting ADB...");  		BatFile1.WriteLine ("adb start-server");  		BatFile1.WriteLine ("echo connect phone...");  		BatFile1.WriteLine ("rem adb wait-for-device");  		BatFile1.WriteLine ("echo Gett files from phone...");  		BatFile1.WriteLine ("adb remount");  		BatFile1.WriteLine ("adb shell su -c \"mkdir /data/tmp/\"");  		if (comboBox1.SelectedIndex == 0) {  			BatFile1.WriteLine ("adb push Utilits\\IMGRepack\\bootO.img " + "/data/tmp/boot.img");  			BatFile1.WriteLine ("adb shell su -c \"dd if=/data/tmp/boot.img of=/dev/bootimg bs=6291456c count=1\"");  			BatFile1.WriteLine ("adb shell su -c \"rm /data/tmp/boot.img\"");  		}  		else {  			BatFile1.WriteLine ("adb push Utilits\\IMGRepack\\recoveryO.img " + "/data/tmp/recovery.img");  			BatFile1.WriteLine ("adb shell su -c \"dd if=/data/tmp/recovery.img of=/dev/recovery bs=6291456c count=1\"");  			BatFile1.WriteLine ("adb shell su -c \"rm /data/tmp/recovery.img\"");  		}  		BatFile1.WriteLine ("taskkill /F /IM adb.exe");  		BatFile1.Close ();  		Process win1 = new Process ();  		win1.StartInfo.ErrorDialog = true;  		win1.StartInfo.FileName = "trace1.bat";  		win1.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		this.Cursor = Cursors.WaitCursor;  		win1.Start ();  		win1.WaitForExit ();  		this.Cursor = Cursors.Default;  		File.Delete ("Bin\\trace1.bat");  	}  	if (File.Exists ("Utilits\\IMGRepack\\bootO.img"))  		File.Delete ("Utilits\\IMGRepack\\bootO.img");  	if (File.Exists ("Utilits\\IMGRepack\\recoveryO.img"))  		File.Delete ("Utilits\\IMGRepack\\recoveryO.img");  }  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button6_Click,The following statement contains a magic number: if (File.Exists ("Utilits\\IMGRepack\\" + comboBox1.SelectedItem) == false)  	return;  else {  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("echo Starting ADB...");  	BatFile.WriteLine ("adb start-server");  	BatFile.WriteLine ("echo connect phone...");  	BatFile.WriteLine ("rem adb wait-for-device");  	BatFile.WriteLine ("echo Gett files from phone...");  	BatFile.WriteLine ("adb remount");  	BatFile.WriteLine ("adb shell su -c \"mkdir /data/tmp/\"");  	if (comboBox1.SelectedIndex == 0) {  		BatFile.WriteLine ("adb shell su -c \"dd if=/dev/bootimg of=/data/tmp/boot.img bs=6291456c count=1\"");  		BatFile.WriteLine ("adb pull /data/tmp/boot.img " + "Utilits\\IMGRepack\\bootO.img");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/boot.img\"");  	}  	else {  		BatFile.WriteLine ("adb shell su -c \"dd if=/dev/recovery of=/data/tmp/recovery.img bs=6291456c count=1\"");  		BatFile.WriteLine ("adb pull /data/tmp/recovery.img " + "Utilits\\IMGRepack\\recoveryO.img");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/recovery.img\"");  	}  	BatFile.WriteLine ("taskkill /F /IM adb.exe");  	BatFile.WriteLine ("adb remount");  	BatFile.WriteLine ("adb shell su -c \"mkdir /data/tmp/\"");  	if (comboBox1.SelectedIndex == 0) {  		BatFile.WriteLine ("adb push Utilits\\IMGRepack\\boot.img " + "/data/tmp/boot.img");  		BatFile.WriteLine ("adb shell su -c \"dd if=/data/tmp/boot.img of=/dev/bootimg bs=6291456c count=1\"");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/boot.img\"");  	}  	else {  		BatFile.WriteLine ("adb push Utilits\\IMGRepack\\recovery.img " + "/data/tmp/recovery.img");  		BatFile.WriteLine ("adb shell su -c \"dd if=/data/tmp/recovery.img of=/dev/recovery bs=6291456c count=1\"");  		BatFile.WriteLine ("adb shell su -c \"rm /data/tmp/recovery.img\"");  	}  	BatFile.WriteLine ("taskkill /F /IM adb.exe");  	BatFile.Close ();  	Process win = new Process ();  	win.StartInfo.ErrorDialog = true;  	win.StartInfo.FileName = Patch;  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace.bat");  	Message MS = new Message (attention' str' str1 + "\n" + str2' no' yes' null' null' 2' 0);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	this.f = MS.fk;  	if (f == 1) {  		string Patch1 = Directory.GetCurrentDirectory () + @"\trace1.bat";  		StreamWriter BatFile1 = new StreamWriter (Patch1' false' Encoding.GetEncoding (866));  		BatFile1.WriteLine ("@echo off");  		BatFile1.WriteLine ("echo Starting ADB...");  		BatFile1.WriteLine ("adb start-server");  		BatFile1.WriteLine ("echo connect phone...");  		BatFile1.WriteLine ("rem adb wait-for-device");  		BatFile1.WriteLine ("echo Gett files from phone...");  		BatFile1.WriteLine ("adb remount");  		BatFile1.WriteLine ("adb shell su -c \"mkdir /data/tmp/\"");  		if (comboBox1.SelectedIndex == 0) {  			BatFile1.WriteLine ("adb push Utilits\\IMGRepack\\bootO.img " + "/data/tmp/boot.img");  			BatFile1.WriteLine ("adb shell su -c \"dd if=/data/tmp/boot.img of=/dev/bootimg bs=6291456c count=1\"");  			BatFile1.WriteLine ("adb shell su -c \"rm /data/tmp/boot.img\"");  		}  		else {  			BatFile1.WriteLine ("adb push Utilits\\IMGRepack\\recoveryO.img " + "/data/tmp/recovery.img");  			BatFile1.WriteLine ("adb shell su -c \"dd if=/data/tmp/recovery.img of=/dev/recovery bs=6291456c count=1\"");  			BatFile1.WriteLine ("adb shell su -c \"rm /data/tmp/recovery.img\"");  		}  		BatFile1.WriteLine ("taskkill /F /IM adb.exe");  		BatFile1.Close ();  		Process win1 = new Process ();  		win1.StartInfo.ErrorDialog = true;  		win1.StartInfo.FileName = "trace1.bat";  		win1.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		this.Cursor = Cursors.WaitCursor;  		win1.Start ();  		win1.WaitForExit ();  		this.Cursor = Cursors.Default;  		File.Delete ("Bin\\trace1.bat");  	}  	if (File.Exists ("Utilits\\IMGRepack\\bootO.img"))  		File.Delete ("Utilits\\IMGRepack\\bootO.img");  	if (File.Exists ("Utilits\\IMGRepack\\recoveryO.img"))  		File.Delete ("Utilits\\IMGRepack\\recoveryO.img");  }  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button6_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button6_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button6_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button6_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button6_Click,The following statement contains a magic number: if (f == 1) {  	string Patch1 = Directory.GetCurrentDirectory () + @"\trace1.bat";  	StreamWriter BatFile1 = new StreamWriter (Patch1' false' Encoding.GetEncoding (866));  	BatFile1.WriteLine ("@echo off");  	BatFile1.WriteLine ("echo Starting ADB...");  	BatFile1.WriteLine ("adb start-server");  	BatFile1.WriteLine ("echo connect phone...");  	BatFile1.WriteLine ("rem adb wait-for-device");  	BatFile1.WriteLine ("echo Gett files from phone...");  	BatFile1.WriteLine ("adb remount");  	BatFile1.WriteLine ("adb shell su -c \"mkdir /data/tmp/\"");  	if (comboBox1.SelectedIndex == 0) {  		BatFile1.WriteLine ("adb push Utilits\\IMGRepack\\bootO.img " + "/data/tmp/boot.img");  		BatFile1.WriteLine ("adb shell su -c \"dd if=/data/tmp/boot.img of=/dev/bootimg bs=6291456c count=1\"");  		BatFile1.WriteLine ("adb shell su -c \"rm /data/tmp/boot.img\"");  	}  	else {  		BatFile1.WriteLine ("adb push Utilits\\IMGRepack\\recoveryO.img " + "/data/tmp/recovery.img");  		BatFile1.WriteLine ("adb shell su -c \"dd if=/data/tmp/recovery.img of=/dev/recovery bs=6291456c count=1\"");  		BatFile1.WriteLine ("adb shell su -c \"rm /data/tmp/recovery.img\"");  	}  	BatFile1.WriteLine ("taskkill /F /IM adb.exe");  	BatFile1.Close ();  	Process win1 = new Process ();  	win1.StartInfo.ErrorDialog = true;  	win1.StartInfo.FileName = "trace1.bat";  	win1.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win1.Start ();  	win1.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace1.bat");  }  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button4_Click,The following statement contains a magic number: if (comboBox1.SelectedIndex == 0) {  	string Patch1 = Directory.GetCurrentDirectory () + "\\Bin\\trace2.bat";  	StreamWriter BatFile1 = new StreamWriter (Patch1' false' Encoding.GetEncoding (866));  	BatFile1.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin\\\"");  	BatFile1.WriteLine ("imgpack.cmd " + "boot");  	BatFile1.Close ();  	win.StartInfo.FileName = Patch1;  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace2.bat");  }  else {  	string Patch1 = Directory.GetCurrentDirectory () + "\\Bin\\trace2.bat";  	StreamWriter BatFile1 = new StreamWriter (Patch1' false' Encoding.GetEncoding (866));  	BatFile1.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin\\\"");  	BatFile1.WriteLine ("imgpack.cmd " + "recovery");  	BatFile1.Close ();  	win.StartInfo.FileName = Patch1;  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace2.bat");  }  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button4_Click,The following statement contains a magic number: if (comboBox1.SelectedIndex == 0) {  	string Patch1 = Directory.GetCurrentDirectory () + "\\Bin\\trace2.bat";  	StreamWriter BatFile1 = new StreamWriter (Patch1' false' Encoding.GetEncoding (866));  	BatFile1.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin\\\"");  	BatFile1.WriteLine ("imgpack.cmd " + "boot");  	BatFile1.Close ();  	win.StartInfo.FileName = Patch1;  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace2.bat");  }  else {  	string Patch1 = Directory.GetCurrentDirectory () + "\\Bin\\trace2.bat";  	StreamWriter BatFile1 = new StreamWriter (Patch1' false' Encoding.GetEncoding (866));  	BatFile1.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin\\\"");  	BatFile1.WriteLine ("imgpack.cmd " + "recovery");  	BatFile1.Close ();  	win.StartInfo.FileName = Patch1;  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace2.bat");  }  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button4_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button4_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button4_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button4_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button1_Click,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	File.Copy (openFileDialog1.FileName' "Bin\\" + comboBox1.SelectedItem' true);  	Process win1 = new Process ();  	string Patch1 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  	StreamWriter BatFile1 = new StreamWriter (Patch1' false' Encoding.GetEncoding (866));  	BatFile1.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin\\\"");  	BatFile1.WriteLine ("imgunpack.cmd " + comboBox1.SelectedItem);  	BatFile1.Close ();  	win1.StartInfo.ErrorDialog = true;  	win1.StartInfo.FileName = Patch1;  	win1.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win1.Start ();  	win1.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace.bat");  	string Patch2 = Directory.GetCurrentDirectory () + @"\Bin\trace2.bat";  	StreamWriter perm = new StreamWriter (Patch2' false' Encoding.GetEncoding (866));  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant %username%:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant все:F");  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant все:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant all:F");  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant all:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant %username%:F");  	perm.Close ();  	win1.StartInfo.ErrorDialog = true;  	win1.StartInfo.FileName = Patch2;  	this.Cursor = Cursors.WaitCursor;  	win1.Start ();  	win1.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (Directory.Exists ("Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())))  		Directory.Delete ("Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())' true);  	Directory.Move ("Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())' "Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()));  	if (File.Exists ("Bin\\" + comboBox1.SelectedItem))  		File.Delete ("Bin\\" + comboBox1.SelectedItem);  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' 5);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  }  else  	return;  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button1_Click,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	File.Copy (openFileDialog1.FileName' "Bin\\" + comboBox1.SelectedItem' true);  	Process win1 = new Process ();  	string Patch1 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  	StreamWriter BatFile1 = new StreamWriter (Patch1' false' Encoding.GetEncoding (866));  	BatFile1.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin\\\"");  	BatFile1.WriteLine ("imgunpack.cmd " + comboBox1.SelectedItem);  	BatFile1.Close ();  	win1.StartInfo.ErrorDialog = true;  	win1.StartInfo.FileName = Patch1;  	win1.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win1.Start ();  	win1.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace.bat");  	string Patch2 = Directory.GetCurrentDirectory () + @"\Bin\trace2.bat";  	StreamWriter perm = new StreamWriter (Patch2' false' Encoding.GetEncoding (866));  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant %username%:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant все:F");  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant все:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant all:F");  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant all:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant %username%:F");  	perm.Close ();  	win1.StartInfo.ErrorDialog = true;  	win1.StartInfo.FileName = Patch2;  	this.Cursor = Cursors.WaitCursor;  	win1.Start ();  	win1.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (Directory.Exists ("Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())))  		Directory.Delete ("Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())' true);  	Directory.Move ("Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())' "Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()));  	if (File.Exists ("Bin\\" + comboBox1.SelectedItem))  		File.Delete ("Bin\\" + comboBox1.SelectedItem);  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' 5);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  }  else  	return;  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button1_Click,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	File.Copy (openFileDialog1.FileName' "Bin\\" + comboBox1.SelectedItem' true);  	Process win1 = new Process ();  	string Patch1 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  	StreamWriter BatFile1 = new StreamWriter (Patch1' false' Encoding.GetEncoding (866));  	BatFile1.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin\\\"");  	BatFile1.WriteLine ("imgunpack.cmd " + comboBox1.SelectedItem);  	BatFile1.Close ();  	win1.StartInfo.ErrorDialog = true;  	win1.StartInfo.FileName = Patch1;  	win1.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win1.Start ();  	win1.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace.bat");  	string Patch2 = Directory.GetCurrentDirectory () + @"\Bin\trace2.bat";  	StreamWriter perm = new StreamWriter (Patch2' false' Encoding.GetEncoding (866));  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant %username%:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant все:F");  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant все:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant all:F");  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant all:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant %username%:F");  	perm.Close ();  	win1.StartInfo.ErrorDialog = true;  	win1.StartInfo.FileName = Patch2;  	this.Cursor = Cursors.WaitCursor;  	win1.Start ();  	win1.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (Directory.Exists ("Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())))  		Directory.Delete ("Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())' true);  	Directory.Move ("Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())' "Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()));  	if (File.Exists ("Bin\\" + comboBox1.SelectedItem))  		File.Delete ("Bin\\" + comboBox1.SelectedItem);  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' 5);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  }  else  	return;  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button1_Click,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	File.Copy (openFileDialog1.FileName' "Bin\\" + comboBox1.SelectedItem' true);  	Process win1 = new Process ();  	string Patch1 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  	StreamWriter BatFile1 = new StreamWriter (Patch1' false' Encoding.GetEncoding (866));  	BatFile1.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin\\\"");  	BatFile1.WriteLine ("imgunpack.cmd " + comboBox1.SelectedItem);  	BatFile1.Close ();  	win1.StartInfo.ErrorDialog = true;  	win1.StartInfo.FileName = Patch1;  	win1.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win1.Start ();  	win1.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace.bat");  	string Patch2 = Directory.GetCurrentDirectory () + @"\Bin\trace2.bat";  	StreamWriter perm = new StreamWriter (Patch2' false' Encoding.GetEncoding (866));  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant %username%:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant все:F");  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant все:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant all:F");  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant all:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant %username%:F");  	perm.Close ();  	win1.StartInfo.ErrorDialog = true;  	win1.StartInfo.FileName = Patch2;  	this.Cursor = Cursors.WaitCursor;  	win1.Start ();  	win1.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (Directory.Exists ("Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())))  		Directory.Delete ("Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())' true);  	Directory.Move ("Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())' "Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()));  	if (File.Exists ("Bin\\" + comboBox1.SelectedItem))  		File.Delete ("Bin\\" + comboBox1.SelectedItem);  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' 5);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  }  else  	return;  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button1_Click,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	File.Copy (openFileDialog1.FileName' "Bin\\" + comboBox1.SelectedItem' true);  	Process win1 = new Process ();  	string Patch1 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  	StreamWriter BatFile1 = new StreamWriter (Patch1' false' Encoding.GetEncoding (866));  	BatFile1.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin\\\"");  	BatFile1.WriteLine ("imgunpack.cmd " + comboBox1.SelectedItem);  	BatFile1.Close ();  	win1.StartInfo.ErrorDialog = true;  	win1.StartInfo.FileName = Patch1;  	win1.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win1.Start ();  	win1.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace.bat");  	string Patch2 = Directory.GetCurrentDirectory () + @"\Bin\trace2.bat";  	StreamWriter perm = new StreamWriter (Patch2' false' Encoding.GetEncoding (866));  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant %username%:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant все:F");  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant все:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant all:F");  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant all:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant %username%:F");  	perm.Close ();  	win1.StartInfo.ErrorDialog = true;  	win1.StartInfo.FileName = Patch2;  	this.Cursor = Cursors.WaitCursor;  	win1.Start ();  	win1.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (Directory.Exists ("Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())))  		Directory.Delete ("Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())' true);  	Directory.Move ("Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())' "Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()));  	if (File.Exists ("Bin\\" + comboBox1.SelectedItem))  		File.Delete ("Bin\\" + comboBox1.SelectedItem);  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' 5);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  }  else  	return;  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button1_Click,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	File.Copy (openFileDialog1.FileName' "Bin\\" + comboBox1.SelectedItem' true);  	Process win1 = new Process ();  	string Patch1 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  	StreamWriter BatFile1 = new StreamWriter (Patch1' false' Encoding.GetEncoding (866));  	BatFile1.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin\\\"");  	BatFile1.WriteLine ("imgunpack.cmd " + comboBox1.SelectedItem);  	BatFile1.Close ();  	win1.StartInfo.ErrorDialog = true;  	win1.StartInfo.FileName = Patch1;  	win1.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win1.Start ();  	win1.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace.bat");  	string Patch2 = Directory.GetCurrentDirectory () + @"\Bin\trace2.bat";  	StreamWriter perm = new StreamWriter (Patch2' false' Encoding.GetEncoding (866));  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant %username%:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant все:F");  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant все:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant all:F");  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant all:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant %username%:F");  	perm.Close ();  	win1.StartInfo.ErrorDialog = true;  	win1.StartInfo.FileName = Patch2;  	this.Cursor = Cursors.WaitCursor;  	win1.Start ();  	win1.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (Directory.Exists ("Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())))  		Directory.Delete ("Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())' true);  	Directory.Move ("Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())' "Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()));  	if (File.Exists ("Bin\\" + comboBox1.SelectedItem))  		File.Delete ("Bin\\" + comboBox1.SelectedItem);  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' 5);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  }  else  	return;  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button1_Click,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	File.Copy (openFileDialog1.FileName' "Bin\\" + comboBox1.SelectedItem' true);  	Process win1 = new Process ();  	string Patch1 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  	StreamWriter BatFile1 = new StreamWriter (Patch1' false' Encoding.GetEncoding (866));  	BatFile1.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin\\\"");  	BatFile1.WriteLine ("imgunpack.cmd " + comboBox1.SelectedItem);  	BatFile1.Close ();  	win1.StartInfo.ErrorDialog = true;  	win1.StartInfo.FileName = Patch1;  	win1.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win1.Start ();  	win1.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace.bat");  	string Patch2 = Directory.GetCurrentDirectory () + @"\Bin\trace2.bat";  	StreamWriter perm = new StreamWriter (Patch2' false' Encoding.GetEncoding (866));  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant %username%:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant все:F");  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant все:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant all:F");  	perm.WriteLine ("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + "  /r /d y && icacls  \"" + Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()) + "\"" + " /grant all:F /t");  	//perm.WriteLine("cmd.exe /c takeown /f \"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " && icacls /\"" + Directory.GetCurrentDirectory() + "\\Bin\\" + Path.GetFileNameWithoutExtension(comboBox1.SelectedItem.ToString()) + "\"" + " /grant %username%:F");  	perm.Close ();  	win1.StartInfo.ErrorDialog = true;  	win1.StartInfo.FileName = Patch2;  	this.Cursor = Cursors.WaitCursor;  	win1.Start ();  	win1.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (Directory.Exists ("Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())))  		Directory.Delete ("Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())' true);  	Directory.Move ("Bin\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ())' "Utilits\\IMGRepack\\" + Path.GetFileNameWithoutExtension (comboBox1.SelectedItem.ToString ()));  	if (File.Exists ("Bin\\" + comboBox1.SelectedItem))  		File.Delete ("Bin\\" + comboBox1.SelectedItem);  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' 5);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  }  else  	return;  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button1_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button1_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button1_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,button1_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,Form5_Load,The following statement contains a magic number: this.Top = MousePosition.Y - 280;  
Magic Number,MTFAT,BR_repack,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\BR_repack.cs,Form5_Load,The following statement contains a magic number: this.Left = MousePosition.X - 250;  
Magic Number,MTFAT,Message,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Message.cs,Message,The following statement contains a magic number: for (int i = 4; i != I; i--) {  	(Controls ["button" + i.ToString ()] as Button).Visible = false;  }  
Magic Number,MTFAT,Message,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Message.cs,button2_Click,The following statement contains a magic number: fk = 2;  
Magic Number,MTFAT,Message,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Message.cs,button3_Click,The following statement contains a magic number: fk = 3;  
Magic Number,MTFAT,Message,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Message.cs,button4_Click,The following statement contains a magic number: fk = 4;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,LangInit,The following statement contains a magic number: if (File.Exists ("Langs\\" + ts + ".ini")) {  	IniFile l = new IniFile (Directory.GetCurrentDirectory () + "/Langs/" + ts + ".ini");  	//Сообщения  	if (l.ReadString ("main"' "err") != "") {  		err = l.ReadString ("main"' "err");  	}  	if (l.ReadString ("main"' "succ") != "") {  		succ = l.ReadString ("main"' "succ");  	}  	if (l.ReadString ("main"' "err1") != "") {  		err1 = l.ReadString ("main"' "err1");  	}  	if (l.ReadString ("main"' "err2") != "") {  		err2 = l.ReadString ("main"' "err2");  	}  	if (l.ReadString ("main"' "err3") != "") {  		err3 = l.ReadString ("main"' "err3");  	}  	if (l.ReadString ("main"' "un_succ") != "") {  		un_succ = l.ReadString ("main"' "un_succ");  	}  	if (l.ReadString ("main"' "re_succ") != "") {  		re_succ = l.ReadString ("main"' "re_succ");  	}  	if (l.ReadString ("main"' "build_succ") != "") {  		build_succ = l.ReadString ("main"' "build_succ");  	}  	if (l.ReadString ("main"' "repeat") != "") {  		repeat = l.ReadString ("main"' "repeat");  	}  	if (l.ReadString ("main"' "sign_succ") != "") {  		sign_succ = l.ReadString ("main"' "sign_succ");  	}  	if (l.ReadString ("main"' "err4") != "") {  		err4 = l.ReadString ("main"' "err4");  	}  	if (l.ReadString ("main"' "err5") != "") {  		err5 = l.ReadString ("main"' "err5");  	}  	if (l.ReadString ("main"' "err6") != "") {  		err6 = l.ReadString ("main"' "err6");  	}  	if (l.ReadString ("main"' "err7") != "") {  		err7 = l.ReadString ("main"' "err7");  	}  	if (l.ReadString ("main"' "del_succ") != "") {  		del_succ = l.ReadString ("main"' "del_succ");  	}  	if (l.ReadString ("main"' "del_err") != "") {  		del_err = l.ReadString ("main"' "del_err");  	}  	if (l.ReadString ("main"' "temp_succ") != "") {  		temp_succ = l.ReadString ("main"' "temp_succ");  	}  	if (l.ReadString ("main"' "temp_succ1") != "") {  		temp_succ1 = l.ReadString ("main"' "temp_succ1");  	}  	if (l.ReadString ("main"' "ok") != "") {  		ok = l.ReadString ("main"' "ok");  	}  	if (l.ReadString ("main"' "nw") != "") {  		nw = l.ReadString ("main"' "nw");  	}  	if (l.ReadString ("main"' "choose") != "") {  		choose = l.ReadString ("main"' "choose");  	}  	if (l.ReadString ("main"' "exit") != "") {  		exit = l.ReadString ("main"' "exit");  	}  	if (l.ReadString ("main"' "meta") != "") {  		meta = l.ReadString ("main"' "meta");  	}  	if (l.ReadString ("main"' "choosem") != "") {  		choosem = l.ReadString ("main"' "choosem");  	}  	if (l.ReadString ("main"' "chooses") != "") {  		chooses = l.ReadString ("main"' "chooses");  	}  	if (l.ReadString ("main"' "get") != "") {  		get = l.ReadString ("main"' "get");  	}  	if (l.ReadString ("main"' "next") != "") {  		next = l.ReadString ("main"' "next");  	}  	if (l.ReadString ("main"' "sa") != "") {  		sa = l.ReadString ("main"' "sa");  	}  	if (l.ReadString ("main"' "us") != "") {  		us = l.ReadString ("main"' "us");  	}  	if (l.ReadString ("main"' "des") != "") {  		des = l.ReadString ("main"' "des");  	}  	if (l.ReadString ("main"' "yf") != "") {  		yf = l.ReadString ("main"' "yf");  	}  	if (l.ReadString ("main"' "sm") != "") {  		sm = l.ReadString ("main"' "sm");  	}  	if (l.ReadString ("main"' "mf") != "") {  		mf = l.ReadString ("main"' "mf");  	}  	if (l.ReadString ("main"' "mz") != "") {  		mz = l.ReadString ("main"' "mz");  	}  	if (l.ReadString ("main"' "syu") != "") {  		syu = l.ReadString ("main"' "syu");  	}  	if (l.ReadString ("main"' "syn") != "") {  		syn = l.ReadString ("main"' "syn");  	}  	if (l.ReadString ("main"' "syd") != "") {  		syd = l.ReadString ("main"' "syd");  	}  	//Группы  	if (l.ReadString ("main"' "group1") != "") {  		groupBox7.Text = l.ReadString ("main"' "group1");  	}  	if (l.ReadString ("main"' "group2") != "") {  		groupBox8.Text = l.ReadString ("main"' "group2");  	}  	if (l.ReadString ("main"' "group3") != "") {  		groupBox6.Text = l.ReadString ("main"' "group3");  	}  	if (l.ReadString ("main"' "group4") != "") {  		groupBox1.Text = l.ReadString ("main"' "group4");  	}  	if (l.ReadString ("main"' "group5") != "") {  		groupBox2.Text = l.ReadString ("main"' "group5");  	}  	if (l.ReadString ("main"' "group6") != "") {  		groupBox4.Text = l.ReadString ("main"' "group6");  	}  	if (l.ReadString ("main"' "group7") != "") {  		groupBox5.Text = l.ReadString ("main"' "group7");  	}  	//Чекки  	if (l.ReadString ("main"' "check1") != "") {  		checkBox1.Text = l.ReadString ("main"' "check1");  	}  	if (l.ReadString ("main"' "check2") != "") {  		checkBox2.Text = l.ReadString ("main"' "check2");  	}  	if (l.ReadString ("main"' "check3") != "") {  		checkBox5.Text = l.ReadString ("main"' "check3");  	}  	if (l.ReadString ("main"' "check4") != "") {  		checkBox6.Text = l.ReadString ("main"' "check4");  	}  	if (l.ReadString ("main"' "check5") != "") {  		checkBox7.Text = l.ReadString ("main"' "check5");  	}  	if (l.ReadString ("main"' "check6") != "") {  		checkBox8.Text = l.ReadString ("main"' "check6");  	}  	//Текстовые поля  	if (l.ReadString ("main"' "text1") != "") {  		textBox1.Text = text1 = l.ReadString ("main"' "text1");  	}  	if (l.ReadString ("main"' "text2") != "") {  		textBox2.Text = text2 = l.ReadString ("main"' "text2");  	}  	//Список  	if (l.ReadString ("main"' "box1") != "") {  		comboBox4.Items [0] = comboBox5.Items [0] = Convert.ToString (l.ReadString ("main"' "box1"));  	}  	if (l.ReadString ("main"' "box2") != "") {  		comboBox4.Items [1] = comboBox5.Items [1] = Convert.ToString (l.ReadString ("main"' "box2"));  	}  	if (l.ReadString ("main"' "box3") != "") {  		comboBox4.Items [2] = comboBox5.Items [2] = Convert.ToString (l.ReadString ("main"' "box3"));  	}  	if (l.ReadString ("main"' "box4") != "") {  		comboBox4.Items [3] = comboBox5.Items [3] = Convert.ToString (l.ReadString ("main"' "box4"));  	}  	//Заголовки  	if (l.ReadString ("main"' "tab1") != "") {  		tabPage1.Text = l.ReadString ("main"' "tab1");  	}  	if (l.ReadString ("main"' "tab2") != "") {  		tabPage2.Text = l.ReadString ("main"' "tab2");  	}  	if (l.ReadString ("main"' "tab3") != "") {  		tabPage3.Text = l.ReadString ("main"' "tab3");  	}  	if (l.ReadString ("main"' "tab4") != "") {  		tabPage4.Text = l.ReadString ("main"' "tab4");  	}  	//Кнопки  	if (l.ReadString ("main"' "button1") != "") {  		button21.Text = l.ReadString ("main"' "button1");  	}  	if (l.ReadString ("main"' "button2") != "") {  		button24.Text = l.ReadString ("main"' "button2");  	}  	if (l.ReadString ("main"' "button3") != "") {  		button26.Text = l.ReadString ("main"' "button3");  	}  	if (l.ReadString ("main"' "button4") != "") {  		button27.Text = button19.Text = l.ReadString ("main"' "button4");  	}  	if (l.ReadString ("main"' "button5") != "") {  		button5.Text = l.ReadString ("main"' "button5");  	}  	if (l.ReadString ("main"' "button6") != "") {  		button6.Text = l.ReadString ("main"' "button6");  	}  	if (l.ReadString ("main"' "button7") != "") {  		button11.Text = l.ReadString ("main"' "button7");  	}  	if (l.ReadString ("main"' "button8") != "") {  		button4.Text = l.ReadString ("main"' "button8");  	}  	if (l.ReadString ("main"' "button9") != "") {  		button29.Text = button30.Text = l.ReadString ("main"' "button9");  	}  	if (l.ReadString ("main"' "button10") != "") {  		button7.Text = button13.Text = l.ReadString ("main"' "button10");  	}  	if (l.ReadString ("main"' "button11") != "") {  		button8.Text = button12.Text = l.ReadString ("main"' "button11");  	}  	if (l.ReadString ("main"' "button12") != "") {  		button9.Text = button10.Text = l.ReadString ("main"' "button12");  	}  	if (l.ReadString ("main"' "button13") != "") {  		button14.Text = l.ReadString ("main"' "button13");  	}  	if (l.ReadString ("main"' "button14") != "") {  		button15.Text = l.ReadString ("main"' "button14");  	}  	if (l.ReadString ("main"' "button15") != "") {  		button16.Text = l.ReadString ("main"' "button15");  	}  	if (l.ReadString ("main"' "button16") != "") {  		button17.Text = l.ReadString ("main"' "button16");  	}  	if (l.ReadString ("main"' "button17") != "") {  		button18.Text = l.ReadString ("main"' "button17");  	}  	if (l.ReadString ("main"' "button18") != "") {  		button20.Text = l.ReadString ("main"' "button18");  	}  	if (l.ReadString ("main"' "button22") != "") {  		button22.Text = l.ReadString ("main"' "button22");  	}  	if (l.ReadString ("main"' "button33") != "") {  		button33.Text = l.ReadString ("main"' "button33");  	}  	//Контекст  	if (l.ReadString ("main"' "dc") != "") {  		toolStripMenuItem1.Text = l.ReadString ("main"' "dc");  	}  	if (l.ReadString ("main"' "da") != "") {  		toolStripMenuItem2.Text = l.ReadString ("main"' "da");  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,LangInit,The following statement contains a magic number: if (File.Exists ("Langs\\" + ts + ".ini")) {  	IniFile l = new IniFile (Directory.GetCurrentDirectory () + "/Langs/" + ts + ".ini");  	//Сообщения  	if (l.ReadString ("main"' "err") != "") {  		err = l.ReadString ("main"' "err");  	}  	if (l.ReadString ("main"' "succ") != "") {  		succ = l.ReadString ("main"' "succ");  	}  	if (l.ReadString ("main"' "err1") != "") {  		err1 = l.ReadString ("main"' "err1");  	}  	if (l.ReadString ("main"' "err2") != "") {  		err2 = l.ReadString ("main"' "err2");  	}  	if (l.ReadString ("main"' "err3") != "") {  		err3 = l.ReadString ("main"' "err3");  	}  	if (l.ReadString ("main"' "un_succ") != "") {  		un_succ = l.ReadString ("main"' "un_succ");  	}  	if (l.ReadString ("main"' "re_succ") != "") {  		re_succ = l.ReadString ("main"' "re_succ");  	}  	if (l.ReadString ("main"' "build_succ") != "") {  		build_succ = l.ReadString ("main"' "build_succ");  	}  	if (l.ReadString ("main"' "repeat") != "") {  		repeat = l.ReadString ("main"' "repeat");  	}  	if (l.ReadString ("main"' "sign_succ") != "") {  		sign_succ = l.ReadString ("main"' "sign_succ");  	}  	if (l.ReadString ("main"' "err4") != "") {  		err4 = l.ReadString ("main"' "err4");  	}  	if (l.ReadString ("main"' "err5") != "") {  		err5 = l.ReadString ("main"' "err5");  	}  	if (l.ReadString ("main"' "err6") != "") {  		err6 = l.ReadString ("main"' "err6");  	}  	if (l.ReadString ("main"' "err7") != "") {  		err7 = l.ReadString ("main"' "err7");  	}  	if (l.ReadString ("main"' "del_succ") != "") {  		del_succ = l.ReadString ("main"' "del_succ");  	}  	if (l.ReadString ("main"' "del_err") != "") {  		del_err = l.ReadString ("main"' "del_err");  	}  	if (l.ReadString ("main"' "temp_succ") != "") {  		temp_succ = l.ReadString ("main"' "temp_succ");  	}  	if (l.ReadString ("main"' "temp_succ1") != "") {  		temp_succ1 = l.ReadString ("main"' "temp_succ1");  	}  	if (l.ReadString ("main"' "ok") != "") {  		ok = l.ReadString ("main"' "ok");  	}  	if (l.ReadString ("main"' "nw") != "") {  		nw = l.ReadString ("main"' "nw");  	}  	if (l.ReadString ("main"' "choose") != "") {  		choose = l.ReadString ("main"' "choose");  	}  	if (l.ReadString ("main"' "exit") != "") {  		exit = l.ReadString ("main"' "exit");  	}  	if (l.ReadString ("main"' "meta") != "") {  		meta = l.ReadString ("main"' "meta");  	}  	if (l.ReadString ("main"' "choosem") != "") {  		choosem = l.ReadString ("main"' "choosem");  	}  	if (l.ReadString ("main"' "chooses") != "") {  		chooses = l.ReadString ("main"' "chooses");  	}  	if (l.ReadString ("main"' "get") != "") {  		get = l.ReadString ("main"' "get");  	}  	if (l.ReadString ("main"' "next") != "") {  		next = l.ReadString ("main"' "next");  	}  	if (l.ReadString ("main"' "sa") != "") {  		sa = l.ReadString ("main"' "sa");  	}  	if (l.ReadString ("main"' "us") != "") {  		us = l.ReadString ("main"' "us");  	}  	if (l.ReadString ("main"' "des") != "") {  		des = l.ReadString ("main"' "des");  	}  	if (l.ReadString ("main"' "yf") != "") {  		yf = l.ReadString ("main"' "yf");  	}  	if (l.ReadString ("main"' "sm") != "") {  		sm = l.ReadString ("main"' "sm");  	}  	if (l.ReadString ("main"' "mf") != "") {  		mf = l.ReadString ("main"' "mf");  	}  	if (l.ReadString ("main"' "mz") != "") {  		mz = l.ReadString ("main"' "mz");  	}  	if (l.ReadString ("main"' "syu") != "") {  		syu = l.ReadString ("main"' "syu");  	}  	if (l.ReadString ("main"' "syn") != "") {  		syn = l.ReadString ("main"' "syn");  	}  	if (l.ReadString ("main"' "syd") != "") {  		syd = l.ReadString ("main"' "syd");  	}  	//Группы  	if (l.ReadString ("main"' "group1") != "") {  		groupBox7.Text = l.ReadString ("main"' "group1");  	}  	if (l.ReadString ("main"' "group2") != "") {  		groupBox8.Text = l.ReadString ("main"' "group2");  	}  	if (l.ReadString ("main"' "group3") != "") {  		groupBox6.Text = l.ReadString ("main"' "group3");  	}  	if (l.ReadString ("main"' "group4") != "") {  		groupBox1.Text = l.ReadString ("main"' "group4");  	}  	if (l.ReadString ("main"' "group5") != "") {  		groupBox2.Text = l.ReadString ("main"' "group5");  	}  	if (l.ReadString ("main"' "group6") != "") {  		groupBox4.Text = l.ReadString ("main"' "group6");  	}  	if (l.ReadString ("main"' "group7") != "") {  		groupBox5.Text = l.ReadString ("main"' "group7");  	}  	//Чекки  	if (l.ReadString ("main"' "check1") != "") {  		checkBox1.Text = l.ReadString ("main"' "check1");  	}  	if (l.ReadString ("main"' "check2") != "") {  		checkBox2.Text = l.ReadString ("main"' "check2");  	}  	if (l.ReadString ("main"' "check3") != "") {  		checkBox5.Text = l.ReadString ("main"' "check3");  	}  	if (l.ReadString ("main"' "check4") != "") {  		checkBox6.Text = l.ReadString ("main"' "check4");  	}  	if (l.ReadString ("main"' "check5") != "") {  		checkBox7.Text = l.ReadString ("main"' "check5");  	}  	if (l.ReadString ("main"' "check6") != "") {  		checkBox8.Text = l.ReadString ("main"' "check6");  	}  	//Текстовые поля  	if (l.ReadString ("main"' "text1") != "") {  		textBox1.Text = text1 = l.ReadString ("main"' "text1");  	}  	if (l.ReadString ("main"' "text2") != "") {  		textBox2.Text = text2 = l.ReadString ("main"' "text2");  	}  	//Список  	if (l.ReadString ("main"' "box1") != "") {  		comboBox4.Items [0] = comboBox5.Items [0] = Convert.ToString (l.ReadString ("main"' "box1"));  	}  	if (l.ReadString ("main"' "box2") != "") {  		comboBox4.Items [1] = comboBox5.Items [1] = Convert.ToString (l.ReadString ("main"' "box2"));  	}  	if (l.ReadString ("main"' "box3") != "") {  		comboBox4.Items [2] = comboBox5.Items [2] = Convert.ToString (l.ReadString ("main"' "box3"));  	}  	if (l.ReadString ("main"' "box4") != "") {  		comboBox4.Items [3] = comboBox5.Items [3] = Convert.ToString (l.ReadString ("main"' "box4"));  	}  	//Заголовки  	if (l.ReadString ("main"' "tab1") != "") {  		tabPage1.Text = l.ReadString ("main"' "tab1");  	}  	if (l.ReadString ("main"' "tab2") != "") {  		tabPage2.Text = l.ReadString ("main"' "tab2");  	}  	if (l.ReadString ("main"' "tab3") != "") {  		tabPage3.Text = l.ReadString ("main"' "tab3");  	}  	if (l.ReadString ("main"' "tab4") != "") {  		tabPage4.Text = l.ReadString ("main"' "tab4");  	}  	//Кнопки  	if (l.ReadString ("main"' "button1") != "") {  		button21.Text = l.ReadString ("main"' "button1");  	}  	if (l.ReadString ("main"' "button2") != "") {  		button24.Text = l.ReadString ("main"' "button2");  	}  	if (l.ReadString ("main"' "button3") != "") {  		button26.Text = l.ReadString ("main"' "button3");  	}  	if (l.ReadString ("main"' "button4") != "") {  		button27.Text = button19.Text = l.ReadString ("main"' "button4");  	}  	if (l.ReadString ("main"' "button5") != "") {  		button5.Text = l.ReadString ("main"' "button5");  	}  	if (l.ReadString ("main"' "button6") != "") {  		button6.Text = l.ReadString ("main"' "button6");  	}  	if (l.ReadString ("main"' "button7") != "") {  		button11.Text = l.ReadString ("main"' "button7");  	}  	if (l.ReadString ("main"' "button8") != "") {  		button4.Text = l.ReadString ("main"' "button8");  	}  	if (l.ReadString ("main"' "button9") != "") {  		button29.Text = button30.Text = l.ReadString ("main"' "button9");  	}  	if (l.ReadString ("main"' "button10") != "") {  		button7.Text = button13.Text = l.ReadString ("main"' "button10");  	}  	if (l.ReadString ("main"' "button11") != "") {  		button8.Text = button12.Text = l.ReadString ("main"' "button11");  	}  	if (l.ReadString ("main"' "button12") != "") {  		button9.Text = button10.Text = l.ReadString ("main"' "button12");  	}  	if (l.ReadString ("main"' "button13") != "") {  		button14.Text = l.ReadString ("main"' "button13");  	}  	if (l.ReadString ("main"' "button14") != "") {  		button15.Text = l.ReadString ("main"' "button14");  	}  	if (l.ReadString ("main"' "button15") != "") {  		button16.Text = l.ReadString ("main"' "button15");  	}  	if (l.ReadString ("main"' "button16") != "") {  		button17.Text = l.ReadString ("main"' "button16");  	}  	if (l.ReadString ("main"' "button17") != "") {  		button18.Text = l.ReadString ("main"' "button17");  	}  	if (l.ReadString ("main"' "button18") != "") {  		button20.Text = l.ReadString ("main"' "button18");  	}  	if (l.ReadString ("main"' "button22") != "") {  		button22.Text = l.ReadString ("main"' "button22");  	}  	if (l.ReadString ("main"' "button33") != "") {  		button33.Text = l.ReadString ("main"' "button33");  	}  	//Контекст  	if (l.ReadString ("main"' "dc") != "") {  		toolStripMenuItem1.Text = l.ReadString ("main"' "dc");  	}  	if (l.ReadString ("main"' "da") != "") {  		toolStripMenuItem2.Text = l.ReadString ("main"' "da");  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,LangInit,The following statement contains a magic number: if (File.Exists ("Langs\\" + ts + ".ini")) {  	IniFile l = new IniFile (Directory.GetCurrentDirectory () + "/Langs/" + ts + ".ini");  	//Сообщения  	if (l.ReadString ("main"' "err") != "") {  		err = l.ReadString ("main"' "err");  	}  	if (l.ReadString ("main"' "succ") != "") {  		succ = l.ReadString ("main"' "succ");  	}  	if (l.ReadString ("main"' "err1") != "") {  		err1 = l.ReadString ("main"' "err1");  	}  	if (l.ReadString ("main"' "err2") != "") {  		err2 = l.ReadString ("main"' "err2");  	}  	if (l.ReadString ("main"' "err3") != "") {  		err3 = l.ReadString ("main"' "err3");  	}  	if (l.ReadString ("main"' "un_succ") != "") {  		un_succ = l.ReadString ("main"' "un_succ");  	}  	if (l.ReadString ("main"' "re_succ") != "") {  		re_succ = l.ReadString ("main"' "re_succ");  	}  	if (l.ReadString ("main"' "build_succ") != "") {  		build_succ = l.ReadString ("main"' "build_succ");  	}  	if (l.ReadString ("main"' "repeat") != "") {  		repeat = l.ReadString ("main"' "repeat");  	}  	if (l.ReadString ("main"' "sign_succ") != "") {  		sign_succ = l.ReadString ("main"' "sign_succ");  	}  	if (l.ReadString ("main"' "err4") != "") {  		err4 = l.ReadString ("main"' "err4");  	}  	if (l.ReadString ("main"' "err5") != "") {  		err5 = l.ReadString ("main"' "err5");  	}  	if (l.ReadString ("main"' "err6") != "") {  		err6 = l.ReadString ("main"' "err6");  	}  	if (l.ReadString ("main"' "err7") != "") {  		err7 = l.ReadString ("main"' "err7");  	}  	if (l.ReadString ("main"' "del_succ") != "") {  		del_succ = l.ReadString ("main"' "del_succ");  	}  	if (l.ReadString ("main"' "del_err") != "") {  		del_err = l.ReadString ("main"' "del_err");  	}  	if (l.ReadString ("main"' "temp_succ") != "") {  		temp_succ = l.ReadString ("main"' "temp_succ");  	}  	if (l.ReadString ("main"' "temp_succ1") != "") {  		temp_succ1 = l.ReadString ("main"' "temp_succ1");  	}  	if (l.ReadString ("main"' "ok") != "") {  		ok = l.ReadString ("main"' "ok");  	}  	if (l.ReadString ("main"' "nw") != "") {  		nw = l.ReadString ("main"' "nw");  	}  	if (l.ReadString ("main"' "choose") != "") {  		choose = l.ReadString ("main"' "choose");  	}  	if (l.ReadString ("main"' "exit") != "") {  		exit = l.ReadString ("main"' "exit");  	}  	if (l.ReadString ("main"' "meta") != "") {  		meta = l.ReadString ("main"' "meta");  	}  	if (l.ReadString ("main"' "choosem") != "") {  		choosem = l.ReadString ("main"' "choosem");  	}  	if (l.ReadString ("main"' "chooses") != "") {  		chooses = l.ReadString ("main"' "chooses");  	}  	if (l.ReadString ("main"' "get") != "") {  		get = l.ReadString ("main"' "get");  	}  	if (l.ReadString ("main"' "next") != "") {  		next = l.ReadString ("main"' "next");  	}  	if (l.ReadString ("main"' "sa") != "") {  		sa = l.ReadString ("main"' "sa");  	}  	if (l.ReadString ("main"' "us") != "") {  		us = l.ReadString ("main"' "us");  	}  	if (l.ReadString ("main"' "des") != "") {  		des = l.ReadString ("main"' "des");  	}  	if (l.ReadString ("main"' "yf") != "") {  		yf = l.ReadString ("main"' "yf");  	}  	if (l.ReadString ("main"' "sm") != "") {  		sm = l.ReadString ("main"' "sm");  	}  	if (l.ReadString ("main"' "mf") != "") {  		mf = l.ReadString ("main"' "mf");  	}  	if (l.ReadString ("main"' "mz") != "") {  		mz = l.ReadString ("main"' "mz");  	}  	if (l.ReadString ("main"' "syu") != "") {  		syu = l.ReadString ("main"' "syu");  	}  	if (l.ReadString ("main"' "syn") != "") {  		syn = l.ReadString ("main"' "syn");  	}  	if (l.ReadString ("main"' "syd") != "") {  		syd = l.ReadString ("main"' "syd");  	}  	//Группы  	if (l.ReadString ("main"' "group1") != "") {  		groupBox7.Text = l.ReadString ("main"' "group1");  	}  	if (l.ReadString ("main"' "group2") != "") {  		groupBox8.Text = l.ReadString ("main"' "group2");  	}  	if (l.ReadString ("main"' "group3") != "") {  		groupBox6.Text = l.ReadString ("main"' "group3");  	}  	if (l.ReadString ("main"' "group4") != "") {  		groupBox1.Text = l.ReadString ("main"' "group4");  	}  	if (l.ReadString ("main"' "group5") != "") {  		groupBox2.Text = l.ReadString ("main"' "group5");  	}  	if (l.ReadString ("main"' "group6") != "") {  		groupBox4.Text = l.ReadString ("main"' "group6");  	}  	if (l.ReadString ("main"' "group7") != "") {  		groupBox5.Text = l.ReadString ("main"' "group7");  	}  	//Чекки  	if (l.ReadString ("main"' "check1") != "") {  		checkBox1.Text = l.ReadString ("main"' "check1");  	}  	if (l.ReadString ("main"' "check2") != "") {  		checkBox2.Text = l.ReadString ("main"' "check2");  	}  	if (l.ReadString ("main"' "check3") != "") {  		checkBox5.Text = l.ReadString ("main"' "check3");  	}  	if (l.ReadString ("main"' "check4") != "") {  		checkBox6.Text = l.ReadString ("main"' "check4");  	}  	if (l.ReadString ("main"' "check5") != "") {  		checkBox7.Text = l.ReadString ("main"' "check5");  	}  	if (l.ReadString ("main"' "check6") != "") {  		checkBox8.Text = l.ReadString ("main"' "check6");  	}  	//Текстовые поля  	if (l.ReadString ("main"' "text1") != "") {  		textBox1.Text = text1 = l.ReadString ("main"' "text1");  	}  	if (l.ReadString ("main"' "text2") != "") {  		textBox2.Text = text2 = l.ReadString ("main"' "text2");  	}  	//Список  	if (l.ReadString ("main"' "box1") != "") {  		comboBox4.Items [0] = comboBox5.Items [0] = Convert.ToString (l.ReadString ("main"' "box1"));  	}  	if (l.ReadString ("main"' "box2") != "") {  		comboBox4.Items [1] = comboBox5.Items [1] = Convert.ToString (l.ReadString ("main"' "box2"));  	}  	if (l.ReadString ("main"' "box3") != "") {  		comboBox4.Items [2] = comboBox5.Items [2] = Convert.ToString (l.ReadString ("main"' "box3"));  	}  	if (l.ReadString ("main"' "box4") != "") {  		comboBox4.Items [3] = comboBox5.Items [3] = Convert.ToString (l.ReadString ("main"' "box4"));  	}  	//Заголовки  	if (l.ReadString ("main"' "tab1") != "") {  		tabPage1.Text = l.ReadString ("main"' "tab1");  	}  	if (l.ReadString ("main"' "tab2") != "") {  		tabPage2.Text = l.ReadString ("main"' "tab2");  	}  	if (l.ReadString ("main"' "tab3") != "") {  		tabPage3.Text = l.ReadString ("main"' "tab3");  	}  	if (l.ReadString ("main"' "tab4") != "") {  		tabPage4.Text = l.ReadString ("main"' "tab4");  	}  	//Кнопки  	if (l.ReadString ("main"' "button1") != "") {  		button21.Text = l.ReadString ("main"' "button1");  	}  	if (l.ReadString ("main"' "button2") != "") {  		button24.Text = l.ReadString ("main"' "button2");  	}  	if (l.ReadString ("main"' "button3") != "") {  		button26.Text = l.ReadString ("main"' "button3");  	}  	if (l.ReadString ("main"' "button4") != "") {  		button27.Text = button19.Text = l.ReadString ("main"' "button4");  	}  	if (l.ReadString ("main"' "button5") != "") {  		button5.Text = l.ReadString ("main"' "button5");  	}  	if (l.ReadString ("main"' "button6") != "") {  		button6.Text = l.ReadString ("main"' "button6");  	}  	if (l.ReadString ("main"' "button7") != "") {  		button11.Text = l.ReadString ("main"' "button7");  	}  	if (l.ReadString ("main"' "button8") != "") {  		button4.Text = l.ReadString ("main"' "button8");  	}  	if (l.ReadString ("main"' "button9") != "") {  		button29.Text = button30.Text = l.ReadString ("main"' "button9");  	}  	if (l.ReadString ("main"' "button10") != "") {  		button7.Text = button13.Text = l.ReadString ("main"' "button10");  	}  	if (l.ReadString ("main"' "button11") != "") {  		button8.Text = button12.Text = l.ReadString ("main"' "button11");  	}  	if (l.ReadString ("main"' "button12") != "") {  		button9.Text = button10.Text = l.ReadString ("main"' "button12");  	}  	if (l.ReadString ("main"' "button13") != "") {  		button14.Text = l.ReadString ("main"' "button13");  	}  	if (l.ReadString ("main"' "button14") != "") {  		button15.Text = l.ReadString ("main"' "button14");  	}  	if (l.ReadString ("main"' "button15") != "") {  		button16.Text = l.ReadString ("main"' "button15");  	}  	if (l.ReadString ("main"' "button16") != "") {  		button17.Text = l.ReadString ("main"' "button16");  	}  	if (l.ReadString ("main"' "button17") != "") {  		button18.Text = l.ReadString ("main"' "button17");  	}  	if (l.ReadString ("main"' "button18") != "") {  		button20.Text = l.ReadString ("main"' "button18");  	}  	if (l.ReadString ("main"' "button22") != "") {  		button22.Text = l.ReadString ("main"' "button22");  	}  	if (l.ReadString ("main"' "button33") != "") {  		button33.Text = l.ReadString ("main"' "button33");  	}  	//Контекст  	if (l.ReadString ("main"' "dc") != "") {  		toolStripMenuItem1.Text = l.ReadString ("main"' "dc");  	}  	if (l.ReadString ("main"' "da") != "") {  		toolStripMenuItem2.Text = l.ReadString ("main"' "da");  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,LangInit,The following statement contains a magic number: if (File.Exists ("Langs\\" + ts + ".ini")) {  	IniFile l = new IniFile (Directory.GetCurrentDirectory () + "/Langs/" + ts + ".ini");  	//Сообщения  	if (l.ReadString ("main"' "err") != "") {  		err = l.ReadString ("main"' "err");  	}  	if (l.ReadString ("main"' "succ") != "") {  		succ = l.ReadString ("main"' "succ");  	}  	if (l.ReadString ("main"' "err1") != "") {  		err1 = l.ReadString ("main"' "err1");  	}  	if (l.ReadString ("main"' "err2") != "") {  		err2 = l.ReadString ("main"' "err2");  	}  	if (l.ReadString ("main"' "err3") != "") {  		err3 = l.ReadString ("main"' "err3");  	}  	if (l.ReadString ("main"' "un_succ") != "") {  		un_succ = l.ReadString ("main"' "un_succ");  	}  	if (l.ReadString ("main"' "re_succ") != "") {  		re_succ = l.ReadString ("main"' "re_succ");  	}  	if (l.ReadString ("main"' "build_succ") != "") {  		build_succ = l.ReadString ("main"' "build_succ");  	}  	if (l.ReadString ("main"' "repeat") != "") {  		repeat = l.ReadString ("main"' "repeat");  	}  	if (l.ReadString ("main"' "sign_succ") != "") {  		sign_succ = l.ReadString ("main"' "sign_succ");  	}  	if (l.ReadString ("main"' "err4") != "") {  		err4 = l.ReadString ("main"' "err4");  	}  	if (l.ReadString ("main"' "err5") != "") {  		err5 = l.ReadString ("main"' "err5");  	}  	if (l.ReadString ("main"' "err6") != "") {  		err6 = l.ReadString ("main"' "err6");  	}  	if (l.ReadString ("main"' "err7") != "") {  		err7 = l.ReadString ("main"' "err7");  	}  	if (l.ReadString ("main"' "del_succ") != "") {  		del_succ = l.ReadString ("main"' "del_succ");  	}  	if (l.ReadString ("main"' "del_err") != "") {  		del_err = l.ReadString ("main"' "del_err");  	}  	if (l.ReadString ("main"' "temp_succ") != "") {  		temp_succ = l.ReadString ("main"' "temp_succ");  	}  	if (l.ReadString ("main"' "temp_succ1") != "") {  		temp_succ1 = l.ReadString ("main"' "temp_succ1");  	}  	if (l.ReadString ("main"' "ok") != "") {  		ok = l.ReadString ("main"' "ok");  	}  	if (l.ReadString ("main"' "nw") != "") {  		nw = l.ReadString ("main"' "nw");  	}  	if (l.ReadString ("main"' "choose") != "") {  		choose = l.ReadString ("main"' "choose");  	}  	if (l.ReadString ("main"' "exit") != "") {  		exit = l.ReadString ("main"' "exit");  	}  	if (l.ReadString ("main"' "meta") != "") {  		meta = l.ReadString ("main"' "meta");  	}  	if (l.ReadString ("main"' "choosem") != "") {  		choosem = l.ReadString ("main"' "choosem");  	}  	if (l.ReadString ("main"' "chooses") != "") {  		chooses = l.ReadString ("main"' "chooses");  	}  	if (l.ReadString ("main"' "get") != "") {  		get = l.ReadString ("main"' "get");  	}  	if (l.ReadString ("main"' "next") != "") {  		next = l.ReadString ("main"' "next");  	}  	if (l.ReadString ("main"' "sa") != "") {  		sa = l.ReadString ("main"' "sa");  	}  	if (l.ReadString ("main"' "us") != "") {  		us = l.ReadString ("main"' "us");  	}  	if (l.ReadString ("main"' "des") != "") {  		des = l.ReadString ("main"' "des");  	}  	if (l.ReadString ("main"' "yf") != "") {  		yf = l.ReadString ("main"' "yf");  	}  	if (l.ReadString ("main"' "sm") != "") {  		sm = l.ReadString ("main"' "sm");  	}  	if (l.ReadString ("main"' "mf") != "") {  		mf = l.ReadString ("main"' "mf");  	}  	if (l.ReadString ("main"' "mz") != "") {  		mz = l.ReadString ("main"' "mz");  	}  	if (l.ReadString ("main"' "syu") != "") {  		syu = l.ReadString ("main"' "syu");  	}  	if (l.ReadString ("main"' "syn") != "") {  		syn = l.ReadString ("main"' "syn");  	}  	if (l.ReadString ("main"' "syd") != "") {  		syd = l.ReadString ("main"' "syd");  	}  	//Группы  	if (l.ReadString ("main"' "group1") != "") {  		groupBox7.Text = l.ReadString ("main"' "group1");  	}  	if (l.ReadString ("main"' "group2") != "") {  		groupBox8.Text = l.ReadString ("main"' "group2");  	}  	if (l.ReadString ("main"' "group3") != "") {  		groupBox6.Text = l.ReadString ("main"' "group3");  	}  	if (l.ReadString ("main"' "group4") != "") {  		groupBox1.Text = l.ReadString ("main"' "group4");  	}  	if (l.ReadString ("main"' "group5") != "") {  		groupBox2.Text = l.ReadString ("main"' "group5");  	}  	if (l.ReadString ("main"' "group6") != "") {  		groupBox4.Text = l.ReadString ("main"' "group6");  	}  	if (l.ReadString ("main"' "group7") != "") {  		groupBox5.Text = l.ReadString ("main"' "group7");  	}  	//Чекки  	if (l.ReadString ("main"' "check1") != "") {  		checkBox1.Text = l.ReadString ("main"' "check1");  	}  	if (l.ReadString ("main"' "check2") != "") {  		checkBox2.Text = l.ReadString ("main"' "check2");  	}  	if (l.ReadString ("main"' "check3") != "") {  		checkBox5.Text = l.ReadString ("main"' "check3");  	}  	if (l.ReadString ("main"' "check4") != "") {  		checkBox6.Text = l.ReadString ("main"' "check4");  	}  	if (l.ReadString ("main"' "check5") != "") {  		checkBox7.Text = l.ReadString ("main"' "check5");  	}  	if (l.ReadString ("main"' "check6") != "") {  		checkBox8.Text = l.ReadString ("main"' "check6");  	}  	//Текстовые поля  	if (l.ReadString ("main"' "text1") != "") {  		textBox1.Text = text1 = l.ReadString ("main"' "text1");  	}  	if (l.ReadString ("main"' "text2") != "") {  		textBox2.Text = text2 = l.ReadString ("main"' "text2");  	}  	//Список  	if (l.ReadString ("main"' "box1") != "") {  		comboBox4.Items [0] = comboBox5.Items [0] = Convert.ToString (l.ReadString ("main"' "box1"));  	}  	if (l.ReadString ("main"' "box2") != "") {  		comboBox4.Items [1] = comboBox5.Items [1] = Convert.ToString (l.ReadString ("main"' "box2"));  	}  	if (l.ReadString ("main"' "box3") != "") {  		comboBox4.Items [2] = comboBox5.Items [2] = Convert.ToString (l.ReadString ("main"' "box3"));  	}  	if (l.ReadString ("main"' "box4") != "") {  		comboBox4.Items [3] = comboBox5.Items [3] = Convert.ToString (l.ReadString ("main"' "box4"));  	}  	//Заголовки  	if (l.ReadString ("main"' "tab1") != "") {  		tabPage1.Text = l.ReadString ("main"' "tab1");  	}  	if (l.ReadString ("main"' "tab2") != "") {  		tabPage2.Text = l.ReadString ("main"' "tab2");  	}  	if (l.ReadString ("main"' "tab3") != "") {  		tabPage3.Text = l.ReadString ("main"' "tab3");  	}  	if (l.ReadString ("main"' "tab4") != "") {  		tabPage4.Text = l.ReadString ("main"' "tab4");  	}  	//Кнопки  	if (l.ReadString ("main"' "button1") != "") {  		button21.Text = l.ReadString ("main"' "button1");  	}  	if (l.ReadString ("main"' "button2") != "") {  		button24.Text = l.ReadString ("main"' "button2");  	}  	if (l.ReadString ("main"' "button3") != "") {  		button26.Text = l.ReadString ("main"' "button3");  	}  	if (l.ReadString ("main"' "button4") != "") {  		button27.Text = button19.Text = l.ReadString ("main"' "button4");  	}  	if (l.ReadString ("main"' "button5") != "") {  		button5.Text = l.ReadString ("main"' "button5");  	}  	if (l.ReadString ("main"' "button6") != "") {  		button6.Text = l.ReadString ("main"' "button6");  	}  	if (l.ReadString ("main"' "button7") != "") {  		button11.Text = l.ReadString ("main"' "button7");  	}  	if (l.ReadString ("main"' "button8") != "") {  		button4.Text = l.ReadString ("main"' "button8");  	}  	if (l.ReadString ("main"' "button9") != "") {  		button29.Text = button30.Text = l.ReadString ("main"' "button9");  	}  	if (l.ReadString ("main"' "button10") != "") {  		button7.Text = button13.Text = l.ReadString ("main"' "button10");  	}  	if (l.ReadString ("main"' "button11") != "") {  		button8.Text = button12.Text = l.ReadString ("main"' "button11");  	}  	if (l.ReadString ("main"' "button12") != "") {  		button9.Text = button10.Text = l.ReadString ("main"' "button12");  	}  	if (l.ReadString ("main"' "button13") != "") {  		button14.Text = l.ReadString ("main"' "button13");  	}  	if (l.ReadString ("main"' "button14") != "") {  		button15.Text = l.ReadString ("main"' "button14");  	}  	if (l.ReadString ("main"' "button15") != "") {  		button16.Text = l.ReadString ("main"' "button15");  	}  	if (l.ReadString ("main"' "button16") != "") {  		button17.Text = l.ReadString ("main"' "button16");  	}  	if (l.ReadString ("main"' "button17") != "") {  		button18.Text = l.ReadString ("main"' "button17");  	}  	if (l.ReadString ("main"' "button18") != "") {  		button20.Text = l.ReadString ("main"' "button18");  	}  	if (l.ReadString ("main"' "button22") != "") {  		button22.Text = l.ReadString ("main"' "button22");  	}  	if (l.ReadString ("main"' "button33") != "") {  		button33.Text = l.ReadString ("main"' "button33");  	}  	//Контекст  	if (l.ReadString ("main"' "dc") != "") {  		toolStripMenuItem1.Text = l.ReadString ("main"' "dc");  	}  	if (l.ReadString ("main"' "da") != "") {  		toolStripMenuItem2.Text = l.ReadString ("main"' "da");  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,LangInit,The following statement contains a magic number: if (l.ReadString ("main"' "box3") != "") {  	comboBox4.Items [2] = comboBox5.Items [2] = Convert.ToString (l.ReadString ("main"' "box3"));  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,LangInit,The following statement contains a magic number: if (l.ReadString ("main"' "box3") != "") {  	comboBox4.Items [2] = comboBox5.Items [2] = Convert.ToString (l.ReadString ("main"' "box3"));  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,LangInit,The following statement contains a magic number: comboBox4.Items [2] = comboBox5.Items [2] = Convert.ToString (l.ReadString ("main"' "box3"));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,LangInit,The following statement contains a magic number: comboBox4.Items [2] = comboBox5.Items [2] = Convert.ToString (l.ReadString ("main"' "box3"));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,LangInit,The following statement contains a magic number: if (l.ReadString ("main"' "box4") != "") {  	comboBox4.Items [3] = comboBox5.Items [3] = Convert.ToString (l.ReadString ("main"' "box4"));  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,LangInit,The following statement contains a magic number: if (l.ReadString ("main"' "box4") != "") {  	comboBox4.Items [3] = comboBox5.Items [3] = Convert.ToString (l.ReadString ("main"' "box4"));  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,LangInit,The following statement contains a magic number: comboBox4.Items [3] = comboBox5.Items [3] = Convert.ToString (l.ReadString ("main"' "box4"));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,LangInit,The following statement contains a magic number: comboBox4.Items [3] = comboBox5.Items [3] = Convert.ToString (l.ReadString ("main"' "box4"));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: try {  	if (openFileDialog2.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		this.Cursor = Cursors.WaitCursor;  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		try {  			using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  				zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  			}  		}  		catch (Exception) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  			string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  			StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  			BatFile0.WriteLine ("@echo off");  			BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  			BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  			BatFile0.Close ();  			Process wing = new Process ();  			wing.StartInfo.CreateNoWindow = true;  			wing.StartInfo.ErrorDialog = false;  			wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			wing.StartInfo.FileName = @"Bin\trace.bat";  			this.Cursor = Cursors.WaitCursor;  			wing.Start ();  			wing.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  			string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  			StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  			BatFile.WriteLine ("@echo off");  			BatFile.WriteLine ("attrib -s -h -r -a /s /d");  			BatFile.WriteLine ("DEL /Q atrs.bat");  			BatFile.Close ();  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  				Process winh = new Process ();  				winh.StartInfo.CreateNoWindow = true;  				winh.StartInfo.ErrorDialog = false;  				winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				winh.StartInfo.FileName = Patch;  				this.Cursor = Cursors.WaitCursor;  				winh.Start ();  				winh.WaitForExit ();  				this.Cursor = Cursors.Default;  			}  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  				File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  			if (L == "YourFiles") {  				for (int i = 0; i < checkedListBox1.Items.Count; i++) {  					{  						string D2 = null;  						string D = null;  						D = Convert.ToString (checkedListBox1.Items [i]);  						D = D.Replace ("/"' "\\");  						try {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  							}  							else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								if (D.LastIndexOf ("\\") >= 0) {  									D2 = D.Remove (D.LastIndexOf ("\\"));  								}  								Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  								File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  							}  							if (C == true) {  								if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  									CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  								}  							}  						}  						catch (Exception ex) {  							Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  							M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  							M.ShowDialog ();  						}  					}  				}  			}  			else {  				Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  				if (C == false) {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  						Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  					}  				}  			}  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  			}  			catch (Exception) {  			}  		}  		else {  			Message M = new Message (err' null' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  	else  		return;  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: try {  	if (openFileDialog2.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		this.Cursor = Cursors.WaitCursor;  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		try {  			using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  				zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  			}  		}  		catch (Exception) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  			string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  			StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  			BatFile0.WriteLine ("@echo off");  			BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  			BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  			BatFile0.Close ();  			Process wing = new Process ();  			wing.StartInfo.CreateNoWindow = true;  			wing.StartInfo.ErrorDialog = false;  			wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			wing.StartInfo.FileName = @"Bin\trace.bat";  			this.Cursor = Cursors.WaitCursor;  			wing.Start ();  			wing.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  			string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  			StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  			BatFile.WriteLine ("@echo off");  			BatFile.WriteLine ("attrib -s -h -r -a /s /d");  			BatFile.WriteLine ("DEL /Q atrs.bat");  			BatFile.Close ();  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  				Process winh = new Process ();  				winh.StartInfo.CreateNoWindow = true;  				winh.StartInfo.ErrorDialog = false;  				winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				winh.StartInfo.FileName = Patch;  				this.Cursor = Cursors.WaitCursor;  				winh.Start ();  				winh.WaitForExit ();  				this.Cursor = Cursors.Default;  			}  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  				File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  			if (L == "YourFiles") {  				for (int i = 0; i < checkedListBox1.Items.Count; i++) {  					{  						string D2 = null;  						string D = null;  						D = Convert.ToString (checkedListBox1.Items [i]);  						D = D.Replace ("/"' "\\");  						try {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  							}  							else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								if (D.LastIndexOf ("\\") >= 0) {  									D2 = D.Remove (D.LastIndexOf ("\\"));  								}  								Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  								File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  							}  							if (C == true) {  								if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  									CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  								}  							}  						}  						catch (Exception ex) {  							Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  							M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  							M.ShowDialog ();  						}  					}  				}  			}  			else {  				Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  				if (C == false) {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  						Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  					}  				}  			}  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  			}  			catch (Exception) {  			}  		}  		else {  			Message M = new Message (err' null' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  	else  		return;  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: try {  	if (openFileDialog2.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		this.Cursor = Cursors.WaitCursor;  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		try {  			using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  				zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  			}  		}  		catch (Exception) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  			string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  			StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  			BatFile0.WriteLine ("@echo off");  			BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  			BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  			BatFile0.Close ();  			Process wing = new Process ();  			wing.StartInfo.CreateNoWindow = true;  			wing.StartInfo.ErrorDialog = false;  			wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			wing.StartInfo.FileName = @"Bin\trace.bat";  			this.Cursor = Cursors.WaitCursor;  			wing.Start ();  			wing.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  			string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  			StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  			BatFile.WriteLine ("@echo off");  			BatFile.WriteLine ("attrib -s -h -r -a /s /d");  			BatFile.WriteLine ("DEL /Q atrs.bat");  			BatFile.Close ();  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  				Process winh = new Process ();  				winh.StartInfo.CreateNoWindow = true;  				winh.StartInfo.ErrorDialog = false;  				winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				winh.StartInfo.FileName = Patch;  				this.Cursor = Cursors.WaitCursor;  				winh.Start ();  				winh.WaitForExit ();  				this.Cursor = Cursors.Default;  			}  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  				File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  			if (L == "YourFiles") {  				for (int i = 0; i < checkedListBox1.Items.Count; i++) {  					{  						string D2 = null;  						string D = null;  						D = Convert.ToString (checkedListBox1.Items [i]);  						D = D.Replace ("/"' "\\");  						try {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  							}  							else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								if (D.LastIndexOf ("\\") >= 0) {  									D2 = D.Remove (D.LastIndexOf ("\\"));  								}  								Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  								File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  							}  							if (C == true) {  								if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  									CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  								}  							}  						}  						catch (Exception ex) {  							Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  							M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  							M.ShowDialog ();  						}  					}  				}  			}  			else {  				Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  				if (C == false) {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  						Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  					}  				}  			}  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  			}  			catch (Exception) {  			}  		}  		else {  			Message M = new Message (err' null' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  	else  		return;  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: try {  	if (openFileDialog2.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		this.Cursor = Cursors.WaitCursor;  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		try {  			using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  				zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  			}  		}  		catch (Exception) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  			string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  			StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  			BatFile0.WriteLine ("@echo off");  			BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  			BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  			BatFile0.Close ();  			Process wing = new Process ();  			wing.StartInfo.CreateNoWindow = true;  			wing.StartInfo.ErrorDialog = false;  			wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			wing.StartInfo.FileName = @"Bin\trace.bat";  			this.Cursor = Cursors.WaitCursor;  			wing.Start ();  			wing.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  			string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  			StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  			BatFile.WriteLine ("@echo off");  			BatFile.WriteLine ("attrib -s -h -r -a /s /d");  			BatFile.WriteLine ("DEL /Q atrs.bat");  			BatFile.Close ();  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  				Process winh = new Process ();  				winh.StartInfo.CreateNoWindow = true;  				winh.StartInfo.ErrorDialog = false;  				winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				winh.StartInfo.FileName = Patch;  				this.Cursor = Cursors.WaitCursor;  				winh.Start ();  				winh.WaitForExit ();  				this.Cursor = Cursors.Default;  			}  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  				File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  			if (L == "YourFiles") {  				for (int i = 0; i < checkedListBox1.Items.Count; i++) {  					{  						string D2 = null;  						string D = null;  						D = Convert.ToString (checkedListBox1.Items [i]);  						D = D.Replace ("/"' "\\");  						try {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  							}  							else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								if (D.LastIndexOf ("\\") >= 0) {  									D2 = D.Remove (D.LastIndexOf ("\\"));  								}  								Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  								File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  							}  							if (C == true) {  								if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  									CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  								}  							}  						}  						catch (Exception ex) {  							Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  							M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  							M.ShowDialog ();  						}  					}  				}  			}  			else {  				Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  				if (C == false) {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  						Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  					}  				}  			}  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  			}  			catch (Exception) {  			}  		}  		else {  			Message M = new Message (err' null' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  	else  		return;  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: try {  	if (openFileDialog2.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		this.Cursor = Cursors.WaitCursor;  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		try {  			using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  				zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  			}  		}  		catch (Exception) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  			string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  			StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  			BatFile0.WriteLine ("@echo off");  			BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  			BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  			BatFile0.Close ();  			Process wing = new Process ();  			wing.StartInfo.CreateNoWindow = true;  			wing.StartInfo.ErrorDialog = false;  			wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			wing.StartInfo.FileName = @"Bin\trace.bat";  			this.Cursor = Cursors.WaitCursor;  			wing.Start ();  			wing.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  			string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  			StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  			BatFile.WriteLine ("@echo off");  			BatFile.WriteLine ("attrib -s -h -r -a /s /d");  			BatFile.WriteLine ("DEL /Q atrs.bat");  			BatFile.Close ();  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  				Process winh = new Process ();  				winh.StartInfo.CreateNoWindow = true;  				winh.StartInfo.ErrorDialog = false;  				winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				winh.StartInfo.FileName = Patch;  				this.Cursor = Cursors.WaitCursor;  				winh.Start ();  				winh.WaitForExit ();  				this.Cursor = Cursors.Default;  			}  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  				File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  			if (L == "YourFiles") {  				for (int i = 0; i < checkedListBox1.Items.Count; i++) {  					{  						string D2 = null;  						string D = null;  						D = Convert.ToString (checkedListBox1.Items [i]);  						D = D.Replace ("/"' "\\");  						try {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  							}  							else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								if (D.LastIndexOf ("\\") >= 0) {  									D2 = D.Remove (D.LastIndexOf ("\\"));  								}  								Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  								File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  							}  							if (C == true) {  								if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  									CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  								}  							}  						}  						catch (Exception ex) {  							Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  							M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  							M.ShowDialog ();  						}  					}  				}  			}  			else {  				Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  				if (C == false) {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  						Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  					}  				}  			}  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  			}  			catch (Exception) {  			}  		}  		else {  			Message M = new Message (err' null' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  	else  		return;  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: try {  	if (openFileDialog2.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		this.Cursor = Cursors.WaitCursor;  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		try {  			using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  				zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  			}  		}  		catch (Exception) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  			string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  			StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  			BatFile0.WriteLine ("@echo off");  			BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  			BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  			BatFile0.Close ();  			Process wing = new Process ();  			wing.StartInfo.CreateNoWindow = true;  			wing.StartInfo.ErrorDialog = false;  			wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			wing.StartInfo.FileName = @"Bin\trace.bat";  			this.Cursor = Cursors.WaitCursor;  			wing.Start ();  			wing.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  			string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  			StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  			BatFile.WriteLine ("@echo off");  			BatFile.WriteLine ("attrib -s -h -r -a /s /d");  			BatFile.WriteLine ("DEL /Q atrs.bat");  			BatFile.Close ();  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  				Process winh = new Process ();  				winh.StartInfo.CreateNoWindow = true;  				winh.StartInfo.ErrorDialog = false;  				winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				winh.StartInfo.FileName = Patch;  				this.Cursor = Cursors.WaitCursor;  				winh.Start ();  				winh.WaitForExit ();  				this.Cursor = Cursors.Default;  			}  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  				File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  			if (L == "YourFiles") {  				for (int i = 0; i < checkedListBox1.Items.Count; i++) {  					{  						string D2 = null;  						string D = null;  						D = Convert.ToString (checkedListBox1.Items [i]);  						D = D.Replace ("/"' "\\");  						try {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  							}  							else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								if (D.LastIndexOf ("\\") >= 0) {  									D2 = D.Remove (D.LastIndexOf ("\\"));  								}  								Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  								File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  							}  							if (C == true) {  								if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  									CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  								}  							}  						}  						catch (Exception ex) {  							Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  							M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  							M.ShowDialog ();  						}  					}  				}  			}  			else {  				Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  				if (C == false) {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  						Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  					}  				}  			}  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  			}  			catch (Exception) {  			}  		}  		else {  			Message M = new Message (err' null' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  	else  		return;  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: try {  	if (openFileDialog2.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		this.Cursor = Cursors.WaitCursor;  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		try {  			using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  				zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  			}  		}  		catch (Exception) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  			string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  			StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  			BatFile0.WriteLine ("@echo off");  			BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  			BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  			BatFile0.Close ();  			Process wing = new Process ();  			wing.StartInfo.CreateNoWindow = true;  			wing.StartInfo.ErrorDialog = false;  			wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			wing.StartInfo.FileName = @"Bin\trace.bat";  			this.Cursor = Cursors.WaitCursor;  			wing.Start ();  			wing.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  			string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  			StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  			BatFile.WriteLine ("@echo off");  			BatFile.WriteLine ("attrib -s -h -r -a /s /d");  			BatFile.WriteLine ("DEL /Q atrs.bat");  			BatFile.Close ();  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  				Process winh = new Process ();  				winh.StartInfo.CreateNoWindow = true;  				winh.StartInfo.ErrorDialog = false;  				winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				winh.StartInfo.FileName = Patch;  				this.Cursor = Cursors.WaitCursor;  				winh.Start ();  				winh.WaitForExit ();  				this.Cursor = Cursors.Default;  			}  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  				File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  			if (L == "YourFiles") {  				for (int i = 0; i < checkedListBox1.Items.Count; i++) {  					{  						string D2 = null;  						string D = null;  						D = Convert.ToString (checkedListBox1.Items [i]);  						D = D.Replace ("/"' "\\");  						try {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  							}  							else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								if (D.LastIndexOf ("\\") >= 0) {  									D2 = D.Remove (D.LastIndexOf ("\\"));  								}  								Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  								File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  							}  							if (C == true) {  								if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  									CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  								}  							}  						}  						catch (Exception ex) {  							Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  							M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  							M.ShowDialog ();  						}  					}  				}  			}  			else {  				Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  				if (C == false) {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  						Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  					}  				}  			}  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  			}  			catch (Exception) {  			}  		}  		else {  			Message M = new Message (err' null' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  	else  		return;  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: try {  	if (openFileDialog2.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		this.Cursor = Cursors.WaitCursor;  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		try {  			using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  				zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  			}  		}  		catch (Exception) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  			string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  			StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  			BatFile0.WriteLine ("@echo off");  			BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  			BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  			BatFile0.Close ();  			Process wing = new Process ();  			wing.StartInfo.CreateNoWindow = true;  			wing.StartInfo.ErrorDialog = false;  			wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			wing.StartInfo.FileName = @"Bin\trace.bat";  			this.Cursor = Cursors.WaitCursor;  			wing.Start ();  			wing.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  			string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  			StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  			BatFile.WriteLine ("@echo off");  			BatFile.WriteLine ("attrib -s -h -r -a /s /d");  			BatFile.WriteLine ("DEL /Q atrs.bat");  			BatFile.Close ();  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  				Process winh = new Process ();  				winh.StartInfo.CreateNoWindow = true;  				winh.StartInfo.ErrorDialog = false;  				winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				winh.StartInfo.FileName = Patch;  				this.Cursor = Cursors.WaitCursor;  				winh.Start ();  				winh.WaitForExit ();  				this.Cursor = Cursors.Default;  			}  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  				File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  			if (L == "YourFiles") {  				for (int i = 0; i < checkedListBox1.Items.Count; i++) {  					{  						string D2 = null;  						string D = null;  						D = Convert.ToString (checkedListBox1.Items [i]);  						D = D.Replace ("/"' "\\");  						try {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  							}  							else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								if (D.LastIndexOf ("\\") >= 0) {  									D2 = D.Remove (D.LastIndexOf ("\\"));  								}  								Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  								File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  							}  							if (C == true) {  								if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  									CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  								}  							}  						}  						catch (Exception ex) {  							Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  							M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  							M.ShowDialog ();  						}  					}  				}  			}  			else {  				Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  				if (C == false) {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  						Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  					}  				}  			}  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  			}  			catch (Exception) {  			}  		}  		else {  			Message M = new Message (err' null' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  	else  		return;  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: try {  	if (openFileDialog2.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		this.Cursor = Cursors.WaitCursor;  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		try {  			using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  				zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  			}  		}  		catch (Exception) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  			string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  			StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  			BatFile0.WriteLine ("@echo off");  			BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  			BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  			BatFile0.Close ();  			Process wing = new Process ();  			wing.StartInfo.CreateNoWindow = true;  			wing.StartInfo.ErrorDialog = false;  			wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			wing.StartInfo.FileName = @"Bin\trace.bat";  			this.Cursor = Cursors.WaitCursor;  			wing.Start ();  			wing.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  			string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  			StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  			BatFile.WriteLine ("@echo off");  			BatFile.WriteLine ("attrib -s -h -r -a /s /d");  			BatFile.WriteLine ("DEL /Q atrs.bat");  			BatFile.Close ();  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  				Process winh = new Process ();  				winh.StartInfo.CreateNoWindow = true;  				winh.StartInfo.ErrorDialog = false;  				winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				winh.StartInfo.FileName = Patch;  				this.Cursor = Cursors.WaitCursor;  				winh.Start ();  				winh.WaitForExit ();  				this.Cursor = Cursors.Default;  			}  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  				File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  			if (L == "YourFiles") {  				for (int i = 0; i < checkedListBox1.Items.Count; i++) {  					{  						string D2 = null;  						string D = null;  						D = Convert.ToString (checkedListBox1.Items [i]);  						D = D.Replace ("/"' "\\");  						try {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  							}  							else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								if (D.LastIndexOf ("\\") >= 0) {  									D2 = D.Remove (D.LastIndexOf ("\\"));  								}  								Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  								File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  							}  							if (C == true) {  								if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  									CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  								}  							}  						}  						catch (Exception ex) {  							Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  							M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  							M.ShowDialog ();  						}  					}  				}  			}  			else {  				Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  				if (C == false) {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  						Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  					}  				}  			}  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  			}  			catch (Exception) {  			}  		}  		else {  			Message M = new Message (err' null' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  	else  		return;  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: try {  	if (openFileDialog2.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		this.Cursor = Cursors.WaitCursor;  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		try {  			using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  				zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  			}  		}  		catch (Exception) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  			string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  			StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  			BatFile0.WriteLine ("@echo off");  			BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  			BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  			BatFile0.Close ();  			Process wing = new Process ();  			wing.StartInfo.CreateNoWindow = true;  			wing.StartInfo.ErrorDialog = false;  			wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			wing.StartInfo.FileName = @"Bin\trace.bat";  			this.Cursor = Cursors.WaitCursor;  			wing.Start ();  			wing.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  			string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  			StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  			BatFile.WriteLine ("@echo off");  			BatFile.WriteLine ("attrib -s -h -r -a /s /d");  			BatFile.WriteLine ("DEL /Q atrs.bat");  			BatFile.Close ();  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  				Process winh = new Process ();  				winh.StartInfo.CreateNoWindow = true;  				winh.StartInfo.ErrorDialog = false;  				winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				winh.StartInfo.FileName = Patch;  				this.Cursor = Cursors.WaitCursor;  				winh.Start ();  				winh.WaitForExit ();  				this.Cursor = Cursors.Default;  			}  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  				File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  			if (L == "YourFiles") {  				for (int i = 0; i < checkedListBox1.Items.Count; i++) {  					{  						string D2 = null;  						string D = null;  						D = Convert.ToString (checkedListBox1.Items [i]);  						D = D.Replace ("/"' "\\");  						try {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  							}  							else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								if (D.LastIndexOf ("\\") >= 0) {  									D2 = D.Remove (D.LastIndexOf ("\\"));  								}  								Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  								File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  							}  							if (C == true) {  								if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  									CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  								}  							}  						}  						catch (Exception ex) {  							Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  							M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  							M.ShowDialog ();  						}  					}  				}  			}  			else {  				Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  				if (C == false) {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  						Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  					}  				}  			}  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  			}  			catch (Exception) {  			}  		}  		else {  			Message M = new Message (err' null' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  	else  		return;  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: try {  	if (openFileDialog2.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		this.Cursor = Cursors.WaitCursor;  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		try {  			using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  				zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  			}  		}  		catch (Exception) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  			string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  			StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  			BatFile0.WriteLine ("@echo off");  			BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  			BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  			BatFile0.Close ();  			Process wing = new Process ();  			wing.StartInfo.CreateNoWindow = true;  			wing.StartInfo.ErrorDialog = false;  			wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			wing.StartInfo.FileName = @"Bin\trace.bat";  			this.Cursor = Cursors.WaitCursor;  			wing.Start ();  			wing.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  			string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  			StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  			BatFile.WriteLine ("@echo off");  			BatFile.WriteLine ("attrib -s -h -r -a /s /d");  			BatFile.WriteLine ("DEL /Q atrs.bat");  			BatFile.Close ();  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  				Process winh = new Process ();  				winh.StartInfo.CreateNoWindow = true;  				winh.StartInfo.ErrorDialog = false;  				winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				winh.StartInfo.FileName = Patch;  				this.Cursor = Cursors.WaitCursor;  				winh.Start ();  				winh.WaitForExit ();  				this.Cursor = Cursors.Default;  			}  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  				File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  			if (L == "YourFiles") {  				for (int i = 0; i < checkedListBox1.Items.Count; i++) {  					{  						string D2 = null;  						string D = null;  						D = Convert.ToString (checkedListBox1.Items [i]);  						D = D.Replace ("/"' "\\");  						try {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  							}  							else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								if (D.LastIndexOf ("\\") >= 0) {  									D2 = D.Remove (D.LastIndexOf ("\\"));  								}  								Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  								File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  							}  							if (C == true) {  								if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  									CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  								}  							}  						}  						catch (Exception ex) {  							Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  							M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  							M.ShowDialog ();  						}  					}  				}  			}  			else {  				Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  				if (C == false) {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  						Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  					}  				}  			}  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  			}  			catch (Exception) {  			}  		}  		else {  			Message M = new Message (err' null' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  	else  		return;  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: try {  	if (openFileDialog2.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		this.Cursor = Cursors.WaitCursor;  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		try {  			using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  				zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  			}  		}  		catch (Exception) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  			string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  			StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  			BatFile0.WriteLine ("@echo off");  			BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  			BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  			BatFile0.Close ();  			Process wing = new Process ();  			wing.StartInfo.CreateNoWindow = true;  			wing.StartInfo.ErrorDialog = false;  			wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			wing.StartInfo.FileName = @"Bin\trace.bat";  			this.Cursor = Cursors.WaitCursor;  			wing.Start ();  			wing.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  			string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  			StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  			BatFile.WriteLine ("@echo off");  			BatFile.WriteLine ("attrib -s -h -r -a /s /d");  			BatFile.WriteLine ("DEL /Q atrs.bat");  			BatFile.Close ();  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  				Process winh = new Process ();  				winh.StartInfo.CreateNoWindow = true;  				winh.StartInfo.ErrorDialog = false;  				winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				winh.StartInfo.FileName = Patch;  				this.Cursor = Cursors.WaitCursor;  				winh.Start ();  				winh.WaitForExit ();  				this.Cursor = Cursors.Default;  			}  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  				File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  			if (L == "YourFiles") {  				for (int i = 0; i < checkedListBox1.Items.Count; i++) {  					{  						string D2 = null;  						string D = null;  						D = Convert.ToString (checkedListBox1.Items [i]);  						D = D.Replace ("/"' "\\");  						try {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  							}  							else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								if (D.LastIndexOf ("\\") >= 0) {  									D2 = D.Remove (D.LastIndexOf ("\\"));  								}  								Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  								File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  							}  							if (C == true) {  								if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  									CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  								}  							}  						}  						catch (Exception ex) {  							Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  							M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  							M.ShowDialog ();  						}  					}  				}  			}  			else {  				Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  				if (C == false) {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  						Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  					}  				}  			}  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  			}  			catch (Exception) {  			}  		}  		else {  			Message M = new Message (err' null' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  	else  		return;  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: try {  	if (openFileDialog2.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		this.Cursor = Cursors.WaitCursor;  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		try {  			using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  				zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  			}  		}  		catch (Exception) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  			string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  			StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  			BatFile0.WriteLine ("@echo off");  			BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  			BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  			BatFile0.Close ();  			Process wing = new Process ();  			wing.StartInfo.CreateNoWindow = true;  			wing.StartInfo.ErrorDialog = false;  			wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			wing.StartInfo.FileName = @"Bin\trace.bat";  			this.Cursor = Cursors.WaitCursor;  			wing.Start ();  			wing.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  			string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  			StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  			BatFile.WriteLine ("@echo off");  			BatFile.WriteLine ("attrib -s -h -r -a /s /d");  			BatFile.WriteLine ("DEL /Q atrs.bat");  			BatFile.Close ();  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  				Process winh = new Process ();  				winh.StartInfo.CreateNoWindow = true;  				winh.StartInfo.ErrorDialog = false;  				winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				winh.StartInfo.FileName = Patch;  				this.Cursor = Cursors.WaitCursor;  				winh.Start ();  				winh.WaitForExit ();  				this.Cursor = Cursors.Default;  			}  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  				File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  			if (L == "YourFiles") {  				for (int i = 0; i < checkedListBox1.Items.Count; i++) {  					{  						string D2 = null;  						string D = null;  						D = Convert.ToString (checkedListBox1.Items [i]);  						D = D.Replace ("/"' "\\");  						try {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  							}  							else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								if (D.LastIndexOf ("\\") >= 0) {  									D2 = D.Remove (D.LastIndexOf ("\\"));  								}  								Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  								File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  							}  							if (C == true) {  								if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  									CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  								}  							}  						}  						catch (Exception ex) {  							Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  							M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  							M.ShowDialog ();  						}  					}  				}  			}  			else {  				Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  				if (C == false) {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  						Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  					}  				}  			}  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  			}  			catch (Exception) {  			}  		}  		else {  			Message M = new Message (err' null' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  	else  		return;  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: try {  	if (openFileDialog2.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		this.Cursor = Cursors.WaitCursor;  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		try {  			using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  				zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  			}  		}  		catch (Exception) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  			string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  			StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  			BatFile0.WriteLine ("@echo off");  			BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  			BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  			BatFile0.Close ();  			Process wing = new Process ();  			wing.StartInfo.CreateNoWindow = true;  			wing.StartInfo.ErrorDialog = false;  			wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			wing.StartInfo.FileName = @"Bin\trace.bat";  			this.Cursor = Cursors.WaitCursor;  			wing.Start ();  			wing.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  			string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  			StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  			BatFile.WriteLine ("@echo off");  			BatFile.WriteLine ("attrib -s -h -r -a /s /d");  			BatFile.WriteLine ("DEL /Q atrs.bat");  			BatFile.Close ();  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  				Process winh = new Process ();  				winh.StartInfo.CreateNoWindow = true;  				winh.StartInfo.ErrorDialog = false;  				winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				winh.StartInfo.FileName = Patch;  				this.Cursor = Cursors.WaitCursor;  				winh.Start ();  				winh.WaitForExit ();  				this.Cursor = Cursors.Default;  			}  			if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  				File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  			if (L == "YourFiles") {  				for (int i = 0; i < checkedListBox1.Items.Count; i++) {  					{  						string D2 = null;  						string D = null;  						D = Convert.ToString (checkedListBox1.Items [i]);  						D = D.Replace ("/"' "\\");  						try {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  							}  							else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  								if (D.LastIndexOf ("\\") >= 0) {  									D2 = D.Remove (D.LastIndexOf ("\\"));  								}  								Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  								File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  							}  							if (C == true) {  								if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  									CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  								}  							}  						}  						catch (Exception ex) {  							Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  							M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  							M.ShowDialog ();  						}  					}  				}  			}  			else {  				Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  				if (C == false) {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  						Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  					}  				}  			}  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  			}  			catch (Exception) {  			}  		}  		else {  			Message M = new Message (err' null' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  	else  		return;  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (openFileDialog2.ShowDialog () == DialogResult.OK) {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  	this.Cursor = Cursors.WaitCursor;  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	try {  		using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  			zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  		}  	}  	catch (Exception) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  		BatFile0.WriteLine ("@echo off");  		BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  		BatFile0.Close ();  		Process wing = new Process ();  		wing.StartInfo.CreateNoWindow = true;  		wing.StartInfo.ErrorDialog = false;  		wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		wing.StartInfo.FileName = @"Bin\trace.bat";  		this.Cursor = Cursors.WaitCursor;  		wing.Start ();  		wing.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists (@"Bin\trace.bat"))  			File.Delete (@"Bin\trace.bat");  	}  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  		string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("attrib -s -h -r -a /s /d");  		BatFile.WriteLine ("DEL /Q atrs.bat");  		BatFile.Close ();  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  			Process winh = new Process ();  			winh.StartInfo.CreateNoWindow = true;  			winh.StartInfo.ErrorDialog = false;  			winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			winh.StartInfo.FileName = Patch;  			this.Cursor = Cursors.WaitCursor;  			winh.Start ();  			winh.WaitForExit ();  			this.Cursor = Cursors.Default;  		}  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  			File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  						if (C == true) {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  							}  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			if (C == false) {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  				}  			}  		}  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  		}  		catch (Exception) {  		}  	}  	else {  		Message M = new Message (err' null' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (openFileDialog2.ShowDialog () == DialogResult.OK) {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  	this.Cursor = Cursors.WaitCursor;  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	try {  		using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  			zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  		}  	}  	catch (Exception) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  		BatFile0.WriteLine ("@echo off");  		BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  		BatFile0.Close ();  		Process wing = new Process ();  		wing.StartInfo.CreateNoWindow = true;  		wing.StartInfo.ErrorDialog = false;  		wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		wing.StartInfo.FileName = @"Bin\trace.bat";  		this.Cursor = Cursors.WaitCursor;  		wing.Start ();  		wing.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists (@"Bin\trace.bat"))  			File.Delete (@"Bin\trace.bat");  	}  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  		string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("attrib -s -h -r -a /s /d");  		BatFile.WriteLine ("DEL /Q atrs.bat");  		BatFile.Close ();  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  			Process winh = new Process ();  			winh.StartInfo.CreateNoWindow = true;  			winh.StartInfo.ErrorDialog = false;  			winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			winh.StartInfo.FileName = Patch;  			this.Cursor = Cursors.WaitCursor;  			winh.Start ();  			winh.WaitForExit ();  			this.Cursor = Cursors.Default;  		}  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  			File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  						if (C == true) {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  							}  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			if (C == false) {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  				}  			}  		}  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  		}  		catch (Exception) {  		}  	}  	else {  		Message M = new Message (err' null' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (openFileDialog2.ShowDialog () == DialogResult.OK) {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  	this.Cursor = Cursors.WaitCursor;  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	try {  		using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  			zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  		}  	}  	catch (Exception) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  		BatFile0.WriteLine ("@echo off");  		BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  		BatFile0.Close ();  		Process wing = new Process ();  		wing.StartInfo.CreateNoWindow = true;  		wing.StartInfo.ErrorDialog = false;  		wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		wing.StartInfo.FileName = @"Bin\trace.bat";  		this.Cursor = Cursors.WaitCursor;  		wing.Start ();  		wing.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists (@"Bin\trace.bat"))  			File.Delete (@"Bin\trace.bat");  	}  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  		string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("attrib -s -h -r -a /s /d");  		BatFile.WriteLine ("DEL /Q atrs.bat");  		BatFile.Close ();  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  			Process winh = new Process ();  			winh.StartInfo.CreateNoWindow = true;  			winh.StartInfo.ErrorDialog = false;  			winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			winh.StartInfo.FileName = Patch;  			this.Cursor = Cursors.WaitCursor;  			winh.Start ();  			winh.WaitForExit ();  			this.Cursor = Cursors.Default;  		}  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  			File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  						if (C == true) {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  							}  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			if (C == false) {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  				}  			}  		}  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  		}  		catch (Exception) {  		}  	}  	else {  		Message M = new Message (err' null' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (openFileDialog2.ShowDialog () == DialogResult.OK) {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  	this.Cursor = Cursors.WaitCursor;  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	try {  		using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  			zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  		}  	}  	catch (Exception) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  		BatFile0.WriteLine ("@echo off");  		BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  		BatFile0.Close ();  		Process wing = new Process ();  		wing.StartInfo.CreateNoWindow = true;  		wing.StartInfo.ErrorDialog = false;  		wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		wing.StartInfo.FileName = @"Bin\trace.bat";  		this.Cursor = Cursors.WaitCursor;  		wing.Start ();  		wing.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists (@"Bin\trace.bat"))  			File.Delete (@"Bin\trace.bat");  	}  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  		string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("attrib -s -h -r -a /s /d");  		BatFile.WriteLine ("DEL /Q atrs.bat");  		BatFile.Close ();  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  			Process winh = new Process ();  			winh.StartInfo.CreateNoWindow = true;  			winh.StartInfo.ErrorDialog = false;  			winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			winh.StartInfo.FileName = Patch;  			this.Cursor = Cursors.WaitCursor;  			winh.Start ();  			winh.WaitForExit ();  			this.Cursor = Cursors.Default;  		}  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  			File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  						if (C == true) {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  							}  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			if (C == false) {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  				}  			}  		}  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  		}  		catch (Exception) {  		}  	}  	else {  		Message M = new Message (err' null' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (openFileDialog2.ShowDialog () == DialogResult.OK) {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  	this.Cursor = Cursors.WaitCursor;  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	try {  		using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  			zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  		}  	}  	catch (Exception) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  		BatFile0.WriteLine ("@echo off");  		BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  		BatFile0.Close ();  		Process wing = new Process ();  		wing.StartInfo.CreateNoWindow = true;  		wing.StartInfo.ErrorDialog = false;  		wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		wing.StartInfo.FileName = @"Bin\trace.bat";  		this.Cursor = Cursors.WaitCursor;  		wing.Start ();  		wing.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists (@"Bin\trace.bat"))  			File.Delete (@"Bin\trace.bat");  	}  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  		string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("attrib -s -h -r -a /s /d");  		BatFile.WriteLine ("DEL /Q atrs.bat");  		BatFile.Close ();  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  			Process winh = new Process ();  			winh.StartInfo.CreateNoWindow = true;  			winh.StartInfo.ErrorDialog = false;  			winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			winh.StartInfo.FileName = Patch;  			this.Cursor = Cursors.WaitCursor;  			winh.Start ();  			winh.WaitForExit ();  			this.Cursor = Cursors.Default;  		}  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  			File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  						if (C == true) {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  							}  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			if (C == false) {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  				}  			}  		}  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  		}  		catch (Exception) {  		}  	}  	else {  		Message M = new Message (err' null' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (openFileDialog2.ShowDialog () == DialogResult.OK) {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  	this.Cursor = Cursors.WaitCursor;  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	try {  		using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  			zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  		}  	}  	catch (Exception) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  		BatFile0.WriteLine ("@echo off");  		BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  		BatFile0.Close ();  		Process wing = new Process ();  		wing.StartInfo.CreateNoWindow = true;  		wing.StartInfo.ErrorDialog = false;  		wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		wing.StartInfo.FileName = @"Bin\trace.bat";  		this.Cursor = Cursors.WaitCursor;  		wing.Start ();  		wing.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists (@"Bin\trace.bat"))  			File.Delete (@"Bin\trace.bat");  	}  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  		string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("attrib -s -h -r -a /s /d");  		BatFile.WriteLine ("DEL /Q atrs.bat");  		BatFile.Close ();  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  			Process winh = new Process ();  			winh.StartInfo.CreateNoWindow = true;  			winh.StartInfo.ErrorDialog = false;  			winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			winh.StartInfo.FileName = Patch;  			this.Cursor = Cursors.WaitCursor;  			winh.Start ();  			winh.WaitForExit ();  			this.Cursor = Cursors.Default;  		}  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  			File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  						if (C == true) {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  							}  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			if (C == false) {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  				}  			}  		}  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  		}  		catch (Exception) {  		}  	}  	else {  		Message M = new Message (err' null' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (openFileDialog2.ShowDialog () == DialogResult.OK) {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  	this.Cursor = Cursors.WaitCursor;  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	try {  		using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  			zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  		}  	}  	catch (Exception) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  		BatFile0.WriteLine ("@echo off");  		BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  		BatFile0.Close ();  		Process wing = new Process ();  		wing.StartInfo.CreateNoWindow = true;  		wing.StartInfo.ErrorDialog = false;  		wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		wing.StartInfo.FileName = @"Bin\trace.bat";  		this.Cursor = Cursors.WaitCursor;  		wing.Start ();  		wing.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists (@"Bin\trace.bat"))  			File.Delete (@"Bin\trace.bat");  	}  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  		string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("attrib -s -h -r -a /s /d");  		BatFile.WriteLine ("DEL /Q atrs.bat");  		BatFile.Close ();  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  			Process winh = new Process ();  			winh.StartInfo.CreateNoWindow = true;  			winh.StartInfo.ErrorDialog = false;  			winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			winh.StartInfo.FileName = Patch;  			this.Cursor = Cursors.WaitCursor;  			winh.Start ();  			winh.WaitForExit ();  			this.Cursor = Cursors.Default;  		}  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  			File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  						if (C == true) {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  							}  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			if (C == false) {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  				}  			}  		}  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  		}  		catch (Exception) {  		}  	}  	else {  		Message M = new Message (err' null' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (openFileDialog2.ShowDialog () == DialogResult.OK) {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  	this.Cursor = Cursors.WaitCursor;  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	try {  		using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  			zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  		}  	}  	catch (Exception) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  		BatFile0.WriteLine ("@echo off");  		BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  		BatFile0.Close ();  		Process wing = new Process ();  		wing.StartInfo.CreateNoWindow = true;  		wing.StartInfo.ErrorDialog = false;  		wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		wing.StartInfo.FileName = @"Bin\trace.bat";  		this.Cursor = Cursors.WaitCursor;  		wing.Start ();  		wing.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists (@"Bin\trace.bat"))  			File.Delete (@"Bin\trace.bat");  	}  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  		string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("attrib -s -h -r -a /s /d");  		BatFile.WriteLine ("DEL /Q atrs.bat");  		BatFile.Close ();  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  			Process winh = new Process ();  			winh.StartInfo.CreateNoWindow = true;  			winh.StartInfo.ErrorDialog = false;  			winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			winh.StartInfo.FileName = Patch;  			this.Cursor = Cursors.WaitCursor;  			winh.Start ();  			winh.WaitForExit ();  			this.Cursor = Cursors.Default;  		}  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  			File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  						if (C == true) {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  							}  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			if (C == false) {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  				}  			}  		}  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  		}  		catch (Exception) {  		}  	}  	else {  		Message M = new Message (err' null' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (openFileDialog2.ShowDialog () == DialogResult.OK) {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  	this.Cursor = Cursors.WaitCursor;  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	try {  		using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  			zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  		}  	}  	catch (Exception) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  		BatFile0.WriteLine ("@echo off");  		BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  		BatFile0.Close ();  		Process wing = new Process ();  		wing.StartInfo.CreateNoWindow = true;  		wing.StartInfo.ErrorDialog = false;  		wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		wing.StartInfo.FileName = @"Bin\trace.bat";  		this.Cursor = Cursors.WaitCursor;  		wing.Start ();  		wing.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists (@"Bin\trace.bat"))  			File.Delete (@"Bin\trace.bat");  	}  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  		string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("attrib -s -h -r -a /s /d");  		BatFile.WriteLine ("DEL /Q atrs.bat");  		BatFile.Close ();  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  			Process winh = new Process ();  			winh.StartInfo.CreateNoWindow = true;  			winh.StartInfo.ErrorDialog = false;  			winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			winh.StartInfo.FileName = Patch;  			this.Cursor = Cursors.WaitCursor;  			winh.Start ();  			winh.WaitForExit ();  			this.Cursor = Cursors.Default;  		}  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  			File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  						if (C == true) {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  							}  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			if (C == false) {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  				}  			}  		}  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  		}  		catch (Exception) {  		}  	}  	else {  		Message M = new Message (err' null' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (openFileDialog2.ShowDialog () == DialogResult.OK) {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  	this.Cursor = Cursors.WaitCursor;  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	try {  		using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  			zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  		}  	}  	catch (Exception) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  		BatFile0.WriteLine ("@echo off");  		BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  		BatFile0.Close ();  		Process wing = new Process ();  		wing.StartInfo.CreateNoWindow = true;  		wing.StartInfo.ErrorDialog = false;  		wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		wing.StartInfo.FileName = @"Bin\trace.bat";  		this.Cursor = Cursors.WaitCursor;  		wing.Start ();  		wing.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists (@"Bin\trace.bat"))  			File.Delete (@"Bin\trace.bat");  	}  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  		string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("attrib -s -h -r -a /s /d");  		BatFile.WriteLine ("DEL /Q atrs.bat");  		BatFile.Close ();  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  			Process winh = new Process ();  			winh.StartInfo.CreateNoWindow = true;  			winh.StartInfo.ErrorDialog = false;  			winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			winh.StartInfo.FileName = Patch;  			this.Cursor = Cursors.WaitCursor;  			winh.Start ();  			winh.WaitForExit ();  			this.Cursor = Cursors.Default;  		}  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  			File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  						if (C == true) {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  							}  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			if (C == false) {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  				}  			}  		}  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  		}  		catch (Exception) {  		}  	}  	else {  		Message M = new Message (err' null' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (openFileDialog2.ShowDialog () == DialogResult.OK) {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  	this.Cursor = Cursors.WaitCursor;  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	try {  		using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  			zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  		}  	}  	catch (Exception) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  		BatFile0.WriteLine ("@echo off");  		BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  		BatFile0.Close ();  		Process wing = new Process ();  		wing.StartInfo.CreateNoWindow = true;  		wing.StartInfo.ErrorDialog = false;  		wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		wing.StartInfo.FileName = @"Bin\trace.bat";  		this.Cursor = Cursors.WaitCursor;  		wing.Start ();  		wing.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists (@"Bin\trace.bat"))  			File.Delete (@"Bin\trace.bat");  	}  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  		string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("attrib -s -h -r -a /s /d");  		BatFile.WriteLine ("DEL /Q atrs.bat");  		BatFile.Close ();  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  			Process winh = new Process ();  			winh.StartInfo.CreateNoWindow = true;  			winh.StartInfo.ErrorDialog = false;  			winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			winh.StartInfo.FileName = Patch;  			this.Cursor = Cursors.WaitCursor;  			winh.Start ();  			winh.WaitForExit ();  			this.Cursor = Cursors.Default;  		}  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  			File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  						if (C == true) {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  							}  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			if (C == false) {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  				}  			}  		}  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  		}  		catch (Exception) {  		}  	}  	else {  		Message M = new Message (err' null' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (openFileDialog2.ShowDialog () == DialogResult.OK) {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  	this.Cursor = Cursors.WaitCursor;  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	try {  		using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  			zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  		}  	}  	catch (Exception) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  		BatFile0.WriteLine ("@echo off");  		BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  		BatFile0.Close ();  		Process wing = new Process ();  		wing.StartInfo.CreateNoWindow = true;  		wing.StartInfo.ErrorDialog = false;  		wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		wing.StartInfo.FileName = @"Bin\trace.bat";  		this.Cursor = Cursors.WaitCursor;  		wing.Start ();  		wing.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists (@"Bin\trace.bat"))  			File.Delete (@"Bin\trace.bat");  	}  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  		string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("attrib -s -h -r -a /s /d");  		BatFile.WriteLine ("DEL /Q atrs.bat");  		BatFile.Close ();  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  			Process winh = new Process ();  			winh.StartInfo.CreateNoWindow = true;  			winh.StartInfo.ErrorDialog = false;  			winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			winh.StartInfo.FileName = Patch;  			this.Cursor = Cursors.WaitCursor;  			winh.Start ();  			winh.WaitForExit ();  			this.Cursor = Cursors.Default;  		}  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  			File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  						if (C == true) {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  							}  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			if (C == false) {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  				}  			}  		}  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  		}  		catch (Exception) {  		}  	}  	else {  		Message M = new Message (err' null' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (openFileDialog2.ShowDialog () == DialogResult.OK) {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  	this.Cursor = Cursors.WaitCursor;  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	try {  		using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  			zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  		}  	}  	catch (Exception) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  		BatFile0.WriteLine ("@echo off");  		BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  		BatFile0.Close ();  		Process wing = new Process ();  		wing.StartInfo.CreateNoWindow = true;  		wing.StartInfo.ErrorDialog = false;  		wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		wing.StartInfo.FileName = @"Bin\trace.bat";  		this.Cursor = Cursors.WaitCursor;  		wing.Start ();  		wing.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists (@"Bin\trace.bat"))  			File.Delete (@"Bin\trace.bat");  	}  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  		string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("attrib -s -h -r -a /s /d");  		BatFile.WriteLine ("DEL /Q atrs.bat");  		BatFile.Close ();  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  			Process winh = new Process ();  			winh.StartInfo.CreateNoWindow = true;  			winh.StartInfo.ErrorDialog = false;  			winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			winh.StartInfo.FileName = Patch;  			this.Cursor = Cursors.WaitCursor;  			winh.Start ();  			winh.WaitForExit ();  			this.Cursor = Cursors.Default;  		}  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  			File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  						if (C == true) {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  							}  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			if (C == false) {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  				}  			}  		}  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  		}  		catch (Exception) {  		}  	}  	else {  		Message M = new Message (err' null' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (openFileDialog2.ShowDialog () == DialogResult.OK) {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  	this.Cursor = Cursors.WaitCursor;  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	try {  		using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  			zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  		}  	}  	catch (Exception) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  		string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  		BatFile0.WriteLine ("@echo off");  		BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  		BatFile0.Close ();  		Process wing = new Process ();  		wing.StartInfo.CreateNoWindow = true;  		wing.StartInfo.ErrorDialog = false;  		wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		wing.StartInfo.FileName = @"Bin\trace.bat";  		this.Cursor = Cursors.WaitCursor;  		wing.Start ();  		wing.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists (@"Bin\trace.bat"))  			File.Delete (@"Bin\trace.bat");  	}  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  		string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("attrib -s -h -r -a /s /d");  		BatFile.WriteLine ("DEL /Q atrs.bat");  		BatFile.Close ();  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  			Process winh = new Process ();  			winh.StartInfo.CreateNoWindow = true;  			winh.StartInfo.ErrorDialog = false;  			winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			winh.StartInfo.FileName = Patch;  			this.Cursor = Cursors.WaitCursor;  			winh.Start ();  			winh.WaitForExit ();  			this.Cursor = Cursors.Default;  		}  		if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  			File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  						if (C == true) {  							if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  								CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  							}  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			if (C == false) {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  					Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  				}  			}  		}  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  		}  		catch (Exception) {  		}  	}  	else {  		Message M = new Message (err' null' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: try {  	using (ZipFile zip = ZipFile.Read (openFileDialog2.FileName)) {  		zip.ExtractAll ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' ExtractExistingFileAction.OverwriteSilently);  	}  }  catch (Exception) {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"))  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp"' true);  	string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  	StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  	BatFile0.WriteLine ("@echo off");  	BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  	BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\" -y");  	BatFile0.Close ();  	Process wing = new Process ();  	wing.StartInfo.CreateNoWindow = true;  	wing.StartInfo.ErrorDialog = false;  	wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	wing.StartInfo.FileName = @"Bin\trace.bat";  	this.Cursor = Cursors.WaitCursor;  	wing.Start ();  	wing.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (File.Exists (@"Bin\trace.bat"))  		File.Delete (@"Bin\trace.bat");  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  	string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("attrib -s -h -r -a /s /d");  	BatFile.WriteLine ("DEL /Q atrs.bat");  	BatFile.Close ();  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  		Process winh = new Process ();  		winh.StartInfo.CreateNoWindow = true;  		winh.StartInfo.ErrorDialog = false;  		winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		winh.StartInfo.FileName = Patch;  		this.Cursor = Cursors.WaitCursor;  		winh.Start ();  		winh.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  		File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  					if (C == true) {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  						}  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		if (C == false) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  			}  		}  	}  	SoundPlay ();  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else {  	Message M = new Message (err' null' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  	string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("attrib -s -h -r -a /s /d");  	BatFile.WriteLine ("DEL /Q atrs.bat");  	BatFile.Close ();  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  		Process winh = new Process ();  		winh.StartInfo.CreateNoWindow = true;  		winh.StartInfo.ErrorDialog = false;  		winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		winh.StartInfo.FileName = Patch;  		this.Cursor = Cursors.WaitCursor;  		winh.Start ();  		winh.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  		File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  					if (C == true) {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  						}  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		if (C == false) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  			}  		}  	}  	SoundPlay ();  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else {  	Message M = new Message (err' null' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  	string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("attrib -s -h -r -a /s /d");  	BatFile.WriteLine ("DEL /Q atrs.bat");  	BatFile.Close ();  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  		Process winh = new Process ();  		winh.StartInfo.CreateNoWindow = true;  		winh.StartInfo.ErrorDialog = false;  		winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		winh.StartInfo.FileName = Patch;  		this.Cursor = Cursors.WaitCursor;  		winh.Start ();  		winh.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  		File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  					if (C == true) {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  						}  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		if (C == false) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  			}  		}  	}  	SoundPlay ();  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else {  	Message M = new Message (err' null' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  	string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("attrib -s -h -r -a /s /d");  	BatFile.WriteLine ("DEL /Q atrs.bat");  	BatFile.Close ();  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  		Process winh = new Process ();  		winh.StartInfo.CreateNoWindow = true;  		winh.StartInfo.ErrorDialog = false;  		winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		winh.StartInfo.FileName = Patch;  		this.Cursor = Cursors.WaitCursor;  		winh.Start ();  		winh.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  		File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  					if (C == true) {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  						}  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		if (C == false) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  			}  		}  	}  	SoundPlay ();  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else {  	Message M = new Message (err' null' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  	string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("attrib -s -h -r -a /s /d");  	BatFile.WriteLine ("DEL /Q atrs.bat");  	BatFile.Close ();  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  		Process winh = new Process ();  		winh.StartInfo.CreateNoWindow = true;  		winh.StartInfo.ErrorDialog = false;  		winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		winh.StartInfo.FileName = Patch;  		this.Cursor = Cursors.WaitCursor;  		winh.Start ();  		winh.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  		File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  					if (C == true) {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  						}  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		if (C == false) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  			}  		}  	}  	SoundPlay ();  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else {  	Message M = new Message (err' null' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  	string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("attrib -s -h -r -a /s /d");  	BatFile.WriteLine ("DEL /Q atrs.bat");  	BatFile.Close ();  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  		Process winh = new Process ();  		winh.StartInfo.CreateNoWindow = true;  		winh.StartInfo.ErrorDialog = false;  		winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		winh.StartInfo.FileName = Patch;  		this.Cursor = Cursors.WaitCursor;  		winh.Start ();  		winh.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  		File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  					if (C == true) {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  						}  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		if (C == false) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  			}  		}  	}  	SoundPlay ();  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else {  	Message M = new Message (err' null' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  	string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("attrib -s -h -r -a /s /d");  	BatFile.WriteLine ("DEL /Q atrs.bat");  	BatFile.Close ();  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  		Process winh = new Process ();  		winh.StartInfo.CreateNoWindow = true;  		winh.StartInfo.ErrorDialog = false;  		winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		winh.StartInfo.FileName = Patch;  		this.Cursor = Cursors.WaitCursor;  		winh.Start ();  		winh.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  		File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  					if (C == true) {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  						}  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		if (C == false) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  			}  		}  	}  	SoundPlay ();  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else {  	Message M = new Message (err' null' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  	string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("attrib -s -h -r -a /s /d");  	BatFile.WriteLine ("DEL /Q atrs.bat");  	BatFile.Close ();  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  		Process winh = new Process ();  		winh.StartInfo.CreateNoWindow = true;  		winh.StartInfo.ErrorDialog = false;  		winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		winh.StartInfo.FileName = Patch;  		this.Cursor = Cursors.WaitCursor;  		winh.Start ();  		winh.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  		File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  					if (C == true) {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  						}  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		if (C == false) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  			}  		}  	}  	SoundPlay ();  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else {  	Message M = new Message (err' null' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  	string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("attrib -s -h -r -a /s /d");  	BatFile.WriteLine ("DEL /Q atrs.bat");  	BatFile.Close ();  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  		Process winh = new Process ();  		winh.StartInfo.CreateNoWindow = true;  		winh.StartInfo.ErrorDialog = false;  		winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		winh.StartInfo.FileName = Patch;  		this.Cursor = Cursors.WaitCursor;  		winh.Start ();  		winh.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  		File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  					if (C == true) {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  						}  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		if (C == false) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  			}  		}  	}  	SoundPlay ();  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else {  	Message M = new Message (err' null' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  	string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("attrib -s -h -r -a /s /d");  	BatFile.WriteLine ("DEL /Q atrs.bat");  	BatFile.Close ();  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  		Process winh = new Process ();  		winh.StartInfo.CreateNoWindow = true;  		winh.StartInfo.ErrorDialog = false;  		winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		winh.StartInfo.FileName = Patch;  		this.Cursor = Cursors.WaitCursor;  		winh.Start ();  		winh.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  		File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  					if (C == true) {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  						}  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		if (C == false) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  			}  		}  	}  	SoundPlay ();  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else {  	Message M = new Message (err' null' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  	string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("attrib -s -h -r -a /s /d");  	BatFile.WriteLine ("DEL /Q atrs.bat");  	BatFile.Close ();  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  		Process winh = new Process ();  		winh.StartInfo.CreateNoWindow = true;  		winh.StartInfo.ErrorDialog = false;  		winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		winh.StartInfo.FileName = Patch;  		this.Cursor = Cursors.WaitCursor;  		winh.Start ();  		winh.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  		File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  					if (C == true) {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  						}  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		if (C == false) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  			}  		}  	}  	SoundPlay ();  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else {  	Message M = new Message (err' null' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  	string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("attrib -s -h -r -a /s /d");  	BatFile.WriteLine ("DEL /Q atrs.bat");  	BatFile.Close ();  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  		Process winh = new Process ();  		winh.StartInfo.CreateNoWindow = true;  		winh.StartInfo.ErrorDialog = false;  		winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		winh.StartInfo.FileName = Patch;  		this.Cursor = Cursors.WaitCursor;  		winh.Start ();  		winh.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  		File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  					if (C == true) {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  						}  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		if (C == false) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  			}  		}  	}  	SoundPlay ();  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else {  	Message M = new Message (err' null' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\Temp")) {  	string Patch = Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("attrib -s -h -r -a /s /d");  	BatFile.WriteLine ("DEL /Q atrs.bat");  	BatFile.Close ();  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat")) {  		Process winh = new Process ();  		winh.StartInfo.CreateNoWindow = true;  		winh.StartInfo.ErrorDialog = false;  		winh.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		winh.StartInfo.FileName = Patch;  		this.Cursor = Cursors.WaitCursor;  		winh.Start ();  		winh.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	if (File.Exists (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat"))  		File.Delete (Directory.GetCurrentDirectory () + "\\WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\atrs.bat");  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  					if (C == true) {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  						}  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		if (C == false) {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  				Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  			}  		}  	}  	SoundPlay ();  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else {  	Message M = new Message (err' null' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (L == "YourFiles") {  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		{  			string D2 = null;  			string D = null;  			D = Convert.ToString (checkedListBox1.Items [i]);  			D = D.Replace ("/"' "\\");  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  				}  				else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					if (D.LastIndexOf ("\\") >= 0) {  						D2 = D.Remove (D.LastIndexOf ("\\"));  					}  					Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  					File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  				}  				if (C == true) {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  					}  				}  			}  			catch (Exception ex) {  				Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  				M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  				M.ShowDialog ();  			}  		}  	}  }  else {  	Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  	if (C == false) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  		}  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (L == "YourFiles") {  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		{  			string D2 = null;  			string D = null;  			D = Convert.ToString (checkedListBox1.Items [i]);  			D = D.Replace ("/"' "\\");  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  				}  				else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					if (D.LastIndexOf ("\\") >= 0) {  						D2 = D.Remove (D.LastIndexOf ("\\"));  					}  					Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  					File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  				}  				if (C == true) {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  					}  				}  			}  			catch (Exception ex) {  				Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  				M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  				M.ShowDialog ();  			}  		}  	}  }  else {  	Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  	if (C == false) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  		}  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (L == "YourFiles") {  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		{  			string D2 = null;  			string D = null;  			D = Convert.ToString (checkedListBox1.Items [i]);  			D = D.Replace ("/"' "\\");  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  				}  				else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					if (D.LastIndexOf ("\\") >= 0) {  						D2 = D.Remove (D.LastIndexOf ("\\"));  					}  					Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  					File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  				}  				if (C == true) {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  					}  				}  			}  			catch (Exception ex) {  				Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  				M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  				M.ShowDialog ();  			}  		}  	}  }  else {  	Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  	if (C == false) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  		}  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: if (L == "YourFiles") {  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		{  			string D2 = null;  			string D = null;  			D = Convert.ToString (checkedListBox1.Items [i]);  			D = D.Replace ("/"' "\\");  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  				}  				else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					if (D.LastIndexOf ("\\") >= 0) {  						D2 = D.Remove (D.LastIndexOf ("\\"));  					}  					Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  					File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  				}  				if (C == true) {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  					}  				}  			}  			catch (Exception ex) {  				Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  				M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  				M.ShowDialog ();  			}  		}  	}  }  else {  	Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  	if (C == false) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF") == true) {  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF"' true);  		}  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: for (int i = 0; i < checkedListBox1.Items.Count; i++) {  	{  		string D2 = null;  		string D = null;  		D = Convert.ToString (checkedListBox1.Items [i]);  		D = D.Replace ("/"' "\\");  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  			}  			else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				if (D.LastIndexOf ("\\") >= 0) {  					D2 = D.Remove (D.LastIndexOf ("\\"));  				}  				Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  				File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  			}  			if (C == true) {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  					CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  				}  			}  		}  		catch (Exception ex) {  			Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: for (int i = 0; i < checkedListBox1.Items.Count; i++) {  	{  		string D2 = null;  		string D = null;  		D = Convert.ToString (checkedListBox1.Items [i]);  		D = D.Replace ("/"' "\\");  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  			}  			else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				if (D.LastIndexOf ("\\") >= 0) {  					D2 = D.Remove (D.LastIndexOf ("\\"));  				}  				Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  				File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  			}  			if (C == true) {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  					CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  				}  			}  		}  		catch (Exception ex) {  			Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: for (int i = 0; i < checkedListBox1.Items.Count; i++) {  	{  		string D2 = null;  		string D = null;  		D = Convert.ToString (checkedListBox1.Items [i]);  		D = D.Replace ("/"' "\\");  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  			}  			else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				if (D.LastIndexOf ("\\") >= 0) {  					D2 = D.Remove (D.LastIndexOf ("\\"));  				}  				Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  				File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  			}  			if (C == true) {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  					CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  				}  			}  		}  		catch (Exception ex) {  			Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: for (int i = 0; i < checkedListBox1.Items.Count; i++) {  	{  		string D2 = null;  		string D = null;  		D = Convert.ToString (checkedListBox1.Items [i]);  		D = D.Replace ("/"' "\\");  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  			}  			else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				if (D.LastIndexOf ("\\") >= 0) {  					D2 = D.Remove (D.LastIndexOf ("\\"));  				}  				Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  				File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  			}  			if (C == true) {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  					CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  				}  			}  		}  		catch (Exception ex) {  			Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: try {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  	}  	else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		if (D.LastIndexOf ("\\") >= 0) {  			D2 = D.Remove (D.LastIndexOf ("\\"));  		}  		Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  		File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  	}  	if (C == true) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  			CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  		}  	}  }  catch (Exception ex) {  	Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: try {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  	}  	else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		if (D.LastIndexOf ("\\") >= 0) {  			D2 = D.Remove (D.LastIndexOf ("\\"));  		}  		Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  		File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  	}  	if (C == true) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  			CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  		}  	}  }  catch (Exception ex) {  	Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: try {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  	}  	else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		if (D.LastIndexOf ("\\") >= 0) {  			D2 = D.Remove (D.LastIndexOf ("\\"));  		}  		Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  		File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  	}  	if (C == true) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  			CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  		}  	}  }  catch (Exception ex) {  	Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: try {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  	}  	else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		if (D.LastIndexOf ("\\") >= 0) {  			D2 = D.Remove (D.LastIndexOf ("\\"));  		}  		Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  		File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  	}  	if (C == true) {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF") == true) {  			CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\META-INF"' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\META-INF");  		}  	}  }  catch (Exception ex) {  	Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,ZIPunpack,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	try {  		Process win = new Process ();  		win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  		Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/Temp");  		win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\system\"";  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		win.StartInfo.ErrorDialog = false;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	finally {  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		}  		openFileDialog1.Filter = "Boot Image File |*boot*.img";  		if (openFileDialog1.ShowDialog () == DialogResult.OK) {  			if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == false)  				Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			File.Copy (openFileDialog1.FileName' "WorkDIR/" + comboBox1.SelectedItem + "/" + L + "/boot.img"' true);  		}  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == true) {  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  		}  	}  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	try {  		Process win = new Process ();  		win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  		Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/Temp");  		win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\system\"";  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		win.StartInfo.ErrorDialog = false;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	finally {  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		}  		openFileDialog1.Filter = "Boot Image File |*boot*.img";  		if (openFileDialog1.ShowDialog () == DialogResult.OK) {  			if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == false)  				Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			File.Copy (openFileDialog1.FileName' "WorkDIR/" + comboBox1.SelectedItem + "/" + L + "/boot.img"' true);  		}  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == true) {  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  		}  	}  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	try {  		Process win = new Process ();  		win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  		Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/Temp");  		win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\system\"";  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		win.StartInfo.ErrorDialog = false;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	finally {  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		}  		openFileDialog1.Filter = "Boot Image File |*boot*.img";  		if (openFileDialog1.ShowDialog () == DialogResult.OK) {  			if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == false)  				Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			File.Copy (openFileDialog1.FileName' "WorkDIR/" + comboBox1.SelectedItem + "/" + L + "/boot.img"' true);  		}  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == true) {  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  		}  	}  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	try {  		Process win = new Process ();  		win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  		Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/Temp");  		win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\system\"";  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		win.StartInfo.ErrorDialog = false;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	finally {  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		}  		openFileDialog1.Filter = "Boot Image File |*boot*.img";  		if (openFileDialog1.ShowDialog () == DialogResult.OK) {  			if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == false)  				Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			File.Copy (openFileDialog1.FileName' "WorkDIR/" + comboBox1.SelectedItem + "/" + L + "/boot.img"' true);  		}  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == true) {  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  		}  	}  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	try {  		Process win = new Process ();  		win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  		Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/Temp");  		win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\system\"";  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		win.StartInfo.ErrorDialog = false;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	finally {  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		}  		openFileDialog1.Filter = "Boot Image File |*boot*.img";  		if (openFileDialog1.ShowDialog () == DialogResult.OK) {  			if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == false)  				Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			File.Copy (openFileDialog1.FileName' "WorkDIR/" + comboBox1.SelectedItem + "/" + L + "/boot.img"' true);  		}  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == true) {  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  		}  	}  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	try {  		Process win = new Process ();  		win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  		Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/Temp");  		win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\system\"";  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		win.StartInfo.ErrorDialog = false;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	finally {  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		}  		openFileDialog1.Filter = "Boot Image File |*boot*.img";  		if (openFileDialog1.ShowDialog () == DialogResult.OK) {  			if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == false)  				Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			File.Copy (openFileDialog1.FileName' "WorkDIR/" + comboBox1.SelectedItem + "/" + L + "/boot.img"' true);  		}  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == true) {  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  		}  	}  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	try {  		Process win = new Process ();  		win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  		Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/Temp");  		win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\system\"";  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		win.StartInfo.ErrorDialog = false;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	finally {  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		}  		openFileDialog1.Filter = "Boot Image File |*boot*.img";  		if (openFileDialog1.ShowDialog () == DialogResult.OK) {  			if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == false)  				Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			File.Copy (openFileDialog1.FileName' "WorkDIR/" + comboBox1.SelectedItem + "/" + L + "/boot.img"' true);  		}  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == true) {  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  		}  	}  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	try {  		Process win = new Process ();  		win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  		}  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  			Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  		Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/Temp");  		win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\system\"";  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		win.StartInfo.ErrorDialog = false;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	finally {  		if (L == "YourFiles") {  			for (int i = 0; i < checkedListBox1.Items.Count; i++) {  				{  					string D2 = null;  					string D = null;  					D = Convert.ToString (checkedListBox1.Items [i]);  					D = D.Replace ("/"' "\\");  					try {  						if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  						}  						else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  							if (D.LastIndexOf ("\\") >= 0) {  								D2 = D.Remove (D.LastIndexOf ("\\"));  							}  							Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  							File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  						}  					}  					catch (Exception ex) {  						Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  						M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  						M.ShowDialog ();  					}  				}  			}  		}  		else {  			Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		}  		openFileDialog1.Filter = "Boot Image File |*boot*.img";  		if (openFileDialog1.ShowDialog () == DialogResult.OK) {  			if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == false)  				Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/" + L);  			File.Copy (openFileDialog1.FileName' "WorkDIR/" + comboBox1.SelectedItem + "/" + L + "/boot.img"' true);  		}  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == true) {  			SoundPlay ();  			Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  			MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  			MS.ShowDialog ();  		}  	}  	try {  		if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp") == true)  			Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' true);  	}  	catch (Exception) {  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: try {  	Process win = new Process ();  	win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  	Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/Temp");  	win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\system\"";  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	win.StartInfo.ErrorDialog = false;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  }  finally {  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  	}  	openFileDialog1.Filter = "Boot Image File |*boot*.img";  	if (openFileDialog1.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == false)  			Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		File.Copy (openFileDialog1.FileName' "WorkDIR/" + comboBox1.SelectedItem + "/" + L + "/boot.img"' true);  	}  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == true) {  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: try {  	Process win = new Process ();  	win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  	Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/Temp");  	win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\system\"";  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	win.StartInfo.ErrorDialog = false;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  }  finally {  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  	}  	openFileDialog1.Filter = "Boot Image File |*boot*.img";  	if (openFileDialog1.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == false)  			Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		File.Copy (openFileDialog1.FileName' "WorkDIR/" + comboBox1.SelectedItem + "/" + L + "/boot.img"' true);  	}  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == true) {  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: try {  	Process win = new Process ();  	win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  	Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/Temp");  	win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\system\"";  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	win.StartInfo.ErrorDialog = false;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  }  finally {  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  	}  	openFileDialog1.Filter = "Boot Image File |*boot*.img";  	if (openFileDialog1.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == false)  			Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		File.Copy (openFileDialog1.FileName' "WorkDIR/" + comboBox1.SelectedItem + "/" + L + "/boot.img"' true);  	}  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == true) {  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: try {  	Process win = new Process ();  	win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  	Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/Temp");  	win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\system\"";  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	win.StartInfo.ErrorDialog = false;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  }  finally {  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  	}  	openFileDialog1.Filter = "Boot Image File |*boot*.img";  	if (openFileDialog1.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == false)  			Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		File.Copy (openFileDialog1.FileName' "WorkDIR/" + comboBox1.SelectedItem + "/" + L + "/boot.img"' true);  	}  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == true) {  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: try {  	Process win = new Process ();  	win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  	Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/Temp");  	win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\system\"";  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	win.StartInfo.ErrorDialog = false;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  }  finally {  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  	}  	openFileDialog1.Filter = "Boot Image File |*boot*.img";  	if (openFileDialog1.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == false)  			Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		File.Copy (openFileDialog1.FileName' "WorkDIR/" + comboBox1.SelectedItem + "/" + L + "/boot.img"' true);  	}  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == true) {  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: try {  	Process win = new Process ();  	win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  	Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/Temp");  	win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\system\"";  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	win.StartInfo.ErrorDialog = false;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  }  finally {  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  	}  	openFileDialog1.Filter = "Boot Image File |*boot*.img";  	if (openFileDialog1.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == false)  			Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		File.Copy (openFileDialog1.FileName' "WorkDIR/" + comboBox1.SelectedItem + "/" + L + "/boot.img"' true);  	}  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == true) {  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: try {  	Process win = new Process ();  	win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  	Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/Temp");  	win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\system\"";  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	win.StartInfo.ErrorDialog = false;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  }  finally {  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  	}  	openFileDialog1.Filter = "Boot Image File |*boot*.img";  	if (openFileDialog1.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == false)  			Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		File.Copy (openFileDialog1.FileName' "WorkDIR/" + comboBox1.SelectedItem + "/" + L + "/boot.img"' true);  	}  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == true) {  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: try {  	Process win = new Process ();  	win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == true) {  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/" + L' true);  	}  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  	Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/Temp");  	win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"WorkDIR\\" + comboBox1.SelectedItem + "\\Temp\\system\"";  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	win.StartInfo.ErrorDialog = false;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  }  finally {  	if (L == "YourFiles") {  		for (int i = 0; i < checkedListBox1.Items.Count; i++) {  			{  				string D2 = null;  				string D = null;  				D = Convert.ToString (checkedListBox1.Items [i]);  				D = D.Replace ("/"' "\\");  				try {  					if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  					}  					else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  						if (D.LastIndexOf ("\\") >= 0) {  							D2 = D.Remove (D.LastIndexOf ("\\"));  						}  						Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  						File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  					}  				}  				catch (Exception ex) {  					Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  					M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  					M.ShowDialog ();  				}  			}  		}  	}  	else {  		Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  	}  	openFileDialog1.Filter = "Boot Image File |*boot*.img";  	if (openFileDialog1.ShowDialog () == DialogResult.OK) {  		if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/" + L) == false)  			Directory.CreateDirectory ("WorkDIR/" + comboBox1.SelectedItem + "/" + L);  		File.Copy (openFileDialog1.FileName' "WorkDIR/" + comboBox1.SelectedItem + "/" + L + "/boot.img"' true);  	}  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == true) {  		SoundPlay ();  		Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: if (L == "YourFiles") {  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		{  			string D2 = null;  			string D = null;  			D = Convert.ToString (checkedListBox1.Items [i]);  			D = D.Replace ("/"' "\\");  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  				}  				else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					if (D.LastIndexOf ("\\") >= 0) {  						D2 = D.Remove (D.LastIndexOf ("\\"));  					}  					Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  					File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  				}  			}  			catch (Exception ex) {  				Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  				M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  				M.ShowDialog ();  			}  		}  	}  }  else {  	Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: if (L == "YourFiles") {  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		{  			string D2 = null;  			string D = null;  			D = Convert.ToString (checkedListBox1.Items [i]);  			D = D.Replace ("/"' "\\");  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  				}  				else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					if (D.LastIndexOf ("\\") >= 0) {  						D2 = D.Remove (D.LastIndexOf ("\\"));  					}  					Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  					File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  				}  			}  			catch (Exception ex) {  				Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  				M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  				M.ShowDialog ();  			}  		}  	}  }  else {  	Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: if (L == "YourFiles") {  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		{  			string D2 = null;  			string D = null;  			D = Convert.ToString (checkedListBox1.Items [i]);  			D = D.Replace ("/"' "\\");  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  				}  				else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					if (D.LastIndexOf ("\\") >= 0) {  						D2 = D.Remove (D.LastIndexOf ("\\"));  					}  					Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  					File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  				}  			}  			catch (Exception ex) {  				Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  				M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  				M.ShowDialog ();  			}  		}  	}  }  else {  	Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: if (L == "YourFiles") {  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		{  			string D2 = null;  			string D = null;  			D = Convert.ToString (checkedListBox1.Items [i]);  			D = D.Replace ("/"' "\\");  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  				}  				else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					if (D.LastIndexOf ("\\") >= 0) {  						D2 = D.Remove (D.LastIndexOf ("\\"));  					}  					Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  					File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  				}  			}  			catch (Exception ex) {  				Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  				M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  				M.ShowDialog ();  			}  		}  	}  }  else {  	Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: for (int i = 0; i < checkedListBox1.Items.Count; i++) {  	{  		string D2 = null;  		string D = null;  		D = Convert.ToString (checkedListBox1.Items [i]);  		D = D.Replace ("/"' "\\");  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  			}  			else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				if (D.LastIndexOf ("\\") >= 0) {  					D2 = D.Remove (D.LastIndexOf ("\\"));  				}  				Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  				File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  			}  		}  		catch (Exception ex) {  			Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: for (int i = 0; i < checkedListBox1.Items.Count; i++) {  	{  		string D2 = null;  		string D = null;  		D = Convert.ToString (checkedListBox1.Items [i]);  		D = D.Replace ("/"' "\\");  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  			}  			else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				if (D.LastIndexOf ("\\") >= 0) {  					D2 = D.Remove (D.LastIndexOf ("\\"));  				}  				Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  				File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  			}  		}  		catch (Exception ex) {  			Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: for (int i = 0; i < checkedListBox1.Items.Count; i++) {  	{  		string D2 = null;  		string D = null;  		D = Convert.ToString (checkedListBox1.Items [i]);  		D = D.Replace ("/"' "\\");  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  			}  			else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				if (D.LastIndexOf ("\\") >= 0) {  					D2 = D.Remove (D.LastIndexOf ("\\"));  				}  				Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  				File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  			}  		}  		catch (Exception ex) {  			Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: for (int i = 0; i < checkedListBox1.Items.Count; i++) {  	{  		string D2 = null;  		string D = null;  		D = Convert.ToString (checkedListBox1.Items [i]);  		D = D.Replace ("/"' "\\");  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  			}  			else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				if (D.LastIndexOf ("\\") >= 0) {  					D2 = D.Remove (D.LastIndexOf ("\\"));  				}  				Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  				File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  			}  		}  		catch (Exception ex) {  			Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: try {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  	}  	else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		if (D.LastIndexOf ("\\") >= 0) {  			D2 = D.Remove (D.LastIndexOf ("\\"));  		}  		Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  		File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  	}  }  catch (Exception ex) {  	Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: try {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  	}  	else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		if (D.LastIndexOf ("\\") >= 0) {  			D2 = D.Remove (D.LastIndexOf ("\\"));  		}  		Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  		File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  	}  }  catch (Exception ex) {  	Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: try {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  	}  	else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		if (D.LastIndexOf ("\\") >= 0) {  			D2 = D.Remove (D.LastIndexOf ("\\"));  		}  		Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  		File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  	}  }  catch (Exception ex) {  	Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: try {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  	}  	else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		if (D.LastIndexOf ("\\") >= 0) {  			D2 = D.Remove (D.LastIndexOf ("\\"));  		}  		Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  		File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  	}  }  catch (Exception ex) {  	Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == true) {  	SoundPlay ();  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == true) {  	SoundPlay ();  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == true) {  	SoundPlay ();  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == true) {  	SoundPlay ();  	Message MS = new Message (null' succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FTUnpack,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The following statement contains a magic number: if (L == "YourFiles") {  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		{  			string D2 = null;  			string D = null;  			D = Convert.ToString (checkedListBox1.Items [i]);  			D = D.Replace ("/"' "\\");  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  				}  				else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					if (D.LastIndexOf ("\\") >= 0) {  						D2 = D.Remove (D.LastIndexOf ("\\"));  					}  					Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  					File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  				}  				if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  					Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  			}  			catch (Exception ex) {  				Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  				M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  				M.ShowDialog ();  			}  		}  	}  }  else {  	Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The following statement contains a magic number: if (L == "YourFiles") {  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		{  			string D2 = null;  			string D = null;  			D = Convert.ToString (checkedListBox1.Items [i]);  			D = D.Replace ("/"' "\\");  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  				}  				else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					if (D.LastIndexOf ("\\") >= 0) {  						D2 = D.Remove (D.LastIndexOf ("\\"));  					}  					Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  					File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  				}  				if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  					Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  			}  			catch (Exception ex) {  				Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  				M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  				M.ShowDialog ();  			}  		}  	}  }  else {  	Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The following statement contains a magic number: if (L == "YourFiles") {  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		{  			string D2 = null;  			string D = null;  			D = Convert.ToString (checkedListBox1.Items [i]);  			D = D.Replace ("/"' "\\");  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  				}  				else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					if (D.LastIndexOf ("\\") >= 0) {  						D2 = D.Remove (D.LastIndexOf ("\\"));  					}  					Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  					File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  				}  				if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  					Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  			}  			catch (Exception ex) {  				Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  				M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  				M.ShowDialog ();  			}  		}  	}  }  else {  	Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The following statement contains a magic number: if (L == "YourFiles") {  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		{  			string D2 = null;  			string D = null;  			D = Convert.ToString (checkedListBox1.Items [i]);  			D = D.Replace ("/"' "\\");  			try {  				if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  				}  				else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  					if (D.LastIndexOf ("\\") >= 0) {  						D2 = D.Remove (D.LastIndexOf ("\\"));  					}  					Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  					File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  				}  				if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  					Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  			}  			catch (Exception ex) {  				Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  				M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  				M.ShowDialog ();  			}  		}  	}  }  else {  	Directory.Move ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp"' "WorkDIR/" + comboBox1.SelectedItem + "/" + L);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The following statement contains a magic number: for (int i = 0; i < checkedListBox1.Items.Count; i++) {  	{  		string D2 = null;  		string D = null;  		D = Convert.ToString (checkedListBox1.Items [i]);  		D = D.Replace ("/"' "\\");  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  			}  			else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				if (D.LastIndexOf ("\\") >= 0) {  					D2 = D.Remove (D.LastIndexOf ("\\"));  				}  				Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  				File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  			}  			if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  				Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  		}  		catch (Exception ex) {  			Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The following statement contains a magic number: for (int i = 0; i < checkedListBox1.Items.Count; i++) {  	{  		string D2 = null;  		string D = null;  		D = Convert.ToString (checkedListBox1.Items [i]);  		D = D.Replace ("/"' "\\");  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  			}  			else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				if (D.LastIndexOf ("\\") >= 0) {  					D2 = D.Remove (D.LastIndexOf ("\\"));  				}  				Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  				File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  			}  			if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  				Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  		}  		catch (Exception ex) {  			Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The following statement contains a magic number: for (int i = 0; i < checkedListBox1.Items.Count; i++) {  	{  		string D2 = null;  		string D = null;  		D = Convert.ToString (checkedListBox1.Items [i]);  		D = D.Replace ("/"' "\\");  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  			}  			else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				if (D.LastIndexOf ("\\") >= 0) {  					D2 = D.Remove (D.LastIndexOf ("\\"));  				}  				Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  				File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  			}  			if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  				Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  		}  		catch (Exception ex) {  			Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The following statement contains a magic number: for (int i = 0; i < checkedListBox1.Items.Count; i++) {  	{  		string D2 = null;  		string D = null;  		D = Convert.ToString (checkedListBox1.Items [i]);  		D = D.Replace ("/"' "\\");  		try {  			if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  			}  			else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  				if (D.LastIndexOf ("\\") >= 0) {  					D2 = D.Remove (D.LastIndexOf ("\\"));  				}  				Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  				File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  			}  			if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  				Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  		}  		catch (Exception ex) {  			Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.ShowDialog ();  		}  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The following statement contains a magic number: try {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  	}  	else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		if (D.LastIndexOf ("\\") >= 0) {  			D2 = D.Remove (D.LastIndexOf ("\\"));  		}  		Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  		File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  	}  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  }  catch (Exception ex) {  	Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The following statement contains a magic number: try {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  	}  	else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		if (D.LastIndexOf ("\\") >= 0) {  			D2 = D.Remove (D.LastIndexOf ("\\"));  		}  		Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  		File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  	}  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  }  catch (Exception ex) {  	Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The following statement contains a magic number: try {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  	}  	else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		if (D.LastIndexOf ("\\") >= 0) {  			D2 = D.Remove (D.LastIndexOf ("\\"));  		}  		Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  		File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  	}  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  }  catch (Exception ex) {  	Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The following statement contains a magic number: try {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		CopyDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D);  	}  	else if (File.Exists ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D) == true) {  		if (D.LastIndexOf ("\\") >= 0) {  			D2 = D.Remove (D.LastIndexOf ("\\"));  		}  		Directory.CreateDirectory ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D2);  		File.Copy ("WorkDIR\\" + comboBox1.SelectedItem + "\\" + "Temp\\" + D' "WorkDIR\\" + comboBox1.SelectedItem + "\\" + L + "\\" + D' true);  	}  	if (Directory.Exists ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"))  		Directory.Delete ("WorkDIR/" + comboBox1.SelectedItem + "/Temp"' true);  }  catch (Exception ex) {  	Message M = new Message (err' ex.Message' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,Unpacked,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FromPhone,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FromPhone,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FromPhone,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,FromPhone,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The following statement contains a magic number: if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img") == true) {  	File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootP.img"' true);  }  else {  	Message M = new Message (err' err1' err2' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The following statement contains a magic number: if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img") == true) {  	File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootP.img"' true);  }  else {  	Message M = new Message (err' err1' err2' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The following statement contains a magic number: if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img") == true) {  	File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootP.img"' true);  }  else {  	Message M = new Message (err' err1' err2' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The following statement contains a magic number: if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img") == true) {  	File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootP.img"' true);  }  else {  	Message M = new Message (err' err1' err2' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The following statement contains a magic number: if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img") == false) {  	Message M = new Message (err' err3' err2' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  else {  	File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootO.img"' true);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The following statement contains a magic number: if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img") == false) {  	Message M = new Message (err' err3' err2' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  else {  	File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootO.img"' true);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The following statement contains a magic number: if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img") == false) {  	Message M = new Message (err' err3' err2' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  else {  	File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootO.img"' true);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The following statement contains a magic number: if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img") == false) {  	Message M = new Message (err' err3' err2' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  else {  	File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootO.img"' true);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The following statement contains a magic number: MF.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MF.Width / 2)' this.Location.Y + (this.Height / 2) - (MF.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The following statement contains a magic number: MF.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MF.Width / 2)' this.Location.Y + (this.Height / 2) - (MF.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The following statement contains a magic number: MF.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MF.Width / 2)' this.Location.Y + (this.Height / 2) - (MF.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootUnpack,The following statement contains a magic number: MF.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MF.Width / 2)' this.Location.Y + (this.Height / 2) - (MF.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootPack,The following statement contains a magic number: if (File.Exists ("Bin\\new_image.img")) {  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img"))  		File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img");  	File.Move ("Bin\\new_image.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  	Directory.Delete ("WorkDIR\\Images"' true);  	Directory.Delete ("Bin\\boot"' true);  	Message MF = new Message (null' re_succ' null' ok' null' null' null' 1' time);  	MF.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MF.Width / 2)' this.Location.Y + (this.Height / 2) - (MF.Height / 2));  	MF.ShowDialog ();  }  else {  	Message MD = new Message (err' repeat' null' ok' null' null' null' 1' time);  	MD.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MD.Width / 2)' this.Location.Y + (this.Height / 2) - (MD.Height / 2));  	MD.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootPack,The following statement contains a magic number: if (File.Exists ("Bin\\new_image.img")) {  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img"))  		File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img");  	File.Move ("Bin\\new_image.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  	Directory.Delete ("WorkDIR\\Images"' true);  	Directory.Delete ("Bin\\boot"' true);  	Message MF = new Message (null' re_succ' null' ok' null' null' null' 1' time);  	MF.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MF.Width / 2)' this.Location.Y + (this.Height / 2) - (MF.Height / 2));  	MF.ShowDialog ();  }  else {  	Message MD = new Message (err' repeat' null' ok' null' null' null' 1' time);  	MD.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MD.Width / 2)' this.Location.Y + (this.Height / 2) - (MD.Height / 2));  	MD.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootPack,The following statement contains a magic number: if (File.Exists ("Bin\\new_image.img")) {  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img"))  		File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img");  	File.Move ("Bin\\new_image.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  	Directory.Delete ("WorkDIR\\Images"' true);  	Directory.Delete ("Bin\\boot"' true);  	Message MF = new Message (null' re_succ' null' ok' null' null' null' 1' time);  	MF.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MF.Width / 2)' this.Location.Y + (this.Height / 2) - (MF.Height / 2));  	MF.ShowDialog ();  }  else {  	Message MD = new Message (err' repeat' null' ok' null' null' null' 1' time);  	MD.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MD.Width / 2)' this.Location.Y + (this.Height / 2) - (MD.Height / 2));  	MD.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootPack,The following statement contains a magic number: if (File.Exists ("Bin\\new_image.img")) {  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img"))  		File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img");  	File.Move ("Bin\\new_image.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  	Directory.Delete ("WorkDIR\\Images"' true);  	Directory.Delete ("Bin\\boot"' true);  	Message MF = new Message (null' re_succ' null' ok' null' null' null' 1' time);  	MF.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MF.Width / 2)' this.Location.Y + (this.Height / 2) - (MF.Height / 2));  	MF.ShowDialog ();  }  else {  	Message MD = new Message (err' repeat' null' ok' null' null' null' 1' time);  	MD.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MD.Width / 2)' this.Location.Y + (this.Height / 2) - (MD.Height / 2));  	MD.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootPack,The following statement contains a magic number: if (File.Exists ("Bin\\new_image.img")) {  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img"))  		File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img");  	File.Move ("Bin\\new_image.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  	Directory.Delete ("WorkDIR\\Images"' true);  	Directory.Delete ("Bin\\boot"' true);  	Message MF = new Message (null' re_succ' null' ok' null' null' null' 1' time);  	MF.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MF.Width / 2)' this.Location.Y + (this.Height / 2) - (MF.Height / 2));  	MF.ShowDialog ();  }  else {  	Message MD = new Message (err' repeat' null' ok' null' null' null' 1' time);  	MD.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MD.Width / 2)' this.Location.Y + (this.Height / 2) - (MD.Height / 2));  	MD.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootPack,The following statement contains a magic number: if (File.Exists ("Bin\\new_image.img")) {  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img"))  		File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img");  	File.Move ("Bin\\new_image.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  	Directory.Delete ("WorkDIR\\Images"' true);  	Directory.Delete ("Bin\\boot"' true);  	Message MF = new Message (null' re_succ' null' ok' null' null' null' 1' time);  	MF.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MF.Width / 2)' this.Location.Y + (this.Height / 2) - (MF.Height / 2));  	MF.ShowDialog ();  }  else {  	Message MD = new Message (err' repeat' null' ok' null' null' null' 1' time);  	MD.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MD.Width / 2)' this.Location.Y + (this.Height / 2) - (MD.Height / 2));  	MD.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootPack,The following statement contains a magic number: if (File.Exists ("Bin\\new_image.img")) {  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img"))  		File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img");  	File.Move ("Bin\\new_image.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  	Directory.Delete ("WorkDIR\\Images"' true);  	Directory.Delete ("Bin\\boot"' true);  	Message MF = new Message (null' re_succ' null' ok' null' null' null' 1' time);  	MF.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MF.Width / 2)' this.Location.Y + (this.Height / 2) - (MF.Height / 2));  	MF.ShowDialog ();  }  else {  	Message MD = new Message (err' repeat' null' ok' null' null' null' 1' time);  	MD.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MD.Width / 2)' this.Location.Y + (this.Height / 2) - (MD.Height / 2));  	MD.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootPack,The following statement contains a magic number: if (File.Exists ("Bin\\new_image.img")) {  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img"))  		File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img");  	File.Move ("Bin\\new_image.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  	Directory.Delete ("WorkDIR\\Images"' true);  	Directory.Delete ("Bin\\boot"' true);  	Message MF = new Message (null' re_succ' null' ok' null' null' null' 1' time);  	MF.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MF.Width / 2)' this.Location.Y + (this.Height / 2) - (MF.Height / 2));  	MF.ShowDialog ();  }  else {  	Message MD = new Message (err' repeat' null' ok' null' null' null' 1' time);  	MD.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MD.Width / 2)' this.Location.Y + (this.Height / 2) - (MD.Height / 2));  	MD.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootPack,The following statement contains a magic number: MF.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MF.Width / 2)' this.Location.Y + (this.Height / 2) - (MF.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootPack,The following statement contains a magic number: MF.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MF.Width / 2)' this.Location.Y + (this.Height / 2) - (MF.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootPack,The following statement contains a magic number: MF.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MF.Width / 2)' this.Location.Y + (this.Height / 2) - (MF.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootPack,The following statement contains a magic number: MF.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MF.Width / 2)' this.Location.Y + (this.Height / 2) - (MF.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootPack,The following statement contains a magic number: MD.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MD.Width / 2)' this.Location.Y + (this.Height / 2) - (MD.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootPack,The following statement contains a magic number: MD.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MD.Width / 2)' this.Location.Y + (this.Height / 2) - (MD.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootPack,The following statement contains a magic number: MD.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MD.Width / 2)' this.Location.Y + (this.Height / 2) - (MD.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BootPack,The following statement contains a magic number: MD.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MD.Width / 2)' this.Location.Y + (this.Height / 2) - (MD.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,SignROM,The following statement contains a magic number: if (openFileDialog2.ShowDialog () == DialogResult.OK) {  	Directory.CreateDirectory ("WorkDIR/AdaptedROMS");  	string Patch = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  	BatFile.WriteLine ("signapk.cmd " + "\"" + openFileDialog2.FileName + "\"");  	BatFile.Close ();  	try {  		Process win = new Process ();  		win.StartInfo.ErrorDialog = true;  		win.StartInfo.FileName = Patch;  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName)))  			File.Delete ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName));  		File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (openFileDialog2.FileName) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName));  	}  	finally {  		SoundPlay ();  		Message MS = new Message (null' sign_succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  		ProcessStartInfo startInfo = null;  		if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName)) == true) {  			startInfo = new ProcessStartInfo ("Explorer");  			startInfo.UseShellExecute = false;  			startInfo.Arguments = @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName) + "\"";  			Process.Start (startInfo);  		}  		if (File.Exists ("Bin\\trace.bat"))  			File.Delete ("Bin\\trace.bat");  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,SignROM,The following statement contains a magic number: if (openFileDialog2.ShowDialog () == DialogResult.OK) {  	Directory.CreateDirectory ("WorkDIR/AdaptedROMS");  	string Patch = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  	BatFile.WriteLine ("signapk.cmd " + "\"" + openFileDialog2.FileName + "\"");  	BatFile.Close ();  	try {  		Process win = new Process ();  		win.StartInfo.ErrorDialog = true;  		win.StartInfo.FileName = Patch;  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName)))  			File.Delete ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName));  		File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (openFileDialog2.FileName) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName));  	}  	finally {  		SoundPlay ();  		Message MS = new Message (null' sign_succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  		ProcessStartInfo startInfo = null;  		if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName)) == true) {  			startInfo = new ProcessStartInfo ("Explorer");  			startInfo.UseShellExecute = false;  			startInfo.Arguments = @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName) + "\"";  			Process.Start (startInfo);  		}  		if (File.Exists ("Bin\\trace.bat"))  			File.Delete ("Bin\\trace.bat");  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,SignROM,The following statement contains a magic number: if (openFileDialog2.ShowDialog () == DialogResult.OK) {  	Directory.CreateDirectory ("WorkDIR/AdaptedROMS");  	string Patch = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  	BatFile.WriteLine ("signapk.cmd " + "\"" + openFileDialog2.FileName + "\"");  	BatFile.Close ();  	try {  		Process win = new Process ();  		win.StartInfo.ErrorDialog = true;  		win.StartInfo.FileName = Patch;  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName)))  			File.Delete ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName));  		File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (openFileDialog2.FileName) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName));  	}  	finally {  		SoundPlay ();  		Message MS = new Message (null' sign_succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  		ProcessStartInfo startInfo = null;  		if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName)) == true) {  			startInfo = new ProcessStartInfo ("Explorer");  			startInfo.UseShellExecute = false;  			startInfo.Arguments = @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName) + "\"";  			Process.Start (startInfo);  		}  		if (File.Exists ("Bin\\trace.bat"))  			File.Delete ("Bin\\trace.bat");  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,SignROM,The following statement contains a magic number: if (openFileDialog2.ShowDialog () == DialogResult.OK) {  	Directory.CreateDirectory ("WorkDIR/AdaptedROMS");  	string Patch = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  	BatFile.WriteLine ("signapk.cmd " + "\"" + openFileDialog2.FileName + "\"");  	BatFile.Close ();  	try {  		Process win = new Process ();  		win.StartInfo.ErrorDialog = true;  		win.StartInfo.FileName = Patch;  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName)))  			File.Delete ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName));  		File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (openFileDialog2.FileName) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName));  	}  	finally {  		SoundPlay ();  		Message MS = new Message (null' sign_succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  		ProcessStartInfo startInfo = null;  		if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName)) == true) {  			startInfo = new ProcessStartInfo ("Explorer");  			startInfo.UseShellExecute = false;  			startInfo.Arguments = @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName) + "\"";  			Process.Start (startInfo);  		}  		if (File.Exists ("Bin\\trace.bat"))  			File.Delete ("Bin\\trace.bat");  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,SignROM,The following statement contains a magic number: if (openFileDialog2.ShowDialog () == DialogResult.OK) {  	Directory.CreateDirectory ("WorkDIR/AdaptedROMS");  	string Patch = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  	BatFile.WriteLine ("signapk.cmd " + "\"" + openFileDialog2.FileName + "\"");  	BatFile.Close ();  	try {  		Process win = new Process ();  		win.StartInfo.ErrorDialog = true;  		win.StartInfo.FileName = Patch;  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName)))  			File.Delete ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName));  		File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (openFileDialog2.FileName) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName));  	}  	finally {  		SoundPlay ();  		Message MS = new Message (null' sign_succ' null' ok' null' null' null' 1' time);  		MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  		MS.ShowDialog ();  		ProcessStartInfo startInfo = null;  		if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName)) == true) {  			startInfo = new ProcessStartInfo ("Explorer");  			startInfo.UseShellExecute = false;  			startInfo.Arguments = @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName) + "\"";  			Process.Start (startInfo);  		}  		if (File.Exists ("Bin\\trace.bat"))  			File.Delete ("Bin\\trace.bat");  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,SignROM,The following statement contains a magic number: try {  	Process win = new Process ();  	win.StartInfo.ErrorDialog = true;  	win.StartInfo.FileName = Patch;  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName)))  		File.Delete ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName));  	File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (openFileDialog2.FileName) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName));  }  finally {  	SoundPlay ();  	Message MS = new Message (null' sign_succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	ProcessStartInfo startInfo = null;  	if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName)) == true) {  		startInfo = new ProcessStartInfo ("Explorer");  		startInfo.UseShellExecute = false;  		startInfo.Arguments = @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName) + "\"";  		Process.Start (startInfo);  	}  	if (File.Exists ("Bin\\trace.bat"))  		File.Delete ("Bin\\trace.bat");  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,SignROM,The following statement contains a magic number: try {  	Process win = new Process ();  	win.StartInfo.ErrorDialog = true;  	win.StartInfo.FileName = Patch;  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName)))  		File.Delete ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName));  	File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (openFileDialog2.FileName) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName));  }  finally {  	SoundPlay ();  	Message MS = new Message (null' sign_succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	ProcessStartInfo startInfo = null;  	if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName)) == true) {  		startInfo = new ProcessStartInfo ("Explorer");  		startInfo.UseShellExecute = false;  		startInfo.Arguments = @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName) + "\"";  		Process.Start (startInfo);  	}  	if (File.Exists ("Bin\\trace.bat"))  		File.Delete ("Bin\\trace.bat");  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,SignROM,The following statement contains a magic number: try {  	Process win = new Process ();  	win.StartInfo.ErrorDialog = true;  	win.StartInfo.FileName = Patch;  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName)))  		File.Delete ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName));  	File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (openFileDialog2.FileName) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName));  }  finally {  	SoundPlay ();  	Message MS = new Message (null' sign_succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	ProcessStartInfo startInfo = null;  	if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName)) == true) {  		startInfo = new ProcessStartInfo ("Explorer");  		startInfo.UseShellExecute = false;  		startInfo.Arguments = @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName) + "\"";  		Process.Start (startInfo);  	}  	if (File.Exists ("Bin\\trace.bat"))  		File.Delete ("Bin\\trace.bat");  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,SignROM,The following statement contains a magic number: try {  	Process win = new Process ();  	win.StartInfo.ErrorDialog = true;  	win.StartInfo.FileName = Patch;  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName)))  		File.Delete ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName));  	File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (openFileDialog2.FileName) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName));  }  finally {  	SoundPlay ();  	Message MS = new Message (null' sign_succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	ProcessStartInfo startInfo = null;  	if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName)) == true) {  		startInfo = new ProcessStartInfo ("Explorer");  		startInfo.UseShellExecute = false;  		startInfo.Arguments = @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + Path.GetFileName (openFileDialog2.FileName) + "\"";  		Process.Start (startInfo);  	}  	if (File.Exists ("Bin\\trace.bat"))  		File.Delete ("Bin\\trace.bat");  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,SignROM,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,SignROM,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,SignROM,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,SignROM,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPORT\system") == false) {  	Message M = new Message (err' err4' err5' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPORT\system") == false) {  	Message M = new Message (err' err4' err5' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPORT\system") == false) {  	Message M = new Message (err' err4' err5' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPORT\system") == false) {  	Message M = new Message (err' err4' err5' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == false) {  	Message M = new Message (err' err6' err7' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == false) {  	Message M = new Message (err' err6' err7' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == false) {  	Message M = new Message (err' err6' err7' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\system") == false) {  	Message M = new Message (err' err6' err7' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (checkBox6.Checked == true) {  	Process win = new Process ();  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img") == true) {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootP.img"' true);  	}  	else {  		Message M = new Message (err' err1' err2' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		return;  	}  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img") == false) {  		Message M = new Message (err' err3' err2' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		return;  	}  	else {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootO.img"' true);  	}  	win.StartInfo.FileName = "Bin\\imgunpack.cmd";  	win.StartInfo.Arguments = "bootO.img";  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	Process winc = new Process ();  	winc.StartInfo.FileName = "Bin\\imgunpack.cmd";  	winc.StartInfo.Arguments = "bootP.img";  	winc.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	winc.Start ();  	winc.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (Directory.Exists ("Bin\\bootP"))  		CopyDirectory ("Bin\\bootP"' "Bin\\boot");  	if (File.Exists ("Bin\\bootO\\kernel"))  		File.Copy ("Bin\\bootO\\kernel"' "Bin\\boot\\kernel"' true);  	if (File.Exists ("Bin\\bootO\\kernel_header"))  		File.Copy ("Bin\\bootO\\kernel_header"' "Bin\\boot\\kernel_header"' true);  	File.Delete ("Bin\\bootP.img");  	File.Delete ("Bin\\bootO.img");  	Directory.Delete ("Bin\\bootO"' true);  	Directory.Delete ("Bin\\bootP"' true);  	Process wind = new Process ();  	wind.StartInfo.FileName = "Bin\\imgpack.cmd";  	wind.StartInfo.Arguments = "boot";  	wind.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	wind.StartInfo.WorkingDirectory = "\"" + Directory.GetCurrentDirectory () + "\\Bin\"";  	wind.Start ();  	wind.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (File.Exists ("Bin\\new_image.img")) {  		if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img"))  			File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  		File.Move ("Bin\\new_image.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  		Directory.Delete ("Bin\\boot"' true);  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (checkBox6.Checked == true) {  	Process win = new Process ();  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img") == true) {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootP.img"' true);  	}  	else {  		Message M = new Message (err' err1' err2' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		return;  	}  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img") == false) {  		Message M = new Message (err' err3' err2' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		return;  	}  	else {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootO.img"' true);  	}  	win.StartInfo.FileName = "Bin\\imgunpack.cmd";  	win.StartInfo.Arguments = "bootO.img";  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	Process winc = new Process ();  	winc.StartInfo.FileName = "Bin\\imgunpack.cmd";  	winc.StartInfo.Arguments = "bootP.img";  	winc.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	winc.Start ();  	winc.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (Directory.Exists ("Bin\\bootP"))  		CopyDirectory ("Bin\\bootP"' "Bin\\boot");  	if (File.Exists ("Bin\\bootO\\kernel"))  		File.Copy ("Bin\\bootO\\kernel"' "Bin\\boot\\kernel"' true);  	if (File.Exists ("Bin\\bootO\\kernel_header"))  		File.Copy ("Bin\\bootO\\kernel_header"' "Bin\\boot\\kernel_header"' true);  	File.Delete ("Bin\\bootP.img");  	File.Delete ("Bin\\bootO.img");  	Directory.Delete ("Bin\\bootO"' true);  	Directory.Delete ("Bin\\bootP"' true);  	Process wind = new Process ();  	wind.StartInfo.FileName = "Bin\\imgpack.cmd";  	wind.StartInfo.Arguments = "boot";  	wind.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	wind.StartInfo.WorkingDirectory = "\"" + Directory.GetCurrentDirectory () + "\\Bin\"";  	wind.Start ();  	wind.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (File.Exists ("Bin\\new_image.img")) {  		if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img"))  			File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  		File.Move ("Bin\\new_image.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  		Directory.Delete ("Bin\\boot"' true);  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (checkBox6.Checked == true) {  	Process win = new Process ();  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img") == true) {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootP.img"' true);  	}  	else {  		Message M = new Message (err' err1' err2' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		return;  	}  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img") == false) {  		Message M = new Message (err' err3' err2' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		return;  	}  	else {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootO.img"' true);  	}  	win.StartInfo.FileName = "Bin\\imgunpack.cmd";  	win.StartInfo.Arguments = "bootO.img";  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	Process winc = new Process ();  	winc.StartInfo.FileName = "Bin\\imgunpack.cmd";  	winc.StartInfo.Arguments = "bootP.img";  	winc.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	winc.Start ();  	winc.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (Directory.Exists ("Bin\\bootP"))  		CopyDirectory ("Bin\\bootP"' "Bin\\boot");  	if (File.Exists ("Bin\\bootO\\kernel"))  		File.Copy ("Bin\\bootO\\kernel"' "Bin\\boot\\kernel"' true);  	if (File.Exists ("Bin\\bootO\\kernel_header"))  		File.Copy ("Bin\\bootO\\kernel_header"' "Bin\\boot\\kernel_header"' true);  	File.Delete ("Bin\\bootP.img");  	File.Delete ("Bin\\bootO.img");  	Directory.Delete ("Bin\\bootO"' true);  	Directory.Delete ("Bin\\bootP"' true);  	Process wind = new Process ();  	wind.StartInfo.FileName = "Bin\\imgpack.cmd";  	wind.StartInfo.Arguments = "boot";  	wind.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	wind.StartInfo.WorkingDirectory = "\"" + Directory.GetCurrentDirectory () + "\\Bin\"";  	wind.Start ();  	wind.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (File.Exists ("Bin\\new_image.img")) {  		if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img"))  			File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  		File.Move ("Bin\\new_image.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  		Directory.Delete ("Bin\\boot"' true);  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (checkBox6.Checked == true) {  	Process win = new Process ();  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img") == true) {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootP.img"' true);  	}  	else {  		Message M = new Message (err' err1' err2' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		return;  	}  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img") == false) {  		Message M = new Message (err' err3' err2' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		return;  	}  	else {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootO.img"' true);  	}  	win.StartInfo.FileName = "Bin\\imgunpack.cmd";  	win.StartInfo.Arguments = "bootO.img";  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	Process winc = new Process ();  	winc.StartInfo.FileName = "Bin\\imgunpack.cmd";  	winc.StartInfo.Arguments = "bootP.img";  	winc.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	winc.Start ();  	winc.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (Directory.Exists ("Bin\\bootP"))  		CopyDirectory ("Bin\\bootP"' "Bin\\boot");  	if (File.Exists ("Bin\\bootO\\kernel"))  		File.Copy ("Bin\\bootO\\kernel"' "Bin\\boot\\kernel"' true);  	if (File.Exists ("Bin\\bootO\\kernel_header"))  		File.Copy ("Bin\\bootO\\kernel_header"' "Bin\\boot\\kernel_header"' true);  	File.Delete ("Bin\\bootP.img");  	File.Delete ("Bin\\bootO.img");  	Directory.Delete ("Bin\\bootO"' true);  	Directory.Delete ("Bin\\bootP"' true);  	Process wind = new Process ();  	wind.StartInfo.FileName = "Bin\\imgpack.cmd";  	wind.StartInfo.Arguments = "boot";  	wind.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	wind.StartInfo.WorkingDirectory = "\"" + Directory.GetCurrentDirectory () + "\\Bin\"";  	wind.Start ();  	wind.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (File.Exists ("Bin\\new_image.img")) {  		if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img"))  			File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  		File.Move ("Bin\\new_image.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  		Directory.Delete ("Bin\\boot"' true);  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (checkBox6.Checked == true) {  	Process win = new Process ();  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img") == true) {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootP.img"' true);  	}  	else {  		Message M = new Message (err' err1' err2' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		return;  	}  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img") == false) {  		Message M = new Message (err' err3' err2' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		return;  	}  	else {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootO.img"' true);  	}  	win.StartInfo.FileName = "Bin\\imgunpack.cmd";  	win.StartInfo.Arguments = "bootO.img";  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	Process winc = new Process ();  	winc.StartInfo.FileName = "Bin\\imgunpack.cmd";  	winc.StartInfo.Arguments = "bootP.img";  	winc.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	winc.Start ();  	winc.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (Directory.Exists ("Bin\\bootP"))  		CopyDirectory ("Bin\\bootP"' "Bin\\boot");  	if (File.Exists ("Bin\\bootO\\kernel"))  		File.Copy ("Bin\\bootO\\kernel"' "Bin\\boot\\kernel"' true);  	if (File.Exists ("Bin\\bootO\\kernel_header"))  		File.Copy ("Bin\\bootO\\kernel_header"' "Bin\\boot\\kernel_header"' true);  	File.Delete ("Bin\\bootP.img");  	File.Delete ("Bin\\bootO.img");  	Directory.Delete ("Bin\\bootO"' true);  	Directory.Delete ("Bin\\bootP"' true);  	Process wind = new Process ();  	wind.StartInfo.FileName = "Bin\\imgpack.cmd";  	wind.StartInfo.Arguments = "boot";  	wind.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	wind.StartInfo.WorkingDirectory = "\"" + Directory.GetCurrentDirectory () + "\\Bin\"";  	wind.Start ();  	wind.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (File.Exists ("Bin\\new_image.img")) {  		if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img"))  			File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  		File.Move ("Bin\\new_image.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  		Directory.Delete ("Bin\\boot"' true);  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (checkBox6.Checked == true) {  	Process win = new Process ();  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img") == true) {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootP.img"' true);  	}  	else {  		Message M = new Message (err' err1' err2' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		return;  	}  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img") == false) {  		Message M = new Message (err' err3' err2' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		return;  	}  	else {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootO.img"' true);  	}  	win.StartInfo.FileName = "Bin\\imgunpack.cmd";  	win.StartInfo.Arguments = "bootO.img";  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	Process winc = new Process ();  	winc.StartInfo.FileName = "Bin\\imgunpack.cmd";  	winc.StartInfo.Arguments = "bootP.img";  	winc.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	winc.Start ();  	winc.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (Directory.Exists ("Bin\\bootP"))  		CopyDirectory ("Bin\\bootP"' "Bin\\boot");  	if (File.Exists ("Bin\\bootO\\kernel"))  		File.Copy ("Bin\\bootO\\kernel"' "Bin\\boot\\kernel"' true);  	if (File.Exists ("Bin\\bootO\\kernel_header"))  		File.Copy ("Bin\\bootO\\kernel_header"' "Bin\\boot\\kernel_header"' true);  	File.Delete ("Bin\\bootP.img");  	File.Delete ("Bin\\bootO.img");  	Directory.Delete ("Bin\\bootO"' true);  	Directory.Delete ("Bin\\bootP"' true);  	Process wind = new Process ();  	wind.StartInfo.FileName = "Bin\\imgpack.cmd";  	wind.StartInfo.Arguments = "boot";  	wind.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	wind.StartInfo.WorkingDirectory = "\"" + Directory.GetCurrentDirectory () + "\\Bin\"";  	wind.Start ();  	wind.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (File.Exists ("Bin\\new_image.img")) {  		if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img"))  			File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  		File.Move ("Bin\\new_image.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  		Directory.Delete ("Bin\\boot"' true);  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (checkBox6.Checked == true) {  	Process win = new Process ();  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img") == true) {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootP.img"' true);  	}  	else {  		Message M = new Message (err' err1' err2' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		return;  	}  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img") == false) {  		Message M = new Message (err' err3' err2' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		return;  	}  	else {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootO.img"' true);  	}  	win.StartInfo.FileName = "Bin\\imgunpack.cmd";  	win.StartInfo.Arguments = "bootO.img";  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	Process winc = new Process ();  	winc.StartInfo.FileName = "Bin\\imgunpack.cmd";  	winc.StartInfo.Arguments = "bootP.img";  	winc.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	winc.Start ();  	winc.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (Directory.Exists ("Bin\\bootP"))  		CopyDirectory ("Bin\\bootP"' "Bin\\boot");  	if (File.Exists ("Bin\\bootO\\kernel"))  		File.Copy ("Bin\\bootO\\kernel"' "Bin\\boot\\kernel"' true);  	if (File.Exists ("Bin\\bootO\\kernel_header"))  		File.Copy ("Bin\\bootO\\kernel_header"' "Bin\\boot\\kernel_header"' true);  	File.Delete ("Bin\\bootP.img");  	File.Delete ("Bin\\bootO.img");  	Directory.Delete ("Bin\\bootO"' true);  	Directory.Delete ("Bin\\bootP"' true);  	Process wind = new Process ();  	wind.StartInfo.FileName = "Bin\\imgpack.cmd";  	wind.StartInfo.Arguments = "boot";  	wind.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	wind.StartInfo.WorkingDirectory = "\"" + Directory.GetCurrentDirectory () + "\\Bin\"";  	wind.Start ();  	wind.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (File.Exists ("Bin\\new_image.img")) {  		if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img"))  			File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  		File.Move ("Bin\\new_image.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  		Directory.Delete ("Bin\\boot"' true);  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (checkBox6.Checked == true) {  	Process win = new Process ();  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img") == true) {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootP.img"' true);  	}  	else {  		Message M = new Message (err' err1' err2' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		return;  	}  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img") == false) {  		Message M = new Message (err' err3' err2' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		return;  	}  	else {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootO.img"' true);  	}  	win.StartInfo.FileName = "Bin\\imgunpack.cmd";  	win.StartInfo.Arguments = "bootO.img";  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	Process winc = new Process ();  	winc.StartInfo.FileName = "Bin\\imgunpack.cmd";  	winc.StartInfo.Arguments = "bootP.img";  	winc.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	winc.Start ();  	winc.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (Directory.Exists ("Bin\\bootP"))  		CopyDirectory ("Bin\\bootP"' "Bin\\boot");  	if (File.Exists ("Bin\\bootO\\kernel"))  		File.Copy ("Bin\\bootO\\kernel"' "Bin\\boot\\kernel"' true);  	if (File.Exists ("Bin\\bootO\\kernel_header"))  		File.Copy ("Bin\\bootO\\kernel_header"' "Bin\\boot\\kernel_header"' true);  	File.Delete ("Bin\\bootP.img");  	File.Delete ("Bin\\bootO.img");  	Directory.Delete ("Bin\\bootO"' true);  	Directory.Delete ("Bin\\bootP"' true);  	Process wind = new Process ();  	wind.StartInfo.FileName = "Bin\\imgpack.cmd";  	wind.StartInfo.Arguments = "boot";  	wind.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	wind.StartInfo.WorkingDirectory = "\"" + Directory.GetCurrentDirectory () + "\\Bin\"";  	wind.Start ();  	wind.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (File.Exists ("Bin\\new_image.img")) {  		if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img"))  			File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  		File.Move ("Bin\\new_image.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  		Directory.Delete ("Bin\\boot"' true);  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img") == true) {  	File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootP.img"' true);  }  else {  	Message M = new Message (err' err1' err2' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img") == true) {  	File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootP.img"' true);  }  else {  	Message M = new Message (err' err1' err2' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img") == true) {  	File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootP.img"' true);  }  else {  	Message M = new Message (err' err1' err2' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img") == true) {  	File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootP.img"' true);  }  else {  	Message M = new Message (err' err1' err2' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img") == false) {  	Message M = new Message (err' err3' err2' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  else {  	File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootO.img"' true);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img") == false) {  	Message M = new Message (err' err3' err2' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  else {  	File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootO.img"' true);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img") == false) {  	Message M = new Message (err' err3' err2' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  else {  	File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootO.img"' true);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img") == false) {  	Message M = new Message (err' err3' err2' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	return;  }  else {  	File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\boot.img"' Directory.GetCurrentDirectory () + "\\Bin\\bootO.img"' true);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: using (ZipFile zip = new ZipFile ()) {  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == false && Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\META-INF") == false) {  		Message M = new Message (err' meta' null' exit' choose' null' null' 2' 0);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		if (M.fk == 1)  			return;  		else {  			folderBrowserDialog1.Description = choosem;  			if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  				CopyDirectory (folderBrowserDialog1.SelectedPath' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF");  			}  			else  				return;  		}  	}  	else {  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == true || Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF") == true) {  			if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"))  				Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"' true);  		}  	}  	string h = null;  	CopyDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	CopyDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img") == true) {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img"' true);  		File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  	}  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop") == true) {  		using (StreamWriter sw = new StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop"' true' Encoding.ASCII)) {  			sw.WriteLine ();  			sw.WriteLine ("# Ported with MTK FirmwareAdapter Tool");  			sw.WriteLine ("persist.service.adb.enable=1");  			sw.WriteLine ("persist.adb.notify=0");  			sw.Close ();  		}  	}  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data") == false)  		Directory.CreateDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data");  	System.IO.StreamWriter swr = new System.IO.StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data\PortProgect.fat");  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		swr.WriteLine (checkedListBox1.Items [i]);  	}  	swr.Close ();  	zip.AddDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	if (Directory.Exists ("WorkDIR\\AdaptedROMS") == false) {  		Directory.CreateDirectory ("WorkDIR\\AdaptedROMS");  	}  	if (checkBox5.Checked == false) {  		string k = "_" + DateTime.Now.ToString ("dd.MM.yy_HH-mm-ss");  		h = Convert.ToString (comboBox1.SelectedItem + k + ".zip");  	}  	else {  		if (textBox3.Text == "" || textBox3.Text == null) {  			string k = "_" + DateTime.Now.ToString ("dd.MM.yy_HH-mm-ss");  			h = Convert.ToString (comboBox1.SelectedItem + k + ".zip");  		}  		else  			h = textBox3.Text + ".zip";  	}  	zip.Save ("WorkDIR\\AdaptedROMS\\" + h);  	Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack"' true);  	if (checkBox7.Checked == true) {  		string Patch = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile.WriteLine ("signapk.cmd " + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"");  		BatFile.Close ();  		try {  			Process win = new Process ();  			win.StartInfo.ErrorDialog = true;  			win.StartInfo.FileName = Patch;  			win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			this.Cursor = Cursors.WaitCursor;  			win.Start ();  			win.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h)))  				File.Delete ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h));  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		finally {  			File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (h) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + h);  		}  	}  	if (File.Exists (@"Projects\" + comboBox1.SelectedItem + @"\boot.img") == true)  		File.Delete (@"Projects\" + comboBox1.SelectedItem + @"\boot.img");  	SoundPlay ();  	Message MS = new Message (null' build_succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	ProcessStartInfo startInfo = null;  	startInfo = new ProcessStartInfo ("Explorer");  	startInfo.UseShellExecute = false;  	startInfo.Arguments = @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"";  	Process.Start (startInfo);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: using (ZipFile zip = new ZipFile ()) {  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == false && Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\META-INF") == false) {  		Message M = new Message (err' meta' null' exit' choose' null' null' 2' 0);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		if (M.fk == 1)  			return;  		else {  			folderBrowserDialog1.Description = choosem;  			if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  				CopyDirectory (folderBrowserDialog1.SelectedPath' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF");  			}  			else  				return;  		}  	}  	else {  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == true || Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF") == true) {  			if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"))  				Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"' true);  		}  	}  	string h = null;  	CopyDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	CopyDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img") == true) {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img"' true);  		File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  	}  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop") == true) {  		using (StreamWriter sw = new StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop"' true' Encoding.ASCII)) {  			sw.WriteLine ();  			sw.WriteLine ("# Ported with MTK FirmwareAdapter Tool");  			sw.WriteLine ("persist.service.adb.enable=1");  			sw.WriteLine ("persist.adb.notify=0");  			sw.Close ();  		}  	}  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data") == false)  		Directory.CreateDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data");  	System.IO.StreamWriter swr = new System.IO.StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data\PortProgect.fat");  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		swr.WriteLine (checkedListBox1.Items [i]);  	}  	swr.Close ();  	zip.AddDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	if (Directory.Exists ("WorkDIR\\AdaptedROMS") == false) {  		Directory.CreateDirectory ("WorkDIR\\AdaptedROMS");  	}  	if (checkBox5.Checked == false) {  		string k = "_" + DateTime.Now.ToString ("dd.MM.yy_HH-mm-ss");  		h = Convert.ToString (comboBox1.SelectedItem + k + ".zip");  	}  	else {  		if (textBox3.Text == "" || textBox3.Text == null) {  			string k = "_" + DateTime.Now.ToString ("dd.MM.yy_HH-mm-ss");  			h = Convert.ToString (comboBox1.SelectedItem + k + ".zip");  		}  		else  			h = textBox3.Text + ".zip";  	}  	zip.Save ("WorkDIR\\AdaptedROMS\\" + h);  	Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack"' true);  	if (checkBox7.Checked == true) {  		string Patch = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile.WriteLine ("signapk.cmd " + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"");  		BatFile.Close ();  		try {  			Process win = new Process ();  			win.StartInfo.ErrorDialog = true;  			win.StartInfo.FileName = Patch;  			win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			this.Cursor = Cursors.WaitCursor;  			win.Start ();  			win.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h)))  				File.Delete ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h));  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		finally {  			File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (h) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + h);  		}  	}  	if (File.Exists (@"Projects\" + comboBox1.SelectedItem + @"\boot.img") == true)  		File.Delete (@"Projects\" + comboBox1.SelectedItem + @"\boot.img");  	SoundPlay ();  	Message MS = new Message (null' build_succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	ProcessStartInfo startInfo = null;  	startInfo = new ProcessStartInfo ("Explorer");  	startInfo.UseShellExecute = false;  	startInfo.Arguments = @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"";  	Process.Start (startInfo);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: using (ZipFile zip = new ZipFile ()) {  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == false && Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\META-INF") == false) {  		Message M = new Message (err' meta' null' exit' choose' null' null' 2' 0);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		if (M.fk == 1)  			return;  		else {  			folderBrowserDialog1.Description = choosem;  			if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  				CopyDirectory (folderBrowserDialog1.SelectedPath' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF");  			}  			else  				return;  		}  	}  	else {  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == true || Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF") == true) {  			if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"))  				Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"' true);  		}  	}  	string h = null;  	CopyDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	CopyDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img") == true) {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img"' true);  		File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  	}  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop") == true) {  		using (StreamWriter sw = new StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop"' true' Encoding.ASCII)) {  			sw.WriteLine ();  			sw.WriteLine ("# Ported with MTK FirmwareAdapter Tool");  			sw.WriteLine ("persist.service.adb.enable=1");  			sw.WriteLine ("persist.adb.notify=0");  			sw.Close ();  		}  	}  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data") == false)  		Directory.CreateDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data");  	System.IO.StreamWriter swr = new System.IO.StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data\PortProgect.fat");  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		swr.WriteLine (checkedListBox1.Items [i]);  	}  	swr.Close ();  	zip.AddDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	if (Directory.Exists ("WorkDIR\\AdaptedROMS") == false) {  		Directory.CreateDirectory ("WorkDIR\\AdaptedROMS");  	}  	if (checkBox5.Checked == false) {  		string k = "_" + DateTime.Now.ToString ("dd.MM.yy_HH-mm-ss");  		h = Convert.ToString (comboBox1.SelectedItem + k + ".zip");  	}  	else {  		if (textBox3.Text == "" || textBox3.Text == null) {  			string k = "_" + DateTime.Now.ToString ("dd.MM.yy_HH-mm-ss");  			h = Convert.ToString (comboBox1.SelectedItem + k + ".zip");  		}  		else  			h = textBox3.Text + ".zip";  	}  	zip.Save ("WorkDIR\\AdaptedROMS\\" + h);  	Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack"' true);  	if (checkBox7.Checked == true) {  		string Patch = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile.WriteLine ("signapk.cmd " + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"");  		BatFile.Close ();  		try {  			Process win = new Process ();  			win.StartInfo.ErrorDialog = true;  			win.StartInfo.FileName = Patch;  			win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			this.Cursor = Cursors.WaitCursor;  			win.Start ();  			win.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h)))  				File.Delete ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h));  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		finally {  			File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (h) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + h);  		}  	}  	if (File.Exists (@"Projects\" + comboBox1.SelectedItem + @"\boot.img") == true)  		File.Delete (@"Projects\" + comboBox1.SelectedItem + @"\boot.img");  	SoundPlay ();  	Message MS = new Message (null' build_succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	ProcessStartInfo startInfo = null;  	startInfo = new ProcessStartInfo ("Explorer");  	startInfo.UseShellExecute = false;  	startInfo.Arguments = @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"";  	Process.Start (startInfo);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: using (ZipFile zip = new ZipFile ()) {  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == false && Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\META-INF") == false) {  		Message M = new Message (err' meta' null' exit' choose' null' null' 2' 0);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		if (M.fk == 1)  			return;  		else {  			folderBrowserDialog1.Description = choosem;  			if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  				CopyDirectory (folderBrowserDialog1.SelectedPath' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF");  			}  			else  				return;  		}  	}  	else {  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == true || Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF") == true) {  			if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"))  				Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"' true);  		}  	}  	string h = null;  	CopyDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	CopyDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img") == true) {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img"' true);  		File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  	}  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop") == true) {  		using (StreamWriter sw = new StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop"' true' Encoding.ASCII)) {  			sw.WriteLine ();  			sw.WriteLine ("# Ported with MTK FirmwareAdapter Tool");  			sw.WriteLine ("persist.service.adb.enable=1");  			sw.WriteLine ("persist.adb.notify=0");  			sw.Close ();  		}  	}  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data") == false)  		Directory.CreateDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data");  	System.IO.StreamWriter swr = new System.IO.StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data\PortProgect.fat");  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		swr.WriteLine (checkedListBox1.Items [i]);  	}  	swr.Close ();  	zip.AddDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	if (Directory.Exists ("WorkDIR\\AdaptedROMS") == false) {  		Directory.CreateDirectory ("WorkDIR\\AdaptedROMS");  	}  	if (checkBox5.Checked == false) {  		string k = "_" + DateTime.Now.ToString ("dd.MM.yy_HH-mm-ss");  		h = Convert.ToString (comboBox1.SelectedItem + k + ".zip");  	}  	else {  		if (textBox3.Text == "" || textBox3.Text == null) {  			string k = "_" + DateTime.Now.ToString ("dd.MM.yy_HH-mm-ss");  			h = Convert.ToString (comboBox1.SelectedItem + k + ".zip");  		}  		else  			h = textBox3.Text + ".zip";  	}  	zip.Save ("WorkDIR\\AdaptedROMS\\" + h);  	Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack"' true);  	if (checkBox7.Checked == true) {  		string Patch = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile.WriteLine ("signapk.cmd " + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"");  		BatFile.Close ();  		try {  			Process win = new Process ();  			win.StartInfo.ErrorDialog = true;  			win.StartInfo.FileName = Patch;  			win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			this.Cursor = Cursors.WaitCursor;  			win.Start ();  			win.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h)))  				File.Delete ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h));  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		finally {  			File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (h) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + h);  		}  	}  	if (File.Exists (@"Projects\" + comboBox1.SelectedItem + @"\boot.img") == true)  		File.Delete (@"Projects\" + comboBox1.SelectedItem + @"\boot.img");  	SoundPlay ();  	Message MS = new Message (null' build_succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	ProcessStartInfo startInfo = null;  	startInfo = new ProcessStartInfo ("Explorer");  	startInfo.UseShellExecute = false;  	startInfo.Arguments = @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"";  	Process.Start (startInfo);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: using (ZipFile zip = new ZipFile ()) {  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == false && Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\META-INF") == false) {  		Message M = new Message (err' meta' null' exit' choose' null' null' 2' 0);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		if (M.fk == 1)  			return;  		else {  			folderBrowserDialog1.Description = choosem;  			if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  				CopyDirectory (folderBrowserDialog1.SelectedPath' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF");  			}  			else  				return;  		}  	}  	else {  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == true || Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF") == true) {  			if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"))  				Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"' true);  		}  	}  	string h = null;  	CopyDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	CopyDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img") == true) {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img"' true);  		File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  	}  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop") == true) {  		using (StreamWriter sw = new StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop"' true' Encoding.ASCII)) {  			sw.WriteLine ();  			sw.WriteLine ("# Ported with MTK FirmwareAdapter Tool");  			sw.WriteLine ("persist.service.adb.enable=1");  			sw.WriteLine ("persist.adb.notify=0");  			sw.Close ();  		}  	}  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data") == false)  		Directory.CreateDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data");  	System.IO.StreamWriter swr = new System.IO.StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data\PortProgect.fat");  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		swr.WriteLine (checkedListBox1.Items [i]);  	}  	swr.Close ();  	zip.AddDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	if (Directory.Exists ("WorkDIR\\AdaptedROMS") == false) {  		Directory.CreateDirectory ("WorkDIR\\AdaptedROMS");  	}  	if (checkBox5.Checked == false) {  		string k = "_" + DateTime.Now.ToString ("dd.MM.yy_HH-mm-ss");  		h = Convert.ToString (comboBox1.SelectedItem + k + ".zip");  	}  	else {  		if (textBox3.Text == "" || textBox3.Text == null) {  			string k = "_" + DateTime.Now.ToString ("dd.MM.yy_HH-mm-ss");  			h = Convert.ToString (comboBox1.SelectedItem + k + ".zip");  		}  		else  			h = textBox3.Text + ".zip";  	}  	zip.Save ("WorkDIR\\AdaptedROMS\\" + h);  	Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack"' true);  	if (checkBox7.Checked == true) {  		string Patch = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile.WriteLine ("signapk.cmd " + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"");  		BatFile.Close ();  		try {  			Process win = new Process ();  			win.StartInfo.ErrorDialog = true;  			win.StartInfo.FileName = Patch;  			win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			this.Cursor = Cursors.WaitCursor;  			win.Start ();  			win.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h)))  				File.Delete ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h));  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		finally {  			File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (h) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + h);  		}  	}  	if (File.Exists (@"Projects\" + comboBox1.SelectedItem + @"\boot.img") == true)  		File.Delete (@"Projects\" + comboBox1.SelectedItem + @"\boot.img");  	SoundPlay ();  	Message MS = new Message (null' build_succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	ProcessStartInfo startInfo = null;  	startInfo = new ProcessStartInfo ("Explorer");  	startInfo.UseShellExecute = false;  	startInfo.Arguments = @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"";  	Process.Start (startInfo);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: using (ZipFile zip = new ZipFile ()) {  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == false && Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\META-INF") == false) {  		Message M = new Message (err' meta' null' exit' choose' null' null' 2' 0);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		if (M.fk == 1)  			return;  		else {  			folderBrowserDialog1.Description = choosem;  			if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  				CopyDirectory (folderBrowserDialog1.SelectedPath' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF");  			}  			else  				return;  		}  	}  	else {  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == true || Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF") == true) {  			if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"))  				Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"' true);  		}  	}  	string h = null;  	CopyDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	CopyDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img") == true) {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img"' true);  		File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  	}  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop") == true) {  		using (StreamWriter sw = new StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop"' true' Encoding.ASCII)) {  			sw.WriteLine ();  			sw.WriteLine ("# Ported with MTK FirmwareAdapter Tool");  			sw.WriteLine ("persist.service.adb.enable=1");  			sw.WriteLine ("persist.adb.notify=0");  			sw.Close ();  		}  	}  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data") == false)  		Directory.CreateDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data");  	System.IO.StreamWriter swr = new System.IO.StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data\PortProgect.fat");  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		swr.WriteLine (checkedListBox1.Items [i]);  	}  	swr.Close ();  	zip.AddDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	if (Directory.Exists ("WorkDIR\\AdaptedROMS") == false) {  		Directory.CreateDirectory ("WorkDIR\\AdaptedROMS");  	}  	if (checkBox5.Checked == false) {  		string k = "_" + DateTime.Now.ToString ("dd.MM.yy_HH-mm-ss");  		h = Convert.ToString (comboBox1.SelectedItem + k + ".zip");  	}  	else {  		if (textBox3.Text == "" || textBox3.Text == null) {  			string k = "_" + DateTime.Now.ToString ("dd.MM.yy_HH-mm-ss");  			h = Convert.ToString (comboBox1.SelectedItem + k + ".zip");  		}  		else  			h = textBox3.Text + ".zip";  	}  	zip.Save ("WorkDIR\\AdaptedROMS\\" + h);  	Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack"' true);  	if (checkBox7.Checked == true) {  		string Patch = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile.WriteLine ("signapk.cmd " + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"");  		BatFile.Close ();  		try {  			Process win = new Process ();  			win.StartInfo.ErrorDialog = true;  			win.StartInfo.FileName = Patch;  			win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			this.Cursor = Cursors.WaitCursor;  			win.Start ();  			win.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h)))  				File.Delete ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h));  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		finally {  			File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (h) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + h);  		}  	}  	if (File.Exists (@"Projects\" + comboBox1.SelectedItem + @"\boot.img") == true)  		File.Delete (@"Projects\" + comboBox1.SelectedItem + @"\boot.img");  	SoundPlay ();  	Message MS = new Message (null' build_succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	ProcessStartInfo startInfo = null;  	startInfo = new ProcessStartInfo ("Explorer");  	startInfo.UseShellExecute = false;  	startInfo.Arguments = @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"";  	Process.Start (startInfo);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: using (ZipFile zip = new ZipFile ()) {  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == false && Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\META-INF") == false) {  		Message M = new Message (err' meta' null' exit' choose' null' null' 2' 0);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		if (M.fk == 1)  			return;  		else {  			folderBrowserDialog1.Description = choosem;  			if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  				CopyDirectory (folderBrowserDialog1.SelectedPath' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF");  			}  			else  				return;  		}  	}  	else {  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == true || Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF") == true) {  			if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"))  				Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"' true);  		}  	}  	string h = null;  	CopyDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	CopyDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img") == true) {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img"' true);  		File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  	}  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop") == true) {  		using (StreamWriter sw = new StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop"' true' Encoding.ASCII)) {  			sw.WriteLine ();  			sw.WriteLine ("# Ported with MTK FirmwareAdapter Tool");  			sw.WriteLine ("persist.service.adb.enable=1");  			sw.WriteLine ("persist.adb.notify=0");  			sw.Close ();  		}  	}  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data") == false)  		Directory.CreateDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data");  	System.IO.StreamWriter swr = new System.IO.StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data\PortProgect.fat");  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		swr.WriteLine (checkedListBox1.Items [i]);  	}  	swr.Close ();  	zip.AddDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	if (Directory.Exists ("WorkDIR\\AdaptedROMS") == false) {  		Directory.CreateDirectory ("WorkDIR\\AdaptedROMS");  	}  	if (checkBox5.Checked == false) {  		string k = "_" + DateTime.Now.ToString ("dd.MM.yy_HH-mm-ss");  		h = Convert.ToString (comboBox1.SelectedItem + k + ".zip");  	}  	else {  		if (textBox3.Text == "" || textBox3.Text == null) {  			string k = "_" + DateTime.Now.ToString ("dd.MM.yy_HH-mm-ss");  			h = Convert.ToString (comboBox1.SelectedItem + k + ".zip");  		}  		else  			h = textBox3.Text + ".zip";  	}  	zip.Save ("WorkDIR\\AdaptedROMS\\" + h);  	Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack"' true);  	if (checkBox7.Checked == true) {  		string Patch = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile.WriteLine ("signapk.cmd " + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"");  		BatFile.Close ();  		try {  			Process win = new Process ();  			win.StartInfo.ErrorDialog = true;  			win.StartInfo.FileName = Patch;  			win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			this.Cursor = Cursors.WaitCursor;  			win.Start ();  			win.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h)))  				File.Delete ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h));  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		finally {  			File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (h) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + h);  		}  	}  	if (File.Exists (@"Projects\" + comboBox1.SelectedItem + @"\boot.img") == true)  		File.Delete (@"Projects\" + comboBox1.SelectedItem + @"\boot.img");  	SoundPlay ();  	Message MS = new Message (null' build_succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	ProcessStartInfo startInfo = null;  	startInfo = new ProcessStartInfo ("Explorer");  	startInfo.UseShellExecute = false;  	startInfo.Arguments = @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"";  	Process.Start (startInfo);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: using (ZipFile zip = new ZipFile ()) {  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == false && Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\META-INF") == false) {  		Message M = new Message (err' meta' null' exit' choose' null' null' 2' 0);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		if (M.fk == 1)  			return;  		else {  			folderBrowserDialog1.Description = choosem;  			if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  				CopyDirectory (folderBrowserDialog1.SelectedPath' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF");  			}  			else  				return;  		}  	}  	else {  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == true || Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF") == true) {  			if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"))  				Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"' true);  		}  	}  	string h = null;  	CopyDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	CopyDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img") == true) {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img"' true);  		File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  	}  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop") == true) {  		using (StreamWriter sw = new StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop"' true' Encoding.ASCII)) {  			sw.WriteLine ();  			sw.WriteLine ("# Ported with MTK FirmwareAdapter Tool");  			sw.WriteLine ("persist.service.adb.enable=1");  			sw.WriteLine ("persist.adb.notify=0");  			sw.Close ();  		}  	}  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data") == false)  		Directory.CreateDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data");  	System.IO.StreamWriter swr = new System.IO.StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data\PortProgect.fat");  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		swr.WriteLine (checkedListBox1.Items [i]);  	}  	swr.Close ();  	zip.AddDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	if (Directory.Exists ("WorkDIR\\AdaptedROMS") == false) {  		Directory.CreateDirectory ("WorkDIR\\AdaptedROMS");  	}  	if (checkBox5.Checked == false) {  		string k = "_" + DateTime.Now.ToString ("dd.MM.yy_HH-mm-ss");  		h = Convert.ToString (comboBox1.SelectedItem + k + ".zip");  	}  	else {  		if (textBox3.Text == "" || textBox3.Text == null) {  			string k = "_" + DateTime.Now.ToString ("dd.MM.yy_HH-mm-ss");  			h = Convert.ToString (comboBox1.SelectedItem + k + ".zip");  		}  		else  			h = textBox3.Text + ".zip";  	}  	zip.Save ("WorkDIR\\AdaptedROMS\\" + h);  	Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack"' true);  	if (checkBox7.Checked == true) {  		string Patch = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile.WriteLine ("signapk.cmd " + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"");  		BatFile.Close ();  		try {  			Process win = new Process ();  			win.StartInfo.ErrorDialog = true;  			win.StartInfo.FileName = Patch;  			win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			this.Cursor = Cursors.WaitCursor;  			win.Start ();  			win.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h)))  				File.Delete ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h));  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		finally {  			File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (h) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + h);  		}  	}  	if (File.Exists (@"Projects\" + comboBox1.SelectedItem + @"\boot.img") == true)  		File.Delete (@"Projects\" + comboBox1.SelectedItem + @"\boot.img");  	SoundPlay ();  	Message MS = new Message (null' build_succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	ProcessStartInfo startInfo = null;  	startInfo = new ProcessStartInfo ("Explorer");  	startInfo.UseShellExecute = false;  	startInfo.Arguments = @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"";  	Process.Start (startInfo);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: using (ZipFile zip = new ZipFile ()) {  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == false && Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\META-INF") == false) {  		Message M = new Message (err' meta' null' exit' choose' null' null' 2' 0);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		if (M.fk == 1)  			return;  		else {  			folderBrowserDialog1.Description = choosem;  			if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  				CopyDirectory (folderBrowserDialog1.SelectedPath' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF");  			}  			else  				return;  		}  	}  	else {  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == true || Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF") == true) {  			if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"))  				Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"' true);  		}  	}  	string h = null;  	CopyDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	CopyDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img") == true) {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img"' true);  		File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  	}  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop") == true) {  		using (StreamWriter sw = new StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop"' true' Encoding.ASCII)) {  			sw.WriteLine ();  			sw.WriteLine ("# Ported with MTK FirmwareAdapter Tool");  			sw.WriteLine ("persist.service.adb.enable=1");  			sw.WriteLine ("persist.adb.notify=0");  			sw.Close ();  		}  	}  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data") == false)  		Directory.CreateDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data");  	System.IO.StreamWriter swr = new System.IO.StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data\PortProgect.fat");  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		swr.WriteLine (checkedListBox1.Items [i]);  	}  	swr.Close ();  	zip.AddDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	if (Directory.Exists ("WorkDIR\\AdaptedROMS") == false) {  		Directory.CreateDirectory ("WorkDIR\\AdaptedROMS");  	}  	if (checkBox5.Checked == false) {  		string k = "_" + DateTime.Now.ToString ("dd.MM.yy_HH-mm-ss");  		h = Convert.ToString (comboBox1.SelectedItem + k + ".zip");  	}  	else {  		if (textBox3.Text == "" || textBox3.Text == null) {  			string k = "_" + DateTime.Now.ToString ("dd.MM.yy_HH-mm-ss");  			h = Convert.ToString (comboBox1.SelectedItem + k + ".zip");  		}  		else  			h = textBox3.Text + ".zip";  	}  	zip.Save ("WorkDIR\\AdaptedROMS\\" + h);  	Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack"' true);  	if (checkBox7.Checked == true) {  		string Patch = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile.WriteLine ("signapk.cmd " + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"");  		BatFile.Close ();  		try {  			Process win = new Process ();  			win.StartInfo.ErrorDialog = true;  			win.StartInfo.FileName = Patch;  			win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			this.Cursor = Cursors.WaitCursor;  			win.Start ();  			win.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h)))  				File.Delete ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h));  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		finally {  			File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (h) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + h);  		}  	}  	if (File.Exists (@"Projects\" + comboBox1.SelectedItem + @"\boot.img") == true)  		File.Delete (@"Projects\" + comboBox1.SelectedItem + @"\boot.img");  	SoundPlay ();  	Message MS = new Message (null' build_succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	ProcessStartInfo startInfo = null;  	startInfo = new ProcessStartInfo ("Explorer");  	startInfo.UseShellExecute = false;  	startInfo.Arguments = @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"";  	Process.Start (startInfo);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: using (ZipFile zip = new ZipFile ()) {  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == false && Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\META-INF") == false) {  		Message M = new Message (err' meta' null' exit' choose' null' null' 2' 0);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  		if (M.fk == 1)  			return;  		else {  			folderBrowserDialog1.Description = choosem;  			if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  				CopyDirectory (folderBrowserDialog1.SelectedPath' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF");  			}  			else  				return;  		}  	}  	else {  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == true || Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF") == true) {  			if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"))  				Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"' true);  		}  	}  	string h = null;  	CopyDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	CopyDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img") == true) {  		File.Copy (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img"' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\boot.img"' true);  		File.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\boot.img");  	}  	if (File.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop") == true) {  		using (StreamWriter sw = new StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\build.prop"' true' Encoding.ASCII)) {  			sw.WriteLine ();  			sw.WriteLine ("# Ported with MTK FirmwareAdapter Tool");  			sw.WriteLine ("persist.service.adb.enable=1");  			sw.WriteLine ("persist.adb.notify=0");  			sw.Close ();  		}  	}  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data") == false)  		Directory.CreateDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data");  	System.IO.StreamWriter swr = new System.IO.StreamWriter (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\system\data\PortProgect.fat");  	for (int i = 0; i < checkedListBox1.Items.Count; i++) {  		swr.WriteLine (checkedListBox1.Items [i]);  	}  	swr.Close ();  	zip.AddDirectory (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack");  	if (Directory.Exists ("WorkDIR\\AdaptedROMS") == false) {  		Directory.CreateDirectory ("WorkDIR\\AdaptedROMS");  	}  	if (checkBox5.Checked == false) {  		string k = "_" + DateTime.Now.ToString ("dd.MM.yy_HH-mm-ss");  		h = Convert.ToString (comboBox1.SelectedItem + k + ".zip");  	}  	else {  		if (textBox3.Text == "" || textBox3.Text == null) {  			string k = "_" + DateTime.Now.ToString ("dd.MM.yy_HH-mm-ss");  			h = Convert.ToString (comboBox1.SelectedItem + k + ".zip");  		}  		else  			h = textBox3.Text + ".zip";  	}  	zip.Save ("WorkDIR\\AdaptedROMS\\" + h);  	Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack"' true);  	if (checkBox7.Checked == true) {  		string Patch = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  		BatFile.WriteLine ("@echo off");  		BatFile.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile.WriteLine ("signapk.cmd " + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"");  		BatFile.Close ();  		try {  			Process win = new Process ();  			win.StartInfo.ErrorDialog = true;  			win.StartInfo.FileName = Patch;  			win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			this.Cursor = Cursors.WaitCursor;  			win.Start ();  			win.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h)))  				File.Delete ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h));  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		finally {  			File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (h) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + h);  		}  	}  	if (File.Exists (@"Projects\" + comboBox1.SelectedItem + @"\boot.img") == true)  		File.Delete (@"Projects\" + comboBox1.SelectedItem + @"\boot.img");  	SoundPlay ();  	Message MS = new Message (null' build_succ' null' ok' null' null' null' 1' time);  	MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  	MS.ShowDialog ();  	ProcessStartInfo startInfo = null;  	startInfo = new ProcessStartInfo ("Explorer");  	startInfo.UseShellExecute = false;  	startInfo.Arguments = @"/select'" + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"";  	Process.Start (startInfo);  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == false && Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\META-INF") == false) {  	Message M = new Message (err' meta' null' exit' choose' null' null' 2' 0);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	if (M.fk == 1)  		return;  	else {  		folderBrowserDialog1.Description = choosem;  		if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  			CopyDirectory (folderBrowserDialog1.SelectedPath' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF");  		}  		else  			return;  	}  }  else {  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == true || Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF") == true) {  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"))  			Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"' true);  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == false && Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\META-INF") == false) {  	Message M = new Message (err' meta' null' exit' choose' null' null' 2' 0);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	if (M.fk == 1)  		return;  	else {  		folderBrowserDialog1.Description = choosem;  		if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  			CopyDirectory (folderBrowserDialog1.SelectedPath' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF");  		}  		else  			return;  	}  }  else {  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == true || Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF") == true) {  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"))  			Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"' true);  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == false && Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\META-INF") == false) {  	Message M = new Message (err' meta' null' exit' choose' null' null' 2' 0);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	if (M.fk == 1)  		return;  	else {  		folderBrowserDialog1.Description = choosem;  		if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  			CopyDirectory (folderBrowserDialog1.SelectedPath' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF");  		}  		else  			return;  	}  }  else {  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == true || Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF") == true) {  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"))  			Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"' true);  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == false && Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\META-INF") == false) {  	Message M = new Message (err' meta' null' exit' choose' null' null' 2' 0);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	if (M.fk == 1)  		return;  	else {  		folderBrowserDialog1.Description = choosem;  		if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  			CopyDirectory (folderBrowserDialog1.SelectedPath' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF");  		}  		else  			return;  	}  }  else {  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == true || Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF") == true) {  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"))  			Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"' true);  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == false && Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\ROMtoPort\META-INF") == false) {  	Message M = new Message (err' meta' null' exit' choose' null' null' 2' 0);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  	if (M.fk == 1)  		return;  	else {  		folderBrowserDialog1.Description = choosem;  		if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  			CopyDirectory (folderBrowserDialog1.SelectedPath' @"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF");  		}  		else  			return;  	}  }  else {  	if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\YourFiles\META-INF") == true || Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF") == true) {  		if (Directory.Exists (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"))  			Directory.Delete (@"WorkDIR\" + comboBox1.SelectedItem + @"\Pack\META-INF"' true);  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: if (checkBox7.Checked == true) {  	string Patch = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  	BatFile.WriteLine ("signapk.cmd " + "\"" + Directory.GetCurrentDirectory () + "\\WorkDIR\\AdaptedROMS\\" + h + "\"");  	BatFile.Close ();  	try {  		Process win = new Process ();  		win.StartInfo.ErrorDialog = true;  		win.StartInfo.FileName = Patch;  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h)))  			File.Delete ("WorkDIR/AdaptedROMS\\" + Path.GetFileName (h));  		if (File.Exists (@"Bin\trace.bat"))  			File.Delete (@"Bin\trace.bat");  	}  	finally {  		File.Move (Directory.GetCurrentDirectory () + "\\Bin\\" + Path.GetFileNameWithoutExtension (h) + "_signed.zip"' "WorkDIR/AdaptedROMS\\" + h);  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,BuildROM,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,adbw,The following statement contains a magic number: if (t != -1) {  	Process winс = new Process ();  	winс.StartInfo.FileName = "taskkill";  	winс.StartInfo.Arguments = "/F /IM adb.exe";  	winс.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	winс.Start ();  	winс.WaitForExit ();  	this.Cursor = Cursors.Default;  	string Patch = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin");  	BatFile.WriteLine ("echo Starting ADB...");  	BatFile.WriteLine ("adb start-server");  	BatFile.WriteLine ("echo connect phone...");  	BatFile.WriteLine ("rem adb wait-for-device");  	Process win = new Process ();  	win.StartInfo.ErrorDialog = true;  	win.StartInfo.FileName = Patch;  	switch (t) {  	default: {  		return;  	}  	case 0: {  		BatFile.WriteLine ("adb shell");  		win.StartInfo.WindowStyle = ProcessWindowStyle.Normal;  		break;  	}  	case 1: {  		BatFile.WriteLine ("adb reboot now");  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		break;  	}  	case 2: {  		BatFile.WriteLine ("adb reboot recovery");  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		break;  	}  	case 3: {  		BatFile.WriteLine ("adb shell busybox killall system_server");  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		break;  	}  	}  	BatFile.WriteLine ("taskkill /F /IM adb.exe");  	BatFile.Close ();  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace.bat");  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,adbw,The following statement contains a magic number: if (t != -1) {  	Process winс = new Process ();  	winс.StartInfo.FileName = "taskkill";  	winс.StartInfo.Arguments = "/F /IM adb.exe";  	winс.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	winс.Start ();  	winс.WaitForExit ();  	this.Cursor = Cursors.Default;  	string Patch = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin");  	BatFile.WriteLine ("echo Starting ADB...");  	BatFile.WriteLine ("adb start-server");  	BatFile.WriteLine ("echo connect phone...");  	BatFile.WriteLine ("rem adb wait-for-device");  	Process win = new Process ();  	win.StartInfo.ErrorDialog = true;  	win.StartInfo.FileName = Patch;  	switch (t) {  	default: {  		return;  	}  	case 0: {  		BatFile.WriteLine ("adb shell");  		win.StartInfo.WindowStyle = ProcessWindowStyle.Normal;  		break;  	}  	case 1: {  		BatFile.WriteLine ("adb reboot now");  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		break;  	}  	case 2: {  		BatFile.WriteLine ("adb reboot recovery");  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		break;  	}  	case 3: {  		BatFile.WriteLine ("adb shell busybox killall system_server");  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		break;  	}  	}  	BatFile.WriteLine ("taskkill /F /IM adb.exe");  	BatFile.Close ();  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace.bat");  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,adbw,The following statement contains a magic number: if (t != -1) {  	Process winс = new Process ();  	winс.StartInfo.FileName = "taskkill";  	winс.StartInfo.Arguments = "/F /IM adb.exe";  	winс.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	winс.Start ();  	winс.WaitForExit ();  	this.Cursor = Cursors.Default;  	string Patch = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin");  	BatFile.WriteLine ("echo Starting ADB...");  	BatFile.WriteLine ("adb start-server");  	BatFile.WriteLine ("echo connect phone...");  	BatFile.WriteLine ("rem adb wait-for-device");  	Process win = new Process ();  	win.StartInfo.ErrorDialog = true;  	win.StartInfo.FileName = Patch;  	switch (t) {  	default: {  		return;  	}  	case 0: {  		BatFile.WriteLine ("adb shell");  		win.StartInfo.WindowStyle = ProcessWindowStyle.Normal;  		break;  	}  	case 1: {  		BatFile.WriteLine ("adb reboot now");  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		break;  	}  	case 2: {  		BatFile.WriteLine ("adb reboot recovery");  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		break;  	}  	case 3: {  		BatFile.WriteLine ("adb shell busybox killall system_server");  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		break;  	}  	}  	BatFile.WriteLine ("taskkill /F /IM adb.exe");  	BatFile.Close ();  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace.bat");  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,adbw,The following statement contains a magic number: switch (t) {  default: {  	return;  }  case 0: {  	BatFile.WriteLine ("adb shell");  	win.StartInfo.WindowStyle = ProcessWindowStyle.Normal;  	break;  }  case 1: {  	BatFile.WriteLine ("adb reboot now");  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	break;  }  case 2: {  	BatFile.WriteLine ("adb reboot recovery");  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	break;  }  case 3: {  	BatFile.WriteLine ("adb shell busybox killall system_server");  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	break;  }  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,adbw,The following statement contains a magic number: switch (t) {  default: {  	return;  }  case 0: {  	BatFile.WriteLine ("adb shell");  	win.StartInfo.WindowStyle = ProcessWindowStyle.Normal;  	break;  }  case 1: {  	BatFile.WriteLine ("adb reboot now");  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	break;  }  case 2: {  	BatFile.WriteLine ("adb reboot recovery");  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	break;  }  case 3: {  	BatFile.WriteLine ("adb shell busybox killall system_server");  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	break;  }  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,adblog,The following statement contains a magic number: switch (domainUpDown1.SelectedIndex) {  case 0: {  	pol += " *:v";  	break;  }  case 1: {  	pol += " *:d";  	break;  }  case 2: {  	pol += " *:i";  	break;  }  case 3: {  	pol += " *:w";  	break;  }  case 4: {  	pol += " *:e";  	break;  }  case 5: {  	pol += " *:f";  	break;  }  default:  	break;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,adblog,The following statement contains a magic number: switch (domainUpDown1.SelectedIndex) {  case 0: {  	pol += " *:v";  	break;  }  case 1: {  	pol += " *:d";  	break;  }  case 2: {  	pol += " *:i";  	break;  }  case 3: {  	pol += " *:w";  	break;  }  case 4: {  	pol += " *:e";  	break;  }  case 5: {  	pol += " *:f";  	break;  }  default:  	break;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,adblog,The following statement contains a magic number: switch (domainUpDown1.SelectedIndex) {  case 0: {  	pol += " *:v";  	break;  }  case 1: {  	pol += " *:d";  	break;  }  case 2: {  	pol += " *:i";  	break;  }  case 3: {  	pol += " *:w";  	break;  }  case 4: {  	pol += " *:e";  	break;  }  case 5: {  	pol += " *:f";  	break;  }  default:  	break;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,adblog,The following statement contains a magic number: switch (domainUpDown1.SelectedIndex) {  case 0: {  	pol += " *:v";  	break;  }  case 1: {  	pol += " *:d";  	break;  }  case 2: {  	pol += " *:i";  	break;  }  case 3: {  	pol += " *:w";  	break;  }  case 4: {  	pol += " *:e";  	break;  }  case 5: {  	pol += " *:f";  	break;  }  default:  	break;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button2_Click,The following statement contains a magic number: F3.SetDesktopLocation (this.Location.X + (this.Width / 2) - (F3.Width / 2)' this.Location.Y + (this.Height / 2) - (F3.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button2_Click,The following statement contains a magic number: F3.SetDesktopLocation (this.Location.X + (this.Width / 2) - (F3.Width / 2)' this.Location.Y + (this.Height / 2) - (F3.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button2_Click,The following statement contains a magic number: F3.SetDesktopLocation (this.Location.X + (this.Width / 2) - (F3.Width / 2)' this.Location.Y + (this.Height / 2) - (F3.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button2_Click,The following statement contains a magic number: F3.SetDesktopLocation (this.Location.X + (this.Width / 2) - (F3.Width / 2)' this.Location.Y + (this.Height / 2) - (F3.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button21_Click,The following statement contains a magic number: ab.SetDesktopLocation (this.Location.X + (this.Width / 2) - (ab.Width / 2)' this.Location.Y + (this.Height / 2) - (ab.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button21_Click,The following statement contains a magic number: ab.SetDesktopLocation (this.Location.X + (this.Width / 2) - (ab.Width / 2)' this.Location.Y + (this.Height / 2) - (ab.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button21_Click,The following statement contains a magic number: ab.SetDesktopLocation (this.Location.X + (this.Width / 2) - (ab.Width / 2)' this.Location.Y + (this.Height / 2) - (ab.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button21_Click,The following statement contains a magic number: ab.SetDesktopLocation (this.Location.X + (this.Width / 2) - (ab.Width / 2)' this.Location.Y + (this.Height / 2) - (ab.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button29_Click,The following statement contains a magic number: switch (D) {  default: {  	return;  }  case 0: {  	ZIPunpack (ths' c);  	break;  }  case 1: {  	FTUnpack (ths);  	break;  }  case 2: {  	Unpacked (ths' c);  	break;  }  case 3: {  	FromPhone (ths);  	break;  }  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button29_Click,The following statement contains a magic number: switch (D) {  default: {  	return;  }  case 0: {  	ZIPunpack (ths' c);  	break;  }  case 1: {  	FTUnpack (ths);  	break;  }  case 2: {  	Unpacked (ths' c);  	break;  }  case 3: {  	FromPhone (ths);  	break;  }  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button30_Click,The following statement contains a magic number: switch (D) {  default: {  	return;  }  case 0: {  	ZIPunpack (ths' c);  	break;  }  case 1: {  	FTUnpack (ths);  	break;  }  case 2: {  	Unpacked (ths' c);  	break;  }  case 3: {  	FromPhone (ths);  	break;  }  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button30_Click,The following statement contains a magic number: switch (D) {  default: {  	return;  }  case 0: {  	ZIPunpack (ths' c);  	break;  }  case 1: {  	FTUnpack (ths);  	break;  }  case 2: {  	Unpacked (ths' c);  	break;  }  case 3: {  	FromPhone (ths);  	break;  }  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The following statement contains a magic number: try {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem) == true) {  		if (Directory.Exists ("boot\\" + comboBox1.SelectedItem) == true)  			Directory.Delete ("boot\\" + comboBox1.SelectedItem' true);  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem' true);  		Message M = new Message (null' del_succ' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  catch (Exception ex) {  	Message M = new Message (del_err' ex.Message' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The following statement contains a magic number: try {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem) == true) {  		if (Directory.Exists ("boot\\" + comboBox1.SelectedItem) == true)  			Directory.Delete ("boot\\" + comboBox1.SelectedItem' true);  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem' true);  		Message M = new Message (null' del_succ' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  catch (Exception ex) {  	Message M = new Message (del_err' ex.Message' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The following statement contains a magic number: try {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem) == true) {  		if (Directory.Exists ("boot\\" + comboBox1.SelectedItem) == true)  			Directory.Delete ("boot\\" + comboBox1.SelectedItem' true);  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem' true);  		Message M = new Message (null' del_succ' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  catch (Exception ex) {  	Message M = new Message (del_err' ex.Message' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The following statement contains a magic number: try {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem) == true) {  		if (Directory.Exists ("boot\\" + comboBox1.SelectedItem) == true)  			Directory.Delete ("boot\\" + comboBox1.SelectedItem' true);  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem' true);  		Message M = new Message (null' del_succ' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  catch (Exception ex) {  	Message M = new Message (del_err' ex.Message' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The following statement contains a magic number: try {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem) == true) {  		if (Directory.Exists ("boot\\" + comboBox1.SelectedItem) == true)  			Directory.Delete ("boot\\" + comboBox1.SelectedItem' true);  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem' true);  		Message M = new Message (null' del_succ' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  catch (Exception ex) {  	Message M = new Message (del_err' ex.Message' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The following statement contains a magic number: try {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem) == true) {  		if (Directory.Exists ("boot\\" + comboBox1.SelectedItem) == true)  			Directory.Delete ("boot\\" + comboBox1.SelectedItem' true);  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem' true);  		Message M = new Message (null' del_succ' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  catch (Exception ex) {  	Message M = new Message (del_err' ex.Message' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The following statement contains a magic number: try {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem) == true) {  		if (Directory.Exists ("boot\\" + comboBox1.SelectedItem) == true)  			Directory.Delete ("boot\\" + comboBox1.SelectedItem' true);  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem' true);  		Message M = new Message (null' del_succ' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  catch (Exception ex) {  	Message M = new Message (del_err' ex.Message' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The following statement contains a magic number: try {  	if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem) == true) {  		if (Directory.Exists ("boot\\" + comboBox1.SelectedItem) == true)  			Directory.Delete ("boot\\" + comboBox1.SelectedItem' true);  		Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem' true);  		Message M = new Message (null' del_succ' null' ok' null' null' null' 1' time);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.ShowDialog ();  	}  }  catch (Exception ex) {  	Message M = new Message (del_err' ex.Message' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  finally {  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The following statement contains a magic number: if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem) == true) {  	if (Directory.Exists ("boot\\" + comboBox1.SelectedItem) == true)  		Directory.Delete ("boot\\" + comboBox1.SelectedItem' true);  	Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem' true);  	Message M = new Message (null' del_succ' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The following statement contains a magic number: if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem) == true) {  	if (Directory.Exists ("boot\\" + comboBox1.SelectedItem) == true)  		Directory.Delete ("boot\\" + comboBox1.SelectedItem' true);  	Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem' true);  	Message M = new Message (null' del_succ' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The following statement contains a magic number: if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem) == true) {  	if (Directory.Exists ("boot\\" + comboBox1.SelectedItem) == true)  		Directory.Delete ("boot\\" + comboBox1.SelectedItem' true);  	Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem' true);  	Message M = new Message (null' del_succ' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The following statement contains a magic number: if (Directory.Exists ("WorkDIR\\" + comboBox1.SelectedItem) == true) {  	if (Directory.Exists ("boot\\" + comboBox1.SelectedItem) == true)  		Directory.Delete ("boot\\" + comboBox1.SelectedItem' true);  	Directory.Delete ("WorkDIR\\" + comboBox1.SelectedItem' true);  	Message M = new Message (null' del_succ' null' ok' null' null' null' 1' time);  	M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  	M.ShowDialog ();  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button20_Click,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button25_Click,The following statement contains a magic number: if (File.Exists (Directory.GetCurrentDirectory () + "\\Utilits\\prop") == false) {  	if (Directory.Exists (Directory.GetCurrentDirectory () + "\\Utilits") == false)  		Directory.CreateDirectory (Directory.GetCurrentDirectory () + "\\Utilits");  	string Patch = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  	StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (866));  	BatFile.WriteLine ("@echo off");  	BatFile.WriteLine ("echo Starting ADB...");  	BatFile.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin");  	BatFile.WriteLine ("adb start-server");  	BatFile.WriteLine ("echo connect phone...");  	BatFile.WriteLine ("rem adb wait-for-device");  	BatFile.WriteLine ("echo Gett files from phone...");  	BatFile.WriteLine ("adb pull /system/build.prop " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\prop\"");  	BatFile.Close ();  	Process win = new Process ();  	win.StartInfo.ErrorDialog = true;  	win.StartInfo.FileName = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  	win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	win.Start ();  	win.WaitForExit ();  	this.Cursor = Cursors.Default;  	File.Delete ("Bin\\trace.bat");  	Process winс = new Process ();  	winс.StartInfo.FileName = "taskkill";  	winс.StartInfo.Arguments = "/F /IM adb.exe";  	winс.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	this.Cursor = Cursors.WaitCursor;  	winс.Start ();  	winс.WaitForExit ();  	this.Cursor = Cursors.Default;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button26_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button26_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button26_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button26_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button22_Click,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button22_Click,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button22_Click,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button22_Click,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: MS.SetDesktopLocation (this.Location.X + (this.Width / 2) - (MS.Width / 2)' this.Location.Y + (this.Height / 2) - (MS.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: if (MS.radioButton1.Checked == true) {  	openFileDialog1.Filter = "System Image File |*system*.img";  	if (openFileDialog1.ShowDialog () == DialogResult.OK) {  		try {  			Process win = new Process ();  			win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  			if (Directory.Exists ("Utilits\\Temp") == true) {  				Directory.Delete ("Utilits\\Temp"' true);  			}  			Directory.CreateDirectory ("Utilits\\Temp");  			win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"Utilits\\Temp\\system\"";  			win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			win.StartInfo.ErrorDialog = false;  			this.Cursor = Cursors.WaitCursor;  			win.Start ();  			win.WaitForExit ();  			this.Cursor = Cursors.Default;  		}  		finally {  			openFileDialog1.Filter = "Boot Image File |*boot*.img";  			if (openFileDialog1.ShowDialog () == DialogResult.OK) {  				File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\boot.img"' true);  			}  		}  		{  			Message M = new Message ("META-INF"' null' null' next' null' null' null' 1' 0);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.groupBox7.Visible = true;  			M.radioButton1.Text = mz;  			M.radioButton2.Text = mf;  			M.ShowDialog ();  			if (M.radioButton1.Checked == true) {  				if (openFileDialog2.ShowDialog () == DialogResult.OK) {  					string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  					StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  					BatFile0.WriteLine ("@echo off");  					BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  					BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\" META-INF -r -y");  					BatFile0.Close ();  					Process wing = new Process ();  					wing.StartInfo.CreateNoWindow = true;  					wing.StartInfo.ErrorDialog = false;  					wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  					wing.StartInfo.FileName = @"Bin\trace.bat";  					this.Cursor = Cursors.WaitCursor;  					wing.Start ();  					wing.WaitForExit ();  					this.Cursor = Cursors.Default;  					if (File.Exists (@"Bin\trace.bat"))  						File.Delete (@"Bin\trace.bat");  				}  				else  					return;  				if (Directory.Exists ("Utilits\\Temp") == true) {  					Directory.Delete ("Utilits\\Temp"' true);  				}  			}  			else {  				folderBrowserDialog1.Description = choosem;  				if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  					CopyDirectory (folderBrowserDialog1.SelectedPath' "Utilits/Temp/META-INF");  					this.Cursor = Cursors.WaitCursor;  				}  				else  					return;  			}  			if (Directory.Exists ("Utilits/Temp")) {  				string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  				StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  				BatFile0.WriteLine ("@echo off");  				BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  				BatFile0.WriteLine ("7z.exe a " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\FTtoZIP" + "_" + tmp + ".zip" + "\" \"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\\*");  				BatFile0.Close ();  				Process wing = new Process ();  				wing.StartInfo.CreateNoWindow = true;  				wing.StartInfo.ErrorDialog = false;  				wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				wing.StartInfo.FileName = @"Bin\trace.bat";  				wing.Start ();  				wing.WaitForExit ();  				this.Cursor = Cursors.Default;  				if (File.Exists (@"Bin\trace.bat"))  					File.Delete (@"Bin\trace.bat");  			}  			else  				return;  			if (Directory.Exists ("Utilits\\Temp") == true) {  				Directory.Delete ("Utilits\\Temp"' true);  			}  			SoundPlay ();  		}  	}  	else  		return;  }  else {  	{  		openFileDialog1.Filter = "System Image File |*system*.img";  		if (openFileDialog1.ShowDialog () == DialogResult.OK) {  			Directory.CreateDirectory ("Utilits/Temp");  			try {  				this.Cursor = Cursors.WaitCursor;  				File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\system.img"' true);  				this.Cursor = Cursors.Default;  			}  			finally {  				openFileDialog1.Filter = "Boot Image File |*boot*.img";  				if (openFileDialog1.ShowDialog () == DialogResult.OK) {  					this.Cursor = Cursors.WaitCursor;  					File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\boot.img"' true);  					this.Cursor = Cursors.Default;  				}  			}  			if (File.Exists ("Utilits/FTtoZIP" + "_" + tmp + ".zip") == false)  				File.WriteAllBytes ("Utilits/FTtoZIP" + "_" + tmp + ".zip"' MFAT.Properties.Resources.rom);  			if (Directory.Exists ("Utilits/Temp"))  				using (ZipFile zip = ZipFile.Read ("Utilits/FTtoZIP" + "_" + tmp + ".zip")) {  					this.Cursor = Cursors.WaitCursor;  					zip.UpdateDirectory ("Utilits/Temp");  					zip.Save ("Utilits/FTtoZIP" + "_" + tmp + ".zip");  					Directory.Delete ("Utilits/Temp"' true);  					this.Cursor = Cursors.Default;  				}  			else  				return;  			SoundPlay ();  		}  		else  			return;  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: if (MS.radioButton1.Checked == true) {  	openFileDialog1.Filter = "System Image File |*system*.img";  	if (openFileDialog1.ShowDialog () == DialogResult.OK) {  		try {  			Process win = new Process ();  			win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  			if (Directory.Exists ("Utilits\\Temp") == true) {  				Directory.Delete ("Utilits\\Temp"' true);  			}  			Directory.CreateDirectory ("Utilits\\Temp");  			win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"Utilits\\Temp\\system\"";  			win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			win.StartInfo.ErrorDialog = false;  			this.Cursor = Cursors.WaitCursor;  			win.Start ();  			win.WaitForExit ();  			this.Cursor = Cursors.Default;  		}  		finally {  			openFileDialog1.Filter = "Boot Image File |*boot*.img";  			if (openFileDialog1.ShowDialog () == DialogResult.OK) {  				File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\boot.img"' true);  			}  		}  		{  			Message M = new Message ("META-INF"' null' null' next' null' null' null' 1' 0);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.groupBox7.Visible = true;  			M.radioButton1.Text = mz;  			M.radioButton2.Text = mf;  			M.ShowDialog ();  			if (M.radioButton1.Checked == true) {  				if (openFileDialog2.ShowDialog () == DialogResult.OK) {  					string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  					StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  					BatFile0.WriteLine ("@echo off");  					BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  					BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\" META-INF -r -y");  					BatFile0.Close ();  					Process wing = new Process ();  					wing.StartInfo.CreateNoWindow = true;  					wing.StartInfo.ErrorDialog = false;  					wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  					wing.StartInfo.FileName = @"Bin\trace.bat";  					this.Cursor = Cursors.WaitCursor;  					wing.Start ();  					wing.WaitForExit ();  					this.Cursor = Cursors.Default;  					if (File.Exists (@"Bin\trace.bat"))  						File.Delete (@"Bin\trace.bat");  				}  				else  					return;  				if (Directory.Exists ("Utilits\\Temp") == true) {  					Directory.Delete ("Utilits\\Temp"' true);  				}  			}  			else {  				folderBrowserDialog1.Description = choosem;  				if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  					CopyDirectory (folderBrowserDialog1.SelectedPath' "Utilits/Temp/META-INF");  					this.Cursor = Cursors.WaitCursor;  				}  				else  					return;  			}  			if (Directory.Exists ("Utilits/Temp")) {  				string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  				StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  				BatFile0.WriteLine ("@echo off");  				BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  				BatFile0.WriteLine ("7z.exe a " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\FTtoZIP" + "_" + tmp + ".zip" + "\" \"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\\*");  				BatFile0.Close ();  				Process wing = new Process ();  				wing.StartInfo.CreateNoWindow = true;  				wing.StartInfo.ErrorDialog = false;  				wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				wing.StartInfo.FileName = @"Bin\trace.bat";  				wing.Start ();  				wing.WaitForExit ();  				this.Cursor = Cursors.Default;  				if (File.Exists (@"Bin\trace.bat"))  					File.Delete (@"Bin\trace.bat");  			}  			else  				return;  			if (Directory.Exists ("Utilits\\Temp") == true) {  				Directory.Delete ("Utilits\\Temp"' true);  			}  			SoundPlay ();  		}  	}  	else  		return;  }  else {  	{  		openFileDialog1.Filter = "System Image File |*system*.img";  		if (openFileDialog1.ShowDialog () == DialogResult.OK) {  			Directory.CreateDirectory ("Utilits/Temp");  			try {  				this.Cursor = Cursors.WaitCursor;  				File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\system.img"' true);  				this.Cursor = Cursors.Default;  			}  			finally {  				openFileDialog1.Filter = "Boot Image File |*boot*.img";  				if (openFileDialog1.ShowDialog () == DialogResult.OK) {  					this.Cursor = Cursors.WaitCursor;  					File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\boot.img"' true);  					this.Cursor = Cursors.Default;  				}  			}  			if (File.Exists ("Utilits/FTtoZIP" + "_" + tmp + ".zip") == false)  				File.WriteAllBytes ("Utilits/FTtoZIP" + "_" + tmp + ".zip"' MFAT.Properties.Resources.rom);  			if (Directory.Exists ("Utilits/Temp"))  				using (ZipFile zip = ZipFile.Read ("Utilits/FTtoZIP" + "_" + tmp + ".zip")) {  					this.Cursor = Cursors.WaitCursor;  					zip.UpdateDirectory ("Utilits/Temp");  					zip.Save ("Utilits/FTtoZIP" + "_" + tmp + ".zip");  					Directory.Delete ("Utilits/Temp"' true);  					this.Cursor = Cursors.Default;  				}  			else  				return;  			SoundPlay ();  		}  		else  			return;  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: if (MS.radioButton1.Checked == true) {  	openFileDialog1.Filter = "System Image File |*system*.img";  	if (openFileDialog1.ShowDialog () == DialogResult.OK) {  		try {  			Process win = new Process ();  			win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  			if (Directory.Exists ("Utilits\\Temp") == true) {  				Directory.Delete ("Utilits\\Temp"' true);  			}  			Directory.CreateDirectory ("Utilits\\Temp");  			win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"Utilits\\Temp\\system\"";  			win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			win.StartInfo.ErrorDialog = false;  			this.Cursor = Cursors.WaitCursor;  			win.Start ();  			win.WaitForExit ();  			this.Cursor = Cursors.Default;  		}  		finally {  			openFileDialog1.Filter = "Boot Image File |*boot*.img";  			if (openFileDialog1.ShowDialog () == DialogResult.OK) {  				File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\boot.img"' true);  			}  		}  		{  			Message M = new Message ("META-INF"' null' null' next' null' null' null' 1' 0);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.groupBox7.Visible = true;  			M.radioButton1.Text = mz;  			M.radioButton2.Text = mf;  			M.ShowDialog ();  			if (M.radioButton1.Checked == true) {  				if (openFileDialog2.ShowDialog () == DialogResult.OK) {  					string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  					StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  					BatFile0.WriteLine ("@echo off");  					BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  					BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\" META-INF -r -y");  					BatFile0.Close ();  					Process wing = new Process ();  					wing.StartInfo.CreateNoWindow = true;  					wing.StartInfo.ErrorDialog = false;  					wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  					wing.StartInfo.FileName = @"Bin\trace.bat";  					this.Cursor = Cursors.WaitCursor;  					wing.Start ();  					wing.WaitForExit ();  					this.Cursor = Cursors.Default;  					if (File.Exists (@"Bin\trace.bat"))  						File.Delete (@"Bin\trace.bat");  				}  				else  					return;  				if (Directory.Exists ("Utilits\\Temp") == true) {  					Directory.Delete ("Utilits\\Temp"' true);  				}  			}  			else {  				folderBrowserDialog1.Description = choosem;  				if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  					CopyDirectory (folderBrowserDialog1.SelectedPath' "Utilits/Temp/META-INF");  					this.Cursor = Cursors.WaitCursor;  				}  				else  					return;  			}  			if (Directory.Exists ("Utilits/Temp")) {  				string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  				StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  				BatFile0.WriteLine ("@echo off");  				BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  				BatFile0.WriteLine ("7z.exe a " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\FTtoZIP" + "_" + tmp + ".zip" + "\" \"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\\*");  				BatFile0.Close ();  				Process wing = new Process ();  				wing.StartInfo.CreateNoWindow = true;  				wing.StartInfo.ErrorDialog = false;  				wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				wing.StartInfo.FileName = @"Bin\trace.bat";  				wing.Start ();  				wing.WaitForExit ();  				this.Cursor = Cursors.Default;  				if (File.Exists (@"Bin\trace.bat"))  					File.Delete (@"Bin\trace.bat");  			}  			else  				return;  			if (Directory.Exists ("Utilits\\Temp") == true) {  				Directory.Delete ("Utilits\\Temp"' true);  			}  			SoundPlay ();  		}  	}  	else  		return;  }  else {  	{  		openFileDialog1.Filter = "System Image File |*system*.img";  		if (openFileDialog1.ShowDialog () == DialogResult.OK) {  			Directory.CreateDirectory ("Utilits/Temp");  			try {  				this.Cursor = Cursors.WaitCursor;  				File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\system.img"' true);  				this.Cursor = Cursors.Default;  			}  			finally {  				openFileDialog1.Filter = "Boot Image File |*boot*.img";  				if (openFileDialog1.ShowDialog () == DialogResult.OK) {  					this.Cursor = Cursors.WaitCursor;  					File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\boot.img"' true);  					this.Cursor = Cursors.Default;  				}  			}  			if (File.Exists ("Utilits/FTtoZIP" + "_" + tmp + ".zip") == false)  				File.WriteAllBytes ("Utilits/FTtoZIP" + "_" + tmp + ".zip"' MFAT.Properties.Resources.rom);  			if (Directory.Exists ("Utilits/Temp"))  				using (ZipFile zip = ZipFile.Read ("Utilits/FTtoZIP" + "_" + tmp + ".zip")) {  					this.Cursor = Cursors.WaitCursor;  					zip.UpdateDirectory ("Utilits/Temp");  					zip.Save ("Utilits/FTtoZIP" + "_" + tmp + ".zip");  					Directory.Delete ("Utilits/Temp"' true);  					this.Cursor = Cursors.Default;  				}  			else  				return;  			SoundPlay ();  		}  		else  			return;  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: if (MS.radioButton1.Checked == true) {  	openFileDialog1.Filter = "System Image File |*system*.img";  	if (openFileDialog1.ShowDialog () == DialogResult.OK) {  		try {  			Process win = new Process ();  			win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  			if (Directory.Exists ("Utilits\\Temp") == true) {  				Directory.Delete ("Utilits\\Temp"' true);  			}  			Directory.CreateDirectory ("Utilits\\Temp");  			win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"Utilits\\Temp\\system\"";  			win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			win.StartInfo.ErrorDialog = false;  			this.Cursor = Cursors.WaitCursor;  			win.Start ();  			win.WaitForExit ();  			this.Cursor = Cursors.Default;  		}  		finally {  			openFileDialog1.Filter = "Boot Image File |*boot*.img";  			if (openFileDialog1.ShowDialog () == DialogResult.OK) {  				File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\boot.img"' true);  			}  		}  		{  			Message M = new Message ("META-INF"' null' null' next' null' null' null' 1' 0);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.groupBox7.Visible = true;  			M.radioButton1.Text = mz;  			M.radioButton2.Text = mf;  			M.ShowDialog ();  			if (M.radioButton1.Checked == true) {  				if (openFileDialog2.ShowDialog () == DialogResult.OK) {  					string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  					StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  					BatFile0.WriteLine ("@echo off");  					BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  					BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\" META-INF -r -y");  					BatFile0.Close ();  					Process wing = new Process ();  					wing.StartInfo.CreateNoWindow = true;  					wing.StartInfo.ErrorDialog = false;  					wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  					wing.StartInfo.FileName = @"Bin\trace.bat";  					this.Cursor = Cursors.WaitCursor;  					wing.Start ();  					wing.WaitForExit ();  					this.Cursor = Cursors.Default;  					if (File.Exists (@"Bin\trace.bat"))  						File.Delete (@"Bin\trace.bat");  				}  				else  					return;  				if (Directory.Exists ("Utilits\\Temp") == true) {  					Directory.Delete ("Utilits\\Temp"' true);  				}  			}  			else {  				folderBrowserDialog1.Description = choosem;  				if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  					CopyDirectory (folderBrowserDialog1.SelectedPath' "Utilits/Temp/META-INF");  					this.Cursor = Cursors.WaitCursor;  				}  				else  					return;  			}  			if (Directory.Exists ("Utilits/Temp")) {  				string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  				StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  				BatFile0.WriteLine ("@echo off");  				BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  				BatFile0.WriteLine ("7z.exe a " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\FTtoZIP" + "_" + tmp + ".zip" + "\" \"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\\*");  				BatFile0.Close ();  				Process wing = new Process ();  				wing.StartInfo.CreateNoWindow = true;  				wing.StartInfo.ErrorDialog = false;  				wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				wing.StartInfo.FileName = @"Bin\trace.bat";  				wing.Start ();  				wing.WaitForExit ();  				this.Cursor = Cursors.Default;  				if (File.Exists (@"Bin\trace.bat"))  					File.Delete (@"Bin\trace.bat");  			}  			else  				return;  			if (Directory.Exists ("Utilits\\Temp") == true) {  				Directory.Delete ("Utilits\\Temp"' true);  			}  			SoundPlay ();  		}  	}  	else  		return;  }  else {  	{  		openFileDialog1.Filter = "System Image File |*system*.img";  		if (openFileDialog1.ShowDialog () == DialogResult.OK) {  			Directory.CreateDirectory ("Utilits/Temp");  			try {  				this.Cursor = Cursors.WaitCursor;  				File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\system.img"' true);  				this.Cursor = Cursors.Default;  			}  			finally {  				openFileDialog1.Filter = "Boot Image File |*boot*.img";  				if (openFileDialog1.ShowDialog () == DialogResult.OK) {  					this.Cursor = Cursors.WaitCursor;  					File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\boot.img"' true);  					this.Cursor = Cursors.Default;  				}  			}  			if (File.Exists ("Utilits/FTtoZIP" + "_" + tmp + ".zip") == false)  				File.WriteAllBytes ("Utilits/FTtoZIP" + "_" + tmp + ".zip"' MFAT.Properties.Resources.rom);  			if (Directory.Exists ("Utilits/Temp"))  				using (ZipFile zip = ZipFile.Read ("Utilits/FTtoZIP" + "_" + tmp + ".zip")) {  					this.Cursor = Cursors.WaitCursor;  					zip.UpdateDirectory ("Utilits/Temp");  					zip.Save ("Utilits/FTtoZIP" + "_" + tmp + ".zip");  					Directory.Delete ("Utilits/Temp"' true);  					this.Cursor = Cursors.Default;  				}  			else  				return;  			SoundPlay ();  		}  		else  			return;  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: if (MS.radioButton1.Checked == true) {  	openFileDialog1.Filter = "System Image File |*system*.img";  	if (openFileDialog1.ShowDialog () == DialogResult.OK) {  		try {  			Process win = new Process ();  			win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  			if (Directory.Exists ("Utilits\\Temp") == true) {  				Directory.Delete ("Utilits\\Temp"' true);  			}  			Directory.CreateDirectory ("Utilits\\Temp");  			win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"Utilits\\Temp\\system\"";  			win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			win.StartInfo.ErrorDialog = false;  			this.Cursor = Cursors.WaitCursor;  			win.Start ();  			win.WaitForExit ();  			this.Cursor = Cursors.Default;  		}  		finally {  			openFileDialog1.Filter = "Boot Image File |*boot*.img";  			if (openFileDialog1.ShowDialog () == DialogResult.OK) {  				File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\boot.img"' true);  			}  		}  		{  			Message M = new Message ("META-INF"' null' null' next' null' null' null' 1' 0);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.groupBox7.Visible = true;  			M.radioButton1.Text = mz;  			M.radioButton2.Text = mf;  			M.ShowDialog ();  			if (M.radioButton1.Checked == true) {  				if (openFileDialog2.ShowDialog () == DialogResult.OK) {  					string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  					StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  					BatFile0.WriteLine ("@echo off");  					BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  					BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\" META-INF -r -y");  					BatFile0.Close ();  					Process wing = new Process ();  					wing.StartInfo.CreateNoWindow = true;  					wing.StartInfo.ErrorDialog = false;  					wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  					wing.StartInfo.FileName = @"Bin\trace.bat";  					this.Cursor = Cursors.WaitCursor;  					wing.Start ();  					wing.WaitForExit ();  					this.Cursor = Cursors.Default;  					if (File.Exists (@"Bin\trace.bat"))  						File.Delete (@"Bin\trace.bat");  				}  				else  					return;  				if (Directory.Exists ("Utilits\\Temp") == true) {  					Directory.Delete ("Utilits\\Temp"' true);  				}  			}  			else {  				folderBrowserDialog1.Description = choosem;  				if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  					CopyDirectory (folderBrowserDialog1.SelectedPath' "Utilits/Temp/META-INF");  					this.Cursor = Cursors.WaitCursor;  				}  				else  					return;  			}  			if (Directory.Exists ("Utilits/Temp")) {  				string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  				StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  				BatFile0.WriteLine ("@echo off");  				BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  				BatFile0.WriteLine ("7z.exe a " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\FTtoZIP" + "_" + tmp + ".zip" + "\" \"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\\*");  				BatFile0.Close ();  				Process wing = new Process ();  				wing.StartInfo.CreateNoWindow = true;  				wing.StartInfo.ErrorDialog = false;  				wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				wing.StartInfo.FileName = @"Bin\trace.bat";  				wing.Start ();  				wing.WaitForExit ();  				this.Cursor = Cursors.Default;  				if (File.Exists (@"Bin\trace.bat"))  					File.Delete (@"Bin\trace.bat");  			}  			else  				return;  			if (Directory.Exists ("Utilits\\Temp") == true) {  				Directory.Delete ("Utilits\\Temp"' true);  			}  			SoundPlay ();  		}  	}  	else  		return;  }  else {  	{  		openFileDialog1.Filter = "System Image File |*system*.img";  		if (openFileDialog1.ShowDialog () == DialogResult.OK) {  			Directory.CreateDirectory ("Utilits/Temp");  			try {  				this.Cursor = Cursors.WaitCursor;  				File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\system.img"' true);  				this.Cursor = Cursors.Default;  			}  			finally {  				openFileDialog1.Filter = "Boot Image File |*boot*.img";  				if (openFileDialog1.ShowDialog () == DialogResult.OK) {  					this.Cursor = Cursors.WaitCursor;  					File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\boot.img"' true);  					this.Cursor = Cursors.Default;  				}  			}  			if (File.Exists ("Utilits/FTtoZIP" + "_" + tmp + ".zip") == false)  				File.WriteAllBytes ("Utilits/FTtoZIP" + "_" + tmp + ".zip"' MFAT.Properties.Resources.rom);  			if (Directory.Exists ("Utilits/Temp"))  				using (ZipFile zip = ZipFile.Read ("Utilits/FTtoZIP" + "_" + tmp + ".zip")) {  					this.Cursor = Cursors.WaitCursor;  					zip.UpdateDirectory ("Utilits/Temp");  					zip.Save ("Utilits/FTtoZIP" + "_" + tmp + ".zip");  					Directory.Delete ("Utilits/Temp"' true);  					this.Cursor = Cursors.Default;  				}  			else  				return;  			SoundPlay ();  		}  		else  			return;  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: if (MS.radioButton1.Checked == true) {  	openFileDialog1.Filter = "System Image File |*system*.img";  	if (openFileDialog1.ShowDialog () == DialogResult.OK) {  		try {  			Process win = new Process ();  			win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  			if (Directory.Exists ("Utilits\\Temp") == true) {  				Directory.Delete ("Utilits\\Temp"' true);  			}  			Directory.CreateDirectory ("Utilits\\Temp");  			win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"Utilits\\Temp\\system\"";  			win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			win.StartInfo.ErrorDialog = false;  			this.Cursor = Cursors.WaitCursor;  			win.Start ();  			win.WaitForExit ();  			this.Cursor = Cursors.Default;  		}  		finally {  			openFileDialog1.Filter = "Boot Image File |*boot*.img";  			if (openFileDialog1.ShowDialog () == DialogResult.OK) {  				File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\boot.img"' true);  			}  		}  		{  			Message M = new Message ("META-INF"' null' null' next' null' null' null' 1' 0);  			M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  			M.groupBox7.Visible = true;  			M.radioButton1.Text = mz;  			M.radioButton2.Text = mf;  			M.ShowDialog ();  			if (M.radioButton1.Checked == true) {  				if (openFileDialog2.ShowDialog () == DialogResult.OK) {  					string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  					StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  					BatFile0.WriteLine ("@echo off");  					BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  					BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\" META-INF -r -y");  					BatFile0.Close ();  					Process wing = new Process ();  					wing.StartInfo.CreateNoWindow = true;  					wing.StartInfo.ErrorDialog = false;  					wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  					wing.StartInfo.FileName = @"Bin\trace.bat";  					this.Cursor = Cursors.WaitCursor;  					wing.Start ();  					wing.WaitForExit ();  					this.Cursor = Cursors.Default;  					if (File.Exists (@"Bin\trace.bat"))  						File.Delete (@"Bin\trace.bat");  				}  				else  					return;  				if (Directory.Exists ("Utilits\\Temp") == true) {  					Directory.Delete ("Utilits\\Temp"' true);  				}  			}  			else {  				folderBrowserDialog1.Description = choosem;  				if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  					CopyDirectory (folderBrowserDialog1.SelectedPath' "Utilits/Temp/META-INF");  					this.Cursor = Cursors.WaitCursor;  				}  				else  					return;  			}  			if (Directory.Exists ("Utilits/Temp")) {  				string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  				StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  				BatFile0.WriteLine ("@echo off");  				BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  				BatFile0.WriteLine ("7z.exe a " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\FTtoZIP" + "_" + tmp + ".zip" + "\" \"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\\*");  				BatFile0.Close ();  				Process wing = new Process ();  				wing.StartInfo.CreateNoWindow = true;  				wing.StartInfo.ErrorDialog = false;  				wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				wing.StartInfo.FileName = @"Bin\trace.bat";  				wing.Start ();  				wing.WaitForExit ();  				this.Cursor = Cursors.Default;  				if (File.Exists (@"Bin\trace.bat"))  					File.Delete (@"Bin\trace.bat");  			}  			else  				return;  			if (Directory.Exists ("Utilits\\Temp") == true) {  				Directory.Delete ("Utilits\\Temp"' true);  			}  			SoundPlay ();  		}  	}  	else  		return;  }  else {  	{  		openFileDialog1.Filter = "System Image File |*system*.img";  		if (openFileDialog1.ShowDialog () == DialogResult.OK) {  			Directory.CreateDirectory ("Utilits/Temp");  			try {  				this.Cursor = Cursors.WaitCursor;  				File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\system.img"' true);  				this.Cursor = Cursors.Default;  			}  			finally {  				openFileDialog1.Filter = "Boot Image File |*boot*.img";  				if (openFileDialog1.ShowDialog () == DialogResult.OK) {  					this.Cursor = Cursors.WaitCursor;  					File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\boot.img"' true);  					this.Cursor = Cursors.Default;  				}  			}  			if (File.Exists ("Utilits/FTtoZIP" + "_" + tmp + ".zip") == false)  				File.WriteAllBytes ("Utilits/FTtoZIP" + "_" + tmp + ".zip"' MFAT.Properties.Resources.rom);  			if (Directory.Exists ("Utilits/Temp"))  				using (ZipFile zip = ZipFile.Read ("Utilits/FTtoZIP" + "_" + tmp + ".zip")) {  					this.Cursor = Cursors.WaitCursor;  					zip.UpdateDirectory ("Utilits/Temp");  					zip.Save ("Utilits/FTtoZIP" + "_" + tmp + ".zip");  					Directory.Delete ("Utilits/Temp"' true);  					this.Cursor = Cursors.Default;  				}  			else  				return;  			SoundPlay ();  		}  		else  			return;  	}  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	try {  		Process win = new Process ();  		win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  		if (Directory.Exists ("Utilits\\Temp") == true) {  			Directory.Delete ("Utilits\\Temp"' true);  		}  		Directory.CreateDirectory ("Utilits\\Temp");  		win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"Utilits\\Temp\\system\"";  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		win.StartInfo.ErrorDialog = false;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	finally {  		openFileDialog1.Filter = "Boot Image File |*boot*.img";  		if (openFileDialog1.ShowDialog () == DialogResult.OK) {  			File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\boot.img"' true);  		}  	}  	{  		Message M = new Message ("META-INF"' null' null' next' null' null' null' 1' 0);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.groupBox7.Visible = true;  		M.radioButton1.Text = mz;  		M.radioButton2.Text = mf;  		M.ShowDialog ();  		if (M.radioButton1.Checked == true) {  			if (openFileDialog2.ShowDialog () == DialogResult.OK) {  				string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  				StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  				BatFile0.WriteLine ("@echo off");  				BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  				BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\" META-INF -r -y");  				BatFile0.Close ();  				Process wing = new Process ();  				wing.StartInfo.CreateNoWindow = true;  				wing.StartInfo.ErrorDialog = false;  				wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				wing.StartInfo.FileName = @"Bin\trace.bat";  				this.Cursor = Cursors.WaitCursor;  				wing.Start ();  				wing.WaitForExit ();  				this.Cursor = Cursors.Default;  				if (File.Exists (@"Bin\trace.bat"))  					File.Delete (@"Bin\trace.bat");  			}  			else  				return;  			if (Directory.Exists ("Utilits\\Temp") == true) {  				Directory.Delete ("Utilits\\Temp"' true);  			}  		}  		else {  			folderBrowserDialog1.Description = choosem;  			if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  				CopyDirectory (folderBrowserDialog1.SelectedPath' "Utilits/Temp/META-INF");  				this.Cursor = Cursors.WaitCursor;  			}  			else  				return;  		}  		if (Directory.Exists ("Utilits/Temp")) {  			string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  			StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  			BatFile0.WriteLine ("@echo off");  			BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  			BatFile0.WriteLine ("7z.exe a " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\FTtoZIP" + "_" + tmp + ".zip" + "\" \"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\\*");  			BatFile0.Close ();  			Process wing = new Process ();  			wing.StartInfo.CreateNoWindow = true;  			wing.StartInfo.ErrorDialog = false;  			wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			wing.StartInfo.FileName = @"Bin\trace.bat";  			wing.Start ();  			wing.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		else  			return;  		if (Directory.Exists ("Utilits\\Temp") == true) {  			Directory.Delete ("Utilits\\Temp"' true);  		}  		SoundPlay ();  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	try {  		Process win = new Process ();  		win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  		if (Directory.Exists ("Utilits\\Temp") == true) {  			Directory.Delete ("Utilits\\Temp"' true);  		}  		Directory.CreateDirectory ("Utilits\\Temp");  		win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"Utilits\\Temp\\system\"";  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		win.StartInfo.ErrorDialog = false;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	finally {  		openFileDialog1.Filter = "Boot Image File |*boot*.img";  		if (openFileDialog1.ShowDialog () == DialogResult.OK) {  			File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\boot.img"' true);  		}  	}  	{  		Message M = new Message ("META-INF"' null' null' next' null' null' null' 1' 0);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.groupBox7.Visible = true;  		M.radioButton1.Text = mz;  		M.radioButton2.Text = mf;  		M.ShowDialog ();  		if (M.radioButton1.Checked == true) {  			if (openFileDialog2.ShowDialog () == DialogResult.OK) {  				string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  				StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  				BatFile0.WriteLine ("@echo off");  				BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  				BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\" META-INF -r -y");  				BatFile0.Close ();  				Process wing = new Process ();  				wing.StartInfo.CreateNoWindow = true;  				wing.StartInfo.ErrorDialog = false;  				wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				wing.StartInfo.FileName = @"Bin\trace.bat";  				this.Cursor = Cursors.WaitCursor;  				wing.Start ();  				wing.WaitForExit ();  				this.Cursor = Cursors.Default;  				if (File.Exists (@"Bin\trace.bat"))  					File.Delete (@"Bin\trace.bat");  			}  			else  				return;  			if (Directory.Exists ("Utilits\\Temp") == true) {  				Directory.Delete ("Utilits\\Temp"' true);  			}  		}  		else {  			folderBrowserDialog1.Description = choosem;  			if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  				CopyDirectory (folderBrowserDialog1.SelectedPath' "Utilits/Temp/META-INF");  				this.Cursor = Cursors.WaitCursor;  			}  			else  				return;  		}  		if (Directory.Exists ("Utilits/Temp")) {  			string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  			StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  			BatFile0.WriteLine ("@echo off");  			BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  			BatFile0.WriteLine ("7z.exe a " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\FTtoZIP" + "_" + tmp + ".zip" + "\" \"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\\*");  			BatFile0.Close ();  			Process wing = new Process ();  			wing.StartInfo.CreateNoWindow = true;  			wing.StartInfo.ErrorDialog = false;  			wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			wing.StartInfo.FileName = @"Bin\trace.bat";  			wing.Start ();  			wing.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		else  			return;  		if (Directory.Exists ("Utilits\\Temp") == true) {  			Directory.Delete ("Utilits\\Temp"' true);  		}  		SoundPlay ();  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	try {  		Process win = new Process ();  		win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  		if (Directory.Exists ("Utilits\\Temp") == true) {  			Directory.Delete ("Utilits\\Temp"' true);  		}  		Directory.CreateDirectory ("Utilits\\Temp");  		win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"Utilits\\Temp\\system\"";  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		win.StartInfo.ErrorDialog = false;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	finally {  		openFileDialog1.Filter = "Boot Image File |*boot*.img";  		if (openFileDialog1.ShowDialog () == DialogResult.OK) {  			File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\boot.img"' true);  		}  	}  	{  		Message M = new Message ("META-INF"' null' null' next' null' null' null' 1' 0);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.groupBox7.Visible = true;  		M.radioButton1.Text = mz;  		M.radioButton2.Text = mf;  		M.ShowDialog ();  		if (M.radioButton1.Checked == true) {  			if (openFileDialog2.ShowDialog () == DialogResult.OK) {  				string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  				StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  				BatFile0.WriteLine ("@echo off");  				BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  				BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\" META-INF -r -y");  				BatFile0.Close ();  				Process wing = new Process ();  				wing.StartInfo.CreateNoWindow = true;  				wing.StartInfo.ErrorDialog = false;  				wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				wing.StartInfo.FileName = @"Bin\trace.bat";  				this.Cursor = Cursors.WaitCursor;  				wing.Start ();  				wing.WaitForExit ();  				this.Cursor = Cursors.Default;  				if (File.Exists (@"Bin\trace.bat"))  					File.Delete (@"Bin\trace.bat");  			}  			else  				return;  			if (Directory.Exists ("Utilits\\Temp") == true) {  				Directory.Delete ("Utilits\\Temp"' true);  			}  		}  		else {  			folderBrowserDialog1.Description = choosem;  			if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  				CopyDirectory (folderBrowserDialog1.SelectedPath' "Utilits/Temp/META-INF");  				this.Cursor = Cursors.WaitCursor;  			}  			else  				return;  		}  		if (Directory.Exists ("Utilits/Temp")) {  			string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  			StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  			BatFile0.WriteLine ("@echo off");  			BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  			BatFile0.WriteLine ("7z.exe a " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\FTtoZIP" + "_" + tmp + ".zip" + "\" \"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\\*");  			BatFile0.Close ();  			Process wing = new Process ();  			wing.StartInfo.CreateNoWindow = true;  			wing.StartInfo.ErrorDialog = false;  			wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			wing.StartInfo.FileName = @"Bin\trace.bat";  			wing.Start ();  			wing.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		else  			return;  		if (Directory.Exists ("Utilits\\Temp") == true) {  			Directory.Delete ("Utilits\\Temp"' true);  		}  		SoundPlay ();  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	try {  		Process win = new Process ();  		win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  		if (Directory.Exists ("Utilits\\Temp") == true) {  			Directory.Delete ("Utilits\\Temp"' true);  		}  		Directory.CreateDirectory ("Utilits\\Temp");  		win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"Utilits\\Temp\\system\"";  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		win.StartInfo.ErrorDialog = false;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	finally {  		openFileDialog1.Filter = "Boot Image File |*boot*.img";  		if (openFileDialog1.ShowDialog () == DialogResult.OK) {  			File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\boot.img"' true);  		}  	}  	{  		Message M = new Message ("META-INF"' null' null' next' null' null' null' 1' 0);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.groupBox7.Visible = true;  		M.radioButton1.Text = mz;  		M.radioButton2.Text = mf;  		M.ShowDialog ();  		if (M.radioButton1.Checked == true) {  			if (openFileDialog2.ShowDialog () == DialogResult.OK) {  				string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  				StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  				BatFile0.WriteLine ("@echo off");  				BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  				BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\" META-INF -r -y");  				BatFile0.Close ();  				Process wing = new Process ();  				wing.StartInfo.CreateNoWindow = true;  				wing.StartInfo.ErrorDialog = false;  				wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				wing.StartInfo.FileName = @"Bin\trace.bat";  				this.Cursor = Cursors.WaitCursor;  				wing.Start ();  				wing.WaitForExit ();  				this.Cursor = Cursors.Default;  				if (File.Exists (@"Bin\trace.bat"))  					File.Delete (@"Bin\trace.bat");  			}  			else  				return;  			if (Directory.Exists ("Utilits\\Temp") == true) {  				Directory.Delete ("Utilits\\Temp"' true);  			}  		}  		else {  			folderBrowserDialog1.Description = choosem;  			if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  				CopyDirectory (folderBrowserDialog1.SelectedPath' "Utilits/Temp/META-INF");  				this.Cursor = Cursors.WaitCursor;  			}  			else  				return;  		}  		if (Directory.Exists ("Utilits/Temp")) {  			string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  			StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  			BatFile0.WriteLine ("@echo off");  			BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  			BatFile0.WriteLine ("7z.exe a " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\FTtoZIP" + "_" + tmp + ".zip" + "\" \"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\\*");  			BatFile0.Close ();  			Process wing = new Process ();  			wing.StartInfo.CreateNoWindow = true;  			wing.StartInfo.ErrorDialog = false;  			wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			wing.StartInfo.FileName = @"Bin\trace.bat";  			wing.Start ();  			wing.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		else  			return;  		if (Directory.Exists ("Utilits\\Temp") == true) {  			Directory.Delete ("Utilits\\Temp"' true);  		}  		SoundPlay ();  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	try {  		Process win = new Process ();  		win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  		if (Directory.Exists ("Utilits\\Temp") == true) {  			Directory.Delete ("Utilits\\Temp"' true);  		}  		Directory.CreateDirectory ("Utilits\\Temp");  		win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"Utilits\\Temp\\system\"";  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		win.StartInfo.ErrorDialog = false;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	finally {  		openFileDialog1.Filter = "Boot Image File |*boot*.img";  		if (openFileDialog1.ShowDialog () == DialogResult.OK) {  			File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\boot.img"' true);  		}  	}  	{  		Message M = new Message ("META-INF"' null' null' next' null' null' null' 1' 0);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.groupBox7.Visible = true;  		M.radioButton1.Text = mz;  		M.radioButton2.Text = mf;  		M.ShowDialog ();  		if (M.radioButton1.Checked == true) {  			if (openFileDialog2.ShowDialog () == DialogResult.OK) {  				string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  				StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  				BatFile0.WriteLine ("@echo off");  				BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  				BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\" META-INF -r -y");  				BatFile0.Close ();  				Process wing = new Process ();  				wing.StartInfo.CreateNoWindow = true;  				wing.StartInfo.ErrorDialog = false;  				wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				wing.StartInfo.FileName = @"Bin\trace.bat";  				this.Cursor = Cursors.WaitCursor;  				wing.Start ();  				wing.WaitForExit ();  				this.Cursor = Cursors.Default;  				if (File.Exists (@"Bin\trace.bat"))  					File.Delete (@"Bin\trace.bat");  			}  			else  				return;  			if (Directory.Exists ("Utilits\\Temp") == true) {  				Directory.Delete ("Utilits\\Temp"' true);  			}  		}  		else {  			folderBrowserDialog1.Description = choosem;  			if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  				CopyDirectory (folderBrowserDialog1.SelectedPath' "Utilits/Temp/META-INF");  				this.Cursor = Cursors.WaitCursor;  			}  			else  				return;  		}  		if (Directory.Exists ("Utilits/Temp")) {  			string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  			StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  			BatFile0.WriteLine ("@echo off");  			BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  			BatFile0.WriteLine ("7z.exe a " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\FTtoZIP" + "_" + tmp + ".zip" + "\" \"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\\*");  			BatFile0.Close ();  			Process wing = new Process ();  			wing.StartInfo.CreateNoWindow = true;  			wing.StartInfo.ErrorDialog = false;  			wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			wing.StartInfo.FileName = @"Bin\trace.bat";  			wing.Start ();  			wing.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		else  			return;  		if (Directory.Exists ("Utilits\\Temp") == true) {  			Directory.Delete ("Utilits\\Temp"' true);  		}  		SoundPlay ();  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: if (openFileDialog1.ShowDialog () == DialogResult.OK) {  	try {  		Process win = new Process ();  		win.StartInfo.FileName = Directory.GetCurrentDirectory () + "//Bin//Ext4Extractor.exe";  		if (Directory.Exists ("Utilits\\Temp") == true) {  			Directory.Delete ("Utilits\\Temp"' true);  		}  		Directory.CreateDirectory ("Utilits\\Temp");  		win.StartInfo.Arguments = "\"" + openFileDialog1.FileName + "\"" + " \"Utilits\\Temp\\system\"";  		win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		win.StartInfo.ErrorDialog = false;  		this.Cursor = Cursors.WaitCursor;  		win.Start ();  		win.WaitForExit ();  		this.Cursor = Cursors.Default;  	}  	finally {  		openFileDialog1.Filter = "Boot Image File |*boot*.img";  		if (openFileDialog1.ShowDialog () == DialogResult.OK) {  			File.Copy (openFileDialog1.FileName' "Utilits\\Temp\\boot.img"' true);  		}  	}  	{  		Message M = new Message ("META-INF"' null' null' next' null' null' null' 1' 0);  		M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  		M.groupBox7.Visible = true;  		M.radioButton1.Text = mz;  		M.radioButton2.Text = mf;  		M.ShowDialog ();  		if (M.radioButton1.Checked == true) {  			if (openFileDialog2.ShowDialog () == DialogResult.OK) {  				string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  				StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  				BatFile0.WriteLine ("@echo off");  				BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  				BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\" META-INF -r -y");  				BatFile0.Close ();  				Process wing = new Process ();  				wing.StartInfo.CreateNoWindow = true;  				wing.StartInfo.ErrorDialog = false;  				wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  				wing.StartInfo.FileName = @"Bin\trace.bat";  				this.Cursor = Cursors.WaitCursor;  				wing.Start ();  				wing.WaitForExit ();  				this.Cursor = Cursors.Default;  				if (File.Exists (@"Bin\trace.bat"))  					File.Delete (@"Bin\trace.bat");  			}  			else  				return;  			if (Directory.Exists ("Utilits\\Temp") == true) {  				Directory.Delete ("Utilits\\Temp"' true);  			}  		}  		else {  			folderBrowserDialog1.Description = choosem;  			if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  				CopyDirectory (folderBrowserDialog1.SelectedPath' "Utilits/Temp/META-INF");  				this.Cursor = Cursors.WaitCursor;  			}  			else  				return;  		}  		if (Directory.Exists ("Utilits/Temp")) {  			string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  			StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  			BatFile0.WriteLine ("@echo off");  			BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  			BatFile0.WriteLine ("7z.exe a " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\FTtoZIP" + "_" + tmp + ".zip" + "\" \"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\\*");  			BatFile0.Close ();  			Process wing = new Process ();  			wing.StartInfo.CreateNoWindow = true;  			wing.StartInfo.ErrorDialog = false;  			wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			wing.StartInfo.FileName = @"Bin\trace.bat";  			wing.Start ();  			wing.WaitForExit ();  			this.Cursor = Cursors.Default;  			if (File.Exists (@"Bin\trace.bat"))  				File.Delete (@"Bin\trace.bat");  		}  		else  			return;  		if (Directory.Exists ("Utilits\\Temp") == true) {  			Directory.Delete ("Utilits\\Temp"' true);  		}  		SoundPlay ();  	}  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: M.SetDesktopLocation (this.Location.X + (this.Width / 2) - (M.Width / 2)' this.Location.Y + (this.Height / 2) - (M.Height / 2));  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: if (M.radioButton1.Checked == true) {  	if (openFileDialog2.ShowDialog () == DialogResult.OK) {  		string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  		StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  		BatFile0.WriteLine ("@echo off");  		BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  		BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\" META-INF -r -y");  		BatFile0.Close ();  		Process wing = new Process ();  		wing.StartInfo.CreateNoWindow = true;  		wing.StartInfo.ErrorDialog = false;  		wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  		wing.StartInfo.FileName = @"Bin\trace.bat";  		this.Cursor = Cursors.WaitCursor;  		wing.Start ();  		wing.WaitForExit ();  		this.Cursor = Cursors.Default;  		if (File.Exists (@"Bin\trace.bat"))  			File.Delete (@"Bin\trace.bat");  	}  	else  		return;  	if (Directory.Exists ("Utilits\\Temp") == true) {  		Directory.Delete ("Utilits\\Temp"' true);  	}  }  else {  	folderBrowserDialog1.Description = choosem;  	if (folderBrowserDialog1.ShowDialog () == DialogResult.OK) {  		CopyDirectory (folderBrowserDialog1.SelectedPath' "Utilits/Temp/META-INF");  		this.Cursor = Cursors.WaitCursor;  	}  	else  		return;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: if (openFileDialog2.ShowDialog () == DialogResult.OK) {  	string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  	StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  	BatFile0.WriteLine ("@echo off");  	BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  	BatFile0.WriteLine ("7z.exe x " + "\"" + openFileDialog2.FileName.ToString () + "\" -o\"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\" META-INF -r -y");  	BatFile0.Close ();  	Process wing = new Process ();  	wing.StartInfo.CreateNoWindow = true;  	wing.StartInfo.ErrorDialog = false;  	wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	wing.StartInfo.FileName = @"Bin\trace.bat";  	this.Cursor = Cursors.WaitCursor;  	wing.Start ();  	wing.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (File.Exists (@"Bin\trace.bat"))  		File.Delete (@"Bin\trace.bat");  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button32_Click,The following statement contains a magic number: if (Directory.Exists ("Utilits/Temp")) {  	string Patch0 = Directory.GetCurrentDirectory () + @"\Bin\trace.bat";  	StreamWriter BatFile0 = new StreamWriter (Patch0' false' Encoding.GetEncoding (866));  	BatFile0.WriteLine ("@echo off");  	BatFile0.WriteLine ("cd /d " + Directory.GetCurrentDirectory () + @"\Bin");  	BatFile0.WriteLine ("7z.exe a " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\FTtoZIP" + "_" + tmp + ".zip" + "\" \"" + Directory.GetCurrentDirectory () + "\\Utilits\\Temp\\*");  	BatFile0.Close ();  	Process wing = new Process ();  	wing.StartInfo.CreateNoWindow = true;  	wing.StartInfo.ErrorDialog = false;  	wing.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  	wing.StartInfo.FileName = @"Bin\trace.bat";  	wing.Start ();  	wing.WaitForExit ();  	this.Cursor = Cursors.Default;  	if (File.Exists (@"Bin\trace.bat"))  		File.Delete (@"Bin\trace.bat");  }  else  	return;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,checkBox6_CheckedChanged,The following statement contains a magic number: if (checkBox6.Checked == true) {  	groupBox3.Visible = false;  	groupBox4.Top = 144;  	groupBox5.Top = 298;  }  else {  	groupBox3.Visible = true;  	groupBox4.Top = 275;  	groupBox5.Top = 402;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,checkBox6_CheckedChanged,The following statement contains a magic number: if (checkBox6.Checked == true) {  	groupBox3.Visible = false;  	groupBox4.Top = 144;  	groupBox5.Top = 298;  }  else {  	groupBox3.Visible = true;  	groupBox4.Top = 275;  	groupBox5.Top = 402;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,checkBox6_CheckedChanged,The following statement contains a magic number: if (checkBox6.Checked == true) {  	groupBox3.Visible = false;  	groupBox4.Top = 144;  	groupBox5.Top = 298;  }  else {  	groupBox3.Visible = true;  	groupBox4.Top = 275;  	groupBox5.Top = 402;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,checkBox6_CheckedChanged,The following statement contains a magic number: if (checkBox6.Checked == true) {  	groupBox3.Visible = false;  	groupBox4.Top = 144;  	groupBox5.Top = 298;  }  else {  	groupBox3.Visible = true;  	groupBox4.Top = 275;  	groupBox5.Top = 402;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,checkBox6_CheckedChanged,The following statement contains a magic number: groupBox4.Top = 144;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,checkBox6_CheckedChanged,The following statement contains a magic number: groupBox5.Top = 298;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,checkBox6_CheckedChanged,The following statement contains a magic number: groupBox4.Top = 275;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,checkBox6_CheckedChanged,The following statement contains a magic number: groupBox5.Top = 402;  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,comboBox3_SelectedIndexChanged,The following statement contains a magic number: if (n == 11) {  	textBox1.Enabled = false;  }  else {  	textBox1.Enabled = true;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,comboBox4_SelectedIndexChanged,The following statement contains a magic number: if (comboBox4.SelectedIndex == 0 || comboBox4.SelectedIndex == 2) {  	checkBox3.Enabled = true;  	checkBox3.Checked = true;  }  else {  	checkBox3.Enabled = false;  	checkBox3.Checked = false;  }  
Magic Number,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,comboBox5_SelectedIndexChanged,The following statement contains a magic number: if (comboBox5.SelectedIndex == 0 || comboBox5.SelectedIndex == 2)  	checkBox4.Enabled = true;  else  	checkBox4.Enabled = false;  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,OnPaintBackground,The following statement contains a magic number: foreach (TabPage tab in this.TabPages) {  	Rectangle tabRect = GetTabRect (this.TabPages.IndexOf (tab));  	using (StringFormat sf = new StringFormat (StringFormatFlags.NoWrap)) {  		sf.Alignment = StringAlignment.Center;  		sf.LineAlignment = StringAlignment.Center;  		SizeF textSize = pevent.Graphics.MeasureString (tab.Text' this.Font);  		RectangleF rc = new RectangleF (tabRect.Left + ((tabRect.Width / 2) - (textSize.Width / 2))' tabRect.Top + tabRect.Height / 2 - textSize.Height / 2' textSize.Width' textSize.Height);  		rc.Inflate (4' 5);  		GraphicsPath path = new GraphicsPath ();  		path.AddRectangle (rc);  		using (PathGradientBrush brush = new PathGradientBrush (path)) {  			brush.CenterColor = Color.FromArgb (192' tab == this.SelectedTab ? Color.Red : Color.Black);  			brush.SurroundColors = new Color[] {  				Color.Black  			};  			pevent.Graphics.FillRectangle (brush' rc);  		}  		var tc = new SolidBrush (Color.FromArgb (tab.ForeColor.A' tab.ForeColor.R' tab.ForeColor.G' tab.ForeColor.B));  		pevent.Graphics.DrawString (tab.Text' this.Font' tc' rc' sf);  	}  }  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,OnPaintBackground,The following statement contains a magic number: foreach (TabPage tab in this.TabPages) {  	Rectangle tabRect = GetTabRect (this.TabPages.IndexOf (tab));  	using (StringFormat sf = new StringFormat (StringFormatFlags.NoWrap)) {  		sf.Alignment = StringAlignment.Center;  		sf.LineAlignment = StringAlignment.Center;  		SizeF textSize = pevent.Graphics.MeasureString (tab.Text' this.Font);  		RectangleF rc = new RectangleF (tabRect.Left + ((tabRect.Width / 2) - (textSize.Width / 2))' tabRect.Top + tabRect.Height / 2 - textSize.Height / 2' textSize.Width' textSize.Height);  		rc.Inflate (4' 5);  		GraphicsPath path = new GraphicsPath ();  		path.AddRectangle (rc);  		using (PathGradientBrush brush = new PathGradientBrush (path)) {  			brush.CenterColor = Color.FromArgb (192' tab == this.SelectedTab ? Color.Red : Color.Black);  			brush.SurroundColors = new Color[] {  				Color.Black  			};  			pevent.Graphics.FillRectangle (brush' rc);  		}  		var tc = new SolidBrush (Color.FromArgb (tab.ForeColor.A' tab.ForeColor.R' tab.ForeColor.G' tab.ForeColor.B));  		pevent.Graphics.DrawString (tab.Text' this.Font' tc' rc' sf);  	}  }  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,OnPaintBackground,The following statement contains a magic number: foreach (TabPage tab in this.TabPages) {  	Rectangle tabRect = GetTabRect (this.TabPages.IndexOf (tab));  	using (StringFormat sf = new StringFormat (StringFormatFlags.NoWrap)) {  		sf.Alignment = StringAlignment.Center;  		sf.LineAlignment = StringAlignment.Center;  		SizeF textSize = pevent.Graphics.MeasureString (tab.Text' this.Font);  		RectangleF rc = new RectangleF (tabRect.Left + ((tabRect.Width / 2) - (textSize.Width / 2))' tabRect.Top + tabRect.Height / 2 - textSize.Height / 2' textSize.Width' textSize.Height);  		rc.Inflate (4' 5);  		GraphicsPath path = new GraphicsPath ();  		path.AddRectangle (rc);  		using (PathGradientBrush brush = new PathGradientBrush (path)) {  			brush.CenterColor = Color.FromArgb (192' tab == this.SelectedTab ? Color.Red : Color.Black);  			brush.SurroundColors = new Color[] {  				Color.Black  			};  			pevent.Graphics.FillRectangle (brush' rc);  		}  		var tc = new SolidBrush (Color.FromArgb (tab.ForeColor.A' tab.ForeColor.R' tab.ForeColor.G' tab.ForeColor.B));  		pevent.Graphics.DrawString (tab.Text' this.Font' tc' rc' sf);  	}  }  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,OnPaintBackground,The following statement contains a magic number: foreach (TabPage tab in this.TabPages) {  	Rectangle tabRect = GetTabRect (this.TabPages.IndexOf (tab));  	using (StringFormat sf = new StringFormat (StringFormatFlags.NoWrap)) {  		sf.Alignment = StringAlignment.Center;  		sf.LineAlignment = StringAlignment.Center;  		SizeF textSize = pevent.Graphics.MeasureString (tab.Text' this.Font);  		RectangleF rc = new RectangleF (tabRect.Left + ((tabRect.Width / 2) - (textSize.Width / 2))' tabRect.Top + tabRect.Height / 2 - textSize.Height / 2' textSize.Width' textSize.Height);  		rc.Inflate (4' 5);  		GraphicsPath path = new GraphicsPath ();  		path.AddRectangle (rc);  		using (PathGradientBrush brush = new PathGradientBrush (path)) {  			brush.CenterColor = Color.FromArgb (192' tab == this.SelectedTab ? Color.Red : Color.Black);  			brush.SurroundColors = new Color[] {  				Color.Black  			};  			pevent.Graphics.FillRectangle (brush' rc);  		}  		var tc = new SolidBrush (Color.FromArgb (tab.ForeColor.A' tab.ForeColor.R' tab.ForeColor.G' tab.ForeColor.B));  		pevent.Graphics.DrawString (tab.Text' this.Font' tc' rc' sf);  	}  }  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,OnPaintBackground,The following statement contains a magic number: foreach (TabPage tab in this.TabPages) {  	Rectangle tabRect = GetTabRect (this.TabPages.IndexOf (tab));  	using (StringFormat sf = new StringFormat (StringFormatFlags.NoWrap)) {  		sf.Alignment = StringAlignment.Center;  		sf.LineAlignment = StringAlignment.Center;  		SizeF textSize = pevent.Graphics.MeasureString (tab.Text' this.Font);  		RectangleF rc = new RectangleF (tabRect.Left + ((tabRect.Width / 2) - (textSize.Width / 2))' tabRect.Top + tabRect.Height / 2 - textSize.Height / 2' textSize.Width' textSize.Height);  		rc.Inflate (4' 5);  		GraphicsPath path = new GraphicsPath ();  		path.AddRectangle (rc);  		using (PathGradientBrush brush = new PathGradientBrush (path)) {  			brush.CenterColor = Color.FromArgb (192' tab == this.SelectedTab ? Color.Red : Color.Black);  			brush.SurroundColors = new Color[] {  				Color.Black  			};  			pevent.Graphics.FillRectangle (brush' rc);  		}  		var tc = new SolidBrush (Color.FromArgb (tab.ForeColor.A' tab.ForeColor.R' tab.ForeColor.G' tab.ForeColor.B));  		pevent.Graphics.DrawString (tab.Text' this.Font' tc' rc' sf);  	}  }  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,OnPaintBackground,The following statement contains a magic number: foreach (TabPage tab in this.TabPages) {  	Rectangle tabRect = GetTabRect (this.TabPages.IndexOf (tab));  	using (StringFormat sf = new StringFormat (StringFormatFlags.NoWrap)) {  		sf.Alignment = StringAlignment.Center;  		sf.LineAlignment = StringAlignment.Center;  		SizeF textSize = pevent.Graphics.MeasureString (tab.Text' this.Font);  		RectangleF rc = new RectangleF (tabRect.Left + ((tabRect.Width / 2) - (textSize.Width / 2))' tabRect.Top + tabRect.Height / 2 - textSize.Height / 2' textSize.Width' textSize.Height);  		rc.Inflate (4' 5);  		GraphicsPath path = new GraphicsPath ();  		path.AddRectangle (rc);  		using (PathGradientBrush brush = new PathGradientBrush (path)) {  			brush.CenterColor = Color.FromArgb (192' tab == this.SelectedTab ? Color.Red : Color.Black);  			brush.SurroundColors = new Color[] {  				Color.Black  			};  			pevent.Graphics.FillRectangle (brush' rc);  		}  		var tc = new SolidBrush (Color.FromArgb (tab.ForeColor.A' tab.ForeColor.R' tab.ForeColor.G' tab.ForeColor.B));  		pevent.Graphics.DrawString (tab.Text' this.Font' tc' rc' sf);  	}  }  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,OnPaintBackground,The following statement contains a magic number: foreach (TabPage tab in this.TabPages) {  	Rectangle tabRect = GetTabRect (this.TabPages.IndexOf (tab));  	using (StringFormat sf = new StringFormat (StringFormatFlags.NoWrap)) {  		sf.Alignment = StringAlignment.Center;  		sf.LineAlignment = StringAlignment.Center;  		SizeF textSize = pevent.Graphics.MeasureString (tab.Text' this.Font);  		RectangleF rc = new RectangleF (tabRect.Left + ((tabRect.Width / 2) - (textSize.Width / 2))' tabRect.Top + tabRect.Height / 2 - textSize.Height / 2' textSize.Width' textSize.Height);  		rc.Inflate (4' 5);  		GraphicsPath path = new GraphicsPath ();  		path.AddRectangle (rc);  		using (PathGradientBrush brush = new PathGradientBrush (path)) {  			brush.CenterColor = Color.FromArgb (192' tab == this.SelectedTab ? Color.Red : Color.Black);  			brush.SurroundColors = new Color[] {  				Color.Black  			};  			pevent.Graphics.FillRectangle (brush' rc);  		}  		var tc = new SolidBrush (Color.FromArgb (tab.ForeColor.A' tab.ForeColor.R' tab.ForeColor.G' tab.ForeColor.B));  		pevent.Graphics.DrawString (tab.Text' this.Font' tc' rc' sf);  	}  }  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,OnPaintBackground,The following statement contains a magic number: using (StringFormat sf = new StringFormat (StringFormatFlags.NoWrap)) {  	sf.Alignment = StringAlignment.Center;  	sf.LineAlignment = StringAlignment.Center;  	SizeF textSize = pevent.Graphics.MeasureString (tab.Text' this.Font);  	RectangleF rc = new RectangleF (tabRect.Left + ((tabRect.Width / 2) - (textSize.Width / 2))' tabRect.Top + tabRect.Height / 2 - textSize.Height / 2' textSize.Width' textSize.Height);  	rc.Inflate (4' 5);  	GraphicsPath path = new GraphicsPath ();  	path.AddRectangle (rc);  	using (PathGradientBrush brush = new PathGradientBrush (path)) {  		brush.CenterColor = Color.FromArgb (192' tab == this.SelectedTab ? Color.Red : Color.Black);  		brush.SurroundColors = new Color[] {  			Color.Black  		};  		pevent.Graphics.FillRectangle (brush' rc);  	}  	var tc = new SolidBrush (Color.FromArgb (tab.ForeColor.A' tab.ForeColor.R' tab.ForeColor.G' tab.ForeColor.B));  	pevent.Graphics.DrawString (tab.Text' this.Font' tc' rc' sf);  }  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,OnPaintBackground,The following statement contains a magic number: using (StringFormat sf = new StringFormat (StringFormatFlags.NoWrap)) {  	sf.Alignment = StringAlignment.Center;  	sf.LineAlignment = StringAlignment.Center;  	SizeF textSize = pevent.Graphics.MeasureString (tab.Text' this.Font);  	RectangleF rc = new RectangleF (tabRect.Left + ((tabRect.Width / 2) - (textSize.Width / 2))' tabRect.Top + tabRect.Height / 2 - textSize.Height / 2' textSize.Width' textSize.Height);  	rc.Inflate (4' 5);  	GraphicsPath path = new GraphicsPath ();  	path.AddRectangle (rc);  	using (PathGradientBrush brush = new PathGradientBrush (path)) {  		brush.CenterColor = Color.FromArgb (192' tab == this.SelectedTab ? Color.Red : Color.Black);  		brush.SurroundColors = new Color[] {  			Color.Black  		};  		pevent.Graphics.FillRectangle (brush' rc);  	}  	var tc = new SolidBrush (Color.FromArgb (tab.ForeColor.A' tab.ForeColor.R' tab.ForeColor.G' tab.ForeColor.B));  	pevent.Graphics.DrawString (tab.Text' this.Font' tc' rc' sf);  }  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,OnPaintBackground,The following statement contains a magic number: using (StringFormat sf = new StringFormat (StringFormatFlags.NoWrap)) {  	sf.Alignment = StringAlignment.Center;  	sf.LineAlignment = StringAlignment.Center;  	SizeF textSize = pevent.Graphics.MeasureString (tab.Text' this.Font);  	RectangleF rc = new RectangleF (tabRect.Left + ((tabRect.Width / 2) - (textSize.Width / 2))' tabRect.Top + tabRect.Height / 2 - textSize.Height / 2' textSize.Width' textSize.Height);  	rc.Inflate (4' 5);  	GraphicsPath path = new GraphicsPath ();  	path.AddRectangle (rc);  	using (PathGradientBrush brush = new PathGradientBrush (path)) {  		brush.CenterColor = Color.FromArgb (192' tab == this.SelectedTab ? Color.Red : Color.Black);  		brush.SurroundColors = new Color[] {  			Color.Black  		};  		pevent.Graphics.FillRectangle (brush' rc);  	}  	var tc = new SolidBrush (Color.FromArgb (tab.ForeColor.A' tab.ForeColor.R' tab.ForeColor.G' tab.ForeColor.B));  	pevent.Graphics.DrawString (tab.Text' this.Font' tc' rc' sf);  }  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,OnPaintBackground,The following statement contains a magic number: using (StringFormat sf = new StringFormat (StringFormatFlags.NoWrap)) {  	sf.Alignment = StringAlignment.Center;  	sf.LineAlignment = StringAlignment.Center;  	SizeF textSize = pevent.Graphics.MeasureString (tab.Text' this.Font);  	RectangleF rc = new RectangleF (tabRect.Left + ((tabRect.Width / 2) - (textSize.Width / 2))' tabRect.Top + tabRect.Height / 2 - textSize.Height / 2' textSize.Width' textSize.Height);  	rc.Inflate (4' 5);  	GraphicsPath path = new GraphicsPath ();  	path.AddRectangle (rc);  	using (PathGradientBrush brush = new PathGradientBrush (path)) {  		brush.CenterColor = Color.FromArgb (192' tab == this.SelectedTab ? Color.Red : Color.Black);  		brush.SurroundColors = new Color[] {  			Color.Black  		};  		pevent.Graphics.FillRectangle (brush' rc);  	}  	var tc = new SolidBrush (Color.FromArgb (tab.ForeColor.A' tab.ForeColor.R' tab.ForeColor.G' tab.ForeColor.B));  	pevent.Graphics.DrawString (tab.Text' this.Font' tc' rc' sf);  }  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,OnPaintBackground,The following statement contains a magic number: using (StringFormat sf = new StringFormat (StringFormatFlags.NoWrap)) {  	sf.Alignment = StringAlignment.Center;  	sf.LineAlignment = StringAlignment.Center;  	SizeF textSize = pevent.Graphics.MeasureString (tab.Text' this.Font);  	RectangleF rc = new RectangleF (tabRect.Left + ((tabRect.Width / 2) - (textSize.Width / 2))' tabRect.Top + tabRect.Height / 2 - textSize.Height / 2' textSize.Width' textSize.Height);  	rc.Inflate (4' 5);  	GraphicsPath path = new GraphicsPath ();  	path.AddRectangle (rc);  	using (PathGradientBrush brush = new PathGradientBrush (path)) {  		brush.CenterColor = Color.FromArgb (192' tab == this.SelectedTab ? Color.Red : Color.Black);  		brush.SurroundColors = new Color[] {  			Color.Black  		};  		pevent.Graphics.FillRectangle (brush' rc);  	}  	var tc = new SolidBrush (Color.FromArgb (tab.ForeColor.A' tab.ForeColor.R' tab.ForeColor.G' tab.ForeColor.B));  	pevent.Graphics.DrawString (tab.Text' this.Font' tc' rc' sf);  }  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,OnPaintBackground,The following statement contains a magic number: using (StringFormat sf = new StringFormat (StringFormatFlags.NoWrap)) {  	sf.Alignment = StringAlignment.Center;  	sf.LineAlignment = StringAlignment.Center;  	SizeF textSize = pevent.Graphics.MeasureString (tab.Text' this.Font);  	RectangleF rc = new RectangleF (tabRect.Left + ((tabRect.Width / 2) - (textSize.Width / 2))' tabRect.Top + tabRect.Height / 2 - textSize.Height / 2' textSize.Width' textSize.Height);  	rc.Inflate (4' 5);  	GraphicsPath path = new GraphicsPath ();  	path.AddRectangle (rc);  	using (PathGradientBrush brush = new PathGradientBrush (path)) {  		brush.CenterColor = Color.FromArgb (192' tab == this.SelectedTab ? Color.Red : Color.Black);  		brush.SurroundColors = new Color[] {  			Color.Black  		};  		pevent.Graphics.FillRectangle (brush' rc);  	}  	var tc = new SolidBrush (Color.FromArgb (tab.ForeColor.A' tab.ForeColor.R' tab.ForeColor.G' tab.ForeColor.B));  	pevent.Graphics.DrawString (tab.Text' this.Font' tc' rc' sf);  }  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,OnPaintBackground,The following statement contains a magic number: using (StringFormat sf = new StringFormat (StringFormatFlags.NoWrap)) {  	sf.Alignment = StringAlignment.Center;  	sf.LineAlignment = StringAlignment.Center;  	SizeF textSize = pevent.Graphics.MeasureString (tab.Text' this.Font);  	RectangleF rc = new RectangleF (tabRect.Left + ((tabRect.Width / 2) - (textSize.Width / 2))' tabRect.Top + tabRect.Height / 2 - textSize.Height / 2' textSize.Width' textSize.Height);  	rc.Inflate (4' 5);  	GraphicsPath path = new GraphicsPath ();  	path.AddRectangle (rc);  	using (PathGradientBrush brush = new PathGradientBrush (path)) {  		brush.CenterColor = Color.FromArgb (192' tab == this.SelectedTab ? Color.Red : Color.Black);  		brush.SurroundColors = new Color[] {  			Color.Black  		};  		pevent.Graphics.FillRectangle (brush' rc);  	}  	var tc = new SolidBrush (Color.FromArgb (tab.ForeColor.A' tab.ForeColor.R' tab.ForeColor.G' tab.ForeColor.B));  	pevent.Graphics.DrawString (tab.Text' this.Font' tc' rc' sf);  }  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,OnPaintBackground,The following statement contains a magic number: rc.Inflate (4' 5);  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,OnPaintBackground,The following statement contains a magic number: rc.Inflate (4' 5);  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,OnPaintBackground,The following statement contains a magic number: using (PathGradientBrush brush = new PathGradientBrush (path)) {  	brush.CenterColor = Color.FromArgb (192' tab == this.SelectedTab ? Color.Red : Color.Black);  	brush.SurroundColors = new Color[] {  		Color.Black  	};  	pevent.Graphics.FillRectangle (brush' rc);  }  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,OnPaintBackground,The following statement contains a magic number: brush.CenterColor = Color.FromArgb (192' tab == this.SelectedTab ? Color.Red : Color.Black);  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,RoundRegion,The following statement contains a magic number: path.AddArc (r.Left' r.Top' radius' radius' 180' 90);  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,RoundRegion,The following statement contains a magic number: path.AddArc (r.Left' r.Top' radius' radius' 180' 90);  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,RoundRegion,The following statement contains a magic number: path.AddArc (r.Right - radius' r.Top' radius' radius' 270' 90);  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,RoundRegion,The following statement contains a magic number: path.AddArc (r.Right - radius' r.Top' radius' radius' 270' 90);  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,RoundRegion,The following statement contains a magic number: path.AddArc (r.Right - radius' r.Bottom - radius' radius' radius' 0' 90);  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,RoundRegion,The following statement contains a magic number: path.AddArc (r.Left' r.Bottom - radius' radius' radius' 90' 90);  
Magic Number,MFAT,GlassTabControl,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\GlassTabControl.cs,RoundRegion,The following statement contains a magic number: path.AddArc (r.Left' r.Bottom - radius' radius' radius' 90' 90);  
Duplicate Code,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,button22_Click,The method contains a code clone-set at the following line numbers (starting from the method definition): ((40' 66)' (72' 98))
Duplicate Code,MTFAT,Form1,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Main.cs,checkedListBox1_DragDrop,The method contains a code clone-set at the following line numbers (starting from the method definition): ((16' 41)' (46' 71))
Missing Default,MTFAT,Editor,C:\repos\back37_MTK-FirmwareAdapter-Tool\MTK FirmwareAdapter Tool\Editor.cs,Form4_FormClosing,The following switch statement is missing a default case: switch (l) {  case 3: {  	using (StreamWriter sw = new StreamWriter (f' false' Encoding.ASCII)) {  		if (f.EndsWith ("\\prop") == true) {  			sw.Write (richTextBox1.Text);  			sw.Close ();  			string Patch = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  			StreamWriter BatFile = new StreamWriter (Patch' false' Encoding.GetEncoding (1250));  			BatFile.WriteLine ("@echo off");  			BatFile.WriteLine ("echo Starting ADB...");  			BatFile.WriteLine ("cd /d \"" + Directory.GetCurrentDirectory () + "\\Bin");  			BatFile.WriteLine ("adb start-server");  			BatFile.WriteLine ("echo connect phone...");  			BatFile.WriteLine ("rem adb wait-for-device");  			BatFile.WriteLine ("adb shell su mount -o rw'remount /system");  			BatFile.WriteLine ("echo Gett files from phone...");  			BatFile.WriteLine ("adb remount");  			BatFile.WriteLine ("adb push " + "\"" + Directory.GetCurrentDirectory () + "\\Utilits\\prop\"" + " /system/build.prop");  			BatFile.WriteLine ("adb -d shell su -c \"chmod 0644 system/build.prop\"");  			BatFile.Close ();  			Process win = new Process ();  			win.StartInfo.ErrorDialog = true;  			win.StartInfo.FileName = Directory.GetCurrentDirectory () + "\\Bin\\trace.bat";  			win.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			this.Cursor = Cursors.WaitCursor;  			win.Start ();  			win.WaitForExit ();  			this.Cursor = Cursors.Default;  			Process winс = new Process ();  			winс.StartInfo.FileName = "taskkill";  			winс.StartInfo.Arguments = "/F /IM adb.exe";  			winс.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;  			this.Cursor = Cursors.WaitCursor;  			winс.Start ();  			winс.WaitForExit ();  			this.Cursor = Cursors.Default;  			File.Delete ("Bin\\trace.bat");  			File.Delete ("Utilits\\prop");  		}  		else {  			if (f.EndsWith (".fat")) {  				sw.Write (richTextBox1.Text);  				sw.Close ();  				Form1 main = this.Owner as Form1;  				StreamReader SR = new StreamReader ("WorkDIR\\Temp.fat");  				main.checkedListBox1.Items.Clear ();  				while (SR.EndOfStream == false) {  					main.checkedListBox1.Items.Add (SR.ReadLine ());  				}  				SR.Close ();  				File.Delete ("WorkDIR\\Temp.fat");  			}  			else {  				sw.Write (richTextBox1.Text);  				sw.Close ();  			}  		}  	}  	break;  }  case 1: {  	e.Cancel = true;  	break;  }  case 2: {  	return;  }  }  
