Implementation smell,Namespace,Class,File,Method,Description
Complex Method,blowery.Web.HttpCompress,HttpModule,C:\repos\blowery_HttpCompress\HttpCompress\HttpModule.cs,CompressContent,Cyclomatic complexity of the method is 8
Complex Method,blowery.Web.HttpCompress,HttpModule,C:\repos\blowery_HttpCompress\HttpCompress\HttpModule.cs,GetFilterForScheme,Cyclomatic complexity of the method is 13
Long Statement,blowery.Web.HttpCompress,HttpModule,C:\repos\blowery_HttpCompress\HttpCompress\HttpModule.cs,GetFilterForScheme,The length of the statement  "      if(isAcceptableDeflate && (prefs.PreferredAlgorithm == Algorithms.Deflate || prefs.PreferredAlgorithm == Algorithms.Default)) " is 125.
Empty Catch Block,blowery.Web.HttpCompress,HttpModule,C:\repos\blowery_HttpCompress\HttpCompress\HttpModule.cs,GetQuality,The method has an empty catch block.
Empty Catch Block,blowery.Web.HttpCompress,Settings,C:\repos\blowery_HttpCompress\HttpCompress\Settings.cs,AddSettings,The method has an empty catch block.
Empty Catch Block,blowery.Web.HttpCompress,Settings,C:\repos\blowery_HttpCompress\HttpCompress\Settings.cs,AddSettings,The method has an empty catch block.
Magic Number,blowery.Web.HttpCompress,HttpModule,C:\repos\blowery_HttpCompress\HttpCompress\HttpModule.cs,GetQuality,The following statement contains a magic number: if (qParam >= 0) {          float val = 0.0f;          try {            val = float.Parse(acceptEncodingValue.Substring(qParam+2' acceptEncodingValue.Length - (qParam+2)));          } catch(FormatException) {                      }          return val;        } else           return 1;
Magic Number,blowery.Web.HttpCompress,HttpModule,C:\repos\blowery_HttpCompress\HttpCompress\HttpModule.cs,GetQuality,The following statement contains a magic number: if (qParam >= 0) {          float val = 0.0f;          try {            val = float.Parse(acceptEncodingValue.Substring(qParam+2' acceptEncodingValue.Length - (qParam+2)));          } catch(FormatException) {                      }          return val;        } else           return 1;
Missing Default,blowery.Web.HttpCompress,Settings,C:\repos\blowery_HttpCompress\HttpCompress\Settings.cs,ParseExcludedTypes,The following switch statement is missing a default case: switch(node.ChildNodes[i].LocalName) {            case "add":              if(node.ChildNodes[i].Attributes["type"] != null)                _excludedTypes.Add(node.ChildNodes[i].Attributes["type"].Value.ToLower());              break;            case "delete":              if(node.ChildNodes[i].Attributes["type"] != null)                _excludedTypes.Remove(node.ChildNodes[i].Attributes["type"].Value.ToLower());              break;          }
Missing Default,blowery.Web.HttpCompress,Settings,C:\repos\blowery_HttpCompress\HttpCompress\Settings.cs,ParseExcludedPaths,The following switch statement is missing a default case: switch(node.ChildNodes[i].LocalName) {            case "add":              if(node.ChildNodes[i].Attributes["path"] != null)                 _excludedPaths.Add(node.ChildNodes[i].Attributes["path"].Value.ToLower());              break;            case "delete":              if(node.ChildNodes[i].Attributes["path"] != null)                _excludedPaths.Remove(node.ChildNodes[i].Attributes["path"].Value.ToLower());              break;          }
