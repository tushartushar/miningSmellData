Implementation smell,Namespace,Class,File,Method,Description
Long Method,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CompleteTaskOrchestrationWorkItemAsync,The method has 150 lines of code.
Complex Method,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CompleteTaskOrchestrationWorkItemAsync,Cyclomatic complexity of the method is 11
Complex Method,DurableTask.ServiceBus.Tracking,AzureTableClient,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableClient.cs,GetSecondaryFilterExpression,Cyclomatic complexity of the method is 11
Long Parameter List,DurableTask.ServiceBus.Common.Abstraction,MessageSender,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Common\Abstraction\ServiceBusAbstraction.cs,MessageSender,The method has 5 parameters. Parameters: endpoint' entityPath' tokenProvider' transportType' retryPolicy
Long Parameter List,DurableTask.ServiceBus.Common.Abstraction,MessageReceiver,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Common\Abstraction\ServiceBusAbstraction.cs,MessageReceiver,The method has 5 parameters. Parameters: connectionString' entityPath' receiveMode' retryPolicy' prefetchCount
Long Parameter List,DurableTask.ServiceBus.Common.Abstraction,MessageReceiver,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Common\Abstraction\ServiceBusAbstraction.cs,MessageReceiver,The method has 7 parameters. Parameters: endpoint' entityPath' tokenProvider' transportType' receiveMode' retryPolicy' prefetchCount
Long Parameter List,DurableTask.ServiceBus.Common.Abstraction,MessageReceiver,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Common\Abstraction\ServiceBusAbstraction.cs,MessageReceiver,The method has 5 parameters. Parameters: serviceBusConnection' entityPath' receiveMode' retryPolicy' prefetchCount
Long Parameter List,DurableTask.ServiceBus.Common.Abstraction,QueueClient,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Common\Abstraction\ServiceBusAbstraction.cs,QueueClient,The method has 6 parameters. Parameters: endpoint' entityPath' tokenProvider' transportType' receiveMode' retryPolicy
Long Parameter List,DurableTask.ServiceBus.Common.Abstraction,ServiceBusUtils,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Common\ServiceBusUtils.cs,GetBrokeredMessageFromObjectAsync,The method has 7 parameters. Parameters: serializableObject' compressionSettings' messageSettings' instance' messageType' orchestrationServiceBlobStore' messageFireTime
Long Parameter List,DurableTask.ServiceBus.Common.Abstraction,ServiceBusUtils,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Common\ServiceBusUtils.cs,GenerateBrokeredMessageWithBlobKeyPropertyAsync,The method has 6 parameters. Parameters: stream' orchestrationServiceBlobStore' instance' messageSettings' messageFireTime' compressionType
Long Parameter List,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,ServiceBusOrchestrationService,The method has 5 parameters. Parameters: connectionString' hubName' instanceStore' blobStore' settings
Long Parameter List,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CompleteTaskOrchestrationWorkItemAsync,The method has 7 parameters. Parameters: workItem' newOrchestrationRuntimeState' outboundMessages' orchestratorMessages' timerMessages' continuedAsNewMessage' orchestrationState
Long Parameter List,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,SafeCreateQueueAsync,The method has 6 parameters. Parameters: managementClient' path' requiresSessions' requiresDuplicateDetection' maxDeliveryCount' maxSizeInMegabytes
Long Parameter List,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,SafeDeleteAndCreateQueueAsync,The method has 6 parameters. Parameters: managementClient' path' requiresSessions' requiresDuplicateDetection' maxDeliveryCount' maxSizeInMegabytes
Long Parameter List,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CreateQueueAsync,The method has 6 parameters. Parameters: managementClient' path' requiresSessions' requiresDuplicateDetection' maxDeliveryCount' maxSizeInMegabytes
Long Parameter List,DurableTask.ServiceBus.Tracking,AzureTableOrchestrationHistoryEventEntity,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableOrchestrationHistoryEventEntity.cs,AzureTableOrchestrationHistoryEventEntity,The method has 5 parameters. Parameters: instanceId' executionId' sequenceNumber' taskTimeStamp' historyEvent
Long Identifier,DurableTask.ServiceBus,ServiceBusConstants,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusConstants.cs,,The length of the parameter MaxStringLengthForAzureTableColumn is 34.
Long Identifier,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,TrySetSessionStateAsync,The length of the parameter isSessionSizeThresholdExceeded is 30.
Long Identifier,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,,The length of the parameter SessionStreamWarningSizeInBytes is 31.
Long Identifier,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,,The length of the parameter StatusPollingIntervalInSeconds is 30.
Long Identifier,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,,The length of the parameter DuplicateDetectionWindowInHours is 31.
Long Identifier,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,,The length of the parameter orchestrationBatchMessageSender is 31.
Long Identifier,DurableTask.ServiceBus.Settings,ServiceBusMessageSettings,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Settings\ServiceBusMessageSettings.cs,ServiceBusMessageSettings,The length of the parameter messageOverflowThresholdInBytes is 31.
Long Identifier,DurableTask.ServiceBus.Settings,ServiceBusSessionSettings,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Settings\ServiceBusSessionSettings.cs,ServiceBusSessionSettings,The length of the parameter sessionOverflowThresholdInBytes is 31.
Long Identifier,DurableTask.ServiceBus.Tracking,AzureTableClient,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableClient.cs,,The length of the parameter JumpStartTableScanIntervalInDays is 32.
Long Identifier,DurableTask.ServiceBus.Tracking,AzureTableConstants,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableConstants.cs,,The length of the parameter InstanceHistoryTableNamePrefix is 30.
Long Identifier,DurableTask.ServiceBus.Tracking,AzureTableConstants,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableConstants.cs,,The length of the parameter InstanceStateCompleteDateRowPrefix is 34.
Long Identifier,DurableTask.ServiceBus.Tracking,AzureTableConstants,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableConstants.cs,,The length of the parameter PrimaryInstanceQueryExactTemplate is 33.
Long Identifier,DurableTask.ServiceBus.Tracking,AzureTableConstants,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableConstants.cs,,The length of the parameter PrimaryInstanceQueryRangeTemplate is 33.
Long Identifier,DurableTask.ServiceBus.Tracking,AzureTableConstants,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableConstants.cs,,The length of the parameter InstanceQuerySecondaryFilterTemplate is 36.
Long Identifier,DurableTask.ServiceBus.Tracking,AzureTableConstants,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableConstants.cs,,The length of the parameter InstanceQuerySecondaryFilterRangeTemplate is 41.
Long Identifier,DurableTask.ServiceBus.Tracking,AzureTableConstants,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableConstants.cs,,The length of the parameter InstanceQuerySecondaryFilterExactTemplate is 41.
Long Identifier,DurableTask.ServiceBus.Tracking,AzureTableConstants,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableConstants.cs,,The length of the parameter NameVersionQuerySecondaryFilterTemplate is 39.
Long Identifier,DurableTask.ServiceBus.Tracking,AzureTableConstants,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableConstants.cs,,The length of the parameter NameVersionQuerySecondaryFilterExactTemplate is 44.
Long Identifier,DurableTask.ServiceBus.Tracking,AzureTableConstants,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableConstants.cs,,The length of the parameter StatusQuerySecondaryFilterTemplate is 34.
Long Identifier,DurableTask.ServiceBus.Tracking,AzureTableConstants,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableConstants.cs,,The length of the parameter CreatedTimeRangeQuerySecondaryFilterTemplate is 44.
Long Identifier,DurableTask.ServiceBus.Tracking,AzureTableConstants,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableConstants.cs,,The length of the parameter CompletedTimeRangeQuerySecondaryFilterTemplate is 46.
Long Identifier,DurableTask.ServiceBus.Tracking,AzureTableConstants,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableConstants.cs,,The length of the parameter LastUpdatedTimeRangeQuerySecondaryFilterTemplate is 48.
Long Identifier,DurableTask.ServiceBus.Tracking,AzureTableInstanceStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableInstanceStore.cs,PurgeOrchestrationHistorySegmentAsync,The length of the parameter orchestrationStateEntitySegment is 31.
Long Identifier,DurableTask.ServiceBus.Tracking,AzureTableInstanceStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableInstanceStore.cs,,The length of the parameter MaxDisplayStringLengthForAzureTableColumn is 41.
Long Statement,DurableTask.ServiceBus.Common.Abstraction,TokenProvider,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Common\Abstraction\ServiceBusAbstraction.cs,CreateSharedAccessSignatureTokenProvider,The length of the statement  "            return Microsoft.Azure.ServiceBus.Primitives.TokenProvider.CreateSharedAccessSignatureTokenProvider(keyName' sharedAccessKey' tokenTimeToLive); " is 143.
Long Statement,DurableTask.ServiceBus.Common.Abstraction,BrokeredMessageExtensions,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Common\BrokeredMessageExtensions.cs,DeliveryLatency,The length of the statement  "            DateTime actualEnqueueTimeUtc = (!message.ScheduledEnqueueTimeUtc.IsSet()) ? message.SystemProperties.EnqueuedTimeUtc : message.ScheduledEnqueueTimeUtc; " is 152.
Long Statement,DurableTask.ServiceBus.Common.Abstraction,ServiceBusUtils,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Common\ServiceBusUtils.cs,GetBrokeredMessageFromObjectAsync,The length of the statement  "            return GetBrokeredMessageFromObjectAsync(serializableObject' compressionSettings' new ServiceBusMessageSettings()' null' null' null' DateTimeUtils.MinDateTime); " is 160.
Long Statement,DurableTask.ServiceBus.Common.Abstraction,ServiceBusUtils,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Common\ServiceBusUtils.cs,GetBrokeredMessageFromObjectAsync,The length of the statement  "                        brokeredMessage = GenerateBrokeredMessageWithCompressionTypeProperty(compressedStream' FrameworkConstants.CompressionTypeGzipPropertyValue); " is 140.
Long Statement,DurableTask.ServiceBus.Common.Abstraction,ServiceBusUtils,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Common\ServiceBusUtils.cs,GetBrokeredMessageFromObjectAsync,The length of the statement  "                        brokeredMessage = await GenerateBrokeredMessageWithBlobKeyPropertyAsync(compressedStream' orchestrationServiceBlobStore' instance' messageSettings' messageFireTime' FrameworkConstants.CompressionTypeGzipPropertyValue); " is 218.
Long Statement,DurableTask.ServiceBus.Common.Abstraction,ServiceBusUtils,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Common\ServiceBusUtils.cs,GetBrokeredMessageFromObjectAsync,The length of the statement  "                        brokeredMessage = GenerateBrokeredMessageWithCompressionTypeProperty(rawStream' FrameworkConstants.CompressionTypeNonePropertyValue); " is 133.
Long Statement,DurableTask.ServiceBus.Common.Abstraction,ServiceBusUtils,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Common\ServiceBusUtils.cs,GetBrokeredMessageFromObjectAsync,The length of the statement  "                        brokeredMessage = await GenerateBrokeredMessageWithBlobKeyPropertyAsync(rawStream' orchestrationServiceBlobStore' instance' messageSettings' messageFireTime' FrameworkConstants.CompressionTypeNonePropertyValue); " is 211.
Long Statement,DurableTask.ServiceBus.Common.Abstraction,ServiceBusUtils,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Common\ServiceBusUtils.cs,GenerateBrokeredMessageWithBlobKeyPropertyAsync,The length of the statement  "                    $"The serialized message size {stream.Length} is larger than the supported external storage blob size {messageSettings.MessageMaxSizeInBytes}."' " is 144.
Long Statement,DurableTask.ServiceBus.Common.Abstraction,ServiceBusUtils,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Common\ServiceBusUtils.cs,LoadMessageStreamAsync,The length of the statement  "                throw new ArgumentException($"Failed to load compressed message from external storage with key: {blobKey}. Please provide an implementation of IServiceBusMessageStore for external storage."' nameof(orchestrationServiceBlobStore)); " is 230.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,StartAsync,The length of the statement  "            this.orchestratorSender = new MessageSender(this.serviceBusConnection' this.orchestratorEntityName' this.workerEntityName); " is 123.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,StartAsync,The length of the statement  "            this.trackingSender = new MessageSender(this.serviceBusConnection' this.trackingEntityName' this.orchestratorEntityName); " is 121.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,StartAsync,The length of the statement  "            this.orchestratorQueueClient = new QueueClient(this.serviceBusConnection' this.orchestratorEntityName' ReceiveMode.PeekLock' RetryPolicy.Default); " is 146.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,StartAsync,The length of the statement  "            this.orchestratorSessionClient = new SessionClient(serviceBusConnection' this.orchestratorEntityName' ReceiveMode.PeekLock); " is 124.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,StartAsync,The length of the statement  "            await Task.Factory.StartNew(() => ServiceMonitorAsync(this.cancellationTokenSource.Token)' this.cancellationTokenSource.Token); " is 127.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,StopAsync,The length of the statement  "            TraceHelper.Trace(TraceEventType.Information' "ServiceBusOrchestrationService-StatsFinal"' "Final Service Stats: {0}"' this.ServiceStats.ToString()); " is 149.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CreateAsync,The length of the statement  "                SafeDeleteAndCreateQueueAsync(managementClient' this.orchestratorEntityName' true' true' this.Settings.MaxTaskOrchestrationDeliveryCount' this.Settings.MaxQueueSizeInMegabytes)' " is 177.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CreateAsync,The length of the statement  "                SafeDeleteAndCreateQueueAsync(managementClient' this.workerEntityName' false' false' this.Settings.MaxTaskActivityDeliveryCount' this.Settings.MaxQueueSizeInMegabytes) " is 167.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CreateAsync,The length of the statement  "                await SafeDeleteAndCreateQueueAsync(managementClient' this.trackingEntityName' true' false' this.Settings.MaxTrackingDeliveryCount' this.Settings.MaxQueueSizeInMegabytes); " is 171.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CreateIfNotExistsAsync,The length of the statement  "                SafeCreateQueueAsync(managementClient' this.orchestratorEntityName' true' true' this.Settings.MaxTaskOrchestrationDeliveryCount' this.Settings.MaxQueueSizeInMegabytes)' " is 168.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CreateIfNotExistsAsync,The length of the statement  "                SafeCreateQueueAsync(managementClient' this.workerEntityName' false' false' this.Settings.MaxTaskActivityDeliveryCount' this.Settings.MaxQueueSizeInMegabytes) " is 158.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CreateIfNotExistsAsync,The length of the statement  "                await SafeCreateQueueAsync(managementClient' this.trackingEntityName' true' false' this.Settings.MaxTrackingDeliveryCount' this.Settings.MaxQueueSizeInMegabytes); " is 162.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,HubExistsAsync,The length of the statement  "            IEnumerable<QueueDescription> queueDescriptions = (await managementClient.GetQueuesAsync()).Where(x => x.Path.StartsWith(this.hubName)).ToList(); " is 145.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,GetHubQueueMaxDeliveryCountsAsync,The length of the statement  "            result.Add("TaskOrchestration"' queues.Single(q => string.Equals(q.Path' this.orchestratorEntityName))?.MaxDeliveryCount ?? -1); " is 128.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,IsMaxMessageCountExceeded,The length of the statement  "                + ((this.InstanceStore != null) ? runtimeState.NewEvents.Count + 1 : 0) // one history message per new message + 1 for the orchestration " is 136.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,LockNextTaskOrchestrationWorkItemAsync,The length of the statement  "                    session.SessionId' "Receive Session Message Batch"' this.Settings.MaxRetries' this.Settings.IntervalBetweenRetriesSecs)).Cast<Message>().ToList(); " is 146.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,LockNextTaskOrchestrationWorkItemAsync,The length of the statement  "            ServiceBusUtils.CheckAndLogDeliveryCount(session.SessionId' newMessages' this.Settings.MaxTaskOrchestrationDeliveryCount); " is 122.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,LockNextTaskOrchestrationWorkItemAsync,The length of the statement  "                newMessages.Select(async message => await ServiceBusUtils.GetObjectFromBrokeredMessageAsync<TaskMessage>(message' this.BlobStore))); " is 132.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,LockNextTaskOrchestrationWorkItemAsync,The length of the statement  "            Dictionary<string' Message> lockTokens = newMessages.ToDictionary(m => m.SystemProperties.LockToken.ToString()' m => m); " is 120.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,LockNextTaskOrchestrationWorkItemAsync,The length of the statement  "                TraceHelper.Trace(TraceEventType.Error' "ServiceBusOrchestrationService-LockNextTaskOrchestrationWorkItem-DuplicateSessionId"' error); " is 134.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,LockNextTaskOrchestrationWorkItemAsync,The length of the statement  "                    TraceHelper.TraceException(TraceEventType.Error' "ServiceBusOrchestrationService-LockNextTaskOrchestrationWorkItem-ErrorUpdatingInstanceStore"' exception' error); " is 162.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,RenewTaskOrchestrationWorkItemLockAsync,The length of the statement  "            TraceHelper.TraceSession(TraceEventType.Information' "ServiceBusOrchestrationService-RenewTaskOrchestrationWorkItem"' workItem.InstanceId' "Renew lock on orchestration session"); " is 178.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CompleteTaskOrchestrationWorkItemAsync,The length of the statement  "                        e.Transaction.TransactionInformation.Status == TransactionStatus.Committed ? TraceEventType.Information : TraceEventType.Error' " is 127.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CompleteTaskOrchestrationWorkItemAsync,The length of the statement  "                        LogSentMessages(session' "Continue as new"' new List<MessageContainer> { new MessageContainer(continuedAsNewBrokeredMessage' null) }); " is 134.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CompleteTaskOrchestrationWorkItemAsync,The length of the statement  "                        string allIds = string.Join(" "' sessionState.LockTokens.Values.Select(m => $"[SEQ: {m.SystemProperties.SequenceNumber} LT: {m.SystemProperties.LockToken}]")); " is 159.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,AbandonTaskOrchestrationWorkItemAsync,The length of the statement  "            TraceHelper.TraceSession(TraceEventType.Error' "ServiceBusOrchestrationService-AbandonTaskOrchestrationWorkItem"' workItem.InstanceId' "Abandoning {0} messages due to work item abort"' sessionState.LockTokens.Keys.Count()); " is 223.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,AbandonTaskOrchestrationWorkItemAsync,The length of the statement  "                TraceHelper.TraceExceptionSession(TraceEventType.Warning' "ServiceBusOrchestrationService-AbandonTaskOrchestrationWorkItemError"' workItem.InstanceId' ex' "Error while aborting session"); " is 187.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,LockNextTaskActivityWorkItem,The length of the statement  "                GetFormattedLog($"New message to process: {receivedMessage.MessageId} [{receivedMessage.SystemProperties.SequenceNumber}]' latency: {receivedMessage.DeliveryLatency()}ms")); " is 173.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,LockNextTaskActivityWorkItem,The length of the statement  "            TaskMessage taskMessage = await ServiceBusUtils.GetObjectFromBrokeredMessageAsync<TaskMessage>(receivedMessage' this.BlobStore); " is 128.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CompleteTaskActivityWorkItemAsync,The length of the statement  "                        e.Transaction.TransactionInformation.Status == TransactionStatus.Committed ? TraceEventType.Information : TraceEventType.Error' " is 127.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CompleteTaskActivityWorkItemAsync,The length of the statement  "                        } - message sequence and lock token: [SEQ: {originalMessage.SystemProperties.SequenceNumber} LT: {originalMessage.SystemProperties.LockToken}]"); " is 145.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,AbandonTaskActivityWorkItemAsync,The length of the statement  "            TraceHelper.Trace(TraceEventType.Information' "ServiceBusOrchestrationService-AbandonTaskActivityWorkItem"'  $"Abandoning message {workItem?.Id}"); " is 147.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CreateTaskOrchestrationAsync,The length of the statement  "                // TODO: GetOrchestrationState is still flaky as we are fetching from 2 tables while messages are being deleted and added " is 121.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CreateTaskOrchestrationAsync,The length of the statement  "                // not thread safe in case multiple clients attempt to create an orchestration instance with the same id at the same time " is 121.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CreateTaskOrchestrationAsync,The length of the statement  "                OrchestrationState latestState = (await GetOrchestrationStateAsync(creationMessage.OrchestrationInstance.InstanceId' false)).FirstOrDefault(); " is 142.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CreateTaskOrchestrationAsync,The length of the statement  "                    throw new OrchestrationAlreadyExistsException($"An orchestration with id '{creationMessage.OrchestrationInstance.InstanceId}' already exists. It is in state {latestState.OrchestrationStatus}"); " is 193.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CreateTaskOrchestrationAsync,The length of the statement  "                TraceHelper.Trace(TraceEventType.Warning' "ServiceBusOrchestrationService-CreateTaskOrchestration-ServiceBusError"' $"Error while adding message to ServiceBus: {ex.ToString()}"); " is 178.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,GetBrokeredMessageAsync,The length of the statement  "                brokeredMessage.MessageId = $"{executionStartedEvent.OrchestrationInstance.InstanceId}_{executionStartedEvent.OrchestrationInstance.ExecutionId}"; " is 146.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,GetOrchestrationStateAsync,The length of the statement  "            IEnumerable<OrchestrationStateInstanceEntity> states = await this.InstanceStore.GetOrchestrationStateAsync(instanceId' allExecutions); " is 134.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,PurgeOrchestrationHistoryAsync,The length of the statement  "            TraceHelper.Trace(TraceEventType.Information' "ServiceBusOrchestrationService-PurgeOrchestrationHistory-Start"' $"Purging orchestration instances before: {thresholdDateTimeUtc}' Type: {timeRangeFilterType}"); " is 208.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,PurgeOrchestrationHistoryAsync,The length of the statement  "                int purgedEvents = await this.InstanceStore.PurgeOrchestrationHistoryEventsAsync(thresholdDateTimeUtc' timeRangeFilterType); " is 124.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,PurgeOrchestrationHistoryAsync,The length of the statement  "                TraceHelper.Trace(TraceEventType.Information' "ServiceBusOrchestrationService-HistoryPurged"' $"Purged {purgedEvents} orchestration histories"); " is 144.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,FetchTrackingWorkItemAsync,The length of the statement  "                    session.SessionId' "Receive Tracking Session Message Batch"' this.Settings.MaxRetries' this.Settings.IntervalBetweenRetriesSecs)).Cast<Message>().ToList(); " is 155.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,FetchTrackingWorkItemAsync,The length of the statement  "                GetFormattedLog($"{newMessages.Count} new tracking messages to process: {string.Join("'"' newMessages.Select(m => m.MessageId))}")); " is 132.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,FetchTrackingWorkItemAsync,The length of the statement  "                newMessages.Select(async message => await ServiceBusUtils.GetObjectFromBrokeredMessageAsync<TaskMessage>(message' this.BlobStore))); " is 132.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,FetchTrackingWorkItemAsync,The length of the statement  "            Dictionary<string' Message> lockTokens = newMessages.ToDictionary(m => m.SystemProperties.LockToken.ToString()' m => m); " is 120.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CreateTrackingMessagesAsync,The length of the statement  "            // This situation can happen due to corruption of service bus session state or if somehow first message of orchestration is not execution started " is 145.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,ProcessTrackingWorkItemAsync,The length of the statement  "                TraceEntities(TraceEventType.Critical' $"Failed to write history entity: {e}"' historyEntities' GetNormalizedWorkItemEvent); " is 124.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,GetNormalizedWorkItemEvent,The length of the statement  "                $"{message} - #{index} - Instance Id: {entity.InstanceId}' Execution Id: {entity.ExecutionId}' HistoryEvent Length: {historyEventLength}\n{serializedHistoryEvent}"); " is 165.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,GetSessionStateAsync,The length of the statement  "                return await RuntimeStateStreamConverter.RawStreamToRuntimeState(rawSessionStream' session.SessionId' orchestrationServiceBlobStore' DataConverter); " is 148.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,TrySetSessionStateAsync,The length of the statement  "            if (runtimeState.CompressedSize > SessionStreamWarningSizeInBytes && runtimeState.CompressedSize < this.Settings.SessionSettings.SessionOverflowThresholdInBytes) " is 161.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,TrySetSessionStateAsync,The length of the statement  "                    $"Size of session state ({runtimeState.CompressedSize}B) is nearing session size limit of {this.Settings.SessionSettings.SessionOverflowThresholdInBytes}B"); " is 157.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,TrySetSessionStateAsync,The length of the statement  "                string reason = $"Session state size of {runtimeState.CompressedSize} exceeded the termination threshold of {this.Settings.SessionSettings.SessionMaxSizeInBytes} bytes. More info: {exception.StackTrace}"; " is 204.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,TrySetSessionStateAsync,The length of the statement  "                TraceHelper.TraceSession(TraceEventType.Critical' "ServiceBusOrchestrationService-SessionSizeExceeded"' workItem.InstanceId' reason); " is 133.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,TrySetSessionStateAsync,The length of the statement  "                Message forcedTerminateMessage = await CreateForcedTerminateMessageAsync(runtimeState.OrchestrationInstance.InstanceId' reason); " is 128.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,ServiceMonitorAsync,The length of the statement  "                TraceHelper.Trace(TraceEventType.Information' "ServiceBusOrchestrationService-ServiceStats"' "Service Stats: {0}"' this.ServiceStats.ToString()); " is 145.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,ServiceMonitorAsync,The length of the statement  "                TraceHelper.Trace(TraceEventType.Information' "ServiceBusOrchestrationService-ServiceStats-Active"' "Active Session and Message Stats: Messages: {0}' Sessions: {1}"' this.orchestrationMessages.Count' this.orchestrationSessions.Count); " is 234.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,SafeCreateQueueAsync,The length of the statement  "                        await CreateQueueAsync(managementClient' path' requiresSessions' requiresDuplicateDetection' maxDeliveryCount' maxSizeInMegabytes); " is 131.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,SafeDeleteAndCreateQueueAsync,The length of the statement  "            await SafeCreateQueueAsync(managementClient' path' requiresSessions' requiresDuplicateDetection' maxDeliveryCount' maxSizeInMegabytes); " is 135.
Long Statement,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,CreateQueueAsync,The length of the statement  "                throw new ArgumentException($"The specified value {maxSizeInMegabytes} is invalid for the maximum queue size in megabytes.\r\nIt must be one of the following values:\r\n{string.Join(";"' ValidQueueSizes)}"' nameof(maxSizeInMegabytes)); " is 235.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableClient,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableClient.cs,QueryOrchestrationStatesAsync,The length of the statement  "            TableQuery<AzureTableOrchestrationStateEntity> query = CreateQueryInternal(stateQuery' -JumpStartTableScanIntervalInDays' false); " is 129.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableClient,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableClient.cs,GetSecondaryFilterExpression,The length of the statement  "                string startTime = XmlConvert.ToString(orchestrationStateTimeRangeFilter.StartTime' XmlDateTimeSerializationMode.RoundtripKind); " is 128.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableClient,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableClient.cs,GetSecondaryFilterExpression,The length of the statement  "                string endTime = XmlConvert.ToString(orchestrationStateTimeRangeFilter.EndTime' XmlDateTimeSerializationMode.RoundtripKind); " is 124.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableClient,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableClient.cs,GetSecondaryFilterExpression,The length of the statement  "                        throw new InvalidOperationException("Unsupported filter type: " + orchestrationStateTimeRangeFilter.FilterType.GetType()); " is 122.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableClient,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableClient.cs,WriteEntitiesAsync,The length of the statement  "            return await PerformBatchTableOperationAsync("Write Entities"' this.historyTable' entities' (bo' te) => bo.InsertOrReplace(te)); " is 128.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableClient,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableClient.cs,WriteJumpStartEntitiesAsync,The length of the statement  "            return await PerformBatchTableOperationAsync("Write Entities"' this.jumpStartTable' entities' (bo' te) => bo.InsertOrReplace(te)); " is 130.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableClient,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableClient.cs,DeleteJumpStartEntitiesAsync,The length of the statement  "                TraceHelper.Trace(TraceEventType.Information' "AzureTableClient-DeleteJumpStartEntities-NotFound"' "DeleteJumpStartEntitiesAsync not found exception: {0}"' e.Message); " is 167.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableInstanceStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableInstanceStore.cs,InitializeStoreAsync,The length of the statement  "            // Keep calls sequential' running in parallel can be flaky' in particular the storage emulator will fail 50%+ of the time " is 121.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableInstanceStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableInstanceStore.cs,DeleteStoreAsync,The length of the statement  "            // Keep calls sequential' running in parallel can be flaky' in particular the storage emulator will fail 50%+ of the time " is 121.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableInstanceStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableInstanceStore.cs,WriteEntitiesAsync,The length of the statement  "            return await Utils.ExecuteWithRetries(() => this.tableClient.WriteEntitiesAsync(entities.Select(HistoryEventToTableEntity))' " is 124.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableInstanceStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableInstanceStore.cs,DeleteEntitiesAsync,The length of the statement  "            return await Utils.ExecuteWithRetries(() => this.tableClient.DeleteEntitiesAsync(entities.Select(HistoryEventToTableEntity))' " is 125.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableInstanceStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableInstanceStore.cs,GetOrchestrationStateAsync,The length of the statement  "            query = allInstances ? query : query.AddStatusFilter(OrchestrationStatus.ContinuedAsNew' FilterComparisonType.NotEquals); " is 121.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableInstanceStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableInstanceStore.cs,GetOrchestrationStateAsync,The length of the statement  "            IEnumerable<AzureTableOrchestrationStateEntity> jumpStartEntities = await Utils.ExecuteWithRetries(() => this.tableClient.QueryJumpStartOrchestrationsAsync(query)' " is 163.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableInstanceStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableInstanceStore.cs,GetOrchestrationStateAsync,The length of the statement  "            IEnumerable<AzureTableOrchestrationStateEntity> stateEntities = await Utils.ExecuteWithRetries(() => this.tableClient.QueryOrchestrationStatesAsync(query)' " is 155.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableInstanceStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableInstanceStore.cs,GetOrchestrationStateAsync,The length of the statement  "            return new List<OrchestrationStateInstanceEntity> { TableStateToStateEvent(newStates.OrderBy(x => x.LastUpdatedTime).FirstOrDefault()) }; " is 137.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableInstanceStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableInstanceStore.cs,QueryOrchestrationStatesAsync,The length of the statement  "            IEnumerable<AzureTableOrchestrationStateEntity> jumpStartEntities = await this.tableClient.QueryJumpStartOrchestrationsAsync(stateQuery).ConfigureAwait(false); " is 159.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableInstanceStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableInstanceStore.cs,WriteJumpStartEntitiesAsync,The length of the statement  "            IEnumerable<AzureTableOrchestrationJumpStartEntity> jumpStartEntities = entities.Select(e => new AzureTableOrchestrationJumpStartEntity(e)); " is 140.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableInstanceStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableInstanceStore.cs,DeleteJumpStartEntitiesAsync,The length of the statement  "            IEnumerable<AzureTableOrchestrationJumpStartEntity> jumpStartEntities = entities.Select(e => new AzureTableOrchestrationJumpStartEntity(e)); " is 140.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableOrchestrationHistoryEventEntity,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableOrchestrationHistoryEventEntity.cs,WriteEntity,The length of the statement  "            // that we build will have to especially check for this event and flag the orchestration as unplayable if it sees this event " is 124.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableOrchestrationHistoryEventEntity,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableOrchestrationHistoryEventEntity.cs,ToString,The length of the statement  "            return $"Instance Id: {InstanceId} Execution Id: {ExecutionId} Seq: {SequenceNumber.ToString()} Time: {TaskTimeStamp} HistoryEvent: {HistoryEvent.EventType.ToString()}"; " is 169.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableOrchestrationStateEntity,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableOrchestrationStateEntity.cs,WriteEntity,The length of the statement  "            returnValues.Add("Input"' new EntityProperty(State.Input.Truncate(ServiceBusConstants.MaxStringLengthForAzureTableColumn))); " is 124.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableOrchestrationStateEntity,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableOrchestrationStateEntity.cs,WriteEntity,The length of the statement  "            returnValues.Add("Output"' new EntityProperty(State.Output.Truncate(ServiceBusConstants.MaxStringLengthForAzureTableColumn))); " is 126.
Long Statement,DurableTask.ServiceBus.Tracking,AzureTableOrchestrationStateEntity,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableOrchestrationStateEntity.cs,ToString,The length of the statement  "                "Instance Id: {0} Execution Id: {1} Name: {2} Version: {3} CreatedTime: {4} CompletedTime: {5} LastUpdated: {6} Status: {7} User Status: {8} Input: {9} Output: {10} Size: {11} CompressedSize: {12}"' " is 198.
Long Statement,DurableTask.ServiceBus.Tracking,BlobStorageClient,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\BlobStorageClient.cs,DeleteExpiredContainersAsync,The length of the statement  "            var tasks = containers.Where(container => BlobStorageClientHelper.IsContainerExpired(container.Name' thresholdDateTimeUtc)).ToList().Select(container => container.DeleteIfExistsAsync()); " is 186.
Long Statement,DurableTask.ServiceBus.Tracking,BlobStorageClientHelper,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\BlobStorageClientHelper.cs,BuildSessionBlobKey,The length of the statement  "            return $"{BuildContainerNameSuffix("session"' DateTimeUtils.MinDateTime)}{KeyDelimiter}{sessionId}{BlobNameDelimiter}{id}"; " is 123.
Long Statement,DurableTask.ServiceBus.Tracking,BlobStorageClientHelper,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\BlobStorageClientHelper.cs,ParseKey,The length of the statement  "                throw new ArgumentException($"Blob key {key} does not contain required 2 or more segments: containerNameSuffix|blobName."' nameof(key)); " is 136.
Long Statement,DurableTask.ServiceBus.Tracking,JumpStartManager,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\JumpStartManager.cs,JumpStartAsync,The length of the statement  "                    List<OrchestrationJumpStartInstanceEntity> entities = (await this.service.InstanceStore.GetJumpStartEntitiesAsync(1000)).ToList(); " is 130.
Long Statement,DurableTask.ServiceBus.Tracking,JumpStartManager,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\JumpStartManager.cs,JumpStartOrchestrationAsync,The length of the statement  "            OrchestrationStateInstanceEntity stateEntity = (await this.service.InstanceStore.GetEntitiesAsync(instance.InstanceId' instance.ExecutionId))?.FirstOrDefault(); " is 160.
Magic Number,DurableTask.ServiceBus.Common.Abstraction,ServiceBusUtils,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Common\ServiceBusUtils.cs,CheckAndLogDeliveryCount,The following statement contains a magic number: message.SystemProperties.DeliveryCount >= maxDeliveryCount - 2
Magic Number,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,GetHubQueueMaxDeliveryCountsAsync,The following statement contains a magic number: var result = new Dictionary<string' int>(3);
Magic Number,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,WaitForOrchestrationAsync,The following statement contains a magic number: await Task.Delay(StatusPollingIntervalInSeconds * 1000' cancellationToken);
Magic Number,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,SafeDeleteQueueAsync,The following statement contains a magic number: await Utils.ExecuteWithRetries(async () =>                  {                      try                      {                          await managementClient.DeleteQueueAsync(path);                      }                      catch (MessagingEntityAlreadyExistsException)                      {                          await Task.FromResult(0);                      }                      catch (MessagingEntityNotFoundException)                      {                          await Task.FromResult(0);                      }                  }' null' "SafeDeleteQueueAsync"' 3' 5);
Magic Number,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,SafeDeleteQueueAsync,The following statement contains a magic number: await Utils.ExecuteWithRetries(async () =>                  {                      try                      {                          await managementClient.DeleteQueueAsync(path);                      }                      catch (MessagingEntityAlreadyExistsException)                      {                          await Task.FromResult(0);                      }                      catch (MessagingEntityNotFoundException)                      {                          await Task.FromResult(0);                      }                  }' null' "SafeDeleteQueueAsync"' 3' 5);
Magic Number,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,SafeCreateQueueAsync,The following statement contains a magic number: await Utils.ExecuteWithRetries(async () =>                  {                      try                      {                          await CreateQueueAsync(managementClient' path' requiresSessions' requiresDuplicateDetection' maxDeliveryCount' maxSizeInMegabytes);                      }                      catch (MessagingEntityAlreadyExistsException)                      {                          await Task.FromResult(0);                      }                  }' null' "SafeCreateQueueAsync"' 3' 5);
Magic Number,DurableTask.ServiceBus,ServiceBusOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\ServiceBusOrchestrationService.cs,SafeCreateQueueAsync,The following statement contains a magic number: await Utils.ExecuteWithRetries(async () =>                  {                      try                      {                          await CreateQueueAsync(managementClient' path' requiresSessions' requiresDuplicateDetection' maxDeliveryCount' maxSizeInMegabytes);                      }                      catch (MessagingEntityAlreadyExistsException)                      {                          await Task.FromResult(0);                      }                  }' null' "SafeCreateQueueAsync"' 3' 5);
Magic Number,DurableTask.ServiceBus.Tracking,AzureTableClient,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableClient.cs,PerformBatchTableOperationAsync,The following statement contains a magic number: ++operationCounter == 100
Magic Number,DurableTask.ServiceBus.Tracking,AzureTableClient,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableClient.cs,ExecuteBatchOperationAsync,The following statement contains a magic number: result.HttpStatusCode < 200 || result.HttpStatusCode > 299
Magic Number,DurableTask.ServiceBus.Tracking,AzureTableClient,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableClient.cs,ExecuteBatchOperationAsync,The following statement contains a magic number: result.HttpStatusCode < 200 || result.HttpStatusCode > 299
Magic Number,DurableTask.ServiceBus.Tracking,AzureTableInstanceStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\AzureTableInstanceStore.cs,PurgeOrchestrationHistoryEventsAsync,The following statement contains a magic number: TableQuerySegment<AzureTableOrchestrationStateEntity> resultSegment =                      (await this.tableClient.QueryOrchestrationStatesSegmentedAsync(                          new OrchestrationStateQuery()                              .AddTimeRangeFilter(DateTimeUtils.MinDateTime' thresholdDateTimeUtc' timeRangeFilterType)'                          continuationToken' 100)                          .ConfigureAwait(false));
Magic Number,DurableTask.ServiceBus.Tracking,BlobStorageClientHelper,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\BlobStorageClientHelper.cs,ParseKey,The following statement contains a magic number: string[] segments = key.Split(new[] { KeyDelimiter }' 2);
Magic Number,DurableTask.ServiceBus.Tracking,BlobStorageClientHelper,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\BlobStorageClientHelper.cs,ParseKey,The following statement contains a magic number: segments.Length < 2
Magic Number,DurableTask.ServiceBus.Tracking,BlobStorageClientHelper,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\BlobStorageClientHelper.cs,IsContainerExpired,The following statement contains a magic number: segments.Length != 4
Magic Number,DurableTask.ServiceBus.Tracking,JumpStartManager,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.ServiceBus\Tracking\JumpStartManager.cs,JumpStartAsync,The following statement contains a magic number: List<OrchestrationJumpStartInstanceEntity> entities = (await this.service.InstanceStore.GetJumpStartEntitiesAsync(1000)).ToList();
