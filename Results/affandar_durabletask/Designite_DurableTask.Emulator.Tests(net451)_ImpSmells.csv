Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockOrchestrationTest,The length of the statement  "            OrchestrationState result = await client.WaitForOrchestrationAsync(id' TimeSpan.FromSeconds(30)' new CancellationToken()); " is 122.
Long Statement,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRecreateOrchestrationTest,The length of the statement  "            OrchestrationState result = await client.WaitForOrchestrationAsync(id' TimeSpan.FromSeconds(30)' new CancellationToken()); " is 122.
Long Statement,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRecreateOrchestrationTest,The length of the statement  "            await Assert.ThrowsExceptionAsync<OrchestrationAlreadyExistsException>(() => client.CreateOrchestrationInstanceAsync(typeof(SimplestGreetingsOrchestration)' id.InstanceId' null)); " is 179.
Long Statement,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRecreateOrchestrationTest,The length of the statement  "            await Assert.ThrowsExceptionAsync<OrchestrationAlreadyExistsException>(() => client.CreateOrchestrationInstanceAsync(typeof(SimplestGreetingsOrchestration)' id.InstanceId' null' new[] { OrchestrationStatus.Completed })); " is 220.
Long Statement,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRecreateOrchestrationTest,The length of the statement  "            OrchestrationInstance id2 = await client.CreateOrchestrationInstanceAsync(typeof(SimplestGreetingsOrchestration)' id.InstanceId' null' new OrchestrationStatus[] { }); " is 166.
Long Statement,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockTimerTest,The length of the statement  "            OrchestrationState result = await client.WaitForOrchestrationAsync(id' TimeSpan.FromSeconds(40)' new CancellationToken()); " is 122.
Long Statement,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRepeatTimerTest,The length of the statement  "            OrchestrationInstance id = await client.CreateOrchestrationInstanceAsync(typeof(GreetingsRepeatWaitOrchestration)' "1"); " is 120.
Long Statement,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRepeatTimerTest,The length of the statement  "            OrchestrationState result = await client.WaitForOrchestrationAsync(id' TimeSpan.FromSeconds(40)' new CancellationToken()); " is 122.
Long Statement,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockGenerationTest,The length of the statement  "            OrchestrationState result1 = await client.WaitForOrchestrationAsync(id' TimeSpan.FromSeconds(10)' CancellationToken.None); " is 122.
Long Statement,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockGenerationTest,The length of the statement  "            OrchestrationState result2 = await client.WaitForOrchestrationAsync(masterId' TimeSpan.FromSeconds(20)' CancellationToken.None); " is 128.
Long Statement,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRaiseEventTest,The length of the statement  "            OrchestrationState result = await client.WaitForOrchestrationAsync(new OrchestrationInstance { InstanceId = id.InstanceId }' " is 124.
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockOrchestrationTest,The following statement contains a magic number: OrchestrationState result = await client.WaitForOrchestrationAsync(id' TimeSpan.FromSeconds(30)' new CancellationToken());
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRecreateOrchestrationTest,The following statement contains a magic number: OrchestrationState result = await client.WaitForOrchestrationAsync(id' TimeSpan.FromSeconds(30)' new CancellationToken());
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRecreateOrchestrationTest,The following statement contains a magic number: result = await client.WaitForOrchestrationAsync(id2' TimeSpan.FromSeconds(30)' new CancellationToken());
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockTimerTest,The following statement contains a magic number: OrchestrationState result = await client.WaitForOrchestrationAsync(id' TimeSpan.FromSeconds(40)' new CancellationToken());
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockTimerTest,The following statement contains a magic number: Assert.IsTrue(sw.Elapsed.Seconds > 6);
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRepeatTimerTest,The following statement contains a magic number: OrchestrationState result = await client.WaitForOrchestrationAsync(id' TimeSpan.FromSeconds(40)' new CancellationToken());
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRepeatTimerTest,The following statement contains a magic number: Assert.IsTrue(sw.Elapsed.Seconds > 3);
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockGenerationTest,The following statement contains a magic number: OrchestrationInstance id = await client.CreateOrchestrationInstanceAsync(typeof(GenerationBasicOrchestration)' 4);
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockGenerationTest,The following statement contains a magic number: OrchestrationState result1 = await client.WaitForOrchestrationAsync(id' TimeSpan.FromSeconds(10)' CancellationToken.None);
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockGenerationTest,The following statement contains a magic number: OrchestrationState result2 = await client.WaitForOrchestrationAsync(masterId' TimeSpan.FromSeconds(20)' CancellationToken.None);
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockGenerationTest,The following statement contains a magic number: Assert.AreEqual(4' GenerationBasicOrchestration.Result' "Orchestration Result is wrong!!!");
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockSubOrchestrationTest,The following statement contains a magic number: OrchestrationState result = await client.WaitForOrchestrationAsync(id'                  TimeSpan.FromSeconds(40)' CancellationToken.None);
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockSubOrchestrationTest,The following statement contains a magic number: result = await client.WaitForOrchestrationAsync(id' TimeSpan.FromSeconds(40)' CancellationToken.None);
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRaiseEventTest,The following statement contains a magic number: OrchestrationInstance id = await client.CreateOrchestrationInstanceAsync(                  typeof(GenerationSignalOrchestration)' 5);
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRaiseEventTest,The following statement contains a magic number: await Task.Delay(2 * 500);
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRaiseEventTest,The following statement contains a magic number: await Task.Delay(2 * 500);
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRaiseEventTest,The following statement contains a magic number: await Task.Delay(2 * 500);
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRaiseEventTest,The following statement contains a magic number: await Task.Delay(2 * 500);
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRaiseEventTest,The following statement contains a magic number: await Task.Delay(2 * 500);
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRaiseEventTest,The following statement contains a magic number: await Task.Delay(2 * 500);
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRaiseEventTest,The following statement contains a magic number: await Task.Delay(2 * 500);
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRaiseEventTest,The following statement contains a magic number: await Task.Delay(2 * 500);
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRaiseEventTest,The following statement contains a magic number: await Task.Delay(2 * 500);
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRaiseEventTest,The following statement contains a magic number: await Task.Delay(2 * 500);
Magic Number,DurableTask.Emulator.Tests,EmulatorFunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Emulator.Tests\EmulatorFunctionalTests.cs,MockRaiseEventTest,The following statement contains a magic number: OrchestrationState result = await client.WaitForOrchestrationAsync(new OrchestrationInstance { InstanceId = id.InstanceId }'                  TimeSpan.FromSeconds(40)' CancellationToken.None);
