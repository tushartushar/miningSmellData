Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,DurableTask.AzureServiceFabric.Integration.Tests.DeploymentUtil,ApplicationInfoReader,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\DeploymentUtil\ApplicationInfoReader.cs,,The length of the parameter applicationManifestNamespaceManager is 35.
Long Identifier,DurableTask.AzureServiceFabric.Integration.Tests.DeploymentUtil,ApplicationInfoReader,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\DeploymentUtil\ApplicationInfoReader.cs,,The length of the parameter serviceManifestNamespaceManager is 31.
Long Identifier,DurableTask.AzureServiceFabric.Integration.Tests.DeploymentUtil,DeploymentHelper,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\DeploymentUtil\DeploymentHelper.cs,DeployAsync,The length of the parameter imageStoreConnectionStringPath is 30.
Long Identifier,DurableTask.AzureServiceFabric.Integration.Tests.DeploymentUtil,DeploymentHelper,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\DeploymentUtil\DeploymentHelper.cs,DeployAsync,The length of the parameter imageStoreConnectionStringNode is 30.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_Timer_Finishes_After_The_Wait_Time,The length of the statement  "            var instance = await this.taskHubClient.CreateOrchestrationInstanceAsync(typeof(SimpleOrchestrationWithTasks)' waitTime); " is 121.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_SubOrchestration_Finishes,The length of the statement  "            var instance = await this.taskHubClient.CreateOrchestrationInstanceAsync(typeof(SimpleOrchestrationWithSubOrchestration)' null); " is 128.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_SubOrchestration_Finishes,The length of the statement  "            Assert.AreEqual($"\"TaskResult = Hello World ' SubOrchestration1Result = Hello Gabbar' SubOrchestration2Result = Hello Gabbar\""' result.Output); " is 145.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_TimeoutWrapper_Test,The length of the statement  "            Console.WriteLine($"Time for Orchestration with no delay running task wrapped in 1 minute timeout : {result.CompletedTime - result.CreatedTime}"); " is 146.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_TimeoutWrapper_Test,The length of the statement  "            Console.WriteLine($"Time for Orchestration with 5 second running task wrapped in 1 second timeout : {result.CompletedTime - result.CreatedTime}"); " is 146.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_Same_Id_Cant_Be_Started_While_Running,The length of the statement  "            Assert.IsNotNull(createdInstance' $"No task was able to create an orchestration with the given instance id {instanceId}"); " is 122.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_Same_Id_Can_Be_Started_After_First_One_Finishes,The length of the statement  "            OrchestrationInstance instance1 = await this.taskHubClient.CreateOrchestrationInstanceAsync(typeof(ExecutionCountingOrchestration)' instanceId' 10); " is 148.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_Same_Id_Can_Be_Started_After_First_One_Finishes,The length of the statement  "            OrchestrationInstance instance2 = await this.taskHubClient.CreateOrchestrationInstanceAsync(typeof(ExecutionCountingOrchestration)' instanceId' 20); " is 148.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,FabricProviderClient_ReturnsRunningOrchestrations,The length of the statement  "                var task = this.taskHubClient.CreateOrchestrationInstanceAsync(typeof(TestOrchestration)' instanceIdPrefix + i' testData); " is 122.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,QueryState_For_Latest_Execution,The length of the statement  "            var newInstance = await this.taskHubClient.CreateOrchestrationInstanceAsync(typeof(TestOrchestration)' instanceId' input); " is 122.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Retry_OnException_Test,The length of the statement  "            var instance = await this.taskHubClient.CreateOrchestrationInstanceAsync(typeof(OrchestrationRunningIntoRetry)' retryAttempts); " is 127.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Purge_Removes_State,The length of the statement  "            await this.taskHubClient.PurgeOrchestrationInstanceHistoryAsync(DateTime.UtcNow' OrchestrationStateTimeRangeFilterType.OrchestrationCompletedTimeFilter); " is 153.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,ExecuteSameOrchestrationBackToBack,The length of the statement  "            Dictionary<int' Tuple<OrchestrationInstance' OrchestrationState>> results = new Dictionary<int' Tuple<OrchestrationInstance' OrchestrationState>>(); " is 148.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,ExecuteSameOrchestrationBackToBack,The length of the statement  "                var instance = await taskHubClient.CreateOrchestrationInstanceAsync(typeof(TestOrchestration)' instanceId' new TestOrchestrationData() " is 134.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,ExecuteSameOrchestrationBackToBack,The length of the statement  "                Assert.IsNotNull(state' $"Attempt number {attemptNumber} with execution id {instance.ExecutionId} Failed with null value for WaitForOrchestration"); " is 148.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,ExecuteSameOrchestrationBackToBack,The length of the statement  "                Assert.AreEqual(OrchestrationStatus.Completed' state.OrchestrationStatus' $"Attempt number {attemptNumber} with execution id {instance.ExecutionId} did not reach 'Completed' state."); " is 183.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,ExecuteSameOrchestrationBackToBack,The length of the statement  "                Console.WriteLine($"Time for orchestration in attempt number {attemptNumber} : {state.CompletedTime - state.CreatedTime}"); " is 123.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,Test_Lot_Of_Activities_Per_Orchestration,The length of the statement  "                var instance = await taskHubClient.CreateOrchestrationInstanceAsync(typeof(ExecutionCountingOrchestration)' numberOfActivities); " is 128.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,Test_Lot_Of_Activities_Per_Orchestration,The length of the statement  "                await taskHubClient.PurgeOrchestrationInstanceHistoryAsync(DateTime.Now' OrchestrationStateTimeRangeFilterType.OrchestrationCompletedTimeFilter); " is 145.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,Test_Lot_Of_Activities_Per_Orchestration,The length of the statement  "                Console.WriteLine($"Time for orchestration {state.OrchestrationInstance.InstanceId} with {numberOfActivities} parallel activities : {state.CompletedTime - state.CreatedTime}"); " is 176.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,RunThousandOrchsWithHundredMilliSecondDelayInBetweenStartingEach,The length of the statement  "            await RunTestOrchestrationsHelper(1000' testOrchestratorInput' delayGeneratorFunction: (totalRequestsSoFar) => TimeSpan.FromMilliseconds(100)); " is 143.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,RunThousandOrchsWithHundredMilliSecondDelayInBetweenStartingEach,The length of the statement  "            await RunTestOrchestrationsHelper(1000' testOrchestratorInput' delayGeneratorFunction: (totalRequestsSoFar) => TimeSpan.FromMilliseconds(100)); " is 143.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,InfrequentLoadScenario,The length of the statement  "            await RunTestOrchestrationsHelper(200' testOrchestratorInput' delayGeneratorFunction: (totalRequestsSoFar) => TimeSpan.FromSeconds(1)); " is 135.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,InfrequentLoadScenario,The length of the statement  "            await RunTestOrchestrationsHelper(200' testOrchestratorInput' delayGeneratorFunction: (totalRequestsSoFar) => TimeSpan.FromSeconds(1)); " is 135.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,RunDriverOrchestrationHelper,The length of the statement  "            Func<TimeSpan' string> elapsedTimeFormatter = timeSpan => $"{timeSpan.Hours:00}:{timeSpan.Minutes:00}:{timeSpan.Seconds:00}.{timeSpan.Milliseconds / 10:00}"; " is 157.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,RunDriverOrchestrationHelper,The length of the statement  "            var expectedResult = driverConfig.NumberOfParallelOrchestrations * (driverConfig.SubOrchestrationData.NumberOfParallelTasks + driverConfig.SubOrchestrationData.NumberOfSerialTasks); " is 181.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,RunTestOrchestrationsHelper,The length of the statement  "            List<Tuple<OrchestrationInstance' OrchestrationState>> results = new List<Tuple<OrchestrationInstance' OrchestrationState>>(); " is 126.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,RunTestOrchestrationsHelper,The length of the statement  "            Func<TimeSpan' string> elapsedTimeFormatter = timeSpan => $"{timeSpan.Hours:00}:{timeSpan.Minutes:00}:{timeSpan.Seconds:00}.{timeSpan.Milliseconds / 10:00}"; " is 157.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,Utilities,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\Utilities.cs,CreateTaskHubClient,The length of the statement  "            var partitionProvider = new FabricPartitionEndpointResolver(new Uri(Constants.TestFabricApplicationAddress)' new DefaultStringPartitionHashing()); " is 146.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,Utilities,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\Utilities.cs,ThrowsException,The length of the statement  "                    Assert.Fail($"Method {action.Method} is expected to throw exception of type {typeof(TException).Name} but has thrown {ex.GetType().Name} instead."); " is 148.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,Utilities,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\Utilities.cs,ThrowsException,The length of the statement  "                    Assert.Fail($"Method {action.Method} is expected to throw exception with message '{expectedMessage}' but has thrown the message '{expected.Message}' instead."); " is 160.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,WaitForOrchestrationTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\WaitForOrchestrationTests.cs,WaitForOrchestration_Returns_State_When_Orchestration_Already_Finished,The length of the statement  "            await this.taskHubClient.WaitForOrchestrationAsync(instance' TimeSpan.FromMinutes(1)); //Wait till orchestration is finished " is 124.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,WaitForOrchestrationTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\WaitForOrchestrationTests.cs,WaitForOrchestration_Returns_State_When_Orchestration_Already_Finished,The length of the statement  "            Console.WriteLine($"Full WaitTime : {waitTime}' Actual time taken for Wait {time}' Actual Time taken for Orchestration : {result.CompletedTime - result.CreatedTime}"); " is 167.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,WaitForOrchestrationTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\WaitForOrchestrationTests.cs,WaitForOrchestration_Waits_And_Returns_State_When_Orchestration_IsRunning,The length of the statement  "            Console.WriteLine($"Full WaitTime : {waitTime}' Actual time taken for Wait : {time}' Expected Minimum time for orchestration : {orchestrationTimeInSeconds} seconds' Actual Time taken for Orchestration : {result.CompletedTime - result.CreatedTime}"); " is 249.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,WaitForOrchestrationTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\WaitForOrchestrationTests.cs,WaitForOrchestration_TimesOut_And_Returns_Null_When_Orchestration_DidNotFinishYet,The length of the statement  "            Console.WriteLine($"Full WaitTime : {waitTime}' Actual time taken for Wait : {time}' Expected Orchestration Running Time : {orchestrationTimeInSeconds} seconds"); " is 162.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests,WaitForOrchestrationTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\WaitForOrchestrationTests.cs,WaitForOrchestration_TimesOut_And_Returns_Null_When_Orchestration_DidNotFinishYet,The length of the statement  "            Console.WriteLine($"Full WaitTime : {newWaitTime}' Actual time taken for Wait : {time}' Time taken for Orchestration : {result.CompletedTime - result.CreatedTime}"); " is 165.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests.DeploymentUtil,ApplicationInfoReader,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\DeploymentUtil\ApplicationInfoReader.cs,GetApplicationName,The length of the statement  "            return GetSingleNodeAttributeValue(applicationManifestRoot' applicationManifestNamespaceManager' ApplicationManifestNodePath' ApplicationNameAttribute); " is 152.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests.DeploymentUtil,ApplicationInfoReader,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\DeploymentUtil\ApplicationInfoReader.cs,GetApplicationVersion,The length of the statement  "            return GetSingleNodeAttributeValue(applicationManifestRoot' applicationManifestNamespaceManager' ApplicationManifestNodePath' ApplicationVersionAttribute); " is 155.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests.DeploymentUtil,ApplicationInfoReader,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\DeploymentUtil\ApplicationInfoReader.cs,GetServiceName,The length of the statement  "            return GetSingleNodeAttributeValue(serviceManifestRoot' serviceManifestNamespaceManager' StatefulServiceNodePath' ServiceTypeNameAttribute) ?? " is 142.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests.DeploymentUtil,ApplicationInfoReader,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\DeploymentUtil\ApplicationInfoReader.cs,GetServiceName,The length of the statement  "                   GetSingleNodeAttributeValue(serviceManifestRoot' serviceManifestNamespaceManager' StatelessServiceNodePath' ServiceTypeNameAttribute); " is 134.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests.DeploymentUtil,ApplicationInfoReader,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\DeploymentUtil\ApplicationInfoReader.cs,GetApplicationParameters,The length of the statement  "            foreach (var parameterNode in applicationParameters.DocumentElement.SelectNodes(parametersPath' GetXmlNamespaceManager(applicationParameters.NameTable)).OfType<XmlNode>()) " is 171.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests.DeploymentUtil,DeploymentHelper,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\DeploymentUtil\DeploymentHelper.cs,CleanAsync,The length of the statement  "                await client.ApplicationManager.DeleteApplicationAsync(new DeleteApplicationDescription(application.ApplicationName) { ForceDelete = true }); " is 141.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests.DeploymentUtil,DeploymentHelper,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\DeploymentUtil\DeploymentHelper.cs,CleanAsync,The length of the statement  "                    var replicas = (await client.QueryManager.GetDeployedReplicaListAsync(node.NodeName' application.ApplicationName)).OfType<DeployedStatefulServiceReplica>(); " is 156.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests.DeploymentUtil,DeploymentHelper,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\DeploymentUtil\DeploymentHelper.cs,CleanAsync,The length of the statement  "                await client.ApplicationManager.UnprovisionApplicationAsync(applicationType.ApplicationTypeName' applicationType.ApplicationTypeVersion); " is 137.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests.DeploymentUtil,DeploymentHelper,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\DeploymentUtil\DeploymentHelper.cs,DeployAsync,The length of the statement  "            var imageStoreConnectionStringPath = "/sf:ClusterManifest/sf:FabricSettings/sf:Section[@Name='Management']/sf:Parameter[@Name='ImageStoreConnectionString']"; " is 157.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests.DeploymentUtil,DeploymentHelper,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\DeploymentUtil\DeploymentHelper.cs,DeployAsync,The length of the statement  "            var imageStoreConnectionStringNode = clusterManifest.DocumentElement.SelectSingleNode(imageStoreConnectionStringPath' namespaceManager); " is 136.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests.DeploymentUtil,DeploymentHelper,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\DeploymentUtil\DeploymentHelper.cs,WaitForHealthStatusAsync,The length of the statement  "                var states = (await client.HealthManager.GetApplicationHealthAsync(applicationDescription.ApplicationName)).ServiceHealthStates; " is 128.
Long Statement,DurableTask.AzureServiceFabric.Integration.Tests.DeploymentUtil,DeploymentHelper,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\DeploymentUtil\DeploymentHelper.cs,WaitForHealthStatusAsync,The length of the statement  "                if (states.Any() && states.Any(s => s.AggregatedHealthState == HealthState.Error || s.AggregatedHealthState == HealthState.Invalid)) " is 132.
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_ScheduledTasks_Finishes,The following statement contains a magic number: var result =  await this.taskHubClient.WaitForOrchestrationAsync(instance' TimeSpan.FromMinutes(2));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_Timer_Finishes_After_The_Wait_Time,The following statement contains a magic number: var waitTime = 37;
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_Timer_Finishes_After_The_Wait_Time,The following statement contains a magic number: var result = await this.taskHubClient.WaitForOrchestrationAsync(instance' TimeSpan.FromMinutes(2));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_SubOrchestration_Finishes,The following statement contains a magic number: var result = await this.taskHubClient.WaitForOrchestrationAsync(instance' TimeSpan.FromMinutes(2));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_TimeoutWrapper_Test,The following statement contains a magic number: var result = await this.taskHubClient.WaitForOrchestrationAsync(instance' TimeSpan.FromMinutes(2));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_TimeoutWrapper_Test,The following statement contains a magic number: input = new TestOrchestrationData()              {                  NumberOfParallelTasks = 0'                  NumberOfSerialTasks = 1'                  MaxDelay = 5'                  MinDelay = 5'                  DelayUnit = TimeSpan.FromSeconds(1)'                  UseTimeoutTask = true'                  ExecutionTimeout = TimeSpan.FromSeconds(1)              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_TimeoutWrapper_Test,The following statement contains a magic number: input = new TestOrchestrationData()              {                  NumberOfParallelTasks = 0'                  NumberOfSerialTasks = 1'                  MaxDelay = 5'                  MinDelay = 5'                  DelayUnit = TimeSpan.FromSeconds(1)'                  UseTimeoutTask = true'                  ExecutionTimeout = TimeSpan.FromSeconds(1)              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_TimeoutWrapper_Test,The following statement contains a magic number: result = await this.taskHubClient.WaitForOrchestrationAsync(instance' TimeSpan.FromMinutes(2));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_Same_Id_Cant_Be_Started_While_Running,The following statement contains a magic number: var testData = new TestOrchestrationData()              {                  NumberOfParallelTasks = 0'                  NumberOfSerialTasks = 1'                  MaxDelay = 5'                  MinDelay = 5'                  DelayUnit = TimeSpan.FromSeconds(1)'              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_Same_Id_Cant_Be_Started_While_Running,The following statement contains a magic number: var testData = new TestOrchestrationData()              {                  NumberOfParallelTasks = 0'                  NumberOfSerialTasks = 1'                  MaxDelay = 5'                  MinDelay = 5'                  DelayUnit = TimeSpan.FromSeconds(1)'              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_Same_Id_Cant_Be_Started_While_Running,The following statement contains a magic number: var orchestrationResult = await this.taskHubClient.WaitForOrchestrationAsync(createdInstance' TimeSpan.FromMinutes(2));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_Same_Id_Can_Be_Started_After_First_One_Finishes,The following statement contains a magic number: OrchestrationInstance instance1 = await this.taskHubClient.CreateOrchestrationInstanceAsync(typeof(ExecutionCountingOrchestration)' instanceId' 10);
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_Same_Id_Can_Be_Started_After_First_One_Finishes,The following statement contains a magic number: await this.taskHubClient.WaitForOrchestrationAsync(instance1' TimeSpan.FromSeconds(10));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_Same_Id_Can_Be_Started_After_First_One_Finishes,The following statement contains a magic number: OrchestrationInstance instance2 = await this.taskHubClient.CreateOrchestrationInstanceAsync(typeof(ExecutionCountingOrchestration)' instanceId' 20);
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Orchestration_With_Same_Id_Can_Be_Started_After_First_One_Finishes,The following statement contains a magic number: await this.taskHubClient.WaitForOrchestrationAsync(instance2' TimeSpan.FromSeconds(10));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,FabricProviderClient_ReturnsRunningOrchestrations,The following statement contains a magic number: int numberOfInstances = 5;
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,FabricProviderClient_ReturnsRunningOrchestrations,The following statement contains a magic number: var testData = new TestOrchestrationData()                  {                      NumberOfParallelTasks = 0'                      NumberOfSerialTasks = 1'                      MaxDelay = 5'                      MinDelay = 5'                      DelayUnit = TimeSpan.FromSeconds(1)'                  };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,FabricProviderClient_ReturnsRunningOrchestrations,The following statement contains a magic number: var testData = new TestOrchestrationData()                  {                      NumberOfParallelTasks = 0'                      NumberOfSerialTasks = 1'                      MaxDelay = 5'                      MinDelay = 5'                      DelayUnit = TimeSpan.FromSeconds(1)'                  };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,FabricProviderClient_ReturnsRunningOrchestrations,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(2));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,FabricProviderClient_ReturnsRunningOrchestrations,The following statement contains a magic number: var waitTask = this.taskHubClient.WaitForOrchestrationAsync(scheduledInstance' TimeSpan.FromMinutes(2));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,QueryState_For_Latest_Execution,The following statement contains a magic number: var input = new TestOrchestrationData()              {                  NumberOfParallelTasks = 0'                  NumberOfSerialTasks = 1'                  MaxDelay = 15'                  MinDelay = 15'                  DelayUnit = TimeSpan.FromSeconds(1)'              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,QueryState_For_Latest_Execution,The following statement contains a magic number: var input = new TestOrchestrationData()              {                  NumberOfParallelTasks = 0'                  NumberOfSerialTasks = 1'                  MaxDelay = 15'                  MinDelay = 15'                  DelayUnit = TimeSpan.FromSeconds(1)'              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,QueryState_For_Latest_Execution,The following statement contains a magic number: var result = await this.taskHubClient.WaitForOrchestrationAsync(instance' TimeSpan.FromMinutes(2));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,QueryState_For_Latest_Execution,The following statement contains a magic number: result = await this.taskHubClient.WaitForOrchestrationAsync(instance' TimeSpan.FromMinutes(2));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Retry_OnException_Test,The following statement contains a magic number: int retryAttempts = 3;
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Retry_OnException_Test,The following statement contains a magic number: var result = await this.taskHubClient.WaitForOrchestrationAsync(instance' TimeSpan.FromMinutes(2));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,ForceTerminate_Terminates_LatestExecution,The following statement contains a magic number: var testData = new TestOrchestrationData()              {                  NumberOfParallelTasks = 0'                  NumberOfSerialTasks = 5'                  MaxDelay = 5'                  MinDelay = 5'                  DelayUnit = TimeSpan.FromSeconds(1)'              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,ForceTerminate_Terminates_LatestExecution,The following statement contains a magic number: var testData = new TestOrchestrationData()              {                  NumberOfParallelTasks = 0'                  NumberOfSerialTasks = 5'                  MaxDelay = 5'                  MinDelay = 5'                  DelayUnit = TimeSpan.FromSeconds(1)'              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,ForceTerminate_Terminates_LatestExecution,The following statement contains a magic number: var testData = new TestOrchestrationData()              {                  NumberOfParallelTasks = 0'                  NumberOfSerialTasks = 5'                  MaxDelay = 5'                  MinDelay = 5'                  DelayUnit = TimeSpan.FromSeconds(1)'              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,ForceTerminate_Twice_Terminates_LatestExecution,The following statement contains a magic number: var testData = new TestOrchestrationData()              {                  NumberOfParallelTasks = 0'                  NumberOfSerialTasks = 2'                  MaxDelay = 5'                  MinDelay = 5'                  DelayUnit = TimeSpan.FromSeconds(1)'              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,ForceTerminate_Twice_Terminates_LatestExecution,The following statement contains a magic number: var testData = new TestOrchestrationData()              {                  NumberOfParallelTasks = 0'                  NumberOfSerialTasks = 2'                  MaxDelay = 5'                  MinDelay = 5'                  DelayUnit = TimeSpan.FromSeconds(1)'              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,ForceTerminate_Twice_Terminates_LatestExecution,The following statement contains a magic number: var testData = new TestOrchestrationData()              {                  NumberOfParallelTasks = 0'                  NumberOfSerialTasks = 2'                  MaxDelay = 5'                  MinDelay = 5'                  DelayUnit = TimeSpan.FromSeconds(1)'              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,FunctionalTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\FunctionalTests.cs,Purge_Removes_State,The following statement contains a magic number: var result = await this.taskHubClient.WaitForOrchestrationAsync(instance' TimeSpan.FromMinutes(2));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,ExecuteStressTest,The following statement contains a magic number: var driverConfig = new DriverOrchestrationData()              {                  NumberOfParallelOrchestrations = 40'                  SubOrchestrationData = new TestOrchestrationData()                  {                      NumberOfParallelTasks = 10'                      NumberOfSerialTasks = 5'                      MaxDelay = 5'                      MinDelay = 0'                      DelayUnit = TimeSpan.FromSeconds(1)                  }              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,ExecuteStressTest,The following statement contains a magic number: var driverConfig = new DriverOrchestrationData()              {                  NumberOfParallelOrchestrations = 40'                  SubOrchestrationData = new TestOrchestrationData()                  {                      NumberOfParallelTasks = 10'                      NumberOfSerialTasks = 5'                      MaxDelay = 5'                      MinDelay = 0'                      DelayUnit = TimeSpan.FromSeconds(1)                  }              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,ExecuteStressTest,The following statement contains a magic number: var driverConfig = new DriverOrchestrationData()              {                  NumberOfParallelOrchestrations = 40'                  SubOrchestrationData = new TestOrchestrationData()                  {                      NumberOfParallelTasks = 10'                      NumberOfSerialTasks = 5'                      MaxDelay = 5'                      MinDelay = 0'                      DelayUnit = TimeSpan.FromSeconds(1)                  }              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,ExecuteStressTest,The following statement contains a magic number: var driverConfig = new DriverOrchestrationData()              {                  NumberOfParallelOrchestrations = 40'                  SubOrchestrationData = new TestOrchestrationData()                  {                      NumberOfParallelTasks = 10'                      NumberOfSerialTasks = 5'                      MaxDelay = 5'                      MinDelay = 0'                      DelayUnit = TimeSpan.FromSeconds(1)                  }              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,ExecuteStressTest,The following statement contains a magic number: driverConfig.SubOrchestrationData.ExecutionTimeout = TimeSpan.FromMinutes(2);
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,ExecuteSameOrchestrationBackToBack,The following statement contains a magic number: int numberOfAttempts = 10;
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,ExecuteSameOrchestrationBackToBack,The following statement contains a magic number: var instance = await taskHubClient.CreateOrchestrationInstanceAsync(typeof(TestOrchestration)' instanceId' new TestOrchestrationData()                  {                      NumberOfParallelTasks = 0'                      NumberOfSerialTasks = 1'                      MaxDelay = 1980'                      MinDelay = 1900'                      DelayUnit = TimeSpan.FromMilliseconds(1)'                  });
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,ExecuteSameOrchestrationBackToBack,The following statement contains a magic number: var instance = await taskHubClient.CreateOrchestrationInstanceAsync(typeof(TestOrchestration)' instanceId' new TestOrchestrationData()                  {                      NumberOfParallelTasks = 0'                      NumberOfSerialTasks = 1'                      MaxDelay = 1980'                      MinDelay = 1900'                      DelayUnit = TimeSpan.FromMilliseconds(1)'                  });
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,Test_Lot_Of_Activities_Per_Orchestration,The following statement contains a magic number: var tests = new[] { 256' 1024' 2048' 3500' 4000' 8000' 10000' 15000' 20000 };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,Test_Lot_Of_Activities_Per_Orchestration,The following statement contains a magic number: var tests = new[] { 256' 1024' 2048' 3500' 4000' 8000' 10000' 15000' 20000 };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,Test_Lot_Of_Activities_Per_Orchestration,The following statement contains a magic number: var tests = new[] { 256' 1024' 2048' 3500' 4000' 8000' 10000' 15000' 20000 };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,Test_Lot_Of_Activities_Per_Orchestration,The following statement contains a magic number: var tests = new[] { 256' 1024' 2048' 3500' 4000' 8000' 10000' 15000' 20000 };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,Test_Lot_Of_Activities_Per_Orchestration,The following statement contains a magic number: var tests = new[] { 256' 1024' 2048' 3500' 4000' 8000' 10000' 15000' 20000 };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,Test_Lot_Of_Activities_Per_Orchestration,The following statement contains a magic number: var tests = new[] { 256' 1024' 2048' 3500' 4000' 8000' 10000' 15000' 20000 };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,Test_Lot_Of_Activities_Per_Orchestration,The following statement contains a magic number: var tests = new[] { 256' 1024' 2048' 3500' 4000' 8000' 10000' 15000' 20000 };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,Test_Lot_Of_Activities_Per_Orchestration,The following statement contains a magic number: var tests = new[] { 256' 1024' 2048' 3500' 4000' 8000' 10000' 15000' 20000 };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,Test_Lot_Of_Activities_Per_Orchestration,The following statement contains a magic number: var tests = new[] { 256' 1024' 2048' 3500' 4000' 8000' 10000' 15000' 20000 };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,Test_Lot_Of_Activities_Per_Orchestration,The following statement contains a magic number: var state = await taskHubClient.WaitForOrchestrationAsync(instance' TimeSpan.FromMinutes(3));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,SimplePerformanceExperiment,The following statement contains a magic number: var testOrchestratorInput = new TestOrchestrationData()              {                  NumberOfParallelTasks = 0'                  NumberOfSerialTasks = 3'                  MaxDelay = 3'                  MinDelay = 3'                  DelayUnit = TimeSpan.FromSeconds(1)              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,SimplePerformanceExperiment,The following statement contains a magic number: var testOrchestratorInput = new TestOrchestrationData()              {                  NumberOfParallelTasks = 0'                  NumberOfSerialTasks = 3'                  MaxDelay = 3'                  MinDelay = 3'                  DelayUnit = TimeSpan.FromSeconds(1)              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,SimplePerformanceExperiment,The following statement contains a magic number: var testOrchestratorInput = new TestOrchestrationData()              {                  NumberOfParallelTasks = 0'                  NumberOfSerialTasks = 3'                  MaxDelay = 3'                  MinDelay = 3'                  DelayUnit = TimeSpan.FromSeconds(1)              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,SimplePerformanceExperiment,The following statement contains a magic number: await RunTestOrchestrationsHelper(100' testOrchestratorInput);
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,SimplePerformanceExperiment,The following statement contains a magic number: testOrchestratorInput.ExecutionTimeout = TimeSpan.FromMinutes(2);
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,SimplePerformanceExperiment,The following statement contains a magic number: await RunTestOrchestrationsHelper(100' testOrchestratorInput);
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,RunThousandOrchsWithHundredMilliSecondDelayInBetweenStartingEach,The following statement contains a magic number: var testOrchestratorInput = new TestOrchestrationData()              {                  NumberOfParallelTasks = 16'                  NumberOfSerialTasks = 4'                  MaxDelay = 500'                  MinDelay = 50'                  DelayUnit = TimeSpan.FromMilliseconds(1)              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,RunThousandOrchsWithHundredMilliSecondDelayInBetweenStartingEach,The following statement contains a magic number: var testOrchestratorInput = new TestOrchestrationData()              {                  NumberOfParallelTasks = 16'                  NumberOfSerialTasks = 4'                  MaxDelay = 500'                  MinDelay = 50'                  DelayUnit = TimeSpan.FromMilliseconds(1)              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,RunThousandOrchsWithHundredMilliSecondDelayInBetweenStartingEach,The following statement contains a magic number: var testOrchestratorInput = new TestOrchestrationData()              {                  NumberOfParallelTasks = 16'                  NumberOfSerialTasks = 4'                  MaxDelay = 500'                  MinDelay = 50'                  DelayUnit = TimeSpan.FromMilliseconds(1)              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,RunThousandOrchsWithHundredMilliSecondDelayInBetweenStartingEach,The following statement contains a magic number: var testOrchestratorInput = new TestOrchestrationData()              {                  NumberOfParallelTasks = 16'                  NumberOfSerialTasks = 4'                  MaxDelay = 500'                  MinDelay = 50'                  DelayUnit = TimeSpan.FromMilliseconds(1)              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,RunThousandOrchsWithHundredMilliSecondDelayInBetweenStartingEach,The following statement contains a magic number: await RunTestOrchestrationsHelper(1000' testOrchestratorInput' delayGeneratorFunction: (totalRequestsSoFar) => TimeSpan.FromMilliseconds(100));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,RunThousandOrchsWithHundredMilliSecondDelayInBetweenStartingEach,The following statement contains a magic number: await RunTestOrchestrationsHelper(1000' testOrchestratorInput' delayGeneratorFunction: (totalRequestsSoFar) => TimeSpan.FromMilliseconds(100));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,RunThousandOrchsWithHundredMilliSecondDelayInBetweenStartingEach,The following statement contains a magic number: testOrchestratorInput.ExecutionTimeout = TimeSpan.FromMinutes(2);
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,RunThousandOrchsWithHundredMilliSecondDelayInBetweenStartingEach,The following statement contains a magic number: await RunTestOrchestrationsHelper(1000' testOrchestratorInput' delayGeneratorFunction: (totalRequestsSoFar) => TimeSpan.FromMilliseconds(100));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,RunThousandOrchsWithHundredMilliSecondDelayInBetweenStartingEach,The following statement contains a magic number: await RunTestOrchestrationsHelper(1000' testOrchestratorInput' delayGeneratorFunction: (totalRequestsSoFar) => TimeSpan.FromMilliseconds(100));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,InfrequentLoadScenario,The following statement contains a magic number: var testOrchestratorInput = new TestOrchestrationData()              {                  NumberOfParallelTasks = 0'                  NumberOfSerialTasks = 2'                  MaxDelay = 0'                  MinDelay = 0'              };
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,InfrequentLoadScenario,The following statement contains a magic number: await RunTestOrchestrationsHelper(200' testOrchestratorInput' delayGeneratorFunction: (totalRequestsSoFar) => TimeSpan.FromSeconds(1));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,InfrequentLoadScenario,The following statement contains a magic number: testOrchestratorInput.ExecutionTimeout = TimeSpan.FromMinutes(2);
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,InfrequentLoadScenario,The following statement contains a magic number: await RunTestOrchestrationsHelper(200' testOrchestratorInput' delayGeneratorFunction: (totalRequestsSoFar) => TimeSpan.FromSeconds(1));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,RunDriverOrchestrationHelper,The following statement contains a magic number: var state = await taskHubClient.WaitForOrchestrationAsync(instance' TimeSpan.FromMinutes(5));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,RunDriverOrchestrationHelper,The following statement contains a magic number: Func<TimeSpan' string> elapsedTimeFormatter = timeSpan => $"{timeSpan.Hours:00}:{timeSpan.Minutes:00}:{timeSpan.Seconds:00}.{timeSpan.Milliseconds / 10:00}";
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,RunTestOrchestrationsHelper,The following statement contains a magic number: waitTasks.Add(Task.Run(async () =>                  {                      var state = await taskHubClient.WaitForOrchestrationAsync(instance' TimeSpan.FromMinutes(2));                      results.Add(Tuple.Create(instance' state));                  }));
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,StressTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\StressTests.cs,RunTestOrchestrationsHelper,The following statement contains a magic number: Func<TimeSpan' string> elapsedTimeFormatter = timeSpan => $"{timeSpan.Hours:00}:{timeSpan.Minutes:00}:{timeSpan.Seconds:00}.{timeSpan.Milliseconds / 10:00}";
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,WaitForOrchestrationTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\WaitForOrchestrationTests.cs,WaitForOrchestration_Returns_State_When_Orchestration_Already_Finished,The following statement contains a magic number: var waitTime = TimeSpan.FromMilliseconds(100);
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,WaitForOrchestrationTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\WaitForOrchestrationTests.cs,WaitForOrchestration_Waits_And_Returns_State_When_Orchestration_IsRunning,The following statement contains a magic number: var orchestrationTimeInSeconds = 5;
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,WaitForOrchestrationTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\WaitForOrchestrationTests.cs,WaitForOrchestration_TimesOut_And_Returns_Null_When_Orchestration_DidNotFinishYet,The following statement contains a magic number: var initialwaitTimeInSeconds = 2;
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests,WaitForOrchestrationTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\WaitForOrchestrationTests.cs,WaitForOrchestration_TimesOut_And_Returns_Null_When_Orchestration_DidNotFinishYet,The following statement contains a magic number: var orchestrationTimeInSeconds = 5;
Magic Number,DurableTask.AzureServiceFabric.Integration.Tests.DeploymentUtil,DeploymentHelper,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureServiceFabric.Integration.Tests\DeploymentUtil\DeploymentHelper.cs,WaitForHealthStatusAsync,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(2));
