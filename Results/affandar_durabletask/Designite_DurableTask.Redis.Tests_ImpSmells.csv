Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DurableTask.Redis.Tests,EndToEndServiceScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Redis.Tests\EndToEndServiceScenarioTests.cs,SimpleGreetingOrchestration,The length of the statement  "                OrchestrationState result = await client.WaitForOrchestrationAsync(id' TimeSpan.FromSeconds(Debugger.IsAttached ? 300 : 20)' new CancellationToken()); " is 150.
Long Statement,DurableTask.Redis.Tests,EndToEndServiceScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Redis.Tests\EndToEndServiceScenarioTests.cs,SimpleFanOutOrchestration,The length of the statement  "                OrchestrationState result = await client.WaitForOrchestrationAsync(id' TimeSpan.FromSeconds(Debugger.IsAttached ? 20 : 20)' new CancellationToken()); " is 149.
Long Statement,DurableTask.Redis.Tests,EndToEndServiceScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Redis.Tests\EndToEndServiceScenarioTests.cs,SimpleFanOutOrchestration_DurabilityTest,The length of the statement  "                OrchestrationState result = await client.WaitForOrchestrationAsync(id' TimeSpan.FromSeconds(Debugger.IsAttached ? 20 : 20)' new CancellationToken()); " is 149.
Long Statement,DurableTask.Redis.Tests,TestOrchestrationClient,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Redis.Tests\TestOrchestrationClient.cs,WaitForStartupAsync,The length of the statement  "                    Trace.TraceInformation($"{state.Name} (ID = {state.OrchestrationInstance.InstanceId}) started successfully after ~{sw.ElapsedMilliseconds}ms. Status = {state.OrchestrationStatus}."); " is 182.
Long Statement,DurableTask.Redis.Tests,TestOrchestrationClient,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Redis.Tests\TestOrchestrationClient.cs,WaitForStartupAsync,The length of the statement  "            throw new TimeoutException($"Orchestration '{this.orchestrationType.Name}' with instance ID '{this.instanceId}' failed to start."); " is 131.
Magic Number,DurableTask.Redis.Tests,EndToEndServiceScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Redis.Tests\EndToEndServiceScenarioTests.cs,StopAsync_IsIdempotent,The following statement contains a magic number: int numStops = 3;
Magic Number,DurableTask.Redis.Tests,EndToEndServiceScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Redis.Tests\EndToEndServiceScenarioTests.cs,SimpleGreetingOrchestration,The following statement contains a magic number: OrchestrationState result = await client.WaitForOrchestrationAsync(id' TimeSpan.FromSeconds(Debugger.IsAttached ? 300 : 20)' new CancellationToken());
Magic Number,DurableTask.Redis.Tests,EndToEndServiceScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Redis.Tests\EndToEndServiceScenarioTests.cs,SimpleGreetingOrchestration,The following statement contains a magic number: OrchestrationState result = await client.WaitForOrchestrationAsync(id' TimeSpan.FromSeconds(Debugger.IsAttached ? 300 : 20)' new CancellationToken());
Magic Number,DurableTask.Redis.Tests,EndToEndServiceScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Redis.Tests\EndToEndServiceScenarioTests.cs,SimpleFanOutOrchestration,The following statement contains a magic number: int numToIterateTo = 101;
Magic Number,DurableTask.Redis.Tests,EndToEndServiceScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Redis.Tests\EndToEndServiceScenarioTests.cs,SimpleFanOutOrchestration,The following statement contains a magic number: OrchestrationState result = await client.WaitForOrchestrationAsync(id' TimeSpan.FromSeconds(Debugger.IsAttached ? 20 : 20)' new CancellationToken());
Magic Number,DurableTask.Redis.Tests,EndToEndServiceScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Redis.Tests\EndToEndServiceScenarioTests.cs,SimpleFanOutOrchestration,The following statement contains a magic number: OrchestrationState result = await client.WaitForOrchestrationAsync(id' TimeSpan.FromSeconds(Debugger.IsAttached ? 20 : 20)' new CancellationToken());
Magic Number,DurableTask.Redis.Tests,EndToEndServiceScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Redis.Tests\EndToEndServiceScenarioTests.cs,SimpleFanOutOrchestration,The following statement contains a magic number: int expectedResult = (numToIterateTo * (numToIterateTo + 1) * (2 * numToIterateTo + 1)) / 6;
Magic Number,DurableTask.Redis.Tests,EndToEndServiceScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Redis.Tests\EndToEndServiceScenarioTests.cs,SimpleFanOutOrchestration,The following statement contains a magic number: int expectedResult = (numToIterateTo * (numToIterateTo + 1) * (2 * numToIterateTo + 1)) / 6;
Magic Number,DurableTask.Redis.Tests,EndToEndServiceScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Redis.Tests\EndToEndServiceScenarioTests.cs,SimpleFanOutOrchestration_DurabilityTest,The following statement contains a magic number: int numToIterateTo = 500;
Magic Number,DurableTask.Redis.Tests,EndToEndServiceScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Redis.Tests\EndToEndServiceScenarioTests.cs,SimpleFanOutOrchestration_DurabilityTest,The following statement contains a magic number: await client.WaitForOrchestrationAsync(id' TimeSpan.FromMilliseconds(500)' new CancellationToken());
Magic Number,DurableTask.Redis.Tests,EndToEndServiceScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Redis.Tests\EndToEndServiceScenarioTests.cs,SimpleFanOutOrchestration_DurabilityTest,The following statement contains a magic number: OrchestrationState result = await client.WaitForOrchestrationAsync(id' TimeSpan.FromSeconds(Debugger.IsAttached ? 20 : 20)' new CancellationToken());
Magic Number,DurableTask.Redis.Tests,EndToEndServiceScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Redis.Tests\EndToEndServiceScenarioTests.cs,SimpleFanOutOrchestration_DurabilityTest,The following statement contains a magic number: OrchestrationState result = await client.WaitForOrchestrationAsync(id' TimeSpan.FromSeconds(Debugger.IsAttached ? 20 : 20)' new CancellationToken());
Magic Number,DurableTask.Redis.Tests,EndToEndServiceScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Redis.Tests\EndToEndServiceScenarioTests.cs,SimpleFanOutOrchestration_DurabilityTest,The following statement contains a magic number: int expectedResult = (numToIterateTo * (numToIterateTo + 1) * (2 * numToIterateTo + 1)) / 6;
Magic Number,DurableTask.Redis.Tests,EndToEndServiceScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Redis.Tests\EndToEndServiceScenarioTests.cs,SimpleFanOutOrchestration_DurabilityTest,The following statement contains a magic number: int expectedResult = (numToIterateTo * (numToIterateTo + 1) * (2 * numToIterateTo + 1)) / 6;
Magic Number,DurableTask.Redis.Tests,TestOrchestrationClient,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.Redis.Tests\TestOrchestrationClient.cs,AdjustTimeout,The following statement contains a magic number: TimeSpan debuggingTimeout = TimeSpan.FromMinutes(5);
