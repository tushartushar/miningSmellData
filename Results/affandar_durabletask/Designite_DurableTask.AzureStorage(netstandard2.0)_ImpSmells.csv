Implementation smell,Namespace,Class,File,Method,Description
Long Method,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,LockNextTaskOrchestrationWorkItemAsync,The method has 146 lines of code.
Long Method,DurableTask.AzureStorage.Messaging,ControlQueue,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Messaging\ControlQueue.cs,GetMessagesAsync,The method has 119 lines of code.
Long Method,DurableTask.AzureStorage.Partitioning,PartitionManager<T>,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\PartitionManager.cs,TakeLeasesAsync,The method has 116 lines of code.
Long Method,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,UpdateStateAsync,The method has 133 lines of code.
Long Method,DurableTask.AzureStorage.Tracking,TableEntityConverter,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\TableEntityConverter.cs,GetPropertyConvertersForType,The method has 191 lines of code.
Complex Method,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,LockNextTaskOrchestrationWorkItemAsync,Cyclomatic complexity of the method is 12
Complex Method,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,CommitOutboundQueueMessages,Cyclomatic complexity of the method is 8
Complex Method,DurableTask.AzureStorage,OrchestrationSessionManager,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\OrchestrationSessionManager.cs,AddMessageToPendingOrchestration,Cyclomatic complexity of the method is 12
Complex Method,DurableTask.AzureStorage.Monitoring,DisconnectedPerformanceMonitor,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Monitoring\DisconnectedPerformanceMonitor.cs,MakeScaleRecommendation,Cyclomatic complexity of the method is 10
Complex Method,DurableTask.AzureStorage.Partitioning,PartitionManager<T>,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\PartitionManager.cs,TakeLeasesAsync,Cyclomatic complexity of the method is 18
Complex Method,DurableTask.AzureStorage.Tracking,TableEntityConverter,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\TableEntityConverter.cs,GetPropertyConvertersForType,Cyclomatic complexity of the method is 27
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,SendingMessage,The method has 14 parameters. Parameters: relatedActivityId' Account' TaskHub' EventType' TaskEventId' InstanceId' ExecutionId' SizeInBytes' PartitionId' TargetInstanceId' TargetExecutionId' SequenceNumber' Episode' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,ReceivedMessage,The method has 16 parameters. Parameters: relatedActivityId' Account' TaskHub' EventType' TaskEventId' InstanceId' ExecutionId' MessageId' Age' DequeueCount' NextVisibleTime' SizeInBytes' PartitionId' SequenceNumber' Episode' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,DeletingMessage,The method has 10 parameters. Parameters: Account' TaskHub' EventType' TaskEventId' MessageId' InstanceId' ExecutionId' PartitionId' SequenceNumber' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,AbandoningMessage,The method has 11 parameters. Parameters: Account' TaskHub' EventType' TaskEventId' MessageId' InstanceId' ExecutionId' PartitionId' SequenceNumber' VisibilityTimeoutSeconds' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,MessageGone,The method has 10 parameters. Parameters: Account' TaskHub' MessageId' InstanceId' ExecutionId' PartitionId' EventType' TaskEventId' Details' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,DuplicateMessageDetected,The method has 8 parameters. Parameters: Account' TaskHub' MessageId' InstanceId' ExecutionId' PartitionId' DequeueCount' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,PoisonMessageDetected,The method has 8 parameters. Parameters: Account' TaskHub' MessageId' InstanceId' ExecutionId' PartitionId' DequeueCount' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,FetchedInstanceHistory,The method has 11 parameters. Parameters: Account' TaskHub' InstanceId' ExecutionId' EventCount' Episode' RequestCount' LatencyMs' ETag' LastCheckpointTime' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,AppendedInstanceHistory,The method has 13 parameters. Parameters: Account' TaskHub' InstanceId' ExecutionId' NewEventCount' TotalEventCount' NewEvents' Episode' LatencyMs' SizeInBytes' ETag' IsCheckpointComplete' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,OrchestrationServiceStats,The method has 13 parameters. Parameters: Account' TaskHub' StorageRequests' MessagesSent' MessagesRead' MessagesUpdated' TableEntitiesWritten' TableEntitiesRead' PendingOrchestrators' PendingOrchestratorMessages' ActiveOrchestrators' ActiveActivities' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,RenewingMessage,The method has 10 parameters. Parameters: Account' TaskHub' InstanceId' ExecutionId' PartitionId' EventType' TaskEventId' MessageId' VisibilityTimeoutSeconds' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,MessageFailure,The method has 10 parameters. Parameters: Account' TaskHub' MessageId' InstanceId' ExecutionId' PartitionId' EventType' TaskEventId' Details' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,OrchestrationProcessingFailure,The method has 6 parameters. Parameters: Account' TaskHub' InstanceId' ExecutionId' Details' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,ReceivedOutOfOrderMessage,The method has 11 parameters. Parameters: Account' TaskHub' InstanceId' ExecutionId' PartitionId' EventType' TaskEventId' MessageId' Episode' LastCheckpointTime' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,PartitionManagerInfo,The method has 6 parameters. Parameters: Account' TaskHub' WorkerName' PartitionId' Details' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,PartitionManagerWarning,The method has 6 parameters. Parameters: Account' TaskHub' WorkerName' PartitionId' Details' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,PartitionManagerError,The method has 6 parameters. Parameters: account' taskHub' workerName' partitionId' exception' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,PartitionManagerError,The method has 6 parameters. Parameters: Account' TaskHub' WorkerName' PartitionId' Details' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,StartingLeaseRenewal,The method has 6 parameters. Parameters: Account' TaskHub' WorkerName' PartitionId' Token' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,LeaseRenewalResult,The method has 8 parameters. Parameters: Account' TaskHub' WorkerName' PartitionId' Success' Token' Details' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,LeaseRenewalFailed,The method has 7 parameters. Parameters: Account' TaskHub' WorkerName' PartitionId' Token' Details' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,LeaseAcquisitionStarted,The method has 5 parameters. Parameters: Account' TaskHub' WorkerName' PartitionId' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,LeaseAcquisitionSucceeded,The method has 5 parameters. Parameters: Account' TaskHub' WorkerName' PartitionId' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,LeaseAcquisitionFailed,The method has 5 parameters. Parameters: Account' TaskHub' WorkerName' PartitionId' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,AttemptingToStealLease,The method has 6 parameters. Parameters: Account' TaskHub' WorkerName' FromWorkerName' PartitionId' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,LeaseStealingSucceeded,The method has 6 parameters. Parameters: Account' TaskHub' WorkerName' FromWorkerName' PartitionId' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,LeaseStealingFailed,The method has 5 parameters. Parameters: Account' TaskHub' WorkerName' PartitionId' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,PartitionRemoved,The method has 6 parameters. Parameters: Account' TaskHub' WorkerName' PartitionId' Token' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,LeaseRemoved,The method has 6 parameters. Parameters: Account' TaskHub' WorkerName' PartitionId' Token' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,LeaseRemovalFailed,The method has 6 parameters. Parameters: Account' TaskHub' WorkerName' PartitionId' Token' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,InstanceStatusUpdate,The method has 8 parameters. Parameters: Account' TaskHub' InstanceId' ExecutionId' EventType' Episode' LatencyMs' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,FetchedInstanceStatus,The method has 6 parameters. Parameters: Account' TaskHub' InstanceId' ExecutionId' LatencyMs' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,SplitBrainDetected,The method has 10 parameters. Parameters: Account' TaskHub' InstanceId' ExecutionId' NewEventCount' TotalEventCount' NewEvents' LatencyMs' ETag' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,DiscardingWorkItem,The method has 9 parameters. Parameters: Account' TaskHub' InstanceId' ExecutionId' NewEventCount' TotalEventCount' NewEvents' Details' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,ProcessingMessage,The method has 13 parameters. Parameters: relatedActivityId' Account' TaskHub' EventType' TaskEventId' InstanceId' ExecutionId' MessageId' Age' SequenceNumber' Episode' IsExtendedSession' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,PurgeInstanceHistory,The method has 9 parameters. Parameters: Account' TaskHub' InstanceId' createdTimeFrom' createdTimeTo' runtimeStatus' RequestCount' LatencyMs' ExtensionVersion
Long Parameter List,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,GetBlobLeaseManager,The method has 6 parameters. Parameters: taskHub' workerName' account' leaseInterval' renewalInterval' stats
Long Parameter List,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,CompleteTaskOrchestrationWorkItemAsync,The method has 7 parameters. Parameters: workItem' newOrchestrationRuntimeState' outboundMessages' orchestratorMessages' timerMessages' continuedAsNewMessage' orchestrationState
Long Parameter List,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,CommitOutboundQueueMessages,The method has 5 parameters. Parameters: session' outboundMessages' orchestratorMessages' timerMessages' continuedAsNewMessage
Long Parameter List,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,GetOrchestrationStateAsync,The method has 6 parameters. Parameters: createdTimeFrom' createdTimeTo' runtimeStatus' top' continuationToken' cancellationToken
Long Parameter List,DurableTask.AzureStorage,MessageData,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\MessageData.cs,MessageData,The method has 5 parameters. Parameters: message' activityId' queueName' orchestrationEpisode' sender
Long Parameter List,DurableTask.AzureStorage,TimeoutHandler,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\TimeoutHandler.cs,ExecuteWithTimeout,The method has 5 parameters. Parameters: operationName' clientRequestId' account' taskHub' operation
Long Parameter List,DurableTask.AzureStorage.Messaging,OrchestrationSession,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Messaging\OrchestrationSession.cs,OrchestrationSession,The method has 10 parameters. Parameters: storageAccountName' taskHubName' orchestrationInstance' controlQueue' initialMessageBatch' runtimeState' eTag' lastCheckpointTime' idleTimeout' traceActivityId
Long Parameter List,DurableTask.AzureStorage.Partitioning,BlobLeaseManager,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\BlobLeaseManager.cs,BlobLeaseManager,The method has 10 parameters. Parameters: taskHubName' workerName' leaseContainerName' blobPrefix' consumerGroupName' storageClient' leaseInterval' renewInterval' skipBlobContainerCreation' stats
Long Parameter List,DurableTask.AzureStorage.Partitioning,PartitionManager<T>,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\PartitionManager.cs,PartitionManager,The method has 5 parameters. Parameters: accountName' taskHub' workerName' leaseManager' options
Long Parameter List,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,GetStateAsync,The method has 6 parameters. Parameters: createdTimeFrom' createdTimeTo' runtimeStatus' top' continuationToken' cancellationToken
Long Parameter List,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,UpdateStateAsync,The method has 5 parameters. Parameters: newRuntimeState' oldRuntimeState' instanceId' executionId' eTagValue
Long Parameter List,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,SetInstancesTablePropertyFromHistoryProperty,The method has 5 parameters. Parameters: historyEntity' instanceEntity' historyPropertyName' instancePropertyName' data
Long Parameter List,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,UploadHistoryBatch,The method has 9 parameters. Parameters: instanceId' executionId' historyEventBatch' historyEventNamesBuffer' numberOfTotalEvents' episodeNumber' estimatedBatchSizeInBytes' eTagValue' isFinalBatch
Long Parameter List,DurableTask.AzureStorage.Tracking,InstanceStoreBackedTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\InstanceStoreBackedTrackingStore.cs,UpdateStateAsync,The method has 5 parameters. Parameters: newRuntimeState' oldRuntimeState' instanceId' executionId' eTag
Long Parameter List,DurableTask.AzureStorage.Tracking,ITrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\ITrackingStore.cs,UpdateStateAsync,The method has 5 parameters. Parameters: newRuntimeState' oldRuntimeState' instanceId' executionId' eTag
Long Parameter List,DurableTask.AzureStorage.Tracking,ITrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\ITrackingStore.cs,GetStateAsync,The method has 6 parameters. Parameters: createdTimeFrom' createdTimeTo' runtimeStatus' top' continuationToken' cancellationToken
Long Parameter List,DurableTask.AzureStorage.Tracking,TrackingStoreBase,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\TrackingStoreBase.cs,GetStateAsync,The method has 6 parameters. Parameters: createdTimeFrom' createdTimeTo' runtimeStatus' top' continuationToken' cancellationToken
Long Parameter List,DurableTask.AzureStorage.Tracking,TrackingStoreBase,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\TrackingStoreBase.cs,UpdateStateAsync,The method has 5 parameters. Parameters: newRuntimeState' oldRuntimeState' instanceId' executionId' eTag
Long Identifier,DurableTask.AzureStorage,AzureStorageOrchestrationServiceSettings,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationServiceSettings.cs,,The length of the parameter DefaultMaxQueuePollingInterval is 30.
Long Identifier,DurableTask.AzureStorage,MessageManager,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\MessageManager.cs,,The length of the parameter MaxStorageQueuePayloadSizeInBytes is 33.
Long Identifier,DurableTask.AzureStorage,OrchestrationSessionManager,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\OrchestrationSessionManager.cs,,The length of the parameter pendingOrchestrationMessageBatches is 34.
Long Identifier,DurableTask.AzureStorage.Messaging,ControlQueue,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Messaging\ControlQueue.cs,GetMessagesAsync,The length of the parameter pendingOrchestratorMessageLimitReached is 38.
Long Identifier,DurableTask.AzureStorage.Monitoring,DisconnectedPerformanceMonitor,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Monitoring\DisconnectedPerformanceMonitor.cs,DisconnectedPerformanceMonitor,The length of the parameter maxPollingIntervalMilliseconds is 30.
Long Identifier,DurableTask.AzureStorage.Partitioning,PartitionManager<T>,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\PartitionManager.cs,,The length of the parameter leaseTakerCancellationTokenSource is 33.
Long Identifier,DurableTask.AzureStorage.Partitioning,PartitionManager<T>,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\PartitionManager.cs,,The length of the parameter leaseRenewerCancellationTokenSource is 35.
Long Identifier,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,RewindHistoryAsync,The length of the parameter orchestratorStartedFilterCondition is 34.
Long Identifier,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,UpdateStateAsync,The length of the parameter orchestrationInstanceUpdateStopwatch is 36.
Long Identifier,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,,The length of the parameter CheckpointCompletedTimestampProperty is 36.
Long Statement,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,PartitionManagerInfo,The length of the statement  "            this.WriteEvent(120' Account' TaskHub' WorkerName ?? string.Empty' PartitionId ?? string.Empty' Details' ExtensionVersion); " is 123.
Long Statement,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,PartitionManagerWarning,The length of the statement  "            this.WriteEvent(121' Account' TaskHub' WorkerName ?? string.Empty' PartitionId ?? string.Empty' Details ?? string.Empty' ExtensionVersion); " is 139.
Long Statement,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,PartitionManagerError,The length of the statement  "            this.WriteEvent(122' Account' TaskHub' WorkerName ?? string.Empty' PartitionId ?? string.Empty' Details ?? string.Empty' ExtensionVersion); " is 139.
Long Statement,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,ValidateSettings,The length of the statement  "                throw new ArgumentOutOfRangeException(nameof(settings)' "The number of partitions must be a positive integer and no greater than 16."); " is 135.
Long Statement,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,StartAsync,The length of the statement  "            // https://blogs.msdn.microsoft.com/windowsazurestorage/2010/06/25/nagles-algorithm-is-not-friendly-towards-small-requests/ " is 123.
Long Statement,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,GetControlQueuesAsync,The length of the statement  "            BlobLeaseManager inactiveLeaseManager = GetBlobLeaseManager(taskHub' "n/a"' account' TimeSpan.Zero' TimeSpan.Zero' null); " is 121.
Long Statement,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,CompleteTaskOrchestrationWorkItemAsync,The length of the statement  "                session.ETag = await this.trackingStore.UpdateStateAsync(runtimeState' workItem.OrchestrationRuntimeState' instanceId' executionId' session.ETag); " is 146.
Long Statement,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,CompleteTaskOrchestrationWorkItemAsync,The length of the statement  "                    this.orchestrationSessionManager.AddMessageToPendingOrchestration(session.ControlQueue' messages' session.TraceActivityId' CancellationToken.None); " is 147.
Long Statement,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,CreateTaskOrchestrationAsync,The length of the statement  "                throw new ArgumentException($"Only {nameof(EventType.ExecutionStarted)} messages are supported."' nameof(creationMessage)); " is 123.
Long Statement,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,CreateTaskOrchestrationAsync,The length of the statement  "            if (existingInstance != null && dedupeStatuses != null && dedupeStatuses.Contains(existingInstance.OrchestrationStatus)) " is 120.
Long Statement,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,CreateTaskOrchestrationAsync,The length of the statement  "                    throw new InvalidOperationException($"An Orchestration instance with the status {existingInstance.OrchestrationStatus} already exists."); " is 137.
Long Statement,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,GetOrchestrationStateAsync,The length of the statement  "            return await this.trackingStore.GetStateAsync(createdTimeFrom' createdTimeTo' runtimeStatus' top' continuationToken' cancellationToken); " is 136.
Long Statement,DurableTask.AzureStorage,MessageManager,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\MessageManager.cs,DeleteLargeMessageBlobs,The length of the statement  "                BlobResultSegment segment = await TimeoutHandler.ExecuteWithTimeout("DeleteLargeMessageBlobs"' context.ClientRequestID' cloudBlobContainer?.ServiceClient?.Credentials?.AccountName' null' () => " is 192.
Long Statement,DurableTask.AzureStorage,TimeoutHandler,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\TimeoutHandler.cs,ExecuteWithTimeout,The length of the statement  "                    var message = $"The operation '{operationName}' with id '{clientRequestId}' did not complete in '{DefaultTimeout}'. Terminating the process to mitigate potential deadlock."; " is 173.
Long Statement,DurableTask.AzureStorage.Messaging,ControlQueue,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Messaging\ControlQueue.cs,GetMessagesAsync,The length of the statement  "            using (var linkedCts = CancellationTokenSource.CreateLinkedTokenSource(this.releaseCancellationToken' cancellationToken)) " is 121.
Long Statement,DurableTask.AzureStorage.Messaging,ControlQueue,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Messaging\ControlQueue.cs,GetMessagesAsync,The length of the statement  "                        IEnumerable<CloudQueueMessage> batch = await TimeoutHandler.ExecuteWithTimeout("GetMessages"' context.ClientRequestID' storageAccountName' settings.TaskHubName' () => " is 166.
Long Statement,DurableTask.AzureStorage.Messaging,WorkItemQueue,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Messaging\WorkItemQueue.cs,GetMessageAsync,The length of the statement  "                    CloudQueueMessage queueMessage = await TimeoutHandler.ExecuteWithTimeout("GetMessage"' context.ClientRequestID' storageAccountName' settings.TaskHubName' () => " is 159.
Long Statement,DurableTask.AzureStorage.Monitoring,DisconnectedPerformanceMonitor,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Monitoring\DisconnectedPerformanceMonitor.cs,MakeScaleRecommendation,The length of the statement  "            return MakeScaleRecommendation(workerCount' this.PartitionCount' this.WorkItemQueueLatencies' this.ControlQueueLatencies); " is 122.
Long Statement,DurableTask.AzureStorage.Monitoring,PerformanceHeartbeat,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Monitoring\PerformanceHeartbeat.cs,ToString,The length of the statement  "                sb.Append(nameof(this.ControlQueueLengths)).Append(": ").Append(string.Join("'"' this.ControlQueueLengths)).Append("' "); " is 121.
Long Statement,DurableTask.AzureStorage.Monitoring,PerformanceHeartbeat,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Monitoring\PerformanceHeartbeat.cs,ToString,The length of the statement  "            sb.Append(nameof(this.ControlQueueLatencies)).Append(": ").Append(string.Join("'"' this.ControlQueueLatencies)).Append("' "); " is 125.
Long Statement,DurableTask.AzureStorage.Monitoring,ScaleRecommendation,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Monitoring\ScaleRecommendation.cs,ToString,The length of the statement  "            return $"{nameof(this.Action)}: {this.Action}' {nameof(KeepWorkersAlive)}: {this.KeepWorkersAlive}' {nameof(Reason)}: {this.Reason}"; " is 133.
Long Statement,DurableTask.AzureStorage.Partitioning,BlobLeaseManager,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\BlobLeaseManager.cs,ListLeasesAsync,The length of the statement  "                BlobResultSegment segment = await TimeoutHandler.ExecuteWithTimeout("ListLeases"' context.ClientRequestID' storageAccountName' taskHubName' () => " is 145.
Long Statement,DurableTask.AzureStorage.Partitioning,BlobLeaseManager,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\BlobLeaseManager.cs,CreateLeaseIfNotExistAsync,The length of the statement  "                        "CreateLeaseIfNotExistAsync - leaseContainerName: {0}' consumerGroupName: {1}' partitionId: {2}' blobPrefix: {3}' exception: {4}."' " is 131.
Long Statement,DurableTask.AzureStorage.Partitioning,BlobLeaseManager,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\BlobLeaseManager.cs,RenewAsync,The length of the statement  "                await leaseBlob.RenewLeaseAsync(accessCondition: AccessCondition.GenerateLeaseCondition(lease.Token)' options: this.renewRequestOptions' operationContext: null); " is 161.
Long Statement,DurableTask.AzureStorage.Partitioning,BlobLeaseManager,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\BlobLeaseManager.cs,AcquireAsync,The length of the statement  "                    lease.Token = await leaseBlob.ChangeLeaseAsync(newLeaseId' accessCondition: AccessCondition.GenerateLeaseCondition(lease.Token)); " is 129.
Long Statement,DurableTask.AzureStorage.Partitioning,BlobLeaseManager,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\BlobLeaseManager.cs,AcquireAsync,The length of the statement  "                await leaseBlob.UploadTextAsync(JsonConvert.SerializeObject(lease)' null' AccessCondition.GenerateLeaseCondition(lease.Token)' null' null); " is 139.
Long Statement,DurableTask.AzureStorage.Partitioning,BlobLeaseManager,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\BlobLeaseManager.cs,ReleaseAsync,The length of the statement  "                await leaseBlob.UploadTextAsync(JsonConvert.SerializeObject(copy)' null' AccessCondition.GenerateLeaseCondition(leaseId)' null' null); " is 134.
Long Statement,DurableTask.AzureStorage.Partitioning,BlobLeaseManager,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\BlobLeaseManager.cs,UpdateAsync,The length of the statement  "                await leaseBlob.UploadTextAsync(JsonConvert.SerializeObject(lease)' null' AccessCondition.GenerateLeaseCondition(lease.Token)' null' null); " is 139.
Long Statement,DurableTask.AzureStorage.Partitioning,BlobLeaseManager,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\BlobLeaseManager.cs,CreateTaskHubInfoIfNotExistAsync,The length of the statement  "                await this.taskHubInfoBlob.UploadTextAsync(serializedInfo' null' AccessCondition.GenerateIfNoneMatchCondition("*")' null' null); " is 128.
Long Statement,DurableTask.AzureStorage.Partitioning,PartitionManager<T>,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\PartitionManager.cs,LeaseRenewer,The length of the statement  "                    AnalyticsEventSource.Log.PartitionManagerError(this.accountName' this.taskHub' this.workerName' string.Empty' ex' Utils.ExtensionVersion); " is 138.
Long Statement,DurableTask.AzureStorage.Partitioning,PartitionManager<T>,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\PartitionManager.cs,LeaseTakerAsync,The length of the statement  "                    AnalyticsEventSource.Log.PartitionManagerError(this.accountName' this.taskHub' this.workerName' string.Empty' ex' Utils.ExtensionVersion); " is 138.
Long Statement,DurableTask.AzureStorage.Partitioning,PartitionManager<T>,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\PartitionManager.cs,StealLeaseAsync,The length of the statement  "                AnalyticsEventSource.Log.LeaseStealingFailed(this.accountName' this.taskHub' this.workerName' lease.PartitionId' Utils.ExtensionVersion); " is 137.
Long Statement,DurableTask.AzureStorage.Partitioning,PartitionManager<T>,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\PartitionManager.cs,StealLeaseAsync,The length of the statement  "                AnalyticsEventSource.Log.PartitionManagerError(this.accountName' this.taskHub' this.workerName' lease.PartitionId' ex' Utils.ExtensionVersion); " is 143.
Long Statement,DurableTask.AzureStorage.Partitioning,PartitionManager<T>,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\PartitionManager.cs,AddLeaseAsync,The length of the statement  "                    AnalyticsEventSource.Log.PartitionManagerError(this.accountName' this.taskHub' this.workerName' lease.PartitionId' ex' Utils.ExtensionVersion); " is 143.
Long Statement,DurableTask.AzureStorage.Partitioning,PartitionManager<T>,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\PartitionManager.cs,RemoveLeaseAsync,The length of the statement  "            if (lease != null && this.currentlyOwnedShards != null && this.currentlyOwnedShards.TryRemove(lease.PartitionId' out lease)) " is 124.
Long Statement,DurableTask.AzureStorage.Partitioning,PartitionManager<T>,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\PartitionManager.cs,RemoveLeaseAsync,The length of the statement  "                    AnalyticsEventSource.Log.PartitionManagerError(this.accountName' this.taskHub' this.workerName' lease.PartitionId' ex' Utils.ExtensionVersion); " is 143.
Long Statement,DurableTask.AzureStorage.Partitioning,PartitionManager<T>,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\PartitionManager.cs,RemoveLeaseAsync,The length of the statement  "                        AnalyticsEventSource.Log.PartitionManagerError(this.accountName' this.taskHub' this.workerName' lease.PartitionId' ex' Utils.ExtensionVersion); " is 143.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,ExistsAsync,The length of the statement  "            return this.HistoryTable != null && this.InstancesTable != null && await this.HistoryTable.ExistsAsync() && await this.InstancesTable.ExistsAsync(); " is 148.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,GetHistoryEntitiesResponseInfoAsync,The length of the statement  "                // e.g. "PartitionKey eq 'c138dd969a1e4a699b0644c7d8279f81' and (RowKey eq 'sentinel' or ExecutionId eq '85f05ce1494c4a29989f64d3fe0f9089')" " is 140.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,RewindHistoryAsync,The length of the statement  "            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// " is 130.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,RewindHistoryAsync,The length of the statement  "            // 3. Identifies sub-orchestration failure(s) from parent instance and calls RewindHistoryAsync recursively on failed sub-orchestration child instance(s) " is 153.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,RewindHistoryAsync,The length of the statement  "            // 5. Returns "failedLeaves"' a list of the deepest failed instances on each failed branch to revive with RewindEvent messages " is 126.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,RewindHistoryAsync,The length of the statement  "            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// " is 132.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,RewindHistoryAsync,The length of the statement  "            orchestratorStartedFilterCondition.Append(PartitionKeyProperty).Append(" eq ").Append(Quote).Append(instanceId).Append(Quote); // = TableQuery.GenerateFilterCondition("PartitionKey"' QueryComparisons.Equal' instanceId); " is 219.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,RewindHistoryAsync,The length of the statement  "            orchestratorStartedFilterCondition.Append(" and EventType eq ").Append(Quote).Append("OrchestratorStarted").Append(Quote); " is 122.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,RewindHistoryAsync,The length of the statement  "            var orchestratorStartedEntities = await this.QueryHistoryAsync(orchestratorStartedFilterCondition.ToString()' instanceId' cancellationToken); " is 141.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,RewindHistoryAsync,The length of the statement  "            rowsToUpdateFilterCondition.Append(" or EventType eq ").Append(Quote).Append("SubOrchestrationInstanceFailed").Append(Quote).Append(")"); " is 137.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,RewindHistoryAsync,The length of the statement  "            var entitiesToClear = await this.QueryHistoryAsync(rowsToUpdateFilterCondition.ToString()' instanceId' cancellationToken); " is 122.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,RewindHistoryAsync,The length of the statement  "                    taskScheduledEntities[0].Properties["Reason"] = new EntityProperty("Rewound: " + taskScheduledEntities[0].Properties["EventType"].StringValue); " is 143.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,RewindHistoryAsync,The length of the statement  "                    soFilterCondition.Append(" and EventType eq ").Append(Quote).Append(nameof(EventType.SubOrchestrationInstanceCreated)).Append(Quote); " is 133.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,RewindHistoryAsync,The length of the statement  "                    subOrchesratrationEntities[0].Properties["Reason"] = new EntityProperty("Rewound: " + subOrchesratrationEntities[0].Properties["EventType"].StringValue); " is 153.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,GetStateAsync,The length of the statement  "            TableResult orchestration = await this.InstancesTable.ExecuteAsync(TableOperation.Retrieve<OrchestrationInstanceStatus>(instanceId' ""' columnsToRetrieve)); " is 156.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,GetStateAsync,The length of the statement  "            return this.QueryStateAsync(OrchestrationInstanceStatusQueryCondition.Parse(createdTimeFrom' createdTimeTo' runtimeStatus) " is 122.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,QueryStateAsync,The length of the statement  "            IEnumerable<OrchestrationState> result = await Task.WhenAll(segment.Select( status => this.ConvertFromAsync(status' status.PartitionKey))); " is 139.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,QueryStateAsync,The length of the statement  "                TableQuerySegment<OrchestrationInstanceStatus> segment = await this.InstancesTable.ExecuteQuerySegmentedAsync(query' token); " is 124.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,DeleteHistoryAsync,The length of the statement  "            TableQuery<OrchestrationInstanceStatus> query = OrchestrationInstanceStatusQueryCondition.Parse(createdTimeFrom' createdTimeTo' runtimeStatus) " is 142.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,DeleteHistoryAsync,The length of the statement  "                TableQuerySegment<OrchestrationInstanceStatus> segment = await this.InstancesTable.ExecuteQuerySegmentedAsync(query' token); " is 124.
Long Statement,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,DeleteAllDataForOrchestrationInstance,The length of the statement  "                List<DynamicTableEntity> batchForDeletion = historyEntitiesResponseInfo.HistoryEventEntities.Skip(pageOffset).Take(100).ToList(); " is 129.
Long Statement,DurableTask.AzureStorage.Tracking,InstanceStoreBackedTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\InstanceStoreBackedTrackingStore.cs,GetHistoryEventsAsync,The length of the statement  "                expectedExecutionId = (await instanceStore.GetOrchestrationStateAsync(instanceId' false)).FirstOrDefault()?.State.OrchestrationInstance.ExecutionId; " is 148.
Long Statement,DurableTask.AzureStorage.Tracking,InstanceStoreBackedTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\InstanceStoreBackedTrackingStore.cs,GetStateAsync,The length of the statement  "            IEnumerable<OrchestrationStateInstanceEntity> states = await instanceStore.GetOrchestrationStateAsync(instanceId' allExecutions); " is 129.
Long Statement,DurableTask.AzureStorage.Tracking,OrchestrationInstanceStatusQueryCondition,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\OrchestrationInstanceStatusQueryCondition.cs,GetConditions,The length of the statement  "                conditions.Add(TableQuery.GenerateFilterConditionForDate("CreatedTime"' QueryComparisons.GreaterThanOrEqual' new DateTimeOffset(this.CreatedTimeFrom))); " is 152.
Long Statement,DurableTask.AzureStorage.Tracking,OrchestrationInstanceStatusQueryCondition,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\OrchestrationInstanceStatusQueryCondition.cs,GetConditions,The length of the statement  "                conditions.Add(TableQuery.GenerateFilterConditionForDate("CreatedTime"' QueryComparisons.LessThanOrEqual' new DateTimeOffset(this.CreatedTimeTo))); " is 147.
Long Statement,DurableTask.AzureStorage.Tracking,OrchestrationInstanceStatusQueryCondition,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\OrchestrationInstanceStatusQueryCondition.cs,GetConditions,The length of the statement  "                string runtimeCondition = this.RuntimeStatus.Select(x => TableQuery.GenerateFilterCondition("RuntimeStatus"' QueryComparisons.Equal' x.ToString())) " is 147.
Long Statement,DurableTask.AzureStorage.Tracking,OrchestrationInstanceStatusQueryCondition,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\OrchestrationInstanceStatusQueryCondition.cs,GetConditions,The length of the statement  "                string taskHubCondition = this.TaskHubNames.Select(x => TableQuery.GenerateFilterCondition("TaskHubName"' QueryComparisons.Equal' x.ToString())) " is 144.
Complex Conditional,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,WaitForOrchestrationAsync,The conditional expression  "state == null ||                      state.OrchestrationStatus == OrchestrationStatus.Running ||                      state.OrchestrationStatus == OrchestrationStatus.Pending ||                      state.OrchestrationStatus == OrchestrationStatus.ContinuedAsNew"  is complex.
Complex Conditional,DurableTask.AzureStorage.Tracking,OrchestrationInstanceStatusQueryCondition,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\OrchestrationInstanceStatusQueryCondition.cs,ToTableQuery,The conditional expression  "!((this.RuntimeStatus == null || (!this.RuntimeStatus.Any())) &&                   this.CreatedTimeFrom == default(DateTime) &&                   this.CreatedTimeTo == default(DateTime) &&                  this.TaskHubNames == null)"  is complex.
Empty Catch Block,DurableTask.AzureStorage,OrchestrationSessionManager,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\OrchestrationSessionManager.cs,ScheduleOrchestrationStatePrefetch,The method has an empty catch block.
Empty Catch Block,DurableTask.AzureStorage.Partitioning,BlobLeaseManager,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Partitioning\BlobLeaseManager.cs,CreateTaskHubInfoIfNotExistAsync,The method has an empty catch block.
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,SendingMessage,The following statement contains a magic number: this.WriteEventWithRelatedActivityId(                  101'                  relatedActivityId'                  Account'                  TaskHub'                  EventType'                  TaskEventId'                  InstanceId ?? string.Empty'                  ExecutionId ?? string.Empty'                  SizeInBytes'                  PartitionId'                  TargetInstanceId'                  TargetExecutionId ?? string.Empty'                  SequenceNumber'                  Episode'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,ReceivedMessage,The following statement contains a magic number: this.WriteEventWithRelatedActivityId(                  102'                  relatedActivityId'                  Account'                  TaskHub'                  EventType'                  TaskEventId'                  InstanceId'                  ExecutionId ?? string.Empty'                  MessageId'                  Age'                  DequeueCount'                  NextVisibleTime'                  SizeInBytes'                  PartitionId'                  SequenceNumber'                  Episode'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,DeletingMessage,The following statement contains a magic number: this.WriteEvent(                  103'                  Account'                  TaskHub'                  EventType'                  TaskEventId'                  MessageId'                  InstanceId'                  ExecutionId ?? string.Empty'                  PartitionId'                  SequenceNumber'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,AbandoningMessage,The following statement contains a magic number: this.WriteEvent(                  104'                  Account'                  TaskHub'                  EventType'                  TaskEventId'                  MessageId'                  InstanceId'                  ExecutionId ?? string.Empty'                  PartitionId'                  SequenceNumber'                  VisibilityTimeoutSeconds'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,AssertFailure,The following statement contains a magic number: this.WriteEvent(105' Account' TaskHub' Details' ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,MessageGone,The following statement contains a magic number: this.WriteEvent(                  106'                  Account'                  TaskHub'                  MessageId'                  InstanceId'                  ExecutionId ?? string.Empty'                  PartitionId'                  EventType'                  TaskEventId'                  Details'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,GeneralError,The following statement contains a magic number: this.WriteEvent(107' Account' TaskHub' Details' ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,DuplicateMessageDetected,The following statement contains a magic number: this.WriteEvent(                  108'                  Account'                  TaskHub'                  MessageId'                  InstanceId'                  ExecutionId ?? string.Empty'                  PartitionId'                  DequeueCount'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,PoisonMessageDetected,The following statement contains a magic number: this.WriteEvent(                  109'                  Account'                  TaskHub'                  MessageId'                  InstanceId'                  ExecutionId ?? string.Empty'                  PartitionId'                  DequeueCount'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,FetchedInstanceHistory,The following statement contains a magic number: this.WriteEvent(                  110'                  Account'                  TaskHub'                  InstanceId'                  ExecutionId ?? string.Empty'                  EventCount'                  Episode'                  RequestCount'                  LatencyMs'                  ETag ?? string.Empty'                  LastCheckpointTime'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,AppendedInstanceHistory,The following statement contains a magic number: this.WriteEvent(                  111'                  Account'                  TaskHub'                  InstanceId'                  ExecutionId ?? string.Empty'                  NewEventCount'                  TotalEventCount'                  NewEvents'                  Episode'                  LatencyMs'                  SizeInBytes'                  ETag ?? string.Empty'                  IsCheckpointComplete'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,OrchestrationServiceStats,The following statement contains a magic number: this.WriteEvent(                  112'                  Account'                  TaskHub'                  StorageRequests'                  MessagesSent'                  MessagesRead'                  MessagesUpdated'                  TableEntitiesWritten'                  TableEntitiesRead'                  PendingOrchestrators'                  PendingOrchestratorMessages'                  ActiveOrchestrators'                  ActiveActivities'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,RenewingMessage,The following statement contains a magic number: this.WriteEvent(                  113'                  Account'                  TaskHub'                  InstanceId'                  ExecutionId ?? string.Empty'                  PartitionId'                  EventType'                  TaskEventId'                  MessageId'                  VisibilityTimeoutSeconds'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,MessageFailure,The following statement contains a magic number: this.WriteEvent(                  114'                  Account'                  TaskHub'                  MessageId'                  InstanceId'                  ExecutionId ?? string.Empty'                  PartitionId'                  EventType'                  TaskEventId'                  Details'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,OrchestrationProcessingFailure,The following statement contains a magic number: this.WriteEvent(                  115'                  Account'                  TaskHub'                  InstanceId'                  ExecutionId ?? string.Empty'                  Details'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,PendingOrchestratorMessageLimitReached,The following statement contains a magic number: this.WriteEvent(                  116'                  Account'                  TaskHub'                  PendingOrchestratorMessages'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,WaitingForMoreMessages,The following statement contains a magic number: this.WriteEvent(                  117'                  Account'                  TaskHub'                  PartitionId'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,ReceivedOutOfOrderMessage,The following statement contains a magic number: this.WriteEvent(                  118'                  Account'                  TaskHub'                  InstanceId'                  ExecutionId ?? string.Empty'                  PartitionId'                  EventType'                  TaskEventId'                  MessageId'                  Episode'                  LastCheckpointTime'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,PartitionManagerInfo,The following statement contains a magic number: this.WriteEvent(120' Account' TaskHub' WorkerName ?? string.Empty' PartitionId ?? string.Empty' Details' ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,PartitionManagerWarning,The following statement contains a magic number: this.WriteEvent(121' Account' TaskHub' WorkerName ?? string.Empty' PartitionId ?? string.Empty' Details ?? string.Empty' ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,PartitionManagerError,The following statement contains a magic number: this.WriteEvent(122' Account' TaskHub' WorkerName ?? string.Empty' PartitionId ?? string.Empty' Details ?? string.Empty' ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,StartingLeaseRenewal,The following statement contains a magic number: this.WriteEvent(                  123'                  Account'                  TaskHub'                  WorkerName ?? string.Empty'                  PartitionId ?? string.Empty'                  Token ?? string.Empty'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,LeaseRenewalResult,The following statement contains a magic number: this.WriteEvent(                  124'                  Account'                  TaskHub'                  WorkerName ?? string.Empty'                  PartitionId ?? string.Empty'                  Success'                  Token ?? string.Empty'                  Details ?? string.Empty'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,LeaseRenewalFailed,The following statement contains a magic number: this.WriteEvent(                  125'                  Account'                  TaskHub'                  WorkerName ?? string.Empty'                  PartitionId ?? string.Empty'                  Token ?? string.Empty'                  Details ?? string.Empty'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,LeaseAcquisitionStarted,The following statement contains a magic number: this.WriteEvent(126' Account' TaskHub' WorkerName ?? string.Empty' PartitionId ?? string.Empty' ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,LeaseAcquisitionSucceeded,The following statement contains a magic number: this.WriteEvent(127' Account' TaskHub' WorkerName ?? string.Empty' PartitionId ?? string.Empty' ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,LeaseAcquisitionFailed,The following statement contains a magic number: this.WriteEvent(128' Account' TaskHub' WorkerName ?? string.Empty' PartitionId ?? string.Empty' ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,AttemptingToStealLease,The following statement contains a magic number: this.WriteEvent(                  129'                  Account'                  TaskHub'                  WorkerName ?? string.Empty'                  FromWorkerName ?? string.Empty'                  PartitionId ?? string.Empty'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,LeaseStealingSucceeded,The following statement contains a magic number: this.WriteEvent(                  130'                  Account'                  TaskHub'                  WorkerName ?? string.Empty'                  FromWorkerName ?? string.Empty'                  PartitionId ?? string.Empty'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,LeaseStealingFailed,The following statement contains a magic number: this.WriteEvent(131' Account' TaskHub' WorkerName ?? string.Empty' PartitionId ?? string.Empty' ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,PartitionRemoved,The following statement contains a magic number: this.WriteEvent(                  132'                  Account'                  TaskHub'                  WorkerName ?? string.Empty'                  PartitionId ?? string.Empty'                  Token ?? string.Empty'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,LeaseRemoved,The following statement contains a magic number: this.WriteEvent(                  133'                  Account'                  TaskHub'                  WorkerName ?? string.Empty'                  PartitionId ?? string.Empty'                  Token ?? string.Empty'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,LeaseRemovalFailed,The following statement contains a magic number: this.WriteEvent(                  134'                  Account'                  TaskHub'                  WorkerName ?? string.Empty'                  PartitionId ?? string.Empty'                  Token ?? string.Empty'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,InstanceStatusUpdate,The following statement contains a magic number: this.WriteEvent(                  135'                  Account'                  TaskHub'                  InstanceId'                  ExecutionId ?? string.Empty'                  EventType'                  Episode'                  LatencyMs'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,FetchedInstanceStatus,The following statement contains a magic number: this.WriteEvent(136' Account' TaskHub' InstanceId' ExecutionId ?? string.Empty' LatencyMs' ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,GeneralWarning,The following statement contains a magic number: this.WriteEvent(137' Account' TaskHub' Details' ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,SplitBrainDetected,The following statement contains a magic number: this.WriteEvent(                  138'                  Account'                  TaskHub'                  InstanceId'                  ExecutionId ?? string.Empty'                  NewEventCount'                  TotalEventCount'                  NewEvents'                  LatencyMs'                  ETag ?? string.Empty'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,DiscardingWorkItem,The following statement contains a magic number: this.WriteEvent(                  139'                  Account'                  TaskHub'                  InstanceId'                  ExecutionId ?? string.Empty'                  NewEventCount'                  TotalEventCount'                  NewEvents'                  Details'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,ProcessingMessage,The following statement contains a magic number: this.WriteEventWithRelatedActivityId(                  140'                  relatedActivityId'                  Account'                  TaskHub'                  EventType'                  TaskEventId'                  InstanceId'                  ExecutionId ?? string.Empty'                  MessageId'                  Age'                  SequenceNumber'                  Episode'                  IsExtendedSession'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AnalyticsEventSource,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AnalyticsEventSource.cs,PurgeInstanceHistory,The following statement contains a magic number: this.WriteEvent(                  141'                  Account'                  TaskHub'                  InstanceId'                  createdTimeFrom'                  createdTimeTo'                  runtimeStatus'                  RequestCount'                  LatencyMs'                  ExtensionVersion);
Magic Number,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,ValidateSettings,The following statement contains a magic number: settings.ControlQueueBatchSize > 32
Magic Number,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,ValidateSettings,The following statement contains a magic number: settings.PartitionCount < 1 || settings.PartitionCount > 16
Magic Number,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,DeleteAsync,The following statement contains a magic number: tasks.Add(this.leaseManager.DeleteAllAsync().ContinueWith(t =>              {                  if (t.Exception?.InnerExceptions?.Count > 0)                  {                      foreach (Exception e in t.Exception.InnerExceptions)                      {                          StorageException storageException = e as StorageException;                          if (storageException == null || storageException.RequestInformation.HttpStatusCode != 404)                          {                              ExceptionDispatchInfo.Capture(e).Throw();                          }                      }                  }              }));
Magic Number,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,LockNextTaskOrchestrationWorkItemAsync,The following statement contains a magic number: var eventListBuilder = new StringBuilder(orchestrationWorkItem.NewMessages.Count * 40);
Magic Number,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,GetDelayInSecondsAfterOnFetchException,The following statement contains a magic number: return 10;
Magic Number,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,GetDelayInSecondsAfterOnProcessException,The following statement contains a magic number: return 10;
Magic Number,DurableTask.AzureStorage,AzureStorageOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\AzureStorageOrchestrationService.cs,WaitForOrchestrationAsync,The following statement contains a magic number: TimeSpan statusPollingInterval = TimeSpan.FromSeconds(2);
Magic Number,DurableTask.AzureStorage,OrchestrationSessionManager,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\OrchestrationSessionManager.cs,ScheduleOrchestrationStatePrefetch,The following statement contains a magic number: this.fetchRuntimeStateQueue.EnqueueAndDispatch(async delegate              {                  AnalyticsEventSource.SetLogicalTraceActivityId(traceActivityId);                    try                  {                      if (batch.OrchestrationState == null)                      {                          OrchestrationHistory history = await this.trackingStore.GetHistoryEventsAsync(                             batch.OrchestrationInstanceId'                             batch.OrchestrationExecutionId'                             cancellationToken);                            batch.OrchestrationState = new OrchestrationRuntimeState(history.Events);                          batch.ETag = history.ETag;                          batch.LastCheckpointTime = history.LastCheckpointTime;                      }                        this.readyForProcessingQueue.Enqueue(node);                  }                  catch (OperationCanceledException)                  {                      // shutting down                  }                  catch (Exception e)                  {                      AnalyticsEventSource.Log.OrchestrationProcessingFailure(                          this.storageAccountName'                          this.settings.TaskHubName'                          batch.OrchestrationInstanceId'                          batch.OrchestrationExecutionId'                          e.ToString()'                          Utils.ExtensionVersion);                        // Sleep briefly to avoid a tight failure loop.                      await Task.Delay(TimeSpan.FromSeconds(5));                        // This is a background operation so failure is not an option. All exceptions must be handled.                      // To avoid starvation' we need to re-enqueue this async operation instead of retrying in a loop.                      this.ScheduleOrchestrationStatePrefetch(node' traceActivityId' cancellationToken);                  }              });
Magic Number,DurableTask.AzureStorage,TimeoutHandler,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\TimeoutHandler.cs,ExecuteWithTimeout,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(3));
Magic Number,DurableTask.AzureStorage,Utils,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Utils.cs,ParallelForEachAsync,The following statement contains a magic number: var tasks = new List<Task>(32);
Magic Number,DurableTask.AzureStorage.Messaging,OrchestrationSession,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Messaging\OrchestrationSession.cs,IsOutOfOrderMessage,The following statement contains a magic number: this.IsNonexistantInstance() && message.OriginalQueueMessage.DequeueCount > 5
Magic Number,DurableTask.AzureStorage.Messaging,TaskHubQueue,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Messaging\TaskHubQueue.cs,TaskHubQueue,The following statement contains a magic number: TimeSpan minPollingDelay = TimeSpan.FromMilliseconds(50);
Magic Number,DurableTask.AzureStorage.Messaging,TaskHubQueue,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Messaging\TaskHubQueue.cs,AbandonMessageAsync,The following statement contains a magic number: const int maxSecondsToWait = 600;
Magic Number,DurableTask.AzureStorage.Messaging,TaskHubQueue,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Messaging\TaskHubQueue.cs,AbandonMessageAsync,The following statement contains a magic number: int numSecondsToWait = Math.Min((int) Math.Pow(2' queueMessage.DequeueCount)' maxSecondsToWait);
Magic Number,DurableTask.AzureStorage.Messaging,TaskHubQueue,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Messaging\TaskHubQueue.cs,HandleMessagingExceptions,The following statement contains a magic number: storageException?.RequestInformation?.HttpStatusCode == 404
Magic Number,DurableTask.AzureStorage.Monitoring,DisconnectedPerformanceMonitor,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Monitoring\DisconnectedPerformanceMonitor.cs,DisconnectedPerformanceMonitor,The following statement contains a magic number: this.highLatencyThreshold = Math.Min(this.maxPollingLatency' 1000);
Magic Number,DurableTask.AzureStorage.Monitoring,PerformanceHeartbeat,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Monitoring\PerformanceHeartbeat.cs,ToString,The following statement contains a magic number: var sb = new StringBuilder(1024);
Magic Number,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,GetHistoryEntitiesResponseInfoAsync,The following statement contains a magic number: var filterCondition = new StringBuilder(200);
Magic Number,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,GetHistoryEntitiesResponseInfoAsync,The following statement contains a magic number: var historyEventEntities = new List<DynamicTableEntity>(100);
Magic Number,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,QueryHistoryAsync,The following statement contains a magic number: var entities = new List<DynamicTableEntity>(100);
Magic Number,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,RewindHistoryAsync,The following statement contains a magic number: var orchestratorStartedFilterCondition = new StringBuilder(200);
Magic Number,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,RewindHistoryAsync,The following statement contains a magic number: var rowsToUpdateFilterCondition = new StringBuilder(200);
Magic Number,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,RewindHistoryAsync,The following statement contains a magic number: var tsFilterCondition = new StringBuilder(200);
Magic Number,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,RewindHistoryAsync,The following statement contains a magic number: var soFilterCondition = new StringBuilder(200);
Magic Number,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,QueryStateAsync,The following statement contains a magic number: var orchestrationStates = new List<OrchestrationState>(100);
Magic Number,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,DeleteHistoryAsync,The following statement contains a magic number: var orchestrationStates = new List<OrchestrationInstanceStatus>(100);
Magic Number,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,DeleteAllDataForOrchestrationInstance,The following statement contains a magic number: List<DynamicTableEntity> batchForDeletion = historyEntitiesResponseInfo.HistoryEventEntities.Skip(pageOffset).Take(100).ToList();
Magic Number,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,UpdateStateAsync,The following statement contains a magic number: var newEventListBuffer = new StringBuilder(4000);
Magic Number,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,UpdateStateAsync,The following statement contains a magic number: historyEventBatch.Count == 99 || estimatedBytes > 3 * 1024 * 1024
Magic Number,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,UpdateStateAsync,The following statement contains a magic number: historyEventBatch.Count == 99 || estimatedBytes > 3 * 1024 * 1024
Magic Number,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,UpdateStateAsync,The following statement contains a magic number: historyEventBatch.Count == 99 || estimatedBytes > 3 * 1024 * 1024
Magic Number,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,UpdateStateAsync,The following statement contains a magic number: historyEventBatch.Count == 99 || estimatedBytes > 3 * 1024 * 1024
Magic Number,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,GetEstimatedByteCount,The following statement contains a magic number: int estimatedByteCount = 1024;
Missing Default,DurableTask.AzureStorage.Tracking,AzureTableTrackingStore,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.AzureStorage\Tracking\AzureTableTrackingStore.cs,UpdateStateAsync,The following switch statement is missing a default case: switch (historyEvent.EventType)                  {                      case EventType.ExecutionStarted:                          orchestratorEventType = historyEvent.EventType;                          ExecutionStartedEvent executionStartedEvent = (ExecutionStartedEvent)historyEvent;                          instanceEntity.Properties["Name"] = new EntityProperty(executionStartedEvent.Name);                          instanceEntity.Properties["Version"] = new EntityProperty(executionStartedEvent.Version);                          instanceEntity.Properties["CreatedTime"] = new EntityProperty(executionStartedEvent.Timestamp);                          instanceEntity.Properties["RuntimeStatus"] = new EntityProperty(OrchestrationStatus.Running.ToString());                          this.SetInstancesTablePropertyFromHistoryProperty(                              historyEntity'                              instanceEntity'                              historyPropertyName: nameof(executionStartedEvent.Input)'                              instancePropertyName: InputProperty'                              data: executionStartedEvent.Input);                          break;                      case EventType.ExecutionCompleted:                          orchestratorEventType = historyEvent.EventType;                          ExecutionCompletedEvent executionCompleted = (ExecutionCompletedEvent)historyEvent;                          instanceEntity.Properties["RuntimeStatus"] = new EntityProperty(executionCompleted.OrchestrationStatus.ToString());                          this.SetInstancesTablePropertyFromHistoryProperty(                              historyEntity'                              instanceEntity'                              historyPropertyName: nameof(executionCompleted.Result)'                              instancePropertyName: OutputProperty'                              data: executionCompleted.Result);                          break;                      case EventType.ExecutionTerminated:                          orchestratorEventType = historyEvent.EventType;                          ExecutionTerminatedEvent executionTerminatedEvent = (ExecutionTerminatedEvent)historyEvent;                          instanceEntity.Properties["RuntimeStatus"] = new EntityProperty(OrchestrationStatus.Terminated.ToString());                          this.SetInstancesTablePropertyFromHistoryProperty(                              historyEntity'                              instanceEntity'                              historyPropertyName: nameof(executionTerminatedEvent.Input)'                              instancePropertyName: OutputProperty'                              data: executionTerminatedEvent.Input);                          break;                      case EventType.ContinueAsNew:                          orchestratorEventType = historyEvent.EventType;                          ExecutionCompletedEvent executionCompletedEvent = (ExecutionCompletedEvent)historyEvent;                          instanceEntity.Properties["RuntimeStatus"] = new EntityProperty(OrchestrationStatus.ContinuedAsNew.ToString());                          this.SetInstancesTablePropertyFromHistoryProperty(                              historyEntity'                              instanceEntity'                              historyPropertyName: nameof(executionCompletedEvent.Result)'                              instancePropertyName: OutputProperty'                              data: executionCompletedEvent.Result);                          break;                  }
