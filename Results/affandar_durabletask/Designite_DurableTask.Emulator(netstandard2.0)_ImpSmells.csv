Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DurableTask.Emulator,LocalOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.Emulator\LocalOrchestrationService.cs,WaitForOrchestrationAsync,Cyclomatic complexity of the method is 12
Complex Method,DurableTask.Emulator,LocalOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.Emulator\LocalOrchestrationService.cs,CompleteTaskOrchestrationWorkItemAsync,Cyclomatic complexity of the method is 8
Long Parameter List,DurableTask.Emulator,LocalOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.Emulator\LocalOrchestrationService.cs,CompleteTaskOrchestrationWorkItemAsync,The method has 7 parameters. Parameters: workItem' newOrchestrationRuntimeState' outboundMessages' orchestratorMessages' workItemTimerMessages' continuedAsNewMessage' state
Long Statement,DurableTask.Emulator,LocalOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.Emulator\LocalOrchestrationService.cs,CreateTaskOrchestrationAsync,The length of the statement  "                if (!this.instanceStore.TryGetValue(creationMessage.OrchestrationInstance.InstanceId' out Dictionary<string' OrchestrationState> ed)) " is 133.
Long Statement,DurableTask.Emulator,LocalOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.Emulator\LocalOrchestrationService.cs,CreateTaskOrchestrationAsync,The length of the statement  "                OrchestrationState latestState = ed.Values.OrderBy(state => state.CreatedTime).FirstOrDefault(state => state.OrchestrationStatus != OrchestrationStatus.ContinuedAsNew); " is 168.
Long Statement,DurableTask.Emulator,LocalOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.Emulator\LocalOrchestrationService.cs,CreateTaskOrchestrationAsync,The length of the statement  "                    throw new OrchestrationAlreadyExistsException($"An orchestration with id '{creationMessage.OrchestrationInstance.InstanceId}' already exists. It is in state {latestState.OrchestrationStatus}"); " is 193.
Long Statement,DurableTask.Emulator,LocalOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.Emulator\LocalOrchestrationService.cs,CommitState,The length of the statement  "            if (!this.instanceStore.TryGetValue(runtimeState.OrchestrationInstance.InstanceId' out Dictionary<string' OrchestrationState> mapState)) " is 136.
Long Statement,DurableTask.Emulator,LocalOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.Emulator\LocalOrchestrationService.cs,DeserializeOrchestrationRuntimeState,The length of the statement  "            var events = JsonConvert.DeserializeObject<IList<HistoryEvent>>(serializedState' new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.Auto }); " is 154.
Long Statement,DurableTask.Emulator,PeekLockSessionQueue,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.Emulator\PeekLockSessionQueue.cs,DropSession,The length of the statement  "                TaskSession taskSession = this.lockedSessionQueue.Find((ts) => string.Equals(ts.Id' id' StringComparison.InvariantCultureIgnoreCase)); " is 134.
Long Statement,DurableTask.Emulator,PeekLockSessionQueue,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.Emulator\PeekLockSessionQueue.cs,CompleteSession,The length of the statement  "                TaskSession taskSession = this.lockedSessionQueue.Find((ts) => string.Equals(ts.Id' id' StringComparison.InvariantCultureIgnoreCase)); " is 134.
Long Statement,DurableTask.Emulator,PeekLockSessionQueue,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.Emulator\PeekLockSessionQueue.cs,AbandonSession,The length of the statement  "                TaskSession taskSession = this.lockedSessionQueue.Find((ts) => string.Equals(ts.Id' id' StringComparison.InvariantCultureIgnoreCase)); " is 134.
Long Statement,DurableTask.Emulator,PeekLockSessionQueue,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.Emulator\PeekLockSessionQueue.cs,AbandonSession,The length of the statement  "                // TODO : note that this we are adding to the tail of the queue rather than head' which is what sbus would actually do (AFFANDAR) " is 129.
Magic Number,DurableTask.Emulator,LocalOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.Emulator\LocalOrchestrationService.cs,LockNextTaskOrchestrationWorkItemAsync,The following statement contains a magic number: var wi = new TaskOrchestrationWorkItem              {                  NewMessages = taskSession.Messages.ToList()'                  InstanceId = taskSession.Id'                  LockedUntilUtc = DateTime.UtcNow.AddMinutes(5)'                  OrchestrationRuntimeState =                      DeserializeOrchestrationRuntimeState(taskSession.SessionState) ??                      new OrchestrationRuntimeState()'              };
Magic Number,DurableTask.Emulator,LocalOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.Emulator\LocalOrchestrationService.cs,RenewTaskOrchestrationWorkItemLockAsync,The following statement contains a magic number: workItem.LockedUntilUtc = workItem.LockedUntilUtc.AddMinutes(5);
Magic Number,DurableTask.Emulator,LocalOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.Emulator\LocalOrchestrationService.cs,LockNextTaskActivityWorkItem,The following statement contains a magic number: return new TaskActivityWorkItem              {                  // for the in memory provider we will just use the TaskMessage object ref itself as the id                  Id = "N/A"'                  LockedUntilUtc = DateTime.UtcNow.AddMinutes(5)'                  TaskMessage = taskMessage'              };
Magic Number,DurableTask.Emulator,LocalOrchestrationService,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.Emulator\LocalOrchestrationService.cs,RenewTaskActivityWorkItemLockAsync,The following statement contains a magic number: workItem.LockedUntilUtc = workItem.LockedUntilUtc.AddMinutes(5);
Magic Number,DurableTask.Emulator,PeekLockQueue,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.Emulator\PeekLockQueue.cs,ReceiveMessageAsync,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(500)' cancellationToken);
Magic Number,DurableTask.Emulator,PeekLockSessionQueue,D:\research\architectureSmells\repos\affandar_durabletask\src\DurableTask.Emulator\PeekLockSessionQueue.cs,AcceptSessionAsync,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMilliseconds(500)' cancellationToken);
