Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,MultiWorkerLeaseMovement,Cyclomatic complexity of the method is 9
Long Identifier,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeleteAll,The length of the parameter firstHistoryEventsAfterPurging is 30.
Long Identifier,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeleteAll,The length of the parameter secondHistoryEventsAfterPurging is 31.
Long Identifier,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeleteAll,The length of the parameter thirdHistoryEventsAfterPurging is 30.
Long Identifier,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeleteAll,The length of the parameter fourthHistoryEventsAfterPurging is 31.
Long Identifier,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeletePartially,The length of the parameter firstHistoryEventsAfterPurging is 30.
Long Identifier,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeletePartially,The length of the parameter secondHistoryEventsAfterPurging is 31.
Long Identifier,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeletePartially,The length of the parameter thirdHistoryEventsAfterPurging is 30.
Long Identifier,DurableTask.AzureStorage.Tests,TestHelpers,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\TestHelpers.cs,GetTestOrchestrationHost,The length of the parameter extendedSessionTimeoutInSeconds is 31.
Long Statement,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,EnsureTaskHubAsync,The length of the statement  "            CloudBlobContainer taskHubContainer = storageAccount.CreateCloudBlobClient().GetContainerReference(expectedContainerName); " is 122.
Long Statement,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,EnsureTaskHubAsync,The length of the statement  "            Assert.IsTrue(await taskHubContainer.ExistsAsync()' $"Task hub blob container {expectedContainerName} was not created."); " is 121.
Long Statement,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,EnsureTaskHubAsync,The length of the statement  "            Assert.AreEqual(controlQueues.Length' leaseBlobs.Length' "Expected to see the same number of control queues and lease blobs."); " is 127.
Long Statement,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,EnsureTaskHubAsync,The length of the statement  "                Assert.IsFalse(await taskHubContainer.ExistsAsync()' $"Task hub blob container {taskHubContainer.Name} was not deleted."); " is 122.
Long Statement,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ListBlobsAsync,The length of the statement  "                BlobResultSegment response = await TimeoutHandler.ExecuteWithTimeout("ListBobs"' context.ClientRequestID' null' null' () => " is 123.
Long Statement,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,TestInstanceAndMessageDistribution,The length of the statement  "                    DynamicTableEntity[] entities = (await tableTrackingStore.HistoryTable.ExecuteQuerySegmentedAsync(new TableQuery()' new TableContinuationToken())).ToArray(); " is 157.
Long Statement,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,EventConversation,The length of the statement  "                var client = await host.StartOrchestrationAsync(typeof(Test.Orchestrations.EventConversationOrchestration)' useFireAndForget); " is 126.
Long Statement,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeleteAll,The length of the statement  "                TestOrchestrationClient client = await host.StartOrchestrationAsync(typeof(Orchestrations.FanOutFanIn)' 50' firstInstanceId); " is 125.
Long Statement,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeleteAll,The length of the statement  "                string result = JToken.Parse(results.First(x => x.OrchestrationInstance.InstanceId == fourthInstanceId).Output).ToString(); " is 123.
Long Statement,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,GetBlobCount,The length of the statement  "                BlobResultSegment results = await TimeoutHandler.ExecuteWithTimeout("GetBlobCount"' context.ClientRequestID' null' null' () => " is 126.
Long Statement,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeletePartially,The length of the statement  "                TestOrchestrationClient client = await host.StartOrchestrationAsync(typeof(Orchestrations.FanOutFanIn)' 50' firstInstanceId); " is 125.
Long Statement,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeletePartially,The length of the statement  "                await client.PurgeInstanceHistoryByTimePeriod(startDateTime' endDateTime' new List<OrchestrationStatus> { OrchestrationStatus.Completed' OrchestrationStatus.Terminated' OrchestrationStatus.Failed' OrchestrationStatus.Running }); " is 228.
Long Statement,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ActorOrchestrationDeleteAllLargeMessageBlobs,The length of the statement  "            Tuple<string' TestOrchestrationClient> resultTuple = await this.ValidateCharacterCounterIntegrationTest(enableExtendedSessions); " is 128.
Long Statement,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,LargeTextMessagePayloads_BlobUrl,The length of the statement  "            using (TestOrchestrationHost host = TestHelpers.GetTestOrchestrationHost(enableExtendedSessions' fetchLargeMessages: false)) " is 124.
Long Statement,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,LargeTextMessagePayloads_FetchLargeMessages,The length of the statement  "            using (TestOrchestrationHost host = TestHelpers.GetTestOrchestrationHost(enableExtendedSessions' fetchLargeMessages: true)) " is 123.
Long Statement,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,NonBlobUriPayload_FetchLargeMessages_RetainsOriginalPayload,The length of the statement  "            using (TestOrchestrationHost host = TestHelpers.GetTestOrchestrationHost(enableExtendedSessions' fetchLargeMessages: true)) " is 123.
Long Statement,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,LargeTextMessagePayloads_FetchLargeMessages_QueryState,The length of the statement  "            using (TestOrchestrationHost host = TestHelpers.GetTestOrchestrationHost(enableExtendedSessions' fetchLargeMessages: true)) " is 123.
Long Statement,DurableTask.AzureStorage.Tests,ParentWorkflowSubOrchestrationFail,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The length of the statement  "                        Task<string> r = context.CreateSubOrchestrationInstance<string>(typeof(Orchestrations.ChildWorkflowSubOrchestrationFail)' i); " is 125.
Long Statement,DurableTask.AzureStorage.Tests,ParentWorkflowNestedActivityFail,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The length of the statement  "                        Task<string> r = context.CreateSubOrchestrationInstance<string>(typeof(Orchestrations.ChildWorkflowNestedActivityFail)' i); " is 123.
Long Statement,DurableTask.AzureStorage.Tests,ParentWorkflowSubOrchestrationActivityFail,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The length of the statement  "                        Task<string> r = context.CreateSubOrchestrationInstance<string>(typeof(Orchestrations.ChildWorkflowSubOrchestrationActivityFail)' i); " is 133.
Long Statement,DurableTask.AzureStorage.Tests,GrandparentWorkflowNestedActivityFail,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The length of the statement  "                        Task<string> r = context.CreateSubOrchestrationInstance<string>(typeof(Orchestrations.ParentWorkflowNestedActivityFail)' i); " is 124.
Long Statement,DurableTask.AzureStorage.Tests,AzureTableTrackingStoreTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureTableTrackingStoreTest.cs,QueryStatus_WithContinuationToken_NoInputToken,The length of the statement  "            var result = await fixture.TrackingStore.GetStateAsync(fixture.ExpectedCreatedDateFrom' fixture.ExpectedCreatedDateTo' inputState' 3' fixture.InputToken); " is 154.
Long Statement,DurableTask.AzureStorage.Tests,AzureTableTrackingStoreTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureTableTrackingStoreTest.cs,QueryStatus_WithContinuationToken_NoInputToken,The length of the statement  "            Assert.AreEqual(fixture.ExpectedResult.OrchestrationState.FirstOrDefault().Name' result.OrchestrationState.FirstOrDefault().Name); " is 130.
Long Statement,DurableTask.AzureStorage.Tests,AzureTableTrackingStoreTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureTableTrackingStoreTest.cs,QueryStatus_WithContinuationToken_InputToken,The length of the statement  "            var result = await fixture.TrackingStore.GetStateAsync(fixture.ExpectedCreatedDateFrom' fixture.ExpectedCreatedDateTo' inputState' 3' fixture.InputToken); " is 154.
Long Statement,DurableTask.AzureStorage.Tests,AzureTableTrackingStoreTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureTableTrackingStoreTest.cs,QueryStatus_WithContinuationToken_InputToken,The length of the statement  "            Assert.AreEqual(fixture.ExpectedResult.OrchestrationState.FirstOrDefault().Name' result.OrchestrationState.FirstOrDefault().Name); " is 130.
Long Statement,DurableTask.AzureStorage.Tests,QueryFixture,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureTableTrackingStoreTest.cs,SetupQueryStateWithPagerMock,The length of the statement  "                var segment = (TableQuerySegment<OrchestrationInstanceStatus>)System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(typeof(TableQuerySegment<OrchestrationInstanceStatus>)); " is 192.
Long Statement,DurableTask.AzureStorage.Tests,QueryFixture,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureTableTrackingStoreTest.cs,SetupQueryStateWithPagerMock_WithInputToken,The length of the statement  "                var segment = (TableQuerySegment<OrchestrationInstanceStatus>)System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(typeof(TableQuerySegment<OrchestrationInstanceStatus>)); " is 192.
Long Statement,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Combination,The length of the statement  "                "((CreatedTime ge datetime'2018-01-10T10:10:10.0000000Z') and (CreatedTime le datetime'2018-01-10T10:10:50.0000000Z')) and (RuntimeStatus eq 'Running')"' " is 153.
Long Statement,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_MultipleRuntimeStatus,The length of the statement  "                "(((CreatedTime ge datetime'2018-01-10T10:10:10.0000000Z') and (CreatedTime le datetime'2018-01-10T10:10:50.0000000Z')) and ((RuntimeStatus eq 'Running') or (RuntimeStatus eq 'Completed'))) and ((TaskHubName eq 'FooProduction') or (TaskHubName eq 'BarStaging'))"' " is 263.
Long Statement,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Parse,The length of the statement  "                "((CreatedTime ge datetime'2018-01-10T10:10:10.0000000Z') and (CreatedTime le datetime'2018-01-10T10:10:50.0000000Z')) and (RuntimeStatus eq 'Running')"' " is 153.
Long Statement,DurableTask.AzureStorage.Tests,TestHelpers,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\TestHelpers.cs,GetTestOrchestrationHost,The length of the statement  "                TaskHubName = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None).AppSettings.Settings["TaskHubName"].Value' " is 127.
Long Statement,DurableTask.AzureStorage.Tests,TestHelpers,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\TestHelpers.cs,GetTestStorageAccountConnectionString,The length of the statement  "                throw new ArgumentNullException("A Storage connection string must be defined in either an environment variable or in configuration."); " is 134.
Long Statement,DurableTask.AzureStorage.Tests,TestOrchestrationClient,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\TestOrchestrationClient.cs,WaitForStartupAsync,The length of the statement  "                    Trace.TraceInformation($"{state.Name} (ID = {state.OrchestrationInstance.InstanceId}) started successfully after ~{sw.ElapsedMilliseconds}ms. Status = {state.OrchestrationStatus}."); " is 182.
Long Statement,DurableTask.AzureStorage.Tests,TestOrchestrationClient,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\TestOrchestrationClient.cs,WaitForStartupAsync,The length of the statement  "            throw new TimeoutException($"Orchestration '{this.orchestrationType.Name}' with instance ID '{this.instanceId}' failed to start."); " is 131.
Complex Conditional,DurableTask.AzureStorage.Tests,MultiplyMultipleActivityFail,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,Execute,The conditional expression  "(ShouldFail1 && (values[1] == 1)) || (ShouldFail2 && values[1] == 2)"  is complex.
Complex Conditional,DurableTask.AzureStorage.Tests,MultiplyFailOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,Execute,The conditional expression  "(ShouldFail1 && (values[1] == 1)) || (ShouldFail2 && values[1] == 2)"  is complex.
Empty Catch Block,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,EnsureTaskHubAsync,The method has an empty catch block.
Empty Catch Block,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,EnsureTaskHubAsync,The method has an empty catch block.
Magic Number,DurableTask.AzureStorage.Tests,AsyncAutoResetEventTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AsyncAutoResetEventTests.cs,SignalSingleWaiter,The following statement contains a magic number: Task<bool> waiter = resetEvent.WaitAsync(TimeSpan.FromSeconds(5));
Magic Number,DurableTask.AzureStorage.Tests,AsyncAutoResetEventTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AsyncAutoResetEventTests.cs,SignalSingleWaiter,The following statement contains a magic number: Task winner = await Task.WhenAny(waiter' Task.Delay(TimeSpan.FromSeconds(2)));
Magic Number,DurableTask.AzureStorage.Tests,AsyncAutoResetEventTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AsyncAutoResetEventTests.cs,SignalMultipleWaiters,The following statement contains a magic number: Task<bool> waiter = resetEvent.WaitAsync(TimeSpan.FromSeconds(60));
Magic Number,DurableTask.AzureStorage.Tests,AsyncAutoResetEventTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AsyncAutoResetEventTests.cs,SignalMultipleWaiters,The following statement contains a magic number: i < 10
Magic Number,DurableTask.AzureStorage.Tests,AsyncAutoResetEventTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AsyncAutoResetEventTests.cs,SignalMultipleWaiters,The following statement contains a magic number: await Task.Delay(200);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,EnsureTaskHubAsync,The following statement contains a magic number: Assert.AreEqual(4' controlQueues.Length' "Expected to see the default four control queues created.");
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,MultiWorkerLeaseMovement,The following statement contains a magic number: const int MaxWorkerCount = 4;
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,MultiWorkerLeaseMovement,The following statement contains a magic number: TimeSpan timeout = Debugger.IsAttached ? TimeSpan.FromMinutes(5) : TimeSpan.FromSeconds(30);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,MultiWorkerLeaseMovement,The following statement contains a magic number: TimeSpan timeout = Debugger.IsAttached ? TimeSpan.FromMinutes(5) : TimeSpan.FromSeconds(30);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,MultiWorkerLeaseMovement,The following statement contains a magic number: isBalanced = maxLeaseCount - minLeaseCount <= 1 && totalLeaseCount == 4;
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,MultiWorkerLeaseMovement,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromSeconds(5));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,MultiWorkerLeaseMovement,The following statement contains a magic number: i < (MaxWorkerCount * 2) - 1
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,TestInstanceAndMessageDistribution,The following statement contains a magic number: const int InstanceCount = 50;
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,TestInstanceAndMessageDistribution,The following statement contains a magic number: var settings = new AzureStorageOrchestrationServiceSettings()              {                  StorageConnectionString = TestHelpers.GetTestStorageAccountConnectionString()'                  TaskHubName = nameof(TestInstanceAndMessageDistribution)'                  PartitionCount = 4'              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,TestInstanceAndMessageDistribution,The following statement contains a magic number: OrchestrationState[] states = await Task.WhenAll(                      instances.Select(i => client.WaitForOrchestrationAsync(i' TimeSpan.FromSeconds(30))));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,MonitorIdleTaskHubDisconnected,The following statement contains a magic number: var settings = new AzureStorageOrchestrationServiceSettings              {                  StorageConnectionString = TestHelpers.GetTestStorageAccountConnectionString()'                  TaskHubName = nameof(MonitorIdleTaskHubDisconnected)'                  PartitionCount = 4'              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,MonitorIdleTaskHubDisconnected,The following statement contains a magic number: i < 10
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,MonitorIncreasingControlQueueLoadDisconnected,The following statement contains a magic number: var settings = new AzureStorageOrchestrationServiceSettings()              {                  StorageConnectionString = TestHelpers.GetTestStorageAccountConnectionString()'                  TaskHubName = nameof(MonitorIncreasingControlQueueLoadDisconnected)'                  PartitionCount = 4'              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,MonitorIncreasingControlQueueLoadDisconnected,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromSeconds(1.1));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,MonitorIncreasingControlQueueLoadDisconnected,The following statement contains a magic number: i < settings.PartitionCount + 10
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_High,The following statement contains a magic number: mock.AddLatencies(500' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_High,The following statement contains a magic number: mock.AddLatencies(600' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_High,The following statement contains a magic number: mock.AddLatencies(700' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_High,The following statement contains a magic number: mock.AddLatencies(800' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_High,The following statement contains a magic number: mock.AddLatencies(900' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_High,The following statement contains a magic number: mock.AddLatencies(1000' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(500' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(600' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(700' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(800' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(900' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_Low,The following statement contains a magic number: mock.AddLatencies(10' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_Low,The following statement contains a magic number: mock.AddLatencies(10' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_Low,The following statement contains a magic number: mock.AddLatencies(10' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_Low,The following statement contains a magic number: mock.AddLatencies(10' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_Low,The following statement contains a magic number: mock.AddLatencies(10' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_Low,The following statement contains a magic number: var recommendations = new ScaleRecommendation[500];
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_Low,The following statement contains a magic number: mock.AddLatencies(random.Next(50)' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_Low,The following statement contains a magic number: heartbeat = await mock.PulseAsync(simulatedWorkerCount: 2);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_Low,The following statement contains a magic number: Assert.IsTrue(keepAliveCount > recommendations.Length * 0.9' "Almost all should be keep-alive");
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_Idle,The following statement contains a magic number: mock.AddLatencies(30000' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_NotIdle,The following statement contains a magic number: i < 100
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_MaxPollingDelay1,The following statement contains a magic number: mock.AddLatencies(9999' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_MaxPollingDelay2,The following statement contains a magic number: mock.AddLatencies(10000' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_MaxPollingDelay2,The following statement contains a magic number: mock.AddLatencies(100' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(30000' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(30000' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(30000' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(30000' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(3' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_NotMaxPollingDelay,The following statement contains a magic number: mock.AddLatencies(10' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_WorkItemLatency_NotMaxPollingDelay,The following statement contains a magic number: mock.AddLatencies(9999' new[] { 0' 0' 0' 0 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_High,The following statement contains a magic number: var latencies = new List<int> { 500' 600' 700' 800' 900' 1000 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_High,The following statement contains a magic number: var latencies = new List<int> { 500' 600' 700' 800' 900' 1000 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_High,The following statement contains a magic number: var latencies = new List<int> { 500' 600' 700' 800' 900' 1000 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_High,The following statement contains a magic number: var latencies = new List<int> { 500' 600' 700' 800' 900' 1000 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_High,The following statement contains a magic number: var latencies = new List<int> { 500' 600' 700' 800' 900' 1000 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_High,The following statement contains a magic number: var latencies = new List<int> { 500' 600' 700' 800' 900' 1000 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_Moderate,The following statement contains a magic number: var latencies = new List<int> { 500' 600' 700' 800' 900 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_Moderate,The following statement contains a magic number: var latencies = new List<int> { 500' 600' 700' 800' 900 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_Moderate,The following statement contains a magic number: var latencies = new List<int> { 500' 600' 700' 800' 900 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_Moderate,The following statement contains a magic number: var latencies = new List<int> { 500' 600' 700' 800' 900 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_Moderate,The following statement contains a magic number: var latencies = new List<int> { 500' 600' 700' 800' 900 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_Low,The following statement contains a magic number: var latencies = new List<int> { 10' 10' 10' 10' 10 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_Low,The following statement contains a magic number: var latencies = new List<int> { 10' 10' 10' 10' 10 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_Low,The following statement contains a magic number: var latencies = new List<int> { 10' 10' 10' 10' 10 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_Low,The following statement contains a magic number: var latencies = new List<int> { 10' 10' 10' 10' 10 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_Low,The following statement contains a magic number: var latencies = new List<int> { 10' 10' 10' 10' 10 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_Low,The following statement contains a magic number: var recommendations = new ScaleRecommendation[500];
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_Low,The following statement contains a magic number: heartbeats.Add(new PerformanceHeartbeat                  {                      PartitionCount = AzureStorageOrchestrationServiceSettings.DefaultPartitionCount'                      WorkItemQueueLatency = TimeSpan.FromMilliseconds(random.Next(50))'                      ControlQueueLatencies = new List<TimeSpan> { TimeSpan.Zero' TimeSpan.Zero' TimeSpan.Zero' TimeSpan.Zero }                  });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_Low,The following statement contains a magic number: recommendations[i] = mock.MakeScaleRecommendation(2' heartbeats.ToArray());
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_Low,The following statement contains a magic number: Assert.IsTrue(keepAliveCount > recommendations.Length * 0.9' "Almost all should be keep-alive");
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_Idle,The following statement contains a magic number: var latencies = new List<int> { 30000' 0' 0' 0' 0' 0 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_NotIdle,The following statement contains a magic number: i < 100
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_MaxPollingDelay1,The following statement contains a magic number: var latencies = new List<int> { 0' 0' 0' 0' 9999 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_MaxPollingDelay2,The following statement contains a magic number: var latencies = new List<int> { 0' 0' 0' 10000' 100 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_MaxPollingDelay2,The following statement contains a magic number: var latencies = new List<int> { 0' 0' 0' 10000' 100 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_QuickDrain,The following statement contains a magic number: var latencies = new List<int> { 30000' 30000' 30000' 30000' 3 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_QuickDrain,The following statement contains a magic number: var latencies = new List<int> { 30000' 30000' 30000' 30000' 3 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_QuickDrain,The following statement contains a magic number: var latencies = new List<int> { 30000' 30000' 30000' 30000' 3 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_QuickDrain,The following statement contains a magic number: var latencies = new List<int> { 30000' 30000' 30000' 30000' 3 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_QuickDrain,The following statement contains a magic number: var latencies = new List<int> { 30000' 30000' 30000' 30000' 3 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_NotMaxPollingDelay,The following statement contains a magic number: var latencies = new List<int> { 0' 0' 0' 10' 9999 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_WorkItemLatency_NotMaxPollingDelay,The following statement contains a magic number: var latencies = new List<int> { 0' 0' 0' 10' 9999 };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High1,The following statement contains a magic number: mock.AddLatencies(0' new[] { 0' 0' 0' 600 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High1,The following statement contains a magic number: mock.AddLatencies(0' new[] { 0' 0' 0' 700 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High1,The following statement contains a magic number: mock.AddLatencies(0' new[] { 0' 0' 0' 800 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High1,The following statement contains a magic number: mock.AddLatencies(0' new[] { 0' 0' 0' 900 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High1,The following statement contains a magic number: mock.AddLatencies(0' new[] { 0' 0' 0' 1000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High2,The following statement contains a magic number: mock.AddLatencies(0' new[] { 0' 0' 600' 600 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High2,The following statement contains a magic number: mock.AddLatencies(0' new[] { 0' 0' 600' 600 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High2,The following statement contains a magic number: mock.AddLatencies(0' new[] { 0' 0' 700' 700 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High2,The following statement contains a magic number: mock.AddLatencies(0' new[] { 0' 0' 700' 700 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High2,The following statement contains a magic number: mock.AddLatencies(0' new[] { 0' 0' 800' 800 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High2,The following statement contains a magic number: mock.AddLatencies(0' new[] { 0' 0' 800' 800 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High2,The following statement contains a magic number: mock.AddLatencies(0' new[] { 0' 0' 900' 900 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High2,The following statement contains a magic number: mock.AddLatencies(0' new[] { 0' 0' 900' 900 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High2,The following statement contains a magic number: mock.AddLatencies(0' new[] { 0' 0' 1000' 1000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High2,The following statement contains a magic number: mock.AddLatencies(0' new[] { 0' 0' 1000' 1000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High2,The following statement contains a magic number: heartbeat = await mock.PulseAsync(simulatedWorkerCount: 2);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: mock.AddLatencies(0' new[] { 600' 600' 600' 600 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: mock.AddLatencies(0' new[] { 600' 600' 600' 600 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: mock.AddLatencies(0' new[] { 600' 600' 600' 600 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: mock.AddLatencies(0' new[] { 600' 600' 600' 600 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: mock.AddLatencies(0' new[] { 700' 700' 700' 700 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: mock.AddLatencies(0' new[] { 700' 700' 700' 700 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: mock.AddLatencies(0' new[] { 700' 700' 700' 700 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: mock.AddLatencies(0' new[] { 700' 700' 700' 700 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: mock.AddLatencies(0' new[] { 800' 800' 800' 800 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: mock.AddLatencies(0' new[] { 800' 800' 800' 800 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: mock.AddLatencies(0' new[] { 800' 800' 800' 800 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: mock.AddLatencies(0' new[] { 800' 800' 800' 800 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: mock.AddLatencies(0' new[] { 900' 900' 900' 900 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: mock.AddLatencies(0' new[] { 900' 900' 900' 900 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: mock.AddLatencies(0' new[] { 900' 900' 900' 900 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: mock.AddLatencies(0' new[] { 900' 900' 900' 900 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: mock.AddLatencies(0' new[] { 1000' 1000' 1000' 1000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: mock.AddLatencies(0' new[] { 1000' 1000' 1000' 1000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: mock.AddLatencies(0' new[] { 1000' 1000' 1000' 1000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: mock.AddLatencies(0' new[] { 1000' 1000' 1000' 1000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: PerformanceHeartbeat heartbeat = await mock.PulseAsync(simulatedWorkerCount: 3);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: heartbeat = await mock.PulseAsync(simulatedWorkerCount: 4);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_High4,The following statement contains a magic number: heartbeat = await mock.PulseAsync(simulatedWorkerCount: 5);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(0' new[] { 500' 500' 500' 500 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(0' new[] { 500' 500' 500' 500 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(0' new[] { 500' 500' 500' 500 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(0' new[] { 500' 500' 500' 500 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(0' new[] { 500' 500' 500' 500 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(0' new[] { 500' 500' 500' 500 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(0' new[] { 500' 500' 500' 500 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(0' new[] { 500' 500' 500' 500 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(0' new[] { 500' 500' 500' 500 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(0' new[] { 500' 500' 500' 500 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(0' new[] { 500' 500' 500' 500 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(0' new[] { 500' 500' 500' 500 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(0' new[] { 500' 500' 500' 500 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(0' new[] { 500' 500' 500' 500 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(0' new[] { 500' 500' 500' 500 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(0' new[] { 500' 500' 500' 500 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(0' new[] { 500' 500' 500' 500 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(0' new[] { 500' 500' 500' 500 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(0' new[] { 500' 500' 500' 500 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: mock.AddLatencies(0' new[] { 500' 500' 500' 500 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: simulatedWorkerCount > 4
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Moderate,The following statement contains a magic number: simulatedWorkerCount < 10
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Idle1,The following statement contains a magic number: simulatedWorkerCount > 3
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Idle1,The following statement contains a magic number: simulatedWorkerCount < 10
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Idle2,The following statement contains a magic number: simulatedWorkerCount > 2
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_Idle2,The following statement contains a magic number: simulatedWorkerCount < 10
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_NotIdle,The following statement contains a magic number: i < 100
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_MaxPollingDelay1,The following statement contains a magic number: mock.AddLatencies(0' new[] { 9999' 9999' 9999' 9999 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_MaxPollingDelay1,The following statement contains a magic number: mock.AddLatencies(0' new[] { 9999' 9999' 9999' 9999 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_MaxPollingDelay1,The following statement contains a magic number: mock.AddLatencies(0' new[] { 9999' 9999' 9999' 9999 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_MaxPollingDelay1,The following statement contains a magic number: mock.AddLatencies(0' new[] { 9999' 9999' 9999' 9999 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_MaxPollingDelay2,The following statement contains a magic number: mock.AddLatencies(0' new[] { 10000' 10000' 10000' 10000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_MaxPollingDelay2,The following statement contains a magic number: mock.AddLatencies(0' new[] { 10000' 10000' 10000' 10000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_MaxPollingDelay2,The following statement contains a magic number: mock.AddLatencies(0' new[] { 10000' 10000' 10000' 10000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_MaxPollingDelay2,The following statement contains a magic number: mock.AddLatencies(0' new[] { 10000' 10000' 10000' 10000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_MaxPollingDelay2,The following statement contains a magic number: mock.AddLatencies(0' new[] { 100' 100' 100' 100 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_MaxPollingDelay2,The following statement contains a magic number: mock.AddLatencies(0' new[] { 100' 100' 100' 100 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_MaxPollingDelay2,The following statement contains a magic number: mock.AddLatencies(0' new[] { 100' 100' 100' 100 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_MaxPollingDelay2,The following statement contains a magic number: mock.AddLatencies(0' new[] { 100' 100' 100' 100 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(0' new[] { 30000' 30000' 30000' 30000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(0' new[] { 30000' 30000' 30000' 30000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(0' new[] { 30000' 30000' 30000' 30000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(0' new[] { 30000' 30000' 30000' 30000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(0' new[] { 30000' 30000' 30000' 30000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(0' new[] { 30000' 30000' 30000' 30000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(0' new[] { 30000' 30000' 30000' 30000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(0' new[] { 30000' 30000' 30000' 30000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(0' new[] { 30000' 30000' 30000' 30000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(0' new[] { 30000' 30000' 30000' 30000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(0' new[] { 30000' 30000' 30000' 30000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(0' new[] { 30000' 30000' 30000' 30000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(0' new[] { 30000' 30000' 30000' 30000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(0' new[] { 30000' 30000' 30000' 30000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(0' new[] { 30000' 30000' 30000' 30000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_QuickDrain,The following statement contains a magic number: mock.AddLatencies(0' new[] { 30000' 30000' 30000' 30000 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_QuickDrain,The following statement contains a magic number: simulatedWorkerCount > 4
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_QuickDrain,The following statement contains a magic number: simulatedWorkerCount < 10
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_NotMaxPollingDelay,The following statement contains a magic number: mock.AddLatencies(0' new[] { 0' 10' 10' 10 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_NotMaxPollingDelay,The following statement contains a magic number: mock.AddLatencies(0' new[] { 0' 10' 10' 10 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_NotMaxPollingDelay,The following statement contains a magic number: mock.AddLatencies(0' new[] { 0' 10' 10' 10 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_NotMaxPollingDelay,The following statement contains a magic number: mock.AddLatencies(0' new[] { 9999' 9999' 9999' 9999 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_NotMaxPollingDelay,The following statement contains a magic number: mock.AddLatencies(0' new[] { 9999' 9999' 9999' 9999 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_NotMaxPollingDelay,The following statement contains a magic number: mock.AddLatencies(0' new[] { 9999' 9999' 9999' 9999 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_NotMaxPollingDelay,The following statement contains a magic number: mock.AddLatencies(0' new[] { 9999' 9999' 9999' 9999 });
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_NotMaxPollingDelay,The following statement contains a magic number: simulatedWorkerCount < 3
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_ControlQueueLatency_NotMaxPollingDelay,The following statement contains a magic number: simulatedWorkerCount < 10
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High1,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 600 }'                  new[] { 0' 0' 0' 700 }'                  new[] { 0' 0' 0' 800 }'                  new[] { 0' 0' 0' 900 }'                  new[] { 0' 0' 0' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High1,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 600 }'                  new[] { 0' 0' 0' 700 }'                  new[] { 0' 0' 0' 800 }'                  new[] { 0' 0' 0' 900 }'                  new[] { 0' 0' 0' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High1,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 600 }'                  new[] { 0' 0' 0' 700 }'                  new[] { 0' 0' 0' 800 }'                  new[] { 0' 0' 0' 900 }'                  new[] { 0' 0' 0' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High1,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 600 }'                  new[] { 0' 0' 0' 700 }'                  new[] { 0' 0' 0' 800 }'                  new[] { 0' 0' 0' 900 }'                  new[] { 0' 0' 0' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High1,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 600 }'                  new[] { 0' 0' 0' 700 }'                  new[] { 0' 0' 0' 800 }'                  new[] { 0' 0' 0' 900 }'                  new[] { 0' 0' 0' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High2,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 600' 600 }'                  new[] { 0' 0' 700' 700 }'                  new[] { 0' 0' 800' 800 }'                  new[] { 0' 0' 900' 900 }'                  new[] { 0' 0' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High2,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 600' 600 }'                  new[] { 0' 0' 700' 700 }'                  new[] { 0' 0' 800' 800 }'                  new[] { 0' 0' 900' 900 }'                  new[] { 0' 0' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High2,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 600' 600 }'                  new[] { 0' 0' 700' 700 }'                  new[] { 0' 0' 800' 800 }'                  new[] { 0' 0' 900' 900 }'                  new[] { 0' 0' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High2,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 600' 600 }'                  new[] { 0' 0' 700' 700 }'                  new[] { 0' 0' 800' 800 }'                  new[] { 0' 0' 900' 900 }'                  new[] { 0' 0' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High2,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 600' 600 }'                  new[] { 0' 0' 700' 700 }'                  new[] { 0' 0' 800' 800 }'                  new[] { 0' 0' 900' 900 }'                  new[] { 0' 0' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High2,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 600' 600 }'                  new[] { 0' 0' 700' 700 }'                  new[] { 0' 0' 800' 800 }'                  new[] { 0' 0' 900' 900 }'                  new[] { 0' 0' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High2,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 600' 600 }'                  new[] { 0' 0' 700' 700 }'                  new[] { 0' 0' 800' 800 }'                  new[] { 0' 0' 900' 900 }'                  new[] { 0' 0' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High2,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 600' 600 }'                  new[] { 0' 0' 700' 700 }'                  new[] { 0' 0' 800' 800 }'                  new[] { 0' 0' 900' 900 }'                  new[] { 0' 0' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High2,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 600' 600 }'                  new[] { 0' 0' 700' 700 }'                  new[] { 0' 0' 800' 800 }'                  new[] { 0' 0' 900' 900 }'                  new[] { 0' 0' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High2,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 600' 600 }'                  new[] { 0' 0' 700' 700 }'                  new[] { 0' 0' 800' 800 }'                  new[] { 0' 0' 900' 900 }'                  new[] { 0' 0' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High2,The following statement contains a magic number: recommendation = mock.MakeScaleRecommendation(2' heartbeats);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: var latencies = new[]              {                  new[] { 600' 600' 600' 600 }'                  new[] { 700' 700' 700' 700 }'                  new[] { 800' 800' 800' 800 }'                  new[] { 900' 900' 900' 900 }'                  new[] { 1000' 1000' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: var latencies = new[]              {                  new[] { 600' 600' 600' 600 }'                  new[] { 700' 700' 700' 700 }'                  new[] { 800' 800' 800' 800 }'                  new[] { 900' 900' 900' 900 }'                  new[] { 1000' 1000' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: var latencies = new[]              {                  new[] { 600' 600' 600' 600 }'                  new[] { 700' 700' 700' 700 }'                  new[] { 800' 800' 800' 800 }'                  new[] { 900' 900' 900' 900 }'                  new[] { 1000' 1000' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: var latencies = new[]              {                  new[] { 600' 600' 600' 600 }'                  new[] { 700' 700' 700' 700 }'                  new[] { 800' 800' 800' 800 }'                  new[] { 900' 900' 900' 900 }'                  new[] { 1000' 1000' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: var latencies = new[]              {                  new[] { 600' 600' 600' 600 }'                  new[] { 700' 700' 700' 700 }'                  new[] { 800' 800' 800' 800 }'                  new[] { 900' 900' 900' 900 }'                  new[] { 1000' 1000' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: var latencies = new[]              {                  new[] { 600' 600' 600' 600 }'                  new[] { 700' 700' 700' 700 }'                  new[] { 800' 800' 800' 800 }'                  new[] { 900' 900' 900' 900 }'                  new[] { 1000' 1000' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: var latencies = new[]              {                  new[] { 600' 600' 600' 600 }'                  new[] { 700' 700' 700' 700 }'                  new[] { 800' 800' 800' 800 }'                  new[] { 900' 900' 900' 900 }'                  new[] { 1000' 1000' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: var latencies = new[]              {                  new[] { 600' 600' 600' 600 }'                  new[] { 700' 700' 700' 700 }'                  new[] { 800' 800' 800' 800 }'                  new[] { 900' 900' 900' 900 }'                  new[] { 1000' 1000' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: var latencies = new[]              {                  new[] { 600' 600' 600' 600 }'                  new[] { 700' 700' 700' 700 }'                  new[] { 800' 800' 800' 800 }'                  new[] { 900' 900' 900' 900 }'                  new[] { 1000' 1000' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: var latencies = new[]              {                  new[] { 600' 600' 600' 600 }'                  new[] { 700' 700' 700' 700 }'                  new[] { 800' 800' 800' 800 }'                  new[] { 900' 900' 900' 900 }'                  new[] { 1000' 1000' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: var latencies = new[]              {                  new[] { 600' 600' 600' 600 }'                  new[] { 700' 700' 700' 700 }'                  new[] { 800' 800' 800' 800 }'                  new[] { 900' 900' 900' 900 }'                  new[] { 1000' 1000' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: var latencies = new[]              {                  new[] { 600' 600' 600' 600 }'                  new[] { 700' 700' 700' 700 }'                  new[] { 800' 800' 800' 800 }'                  new[] { 900' 900' 900' 900 }'                  new[] { 1000' 1000' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: var latencies = new[]              {                  new[] { 600' 600' 600' 600 }'                  new[] { 700' 700' 700' 700 }'                  new[] { 800' 800' 800' 800 }'                  new[] { 900' 900' 900' 900 }'                  new[] { 1000' 1000' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: var latencies = new[]              {                  new[] { 600' 600' 600' 600 }'                  new[] { 700' 700' 700' 700 }'                  new[] { 800' 800' 800' 800 }'                  new[] { 900' 900' 900' 900 }'                  new[] { 1000' 1000' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: var latencies = new[]              {                  new[] { 600' 600' 600' 600 }'                  new[] { 700' 700' 700' 700 }'                  new[] { 800' 800' 800' 800 }'                  new[] { 900' 900' 900' 900 }'                  new[] { 1000' 1000' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: var latencies = new[]              {                  new[] { 600' 600' 600' 600 }'                  new[] { 700' 700' 700' 700 }'                  new[] { 800' 800' 800' 800 }'                  new[] { 900' 900' 900' 900 }'                  new[] { 1000' 1000' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: var latencies = new[]              {                  new[] { 600' 600' 600' 600 }'                  new[] { 700' 700' 700' 700 }'                  new[] { 800' 800' 800' 800 }'                  new[] { 900' 900' 900' 900 }'                  new[] { 1000' 1000' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: var latencies = new[]              {                  new[] { 600' 600' 600' 600 }'                  new[] { 700' 700' 700' 700 }'                  new[] { 800' 800' 800' 800 }'                  new[] { 900' 900' 900' 900 }'                  new[] { 1000' 1000' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: var latencies = new[]              {                  new[] { 600' 600' 600' 600 }'                  new[] { 700' 700' 700' 700 }'                  new[] { 800' 800' 800' 800 }'                  new[] { 900' 900' 900' 900 }'                  new[] { 1000' 1000' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: var latencies = new[]              {                  new[] { 600' 600' 600' 600 }'                  new[] { 700' 700' 700' 700 }'                  new[] { 800' 800' 800' 800 }'                  new[] { 900' 900' 900' 900 }'                  new[] { 1000' 1000' 1000' 1000 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: ScaleRecommendation recommendation = mock.MakeScaleRecommendation(3' heartbeats);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: recommendation = mock.MakeScaleRecommendation(4' heartbeats);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_High4,The following statement contains a magic number: recommendation = mock.MakeScaleRecommendation(5' heartbeats);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: var latencies = new[]              {                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: var latencies = new[]              {                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: var latencies = new[]              {                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: var latencies = new[]              {                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: var latencies = new[]              {                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: var latencies = new[]              {                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: var latencies = new[]              {                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: var latencies = new[]              {                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: var latencies = new[]              {                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: var latencies = new[]              {                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: var latencies = new[]              {                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: var latencies = new[]              {                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: var latencies = new[]              {                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: var latencies = new[]              {                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: var latencies = new[]              {                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: var latencies = new[]              {                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: var latencies = new[]              {                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: var latencies = new[]              {                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: var latencies = new[]              {                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: var latencies = new[]              {                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }'                  new[] { 500' 500' 500' 500 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: simulatedWorkerCount > 4
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Moderate,The following statement contains a magic number: simulatedWorkerCount < 10
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Idle1,The following statement contains a magic number: simulatedWorkerCount > 3
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Idle1,The following statement contains a magic number: simulatedWorkerCount < 10
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Idle2,The following statement contains a magic number: simulatedWorkerCount > 2
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_Idle2,The following statement contains a magic number: simulatedWorkerCount < 10
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_NotIdle,The following statement contains a magic number: i < 100
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_MaxPollingDelay1,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 9999' 9999' 9999' 9999 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_MaxPollingDelay1,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 9999' 9999' 9999' 9999 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_MaxPollingDelay1,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 9999' 9999' 9999' 9999 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_MaxPollingDelay1,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 9999' 9999' 9999' 9999 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_MaxPollingDelay2,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 10000' 10000' 10000' 10000 }'                  new[] { 100' 100' 100' 100 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_MaxPollingDelay2,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 10000' 10000' 10000' 10000 }'                  new[] { 100' 100' 100' 100 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_MaxPollingDelay2,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 10000' 10000' 10000' 10000 }'                  new[] { 100' 100' 100' 100 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_MaxPollingDelay2,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 10000' 10000' 10000' 10000 }'                  new[] { 100' 100' 100' 100 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_MaxPollingDelay2,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 10000' 10000' 10000' 10000 }'                  new[] { 100' 100' 100' 100 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_MaxPollingDelay2,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 10000' 10000' 10000' 10000 }'                  new[] { 100' 100' 100' 100 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_MaxPollingDelay2,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 10000' 10000' 10000' 10000 }'                  new[] { 100' 100' 100' 100 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_MaxPollingDelay2,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 10000' 10000' 10000' 10000 }'                  new[] { 100' 100' 100' 100 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_QuickDrain,The following statement contains a magic number: var latencies = new[]              {                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 0' 0' 0' 0 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_QuickDrain,The following statement contains a magic number: var latencies = new[]              {                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 0' 0' 0' 0 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_QuickDrain,The following statement contains a magic number: var latencies = new[]              {                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 0' 0' 0' 0 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_QuickDrain,The following statement contains a magic number: var latencies = new[]              {                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 0' 0' 0' 0 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_QuickDrain,The following statement contains a magic number: var latencies = new[]              {                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 0' 0' 0' 0 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_QuickDrain,The following statement contains a magic number: var latencies = new[]              {                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 0' 0' 0' 0 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_QuickDrain,The following statement contains a magic number: var latencies = new[]              {                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 0' 0' 0' 0 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_QuickDrain,The following statement contains a magic number: var latencies = new[]              {                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 0' 0' 0' 0 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_QuickDrain,The following statement contains a magic number: var latencies = new[]              {                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 0' 0' 0' 0 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_QuickDrain,The following statement contains a magic number: var latencies = new[]              {                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 0' 0' 0' 0 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_QuickDrain,The following statement contains a magic number: var latencies = new[]              {                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 0' 0' 0' 0 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_QuickDrain,The following statement contains a magic number: var latencies = new[]              {                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 0' 0' 0' 0 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_QuickDrain,The following statement contains a magic number: var latencies = new[]              {                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 0' 0' 0' 0 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_QuickDrain,The following statement contains a magic number: var latencies = new[]              {                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 0' 0' 0' 0 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_QuickDrain,The following statement contains a magic number: var latencies = new[]              {                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 0' 0' 0' 0 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_QuickDrain,The following statement contains a magic number: var latencies = new[]              {                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 30000' 30000' 30000' 30000 }'                  new[] { 0' 0' 0' 0 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_QuickDrain,The following statement contains a magic number: simulatedWorkerCount > 4
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_QuickDrain,The following statement contains a magic number: simulatedWorkerCount < 10
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_NotMaxPollingDelay,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 10' 10' 10 }'                  new[] { 9999' 9999' 9999' 9999 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_NotMaxPollingDelay,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 10' 10' 10 }'                  new[] { 9999' 9999' 9999' 9999 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_NotMaxPollingDelay,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 10' 10' 10 }'                  new[] { 9999' 9999' 9999' 9999 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_NotMaxPollingDelay,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 10' 10' 10 }'                  new[] { 9999' 9999' 9999' 9999 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_NotMaxPollingDelay,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 10' 10' 10 }'                  new[] { 9999' 9999' 9999' 9999 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_NotMaxPollingDelay,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 10' 10' 10 }'                  new[] { 9999' 9999' 9999' 9999 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_NotMaxPollingDelay,The following statement contains a magic number: var latencies = new[]              {                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 0' 0' 0 }'                  new[] { 0' 10' 10' 10 }'                  new[] { 9999' 9999' 9999' 9999 }              };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_NotMaxPollingDelay,The following statement contains a magic number: simulatedWorkerCount < 3
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScaleTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,ScaleDecision_AdHoc_ControlQueueLatency_NotMaxPollingDelay,The following statement contains a magic number: simulatedWorkerCount < 10
Magic Number,DurableTask.AzureStorage.Tests,FakePerformanceMonitor,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,FakePerformanceMonitor,The following statement contains a magic number: this.ControlQueueLatencies.Add(new QueueMetricHistory(5));
Magic Number,DurableTask.AzureStorage.Tests,FakePerformanceMonitor,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,AddControlQueueLatencies2,The following statement contains a magic number: this.ControlQueueLatencies[2].Add(latencies[i].Item3);
Magic Number,DurableTask.AzureStorage.Tests,FakePerformanceMonitor,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScaleTests.cs,AddControlQueueLatencies2,The following statement contains a magic number: this.ControlQueueLatencies[3].Add(latencies[i].Item4);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,HelloWorldOrchestration_Inline,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,HelloWorldOrchestration_Activity,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,SequentialOrchestration,The following statement contains a magic number: var client = await host.StartOrchestrationAsync(typeof(Orchestrations.Factorial)' 10);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,SequentialOrchestration,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,SequentialOrchestration,The following statement contains a magic number: Assert.AreEqual(10' JToken.Parse(status?.Input));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,SequentialOrchestration,The following statement contains a magic number: Assert.AreEqual(3628800' JToken.Parse(status?.Output));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,SequentialOrchestrationNoReplay,The following statement contains a magic number: var client = await host.StartOrchestrationAsync(typeof(Orchestrations.FactorialNoReplay)' 10);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,SequentialOrchestrationNoReplay,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,SequentialOrchestrationNoReplay,The following statement contains a magic number: Assert.AreEqual(10' JToken.Parse(status?.Input));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,SequentialOrchestrationNoReplay,The following statement contains a magic number: Assert.AreEqual(3628800' JToken.Parse(status?.Output));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ParentOfSequentialOrchestration,The following statement contains a magic number: var client = await host.StartOrchestrationAsync(typeof(Orchestrations.ParentOfFactorial)' 10);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ParentOfSequentialOrchestration,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ParentOfSequentialOrchestration,The following statement contains a magic number: Assert.AreEqual(10' JToken.Parse(status?.Input));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ParentOfSequentialOrchestration,The following statement contains a magic number: Assert.AreEqual(3628800' JToken.Parse(status?.Output));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,GetAllOrchestrationStatuses,The following statement contains a magic number: await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,GetAllOrchestrationStatuses,The following statement contains a magic number: await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,GetAllOrchestrationStatuses,The following statement contains a magic number: Assert.AreEqual(2' results.Count);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,EventConversation,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,AutoStart,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ContinueAsNewThenTimer,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForSingleInstanceWithoutLargeMessageBlobs,The following statement contains a magic number: TestOrchestrationClient client = await host.StartOrchestrationAsync(typeof(Orchestrations.Factorial)' 110' instanceId);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForSingleInstanceWithoutLargeMessageBlobs,The following statement contains a magic number: await client.WaitForCompletionAsync(TimeSpan.FromSeconds(60));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForSingleInstanceWithLargeMessageBlobs,The following statement contains a magic number: OrchestrationState status = await client.WaitForCompletionAsync(TimeSpan.FromMinutes(2));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeleteAll,The following statement contains a magic number: TestOrchestrationClient client = await host.StartOrchestrationAsync(typeof(Orchestrations.FanOutFanIn)' 50' firstInstanceId);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeleteAll,The following statement contains a magic number: await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeleteAll,The following statement contains a magic number: client = await host.StartOrchestrationAsync(typeof(Orchestrations.FanOutFanIn)' 50' secondInstanceId);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeleteAll,The following statement contains a magic number: await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeleteAll,The following statement contains a magic number: client = await host.StartOrchestrationAsync(typeof(Orchestrations.FanOutFanIn)' 50' thirdInstanceId);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeleteAll,The following statement contains a magic number: await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeleteAll,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromMinutes(2));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeleteAll,The following statement contains a magic number: Assert.AreEqual(4' results.Count);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeleteAll,The following statement contains a magic number: Assert.AreEqual(6' blobCount);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeletePartially,The following statement contains a magic number: TestOrchestrationClient client = await host.StartOrchestrationAsync(typeof(Orchestrations.FanOutFanIn)' 50' firstInstanceId);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeletePartially,The following statement contains a magic number: await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeletePartially,The following statement contains a magic number: await Task.Delay(5000);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeletePartially,The following statement contains a magic number: client = await host.StartOrchestrationAsync(typeof(Orchestrations.FanOutFanIn)' 50' secondInstanceId);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeletePartially,The following statement contains a magic number: await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeletePartially,The following statement contains a magic number: client = await host.StartOrchestrationAsync(typeof(Orchestrations.FanOutFanIn)' 50' thirdInstanceId);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeletePartially,The following statement contains a magic number: await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeletePartially,The following statement contains a magic number: Assert.AreEqual(3' results.Count);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,PurgeInstanceHistoryForTimePeriodDeletePartially,The following statement contains a magic number: Assert.IsNotNull(results[2].Output.Equals("\"Done\""));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ParallelOrchestration,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(90));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,LargeFanOutOrchestration,The following statement contains a magic number: var client = await host.StartOrchestrationAsync(typeof(Orchestrations.FanOutFanIn)' 1000);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,LargeFanOutOrchestration,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromMinutes(5));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,FanOutOrchestration_LargeHistoryBatches,The following statement contains a magic number: var client = await host.StartOrchestrationAsync(typeof(Orchestrations.SemiLargePayloadFanOutFanIn)' 90);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,FanOutOrchestration_LargeHistoryBatches,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromMinutes(5));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ActorOrchestration,The following statement contains a magic number: await client.WaitForStartupAsync(TimeSpan.FromSeconds(10));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ActorOrchestration,The following statement contains a magic number: await Task.Delay(2000);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ActorOrchestration,The following statement contains a magic number: status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(10));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ActorOrchestration,The following statement contains a magic number: Assert.AreEqual(3' JToken.Parse(status?.Output));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ActorOrchestrationDeleteAllLargeMessageBlobs,The following statement contains a magic number: Assert.AreEqual(3' blobCount);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ValidateCharacterCounterIntegrationTest,The following statement contains a magic number: OrchestrationState orchestrationState =                      await client.WaitForStartupAsync(TimeSpan.FromSeconds(10));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ValidateCharacterCounterIntegrationTest,The following statement contains a magic number: counter *= 2;
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ValidateCharacterCounterIntegrationTest,The following statement contains a magic number: await Task.Delay(10000);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ValidateCharacterCounterIntegrationTest,The following statement contains a magic number: counter *= 2;
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ValidateCharacterCounterIntegrationTest,The following statement contains a magic number: await Task.Delay(10000);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ValidateCharacterCounterIntegrationTest,The following statement contains a magic number: counter *= 2;
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ValidateCharacterCounterIntegrationTest,The following statement contains a magic number: await Task.Delay(10000);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ValidateCharacterCounterIntegrationTest,The following statement contains a magic number: status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(10));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,TerminateOrchestration,The following statement contains a magic number: await client.WaitForStartupAsync(TimeSpan.FromSeconds(10));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,TerminateOrchestration,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(10));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RewindOrchestrationsFail,The following statement contains a magic number: var client1 = await host.StartOrchestrationAsync(                      typeof(Orchestrations.FactorialOrchestratorFail)'                      input: 3'                      instanceId: singletonInstanceId1);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RewindOrchestrationsFail,The following statement contains a magic number: var statusFail = await client1.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RewindOrchestrationsFail,The following statement contains a magic number: var statusRewind = await client1.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RewindActivityFailFanOut,The following statement contains a magic number: var client = await host.StartOrchestrationAsync(                      typeof(Orchestrations.FanOutFanInRewind)'                      input: 3'                      instanceId: singletonInstanceId);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RewindActivityFailFanOut,The following statement contains a magic number: var statusFail = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RewindActivityFailFanOut,The following statement contains a magic number: var statusRewind = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RewindActivityFail,The following statement contains a magic number: var statusFail = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RewindActivityFail,The following statement contains a magic number: var statusRewind = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RewindMultipleActivityFail,The following statement contains a magic number: var client = await host.StartOrchestrationAsync(                      typeof(Orchestrations.FactorialMultipleActivityFail)'                      input: 4'                      instanceId: singletonInstanceId);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RewindMultipleActivityFail,The following statement contains a magic number: var statusFail = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RewindMultipleActivityFail,The following statement contains a magic number: statusFail = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RewindMultipleActivityFail,The following statement contains a magic number: var statusRewind = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RewindSubOrchestrationsTest,The following statement contains a magic number: var statusFail = await clientParent.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RewindSubOrchestrationsTest,The following statement contains a magic number: statusFail = await clientParent.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RewindSubOrchestrationsTest,The following statement contains a magic number: var statusRewind = await clientParent.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RewindSubOrchestrationActivityTest,The following statement contains a magic number: var statusFail = await clientParent.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RewindSubOrchestrationActivityTest,The following statement contains a magic number: statusFail = await clientParent.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RewindSubOrchestrationActivityTest,The following statement contains a magic number: var statusRewind = await clientParent.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RewindNestedSubOrchestrationTest,The following statement contains a magic number: var statusFail = await clientGrandparent.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RewindNestedSubOrchestrationTest,The following statement contains a magic number: var statusRewind = await clientGrandparent.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,TimerCancellation,The following statement contains a magic number: var timeout = TimeSpan.FromSeconds(10);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,TimerCancellation,The following statement contains a magic number: await client.WaitForStartupAsync(TimeSpan.FromSeconds(10));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,TimerCancellation,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,TimerExpiration,The following statement contains a magic number: var timeout = TimeSpan.FromSeconds(10);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,TimerExpiration,The following statement contains a magic number: await client.WaitForStartupAsync(TimeSpan.FromSeconds(10));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,TimerExpiration,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(20));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,OrchestrationConcurrency,The following statement contains a magic number: Func<Task> orchestrationStarter = async delegate ()                  {                      var timeout = TimeSpan.FromSeconds(10);                      var client = await host.StartOrchestrationAsync(typeof(Orchestrations.Approval)' timeout);                      await client.WaitForCompletionAsync(TimeSpan.FromSeconds(60));                        // Don't send any notification - let the internal timeout expire                  };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,OrchestrationConcurrency,The following statement contains a magic number: Func<Task> orchestrationStarter = async delegate ()                  {                      var timeout = TimeSpan.FromSeconds(10);                      var client = await host.StartOrchestrationAsync(typeof(Orchestrations.Approval)' timeout);                      await client.WaitForCompletionAsync(TimeSpan.FromSeconds(60));                        // Don't send any notification - let the internal timeout expire                  };
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,OrchestrationConcurrency,The following statement contains a magic number: int iterations = 10;
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,OrchestrationConcurrency,The following statement contains a magic number: Task timeoutTask = Task.Delay(TimeSpan.FromSeconds(60));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,HandledActivityException,The following statement contains a magic number: var client = await host.StartOrchestrationAsync(typeof(Orchestrations.TryCatchLoop)' 5);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,HandledActivityException,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(10));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,HandledActivityException,The following statement contains a magic number: Assert.AreEqual(5' JToken.Parse(status?.Output));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,UnhandledOrchestrationException,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,UnhandledActivityException,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,FanOutToTableStorage,The following statement contains a magic number: int iterations = 100;
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,FanOutToTableStorage,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(120));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,SmallTextMessagePayloads,The following statement contains a magic number: const int TargetPayloadSize = 1 * 1024;
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,SmallTextMessagePayloads,The following statement contains a magic number: i < 1000
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,SmallTextMessagePayloads,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(60));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,LargeTextMessagePayloads_BlobUrl,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromMinutes(2));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,LargeTextMessagePayloads_FetchLargeMessages,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromMinutes(2));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,NonBlobUriPayload_FetchLargeMessages_RetainsOriginalPayload,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromMinutes(2));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,LargeTextMessagePayloads_FetchLargeMessages_QueryState,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromMinutes(2));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,GenerateMediumRandomStringPayload,The following statement contains a magic number: const int TargetPayloadSize = 128 * 1024;
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,GenerateMediumRandomStringPayload,The following statement contains a magic number: const int TargetPayloadSize = 128 * 1024;
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,GenerateMediumRandomStringPayload,The following statement contains a magic number: i < 1000
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RecreateCompletedInstance,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RecreateCompletedInstance,The following statement contains a magic number: status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RecreateFailedInstance,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RecreateFailedInstance,The following statement contains a magic number: status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RecreateTerminatedInstance,The following statement contains a magic number: await client.WaitForStartupAsync(TimeSpan.FromSeconds(10));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RecreateTerminatedInstance,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(10));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RecreateTerminatedInstance,The following statement contains a magic number: status = await client.WaitForStartupAsync(TimeSpan.FromSeconds(10));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RecreateRunningInstance,The following statement contains a magic number: var status = await client.WaitForStartupAsync(TimeSpan.FromSeconds(10));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RecreateRunningInstance,The following statement contains a magic number: client = await host.StartOrchestrationAsync(                      typeof(Orchestrations.Counter)'                      input: 99'                      instanceId: singletonInstanceId);
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RecreateRunningInstance,The following statement contains a magic number: status = await client.WaitForStartupAsync(TimeSpan.FromSeconds(20));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ExtendedSessions_SessionTimeout,The following statement contains a magic number: const int SessionTimeoutInseconds = 5;
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ExtendedSessions_SessionTimeout,The following statement contains a magic number: var status = await client.WaitForStartupAsync(TimeSpan.FromSeconds(10));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ExtendedSessions_SessionTimeout,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(2));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,ExtendedSessions_SessionTimeout,The following statement contains a magic number: status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(10));
Magic Number,DurableTask.AzureStorage.Tests,AzureStorageScenarioTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,DoubleFanOut,The following statement contains a magic number: var status = await client.WaitForCompletionAsync(TimeSpan.FromSeconds(30));
Magic Number,DurableTask.AzureStorage.Tests,ParentWorkflowSubOrchestrationFail,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The following statement contains a magic number: var results = new Task<string>[2];
Magic Number,DurableTask.AzureStorage.Tests,ParentWorkflowSubOrchestrationFail,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The following statement contains a magic number: i < 2
Magic Number,DurableTask.AzureStorage.Tests,ParentWorkflowNestedActivityFail,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The following statement contains a magic number: var results = new Task<string>[2];
Magic Number,DurableTask.AzureStorage.Tests,ParentWorkflowNestedActivityFail,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The following statement contains a magic number: i < 2
Magic Number,DurableTask.AzureStorage.Tests,ParentWorkflowSubOrchestrationActivityFail,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The following statement contains a magic number: var results = new Task<string>[2];
Magic Number,DurableTask.AzureStorage.Tests,ParentWorkflowSubOrchestrationActivityFail,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The following statement contains a magic number: i < 2
Magic Number,DurableTask.AzureStorage.Tests,GrandparentWorkflowNestedActivityFail,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The following statement contains a magic number: var results = new Task<string>[2];
Magic Number,DurableTask.AzureStorage.Tests,GrandparentWorkflowNestedActivityFail,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The following statement contains a magic number: i < 2
Magic Number,DurableTask.AzureStorage.Tests,CharacterCounter,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The following statement contains a magic number: switch (operation?.ToLowerInvariant())                      {                          case "double":                              inputData = new Tuple<string' int>(                                  $"{inputData.Item1}{new string(inputData.Item1.Reverse().ToArray())}"'                                  inputData.Item2 * 2);                              break;                          case "end":                              done = true;                              break;                      }
Magic Number,DurableTask.AzureStorage.Tests,DoubleFanOut,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The following statement contains a magic number: var tasks = new Task<string>[5];
Magic Number,DurableTask.AzureStorage.Tests,DoubleFanOut,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The following statement contains a magic number: int x = r.Next(10000);
Magic Number,DurableTask.AzureStorage.Tests,DoubleFanOut,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The following statement contains a magic number: i < 5
Magic Number,DurableTask.AzureStorage.Tests,DoubleFanOut,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The following statement contains a magic number: var tasks2 = new Task<string>[5];
Magic Number,DurableTask.AzureStorage.Tests,DoubleFanOut,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The following statement contains a magic number: int x = r.Next(10000);
Magic Number,DurableTask.AzureStorage.Tests,DoubleFanOut,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The following statement contains a magic number: tasks2[i] = context.ScheduleTask<string>(typeof(Activities.Hello)' (i + 10).ToString());
Magic Number,DurableTask.AzureStorage.Tests,DoubleFanOut,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The following statement contains a magic number: i < 5
Magic Number,DurableTask.AzureStorage.Tests,MultiplyMultipleActivityFail,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,Execute,The following statement contains a magic number: (ShouldFail1 && (values[1] == 1)) || (ShouldFail2 && values[1] == 2)
Magic Number,DurableTask.AzureStorage.Tests,MultiplyFailOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,Execute,The following statement contains a magic number: (ShouldFail1 && (values[1] == 1)) || (ShouldFail2 && values[1] == 2)
Magic Number,DurableTask.AzureStorage.Tests,AzureTableTrackingStoreTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureTableTrackingStoreTest.cs,QueryStatus_WithContinuationToken_NoInputToken,The following statement contains a magic number: var result = await fixture.TrackingStore.GetStateAsync(fixture.ExpectedCreatedDateFrom' fixture.ExpectedCreatedDateTo' inputState' 3' fixture.InputToken);
Magic Number,DurableTask.AzureStorage.Tests,AzureTableTrackingStoreTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureTableTrackingStoreTest.cs,QueryStatus_WithContinuationToken_InputToken,The following statement contains a magic number: var result = await fixture.TrackingStore.GetStateAsync(fixture.ExpectedCreatedDateFrom' fixture.ExpectedCreatedDateTo' inputState' 3' fixture.InputToken);
Magic Number,DurableTask.AzureStorage.Tests,QueryFixture,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureTableTrackingStoreTest.cs,SetUpQueryStateWithPager,The following statement contains a magic number: this.ExpectedTop = 3;
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,TakeAndReturnBuffer,The following statement contains a magic number: byte[] buffer1024 = bufferManager.TakeBuffer(1024);
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,TakeAndReturnBuffer,The following statement contains a magic number: Assert.AreEqual(1024' buffer1024.Length);
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,TakeAndReturnBuffer,The following statement contains a magic number: Assert.AreEqual(1024' bufferManager.AllocatedBytes);
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,TakeAndReturnBuffer,The following statement contains a magic number: Assert.AreEqual(1024' bufferManager.AllocatedBytes);
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,TakeAndReturnBuffer,The following statement contains a magic number: Assert.AreEqual(1024' bufferManager.AvailableBytes);
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,TakeAndReturnBuffer,The following statement contains a magic number: byte[] buffer4096 = bufferManager.TakeBuffer(4096);
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,TakeAndReturnBuffer,The following statement contains a magic number: Assert.AreEqual(4096' buffer4096.Length);
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,TakeAndReturnBuffer,The following statement contains a magic number: Assert.AreEqual(1024 + 4096' bufferManager.AllocatedBytes);
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,TakeAndReturnBuffer,The following statement contains a magic number: Assert.AreEqual(1024 + 4096' bufferManager.AllocatedBytes);
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,TakeAndReturnBuffer,The following statement contains a magic number: Assert.AreEqual(1024' bufferManager.AvailableBytes);
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,TakeAndReturnBuffer,The following statement contains a magic number: Assert.AreEqual(2' bufferManager.BucketCount);
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,TakeAndReturnBuffer,The following statement contains a magic number: Assert.AreEqual(1024 + 4096' bufferManager.AllocatedBytes);
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,TakeAndReturnBuffer,The following statement contains a magic number: Assert.AreEqual(1024 + 4096' bufferManager.AllocatedBytes);
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,TakeAndReturnBuffer,The following statement contains a magic number: Assert.AreEqual(1024 + 4096' bufferManager.AvailableBytes);
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,TakeAndReturnBuffer,The following statement contains a magic number: Assert.AreEqual(1024 + 4096' bufferManager.AvailableBytes);
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,TakeAndReturnBuffer,The following statement contains a magic number: Assert.AreEqual(2' bufferManager.BucketCount);
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,RecycleBuffer,The following statement contains a magic number: i < 10
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,ConcurrentAllocations,The following statement contains a magic number: const int ConcurrentThreads = 16;
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,ConcurrentAllocations,The following statement contains a magic number: i < 5
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,MultipleBuckets,The following statement contains a magic number: int bufferSize = 1024 << (bucketCount - 1);
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,MultipleBuckets,The following statement contains a magic number: i <= 4
Magic Number,DurableTask.AzureStorage.Tests,BufferManagerTests,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\BufferManagerTests.cs,MultipleBuckets,The following statement contains a magic number: bucketCount <= 3
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTime,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTime,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTime,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTime,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTime,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTime,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTime,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTime,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTime,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTime,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTimeOnly,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = default(DateTime)'                  RuntimeStatus = new List<OrchestrationStatus>()'              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTimeOnly,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = default(DateTime)'                  RuntimeStatus = new List<OrchestrationStatus>()'              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTimeOnly,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = default(DateTime)'                  RuntimeStatus = new List<OrchestrationStatus>()'              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTimeOnly,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = default(DateTime)'                  RuntimeStatus = new List<OrchestrationStatus>()'              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTimeOnly,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = default(DateTime)'                  RuntimeStatus = new List<OrchestrationStatus>()'              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTimeVariations,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTimeVariations,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTimeVariations,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTimeVariations,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTimeVariations,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTimeVariations,The following statement contains a magic number: condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTimeVariations,The following statement contains a magic number: condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTimeVariations,The following statement contains a magic number: condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTimeVariations,The following statement contains a magic number: condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_CreatedTimeVariations,The following statement contains a magic number: condition = new OrchestrationInstanceStatusQueryCondition              {                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Combination,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  RuntimeStatus = runtimeStatus'                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Combination,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  RuntimeStatus = runtimeStatus'                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Combination,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  RuntimeStatus = runtimeStatus'                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Combination,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  RuntimeStatus = runtimeStatus'                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Combination,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  RuntimeStatus = runtimeStatus'                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Combination,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  RuntimeStatus = runtimeStatus'                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Combination,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  RuntimeStatus = runtimeStatus'                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Combination,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  RuntimeStatus = runtimeStatus'                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Combination,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  RuntimeStatus = runtimeStatus'                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Combination,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  RuntimeStatus = runtimeStatus'                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_MultipleRuntimeStatus,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  RuntimeStatus = runtimeStatus'                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)'                  TaskHubNames = new string[] {"FooProduction"' "BarStaging"}              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_MultipleRuntimeStatus,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  RuntimeStatus = runtimeStatus'                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)'                  TaskHubNames = new string[] {"FooProduction"' "BarStaging"}              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_MultipleRuntimeStatus,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  RuntimeStatus = runtimeStatus'                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)'                  TaskHubNames = new string[] {"FooProduction"' "BarStaging"}              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_MultipleRuntimeStatus,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  RuntimeStatus = runtimeStatus'                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)'                  TaskHubNames = new string[] {"FooProduction"' "BarStaging"}              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_MultipleRuntimeStatus,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  RuntimeStatus = runtimeStatus'                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)'                  TaskHubNames = new string[] {"FooProduction"' "BarStaging"}              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_MultipleRuntimeStatus,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  RuntimeStatus = runtimeStatus'                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)'                  TaskHubNames = new string[] {"FooProduction"' "BarStaging"}              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_MultipleRuntimeStatus,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  RuntimeStatus = runtimeStatus'                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)'                  TaskHubNames = new string[] {"FooProduction"' "BarStaging"}              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_MultipleRuntimeStatus,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  RuntimeStatus = runtimeStatus'                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)'                  TaskHubNames = new string[] {"FooProduction"' "BarStaging"}              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_MultipleRuntimeStatus,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  RuntimeStatus = runtimeStatus'                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)'                  TaskHubNames = new string[] {"FooProduction"' "BarStaging"}              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_MultipleRuntimeStatus,The following statement contains a magic number: var condition = new OrchestrationInstanceStatusQueryCondition              {                  RuntimeStatus = runtimeStatus'                  CreatedTimeFrom = new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  CreatedTimeTo = new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)'                  TaskHubNames = new string[] {"FooProduction"' "BarStaging"}              };
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Parse,The following statement contains a magic number: var condition = OrchestrationInstanceStatusQueryCondition.Parse(                  new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)'                  runtimeStatus);
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Parse,The following statement contains a magic number: var condition = OrchestrationInstanceStatusQueryCondition.Parse(                  new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)'                  runtimeStatus);
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Parse,The following statement contains a magic number: var condition = OrchestrationInstanceStatusQueryCondition.Parse(                  new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)'                  runtimeStatus);
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Parse,The following statement contains a magic number: var condition = OrchestrationInstanceStatusQueryCondition.Parse(                  new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)'                  runtimeStatus);
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Parse,The following statement contains a magic number: var condition = OrchestrationInstanceStatusQueryCondition.Parse(                  new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)'                  runtimeStatus);
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Parse,The following statement contains a magic number: var condition = OrchestrationInstanceStatusQueryCondition.Parse(                  new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)'                  runtimeStatus);
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Parse,The following statement contains a magic number: var condition = OrchestrationInstanceStatusQueryCondition.Parse(                  new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)'                  runtimeStatus);
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Parse,The following statement contains a magic number: var condition = OrchestrationInstanceStatusQueryCondition.Parse(                  new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)'                  runtimeStatus);
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Parse,The following statement contains a magic number: var condition = OrchestrationInstanceStatusQueryCondition.Parse(                  new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)'                  runtimeStatus);
Magic Number,DurableTask.AzureStorage.Tests,OrchestrationInstanceStatusQueryConditionTest,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\OrchestrationInstanceStatusQueryConditionTest.cs,OrchestrationInstanceQuery_Parse,The following statement contains a magic number: var condition = OrchestrationInstanceStatusQueryCondition.Parse(                  new DateTime(2018' 1' 10' 10' 10' 10' DateTimeKind.Utc)'                  new DateTime(2018' 1' 10' 10' 10' 50' DateTimeKind.Utc)'                  runtimeStatus);
Magic Number,DurableTask.AzureStorage.Tests,TestOrchestrationClient,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\TestOrchestrationClient.cs,AdjustTimeout,The following statement contains a magic number: TimeSpan debuggingTimeout = TimeSpan.FromMinutes(5);
Missing Default,DurableTask.AzureStorage.Tests,Counter,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The following switch statement is missing a default case: switch (operation?.ToLowerInvariant())                      {                          case "incr":                              currentValue++;                              break;                          case "decr":                              currentValue--;                              break;                          case "end":                              done = true;                              break;                      }
Missing Default,DurableTask.AzureStorage.Tests,CharacterCounter,D:\research\architectureSmells\repos\affandar_durabletask\Test\DurableTask.AzureStorage.Tests\AzureStorageScenarioTests.cs,RunTask,The following switch statement is missing a default case: switch (operation?.ToLowerInvariant())                      {                          case "double":                              inputData = new Tuple<string' int>(                                  $"{inputData.Item1}{new string(inputData.Item1.Reverse().ToArray())}"'                                  inputData.Item2 * 2);                              break;                          case "end":                              done = true;                              break;                      }
