Implementation smell,Namespace,Class,File,Method,Description
Long Method,DurableTask.Samples,Program,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Program.cs,Main,The method has 148 lines of code.
Complex Method,DurableTask.Samples,Program,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Program.cs,Main,Cyclomatic complexity of the method is 20
Complex Method,DurableTask.Samples.Replat,MigrateOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrateOrchestration.cs,RunTask,Cyclomatic complexity of the method is 11
Complex Method,DurableTask.Samples.SumOfSquares,SumOfSquaresOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\SumOfSquares\SumOfSquaresOrchestration.cs,RunTask,Cyclomatic complexity of the method is 8
Long Statement,DurableTask.Samples.Common.WorkItems,EmailTask,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Common.WorkItems\EmailTask.cs,Execute,The length of the statement  "                throw new ArgumentException("Network Credentials not set for SMTP client' set the 'SmtpNetworkCredentials' parameter in App.config"); " is 133.
Long Statement,DurableTask.Samples.Greetings2,GreetingsOrchestration2,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Greetings2\GreetingsOrchestration.cs,RunTask,The length of the statement  "            string greeting = await context.ScheduleTask<string>("DurableTaskSamples.Greetings.SendGreetingTask"' string.Empty' u.Result); " is 126.
Long Statement,DurableTask.Samples,Program,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Program.cs,Main,The length of the statement  "                                (ArgumentOptions.Parameters != null && ArgumentOptions.Parameters.Length > 0) ? ArgumentOptions.Parameters[0] : null).Result; " is 125.
Long Statement,DurableTask.Samples,Program,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Program.cs,Main,The length of the statement  "                            instance = taskHubClient.CreateOrchestrationInstanceAsync(typeof(AverageCalculatorOrchestration)' instanceId' input).Result; " is 124.
Long Statement,DurableTask.Samples,Program,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Program.cs,Main,The length of the statement  "                            instance = taskHubClient.CreateOrchestrationInstanceWithRaisedEventAsync(typeof(SignalOrchestration)' instanceId' null' ArgumentOptions.Signal' ArgumentOptions.Parameters[0]).Result; " is 182.
Long Statement,DurableTask.Samples,Program,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Program.cs,Main,The length of the statement  "                        OrchestrationState taskResult = taskHubClient.WaitForOrchestrationAsync(instance' TimeSpan.FromSeconds(60)' CancellationToken.None).Result; " is 139.
Long Statement,DurableTask.Samples.Replat,MigrateOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrateOrchestration.cs,RunTask,The length of the statement  "                //this.LogOrchestrationEvent(TraceEventType.Information' "Updated Websites ttl for Subscription '{0}' with result '{1}'".FormatInvariant(subscriptionId' " is 152.
Long Statement,DurableTask.Samples.Replat,MigrateOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrateOrchestration.cs,RunTask,The length of the statement  "            //this.LogOrchestrationEvent(TraceEventType.Information' "Subscription '{0}' locked result: {1}".FormatInvariant(subscriptionId' subscriptionLocked.ToString())); " is 161.
Long Statement,DurableTask.Samples.Replat,MigrateOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrateOrchestration.cs,RunTask,The length of the statement  "            //this.LogOrchestrationEvent(TraceEventType.Information' "Subscription '{0}' has '{1}' apps to migrate".FormatInvariant(subscriptionId' apps.Length.ToString())); " is 161.
Long Statement,DurableTask.Samples.Replat,MigrateOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrateOrchestration.cs,RunTask,The length of the statement  "                            //this.LogOrchestrationEvent(TraceEventType.Information' "Enabling Subscription '{0}' before migration".FormatInvariant(subscriptionId)); " is 137.
Long Statement,DurableTask.Samples.Replat,MigrateOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrateOrchestration.cs,RunTask,The length of the statement  "                        //this.LogOrchestrationEvent(TraceEventType.Information' "Subscription '{0}' validated for starting migration".FormatInvariant(subscriptionId)); " is 144.
Long Statement,DurableTask.Samples.Replat,MigrateOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrateOrchestration.cs,RunTask,The length of the statement  "                        //this.LogOrchestrationEvent(TraceEventType.Information' "Subscription '{0}' migration result: {1}".FormatInvariant(subscriptionId' " is 131.
Long Statement,DurableTask.Samples.Replat,MigrateOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrateOrchestration.cs,RunTask,The length of the statement  "                            this.status.IsFlipped = await ApplyAction(apps' (i' app) => this.antaresReplatMigrationTasks.UpdateWebSiteHostName(subscriptionId' app)); " is 137.
Long Statement,DurableTask.Samples.Replat,MigrateOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrateOrchestration.cs,RunTask,The length of the statement  "                            //this.LogOrchestrationEvent(TraceEventType.Information' "Subscription '{0}' flipped result: {1}".FormatInvariant(subscriptionId' " is 129.
Long Statement,DurableTask.Samples.Replat,MigrateOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrateOrchestration.cs,RunTask,The length of the statement  "                            this.status.IsWhitelisted = await SafeTaskInvoke(() => this.antaresReplatMigrationTasks.WhitelistSubscription(subscriptionId)); " is 127.
Long Statement,DurableTask.Samples.Replat,MigrateOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrateOrchestration.cs,RunTask,The length of the statement  "                            //this.LogOrchestrationEvent(TraceEventType.Information' "Subscription '{0}' IsWhitelisted result: {1}".FormatInvariant(subscriptionId' " is 135.
Long Statement,DurableTask.Samples.Replat,MigrateOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrateOrchestration.cs,RunTask,The length of the statement  "                    //this.LogOrchestrationEvent(TraceEventType.Information' "Disable Subscription '{0}' after migration".FormatInvariant(subscriptionId)); " is 135.
Long Statement,DurableTask.Samples.Replat,MigrateOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrateOrchestration.cs,RunTask,The length of the statement  "                //this.LogOrchestrationEvent(TraceEventType.Information' "Subscription '{0}' Unlocked".FormatInvariant(subscriptionId)); " is 120.
Long Statement,DurableTask.Samples.Replat,MigrateOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrateOrchestration.cs,RunTask,The length of the statement  "                this.status.IsCleaned = await SafeTaskInvoke(() => this.antaresReplatMigrationTasks.CleanupPrivateStamp(subscriptionId)); " is 121.
Long Statement,DurableTask.Samples.Replat,MigrateOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrateOrchestration.cs,RunTask,The length of the statement  "                //this.LogOrchestrationEvent(TraceEventType.Information' "Private stamp cleaned for Subscription '{0}'' Result: {1}".FormatInvariant( " is 133.
Long Statement,DurableTask.Samples.Replat,MigrateOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrateOrchestration.cs,RunTask,The length of the statement  "            //this.LogOrchestrationEvent(TraceEventType.Information' "Migration result for Subscription '{0}': {1}".FormatInvariant( " is 120.
Long Statement,DurableTask.Samples.Replat,MigrationTasks,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrationTasks.cs,ExportSite,The length of the statement  "            Console.WriteLine($"Export Site Called for SubId: '{subscriptionId}' with Id: '{id}'.  App Name: '{application.Name}'"); " is 120.
Long Statement,DurableTask.Samples.Replat,MigrationTasks,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrationTasks.cs,ImportSite,The length of the statement  "            Console.WriteLine($"Import Site Called for SubId: '{subscriptionId}' with Id: '{id}'.  App Name: '{application.Name}'"); " is 120.
Long Statement,DurableTask.Samples.Replat,MigrationTasks,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrationTasks.cs,MigrateServerFarmConfig,The length of the statement  "            Console.WriteLine($"Migrate ServerFarm Called for SubId: '{subscriptionId}' with Id: '{id}'.  App Name: '{application.Name}'"); " is 127.
Long Statement,DurableTask.Samples.Signal,SignalOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Signal\SignalOrchestration.cs,RunTask,The length of the statement  "            string greeting = await context.ScheduleTask<string>("DurableTask.Samples.Greetings.SendGreetingTask"' string.Empty' user); " is 123.
Long Statement,DurableTask.Samples.SumOfSquares,SumOfSquaresOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\SumOfSquares\SumOfSquaresOrchestration.cs,RunTask,The length of the statement  "                        Task<int> subOrchestration = context.CreateSubOrchestrationInstance<int>(typeof(SumOfSquaresOrchestration)' item.ToString(Newtonsoft.Json.Formatting.None)); " is 156.
Long Statement,DurableTask.Samples.SumOfSquares,SumOfSquaresOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\SumOfSquares\SumOfSquaresOrchestration.cs,RunTask,The length of the statement  "                        ////resultChunks.Add(await context.CreateSubOrchestrationInstance<int>(typeof(SumOfSquaresOrchestration)' item.ToString(Newtonsoft.Json.Formatting.None))); " is 155.
Empty Catch Block,DurableTask.Samples.Replat,MigrateOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrateOrchestration.cs,RunTask,The method has an empty catch block.
Empty Catch Block,DurableTask.Samples.Replat,MigrateOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrateOrchestration.cs,SafeTaskInvoke,The method has an empty catch block.
Magic Number,DurableTask.Samples.AverageCalculator,AverageCalculatorOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\AverageCalculator\AverageCalculatorOrchestration.cs,RunTask,The following statement contains a magic number: input == null || input.Length != 3
Magic Number,DurableTask.Samples.AverageCalculator,AverageCalculatorOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\AverageCalculator\AverageCalculatorOrchestration.cs,RunTask,The following statement contains a magic number: int step = input[2];
Magic Number,DurableTask.Samples.AverageCalculator,ComputeSumTask,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\AverageCalculator\ComputeSumTask.cs,Execute,The following statement contains a magic number: chunk == null || chunk.Length != 2
Magic Number,DurableTask.Samples.Common.WorkItems,EmailTask,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Common.WorkItems\EmailTask.cs,Execute,The following statement contains a magic number: var smtp = new SmtpClient              {                  Host = "smtp.live.com"'                  Port = 587'                  EnableSsl = true'                  DeliveryMethod = SmtpDeliveryMethod.Network'                  UseDefaultCredentials = false'                  Credentials = new NetworkCredential(FromAddress.Address' networkCredentials)              };
Magic Number,DurableTask.Samples.Cron,CronOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Cron\CronOrchestration.cs,RunTask,The following statement contains a magic number: var numberOfTimes = 4;
Magic Number,DurableTask.Samples.Cron,CronOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Cron\CronOrchestration.cs,RunTask,The following statement contains a magic number: var runAfterEverySeconds = 10;
Magic Number,DurableTask.Samples.Cron,CronTask,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Cron\CronTask.cs,Execute,The following statement contains a magic number: Thread.Sleep(2 * 1000);
Magic Number,DurableTask.Samples.Cron,CronTask,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Cron\CronTask.cs,Execute,The following statement contains a magic number: Thread.Sleep(2 * 1000);
Magic Number,DurableTask.Samples.Greetings,GetUserName,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Greetings\GetUserName.cs,InitializeComponent,The following statement contains a magic number: this.txtUserName.Location = new System.Drawing.Point(106' 10);
Magic Number,DurableTask.Samples.Greetings,GetUserName,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Greetings\GetUserName.cs,InitializeComponent,The following statement contains a magic number: this.txtUserName.Location = new System.Drawing.Point(106' 10);
Magic Number,DurableTask.Samples.Greetings,GetUserName,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Greetings\GetUserName.cs,InitializeComponent,The following statement contains a magic number: this.txtUserName.Size = new System.Drawing.Size(265' 20);
Magic Number,DurableTask.Samples.Greetings,GetUserName,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Greetings\GetUserName.cs,InitializeComponent,The following statement contains a magic number: this.txtUserName.Size = new System.Drawing.Size(265' 20);
Magic Number,DurableTask.Samples.Greetings,GetUserName,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Greetings\GetUserName.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(12' 13);
Magic Number,DurableTask.Samples.Greetings,GetUserName,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Greetings\GetUserName.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(12' 13);
Magic Number,DurableTask.Samples.Greetings,GetUserName,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Greetings\GetUserName.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(88' 13);
Magic Number,DurableTask.Samples.Greetings,GetUserName,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Greetings\GetUserName.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(88' 13);
Magic Number,DurableTask.Samples.Greetings,GetUserName,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Greetings\GetUserName.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point(15' 55);
Magic Number,DurableTask.Samples.Greetings,GetUserName,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Greetings\GetUserName.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point(15' 55);
Magic Number,DurableTask.Samples.Greetings,GetUserName,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Greetings\GetUserName.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size(112' 23);
Magic Number,DurableTask.Samples.Greetings,GetUserName,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Greetings\GetUserName.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size(112' 23);
Magic Number,DurableTask.Samples.Greetings,GetUserName,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Greetings\GetUserName.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.TabIndex = 2;
Magic Number,DurableTask.Samples.Greetings,GetUserName,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Greetings\GetUserName.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,DurableTask.Samples.Greetings,GetUserName,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Greetings\GetUserName.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,DurableTask.Samples.Greetings,GetUserName,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Greetings\GetUserName.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(404' 90);
Magic Number,DurableTask.Samples.Greetings,GetUserName,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Greetings\GetUserName.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(404' 90);
Magic Number,DurableTask.Samples,Program,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Program.cs,Main,The following statement contains a magic number: switch (ArgumentOptions.StartInstance)                      {                          case "Greetings":                              instance = taskHubClient.CreateOrchestrationInstanceAsync(typeof(GreetingsOrchestration)' instanceId' null).Result;                              break;                          case "Greetings2":                              if (ArgumentOptions.Parameters == null || ArgumentOptions.Parameters.Length != 1)                              {                                  throw new ArgumentException("parameters");                              }                                instance = taskHubClient.CreateOrchestrationInstanceAsync(typeof(GreetingsOrchestration2)' instanceId'                                   int.Parse(ArgumentOptions.Parameters[0])).Result;                              break;                          case "Cron":                              // Sample Input: "0 12 * */2 Mon"                              instance = taskHubClient.CreateOrchestrationInstanceAsync(typeof(CronOrchestration)' instanceId'                                   (ArgumentOptions.Parameters != null && ArgumentOptions.Parameters.Length > 0) ? ArgumentOptions.Parameters[0] : null).Result;                              break;                          case "Average":                              // Sample Input: "1 50 10"                              if (ArgumentOptions.Parameters == null || ArgumentOptions.Parameters.Length != 3)                              {                                  throw new ArgumentException("parameters");                              }                                int[] input = ArgumentOptions.Parameters.Select(p => int.Parse(p)).ToArray();                              instance = taskHubClient.CreateOrchestrationInstanceAsync(typeof(AverageCalculatorOrchestration)' instanceId' input).Result;                              break;                          case "ErrorHandling":                              instance = taskHubClient.CreateOrchestrationInstanceAsync(typeof(ErrorHandlingOrchestration)' instanceId' null).Result;                              break;                          case "SumOfSquares":                              instance = taskHubClient.CreateOrchestrationInstanceAsync(                                  "SumOfSquaresOrchestration"'                                   "V1"'                                   instanceId'                                   File.ReadAllText("SumofSquares\\BagOfNumbers.json")'                                  new Dictionary<string' string>(1) { { "Category"' "testing" } }).Result;                              break;                          case "Signal":                              instance = taskHubClient.CreateOrchestrationInstanceAsync(typeof(SignalOrchestration)' instanceId' null).Result;                              break;                          case "SignalAndRaise":                              if (ArgumentOptions.Parameters == null || ArgumentOptions.Parameters.Length != 1)                              {                                  throw new ArgumentException("parameters");                              }                                instance = taskHubClient.CreateOrchestrationInstanceWithRaisedEventAsync(typeof(SignalOrchestration)' instanceId' null' ArgumentOptions.Signal' ArgumentOptions.Parameters[0]).Result;                              break;                          case "Replat":                              instance = taskHubClient.CreateOrchestrationInstanceAsync(typeof(MigrateOrchestration)' instanceId'                                  new MigrateOrchestrationData { SubscriptionId = "03a1cd39-47ac-4a57-9ff5-a2c2a2a76088"' IsDisabled = false }).Result;                              break;                          default:                              throw new Exception("Unsupported Orchestration Name: " + ArgumentOptions.StartInstance);                      }
Magic Number,DurableTask.Samples,Program,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Program.cs,Main,The following statement contains a magic number: OrchestrationState taskResult = taskHubClient.WaitForOrchestrationAsync(instance' TimeSpan.FromSeconds(60)' CancellationToken.None).Result;
Magic Number,DurableTask.Samples.Replat,MigrateOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrateOrchestration.cs,RunTask,The following statement contains a magic number: this.status.TtlUpdateTimerFired = await Context.CreateTimer(Context.CurrentUtcDateTime.AddSeconds(10)' true);
Magic Number,DurableTask.Samples.Replat,MigrateOrchestration,D:\research\architectureSmells\repos\affandar_durabletask\samples\DurableTask.Samples\Replat\MigrateOrchestration.cs,RunTask,The following statement contains a magic number: await Context.CreateTimer(Context.CurrentUtcDateTime.AddSeconds(5)' true);
