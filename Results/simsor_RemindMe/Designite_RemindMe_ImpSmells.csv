Implementation smell,Namespace,Class,File,Method,Description
Complex Method,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,Cyclomatic complexity of the method is 12
Long Statement,RemindMe,DetailsPage,C:\repos\simsor_RemindMe\RemindMe\DetailsPage.xaml.cs,delete_action,The length of the statement  "	MessageBoxResult m = MessageBox.Show ("Are you sure you want to delete this event?"' "Event deletion"' MessageBoxButton.OKCancel); " is 130.
Long Statement,RemindMe,DetailsPage,C:\repos\simsor_RemindMe\RemindMe\DetailsPage.xaml.cs,add_calendar,The length of the statement  "	MessageBoxResult m = MessageBox.Show ("This will add the next occurence of this event to your calendar. Are you sure you want to continue?"' "Calendar"' MessageBoxButton.OKCancel); " is 180.
Long Statement,RemindMe,MainPage,C:\repos\simsor_RemindMe\RemindMe\MainPage.xaml.cs,MainLongListSelector_SelectionChanged,The length of the statement  "	NavigationService.Navigate (new Uri ("/DetailsPage.xaml?selectedItem=" + (MainLongListSelector.SelectedItem as ItemViewModel).ID' UriKind.Relative)); " is 149.
Long Statement,RemindMe,MainPage,C:\repos\simsor_RemindMe\RemindMe\MainPage.xaml.cs,StartPeriodicTask,The length of the statement  "		if (exception.Message.Contains ("BNS Error: The maximum number of ScheduledActions of this type have already been added.")) { " is 125.
Long Statement,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The length of the statement  "	//this.Items.Add(new ItemViewModel() { ID = "0"' LineOne = "runtime one"' LineTwo = "Maecenas praesent accumsan bibendum"' LineThree = "Facilisi faucibus habitant inceptos interdum lobortis nascetur pharetra placerat pulvinar sagittis senectus sociosqu" }); " is 257.
Long Statement,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The length of the statement  "					finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago"; " is 120.
Long Statement,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The length of the statement  "					finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago"; " is 218.
Long Statement,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The length of the statement  "				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago"; " is 308.
Empty Catch Block,RemindMe,MainPage,C:\repos\simsor_RemindMe\RemindMe\MainPage.xaml.cs,MainPage,The method has an empty catch block.
Empty Catch Block,RemindMe,MainPage,C:\repos\simsor_RemindMe\RemindMe\MainPage.xaml.cs,StartPeriodicTask,The method has an empty catch block.
Empty Catch Block,RemindMe,MainPage,C:\repos\simsor_RemindMe\RemindMe\MainPage.xaml.cs,StopPeriodicTask,The method has an empty catch block.
Magic Number,RemindMe,Add,C:\repos\simsor_RemindMe\RemindMe\Add.xaml.cs,Button_Click_1,The following statement contains a magic number: try {  	if (repeatName == "hours")  		repeatTime = TimeSpan.FromHours (int.Parse (contexte.repeat));  	else if (repeatName == "days")  		repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat));  	else if (repeatName == "months")  		repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat) * 30);  	else if (repeatName == "years")  		repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat) * 365.15);  }  catch (System.FormatException) {  	MessageBox.Show ("Only integers are allowed");  }  
Magic Number,RemindMe,Add,C:\repos\simsor_RemindMe\RemindMe\Add.xaml.cs,Button_Click_1,The following statement contains a magic number: try {  	if (repeatName == "hours")  		repeatTime = TimeSpan.FromHours (int.Parse (contexte.repeat));  	else if (repeatName == "days")  		repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat));  	else if (repeatName == "months")  		repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat) * 30);  	else if (repeatName == "years")  		repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat) * 365.15);  }  catch (System.FormatException) {  	MessageBox.Show ("Only integers are allowed");  }  
Magic Number,RemindMe,Add,C:\repos\simsor_RemindMe\RemindMe\Add.xaml.cs,Button_Click_1,The following statement contains a magic number: if (repeatName == "hours")  	repeatTime = TimeSpan.FromHours (int.Parse (contexte.repeat));  else if (repeatName == "days")  	repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat));  else if (repeatName == "months")  	repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat) * 30);  else if (repeatName == "years")  	repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat) * 365.15);  
Magic Number,RemindMe,Add,C:\repos\simsor_RemindMe\RemindMe\Add.xaml.cs,Button_Click_1,The following statement contains a magic number: if (repeatName == "hours")  	repeatTime = TimeSpan.FromHours (int.Parse (contexte.repeat));  else if (repeatName == "days")  	repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat));  else if (repeatName == "months")  	repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat) * 30);  else if (repeatName == "years")  	repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat) * 365.15);  
Magic Number,RemindMe,Add,C:\repos\simsor_RemindMe\RemindMe\Add.xaml.cs,Button_Click_1,The following statement contains a magic number: if (repeatName == "days")  	repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat));  else if (repeatName == "months")  	repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat) * 30);  else if (repeatName == "years")  	repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat) * 365.15);  
Magic Number,RemindMe,Add,C:\repos\simsor_RemindMe\RemindMe\Add.xaml.cs,Button_Click_1,The following statement contains a magic number: if (repeatName == "days")  	repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat));  else if (repeatName == "months")  	repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat) * 30);  else if (repeatName == "years")  	repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat) * 365.15);  
Magic Number,RemindMe,Add,C:\repos\simsor_RemindMe\RemindMe\Add.xaml.cs,Button_Click_1,The following statement contains a magic number: if (repeatName == "months")  	repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat) * 30);  else if (repeatName == "years")  	repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat) * 365.15);  
Magic Number,RemindMe,Add,C:\repos\simsor_RemindMe\RemindMe\Add.xaml.cs,Button_Click_1,The following statement contains a magic number: if (repeatName == "months")  	repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat) * 30);  else if (repeatName == "years")  	repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat) * 365.15);  
Magic Number,RemindMe,Add,C:\repos\simsor_RemindMe\RemindMe\Add.xaml.cs,Button_Click_1,The following statement contains a magic number: repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat) * 30);  
Magic Number,RemindMe,Add,C:\repos\simsor_RemindMe\RemindMe\Add.xaml.cs,Button_Click_1,The following statement contains a magic number: if (repeatName == "years")  	repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat) * 365.15);  
Magic Number,RemindMe,Add,C:\repos\simsor_RemindMe\RemindMe\Add.xaml.cs,Button_Click_1,The following statement contains a magic number: repeatTime = TimeSpan.FromDays (int.Parse (contexte.repeat) * 365.15);  
Magic Number,RemindMe,MainPage,C:\repos\simsor_RemindMe\RemindMe\MainPage.xaml.cs,StartPeriodicTask,The following statement contains a magic number: try {  	ScheduledActionService.Add (periodicTask);  	ScheduledActionService.LaunchForTest ("RemindAgent"' TimeSpan.FromSeconds (3));  	Debug.WriteLine ("Open the background agent success");  }  catch (InvalidOperationException exception) {  	if (exception.Message.Contains ("exists already")) {  		Debug.WriteLine ("Since then the background agent success is already running");  	}  	if (exception.Message.Contains ("BNS Error: The action is disabled")) {  		Debug.WriteLine ("Background processes for this application has been prohibited");  	}  	if (exception.Message.Contains ("BNS Error: The maximum number of ScheduledActions of this type have already been added.")) {  		Debug.WriteLine ("You open the daemon has exceeded the hardware limitations");  	}  	else  		Debug.WriteLine ("Launching the Agent failed: unknown InvalidOperationException occured.\n" + exception.Message);  }  catch (SchedulerServiceException) {  }  
Magic Number,RemindMe,MainPage,C:\repos\simsor_RemindMe\RemindMe\MainPage.xaml.cs,StartPeriodicTask,The following statement contains a magic number: ScheduledActionService.LaunchForTest ("RemindAgent"' TimeSpan.FromSeconds (3));  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (!IsolatedStorageSettings.ApplicationSettings.Contains ("events")) {  	IsolatedStorageSettings.ApplicationSettings ["events"] = new List<RemindEvent> ();  	List<RemindEvent> evenements_ = (List<RemindEvent>)IsolatedStorageSettings.ApplicationSettings ["events"];  	evenements_.Add (new RemindEvent ());  	evenements_ [0].label = "Example event";  	evenements_ [0].lastTime = DateTime.Now;  	evenements_ [0].repeatEvery = TimeSpan.FromHours (24);  	//IsolatedStorageSettings.ApplicationSettings.Save();  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: evenements_ [0].repeatEvery = TimeSpan.FromHours (24);  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: for (int i = 0; i < evenements.Count; i++) {  	TimeSpan timeDiff = DateTime.Now.Subtract (evenements [i].lastTime);  	String finalLastTime = "";  	String shortLastTime = "";  	String finalRepeatEvery = "";  	if (timeDiff.TotalDays < 1) {  		// TIMEDIFF CALCULATION  		if (timeDiff.TotalHours < 1) {  			if (timeDiff.TotalSeconds < 60) {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  			}  			else {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  			}  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  		}  		// REPEATEVERY CALCULATION  		if (evenements [i].repeatEvery.TotalDays < 1)  			finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  		else {  			if (evenements [i].repeatEvery.TotalDays < 30)  				finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  			else {  				if (evenements [i].repeatEvery.TotalDays < 365)  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  				else  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  			}  		}  	}  	else  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  	temporary_model.Add (new ItemViewModel () {  		ID = i.ToString ()'  		LineOne = evenements [i].label'  		LineTwo = shortLastTime + " ago' every " + finalRepeatEvery'  		LineThree = finalLastTime'  		LastTime = evenements [i].lastTime'  		RepeatEvery = evenements [i].repeatEvery  	});  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: for (int i = 0; i < evenements.Count; i++) {  	TimeSpan timeDiff = DateTime.Now.Subtract (evenements [i].lastTime);  	String finalLastTime = "";  	String shortLastTime = "";  	String finalRepeatEvery = "";  	if (timeDiff.TotalDays < 1) {  		// TIMEDIFF CALCULATION  		if (timeDiff.TotalHours < 1) {  			if (timeDiff.TotalSeconds < 60) {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  			}  			else {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  			}  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  		}  		// REPEATEVERY CALCULATION  		if (evenements [i].repeatEvery.TotalDays < 1)  			finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  		else {  			if (evenements [i].repeatEvery.TotalDays < 30)  				finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  			else {  				if (evenements [i].repeatEvery.TotalDays < 365)  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  				else  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  			}  		}  	}  	else  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  	temporary_model.Add (new ItemViewModel () {  		ID = i.ToString ()'  		LineOne = evenements [i].label'  		LineTwo = shortLastTime + " ago' every " + finalRepeatEvery'  		LineThree = finalLastTime'  		LastTime = evenements [i].lastTime'  		RepeatEvery = evenements [i].repeatEvery  	});  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: for (int i = 0; i < evenements.Count; i++) {  	TimeSpan timeDiff = DateTime.Now.Subtract (evenements [i].lastTime);  	String finalLastTime = "";  	String shortLastTime = "";  	String finalRepeatEvery = "";  	if (timeDiff.TotalDays < 1) {  		// TIMEDIFF CALCULATION  		if (timeDiff.TotalHours < 1) {  			if (timeDiff.TotalSeconds < 60) {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  			}  			else {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  			}  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  		}  		// REPEATEVERY CALCULATION  		if (evenements [i].repeatEvery.TotalDays < 1)  			finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  		else {  			if (evenements [i].repeatEvery.TotalDays < 30)  				finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  			else {  				if (evenements [i].repeatEvery.TotalDays < 365)  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  				else  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  			}  		}  	}  	else  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  	temporary_model.Add (new ItemViewModel () {  		ID = i.ToString ()'  		LineOne = evenements [i].label'  		LineTwo = shortLastTime + " ago' every " + finalRepeatEvery'  		LineThree = finalLastTime'  		LastTime = evenements [i].lastTime'  		RepeatEvery = evenements [i].repeatEvery  	});  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: for (int i = 0; i < evenements.Count; i++) {  	TimeSpan timeDiff = DateTime.Now.Subtract (evenements [i].lastTime);  	String finalLastTime = "";  	String shortLastTime = "";  	String finalRepeatEvery = "";  	if (timeDiff.TotalDays < 1) {  		// TIMEDIFF CALCULATION  		if (timeDiff.TotalHours < 1) {  			if (timeDiff.TotalSeconds < 60) {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  			}  			else {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  			}  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  		}  		// REPEATEVERY CALCULATION  		if (evenements [i].repeatEvery.TotalDays < 1)  			finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  		else {  			if (evenements [i].repeatEvery.TotalDays < 30)  				finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  			else {  				if (evenements [i].repeatEvery.TotalDays < 365)  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  				else  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  			}  		}  	}  	else  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  	temporary_model.Add (new ItemViewModel () {  		ID = i.ToString ()'  		LineOne = evenements [i].label'  		LineTwo = shortLastTime + " ago' every " + finalRepeatEvery'  		LineThree = finalLastTime'  		LastTime = evenements [i].lastTime'  		RepeatEvery = evenements [i].repeatEvery  	});  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: for (int i = 0; i < evenements.Count; i++) {  	TimeSpan timeDiff = DateTime.Now.Subtract (evenements [i].lastTime);  	String finalLastTime = "";  	String shortLastTime = "";  	String finalRepeatEvery = "";  	if (timeDiff.TotalDays < 1) {  		// TIMEDIFF CALCULATION  		if (timeDiff.TotalHours < 1) {  			if (timeDiff.TotalSeconds < 60) {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  			}  			else {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  			}  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  		}  		// REPEATEVERY CALCULATION  		if (evenements [i].repeatEvery.TotalDays < 1)  			finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  		else {  			if (evenements [i].repeatEvery.TotalDays < 30)  				finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  			else {  				if (evenements [i].repeatEvery.TotalDays < 365)  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  				else  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  			}  		}  	}  	else  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  	temporary_model.Add (new ItemViewModel () {  		ID = i.ToString ()'  		LineOne = evenements [i].label'  		LineTwo = shortLastTime + " ago' every " + finalRepeatEvery'  		LineThree = finalLastTime'  		LastTime = evenements [i].lastTime'  		RepeatEvery = evenements [i].repeatEvery  	});  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: for (int i = 0; i < evenements.Count; i++) {  	TimeSpan timeDiff = DateTime.Now.Subtract (evenements [i].lastTime);  	String finalLastTime = "";  	String shortLastTime = "";  	String finalRepeatEvery = "";  	if (timeDiff.TotalDays < 1) {  		// TIMEDIFF CALCULATION  		if (timeDiff.TotalHours < 1) {  			if (timeDiff.TotalSeconds < 60) {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  			}  			else {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  			}  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  		}  		// REPEATEVERY CALCULATION  		if (evenements [i].repeatEvery.TotalDays < 1)  			finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  		else {  			if (evenements [i].repeatEvery.TotalDays < 30)  				finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  			else {  				if (evenements [i].repeatEvery.TotalDays < 365)  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  				else  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  			}  		}  	}  	else  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  	temporary_model.Add (new ItemViewModel () {  		ID = i.ToString ()'  		LineOne = evenements [i].label'  		LineTwo = shortLastTime + " ago' every " + finalRepeatEvery'  		LineThree = finalLastTime'  		LastTime = evenements [i].lastTime'  		RepeatEvery = evenements [i].repeatEvery  	});  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: for (int i = 0; i < evenements.Count; i++) {  	TimeSpan timeDiff = DateTime.Now.Subtract (evenements [i].lastTime);  	String finalLastTime = "";  	String shortLastTime = "";  	String finalRepeatEvery = "";  	if (timeDiff.TotalDays < 1) {  		// TIMEDIFF CALCULATION  		if (timeDiff.TotalHours < 1) {  			if (timeDiff.TotalSeconds < 60) {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  			}  			else {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  			}  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  		}  		// REPEATEVERY CALCULATION  		if (evenements [i].repeatEvery.TotalDays < 1)  			finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  		else {  			if (evenements [i].repeatEvery.TotalDays < 30)  				finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  			else {  				if (evenements [i].repeatEvery.TotalDays < 365)  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  				else  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  			}  		}  	}  	else  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  	temporary_model.Add (new ItemViewModel () {  		ID = i.ToString ()'  		LineOne = evenements [i].label'  		LineTwo = shortLastTime + " ago' every " + finalRepeatEvery'  		LineThree = finalLastTime'  		LastTime = evenements [i].lastTime'  		RepeatEvery = evenements [i].repeatEvery  	});  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: for (int i = 0; i < evenements.Count; i++) {  	TimeSpan timeDiff = DateTime.Now.Subtract (evenements [i].lastTime);  	String finalLastTime = "";  	String shortLastTime = "";  	String finalRepeatEvery = "";  	if (timeDiff.TotalDays < 1) {  		// TIMEDIFF CALCULATION  		if (timeDiff.TotalHours < 1) {  			if (timeDiff.TotalSeconds < 60) {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  			}  			else {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  			}  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  		}  		// REPEATEVERY CALCULATION  		if (evenements [i].repeatEvery.TotalDays < 1)  			finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  		else {  			if (evenements [i].repeatEvery.TotalDays < 30)  				finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  			else {  				if (evenements [i].repeatEvery.TotalDays < 365)  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  				else  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  			}  		}  	}  	else  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  	temporary_model.Add (new ItemViewModel () {  		ID = i.ToString ()'  		LineOne = evenements [i].label'  		LineTwo = shortLastTime + " ago' every " + finalRepeatEvery'  		LineThree = finalLastTime'  		LastTime = evenements [i].lastTime'  		RepeatEvery = evenements [i].repeatEvery  	});  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: for (int i = 0; i < evenements.Count; i++) {  	TimeSpan timeDiff = DateTime.Now.Subtract (evenements [i].lastTime);  	String finalLastTime = "";  	String shortLastTime = "";  	String finalRepeatEvery = "";  	if (timeDiff.TotalDays < 1) {  		// TIMEDIFF CALCULATION  		if (timeDiff.TotalHours < 1) {  			if (timeDiff.TotalSeconds < 60) {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  			}  			else {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  			}  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  		}  		// REPEATEVERY CALCULATION  		if (evenements [i].repeatEvery.TotalDays < 1)  			finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  		else {  			if (evenements [i].repeatEvery.TotalDays < 30)  				finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  			else {  				if (evenements [i].repeatEvery.TotalDays < 365)  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  				else  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  			}  		}  	}  	else  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  	temporary_model.Add (new ItemViewModel () {  		ID = i.ToString ()'  		LineOne = evenements [i].label'  		LineTwo = shortLastTime + " ago' every " + finalRepeatEvery'  		LineThree = finalLastTime'  		LastTime = evenements [i].lastTime'  		RepeatEvery = evenements [i].repeatEvery  	});  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: for (int i = 0; i < evenements.Count; i++) {  	TimeSpan timeDiff = DateTime.Now.Subtract (evenements [i].lastTime);  	String finalLastTime = "";  	String shortLastTime = "";  	String finalRepeatEvery = "";  	if (timeDiff.TotalDays < 1) {  		// TIMEDIFF CALCULATION  		if (timeDiff.TotalHours < 1) {  			if (timeDiff.TotalSeconds < 60) {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  			}  			else {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  			}  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  		}  		// REPEATEVERY CALCULATION  		if (evenements [i].repeatEvery.TotalDays < 1)  			finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  		else {  			if (evenements [i].repeatEvery.TotalDays < 30)  				finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  			else {  				if (evenements [i].repeatEvery.TotalDays < 365)  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  				else  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  			}  		}  	}  	else  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  	temporary_model.Add (new ItemViewModel () {  		ID = i.ToString ()'  		LineOne = evenements [i].label'  		LineTwo = shortLastTime + " ago' every " + finalRepeatEvery'  		LineThree = finalLastTime'  		LastTime = evenements [i].lastTime'  		RepeatEvery = evenements [i].repeatEvery  	});  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: for (int i = 0; i < evenements.Count; i++) {  	TimeSpan timeDiff = DateTime.Now.Subtract (evenements [i].lastTime);  	String finalLastTime = "";  	String shortLastTime = "";  	String finalRepeatEvery = "";  	if (timeDiff.TotalDays < 1) {  		// TIMEDIFF CALCULATION  		if (timeDiff.TotalHours < 1) {  			if (timeDiff.TotalSeconds < 60) {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  			}  			else {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  			}  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  		}  		// REPEATEVERY CALCULATION  		if (evenements [i].repeatEvery.TotalDays < 1)  			finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  		else {  			if (evenements [i].repeatEvery.TotalDays < 30)  				finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  			else {  				if (evenements [i].repeatEvery.TotalDays < 365)  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  				else  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  			}  		}  	}  	else  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  	temporary_model.Add (new ItemViewModel () {  		ID = i.ToString ()'  		LineOne = evenements [i].label'  		LineTwo = shortLastTime + " ago' every " + finalRepeatEvery'  		LineThree = finalLastTime'  		LastTime = evenements [i].lastTime'  		RepeatEvery = evenements [i].repeatEvery  	});  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: for (int i = 0; i < evenements.Count; i++) {  	TimeSpan timeDiff = DateTime.Now.Subtract (evenements [i].lastTime);  	String finalLastTime = "";  	String shortLastTime = "";  	String finalRepeatEvery = "";  	if (timeDiff.TotalDays < 1) {  		// TIMEDIFF CALCULATION  		if (timeDiff.TotalHours < 1) {  			if (timeDiff.TotalSeconds < 60) {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  			}  			else {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  			}  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  		}  		// REPEATEVERY CALCULATION  		if (evenements [i].repeatEvery.TotalDays < 1)  			finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  		else {  			if (evenements [i].repeatEvery.TotalDays < 30)  				finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  			else {  				if (evenements [i].repeatEvery.TotalDays < 365)  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  				else  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  			}  		}  	}  	else  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  	temporary_model.Add (new ItemViewModel () {  		ID = i.ToString ()'  		LineOne = evenements [i].label'  		LineTwo = shortLastTime + " ago' every " + finalRepeatEvery'  		LineThree = finalLastTime'  		LastTime = evenements [i].lastTime'  		RepeatEvery = evenements [i].repeatEvery  	});  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: for (int i = 0; i < evenements.Count; i++) {  	TimeSpan timeDiff = DateTime.Now.Subtract (evenements [i].lastTime);  	String finalLastTime = "";  	String shortLastTime = "";  	String finalRepeatEvery = "";  	if (timeDiff.TotalDays < 1) {  		// TIMEDIFF CALCULATION  		if (timeDiff.TotalHours < 1) {  			if (timeDiff.TotalSeconds < 60) {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  			}  			else {  				finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  				shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  			}  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  		}  		// REPEATEVERY CALCULATION  		if (evenements [i].repeatEvery.TotalDays < 1)  			finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  		else {  			if (evenements [i].repeatEvery.TotalDays < 30)  				finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  			else {  				if (evenements [i].repeatEvery.TotalDays < 365)  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  				else  					finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  			}  		}  	}  	else  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  	temporary_model.Add (new ItemViewModel () {  		ID = i.ToString ()'  		LineOne = evenements [i].label'  		LineTwo = shortLastTime + " ago' every " + finalRepeatEvery'  		LineThree = finalLastTime'  		LastTime = evenements [i].lastTime'  		RepeatEvery = evenements [i].repeatEvery  	});  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalDays < 1) {  	// TIMEDIFF CALCULATION  	if (timeDiff.TotalHours < 1) {  		if (timeDiff.TotalSeconds < 60) {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  		}  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  	}  	// REPEATEVERY CALCULATION  	if (evenements [i].repeatEvery.TotalDays < 1)  		finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  	else {  		if (evenements [i].repeatEvery.TotalDays < 30)  			finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  		else {  			if (evenements [i].repeatEvery.TotalDays < 365)  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  			else  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  		}  	}  }  else  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalDays < 1) {  	// TIMEDIFF CALCULATION  	if (timeDiff.TotalHours < 1) {  		if (timeDiff.TotalSeconds < 60) {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  		}  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  	}  	// REPEATEVERY CALCULATION  	if (evenements [i].repeatEvery.TotalDays < 1)  		finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  	else {  		if (evenements [i].repeatEvery.TotalDays < 30)  			finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  		else {  			if (evenements [i].repeatEvery.TotalDays < 365)  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  			else  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  		}  	}  }  else  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalDays < 1) {  	// TIMEDIFF CALCULATION  	if (timeDiff.TotalHours < 1) {  		if (timeDiff.TotalSeconds < 60) {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  		}  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  	}  	// REPEATEVERY CALCULATION  	if (evenements [i].repeatEvery.TotalDays < 1)  		finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  	else {  		if (evenements [i].repeatEvery.TotalDays < 30)  			finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  		else {  			if (evenements [i].repeatEvery.TotalDays < 365)  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  			else  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  		}  	}  }  else  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalDays < 1) {  	// TIMEDIFF CALCULATION  	if (timeDiff.TotalHours < 1) {  		if (timeDiff.TotalSeconds < 60) {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  		}  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  	}  	// REPEATEVERY CALCULATION  	if (evenements [i].repeatEvery.TotalDays < 1)  		finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  	else {  		if (evenements [i].repeatEvery.TotalDays < 30)  			finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  		else {  			if (evenements [i].repeatEvery.TotalDays < 365)  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  			else  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  		}  	}  }  else  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalDays < 1) {  	// TIMEDIFF CALCULATION  	if (timeDiff.TotalHours < 1) {  		if (timeDiff.TotalSeconds < 60) {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  		}  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  	}  	// REPEATEVERY CALCULATION  	if (evenements [i].repeatEvery.TotalDays < 1)  		finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  	else {  		if (evenements [i].repeatEvery.TotalDays < 30)  			finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  		else {  			if (evenements [i].repeatEvery.TotalDays < 365)  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  			else  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  		}  	}  }  else  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalDays < 1) {  	// TIMEDIFF CALCULATION  	if (timeDiff.TotalHours < 1) {  		if (timeDiff.TotalSeconds < 60) {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  		}  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  	}  	// REPEATEVERY CALCULATION  	if (evenements [i].repeatEvery.TotalDays < 1)  		finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  	else {  		if (evenements [i].repeatEvery.TotalDays < 30)  			finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  		else {  			if (evenements [i].repeatEvery.TotalDays < 365)  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  			else  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  		}  	}  }  else  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalDays < 1) {  	// TIMEDIFF CALCULATION  	if (timeDiff.TotalHours < 1) {  		if (timeDiff.TotalSeconds < 60) {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  		}  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  	}  	// REPEATEVERY CALCULATION  	if (evenements [i].repeatEvery.TotalDays < 1)  		finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  	else {  		if (evenements [i].repeatEvery.TotalDays < 30)  			finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  		else {  			if (evenements [i].repeatEvery.TotalDays < 365)  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  			else  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  		}  	}  }  else  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalDays < 1) {  	// TIMEDIFF CALCULATION  	if (timeDiff.TotalHours < 1) {  		if (timeDiff.TotalSeconds < 60) {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  		}  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  	}  	// REPEATEVERY CALCULATION  	if (evenements [i].repeatEvery.TotalDays < 1)  		finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  	else {  		if (evenements [i].repeatEvery.TotalDays < 30)  			finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  		else {  			if (evenements [i].repeatEvery.TotalDays < 365)  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  			else  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  		}  	}  }  else  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalDays < 1) {  	// TIMEDIFF CALCULATION  	if (timeDiff.TotalHours < 1) {  		if (timeDiff.TotalSeconds < 60) {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  		}  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  	}  	// REPEATEVERY CALCULATION  	if (evenements [i].repeatEvery.TotalDays < 1)  		finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  	else {  		if (evenements [i].repeatEvery.TotalDays < 30)  			finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  		else {  			if (evenements [i].repeatEvery.TotalDays < 365)  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  			else  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  		}  	}  }  else  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalDays < 1) {  	// TIMEDIFF CALCULATION  	if (timeDiff.TotalHours < 1) {  		if (timeDiff.TotalSeconds < 60) {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  		}  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  	}  	// REPEATEVERY CALCULATION  	if (evenements [i].repeatEvery.TotalDays < 1)  		finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  	else {  		if (evenements [i].repeatEvery.TotalDays < 30)  			finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  		else {  			if (evenements [i].repeatEvery.TotalDays < 365)  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  			else  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  		}  	}  }  else  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalDays < 1) {  	// TIMEDIFF CALCULATION  	if (timeDiff.TotalHours < 1) {  		if (timeDiff.TotalSeconds < 60) {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  		}  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  	}  	// REPEATEVERY CALCULATION  	if (evenements [i].repeatEvery.TotalDays < 1)  		finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  	else {  		if (evenements [i].repeatEvery.TotalDays < 30)  			finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  		else {  			if (evenements [i].repeatEvery.TotalDays < 365)  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  			else  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  		}  	}  }  else  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalDays < 1) {  	// TIMEDIFF CALCULATION  	if (timeDiff.TotalHours < 1) {  		if (timeDiff.TotalSeconds < 60) {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  		}  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  	}  	// REPEATEVERY CALCULATION  	if (evenements [i].repeatEvery.TotalDays < 1)  		finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  	else {  		if (evenements [i].repeatEvery.TotalDays < 30)  			finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  		else {  			if (evenements [i].repeatEvery.TotalDays < 365)  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  			else  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  		}  	}  }  else  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalDays < 1) {  	// TIMEDIFF CALCULATION  	if (timeDiff.TotalHours < 1) {  		if (timeDiff.TotalSeconds < 60) {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  		}  		else {  			finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  			shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  		}  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  	}  	// REPEATEVERY CALCULATION  	if (evenements [i].repeatEvery.TotalDays < 1)  		finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  	else {  		if (evenements [i].repeatEvery.TotalDays < 30)  			finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  		else {  			if (evenements [i].repeatEvery.TotalDays < 365)  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  			else  				finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  		}  	}  }  else  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + timeDiff.TotalDays + " days ago";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalHours < 1) {  	if (timeDiff.TotalSeconds < 60) {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  	}  }  else {  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  	shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalHours < 1) {  	if (timeDiff.TotalSeconds < 60) {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  	}  }  else {  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  	shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalHours < 1) {  	if (timeDiff.TotalSeconds < 60) {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  	}  }  else {  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  	shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalHours < 1) {  	if (timeDiff.TotalSeconds < 60) {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  	}  }  else {  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  	shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalHours < 1) {  	if (timeDiff.TotalSeconds < 60) {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  	}  }  else {  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  	shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalHours < 1) {  	if (timeDiff.TotalSeconds < 60) {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  	}  }  else {  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  	shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalHours < 1) {  	if (timeDiff.TotalSeconds < 60) {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  	}  }  else {  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  	shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalHours < 1) {  	if (timeDiff.TotalSeconds < 60) {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  	}  }  else {  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  	shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalHours < 1) {  	if (timeDiff.TotalSeconds < 60) {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  	}  	else {  		finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  		shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  	}  }  else {  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  	shortLastTime = Math.Round (timeDiff.TotalHours' 1) + " h";  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalSeconds < 60) {  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  	shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  }  else {  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  	shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalSeconds < 60) {  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  	shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  }  else {  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  	shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalSeconds < 60) {  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  	shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  }  else {  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  	shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalSeconds < 60) {  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  	shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  }  else {  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  	shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (timeDiff.TotalSeconds < 60) {  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds) + "s ago";  	shortLastTime = Math.Round (timeDiff.TotalSeconds) + " s";  }  else {  	finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  	shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalSeconds / 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: shortLastTime = Math.Round (timeDiff.TotalSeconds / 60) + " min";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: finalLastTime = evenements [i].lastTime.ToString () + "\n" + "This was " + Math.Round (timeDiff.TotalHours' 1) + "h " + (Math.Round (timeDiff.TotalSeconds / 60) - Math.Round (timeDiff.TotalHours' 1) * 60) + "min " + Math.Round (timeDiff.TotalSeconds - Math.Round (timeDiff.TotalSeconds / 60) * 60) + "s ago";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (evenements [i].repeatEvery.TotalDays < 1)  	finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  else {  	if (evenements [i].repeatEvery.TotalDays < 30)  		finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  	else {  		if (evenements [i].repeatEvery.TotalDays < 365)  			finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  		else  			finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  	}  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (evenements [i].repeatEvery.TotalDays < 1)  	finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  else {  	if (evenements [i].repeatEvery.TotalDays < 30)  		finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  	else {  		if (evenements [i].repeatEvery.TotalDays < 365)  			finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  		else  			finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  	}  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (evenements [i].repeatEvery.TotalDays < 1)  	finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  else {  	if (evenements [i].repeatEvery.TotalDays < 30)  		finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  	else {  		if (evenements [i].repeatEvery.TotalDays < 365)  			finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  		else  			finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  	}  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (evenements [i].repeatEvery.TotalDays < 1)  	finalRepeatEvery = evenements [i].repeatEvery.TotalHours.ToString () + "h";  else {  	if (evenements [i].repeatEvery.TotalDays < 30)  		finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  	else {  		if (evenements [i].repeatEvery.TotalDays < 365)  			finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  		else  			finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  	}  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (evenements [i].repeatEvery.TotalDays < 30)  	finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  else {  	if (evenements [i].repeatEvery.TotalDays < 365)  		finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  	else  		finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (evenements [i].repeatEvery.TotalDays < 30)  	finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  else {  	if (evenements [i].repeatEvery.TotalDays < 365)  		finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  	else  		finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (evenements [i].repeatEvery.TotalDays < 30)  	finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  else {  	if (evenements [i].repeatEvery.TotalDays < 365)  		finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  	else  		finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (evenements [i].repeatEvery.TotalDays < 30)  	finalRepeatEvery = evenements [i].repeatEvery.TotalDays.ToString () + " days";  else {  	if (evenements [i].repeatEvery.TotalDays < 365)  		finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  	else  		finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  }  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (evenements [i].repeatEvery.TotalDays < 365)  	finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  else  	finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (evenements [i].repeatEvery.TotalDays < 365)  	finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  else  	finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: if (evenements [i].repeatEvery.TotalDays < 365)  	finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  else  	finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 30' 1).ToString () + " months";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: finalRepeatEvery = Math.Round (evenements [i].repeatEvery.TotalDays / 365' 1).ToString () + " years";  
Magic Number,RemindMe.ViewModels,MainViewModel,C:\repos\simsor_RemindMe\RemindMe\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: while (temporary_model.Count > 0) {  	long closestTime = 999999999999999999;  	int closestTimeId = 0;  	for (int j = 0; j < temporary_model.Count; j++) {  		if ((temporary_model [j].LastTime.Ticks + temporary_model [j].RepeatEvery.Ticks) < closestTime) {  			closestTime = temporary_model [j].LastTime.Ticks + temporary_model [j].RepeatEvery.Ticks;  			closestTimeId = j;  		}  	}  	this.Items.Add (temporary_model [closestTimeId]);  	temporary_model.RemoveAt (closestTimeId);  }  
