Implementation smell,Namespace,Class,File,Method,Description
Long Method,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,TestUnspents,The method has 154 lines of code.
Long Method,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,CheckColdStorageTransactions,The method has 234 lines of code.
Long Method,Swarmops.Logic.Financial,PaymentTransferInfo,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentTransferInfo.cs,FromObject,The method has 128 lines of code.
Long Method,Swarmops.Logic.Financial,ExternalBankData,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExternalBankData.cs,LoadData,The method has 262 lines of code.
Long Method,Swarmops.Logic.Financial,Payout,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payout.cs,CreateFromProtoIdentity,The method has 206 lines of code.
Long Method,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The method has 276 lines of code.
Long Method,Swarmops.Logic.Security,Authority,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authority.cs,FilterPeople,The method has 135 lines of code.
Long Method,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,NotifyBouncingEmails,The method has 145 lines of code.
Long Method,Swarmops.Logic.Structure,GeographyUpdate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyUpdate.cs,PrimeCountry,The method has 109 lines of code.
Long Method,Swarmops.Logic.Structure,GeographyStatistics,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyStatistics.cs,GeneratePresent,The method has 115 lines of code.
Long Method,Swarmops.Logic.Structure,Organization,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organization.cs,EnableEconomy,The method has 105 lines of code.
Complex Method,Swarmops.Logic.Communications,MailTemplate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\MailTemplate.cs,NormalizeHtmlExtracted,Cyclomatic complexity of the method is 15
Complex Method,Swarmops.Logic.Communications,TypedMailTemplate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\TypedMailTemplate.cs,InsertOnePlaceholderToTemplate,Cyclomatic complexity of the method is 8
Complex Method,Swarmops.Logic.Communications,TypedMailTemplate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\TypedMailTemplate.cs,PreparePlaceholders,Cyclomatic complexity of the method is 13
Complex Method,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,TestUnspents,Cyclomatic complexity of the method is 11
Complex Method,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,CheckColdStorageTransactions,Cyclomatic complexity of the method is 38
Complex Method,Swarmops.Logic.Financial,FinancialAccountAutomationProfile,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialAccountAutomationProfile.cs,FromIdentity,Cyclomatic complexity of the method is 8
Complex Method,Swarmops.Logic.Financial,PaymentTransferInfo,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentTransferInfo.cs,FromObject,Cyclomatic complexity of the method is 14
Complex Method,Swarmops.Logic.Financial,VatReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\VatReport.cs,AddVatReportItemsFromAccountRows,Cyclomatic complexity of the method is 10
Complex Method,Swarmops.Logic.Financial,ExchangeRateSnapshot,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExchangeRateSnapshot.cs,Create,Cyclomatic complexity of the method is 8
Complex Method,Swarmops.Logic.Financial,ExternalBankData,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExternalBankData.cs,LoadData,Cyclomatic complexity of the method is 42
Complex Method,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,PopulateLookups,Cyclomatic complexity of the method is 11
Complex Method,Swarmops.Logic.Financial,OutboundInvoices,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\OutboundInvoices.cs,AutomatchAgainstUnbalancedTransactions,Cyclomatic complexity of the method is 9
Complex Method,Swarmops.Logic.Financial,PaymentGroup,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentGroup.cs,MapTransaction,Cyclomatic complexity of the method is 8
Complex Method,Swarmops.Logic.Financial,Payout,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payout.cs,LoadDependencies,Cyclomatic complexity of the method is 11
Complex Method,Swarmops.Logic.Financial,Payout,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payout.cs,CreateBitcoinPayoutFromPrototype,Cyclomatic complexity of the method is 10
Complex Method,Swarmops.Logic.Financial,Payout,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payout.cs,CreateFromProtoIdentity,Cyclomatic complexity of the method is 22
Complex Method,Swarmops.Logic.Financial,Payout,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payout.cs,BindToTransactionAndClose,Cyclomatic complexity of the method is 9
Complex Method,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,AddUnpaidExpenseClaims,Cyclomatic complexity of the method is 12
Complex Method,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,AddUnpaidCashAdvances,Cyclomatic complexity of the method is 8
Complex Method,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,AddUnpaidSalaries,Cyclomatic complexity of the method is 9
Complex Method,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,AutomatchAgainstUnbalancedTransactions,Cyclomatic complexity of the method is 11
Complex Method,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,Cyclomatic complexity of the method is 25
Complex Method,Swarmops.Logic.Financial,Salaries,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Salaries.cs,CreateAnnualStatements,Cyclomatic complexity of the method is 8
Complex Method,Swarmops.Logic.Financial,Salary,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Salary.cs,Create,Cyclomatic complexity of the method is 12
Complex Method,Swarmops.Logic.Financial,FinancialAccount,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialAccount.cs,GetBudgetAttestationSpaceAdjustments,Cyclomatic complexity of the method is 14
Complex Method,Swarmops.Logic.Financial,FinancialTransaction,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialTransaction.cs,GetFinancialDependencyType,Cyclomatic complexity of the method is 9
Complex Method,Swarmops.Logic.Financial,FinancialTransaction,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialTransaction.cs,RecalculateTransaction,Cyclomatic complexity of the method is 8
Complex Method,Swarmops.Logic.Cache,MailTemplateCache,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Cache\MailTemplateCache.cs,GetBestMatch,Cyclomatic complexity of the method is 8
Complex Method,Swarmops.Logic.Cache,OrganizationCache,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Cache\OrganizationCache.cs,GetOrganizationIdsInGeographies,Cyclomatic complexity of the method is 9
Complex Method,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,HashPassword,Cyclomatic complexity of the method is 9
Complex Method,Swarmops.Logic.Security,Authentication,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authentication.cs,Authenticate,Cyclomatic complexity of the method is 12
Complex Method,Swarmops.Logic.Security,Authentication,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authentication.cs,RequestNewPasswordProcess,Cyclomatic complexity of the method is 12
Complex Method,Swarmops.Logic.Security,Authentication,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authentication.cs,RequestActivistSignoffProcess,Cyclomatic complexity of the method is 12
Complex Method,Swarmops.Logic.Security,Authority,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authority.cs,HasAccess,Cyclomatic complexity of the method is 11
Complex Method,Swarmops.Logic.Security,Authority,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authority.cs,FilterPeople,Cyclomatic complexity of the method is 23
Complex Method,Swarmops.Logic.Security,Authority,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authority.cs,CanSeePerson,Cyclomatic complexity of the method is 12
Complex Method,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,LegacyAddressToCashAddress,Cyclomatic complexity of the method is 16
Complex Method,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,CashAddressToLegacyAddress,Cyclomatic complexity of the method is 19
Complex Method,Swarmops.Logic.Support,PdfProcessor,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PdfProcessor.cs,RasterizeOne,Cyclomatic complexity of the method is 8
Complex Method,Swarmops.Logic.Support,Document,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\Document.cs,GetDocumentTypeForObject,Cyclomatic complexity of the method is 15
Complex Method,Swarmops.Logic.Support,QuotedPrintable,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\QuotedPrintable.cs,EncodeString,Cyclomatic complexity of the method is 8
Complex Method,Swarmops.Logic.Support,SingularFactory,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SingularFactory.cs,FromBasic,Cyclomatic complexity of the method is 8
Complex Method,Swarmops.Logic.DataObjects,PeopleDataObject,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\DataObjects\PeopleDataObject.cs,SelectSortedStatic,Cyclomatic complexity of the method is 9
Complex Method,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,NotifyBouncingEmails,Cyclomatic complexity of the method is 19
Complex Method,Swarmops.Logic.Special.Sweden,SwedishForumDatabaseInstantForum,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SwedishForumDatabase.cs,GetPollVotes,Cyclomatic complexity of the method is 9
Complex Method,Swarmops.Logic.Special.Sweden,SwedishForumDatabaseInstantForum,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SwedishForumDatabase.cs,GetDatabase,Cyclomatic complexity of the method is 10
Complex Method,Swarmops.Logic.Special.Sweden,SwedishForumDatabaseVBulletin,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SwedishForumDatabase.cs,GetPollVotes,Cyclomatic complexity of the method is 10
Complex Method,Swarmops.Logic.Structure,GeographyUpdate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyUpdate.cs,PrimeCountry,Cyclomatic complexity of the method is 12
Complex Method,Swarmops.Logic.Structure,Geographies,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Geographies.cs,RemoveRedundant,Cyclomatic complexity of the method is 8
Complex Method,Swarmops.Logic.Structure,GeographyStatistics,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyStatistics.cs,GeneratePresent,Cyclomatic complexity of the method is 17
Complex Method,Swarmops.Logic.Structure,Organizations,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organizations.cs,RemoveRedundant,Cyclomatic complexity of the method is 8
Complex Method,Swarmops.Logic.Structure,Organizations,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organizations.cs,GetMostLocalOrganization,Cyclomatic complexity of the method is 9
Complex Method,Swarmops.Logic.Swarm,DashboardTodos,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\DashboardTodos.cs,AddExpenseClaimAttestations,Cyclomatic complexity of the method is 9
Complex Method,Swarmops.Logic.Swarm,DashboardTodos,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\DashboardTodos.cs,AddCashAdvanceAttestations,Cyclomatic complexity of the method is 9
Complex Method,Swarmops.Logic.Swarm,DashboardTodos,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\DashboardTodos.cs,AddPayouts,Cyclomatic complexity of the method is 9
Complex Method,Swarmops.Logic.Swarm,People,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\People.cs,LogicalOr,Cyclomatic complexity of the method is 8
Complex Method,Swarmops.Logic.Swarm,Position,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Position.cs,HasAccess,Cyclomatic complexity of the method is 8
Long Parameter List,Swarmops.Logic.Communications,OutboundComm,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundComm.cs,Create,The method has 8 parameters. Parameters: sender' from' organization' resolver' recipientDataXml' transmitterClass' payloadXml' priority
Long Parameter List,Swarmops.Logic.Communications,OutboundComm,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundComm.cs,Create,The method has 8 parameters. Parameters: sender' from' organization' resolverDataXml' recipientDataXml' transmitterClassString' payloadXml' priority
Long Parameter List,Swarmops.Logic.Communications,OutboundComm,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundComm.cs,CreateNotification,The method has 5 parameters. Parameters: organization' notification' strings' customStrings' recipients
Long Parameter List,Swarmops.Logic.Communications,OutboundComm,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundComm.cs,CreateParticipantMail,The method has 6 parameters. Parameters: customSubject' customBody' sender' from' organization' geography
Long Parameter List,Swarmops.Logic.Communications,OutboundComm,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundComm.cs,CreateNotification,The method has 5 parameters. Parameters: organization' notificationResourceString' strings' customStrings' recipients
Long Parameter List,Swarmops.Logic.Communications,OutboundComm,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundComm.cs,CreateNotificationApprovalNeeded,The method has 6 parameters. Parameters: budget' concernedPerson' supplier' amountRequested' purpose' notification
Long Parameter List,Swarmops.Logic.Communications,OutboundComm,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundComm.cs,CreateNotificationOfFinancialValidation,The method has 6 parameters. Parameters: budget' concernedPerson' amountRequested' purpose' notification' reasonGiven
Long Parameter List,Swarmops.Logic.Communications,OutboundComm,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundComm.cs,CreateSecurityNotification,The method has 5 parameters. Parameters: concernedPerson' actingPerson' organization' ticket' notification
Long Parameter List,Swarmops.Logic.Communications,AutoMail,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\AutoMail.cs,Create,The method has 6 parameters. Parameters: type' org' geo' author' title' body
Long Parameter List,Swarmops.Logic.Communications,MailTemplate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\MailTemplate.cs,Create,The method has 5 parameters. Parameters: templateName' languageCode' countryCode' organizationId' templateBody
Long Parameter List,Swarmops.Logic.Communications,OutboundMail,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundMail.cs,Create,The method has 7 parameters. Parameters: author' title' body' mailPriority' mailType' organization' geography
Long Parameter List,Swarmops.Logic.Communications,OutboundMail,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundMail.cs,Create,The method has 8 parameters. Parameters: author' title' body' mailPriority' mailType' organization' geography' releaseDateTime
Long Parameter List,Swarmops.Logic.Communications,OutboundMail,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundMail.cs,CreateFake,The method has 7 parameters. Parameters: author' title' body' ignoredPriority' mailType' organization' geography
Long Parameter List,Swarmops.Logic.Communications,OutboundMail,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundMail.cs,CreateFake,The method has 6 parameters. Parameters: author' title' body' mailType' organization' geography
Long Parameter List,Swarmops.Logic.Communications,OutboundMail,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundMail.cs,CreateFunctional,The method has 8 parameters. Parameters: authorType' title' body' mailPriority' mailType' organizationId' geographyId' releaseDateTime
Long Parameter List,Swarmops.Logic.Communications,PaperLetter,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\PaperLetter.cs,Create,The method has 8 parameters. Parameters: creator' organization' fromName' replyAddressLines' receivedDate' recipient' recipientRole' personal
Long Parameter List,Swarmops.Logic.Communications,PaperLetter,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\PaperLetter.cs,Create,The method has 8 parameters. Parameters: creatingPersonId' organizationId' fromName' replyAddressLines' receivedDate' toPersonId' toPersonInRole' personal
Long Parameter List,Swarmops.Logic.Communications,TypedMailTemplate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\TypedMailTemplate.cs,CreateOutboundMail,The method has 5 parameters. Parameters: author' mailPriority' organization' geography' releaseDateTime
Long Parameter List,Swarmops.Logic.Communications,TypedMailTemplate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\TypedMailTemplate.cs,CreateFunctionalOutboundMail,The method has 5 parameters. Parameters: authorType' mailPriority' organization' geography' releaseDateTime
Long Parameter List,Swarmops.Logic.Communications,PlaceHolder,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\TypedMailTemplate.cs,PlaceHolder,The method has 5 parameters. Parameters: name' label' tagOrId' dataType' formatString
Long Parameter List,Swarmops.Logic.Financial,FinancialAccountDocument,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialAccountDocument.cs,Create,The method has 6 parameters. Parameters: account' documentType' uploader' concernsStart' concernsEnd' rawText
Long Parameter List,Swarmops.Logic.Financial,VatReportItem,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\VatReportItem.cs,Create,The method has 5 parameters. Parameters: report' transaction' turnoverCents' vatInboundCents' vatOutboundCents
Long Parameter List,Swarmops.Logic.Financial,CashAdvance,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\CashAdvance.cs,Create,The method has 6 parameters. Parameters: organization' forPerson' createdByPerson' amountCents' budget' description
Long Parameter List,Swarmops.Logic.Financial,InboundInvoice,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\InboundInvoice.cs,Create,The method has 11 parameters. Parameters: organization' dueDate' amountCents' vatCents' budget' supplier' description' payToAccount' ocr' invoiceReference' creatingPerson
Long Parameter List,Swarmops.Logic.Financial,OutboundInvoice,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\OutboundInvoice.cs,Create,The method has 10 parameters. Parameters: organization' dueDate' budget' customerName' invoiceAddressMail' invoiceAddressPaper' currency' domestic' theirReference' createdByPerson
Long Parameter List,Swarmops.Logic.Financial,Payment,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payment.cs,Create,The method has 6 parameters. Parameters: group' amount' reference' fromAccount' key' hasImage
Long Parameter List,Swarmops.Logic.Financial,Payment,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payment.cs,CreateSingle,The method has 6 parameters. Parameters: organization' dateTime' currency' amountCents' invoice' createdByPerson
Long Parameter List,Swarmops.Logic.Financial,PaymentGroup,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentGroup.cs,CreatePayment,The method has 5 parameters. Parameters: amount' reference' fromAccount' key' hasImage
Long Parameter List,Swarmops.Logic.Financial,PayrollItem,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PayrollItem.cs,Create,The method has 10 parameters. Parameters: person' organization' employedDate' reportsToPerson' country' baseSalaryCents' budget' additiveTaxLevel' subtractiveTaxLevelId' isContractor
Long Parameter List,Swarmops.Logic.Financial,Salary,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Salary.cs,Create,The method has 5 parameters. Parameters: payrollItem' payoutDate' netSalaryCents' subtractiveTaxCents' additiveTaxCents
Long Parameter List,Swarmops.Logic.Financial,ExpenseClaim,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExpenseClaim.cs,Create,The method has 8 parameters. Parameters: claimer' organization' budget' expenseDate' description' amountCents' vatCents' group
Long Parameter List,Swarmops.Logic.Financial,FinancialTransaction,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialTransaction.cs,ImportWithStub,The method has 8 parameters. Parameters: organizationId' dateTime' financialAccountId' amountCents' description' importHash' importSha256' personId
Long Parameter List,Swarmops.Logic.Financial,FinancialTransaction,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialTransaction.cs,AddDocument,The method has 5 parameters. Parameters: serverFileName' originalFileName' fileSize' description' uploader
Long Parameter List,Swarmops.Logic.Cache,OrganizationCache,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Cache\OrganizationCache.cs,CreateOrganization,The method has 10 parameters. Parameters: ParentOrganizationId' NameInternational' Name' NameShort' Domain' MailPrefix' AnchorGeographyId' AcceptsMembers' AutoAssignNewMembers' DefaultCountryId
Long Parameter List,Swarmops.Logic.Cache,OrganizationCache,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Cache\OrganizationCache.cs,UpdateOrganization,The method has 11 parameters. Parameters: ParentOrganizationId' NameInternational' Name' NameShort' Domain' MailPrefix' AnchorGeographyId' AcceptsMembers' AutoAssignNewMembers' DefaultCountryId' OrganizationId
Long Parameter List,Swarmops.Logic.Support.LogEntries,CashAdvanceRequestedLogEntry,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\LogEntries\CashAdvanceRequestedLogEntry.cs,CashAdvanceRequestedLogEntry,The method has 5 parameters. Parameters: actingPerson' beneficiaryPerson' amount' budget' reason
Long Parameter List,Swarmops.Logic.Support.LogEntries,InboundInvoiceCreatedLogEntry,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\LogEntries\InboundInvoiceCreatedLogEntry.cs,InboundInvoiceCreatedLogEntry,The method has 5 parameters. Parameters: creatingPerson' supplier' description' amount' budget
Long Parameter List,Swarmops.Logic.Support.LogEntries,ExpenseClaimFiledLogEntry,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\LogEntries\ExpenseClaimFiledLogEntry.cs,ExpenseClaimFiledLogEntry,The method has 6 parameters. Parameters: filingPerson' beneficiaryPerson' amount' vat' budget' reason
Long Parameter List,Swarmops.Logic.Support.LogEntries,PayoutCreatedLogEntry,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\LogEntries\PayoutCreatedLogEntry.cs,PayoutCreatedLogEntry,The method has 6 parameters. Parameters: payingPerson' beneficiaryPerson' organization' currency' amountCents' reason
Long Parameter List,Swarmops.Logic.Support,ActivistEvents,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\ActivistEvents.cs,CreateActivistWithLogging,The method has 7 parameters. Parameters: geo' newActivist' logMessage' evtSrc' isPublic' isConfirmed' orgId
Long Parameter List,Swarmops.Logic.Support,PdfProcessor,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PdfProcessor.cs,RasterizeOne,The method has 6 parameters. Parameters: fullyQualifiedFileName' clientFileName' guid' uploader' organization' progressRange
Long Parameter List,Swarmops.Logic.Support,Document,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\Document.cs,Create,The method has 6 parameters. Parameters: serverFileName' clientFileName' fileSize' description' identifiableObject' uploader
Long Parameter List,Swarmops.Logic.Support,Documents,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\Documents.cs,Add,The method has 5 parameters. Parameters: serverFileName' clientFileName' fileSize' description' uploader
Long Parameter List,Swarmops.Logic.Support,PWEvents,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PWEvents.cs,CreateEvent,The method has 8 parameters. Parameters: eventSource' eventType' actingPersonId' organizationId' geographyId' affectedPersonId' parameterInt' parameterText
Long Parameter List,Swarmops.Logic.Governance,Ballot,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\Ballot.cs,Create,The method has 6 parameters. Parameters: election' organization' geography' name' ballotCount' deliveryAddress
Long Parameter List,Swarmops.Logic.Governance,MeetingElection,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\MeetingElection.cs,Create,The method has 10 parameters. Parameters: creator' org' geo' name' resultsType' maxVoteLength' runningOpens' runningCloses' votingOpens' votingCloses
Long Parameter List,Swarmops.Logic.Governance,Motion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\Motion.cs,Create,The method has 6 parameters. Parameters: meeting' submittingPerson' creatingPerson' title' text' decisionPoints
Long Parameter List,Swarmops.Logic.Governance,Motion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\Motion.cs,AddAmendment,The method has 5 parameters. Parameters: title' text' decisionPoint' submittingPerson' createdByPerson
Long Parameter List,Swarmops.Logic.Governance,MotionAmendment,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\MotionAmendment.cs,Create,The method has 6 parameters. Parameters: motion' title' text' decisionPoint' submittingPerson' creatingPerson
Long Parameter List,Swarmops.Logic.Media,MediaEntry,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Media\MediaEntry.cs,CreateFromKeyword,The method has 6 parameters. Parameters: keyword' mediaName' isBlog' url' title' dateTime
Long Parameter List,Swarmops.Logic.Special.Sweden,SupportCaseDelta,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportCaseDelta.cs,SupportCaseDelta,The method has 6 parameters. Parameters: supportCaseDeltaId' supportCaseId' supportPersonId' dateTime' verb' changes
Long Parameter List,Swarmops.Logic.Special.Sweden,IForumDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SwedishForumDatabase.cs,CreateNewPost,The method has 5 parameters. Parameters: forumId' poster' title' description' post
Long Parameter List,Swarmops.Logic.Special.Sweden,SwedishForumDatabaseInstantForum,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SwedishForumDatabase.cs,CreateNewPost,The method has 5 parameters. Parameters: forumId' poster' title' description' post
Long Parameter List,Swarmops.Logic.Special.Sweden,SwedishForumDatabaseVBulletin,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SwedishForumDatabase.cs,CreateNewPost,The method has 5 parameters. Parameters: forumId' poster' title' description' post
Long Parameter List,Swarmops.Logic.Structure,GeographyUpdate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyUpdate.cs,Create,The method has 6 parameters. Parameters: updateType' updateSource' guid' countryCode' changeDataXml' effectiveDateTime
Long Parameter List,Swarmops.Logic.Structure,GeographyUpdate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyUpdate.cs,InitDatabaseThreadCreateGeographyChildren,The method has 5 parameters. Parameters: children' parentGeographyId' geographyIdTranslation' count' total
Long Parameter List,Swarmops.Logic.Structure,Organization,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organization.cs,Create,The method has 10 parameters. Parameters: parentOrganizationId' nameInternational' name' nameShort' domain' mailPrefix' anchorGeographyId' acceptsMembers' autoAssignNewMembers' defaultCountryId
Long Parameter List,Swarmops.Logic.Structure,Organization,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organization.cs,UpdateOrganization,The method has 11 parameters. Parameters: ParentOrganizationId' NameInternational' Name' NameShort' Domain' MailPrefix' AnchorGeographyId' AcceptsMembers' AutoAssignNewMembers' DefaultCountryId' OrganizationId
Long Parameter List,Swarmops.Logic.Swarm,ExternalActivity,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\ExternalActivity.cs,Create,The method has 6 parameters. Parameters: organization' geograpy' type' date' description' createdByPerson
Long Parameter List,Swarmops.Logic.Swarm,ExternalIdentity,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\ExternalIdentity.cs,SetExternalIdentity,The method has 5 parameters. Parameters: ExternalSystem' UserID' Password' AttachedToPerson' TypeOfAccount
Long Parameter List,Swarmops.Logic.Swarm,ExternalIdentity,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\ExternalIdentity.cs,CreateExternalIdentity,The method has 5 parameters. Parameters: ExternalSystem' UserID' Password' AttachedToPerson' TypeOfAccount
Long Parameter List,Swarmops.Logic.Swarm,MembershipEvent,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\MembershipEvent.cs,MembershipEvent,The method has 7 parameters. Parameters: dateTime' personId' organizationId' geographyId' birthYear' gender' deltaCount
Long Parameter List,Swarmops.Logic.Swarm,Parley,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Parley.cs,Create,The method has 12 parameters. Parameters: organization' person' budgetInitial' name' geography' description' informationUrl' startDate' endDate' budgetCents' guaranteeCents' attendanceFeeCents
Long Parameter List,Swarmops.Logic.Swarm,Person,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Person.cs,Create,The method has 10 parameters. Parameters: name' email' password' phone' street' postal' city' countryCode' dateOfBirth' gender
Long Parameter List,Swarmops.Logic.Swarm,Position,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Position.cs,Create,The method has 11 parameters. Parameters: level' createdByPerson' createdByPosition' positionType' positionTitle' volunteerable' overridable' reportsTo' dotReportsTo' minCount' maxCount
Long Parameter List,Swarmops.Logic.Swarm,Position,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Position.cs,Create,The method has 12 parameters. Parameters: organization' level' createdByPerson' createdByPosition' positionType' positionTitle' volunteerable' overridable' reportsTo' dotReportsTo' minCount' maxCount
Long Parameter List,Swarmops.Logic.Swarm,Position,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Position.cs,Assign,The method has 6 parameters. Parameters: person' geography' assignedByPerson' assignedByPosition' assignmentNotes' expiresUtc
Long Parameter List,Swarmops.Logic.Swarm,Position,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Position.cs,Assign,The method has 5 parameters. Parameters: person' assignedByPerson' assignedByPosition' assignmentNotes' expiresUtc
Long Parameter List,Swarmops.Logic.Swarm,PositionAssignment,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\PositionAssignment.cs,Create,The method has 7 parameters. Parameters: position' geography' person' createdByPerson' createdByPosition' expiresDateTimeUtc' assignmentNotes
Long Identifier,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,CheckColdStorageTransactions,The length of the parameter accountUsesPresentationCurrency is 31.
Long Identifier,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,TestMultisigPayout,The length of the parameter satoshisMaximumAnticipatedFees is 30.
Long Identifier,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,,The length of the parameter BlockchainForkPrimingTxDescription is 34.
Long Identifier,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,,The length of the parameter BitcoinAccountsReceivableIndex is 30.
Long Identifier,Swarmops.Logic.Financial,FinancialAccountAutomationProfile,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialAccountAutomationProfile.cs,FromIdentity,The length of the parameter financialAccountAutomationProfileId is 35.
Long Identifier,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The length of the parameter satoshisMaximumAnticipatedFees is 30.
Long Identifier,Swarmops.Logic.Financial,FinancialAccount,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialAccount.cs,LogForexProfitLoss,The length of the parameter currentNativeValueOfForeignCents is 32.
Long Identifier,Swarmops.Logic.Financial,FinancialAccount,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialAccount.cs,,The length of the parameter _organizationBudgetAttestationSpaceLookup is 41.
Long Identifier,Swarmops.Logic.Automation,GetGeographyData,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Automation\GetGeographyData.cs,,The length of the parameter GetCountriesOperationCompleted is 30.
Long Identifier,Swarmops.Logic.Automation,GetGeographyData,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Automation\GetGeographyData.cs,,The length of the parameter GetCountriesInUseOperationCompleted is 35.
Long Identifier,Swarmops.Logic.Automation,GetGeographyData,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Automation\GetGeographyData.cs,,The length of the parameter GetCitiesForCountryOperationCompleted is 37.
Long Identifier,Swarmops.Logic.Automation,GetGeographyData,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Automation\GetGeographyData.cs,,The length of the parameter GetPostalCodesForCountryOperationCompleted is 42.
Long Identifier,Swarmops.Logic.Automation,GetGeographyData,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Automation\GetGeographyData.cs,,The length of the parameter GetGeographyOperationCompleted is 30.
Long Identifier,Swarmops.Logic.Automation,GetGeographyData,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Automation\GetGeographyData.cs,,The length of the parameter GetGeographyForCountryOperationCompleted is 40.
Long Identifier,Swarmops.Logic.Structure,Organization,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organization.cs,IsOrInherits,The length of the parameter prospectiveParentOrganizationId is 31.
Long Identifier,Swarmops.Logic.Structure,Organization,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organization.cs,Inherits,The length of the parameter prospectiveParentOrganizationId is 31.
Long Statement,Swarmops.Logic.Communications,OutboundComm,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundComm.cs,CreateNotification,The length of the statement  "            return CreateNotification(organization' notification' new NotificationStrings()' new NotificationCustomStrings()' recipients); " is 126.
Long Statement,Swarmops.Logic.Communications,OutboundComm,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundComm.cs,CreateSandboxMail,The length of the statement  "                new PayloadEnvelope(new ParticipantMailPayload(customSubject + "|" + sandboxMailAddress' customBody' recipients[0].GetParticipations()[0]' recipients[0])).ToXml()' " is 163.
Long Statement,Swarmops.Logic.Communications,OutboundComm,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundComm.cs,CreateParticipantNotification,The length of the statement  "            payload.Strings[NotificationString.RegularTitle] = organization.RegularLabel.ToString();  // may need fudging later because localization " is 136.
Long Statement,Swarmops.Logic.Communications,OutboundCommRecipients,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundCommRecipients.cs,ForOutboundCommLimited,The length of the statement  "            return FromArray(SwarmDb.GetDatabaseForReading().GetOutboundCommRecipients(comm' DatabaseCondition.OpenTrue' new RecordLimit(limit))); " is 134.
Long Statement,Swarmops.Logic.Communications,RegisterActivistHandler,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\PhoneMessageReceiver.cs,Handle,The length of the statement  "                        ActivistEvents.CreateActivistWithLogging(person.Geography' person' "Registered by SMS"' EventSource.SMS' true' true' partyOrgId); " is 129.
Long Statement,Swarmops.Logic.Communications,TypedMailTemplate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\TypedMailTemplate.cs,InsertAllPlaceHoldersToTemplate,The length of the statement  "            // sort the placeholders according to the order they were defined in to guarantee that substitutions are in expected order. " is 123.
Long Statement,Swarmops.Logic.Communications,TypedMailTemplate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\TypedMailTemplate.cs,InsertAllPlaceHoldersToTemplate,The length of the statement  "            // "Inside" substitutions are done if the placeholder containing the substitution is defined before the substitutet one. " is 120.
Long Statement,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,GetHotwalletValue,The length of the statement  "                presentationCurrencyCents += (Int64) (satoshisTotalLookup[chain]*conversionRateLookup[chain]); // some precision loss unavoidable here " is 134.
Long Statement,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,GetSpendableCoin,The length of the statement  "                        new WebClient().DownloadString("https://bch-insight.bitpay.com/api/addr/" + EnsureCashAddressWithoutPrefix(secretKey.PubKey.GetAddress(Network.Main).ToString()) + "/utxo")); " is 173.
Long Statement,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,CheckColdStorageTransactions,The length of the statement  "                    if (row.Transaction.Description == BitcoinUtility.BlockchainForkPrimingTxDescription && row.Transaction.DateTime == forkDate && row.FinancialAccountId == account.Identity) " is 171.
Long Statement,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,CheckColdStorageTransactions,The length of the statement  "                                    row.AmountForeignCents = new Money(row.AmountCents' organization.Currency' ourTx.DateTime).ToCurrency (Currency.BitcoinCore); " is 125.
Long Statement,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,GetAddressAccountLookup,The length of the statement  "                result[hotAddress.Chain + "-" + hotAddress.ProtocolLevelAddress] = organization.FinancialAccounts.AssetsBitcoinHot.Identity; " is 124.
Long Statement,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,GetAddressAccountLookupRecurse,The length of the statement  "            if (!string.IsNullOrEmpty(account.BitcoinAddress) || IsValidBitcoinAddress (account.Name)) // TODO: Add a special property for the address instead of using name " is 160.
Long Statement,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,GetRecommendedFeePerThousandBytesSatoshis,The length of the statement  "                                new WebClient().DownloadString("https://bitcoinlegacy.blockexplorer.com/api/utils/estimatefee?nbBlocks=" + blocksWait.ToString(CultureInfo.InvariantCulture))); " is 159.
Long Statement,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,GetRecommendedFeePerThousandBytesSatoshis,The length of the statement  "                    double feeWholeCoins = Double.Parse((string)feeData[blocksWait.ToString(CultureInfo.InvariantCulture)]' NumberStyles.AllowDecimalPoint);  // rounding errors are okay' don't use Formatting fn " is 190.
Long Statement,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,TestMultisigPayout,The length of the statement  "            throw new InvalidOperationException("This function is only for testing purposes. It pays real money. Don't use except for dev/test."); " is 134.
Long Statement,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,TestMultisigPayout,The length of the statement  "            Int64 satoshisMaximumAnticipatedFees = BitcoinUtility.GetRecommendedFeePerThousandBytesSatoshis(BitcoinChain.Cash) * 20; // assume max 20k transaction size " is 155.
Long Statement,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,TestMultisigPayout,The length of the statement  "            // If we arrive at this point' the previous function didn't throw' and we have enough money. Add the inputs to the transaction. " is 127.
Long Statement,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,TestMultisigPayout,The length of the statement  "                        + /* the change address seems to always get index 0? is this a safe assumption? */ 0' satoshisInput - satoshisUsed' /* confirmation count*/ 0); " is 143.
Long Statement,Swarmops.Logic.Financial,ExpenseClaimGroup,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExpenseClaimGroup.cs,Create,The length of the statement  "            return FromIdentityAggressive(SwarmDb.GetDatabaseForWriting().CreateExpenseClaimGroup(organization.Identity' creatingPerson.Identity' groupType' rawGroupData)); " is 160.
Long Statement,Swarmops.Logic.Financial,HotBitcoinAddress,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\HotBitcoinAddress.cs,FromIdentityAggressive,The length of the statement  "            return FromBasic(SwarmDb.GetDatabaseForWriting().GetHotBitcoinAddress(hotBitcoinAddressId)); // "Writing" is intentional " is 120.
Long Statement,Swarmops.Logic.Financial,HotBitcoinAddress,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\HotBitcoinAddress.cs,Create,The length of the statement  "            string bitcoinAddress = extPubKey.PubKey.GetAddress(Network.Main).ToString();    // TODO: CHANGE NETWORK.MAIN TO NEW LOOKUP " is 123.
Long Statement,Swarmops.Logic.Financial,HotBitcoinAddress,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\HotBitcoinAddress.cs,Create,The length of the statement  "            // string bitcoinAddressFallback = extPubKey.PubKey.GetAddress(Network.Main).ToString(); // The fallback address would be the main address " is 138.
Long Statement,Swarmops.Logic.Financial,HotBitcoinAddresses,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\HotBitcoinAddresses.cs,FindAmount,The length of the statement  "            throw new NotEnoughFundsException("Insufficient funds"' "Group argument"' new Satoshis (satoshisRequired)); // Serving as a placeholder for now' also testing the notification " is 174.
Long Statement,Swarmops.Logic.Financial,HotBitcoinAddressUnspent,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\HotBitcoinAddressUnspent.cs,Delete,The length of the statement  "            SwarmDb.GetDatabaseForWriting().SetHotBitcoinAddressBalance (base.HotBitcoinAddressId' this.Address.Unspents.AmountSatoshisTotal); // re-fetches from db " is 152.
Long Statement,Swarmops.Logic.Financial,HotBitcoinAddressUnspents,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\HotBitcoinAddressUnspents.cs,ForAddress,The length of the statement  "            return FromArray (SwarmDb.GetDatabaseForWriting().GetHotBitcoinAddressUnspents (address)); // "ForWriting" is intentional here " is 126.
Long Statement,Swarmops.Logic.Financial,PaymentTransferInfo,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentTransferInfo.cs,FromObject,The length of the statement  "                return FromObject(salary.PayrollItem.Person' new Money(salary.NetSalaryCents' salary.PayrollItem.Organization.Currency)); " is 121.
Long Statement,Swarmops.Logic.Financial,PaymentTransferInfo,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentTransferInfo.cs,FromObject,The length of the statement  "                    throw new ArgumentNullException("amountToPay"' @"Cannot determine payment transfer information without knowing origin currency"); " is 129.
Long Statement,Swarmops.Logic.Financial,PaymentTransferInfo,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentTransferInfo.cs,FromObject,The length of the statement  "                    throw new NotImplementedException("Cannot provide payment transfer information for Person #" + person.Identity.ToString()); " is 123.
Long Statement,Swarmops.Logic.Financial,PaymentTransferInfo,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentTransferInfo.cs,FromObject,The length of the statement  "                result.CurrencyAmount = result.Currency.Code + " " + (amountToPay.ToCurrency(result.Currency).Cents / 100.0).ToString("N2"); " is 124.
Long Statement,Swarmops.Logic.Financial,VatReports,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\VatReports.cs,CreateNewReports,The length of the statement  "                    new DateTime(organization.FirstFiscalYear' 1' 1).AddMonths(reportMonthInterval).AddDays(1); // add one day for some safety margin; we're constructing the VAT report on the 2nd of the month " is 188.
Long Statement,Swarmops.Logic.Financial,VatReports,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\VatReports.cs,CreateNewReports,The length of the statement  "                DateTime nextReportGenerationTime = nextReport.AddMonths(reportMonthInterval).AddDays(0); // Make the report on the 4yh after the period has ended " is 146.
Long Statement,Swarmops.Logic.Financial,ExchangeRateSnapshot,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExchangeRateSnapshot.cs,Create,The length of the statement  "                // BitPay doesn't provide valid JSON - the rate field isn't enclosed in quotes - so we can't use JSON Deserialization; we'll " is 124.
Long Statement,Swarmops.Logic.Financial,ExchangeRateSnapshot,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExchangeRateSnapshot.cs,Create,The length of the statement  "                    btcRate /= 1000000.0; // We're operating in microbitcoin' so adjust the stored exchange rate accordingly (right-shift six decimal places) " is 137.
Long Statement,Swarmops.Logic.Financial,ExchangeRateSnapshot,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExchangeRateSnapshot.cs,Create,The length of the statement  "                // BitpayRateDatapoint[] fiatRates = (BitpayRateDatapoint[]) serializer.Deserialize<BitpayRateDatapoint[]> (fiatRateDataRaw); " is 125.
Long Statement,Swarmops.Logic.Financial,ExternalBankDataProfile,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExternalBankDataProfile.cs,FromIdentity,The length of the statement  "                result.InitialReplacements = ";|\t|Kč|";  // before CSV helper is implemented' replace field separators with tabs; remove currency symbols " is 138.
Long Statement,Swarmops.Logic.Financial,ExternalBankDataProfile,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExternalBankDataProfile.cs,FromIdentity,The length of the statement  "                result.FieldNames[ExternalBankDataFieldName.AccountBalance] = "Balance"; // not originally in file' must be manually added " is 122.
Long Statement,Swarmops.Logic.Financial,PaymentGroup,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentGroup.cs,MapTransaction,The length of the statement  "            // This function attempts to find a transaction that matches the payment group' a transaction that is currently unbalanced. " is 123.
Long Statement,Swarmops.Logic.Financial,Payout,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payout.cs,CreateBitcoinPayoutFromPrototype,The length of the statement  "            // This function is made for complex bitcoin payouts and will typically take many different types of payouts to many people at once. " is 132.
Long Statement,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,AddUnpaidSalaries,The length of the statement  "                BasicPayout basicPayout = new BasicPayout (0' organization.Identity' "[Loc]Financial_TheTaxMan"' "SEBG 5050-1055"' // HACK: Get tax account from something " is 154.
Long Statement,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,AutomatchAgainstUnbalancedTransactions,The length of the statement  "                // Console.WriteLine("Looking at transaction #{0} ({1:yyyy-MM-dd}' {2:N2})."' transaction.Identity' transaction.DateTime' transaction.Rows.AmountTotal); " is 152.
Long Statement,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,AutomatchAgainstUnbalancedTransactions,The length of the statement  "                        // Console.WriteLine(" - Transaction #{0} ({1:yyyy-MM-dd} is competing' aborting"' possiblyCompetingTransaction.Identity' possiblyCompetingTransaction.DateTime); " is 161.
Long Statement,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,AutomatchAgainstUnbalancedTransactions,The length of the statement  "                // Console.WriteLine(" - no competing transactions...\r\n - transaction description is \"{0}\"."' transaction.Description); " is 123.
Long Statement,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,AutomatchAgainstUnbalancedTransactions,The length of the statement  "                        // Console.WriteLine(" - - payout #{0} matches ({1}' {2:yyyy-MM-dd})"' payout.Identity' payout.Recipient' payout.ExpectedTransactionDate); " is 138.
Long Statement,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The length of the statement  "                    else if (payout.RecipientPerson != null && payout.RecipientPerson.BitcoinPayoutAddress.Length < 3 && payout.Account.Length < 4) " is 127.
Long Statement,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The length of the statement  "                        // There is a payout for this person' but they don't have a bitcoin payout address set. Send notification to this effect once a day. " is 132.
Long Statement,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The length of the statement  "                        OutboundComm.CreateNotification(organization' NotificationResource.BitcoinPayoutAddress_PleaseSet' primaryStrings' People.FromSingle(payout.RecipientPerson)); " is 158.
Long Statement,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The length of the statement  "                // We now have our desired payments. The next step is to find enough inputs to reach the required amount (plus fees; we're working a little blind here still). " is 158.
Long Statement,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The length of the statement  "                Int64 satoshisMaximumAnticipatedFees = BitcoinUtility.GetRecommendedFeePerThousandBytesSatoshis(chain) * 20; // assume max 20k transaction size " is 143.
Long Statement,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The length of the statement  "                    inputs = BitcoinUtility.GetInputsForAmount(organization' BitcoinChain.Cash' satoshisTotal + satoshisMaximumAnticipatedFees);  " is 124.
Long Statement,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The length of the statement  "                        NotificationResource.Bitcoin_Shortage_Critical' primaryStrings' secondaryStrings' People.FromSingle (Person.FromIdentity (1))); " is 127.
Long Statement,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The length of the statement  "                        throw new InvalidOperationException("Unhandled bitcoin address type in Payouts.PerformAutomated(): " + payout.RecipientPerson.BitcoinPayoutAddress); " is 148.
Long Statement,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The length of the statement  "                            + /* the change address seems to always get index 0? is this a safe assumption? */ 0' satoshisInput - satoshisUsed' /* confirmation count*/ 0); " is 143.
Long Statement,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The length of the statement  "                        spec += String.Format(" * {0'-40} {1'14:N2} {2'-4}\r\n"' notificationSpecLookup[personId][index]' notificationAmountLookup[personId][index]/100.0' currencyCode); " is 161.
Long Statement,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The length of the statement  "                Payout masterPayout = Payout.CreateBitcoinPayoutFromPrototype (organization' masterPayoutPrototype' txReady.GetHash().ToString()); " is 130.
Long Statement,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The length of the statement  "                    ledgerTransaction.AddRow(organization.FinancialAccounts.AssetsBitcoinHot' -(masterPayoutPrototype.AmountCents + feeSatoshis)' null); " is 132.
Long Statement,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The length of the statement  "                    // If the ledger isn't using bitcoin natively' we need to translate the miner fee paid to ledger cents before entering it into ledger " is 133.
Long Statement,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The length of the statement  "                    ledgerTransaction.AddRow(organization.FinancialAccounts.AssetsBitcoinHot' -(masterPayoutPrototype.AmountCents + feeCentsLedger)' null).AmountForeignCents = new Money(satoshisUsed' Currency.BitcoinCash); " is 202.
Long Statement,Swarmops.Logic.Financial,Salaries,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Salaries.cs,CreateAnnualStatements,The length of the statement  "                        monthName = monthName.Substring (0' 3); // believe it or not some .Net localizations don't respect the three letter limit " is 121.
Long Statement,Swarmops.Logic.Financial,Salaries,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Salaries.cs,CreateAnnualStatements,The length of the statement  "                        if (personSalaryLookup[personId].ContainsKey (monthNumber) && personSalaryLookup[personId][monthNumber].GrossSalaryCents > 0) " is 125.
Long Statement,Swarmops.Logic.Financial,Salary,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Salary.cs,DenyApproval,The length of the statement  "            OutboundComm.CreateNotificationOfFinancialValidation(Budget' this.PayrollItem.Person' NetSalaryCents / 100.0' this.PayoutDate.ToString("MMMM yyyy")' " is 148.
Long Statement,Swarmops.Logic.Financial,FinancialAccount,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialAccount.cs,GetForeignCurrencyBalanceDeltaCents,The length of the statement  "                SwarmDb.GetDatabaseForReading().GetFinancialAccountForeignDeltaCents(this.Identity' lowerBoundinclusive' upperBoundExclusive); " is 126.
Long Statement,Swarmops.Logic.Financial,FinancialAccount,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialAccount.cs,CheckForexProfitLoss,The length of the statement  "            // Compare current balance in native currency with the current balance in foreign currency. If off by more than 100 cents' " is 122.
Long Statement,Swarmops.Logic.Financial,FinancialTransaction,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialTransaction.cs,FromBlockchainHash,The length of the statement  "            // There may be multiple transactions in this Swarmops installation referring to this transaction on the blockchain' but only " is 125.
Long Statement,Swarmops.Logic.Cache,OrganizationCache,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Cache\OrganizationCache.cs,Reload,The length of the statement  "            // Let this be for the moment' new and old parents need to be loaded as well. Better right now to reload the whole cache. " is 121.
Long Statement,Swarmops.Logic.Cache,OrganizationCache,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Cache\OrganizationCache.cs,Reload,The length of the statement  "            //    __organizationCache[objectId][0] = Organization.FromBasic(SwarmDb.GetDatabaseForReading().GetOrganization(objectId)); " is 123.
Long Statement,Swarmops.Logic.Cache,OrganizationCache,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Cache\OrganizationCache.cs,GetOrganizationTree,The length of the statement  "                    // new Organization(organization.OrganizationId' organization.ParentOrganizationId' organization.Name' generation + 1)); " is 120.
Long Statement,Swarmops.Logic.Communications.Payload,NotificationPayload,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\Payload\NotificationPayload.cs,GetSubject,The length of the statement  "                    Logic_Communications_Transmission_NotificationPayload.ResourceManager.GetString (SubjectResource' CultureInfo.CreateSpecificCulture (cultureId))); " is 146.
Long Statement,Swarmops.Logic.Communications.Payload,NotificationPayload,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\Payload\NotificationPayload.cs,RenderComm,The length of the statement  "            if (string.IsNullOrEmpty (culture) || culture == "af-ZA") // the af-ZA is the virtual in-place translator code' which is gibberish " is 130.
Long Statement,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,Encipher,The length of the statement  "                // Added as per http://bcrypt.codeplex.com/SourceControl/network/forks/mammo/UncheckedFix/changeset/96b7f8314be4 to fix overflow exception. " is 139.
Long Statement,Swarmops.Logic.Security,Authentication,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authentication.cs,InitializeSymmetricFileSystemKey,The length of the statement  "            if (Debugger.IsAttached && Path.DirectorySeparatorChar == '\\') // check if we're debugging - double check to overdo security " is 125.
Long Statement,Swarmops.Logic.Security,Authority,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authority.cs,HasAccess,The length of the statement  "                throw new ArgumentNullException("access"' @"Access cannot be null' but must always be explicitly specified. Specify AccessAspect.Null if null access is desired."); " is 163.
Long Statement,Swarmops.Logic.Security,Authority,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authority.cs,HasAccess,The length of the statement  "                    // This organization has decided to open its financial reports to all participants. Reselect the access request to "participant" level. " is 135.
Long Statement,Swarmops.Logic.Security,Authority,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authority.cs,CanAccess,The length of the statement  "            throw new NotImplementedException("Authority.CanAccess is not implemented for type " + identifiableObject.GetType().FullName); " is 126.
Long Statement,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,LegacyAddressToCashAddress,The length of the statement  "			if (addrBytes[21] != checksum[0] || addrBytes[22] != checksum[1] || addrBytes[23] != checksum[2] || addrBytes[24] != checksum[3]) " is 129.
Long Statement,Swarmops.Logic.Support,BackendServiceOrder,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\BackendServiceOrder.cs,Execute,The length of the statement  "                SwarmDb.GetDatabaseForWriting().SetBackendServiceOrderException(this.Identity' new ArgumentNullException("ClassName"' "Class failed to instantiate -- service engine is null: " + className)); " is 190.
Long Statement,Swarmops.Logic.Support,BackendServiceOrder,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\BackendServiceOrder.cs,Execute,The length of the statement  "            MethodInfo methodFromXml = serviceClassType.GetMethod("FromXml"' BindingFlags.FlattenHierarchy | BindingFlags.Static | BindingFlags.Public); " is 140.
Long Statement,Swarmops.Logic.Support,BackendServiceOrder,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\BackendServiceOrder.cs,Execute,The length of the statement  "                SwarmDb.GetDatabaseForWriting().SetBackendServiceOrderException(this.Identity' new ArgumentNullException("MethodName"' "Class failed to instantiate -- method search returned null")); " is 182.
Long Statement,Swarmops.Logic.Support,BlockchainTransactionRow,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\BlockchainTransaction.cs,FromInsightInfoJson,The length of the statement  "                while (valueDoubleString.Length <= indexOfDecimalPoint + 8) // less-or-equal is correct here: comparing index and length " is 120.
Long Statement,Swarmops.Logic.Support,DatabaseMaintenance,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\DatabaseMaintenance.cs,FirstInitialization,The length of the statement  "            // in the file' the commands are split by a single # sign. (Semicolons are an integral part of storedprocs' so they can't be used.) " is 131.
Long Statement,Swarmops.Logic.Support,DatabaseMaintenance,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\DatabaseMaintenance.cs,UpgradeSchemata,The length of the statement  "                Console.WriteLine("Swarmops: Current DB version is {0}' but expected is {1}. A schema upgrade will take place."' currentDbVersion' expectedDbVersion); " is 150.
Long Statement,Swarmops.Logic.Support,DatabaseMaintenance,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\DatabaseMaintenance.cs,UpgradeSchemata,The length of the statement  "                    // Because Mono installs with an insufficient certificate store' we must disable certificate checking before accessing github " is 125.
Long Statement,Swarmops.Logic.Support,DatabaseMaintenance,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\DatabaseMaintenance.cs,UpgradeSchemata,The length of the statement  "                    fileName = String.Format("https://raw.githubusercontent.com/Swarmops/Swarmops/master/Database/Schemata/upgrade-{0:D4}.sql"' " is 123.
Long Statement,Swarmops.Logic.Support,DatabaseMaintenance,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\DatabaseMaintenance.cs,UpgradeSchemata,The length of the statement  "                // in the file' the commands are split by a single # sign. (Semicolons are an integral part of storedprocs' so they can't be used.) " is 131.
Long Statement,Swarmops.Logic.Support,DatabaseMaintenance,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\DatabaseMaintenance.cs,UpgradeSchemata,The length of the statement  "                        string trimmedCommand = sqlCommand.Trim().TrimEnd(';').Trim(); // removes whitespace first' then any ; at the end (if left in by mistake) " is 137.
Long Statement,Swarmops.Logic.Support,SupportFunctions,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\General.cs,DisableSslCertificateChecks,The length of the statement  "            // TODO: Does this install a new handler every time it's been called? How do you verify that this short-circuit is in place? " is 124.
Long Statement,Swarmops.Logic.Support,PdfProcessor,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PdfProcessor.cs,RasterizeOne,The length of the statement  "                        clientFileName + " {{LOCPAGE-" + (pageCounter-1).ToString(CultureInfo.InvariantCulture) + "-" + pdfPageCount.ToString(CultureInfo.InvariantCulture) + "}}"' " is 155.
Long Statement,Swarmops.Logic.Support,PdfProcessor,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PdfProcessor.cs,RasterizeOne,The length of the statement  "                clientFileName + " {{LOCPAGE-" + pdfPageCount.ToString(CultureInfo.InvariantCulture) + "-" + pdfPageCount.ToString(CultureInfo.InvariantCulture) + "}}"' " is 152.
Long Statement,Swarmops.Logic.Support,PdfProcessor,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PdfProcessor.cs,Rerasterize,The length of the statement  "            string commandLine = "gs -dNOPAUSE -dBATCH -sDEVICE=png16m -r" + density.ToString(CultureInfo.InvariantCulture) + " -sOutputFile=" + StorageRoot + firstPart + "-%04d" + suffix + ".png " + StorageRoot + firstPart; " is 212.
Long Statement,Swarmops.Logic.Support,PdfProcessor,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PdfProcessor.cs,TemplateToPdf,The length of the statement  "                    "-c \"inkscape --without-gui --export-to-pdf=" + tempFileName + " " + svgFileName + "\"");  // inkscape is a package-level dependency " is 133.
Long Statement,Swarmops.Logic.Support,PWEvents,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PWEvents.cs,CreateEvent,The length of the statement  "            //TODO: organizationId comes in hardcoded as 1 from a lot of places' should probably be changed based on affected person " is 120.
Long Statement,Swarmops.Logic.Support,SingularFactory,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SingularFactory.cs,FromBasic,The length of the statement  "                            "Unable to find higher-order class for base type " + basicType.ToString() + "; if it's in a plugin' was the higher-order assembly registered with SingularFactory?"); " is 165.
Long Statement,Swarmops.Logic.Support,SingularFactory,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SingularFactory.cs,FromBasic,The length of the statement  "                        "Unable to find a public static method named \"" + logicType.ToString() + ".FromBasic (" +basicType.ToString()+ ")\" in a loaded assembly"); " is 140.
Long Statement,Swarmops.Logic.Support,SwarmopsLog,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SwarmopsLog.cs,DebugLog,The length of the statement  "                File.AppendAllLines("/tmp/swarmops-debug.log"' new string[] { DateTime.UtcNow.ToString("yyyy-MM-dd/HH:mm:ss.fff | ") + logEntry }); " is 131.
Long Statement,Swarmops.Logic.Support.BackendServices,RasterizeDocumentHiresOrder,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\BackendServices\RasterizeDocumentHiresOrder.cs,LongRun,The length of the statement  "                PdfProcessor.Rerasterize((Document)document' PdfProcessor.PdfProcessorOptions.HighQuality | PdfProcessor.PdfProcessorOptions.ForceOrphans); " is 139.
Long Statement,Swarmops.Logic.Support.BackendServices,ReturnBitcoinEchoUtxoOrder,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\BackendServices\ReturnBitcoinEchoUtxoOrder.cs,Run,The length of the statement  "            // TODO: Verify that the utxoAddress is an EchoTest address' i.e. has second path component == BitcoinUtility.BitcoinEchoTestIndex " is 130.
Long Statement,Swarmops.Logic.Support.BackendServices,ReturnBitcoinEchoUtxoOrder,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\BackendServices\ReturnBitcoinEchoUtxoOrder.cs,Run,The length of the statement  "            string returnAddress = BitcoinUtility.GetInputAddressesForTransaction(BitcoinChain.Cash' utxoToReturn.TransactionHash)[0]; // assumes at least one input address -- not coinbase " is 176.
Long Statement,Swarmops.Logic.Support.BackendServices,ReturnBitcoinEchoUtxoOrder,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\BackendServices\ReturnBitcoinEchoUtxoOrder.cs,Run,The length of the statement  "                    new Swarmops.Logic.Financial.Money(satoshisToReturn' Currency.BitcoinCash).ToCurrency(this.Organization.Currency).Cents; " is 120.
Long Statement,Swarmops.Logic.Support.BackendServices,ReturnBitcoinEchoUtxoOrder,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\BackendServices\ReturnBitcoinEchoUtxoOrder.cs,Run,The length of the statement  "                ledgerTx2.AddRow(this.Organization.FinancialAccounts.AssetsBitcoinHot' -centsPresentation' this.Person).AmountForeignCents = new Swarmops.Logic.Financial.Money(-satoshisToReturn' Currency.BitcoinCash); ; " is 203.
Long Statement,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,GetUndeliverableCases,The length of the statement  "                        "SELECT ixBug'sTitle FROM Bug WHERE (sTitle LIKE 'Undeliver%' OR sTitle = 'failure notice' OR sTitle LIKE 'Mail delivery failed: returning message to sender' OR sTitle LIKE 'Delivery Status Notification%' OR sTitle LIKE 'Olevererbart:%' OR sTitle LIKE 'Returned mail:%') AND fOpen=1 and ixBug > " + " is 298.
Long Statement,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,GetDelayWarnings,The length of the statement  "                        "SELECT ixBug'sTitle FROM Bug WHERE (sTitle = 'Delivery Status Notification (Delay)' OR sTitle LIKE 'Warning: could not send message for %' OR sTitle LIKE 'AUTO:%' OR sTitle LIKE 'Out of Office%') AND fOpen=1"' " is 210.
Long Statement,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,GetRecentOutgoingEmails,The length of the statement  "                        "SELECT BugEvent.ixBugEvent AS BugEventId'BugEvent.ixBug AS BugId' Bug.sTitle as BugTitle' Bug.sCustomerEmail AS Recipient' BugEvent.s AS Body'Person.sFullName AS Sender FROM BugEvent'Bug'Person WHERE BugEvent.sVerb='Replied' AND BugEvent.fEmail=1 AND Person.ixPerson=BugEvent.ixPerson AND Bug.ixBug = BugEvent.ixBug AND BugEvent.ixBugEvent > " + " is 346.
Long Statement,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,ReadSupportEmailFromReader,The length of the statement  "            //  BugEvent.ixBugEvent AS BugEventId'BugEvent.ixBug AS BugId' Bug.sTitle as BugTitle' Bug.sCustomerEmail AS Recipient' BugEvent.s AS Body'Person.sFullName AS Sender " is 165.
Long Statement,Swarmops.Logic.Special.Sweden,SwedishForumHandleProvider,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SwedishForumHandleProvider.cs,SetPersonHandle,The length of the statement  "                int[] members = SwarmDb.GetDatabaseForReading().GetObjectsByOptionalData(ObjectType.Person' ObjectOptionalDataType.ForumAccountId' "" + newHandleAccountId); " is 156.
Long Statement,Swarmops.Logic.Structure,GeographyUpdate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyUpdate.cs,Create,The length of the statement  "            return FromBasic (SwarmDb.GetDatabaseForWriting().GetGeographyUpdate (identity));  // "ForWriting" intentional to avoid db replication race conditions " is 150.
Long Statement,Swarmops.Logic.Structure,Organization,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organization.cs,FromOptionalDataString,The length of the statement  "            int[] organizationIds = SwarmDb.GetDatabaseForReading().GetObjectsByOptionalData(ObjectType.Organization' dataType' data.Trim()); " is 129.
Long Statement,Swarmops.Logic.Structure,Organization,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organization.cs,EnableEconomy,The length of the statement  "            FinancialAccount lodging = FinancialAccount.Create(this' "[LOC]Cost_TravelLodging"' FinancialAccountType.Cost' travelMaster); " is 125.
Long Statement,Swarmops.Logic.Structure,Organization,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organization.cs,EnsureMaintenanceDonationAccountExists,The length of the statement  "                    FinancialAccount.Create(this' "[LOC]Cost_MaintenanceDonations"' FinancialAccountType.Cost' FinancialAccounts.CostsBankFees); " is 124.
Long Statement,Swarmops.Logic.Swarm,DashboardTodos,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\DashboardTodos.cs,AddBitcoinChecks,The length of the statement  "                if (authority.Organization.FinancialAccounts.AssetsBitcoinHot != null && authority.Organization.Identity != Organization.SandboxIdentity && ! PilotInstallationIds.IsPilot(PilotInstallationIds.DevelopmentSandbox)) " is 212.
Long Statement,Swarmops.Logic.Swarm,DashboardTodos,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\DashboardTodos.cs,AddBitcoinChecks,The length of the statement  "                                        "SwarmopsJS.ajaxCall('/Automation/FinancialFunctions.aspx/SetBitcoinPayoutAddress'' { bitcoinAddress: enteredData }' function (result) { " + " is 140.
Long Statement,Swarmops.Logic.Swarm,DashboardTodos,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\DashboardTodos.cs,AddBitcoinChecks,The length of the statement  "                                          "if (result.Success) { alertify.log('Payout address set.'); $('div#divDashboardTodo').fadeOut(); } else { alertify.alert('Could not set payout address: ' + result.DisplayMessage); } " + " is 185.
Long Statement,Swarmops.Logic.Swarm,Participation,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Participation.cs,Terminate,The length of the statement  "                PWEvents.CreateEvent (EventSource.PirateWeb' EventType.LostMember' actingPerson.Identity' OrganizationId' Person.GeographyId' " is 125.
Long Statement,Swarmops.Logic.Swarm,Participation,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Participation.cs,Terminate,The length of the statement  "                // Remove all newsletter subscriptions once the membership is terminated (to make sure default is now off and only turn off explicitly turned-on subscriptions) " is 159.
Long Statement,Swarmops.Logic.Swarm,Participation,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Participation.cs,Terminate,The length of the statement  "                // HACK HACK HACK: uses feed IDs in an extremely ugly way to loop 1-9. Should use NewsletterFeeds.ForOrganization() once support for newsletters in different orgs are established. " is 179.
Long Statement,Swarmops.Logic.Swarm,MembershipEvents,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\MembershipEvents.cs,LoadAll,The length of the statement  "                    // A few records in the database have had their memberships terminated at the exact time of creation. This means that sorting will " is 130.
Long Statement,Swarmops.Logic.Swarm,Parley,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Parley.cs,CancelBudget,The length of the statement  "            // Adjust budgets. (NB: Cost budgets are negative' but the bookkeeping cost funds are positive. Some sign reversal is necessary.) " is 129.
Long Statement,Swarmops.Logic.Swarm,Person,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Person.cs,ApplicantInOrganization,The length of the statement  "            Applicants applicants = Applicants.FromArray(SwarmDb.GetDatabaseForReading().GetApplicants(this' org' DatabaseCondition.OpenTrue)); " is 131.
Long Statement,Swarmops.Logic.Swarm,PersonQuarantine,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\PersonQuarantine.cs,QuarantineFor,The length of the statement  "            ObjectOptionalData.ForObject(this._person).SetOptionalDataString(this._quarantineType' quarantineUntil.ToString("yyyy-MM-dd hh:mm:ss"' CultureInfo.InvariantCulture)); " is 166.
Long Statement,Swarmops.Logic.Swarm,Position,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Position.cs,HasAccess,The length of the statement  "                throw new ArgumentNullException ("access"' @"Access requested must always be specified. Use AccessAspect.Null if null access is desired (and access should always be true)."); " is 174.
Long Statement,Swarmops.Logic.Swarm,PositionAssignment,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\PositionAssignment.cs,FromIdentityAggressive,The length of the statement  "            return FromBasic(SwarmDb.GetDatabaseForWriting().GetPositionAssignment(positionAssignmentId)); // "ForWriting" is intentional - avoids race conditions in Create() " is 162.
Long Statement,Swarmops.Logic.Swarm,PositionAssignment,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\PositionAssignment.cs,Create,The length of the statement  "                    expiresDateTimeUtc == null ? Constants.DateTimeHigh : (DateTime) expiresDateTimeUtc' assignmentNotes);  // DateTime.MaxValue kills MySql layer " is 142.
Long Statement,Swarmops.Logic.Swarm,PositionAssignment,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\PositionAssignment.cs,Terminate,The length of the statement  "            base.TerminatedDateTimeUtc = DateTime.UtcNow; // may differ by milliseconds from actual value set' but shouldn't matter for practical purposes " is 142.
Long Statement,Swarmops.Logic.Swarm,Positions,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Positions.cs,ForOrganizationGeographyRecurse,The length of the statement  "                TreeNode<Position> newPositionNode = positionNode.AddChild (Position.FromBasic(positionTemplate)); // "FromBasic" creates a deep copy " is 133.
Long Statement,Swarmops.Logic.Swarm,Positions,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Positions.cs,CreateSysadminPositions,The length of the statement  "            Position sysadminPrincipal = Position.Create (PositionLevel.SystemWide' null /* createdByPerson*/' null /*createdByPosition*/' PositionType.System_SysadminMain' " is 160.
Long Statement,Swarmops.Logic.Swarm,Positions,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Positions.cs,CreateSysadminPositions,The length of the statement  "                PositionTitle.Default' false /*volunteerable*/' false /*overridable*/' null /*reportsTo*/' null /*dotReportsTo*/' 1 /*minCount*/' 1 /*maxCount*/); " is 146.
Long Statement,Swarmops.Logic.Swarm,Positions,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Positions.cs,CreateSysadminPositions,The length of the statement  "            Position.Create(PositionLevel.SystemWide' null /* createdByPerson*/' null /*createdByPosition*/' PositionType.System_SysadminReadWrite' PositionTitle.Default' " is 158.
Long Statement,Swarmops.Logic.Swarm,Positions,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Positions.cs,CreateSysadminPositions,The length of the statement  "            Position.Create(PositionLevel.SystemWide' null /* createdByPerson*/' null /*createdByPosition*/' PositionType.System_SysadminAssistantReadOnly' PositionTitle.Default' " is 166.
Complex Conditional,Swarmops.Logic.Communications,UnregisterActivistHandler,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\PhoneMessageReceiver.cs,Filter,The conditional expression  "(smsParts[0] == "stopp" || smsParts[0] == "stop") &&                  (smsParts[1] == "aktivist" || smsParts[1] == "activist")"  is complex.
Complex Conditional,Swarmops.Logic.Financial,ExternalBankData,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExternalBankData.cs,LoadData,The conditional expression  "dateTime.Year < 2014 && organization.Identity == 1 &&                      fieldNameLookup.ContainsKey(ExternalBankDataFieldName.UniqueId) &&                      PilotInstallationIds.IsPilot(PilotInstallationIds.PiratePartySE)"  is complex.
Complex Conditional,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,AddUnpaidExpenseClaims,The conditional expression  "claim.Attested && claim.Validated && !claim.Repaid && !claim.KeepSeparate"  is complex.
Complex Conditional,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,AutomatchAgainstUnbalancedTransactions,The conditional expression  "possiblyCompetingTransaction.Rows.AmountCentsTotal == transaction.Rows.AmountCentsTotal &&                          possiblyCompetingTransaction.DateTime >= timeLow &&                          possiblyCompetingTransaction.DateTime <= timeHigh &&                          possiblyCompetingTransaction.Identity != transaction.Identity"  is complex.
Complex Conditional,Swarmops.Logic.Security,Authority,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authority.cs,HasAccess,The conditional expression  "(access.Aspect == AccessAspect.Bookkeeping || access.Aspect == AccessAspect.Financials) &&                  access.Type == AccessType.Read && this.Person.Identity == Swarm.Person.OpenLedgersIdentity"  is complex.
Complex Conditional,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,LegacyAddressToCashAddress,The conditional expression  "addrBytes[21] != checksum[0] || addrBytes[22] != checksum[1] || addrBytes[23] != checksum[2] || addrBytes[24] != checksum[3]"  is complex.
Complex Conditional,Swarmops.Logic.DashboardTasks,Tasks,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\DashboardTasks\Tasks.cs,AddAdvanceDebts,The conditional expression  "claim.Open && claim.Attested && claim.Validated && claim.Claimed"  is complex.
Empty Catch Block,Swarmops.Logic.Communications,PhoneMessageReceiver,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\PhoneMessageReceiver.cs,Handle,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.Communications,PhoneMessageReceiver,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\PhoneMessageReceiver.cs,GetPeopleFromPhoneNumbers,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.Communications,TypedMailTemplate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\TypedMailTemplate.cs,PreparePlaceholders,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,EnsureLegacyAddress,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,EnsureCashAddressWithoutPrefix,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,IsValidBitcoinAddress,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,IsValidBitcoinAddress,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,AutomatchAgainstUnbalancedTransactions,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.Security,Authentication,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authentication.cs,GetPeopleByLoginToken,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.Security,PermissionSet,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\PermissionSet.cs,PermissionSet,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.Security,PermissionSet,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\PermissionSet.cs,PermissionSet,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.Support,BackendServiceOrder,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\BackendServiceOrder.cs,Execute,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.Support,DatabaseMaintenance,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\DatabaseMaintenance.cs,FirstInitialization,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.Support,DatabaseMaintenance,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\DatabaseMaintenance.cs,UpgradeSchemata,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.DataObjects,OrganizationsDataObject,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\DataObjects\OrganizationDataObject.cs,UpdateOrgUptake,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.Structure,Organization,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organization.cs,GetUptakeGeographies,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.Structure,Organization,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organization.cs,LoadFunctionalMailAddress,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.Swarm,Activists,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Activists.cs,SendPhoneMessage,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.Swarm,Participation,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Participation.cs,Terminate,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.Swarm,PaymentCode,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\PaymentCode.cs,Create,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.Swarm,Person,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Person.cs,ResolveGeography,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.Swarm,Volunteer,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Volunteer.cs,AutoAssign,The method has an empty catch block.
Empty Catch Block,Swarmops.Logic.DashboardTasks,Tasks,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\DashboardTasks\Tasks.cs,AddExpenseClaims,The method has an empty catch block.
Magic Number,Swarmops.Logic.Communications,AutoMail,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\AutoMail.cs,FromTypeOrganizationAndGeography,The following statement contains a magic number: basic.Body.Trim().Length < 3
Magic Number,Swarmops.Logic.Communications,MailTemplate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\MailTemplate.cs,FromNameCountryAndOrg,The following statement contains a magic number: string lang = country.Culture.Substring (0' 2);
Magic Number,Swarmops.Logic.Communications,MailTemplate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\MailTemplate.cs,FromNameAndOrg,The following statement contains a magic number: string lang = country.Culture.Substring (0' 2);
Magic Number,Swarmops.Logic.Communications,NewsletterFeeds,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\NewsletterFeeds.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Communications,NewsletterFeeds,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\NewsletterFeeds.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Communications,OutboundMail,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundMail.cs,CreateFake,The following statement contains a magic number: return FromBasic (new BasicOutboundMail (0' MailAuthorType.Person' author.PersonId' title'                  body' 99' mailType' organization.Identity'                  geography.Identity' DateTime.Now'                  DateTime.Now' false' false' false' Constants.DateTimeLow'                  Constants.DateTimeLow' Constants.DateTimeLow' 0' 0' 0));
Magic Number,Swarmops.Logic.Communications,OutboundMail,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundMail.cs,PrepareTemplate,The following statement contains a magic number: this.templatePlain.Initialize (culture.Substring (3)' Organization.Identity' this'                          (renderText ? "Plain" : ""));
Magic Number,Swarmops.Logic.Communications,OutboundMailRecipients,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundMailRecipients.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Communications,OutboundMailRecipients,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundMailRecipients.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Communications,OutboundMails,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundMails.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Communications,OutboundMails,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\OutboundMails.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Communications,PaperLetters,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\PaperLetters.cs,FromArray,The following statement contains a magic number: PaperLetters result = new PaperLetters {Capacity = (basicArray.Length*11/10)};
Magic Number,Swarmops.Logic.Communications,PaperLetters,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\PaperLetters.cs,FromArray,The following statement contains a magic number: PaperLetters result = new PaperLetters {Capacity = (basicArray.Length*11/10)};
Magic Number,Swarmops.Logic.Communications,PhoneMessageReceiver,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\PhoneMessageReceiver.cs,SendMail,The following statement contains a magic number: SmtpClient mailserver = new SmtpClient ("mail.piratpartiet.se"' 587);
Magic Number,Swarmops.Logic.Communications,TypedMailTemplate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\TypedMailTemplate.cs,TypeFromName,The following statement contains a magic number: className = className.Substring (0' className.Length - 5);
Magic Number,Swarmops.Logic.Communications,TypedMailTemplate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\TypedMailTemplate.cs,FromName,The following statement contains a magic number: className = className.Substring (0' className.Length - 5);
Magic Number,Swarmops.Logic.Communications,PhoneMessageTransmitter,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\PhoneMessageTransmitter.cs,CheckServiceStatus,The following statement contains a magic number: switch (Credential.ServiceName)              {                  case "SwedishSms":                      return true; //cant test this                    case "SwedishKannel":                  {                      Encoding enc = Credential.Encoding;                      String url = "https://nurse.sanitarium.se/kannel/status";                        HttpWebResponse responseOut = null;                      try                      {                          HTTPSender.Send (url' enc' 1500' out responseOut);                          if (((int) responseOut.StatusCode).ToString().StartsWith ("2"))                              return true;                          return false;                      }                      catch (Exception)                      {                          return false;                      }                  }                  default:                      throw new Exception ("Error on SMS transmit. Unknown SMS service: " + Credential.ServiceName);              }
Magic Number,Swarmops.Logic.Communications,PhoneMessageTransmitter,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\PhoneMessageTransmitter.cs,NormalizePhoneNumber,The following statement contains a magic number: phoneNumber = "+" + phoneNumber.Substring (2);
Magic Number,Swarmops.Logic.Communications,PhoneMessageTransmitter,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\PhoneMessageTransmitter.cs,NormalizePhoneNumber,The following statement contains a magic number: phoneNumber.Length > 4 && !phoneNumber.StartsWith ("+")
Magic Number,Swarmops.Logic.Communications,PhoneMessageTransmitter,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\PhoneMessageTransmitter.cs,DeNormalizedPhoneNumber,The following statement contains a magic number: string[] phoneNumbers = new string[3];
Magic Number,Swarmops.Logic.Communications,PhoneMessageTransmitter,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\PhoneMessageTransmitter.cs,DeNormalizedPhoneNumber,The following statement contains a magic number: phoneNumbers[2] = "46" + groups[i];
Magic Number,Swarmops.Logic.Communications,HTTPSender,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\PhoneMessageTransmitter.cs,Send,The following statement contains a magic number: byte[] buf = new byte[8092];
Magic Number,Swarmops.Logic.Financial,BitcoinBlockchainUpgrade,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinBlockchainUpgrade.cs,Upgrade,The following statement contains a magic number: fromVersion -= fromVersion%2;
Magic Number,Swarmops.Logic.Financial,BitcoinBlockchainUpgrade,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinBlockchainUpgrade.cs,Upgrade,The following statement contains a magic number: fromVersion += 2;
Magic Number,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,TestUnspents,The following statement contains a magic number: switch (chain)              {                  case BitcoinChain.Core:                        addressInfoResult =                          JObject.Parse(                              new WebClient().DownloadString(                                  "https://blockchain.info/address/" + address + "?format=json&api_key=" +                                  SystemSettings.BlockchainSwarmopsApiKey));                        if ((int)addressInfoResult["final_balance"] == 0)                      {                          return false; // no funds on address at all at this time                      }                        try                      {                          unspentJsonResult = JObject.Parse(                              new WebClient().DownloadString("https://blockchain.info/unspent?active=" + address + "&api_key=" +                                                              SystemSettings.BlockchainSwarmopsApiKey));                        }                      catch (WebException webException)                      {                          // A 500 on the above _may_ mean that there's no unspent outpoints. It can also mean a data                          // retrieval or network error' in which case the exception must absolutely not be interpreted                          // as valid data of zero unspent outpoints.                            try                          {                              if (webException.Response == null)                              {                                  throw; // if there's no response at all' we can't do shit                              }                                string errorResponseContent =                                  new StreamReader(webException.Response.GetResponseStream()).ReadToEnd();                                if (errorResponseContent.Trim().StartsWith("No free outputs to spend"))                              {                                  // all is okay network-wise' there just aren't any UTXOs so we're getting an error code for that                                    return false; // no further processing and there are no fresh transactions                              }                                throw; // otherwise throw upward                          }                          catch (WebException)                          {                              // Ok' we tried' but there's apparently a network error so we need to abort this whole thing                              throw;                          }                        }                        foreach (var unspentJson in unspentJsonResult["unspent_outputs"])                      {                          BitcoinUnspentTransactionOutput txUnspent = new BitcoinUnspentTransactionOutput()                          {                              BitcoinAddress = address'                              ConfirmationCount = (UInt32)unspentJson["confirmations"]'                              Satoshis = (UInt64)unspentJson["value"]'                              TransactionHash = (string)unspentJson["tx_hash_big_endian"]'                              TransactionOutputIndex = (UInt32)unspentJson["tx_output_n"]                          };                            if (txUnspent.ConfirmationCount < 2)                          {                              // Fresh transactions' return true                              result = true;                          }                            // Add unspent to database                            if (hotAddress == null)                          {                              hotAddress = HotBitcoinAddress.FromAddress(chain' address);                          }                            SwarmDb.GetDatabaseForWriting()                              .CreateHotBitcoinAddressUnspentConditional(hotAddress.Identity' txUnspent.TransactionHash'                                  (int)txUnspent.TransactionOutputIndex' (Int64)txUnspent.Satoshis'                                  (int)txUnspent.ConfirmationCount);                      }                        // Update hotaddress totals                        HotBitcoinAddresses.UpdateAllUnspentTotals();                        return result;                        case BitcoinChain.Cash:                        // TODO: SELECTION OF BLOCK EXPLORER' ADDRESS STRING FORMAT TO GO WITH IT                        string cashAddress = EnsureCashAddressWithoutPrefix(address);                        addressInfoResult =                          JObject.Parse(                              new WebClient().DownloadString(                                  "https://bch-insight.bitpay.com/api/addr/" + cashAddress));                        JArray unspentArray;                        if ((int)addressInfoResult["balanceSat"] == 0 && (int)addressInfoResult["unconfirmedBalanceSat"] == 0)                      {                          return false; // no funds on address at all at this time                      }                        try                      {                          unspentArray = JArray.Parse(                              new WebClient().DownloadString("https://bch-insight.bitpay.com/api/addr/" + cashAddress + "/utxo"));                        }                      catch (WebException webException)                      {                          // A 500 on the above _may_ mean that there's no unspent outpoints. It can also mean a data                          // retrieval or network error' in which case the exception must absolutely not be interpreted                          // as valid data of zero unspent outpoints.                            try                          {                              if (webException.Response == null)                              {                                  throw; // if there's no response at all' we can't do shit                              }                                string errorResponseContent =                                  new StreamReader(webException.Response.GetResponseStream()).ReadToEnd();                                if (errorResponseContent.Trim().StartsWith("No free outputs to spend"))                              {                                  // all is okay network-wise' there just aren't any UTXOs so we're getting an error code for that                                    return false; // no further processing and there are no fresh transactions                              }                                throw; // otherwise throw upward                          }                          catch (WebException)                          {                              // Ok' we tried' but there's apparently a network error so we need to abort this whole thing                              throw;                          }                        }                        foreach (JObject unspentJson in unspentArray.Children())                      {                          BitcoinUnspentTransactionOutput txUnspent = new BitcoinUnspentTransactionOutput()                          {                              BitcoinAddress = address'                              ConfirmationCount = (UInt32)unspentJson["confirmations"]'                              Satoshis = (UInt64)unspentJson["satoshis"]'                              TransactionHash = (string)unspentJson["txid"]'                              TransactionOutputIndex = (UInt32)unspentJson["vout"]                          };                            if (txUnspent.ConfirmationCount < 2)                          {                              // Fresh transactions' return true                              result = true;                          }                            // Add unspent to database                            if (hotAddress == null)                          {                              hotAddress = HotBitcoinAddress.GetAddressOrForkCore(chain' address);                          }                            SwarmDb.GetDatabaseForWriting()                              .CreateHotBitcoinAddressUnspentConditional(hotAddress.Identity' txUnspent.TransactionHash'                                  (int)txUnspent.TransactionOutputIndex' (Int64)txUnspent.Satoshis'                                  (int)txUnspent.ConfirmationCount);                      }                        // Update hotaddress totals                        HotBitcoinAddresses.UpdateAllUnspentTotals();                        return result;                    default:                      throw new NotImplementedException("Unimplemented bitcoin chain: " + chain);              }
Magic Number,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,TestUnspents,The following statement contains a magic number: switch (chain)              {                  case BitcoinChain.Core:                        addressInfoResult =                          JObject.Parse(                              new WebClient().DownloadString(                                  "https://blockchain.info/address/" + address + "?format=json&api_key=" +                                  SystemSettings.BlockchainSwarmopsApiKey));                        if ((int)addressInfoResult["final_balance"] == 0)                      {                          return false; // no funds on address at all at this time                      }                        try                      {                          unspentJsonResult = JObject.Parse(                              new WebClient().DownloadString("https://blockchain.info/unspent?active=" + address + "&api_key=" +                                                              SystemSettings.BlockchainSwarmopsApiKey));                        }                      catch (WebException webException)                      {                          // A 500 on the above _may_ mean that there's no unspent outpoints. It can also mean a data                          // retrieval or network error' in which case the exception must absolutely not be interpreted                          // as valid data of zero unspent outpoints.                            try                          {                              if (webException.Response == null)                              {                                  throw; // if there's no response at all' we can't do shit                              }                                string errorResponseContent =                                  new StreamReader(webException.Response.GetResponseStream()).ReadToEnd();                                if (errorResponseContent.Trim().StartsWith("No free outputs to spend"))                              {                                  // all is okay network-wise' there just aren't any UTXOs so we're getting an error code for that                                    return false; // no further processing and there are no fresh transactions                              }                                throw; // otherwise throw upward                          }                          catch (WebException)                          {                              // Ok' we tried' but there's apparently a network error so we need to abort this whole thing                              throw;                          }                        }                        foreach (var unspentJson in unspentJsonResult["unspent_outputs"])                      {                          BitcoinUnspentTransactionOutput txUnspent = new BitcoinUnspentTransactionOutput()                          {                              BitcoinAddress = address'                              ConfirmationCount = (UInt32)unspentJson["confirmations"]'                              Satoshis = (UInt64)unspentJson["value"]'                              TransactionHash = (string)unspentJson["tx_hash_big_endian"]'                              TransactionOutputIndex = (UInt32)unspentJson["tx_output_n"]                          };                            if (txUnspent.ConfirmationCount < 2)                          {                              // Fresh transactions' return true                              result = true;                          }                            // Add unspent to database                            if (hotAddress == null)                          {                              hotAddress = HotBitcoinAddress.FromAddress(chain' address);                          }                            SwarmDb.GetDatabaseForWriting()                              .CreateHotBitcoinAddressUnspentConditional(hotAddress.Identity' txUnspent.TransactionHash'                                  (int)txUnspent.TransactionOutputIndex' (Int64)txUnspent.Satoshis'                                  (int)txUnspent.ConfirmationCount);                      }                        // Update hotaddress totals                        HotBitcoinAddresses.UpdateAllUnspentTotals();                        return result;                        case BitcoinChain.Cash:                        // TODO: SELECTION OF BLOCK EXPLORER' ADDRESS STRING FORMAT TO GO WITH IT                        string cashAddress = EnsureCashAddressWithoutPrefix(address);                        addressInfoResult =                          JObject.Parse(                              new WebClient().DownloadString(                                  "https://bch-insight.bitpay.com/api/addr/" + cashAddress));                        JArray unspentArray;                        if ((int)addressInfoResult["balanceSat"] == 0 && (int)addressInfoResult["unconfirmedBalanceSat"] == 0)                      {                          return false; // no funds on address at all at this time                      }                        try                      {                          unspentArray = JArray.Parse(                              new WebClient().DownloadString("https://bch-insight.bitpay.com/api/addr/" + cashAddress + "/utxo"));                        }                      catch (WebException webException)                      {                          // A 500 on the above _may_ mean that there's no unspent outpoints. It can also mean a data                          // retrieval or network error' in which case the exception must absolutely not be interpreted                          // as valid data of zero unspent outpoints.                            try                          {                              if (webException.Response == null)                              {                                  throw; // if there's no response at all' we can't do shit                              }                                string errorResponseContent =                                  new StreamReader(webException.Response.GetResponseStream()).ReadToEnd();                                if (errorResponseContent.Trim().StartsWith("No free outputs to spend"))                              {                                  // all is okay network-wise' there just aren't any UTXOs so we're getting an error code for that                                    return false; // no further processing and there are no fresh transactions                              }                                throw; // otherwise throw upward                          }                          catch (WebException)                          {                              // Ok' we tried' but there's apparently a network error so we need to abort this whole thing                              throw;                          }                        }                        foreach (JObject unspentJson in unspentArray.Children())                      {                          BitcoinUnspentTransactionOutput txUnspent = new BitcoinUnspentTransactionOutput()                          {                              BitcoinAddress = address'                              ConfirmationCount = (UInt32)unspentJson["confirmations"]'                              Satoshis = (UInt64)unspentJson["satoshis"]'                              TransactionHash = (string)unspentJson["txid"]'                              TransactionOutputIndex = (UInt32)unspentJson["vout"]                          };                            if (txUnspent.ConfirmationCount < 2)                          {                              // Fresh transactions' return true                              result = true;                          }                            // Add unspent to database                            if (hotAddress == null)                          {                              hotAddress = HotBitcoinAddress.GetAddressOrForkCore(chain' address);                          }                            SwarmDb.GetDatabaseForWriting()                              .CreateHotBitcoinAddressUnspentConditional(hotAddress.Identity' txUnspent.TransactionHash'                                  (int)txUnspent.TransactionOutputIndex' (Int64)txUnspent.Satoshis'                                  (int)txUnspent.ConfirmationCount);                      }                        // Update hotaddress totals                        HotBitcoinAddresses.UpdateAllUnspentTotals();                        return result;                    default:                      throw new NotImplementedException("Unimplemented bitcoin chain: " + chain);              }
Magic Number,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,GetForkDateForChain,The following statement contains a magic number: switch (chain)              {                  case BitcoinChain.Cash:                      return new DateTime(2017'12'30); // set the first cold-storage tx to be on this date                  default:                      return Constants.DateTimeLow;              }
Magic Number,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,GetForkDateForChain,The following statement contains a magic number: switch (chain)              {                  case BitcoinChain.Cash:                      return new DateTime(2017'12'30); // set the first cold-storage tx to be on this date                  default:                      return Constants.DateTimeLow;              }
Magic Number,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,GetForkDateForChain,The following statement contains a magic number: switch (chain)              {                  case BitcoinChain.Cash:                      return new DateTime(2017'12'30); // set the first cold-storage tx to be on this date                  default:                      return Constants.DateTimeLow;              }
Magic Number,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,GetRecommendedFeePerThousandBytesSatoshis,The following statement contains a magic number: _lastFeeRefreshLookup.ContainsKey(chain) && utcNow < _lastFeeRefreshLookup[chain].AddHours (3)
Magic Number,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,GetRecommendedFeePerThousandBytesSatoshis,The following statement contains a magic number: Int64 satoshisPerThousandBytes = 1010;
Magic Number,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,TestMultisigPayout,The following statement contains a magic number: Int64 satoshis = new Money(100' Currency.FromCode ("SEK")).ToCurrency (Currency.BitcoinCash).Cents;
Magic Number,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,TestMultisigPayout,The following statement contains a magic number: Int64 satoshisMaximumAnticipatedFees = BitcoinUtility.GetRecommendedFeePerThousandBytesSatoshis(BitcoinChain.Cash) * 20;
Magic Number,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,TestMultisigPayout,The following statement contains a magic number: Int64 feeSatoshis = (transactionSizeBytes/1000 + 1)*                                  BitcoinUtility.GetRecommendedFeePerThousandBytesSatoshis(BitcoinChain.Cash);
Magic Number,Swarmops.Logic.Financial,FinancialAccountAutomationProfile,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialAccountAutomationProfile.cs,FromIdentity,The following statement contains a magic number: financialAccountAutomationProfileId >= 100
Magic Number,Swarmops.Logic.Financial,PaymentTransferInfo,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentTransferInfo.cs,FromObject,The following statement contains a magic number: result.LocalizedPaymentInformation[                          Logic_Financial_PaymentTransferInfo.PaymentTargetField_Iban] =                              invoice.PayToAccount.Substring(5);
Magic Number,Swarmops.Logic.Financial,PaymentTransferInfo,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentTransferInfo.cs,FromObject,The following statement contains a magic number: result.CurrencyAmount = result.Currency.Code + " " +                                              (invoice.NativeCurrencyAmount.Cents/100.0).ToString("N2");
Magic Number,Swarmops.Logic.Financial,PaymentTransferInfo,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentTransferInfo.cs,FromObject,The following statement contains a magic number: result.CurrencyAmount = result.Currency.Code + " " + (amountToPay.ToCurrency(result.Currency).Cents / 100.0).ToString("N2");
Magic Number,Swarmops.Logic.Financial,VatReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\VatReport.cs,CreateDbRecord,The following statement contains a magic number: int vatReportId = SwarmDb.GetDatabaseForWriting()                  .CreateVatReport(organization.Identity' guid.ToString()' year*100 + startMonth' monthCount);
Magic Number,Swarmops.Logic.Financial,VatReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\VatReport.cs,CreateNext,The following statement contains a magic number: DateTime lastReport = new DateTime(reports.Last().YearMonthStart / 100' reports.Last().YearMonthStart % 100'                      1);
Magic Number,Swarmops.Logic.Financial,VatReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\VatReport.cs,CreateNext,The following statement contains a magic number: DateTime lastReport = new DateTime(reports.Last().YearMonthStart / 100' reports.Last().YearMonthStart % 100'                      1);
Magic Number,Swarmops.Logic.Financial,VatReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\VatReport.cs,Create,The following statement contains a magic number: FinancialTransaction vatReportTransaction = FinancialTransaction.Create(organization' endDate.AddDays(4).AddHours(9)'                      newReport.Description);
Magic Number,Swarmops.Logic.Financial,VatReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\VatReport.cs,Create,The following statement contains a magic number: FinancialTransaction vatReportTransaction = FinancialTransaction.Create(organization' endDate.AddDays(4).AddHours(9)'                      newReport.Description);
Magic Number,Swarmops.Logic.Financial,VatReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\VatReport.cs,NextReportDescription,The following statement contains a magic number: switch (monthInterval)              {                  case 1:                      return String.Format(Resources.Logic_Financial_VatReport.Description_SingleMonth'                          new DateTime(nextReportConcerns.Year' nextReportConcerns.Month' 2)); // the 2 is to prevent timezone errors                    case 12:                      return String.Format(Resources.Logic_Financial_VatReport.Description_FullYear'                          nextReportConcerns.Year);                    default:                      return String.Format(Resources.Logic_Financial_VatReport.Description_Months'                          nextReportConcerns' nextReportConcerns.AddMonths(monthInterval - 1));                }
Magic Number,Swarmops.Logic.Financial,VatReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\VatReport.cs,NextReportDescription,The following statement contains a magic number: switch (monthInterval)              {                  case 1:                      return String.Format(Resources.Logic_Financial_VatReport.Description_SingleMonth'                          new DateTime(nextReportConcerns.Year' nextReportConcerns.Month' 2)); // the 2 is to prevent timezone errors                    case 12:                      return String.Format(Resources.Logic_Financial_VatReport.Description_FullYear'                          nextReportConcerns.Year);                    default:                      return String.Format(Resources.Logic_Financial_VatReport.Description_Months'                          nextReportConcerns' nextReportConcerns.AddMonths(monthInterval - 1));                }
Magic Number,Swarmops.Logic.Financial,VatReports,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\VatReports.cs,CreateNewReports,The following statement contains a magic number: Organization organization = Organization.FromIdentity(8);
Magic Number,Swarmops.Logic.Financial,ExchangeRateSnapshot,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExchangeRateSnapshot.cs,Create,The following statement contains a magic number: string coinCode = shapeshiftRate.pair.Substring(4);
Magic Number,Swarmops.Logic.Financial,ExchangeRateSnapshot,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExchangeRateSnapshot.cs,Create,The following statement contains a magic number: btcRate /= 1000000.0;
Magic Number,Swarmops.Logic.Financial,ExchangeRateSnapshot,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExchangeRateSnapshot.cs,Create,The following statement contains a magic number: string currencyName = match.Groups[2].Value;
Magic Number,Swarmops.Logic.Financial,ExchangeRateSnapshot,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExchangeRateSnapshot.cs,Create,The following statement contains a magic number: double btcRate = Double.Parse (match.Groups[3].Value' NumberStyles.AllowDecimalPoint'                          CultureInfo.InvariantCulture);
Magic Number,Swarmops.Logic.Financial,ExchangeRateSnapshot,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExchangeRateSnapshot.cs,Create,The following statement contains a magic number: btcRate /= 1000000.0;
Magic Number,Swarmops.Logic.Financial,CashAdvance,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\CashAdvance.cs,Create,The following statement contains a magic number: OutboundComm.CreateNotificationApprovalNeeded (budget' forPerson' string.Empty' amountCents/100.0'                  description' NotificationResource.CashAdvance_Requested);
Magic Number,Swarmops.Logic.Financial,CashAdvance,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\CashAdvance.cs,Create,The following statement contains a magic number: SwarmopsLogEntry.Create (forPerson'                  new CashAdvanceRequestedLogEntry (createdByPerson' forPerson' amountCents/100.0' budget' description)'                  newAdvance);
Magic Number,Swarmops.Logic.Financial,CashAdvance,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\CashAdvance.cs,Approve,The following statement contains a magic number: SwarmDb.GetDatabaseForWriting().CreateFinancialValidation (FinancialValidationType.Approval'                  FinancialDependencyType.CashAdvance' Identity' DateTime.UtcNow' approvingPerson.Identity' AmountCents/100.0);
Magic Number,Swarmops.Logic.Financial,CashAdvance,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\CashAdvance.cs,Approve,The following statement contains a magic number: OutboundComm.CreateNotificationOfFinancialValidation (Budget' Person' AmountCents/100.0' Description'                  NotificationResource.CashAdvance_Approved);
Magic Number,Swarmops.Logic.Financial,CashAdvance,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\CashAdvance.cs,RetractApproval,The following statement contains a magic number: SwarmDb.GetDatabaseForWriting().CreateFinancialValidation (FinancialValidationType.UndoApproval'                  FinancialDependencyType.CashAdvance' Identity' DateTime.UtcNow' retractingPerson.Identity' AmountCents/100.0);
Magic Number,Swarmops.Logic.Financial,CashAdvance,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\CashAdvance.cs,RetractApproval,The following statement contains a magic number: OutboundComm.CreateNotificationOfFinancialValidation (Budget' Person' AmountCents/100.0' Description'                  NotificationResource.CashAdvance_ApprovalRetracted);
Magic Number,Swarmops.Logic.Financial,CashAdvance,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\CashAdvance.cs,DenyApproval,The following statement contains a magic number: SwarmDb.GetDatabaseForWriting().CreateFinancialValidation(FinancialValidationType.Kill'                  FinancialDependencyType.CashAdvance' Identity' DateTime.UtcNow' denyingPerson.Identity' AmountCents / 100.0);
Magic Number,Swarmops.Logic.Financial,CashAdvance,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\CashAdvance.cs,DenyApproval,The following statement contains a magic number: OutboundComm.CreateNotificationOfFinancialValidation(Budget' Person' AmountCents / 100.0' Description'                  NotificationResource.CashAdvance_Denied' reason);
Magic Number,Swarmops.Logic.Financial,ExternalBankData,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExternalBankData.cs,LoadData,The following statement contains a magic number: data = data.Replace(replacements[loop * 2]' replacements[loop * 2 + 1]);
Magic Number,Swarmops.Logic.Financial,ExternalBankData,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExternalBankData.cs,LoadData,The following statement contains a magic number: data = data.Replace(replacements[loop * 2]' replacements[loop * 2 + 1]);
Magic Number,Swarmops.Logic.Financial,ExternalBankData,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExternalBankData.cs,LoadData,The following statement contains a magic number: loop < replacements.Length / 2
Magic Number,Swarmops.Logic.Financial,ExternalBankData,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExternalBankData.cs,LoadData,The following statement contains a magic number: timeZoneString = timeZoneString.Substring(timeZoneString.Length - 6);
Magic Number,Swarmops.Logic.Financial,ExternalBankData,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExternalBankData.cs,LoadData,The following statement contains a magic number: dateTime.Year < 2014 && organization.Identity == 1 &&                      fieldNameLookup.ContainsKey(ExternalBankDataFieldName.UniqueId) &&                      PilotInstallationIds.IsPilot(PilotInstallationIds.PiratePartySE)
Magic Number,Swarmops.Logic.Financial,ExternalBankData,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExternalBankData.cs,ParseAmountString,The following statement contains a magic number: testDecimalSeparator = input[input.Length - 3];
Magic Number,Swarmops.Logic.Financial,ExternalBankData,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExternalBankData.cs,ParseAmountString,The following statement contains a magic number: input.Length > 3
Magic Number,Swarmops.Logic.Financial,ExternalBankData,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExternalBankData.cs,ParseAmountString,The following statement contains a magic number: testDecimalSeparator = input[input.Length - 2];
Magic Number,Swarmops.Logic.Financial,ExternalBankData,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExternalBankData.cs,ParseAmountString,The following statement contains a magic number: input.Length > 2
Magic Number,Swarmops.Logic.Financial,ExternalBankDataProfile,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExternalBankDataProfile.cs,FromIdentity,The following statement contains a magic number: result.IgnoreInitialLines = 8;
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,Create,The following statement contains a magic number: report._treeMap[0].Count > 3
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,AggregateAccounts,The following statement contains a magic number: const int assetIdentity = 1000000001;
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,AggregateAccounts,The following statement contains a magic number: const int debtIdentity = 1000000002;
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,AggregateAccounts,The following statement contains a magic number: const int incomeIdentity = 1000000003;
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,AggregateAccounts,The following statement contains a magic number: const int costIdentity = 1000000004;
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,PopulateTotals,The following statement contains a magic number: this.Totals.ThisYear = PopulateOneTotal(this._singleLookups[5]);
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,PopulateTotals,The following statement contains a magic number: this.Totals.ThisYearBudget = PopulateOneTotal(this._singleLookups[6]);
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,PopulateTotals,The following statement contains a magic number: quarter < 4
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,CreateAnnualReportNode,The following statement contains a magic number: quarter <= 4
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,CreateAnnualReportNode,The following statement contains a magic number: node.ThisYear = lookup[5][accountId];
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,CreateAnnualReportNode,The following statement contains a magic number: node.ThisYearBudget = lookup[6][accountId];
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,PopulateLookups,The following statement contains a magic number: this._singleLookups = new Dictionary<int' Int64>[7];
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,PopulateLookups,The following statement contains a magic number: this._treeLookups = new Dictionary<int' Int64>[7];
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,PopulateLookups,The following statement contains a magic number: index < 7
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,PopulateLookups,The following statement contains a magic number: DateTime[] quarterBoundaries =              {                  new DateTime (this.Year' 1' 1)' new DateTime (this.Year' 4' 1)' new DateTime (this.Year' 7' 1)'                  new DateTime (this.Year' 10' 1)' new DateTime (this.Year + 1' 1' 1)              };
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,PopulateLookups,The following statement contains a magic number: DateTime[] quarterBoundaries =              {                  new DateTime (this.Year' 1' 1)' new DateTime (this.Year' 4' 1)' new DateTime (this.Year' 7' 1)'                  new DateTime (this.Year' 10' 1)' new DateTime (this.Year + 1' 1' 1)              };
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,PopulateLookups,The following statement contains a magic number: DateTime[] quarterBoundaries =              {                  new DateTime (this.Year' 1' 1)' new DateTime (this.Year' 4' 1)' new DateTime (this.Year' 7' 1)'                  new DateTime (this.Year' 10' 1)' new DateTime (this.Year + 1' 1' 1)              };
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,PopulateLookups,The following statement contains a magic number: this._singleLookups[6][account.Identity] = account.GetBudgetCents (this.Year);
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,PopulateLookups,The following statement contains a magic number: quarter < 4
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,PopulateLookups,The following statement contains a magic number: this._singleLookups[5][account.Identity] = account.GetDeltaCents (new DateTime (this.Year' 1' 1)'                          new DateTime (this.Year + 1' 1' 1));
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,PopulateLookups,The following statement contains a magic number: index < 7
Magic Number,Swarmops.Logic.Financial,AnnualReport,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,PopulateLookups,The following statement contains a magic number: index < 7
Magic Number,Swarmops.Logic.Financial,AnnualReportNode,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\AnnualReport.cs,AnnualReportNode,The following statement contains a magic number: this.Quarters = new Int64[4];
Magic Number,Swarmops.Logic.Financial,FinancialAccountRows,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialAccountRows.cs,FromArray,The following statement contains a magic number: FinancialAccountRows result = new FinancialAccountRows {Capacity = (array.Length*11/10)};
Magic Number,Swarmops.Logic.Financial,FinancialAccountRows,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialAccountRows.cs,FromArray,The following statement contains a magic number: FinancialAccountRows result = new FinancialAccountRows {Capacity = (array.Length*11/10)};
Magic Number,Swarmops.Logic.Financial,FinancialAccounts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialAccounts.cs,GetBudgetSumCents,The following statement contains a magic number: return (Int64) (SwarmDb.GetDatabaseForReading().GetFinancialAccountsBudget (Identities' year)*100);
Magic Number,Swarmops.Logic.Financial,FinancialTransactionRows,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialTransactionRows.cs,FromArray,The following statement contains a magic number: FinancialTransactionRows result = new FinancialTransactionRows {Capacity = (basicArray.Length*11/10)};
Magic Number,Swarmops.Logic.Financial,FinancialTransactionRows,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialTransactionRows.cs,FromArray,The following statement contains a magic number: FinancialTransactionRows result = new FinancialTransactionRows {Capacity = (basicArray.Length*11/10)};
Magic Number,Swarmops.Logic.Financial,FinancialTransactions,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialTransactions.cs,GetIncomplete,The following statement contains a magic number: transaction.DateTime.Year > 2009
Magic Number,Swarmops.Logic.Financial,InboundInvoice,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\InboundInvoice.cs,Create,The following statement contains a magic number: OutboundComm.CreateNotificationApprovalNeeded (budget' creatingPerson' supplier' (amountCents-vatCents)/100.0'                  description' NotificationResource.InboundInvoice_Created);
Magic Number,Swarmops.Logic.Financial,InboundInvoice,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\InboundInvoice.cs,Create,The following statement contains a magic number: SwarmopsLogEntry.Create (creatingPerson'                  new InboundInvoiceCreatedLogEntry (creatingPerson' supplier' description' amountCents/100.0' budget)'                  newInvoice);
Magic Number,Swarmops.Logic.Financial,OutboundInvoice,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\OutboundInvoice.cs,FromReference,The following statement contains a magic number: string identityString = reference.Substring (12' reference.Length - 13);
Magic Number,Swarmops.Logic.Financial,OutboundInvoice,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\OutboundInvoice.cs,FromReference,The following statement contains a magic number: string identityString = reference.Substring (12' reference.Length - 13);
Magic Number,Swarmops.Logic.Financial,OutboundInvoice,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\OutboundInvoice.cs,Create,The following statement contains a magic number: OutboundInvoice invoice =                  FromIdentity (SwarmDb.GetDatabaseForWriting()                      .CreateOutboundInvoice (organization.Identity'                          createdByPerson != null ? createdByPerson.Identity : 0'                          dueDate'                          budget.Identity' customerName' invoiceAddressPaper'                          invoiceAddressMail' currency.Identity' string.Empty' domestic'                          Authentication.CreateWeakSecret (6)' theirReference));
Magic Number,Swarmops.Logic.Financial,PaymentGroup,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentGroup.cs,MapTransaction,The following statement contains a magic number: int namespaceLength = 4;
Magic Number,Swarmops.Logic.Financial,PaymentGroup,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentGroup.cs,MapTransaction,The following statement contains a magic number: switch (Char.ToLowerInvariant (Tag[5]))              {                  case 'm':                      namespaceLength = 6; // unique per year and month                      break;                  case 'd':                      namespaceLength = 8; // unique per year' month' day                      break;                  default:                      // do nothing -- assume year' namespace length 4 as declared on init                      break;              }
Magic Number,Swarmops.Logic.Financial,PaymentGroup,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentGroup.cs,MapTransaction,The following statement contains a magic number: switch (Char.ToLowerInvariant (Tag[5]))              {                  case 'm':                      namespaceLength = 6; // unique per year and month                      break;                  case 'd':                      namespaceLength = 8; // unique per year' month' day                      break;                  default:                      // do nothing -- assume year' namespace length 4 as declared on init                      break;              }
Magic Number,Swarmops.Logic.Financial,PaymentGroup,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentGroup.cs,MapTransaction,The following statement contains a magic number: switch (Char.ToLowerInvariant (Tag[5]))              {                  case 'm':                      namespaceLength = 6; // unique per year and month                      break;                  case 'd':                      namespaceLength = 8; // unique per year' month' day                      break;                  default:                      // do nothing -- assume year' namespace length 4 as declared on init                      break;              }
Magic Number,Swarmops.Logic.Financial,PaymentGroup,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentGroup.cs,MapTransaction,The following statement contains a magic number: string lookfor = Tag.Substring (5 + namespaceLength).ToLowerInvariant().Trim();
Magic Number,Swarmops.Logic.Financial,PaymentGroup,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentGroup.cs,MapTransaction,The following statement contains a magic number: int year = Int32.Parse (Tag.Substring (5' 4));
Magic Number,Swarmops.Logic.Financial,PaymentGroup,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentGroup.cs,MapTransaction,The following statement contains a magic number: int year = Int32.Parse (Tag.Substring (5' 4));
Magic Number,Swarmops.Logic.Financial,PaymentGroup,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentGroup.cs,MapTransaction,The following statement contains a magic number: year = Int32.Parse (Tag.Substring (0' 4));
Magic Number,Swarmops.Logic.Financial,PaymentInformationList,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentInformation.cs,FromArray,The following statement contains a magic number: PaymentInformationList result = new PaymentInformationList {Capacity = basicArray.Length*11/10};
Magic Number,Swarmops.Logic.Financial,PaymentInformationList,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\PaymentInformation.cs,FromArray,The following statement contains a magic number: PaymentInformationList result = new PaymentInformationList {Capacity = basicArray.Length*11/10};
Magic Number,Swarmops.Logic.Financial,Payout,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payout.cs,LoadDependencies,The following statement contains a magic number: switch (dependency.DependencyType)                  {                      case FinancialDependencyType.ExpenseClaim:                          this.DependentExpenseClaims.Add(ExpenseClaim.FromIdentity(dependency.ForeignId));                          break;                      case FinancialDependencyType.InboundInvoice:                          this.DependentInvoices.Add(InboundInvoice.FromIdentity(dependency.ForeignId));                          break;                      case FinancialDependencyType.Salary:                          Salary salary = Salary.FromIdentity(dependency.ForeignId);                          if (salary.NetSalaryCents == AmountCents || this.CreatedDateTime > new DateTime(2015' 11' 1))                          {                              this.DependentSalariesNet.Add(salary);                          }                          else // LEGACY                          {                              this.DependentSalariesTax.Add(salary);                          }                          break;                        case FinancialDependencyType.SalaryTax:                          Salary salaryTax = Salary.FromIdentity(dependency.ForeignId);                          this.DependentSalariesTax.Add(salaryTax);                          break;                        case FinancialDependencyType.CashAdvance:                          this.DependentCashAdvancesPayout.Add(CashAdvance.FromIdentity(dependency.ForeignId));                          break;                        case FinancialDependencyType.CashAdvancePayback:                          this.DependentCashAdvancesPayback.Add(CashAdvance.FromIdentity(dependency.ForeignId));                          break;                        default:                          throw new NotImplementedException(                              "Unknown financial dependency type in Payout.LoadDependencies(): " + dependency);                  }
Magic Number,Swarmops.Logic.Financial,Payout,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payout.cs,LoadDependencies,The following statement contains a magic number: switch (dependency.DependencyType)                  {                      case FinancialDependencyType.ExpenseClaim:                          this.DependentExpenseClaims.Add(ExpenseClaim.FromIdentity(dependency.ForeignId));                          break;                      case FinancialDependencyType.InboundInvoice:                          this.DependentInvoices.Add(InboundInvoice.FromIdentity(dependency.ForeignId));                          break;                      case FinancialDependencyType.Salary:                          Salary salary = Salary.FromIdentity(dependency.ForeignId);                          if (salary.NetSalaryCents == AmountCents || this.CreatedDateTime > new DateTime(2015' 11' 1))                          {                              this.DependentSalariesNet.Add(salary);                          }                          else // LEGACY                          {                              this.DependentSalariesTax.Add(salary);                          }                          break;                        case FinancialDependencyType.SalaryTax:                          Salary salaryTax = Salary.FromIdentity(dependency.ForeignId);                          this.DependentSalariesTax.Add(salaryTax);                          break;                        case FinancialDependencyType.CashAdvance:                          this.DependentCashAdvancesPayout.Add(CashAdvance.FromIdentity(dependency.ForeignId));                          break;                        case FinancialDependencyType.CashAdvancePayback:                          this.DependentCashAdvancesPayback.Add(CashAdvance.FromIdentity(dependency.ForeignId));                          break;                        default:                          throw new NotImplementedException(                              "Unknown financial dependency type in Payout.LoadDependencies(): " + dependency);                  }
Magic Number,Swarmops.Logic.Financial,Payout,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payout.cs,CreateBitcoinPayoutFromPrototype,The following statement contains a magic number: switch (component[0])                  {                      case 'A':                          // Cash advance                          CashAdvance advance = CashAdvance.FromIdentity (foreignId);                          advance.PaidOut = true;                            SwarmopsLogEntry.Create (null'                              new PayoutCreatedLogEntry (null' advance.Person' organization'                                  organization.Currency' advance.AmountCents'                                  "Cash Advance Paid Out")'                              advance.Person' advance);                            OutboundComm.CreateNotificationOfFinancialValidation (advance.Budget' advance.Person'                              advance.AmountCents/100.0' advance.Description' NotificationResource.CashAdvance_PaidOut);                          SwarmDb.GetDatabaseForWriting()                              .CreatePayoutDependency (payoutId' FinancialDependencyType.CashAdvance'                                  foreignId);                          break;                        case 'a':                          // This is a negative record - payback of cash advance                          CashAdvance advancePayback = CashAdvance.FromIdentity (foreignId);                          advancePayback.Open = false;                            SwarmDb.GetDatabaseForWriting()                              .CreatePayoutDependency(payoutId' FinancialDependencyType.CashAdvancePayback'                                  foreignId);                            break;                        case 'C':                          // Expense claim                          ExpenseClaim claim = ExpenseClaim.FromIdentity (foreignId);                          claim.Repaid = true;                          claim.Close();                            OutboundComm.CreateNotificationOfFinancialValidation (claim.Budget' claim.Claimer'                              claim.AmountCents/100.0' claim.Description' NotificationResource.ExpenseClaim_PaidOut);                          SwarmDb.GetDatabaseForWriting()                              .CreatePayoutDependency(payoutId' FinancialDependencyType.ExpenseClaim'                                  foreignId);                            break;                        case 'I':                          // Invoice                          InboundInvoice invoice = InboundInvoice.FromIdentity (foreignId);                          DateTime expectedPayment = invoice.DueDate;                            if (expectedPayment < DateTime.Today)                          {                              expectedPayment = DateTime.Today;                          }                            SwarmDb.GetDatabaseForWriting()                              .CreatePayoutDependency (payoutId' FinancialDependencyType.InboundInvoice'                                  invoice.Identity);                            // TODO: NOTIFY PAID?                            invoice.Open = false;                          break;                        case 'S':                          // Salary net                            Salary salaryNet = Salary.FromIdentity (foreignId);                          SwarmDb.GetDatabaseForWriting().CreatePayoutDependency (payoutId' FinancialDependencyType.Salary'                              salaryNet.Identity);                          salaryNet.NetPaid = true;                          break;                        case 'T':                          // Tax payout' typically for multiple salaries                            Salary salaryTax = Salary.FromIdentity (foreignId);                          SwarmDb.GetDatabaseForWriting().CreatePayoutDependency (payoutId' FinancialDependencyType.SalaryTax'                              salaryTax.Identity);                          salaryTax.TaxPaid = true;                            break;                      default:                          throw new NotImplementedException();                    }
Magic Number,Swarmops.Logic.Financial,Payout,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payout.cs,CreateBitcoinPayoutFromPrototype,The following statement contains a magic number: switch (component[0])                  {                      case 'A':                          // Cash advance                          CashAdvance advance = CashAdvance.FromIdentity (foreignId);                          advance.PaidOut = true;                            SwarmopsLogEntry.Create (null'                              new PayoutCreatedLogEntry (null' advance.Person' organization'                                  organization.Currency' advance.AmountCents'                                  "Cash Advance Paid Out")'                              advance.Person' advance);                            OutboundComm.CreateNotificationOfFinancialValidation (advance.Budget' advance.Person'                              advance.AmountCents/100.0' advance.Description' NotificationResource.CashAdvance_PaidOut);                          SwarmDb.GetDatabaseForWriting()                              .CreatePayoutDependency (payoutId' FinancialDependencyType.CashAdvance'                                  foreignId);                          break;                        case 'a':                          // This is a negative record - payback of cash advance                          CashAdvance advancePayback = CashAdvance.FromIdentity (foreignId);                          advancePayback.Open = false;                            SwarmDb.GetDatabaseForWriting()                              .CreatePayoutDependency(payoutId' FinancialDependencyType.CashAdvancePayback'                                  foreignId);                            break;                        case 'C':                          // Expense claim                          ExpenseClaim claim = ExpenseClaim.FromIdentity (foreignId);                          claim.Repaid = true;                          claim.Close();                            OutboundComm.CreateNotificationOfFinancialValidation (claim.Budget' claim.Claimer'                              claim.AmountCents/100.0' claim.Description' NotificationResource.ExpenseClaim_PaidOut);                          SwarmDb.GetDatabaseForWriting()                              .CreatePayoutDependency(payoutId' FinancialDependencyType.ExpenseClaim'                                  foreignId);                            break;                        case 'I':                          // Invoice                          InboundInvoice invoice = InboundInvoice.FromIdentity (foreignId);                          DateTime expectedPayment = invoice.DueDate;                            if (expectedPayment < DateTime.Today)                          {                              expectedPayment = DateTime.Today;                          }                            SwarmDb.GetDatabaseForWriting()                              .CreatePayoutDependency (payoutId' FinancialDependencyType.InboundInvoice'                                  invoice.Identity);                            // TODO: NOTIFY PAID?                            invoice.Open = false;                          break;                        case 'S':                          // Salary net                            Salary salaryNet = Salary.FromIdentity (foreignId);                          SwarmDb.GetDatabaseForWriting().CreatePayoutDependency (payoutId' FinancialDependencyType.Salary'                              salaryNet.Identity);                          salaryNet.NetPaid = true;                          break;                        case 'T':                          // Tax payout' typically for multiple salaries                            Salary salaryTax = Salary.FromIdentity (foreignId);                          SwarmDb.GetDatabaseForWriting().CreatePayoutDependency (payoutId' FinancialDependencyType.SalaryTax'                              salaryTax.Identity);                          salaryTax.TaxPaid = true;                            break;                      default:                          throw new NotImplementedException();                    }
Magic Number,Swarmops.Logic.Financial,Payout,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payout.cs,CreateFromProtoIdentity,The following statement contains a magic number: OutboundComm.CreateNotificationOfFinancialValidation (advance.Budget' advance.Person'                          advance.AmountCents/100.0' advance.Description' NotificationResource.CashAdvance_PaidOut);
Magic Number,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,AddUnpaidInboundInvoices,The following statement contains a magic number: BasicPayout basicPayout = new BasicPayout (0' organization.Identity' string.Empty'                          invoice.PayToAccount'                          invoice.Ocr.Length > 0 ? invoice.Ocr : invoice.InvoiceReference' // prefer OCR (automatic) over Reference (manual)                          (Int64) (invoice.Amount*100)'                          invoice.DueDate' false' DateTime.Now' 0);
Magic Number,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,AutomatchAgainstUnbalancedTransactions,The following statement contains a magic number: DateTime timeLow = transaction.DateTime.AddDays (-7);
Magic Number,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,AutomatchAgainstUnbalancedTransactions,The following statement contains a magic number: DateTime timeHigh = transaction.DateTime.AddDays (7);
Magic Number,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,AutomatchAgainstUnbalancedTransactions,The following statement contains a magic number: payoutLowerTimeLimit = transaction.DateTime.AddDays (-60);
Magic Number,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,AutomatchAgainstUnbalancedTransactions,The following statement contains a magic number: payoutUpperTimeLimit = transaction.DateTime.AddDays (60);
Magic Number,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,AutomatchAgainstUnbalancedTransactions,The following statement contains a magic number: payoutLowerTimeLimit = transaction.DateTime.AddDays (-25);
Magic Number,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,AutomatchAgainstUnbalancedTransactions,The following statement contains a magic number: payoutUpperTimeLimit = transaction.DateTime.AddDays (3);
Magic Number,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The following statement contains a magic number: addressSetTime.Length > 4 && DateTime.Parse (addressSetTime' CultureInfo.InvariantCulture).AddHours (48) > utcNow
Magic Number,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The following statement contains a magic number: addressSetTime.Length > 4 && DateTime.Parse (addressSetTime' CultureInfo.InvariantCulture).AddHours (48) > utcNow
Magic Number,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The following statement contains a magic number: payout.RecipientPerson != null && payout.RecipientPerson.BitcoinPayoutAddress.Length > 2 &&                          payout.Account.Length < 4
Magic Number,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The following statement contains a magic number: payout.RecipientPerson != null && payout.RecipientPerson.BitcoinPayoutAddress.Length > 2 &&                          payout.Account.Length < 4
Magic Number,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The following statement contains a magic number: Int64 satoshisMaximumAnticipatedFees = BitcoinUtility.GetRecommendedFeePerThousandBytesSatoshis(chain) * 20;
Magic Number,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The following statement contains a magic number: Int64 feeSatoshis = (transactionSizeBytes/1000 + 1) * BitcoinUtility.GetRecommendedFeePerThousandBytesSatoshis(chain);
Magic Number,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The following statement contains a magic number: spec += String.Format(" * {0'-40} {1'14:N2} {2'-4}\r\n"' notificationSpecLookup[personId][index]' notificationAmountLookup[personId][index]/100.0' currencyCode);
Magic Number,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The following statement contains a magic number: secondaryStrings["AmountFloat"] = (nativeCentsPersonLookup[personId]/100.0).ToString ("N2");
Magic Number,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The following statement contains a magic number: secondaryStrings["BitcoinAmountFloat"] = (satoshiPersonLookup[personId]/100.0).ToString ("N2");
Magic Number,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The following statement contains a magic number: masterSecondaryStrings["AmountFloat"] =                      (new Swarmops.Logic.Financial.Money (satoshisUsed' Currency.BitcoinCash).ToCurrency (                          organization.Currency).Cents/100.0).ToString ("N2"' CultureInfo.InvariantCulture);
Magic Number,Swarmops.Logic.Financial,Payouts,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payouts.cs,PerformAutomated,The following statement contains a magic number: masterSecondaryStrings["BitcoinAmountFloat"] = (satoshisUsed/100.0).ToString ("N2"' CultureInfo.InvariantCulture);
Magic Number,Swarmops.Logic.Financial,Payroll,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Payroll.cs,ProcessMonthly,The following statement contains a magic number: DateTime payday = new DateTime (today.Year' today.Month' 25);
Magic Number,Swarmops.Logic.Financial,Salaries,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Salaries.cs,CreateAnnualStatements,The following statement contains a magic number: monthName = monthName.Substring (0' 3);
Magic Number,Swarmops.Logic.Financial,Salaries,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Salaries.cs,CreateAnnualStatements,The following statement contains a magic number: lineItem += String.Format ("  {0'10:N2}  {1'11:N2}  {2'10:N2}  bitcoin"'                                  monthSalary.GrossSalaryCents/100.0' -monthSalary.SubtractiveTaxCents/100.0'                                  monthSalary.NetSalaryCents/100.0);
Magic Number,Swarmops.Logic.Financial,Salaries,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Salaries.cs,CreateAnnualStatements,The following statement contains a magic number: lineItem += String.Format ("  {0'10:N2}  {1'11:N2}  {2'10:N2}  bitcoin"'                                  monthSalary.GrossSalaryCents/100.0' -monthSalary.SubtractiveTaxCents/100.0'                                  monthSalary.NetSalaryCents/100.0);
Magic Number,Swarmops.Logic.Financial,Salaries,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Salaries.cs,CreateAnnualStatements,The following statement contains a magic number: lineItem += String.Format ("  {0'10:N2}  {1'11:N2}  {2'10:N2}  bitcoin"'                                  monthSalary.GrossSalaryCents/100.0' -monthSalary.SubtractiveTaxCents/100.0'                                  monthSalary.NetSalaryCents/100.0);
Magic Number,Swarmops.Logic.Financial,Salaries,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Salaries.cs,CreateAnnualStatements,The following statement contains a magic number: monthNumber <= 12
Magic Number,Swarmops.Logic.Financial,Salaries,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Salaries.cs,CreateAnnualStatements,The following statement contains a magic number: customStrings["GrossSalaryTotal"] = String.Format("{0'10:N2}"' grossTotal / 100.0);
Magic Number,Swarmops.Logic.Financial,Salaries,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Salaries.cs,CreateAnnualStatements,The following statement contains a magic number: customStrings["TaxDeductedTotal"] = String.Format("{0'11:N2}"' -subTaxTotal / 100.0);
Magic Number,Swarmops.Logic.Financial,Salaries,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Salaries.cs,CreateAnnualStatements,The following statement contains a magic number: customStrings["NetSalaryTotal"] = String.Format("{0'10:N2}"' netTotal / 100.0);
Magic Number,Swarmops.Logic.Financial,Salaries,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Salaries.cs,CreateAnnualStatements,The following statement contains a magic number: customStrings["TaxAdditiveTotalUnpadded"] = String.Format("{0:N2}"' addTaxTotal / 100.0);
Magic Number,Swarmops.Logic.Financial,Salary,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Salary.cs,Approve,The following statement contains a magic number: SwarmDb.GetDatabaseForWriting().CreateFinancialValidation (FinancialValidationType.Approval'                  FinancialDependencyType.Salary' Identity' DateTime.Now' approvingPerson.Identity' CostTotalCents/100.0);
Magic Number,Swarmops.Logic.Financial,Salary,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Salary.cs,RetractApproval,The following statement contains a magic number: SwarmDb.GetDatabaseForWriting().CreateFinancialValidation (FinancialValidationType.UndoApproval'                  FinancialDependencyType.Salary' Identity' DateTime.Now' retractingPerson.Identity' CostTotalCents/100.0);
Magic Number,Swarmops.Logic.Financial,Salary,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\Salary.cs,DenyApproval,The following statement contains a magic number: OutboundComm.CreateNotificationOfFinancialValidation(Budget' this.PayrollItem.Person' NetSalaryCents / 100.0' this.PayoutDate.ToString("MMMM yyyy")'                  NotificationResource.Salary_Denied' reason);
Magic Number,Swarmops.Logic.Financial,TaxLevels,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\TaxLevels.cs,GetTax,The following statement contains a magic number: double taxLevel = SwarmDb.GetDatabaseForReading().GetSalaryTaxLevel (country.Identity' taxLevelIdentifier'                  (int) Math.Floor (grossCentsInCountryCurrency / 100.0));
Magic Number,Swarmops.Logic.Financial,TaxLevels,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\TaxLevels.cs,GetTax,The following statement contains a magic number: return new Money((Int64) (taxLevel * 100.0)' country.Currency);
Magic Number,Swarmops.Logic.Financial,TaxLevels,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\TaxLevels.cs,ImportTaxLevels,The following statement contains a magic number: bool isPercentage = line[2] == '%' ? true : false;
Magic Number,Swarmops.Logic.Financial,TaxLevels,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\TaxLevels.cs,ImportTaxLevels,The following statement contains a magic number: int lowerBracket = Int32.Parse (line.Substring (5' 7));
Magic Number,Swarmops.Logic.Financial,TaxLevels,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\TaxLevels.cs,ImportTaxLevels,The following statement contains a magic number: int lowerBracket = Int32.Parse (line.Substring (5' 7));
Magic Number,Swarmops.Logic.Financial,TaxLevels,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\TaxLevels.cs,ImportTaxLevels,The following statement contains a magic number: double tax = Double.Parse (line.Substring (19' 5));
Magic Number,Swarmops.Logic.Financial,TaxLevels,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\TaxLevels.cs,ImportTaxLevels,The following statement contains a magic number: double tax = Double.Parse (line.Substring (19' 5));
Magic Number,Swarmops.Logic.Financial,TaxLevels,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\TaxLevels.cs,ImportTaxLevels,The following statement contains a magic number: int taxLevelId = Int32.Parse (line.Substring (3' 2));
Magic Number,Swarmops.Logic.Financial,TaxLevels,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\TaxLevels.cs,ImportTaxLevels,The following statement contains a magic number: int taxLevelId = Int32.Parse (line.Substring (3' 2));
Magic Number,Swarmops.Logic.Financial,TaxLevels,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\TaxLevels.cs,ImportTaxLevels,The following statement contains a magic number: tax = tax/100.0;
Magic Number,Swarmops.Logic.Financial,TaxLevels,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\TaxLevels.cs,ImportTaxLevels,The following statement contains a magic number: line.Length > 5
Magic Number,Swarmops.Logic.Financial,ExpenseClaim,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExpenseClaim.cs,Create,The following statement contains a magic number: transactionDescription = transactionDescription.Substring(0' 61) + "...";
Magic Number,Swarmops.Logic.Financial,ExpenseClaim,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExpenseClaim.cs,Create,The following statement contains a magic number: transactionDescription.Length > 64
Magic Number,Swarmops.Logic.Financial,ExpenseClaim,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExpenseClaim.cs,Create,The following statement contains a magic number: OutboundComm.CreateNotificationApprovalNeeded(budget' claimer' string.Empty'                      newClaim.BudgetAmountCents/100.0'                      description' NotificationResource.ExpenseClaim_Created);
Magic Number,Swarmops.Logic.Financial,ExpenseClaim,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExpenseClaim.cs,Create,The following statement contains a magic number: OutboundComm.CreateNotificationFinancialValidationNeeded(organization' newClaim.AmountCents/100.0'                      NotificationResource.Receipts_Filed);
Magic Number,Swarmops.Logic.Financial,ExpenseClaim,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExpenseClaim.cs,Create,The following statement contains a magic number: SwarmopsLogEntry.Create(claimer'                      new ExpenseClaimFiledLogEntry(claimer /*filing person*/' claimer /*beneficiary*/'                          newClaim.BudgetAmountCents/100.0'                          vatCents/100.0' budget' description)' newClaim);
Magic Number,Swarmops.Logic.Financial,ExpenseClaim,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExpenseClaim.cs,Create,The following statement contains a magic number: SwarmopsLogEntry.Create(claimer'                      new ExpenseClaimFiledLogEntry(claimer /*filing person*/' claimer /*beneficiary*/'                          newClaim.BudgetAmountCents/100.0'                          vatCents/100.0' budget' description)' newClaim);
Magic Number,Swarmops.Logic.Financial,ExpenseClaim,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExpenseClaim.cs,Validate,The following statement contains a magic number: OutboundComm.CreateNotificationOfFinancialValidation (Budget' Claimer' AmountCents/100.0' Description'                  NotificationResource.ExpenseClaim_Validated);
Magic Number,Swarmops.Logic.Financial,ExpenseClaim,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExpenseClaim.cs,RetractValidation,The following statement contains a magic number: OutboundComm.CreateNotificationOfFinancialValidation (Budget' Claimer' AmountCents/100.0' Description'                  NotificationResource.ExpenseClaim_ValidationRetracted);
Magic Number,Swarmops.Logic.Financial,ExpenseClaim,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExpenseClaim.cs,Approve,The following statement contains a magic number: OutboundComm.CreateNotificationOfFinancialValidation (Budget' Claimer' AmountCents/100.0' Description'                  NotificationResource.ExpenseClaim_Approved);
Magic Number,Swarmops.Logic.Financial,ExpenseClaim,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExpenseClaim.cs,RetractApproval,The following statement contains a magic number: OutboundComm.CreateNotificationOfFinancialValidation (Budget' Claimer' AmountCents/100.0' Description'                  NotificationResource.ExpenseClaim_ApprovalRetracted);
Magic Number,Swarmops.Logic.Financial,ExpenseClaim,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\ExpenseClaim.cs,DenyApproval,The following statement contains a magic number: OutboundComm.CreateNotificationOfFinancialValidation(Budget' Claimer' AmountCents / 100.0' Description'                  NotificationResource.ExpenseClaim_Denied' reason);
Magic Number,Swarmops.Logic.Financial,FinancialAccount,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialAccount.cs,LogForexProfitLoss,The following statement contains a magic number: nativeCents - 100 > currentNativeValueOfForeignCents
Magic Number,Swarmops.Logic.Financial,FinancialAccount,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialAccount.cs,GetBudgetCents,The following statement contains a magic number: return (Int64) (SwarmDb.GetDatabaseForReading().GetFinancialAccountBudget (Identity' year)*100);
Magic Number,Swarmops.Logic.Financial,FinancialAccount,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\FinancialAccount.cs,SetBudgetCents,The following statement contains a magic number: SwarmDb.GetDatabaseForWriting().SetFinancialAccountBudget (Identity' year' amount/100.0);
Magic Number,Swarmops.Logic.Cache,GuidCache,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Cache\GuidCache.cs,ConditionalGarbageCollect,The following statement contains a magic number: DateTime expired = DateTime.UtcNow.AddHours (-24);
Magic Number,Swarmops.Logic.Communications.Payload,ParticipantMailPayload,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Communications\Payload\ParticipantMailPayload.cs,RenderComm,The following statement contains a magic number: string randomPassword = Authentication.CreateWeakSecret (24);
Magic Number,Swarmops.Logic.Security,Sha256,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Sha256.cs,Compute,The following statement contains a magic number: byte[] data = Encoding.GetEncoding(1252).GetBytes(input);
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,EncodeBase64,The following statement contains a magic number: StringBuilder rs = new StringBuilder (length*2);
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,EncodeBase64,The following statement contains a magic number: rs.Append (base64_code[(c1 >> 2) & 0x3f]);
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,EncodeBase64,The following statement contains a magic number: c1 = (c1 & 0x03) << 4;
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,EncodeBase64,The following statement contains a magic number: c1 |= (c2 >> 4) & 0x0f;
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,EncodeBase64,The following statement contains a magic number: c1 = (c2 & 0x0f) << 2;
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,EncodeBase64,The following statement contains a magic number: c1 |= (c2 >> 6) & 0x03;
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,DecodeBase64,The following statement contains a magic number: bytes.Add ((byte) ((c1 << 2) | ((c2 & 0x30) >> 4)));
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,DecodeBase64,The following statement contains a magic number: bytes.Add ((byte) ((c1 << 2) | ((c2 & 0x30) >> 4)));
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,DecodeBase64,The following statement contains a magic number: bytes.Add ((byte) (((c2 & 0x0f) << 4) | ((c3 & 0x3c) >> 2)));
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,DecodeBase64,The following statement contains a magic number: bytes.Add ((byte) (((c2 & 0x0f) << 4) | ((c3 & 0x3c) >> 2)));
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,DecodeBase64,The following statement contains a magic number: bytes.Add ((byte) (((c3 & 0x03) << 6) | c4));
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,Encipher,The following statement contains a magic number: n = this.s[(l >> 24) & 0xff];
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,Encipher,The following statement contains a magic number: n += this.s[0x100 | ((l >> 16) & 0xff)];
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,Encipher,The following statement contains a magic number: n ^= this.s[0x200 | ((l >> 8) & 0xff)];
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,Encipher,The following statement contains a magic number: n = this.s[(r >> 24) & 0xff];
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,Encipher,The following statement contains a magic number: n += this.s[0x100 | ((r >> 16) & 0xff)];
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,Encipher,The following statement contains a magic number: n ^= this.s[0x200 | ((r >> 8) & 0xff)];
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,Encipher,The following statement contains a magic number: i <= BLOWFISH_NUM_ROUNDS - 2
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,StreamToWord,The following statement contains a magic number: word = (word << 8) | data[offset];
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,StreamToWord,The following statement contains a magic number: i < 4
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,CryptRaw,The following statement contains a magic number: logRounds < 4 || logRounds > 31
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,CryptRaw,The following statement contains a magic number: logRounds < 4 || logRounds > 31
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,CryptRaw,The following statement contains a magic number: i < 64
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,CryptRaw,The following statement contains a magic number: ret = new byte[clen*4];
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,CryptRaw,The following statement contains a magic number: ret[j++] = (byte) ((cdata[i] >> 24) & 0xff);
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,CryptRaw,The following statement contains a magic number: ret[j++] = (byte) ((cdata[i] >> 16) & 0xff);
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,CryptRaw,The following statement contains a magic number: ret[j++] = (byte) ((cdata[i] >> 8) & 0xff);
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,HashPassword,The following statement contains a magic number: minor = salt[2];
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,HashPassword,The following statement contains a magic number: minor != 'a' || salt[3] != '$'
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,HashPassword,The following statement contains a magic number: offset = 4;
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,HashPassword,The following statement contains a magic number: salt[offset + 2] > '$'
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,HashPassword,The following statement contains a magic number: int rounds = Int32.Parse (salt.Substring (offset' 2)' NumberFormatInfo.InvariantInfo);
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,HashPassword,The following statement contains a magic number: byte[] saltBytes = DecodeBase64 (salt.Substring (offset + 3' 22)'                  BCRYPT_SALT_LEN);
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,HashPassword,The following statement contains a magic number: byte[] saltBytes = DecodeBase64 (salt.Substring (offset + 3' 22)'                  BCRYPT_SALT_LEN);
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,HashPassword,The following statement contains a magic number: rounds < 10
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,HashPassword,The following statement contains a magic number: rs.Append (EncodeBase64 (hashed'                  (bf_crypt_ciphertext.Length*4) - 1));
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,GenerateSalt,The following statement contains a magic number: StringBuilder rs = new StringBuilder ((randomBytes.Length*2) + 8);
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,GenerateSalt,The following statement contains a magic number: StringBuilder rs = new StringBuilder ((randomBytes.Length*2) + 8);
Magic Number,Swarmops.Logic.Security,BCrypt,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\BCrypt.cs,GenerateSalt,The following statement contains a magic number: logRounds < 10
Magic Number,Swarmops.Logic.Security,Authentication,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authentication.cs,GenerateNewPasswordHash,The following statement contains a magic number: string salt = BCrypt.GenerateSalt (12);
Magic Number,Swarmops.Logic.Security,Authentication,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authentication.cs,GetPeopleByLoginToken,The following statement contains a magic number: cleanedNumber.Length == 10
Magic Number,Swarmops.Logic.Security,Authentication,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authentication.cs,ValidateEmailVerificationTicket,The following statement contains a magic number: storedParts.Length < 2
Magic Number,Swarmops.Logic.Security,Authentication,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authentication.cs,ValidateEmailVerificationTicket,The following statement contains a magic number: DateTime.Now.Subtract (createdTime).TotalHours > 10
Magic Number,Swarmops.Logic.Security,Authentication,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authentication.cs,RequestActivistSignoffProcess,The following statement contains a magic number: string encodedPasswordTicket =                      SHA1.Hash (p.Identity.ToString (CultureInfo.InvariantCulture)).Replace (" "' "").Substring (0' 4) +                      p.Identity;
Magic Number,Swarmops.Logic.Security,Authentication,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authentication.cs,ValidateRequestActivistSignoffProcess,The following statement contains a magic number: string encodedPasswordTicket =                  SHA1.Hash (p.Identity.ToString (CultureInfo.InvariantCulture)).Replace (" "' "").Substring (0' 4) +                  p.Identity;
Magic Number,Swarmops.Logic.Security,Authentication,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authentication.cs,InitializeSymmetricDatabaseKey,The following statement contains a magic number: aes.KeySize = 256;
Magic Number,Swarmops.Logic.Security,Authentication,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authentication.cs,InitializeSymmetricFileSystemKey,The following statement contains a magic number: return new byte[32];
Magic Number,Swarmops.Logic.Security,Authentication,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authentication.cs,InitializeSymmetricFileSystemKey,The following statement contains a magic number: aes.KeySize = 256;
Magic Number,Swarmops.Logic.Security,Authority,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authority.cs,EncryptString,The following statement contains a magic number: aes.IV.Length != 16
Magic Number,Swarmops.Logic.Security,Authority,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authority.cs,DecryptString,The following statement contains a magic number: aes.IV = new ArraySegment<byte>(cryptoBytes' 0' 16).ToArray();
Magic Number,Swarmops.Logic.Security,Authority,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authority.cs,DecryptString,The following statement contains a magic number: cryptoBytes = new ArraySegment<byte>(cryptoBytes' 16' cryptoBytes.Length - 16).ToArray();
Magic Number,Swarmops.Logic.Security,Authority,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\Authority.cs,DecryptString,The following statement contains a magic number: cryptoBytes = new ArraySegment<byte>(cryptoBytes' 16' cryptoBytes.Length - 16).ToArray();
Magic Number,Swarmops.Logic.Security,SHA1,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\SHA1.cs,Hash,The following statement contains a magic number: byte[] data = Encoding.GetEncoding (1252).GetBytes (input);
Magic Number,Swarmops.Logic.Support.LogEntries,SalaryCreatedLogEntry,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\LogEntries\SalaryCreatedLogEntry.cs,SalaryCreatedLogEntry,The following statement contains a magic number: Amount = salary.NetSalaryCents/100.0;
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,PolyMod,The following statement contains a magic number: ulong c0 = startValue >> 35;
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,PolyMod,The following statement contains a magic number: startValue = ((startValue & 0x07ffffffff) << 5) ^ ((ulong) input[i]);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,PolyMod,The following statement contains a magic number: i < 42
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: byte[] converted = new byte[42];
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1] = (byte) (bytes[a2] >> 3);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 1] = (byte) (bytes[a2] % 8 << 2 | bytes[a2 + 1] >> 6);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 1] = (byte) (bytes[a2] % 8 << 2 | bytes[a2 + 1] >> 6);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 1] = (byte) (bytes[a2] % 8 << 2 | bytes[a2 + 1] >> 6);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 2] = (byte) (bytes[a2 + 1] % 64 >> 1);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 2] = (byte) (bytes[a2 + 1] % 64 >> 1);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 3] = (byte) (bytes[a2 + 1] % 2 << 4 | bytes[a2 + 2] >> 4);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 3] = (byte) (bytes[a2 + 1] % 2 << 4 | bytes[a2 + 2] >> 4);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 3] = (byte) (bytes[a2 + 1] % 2 << 4 | bytes[a2 + 2] >> 4);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 3] = (byte) (bytes[a2 + 1] % 2 << 4 | bytes[a2 + 2] >> 4);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 3] = (byte) (bytes[a2 + 1] % 2 << 4 | bytes[a2 + 2] >> 4);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 4] = (byte) (bytes[a2 + 2] % 16 << 1 | bytes[a2 + 3] >> 7);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 4] = (byte) (bytes[a2 + 2] % 16 << 1 | bytes[a2 + 3] >> 7);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 4] = (byte) (bytes[a2 + 2] % 16 << 1 | bytes[a2 + 3] >> 7);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 4] = (byte) (bytes[a2 + 2] % 16 << 1 | bytes[a2 + 3] >> 7);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 4] = (byte) (bytes[a2 + 2] % 16 << 1 | bytes[a2 + 3] >> 7);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 5] = (byte) (bytes[a2 + 3] % 128 >> 2);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 5] = (byte) (bytes[a2 + 3] % 128 >> 2);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 5] = (byte) (bytes[a2 + 3] % 128 >> 2);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 5] = (byte) (bytes[a2 + 3] % 128 >> 2);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 6] = (byte) (bytes[a2 + 3] % 4 << 3 | bytes[a2 + 4] >> 5);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 6] = (byte) (bytes[a2 + 3] % 4 << 3 | bytes[a2 + 4] >> 5);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 6] = (byte) (bytes[a2 + 3] % 4 << 3 | bytes[a2 + 4] >> 5);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 6] = (byte) (bytes[a2 + 3] % 4 << 3 | bytes[a2 + 4] >> 5);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 6] = (byte) (bytes[a2 + 3] % 4 << 3 | bytes[a2 + 4] >> 5);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 6] = (byte) (bytes[a2 + 3] % 4 << 3 | bytes[a2 + 4] >> 5);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 7] = (byte) (bytes[a2 + 4] % 32);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 7] = (byte) (bytes[a2 + 4] % 32);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 7] = (byte) (bytes[a2 + 4] % 32);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: a1 < 32
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1] = (byte) (bytes[a2] >> 3);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 1] = (byte) (bytes[a2] % 8 << 2);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsEightToFive,The following statement contains a magic number: converted[a1 + 1] = (byte) (bytes[a2] % 8 << 2);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: byte[] converted = new byte[25];
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1] = (byte) (bytes[a2] << 3 | bytes[a2 + 1] >> 2);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1] = (byte) (bytes[a2] << 3 | bytes[a2 + 1] >> 2);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 1] = (byte) (bytes[a2 + 1] % 4 << 6 | bytes[a2 + 2] << 1 | bytes[a2 + 3] >> 4);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 1] = (byte) (bytes[a2 + 1] % 4 << 6 | bytes[a2 + 2] << 1 | bytes[a2 + 3] >> 4);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 1] = (byte) (bytes[a2 + 1] % 4 << 6 | bytes[a2 + 2] << 1 | bytes[a2 + 3] >> 4);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 1] = (byte) (bytes[a2 + 1] % 4 << 6 | bytes[a2 + 2] << 1 | bytes[a2 + 3] >> 4);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 1] = (byte) (bytes[a2 + 1] % 4 << 6 | bytes[a2 + 2] << 1 | bytes[a2 + 3] >> 4);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 2] = (byte) (bytes[a2 + 3] % 16 << 4 | bytes[a2 + 4] >> 1);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 2] = (byte) (bytes[a2 + 3] % 16 << 4 | bytes[a2 + 4] >> 1);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 2] = (byte) (bytes[a2 + 3] % 16 << 4 | bytes[a2 + 4] >> 1);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 2] = (byte) (bytes[a2 + 3] % 16 << 4 | bytes[a2 + 4] >> 1);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 2] = (byte) (bytes[a2 + 3] % 16 << 4 | bytes[a2 + 4] >> 1);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 3] = (byte) (bytes[a2 + 4] % 2 << 7 | bytes[a2 + 5] << 2 | bytes[a2 + 6] >> 3);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 3] = (byte) (bytes[a2 + 4] % 2 << 7 | bytes[a2 + 5] << 2 | bytes[a2 + 6] >> 3);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 3] = (byte) (bytes[a2 + 4] % 2 << 7 | bytes[a2 + 5] << 2 | bytes[a2 + 6] >> 3);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 3] = (byte) (bytes[a2 + 4] % 2 << 7 | bytes[a2 + 5] << 2 | bytes[a2 + 6] >> 3);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 3] = (byte) (bytes[a2 + 4] % 2 << 7 | bytes[a2 + 5] << 2 | bytes[a2 + 6] >> 3);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 3] = (byte) (bytes[a2 + 4] % 2 << 7 | bytes[a2 + 5] << 2 | bytes[a2 + 6] >> 3);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 3] = (byte) (bytes[a2 + 4] % 2 << 7 | bytes[a2 + 5] << 2 | bytes[a2 + 6] >> 3);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 3] = (byte) (bytes[a2 + 4] % 2 << 7 | bytes[a2 + 5] << 2 | bytes[a2 + 6] >> 3);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 4] = (byte) (bytes[a2 + 6] % 8 << 5 | bytes[a2 + 7]);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 4] = (byte) (bytes[a2 + 6] % 8 << 5 | bytes[a2 + 7]);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 4] = (byte) (bytes[a2 + 6] % 8 << 5 | bytes[a2 + 7]);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 4] = (byte) (bytes[a2 + 6] % 8 << 5 | bytes[a2 + 7]);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1 + 4] = (byte) (bytes[a2 + 6] % 8 << 5 | bytes[a2 + 7]);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: a2 < 32
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1] = (byte) (bytes[a2] << 3 | bytes[a2 + 1] >> 2);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: converted[a1] = (byte) (bytes[a2] << 3 | bytes[a2 + 1] >> 2);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,convertBitsFiveToEight,The following statement contains a magic number: bytes[a2 + 1] % 4 != 0
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,LegacyAddressToCashAddress,The following statement contains a magic number: BigInteger baseFiftyEight = new BigInteger(58);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,LegacyAddressToCashAddress,The following statement contains a magic number: addrBytes.Length != 25
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,LegacyAddressToCashAddress,The following statement contains a magic number: addrBytes.Length != 25
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,LegacyAddressToCashAddress,The following statement contains a magic number: byte[] checksum = hasher.ComputeHash(hasher.ComputeHash(addrBytes' 0' 21));
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,LegacyAddressToCashAddress,The following statement contains a magic number: addrBytes[21] != checksum[0] || addrBytes[22] != checksum[1] || addrBytes[23] != checksum[2] || addrBytes[24] != checksum[3]
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,LegacyAddressToCashAddress,The following statement contains a magic number: addrBytes[21] != checksum[0] || addrBytes[22] != checksum[1] || addrBytes[23] != checksum[2] || addrBytes[24] != checksum[3]
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,LegacyAddressToCashAddress,The following statement contains a magic number: addrBytes[21] != checksum[0] || addrBytes[22] != checksum[1] || addrBytes[23] != checksum[2] || addrBytes[24] != checksum[3]
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,LegacyAddressToCashAddress,The following statement contains a magic number: addrBytes[21] != checksum[0] || addrBytes[22] != checksum[1] || addrBytes[23] != checksum[2] || addrBytes[24] != checksum[3]
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,LegacyAddressToCashAddress,The following statement contains a magic number: addrBytes[21] != checksum[0] || addrBytes[22] != checksum[1] || addrBytes[23] != checksum[2] || addrBytes[24] != checksum[3]
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,LegacyAddressToCashAddress,The following statement contains a magic number: addrBytes[21] != checksum[0] || addrBytes[22] != checksum[1] || addrBytes[23] != checksum[2] || addrBytes[24] != checksum[3]
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,LegacyAddressToCashAddress,The following statement contains a magic number: ulong mod = PolyMod(cashAddr' (ulong) (mainnet ? 1058337025301 : 584719417569));
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,LegacyAddressToCashAddress,The following statement contains a magic number: ulong mod = PolyMod(cashAddr' (ulong) (mainnet ? 1058337025301 : 584719417569));
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,LegacyAddressToCashAddress,The following statement contains a magic number: cashAddr[i + 34] = (byte) ((mod >> (5 * (7 - i))) & 0x1f);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,LegacyAddressToCashAddress,The following statement contains a magic number: cashAddr[i + 34] = (byte) ((mod >> (5 * (7 - i))) & 0x1f);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,LegacyAddressToCashAddress,The following statement contains a magic number: cashAddr[i + 34] = (byte) ((mod >> (5 * (7 - i))) & 0x1f);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,LegacyAddressToCashAddress,The following statement contains a magic number: i < 8
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,CashAddressToLegacyAddress,The following statement contains a magic number: cashAddress.Length != 54 && cashAddress.Length != 42 && cashAddress.Length != 50
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,CashAddressToLegacyAddress,The following statement contains a magic number: cashAddress.Length != 54 && cashAddress.Length != 42 && cashAddress.Length != 50
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,CashAddressToLegacyAddress,The following statement contains a magic number: cashAddress.Length != 54 && cashAddress.Length != 42 && cashAddress.Length != 50
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,CashAddressToLegacyAddress,The following statement contains a magic number: afterPrefix = 12;
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,CashAddressToLegacyAddress,The following statement contains a magic number: int max = afterPrefix + 42;
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,CashAddressToLegacyAddress,The following statement contains a magic number: byte[] decodedBytes = new byte[42];
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,CashAddressToLegacyAddress,The following statement contains a magic number: PolyMod(decodedBytes' (ulong) (mainnet ? 1058337025301 : 584719417569)) != 0
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,CashAddressToLegacyAddress,The following statement contains a magic number: PolyMod(decodedBytes' (ulong) (mainnet ? 1058337025301 : 584719417569)) != 0
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,CashAddressToLegacyAddress,The following statement contains a magic number: byte[] checksum = hasher.ComputeHash(hasher.ComputeHash(decodedBytes' 0' 21));
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,CashAddressToLegacyAddress,The following statement contains a magic number: decodedBytes[21] = checksum[0];
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,CashAddressToLegacyAddress,The following statement contains a magic number: decodedBytes[22] = checksum[1];
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,CashAddressToLegacyAddress,The following statement contains a magic number: decodedBytes[23] = checksum[2];
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,CashAddressToLegacyAddress,The following statement contains a magic number: decodedBytes[23] = checksum[2];
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,CashAddressToLegacyAddress,The following statement contains a magic number: decodedBytes[24] = checksum[3];
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,CashAddressToLegacyAddress,The following statement contains a magic number: decodedBytes[24] = checksum[3];
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,CashAddressToLegacyAddress,The following statement contains a magic number: System.Text.StringBuilder ret = new System.Text.StringBuilder(36);
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,CashAddressToLegacyAddress,The following statement contains a magic number: numZeros < 25 && decodedBytes[numZeros] == 0
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,CashAddressToLegacyAddress,The following statement contains a magic number: byte[] retArr = new byte[36];
Magic Number,Swarmops.Logic.Support,BitcoinCashAddressConversion,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\SharpCashAddr.cs,CashAddressToLegacyAddress,The following statement contains a magic number: BigInteger baseFiftyEight = new BigInteger(58);
Magic Number,Swarmops.Logic.Support,BlockchainTransaction,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\BlockchainTransaction.cs,FromBlockchainInfoJson,The following statement contains a magic number: System.DateTime transactionDateTimeUtc = new DateTime(1970' 1' 1' 0' 0' 0' 0' System.DateTimeKind.Utc);
Magic Number,Swarmops.Logic.Support,BlockchainTransaction,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\BlockchainTransaction.cs,FromInsightInfoJson,The following statement contains a magic number: System.DateTime transactionDateTimeUtc = new DateTime(1970' 1' 1' 0' 0' 0' 0' System.DateTimeKind.Utc);
Magic Number,Swarmops.Logic.Support,SupportFunctions,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\General.cs,GenerateSecureRandomKey,The following statement contains a magic number: StringBuilder result = new StringBuilder(byteCount * 2);
Magic Number,Swarmops.Logic.Support,Imagery,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\Imagery.cs,Resize,The following statement contains a magic number: destX = Convert.ToInt16 ((width -                                            (sourceWidth*nPercent))/2);
Magic Number,Swarmops.Logic.Support,PdfProcessor,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PdfProcessor.cs,GetPageCount,The following statement contains a magic number: process.ExitCode == 2
Magic Number,Swarmops.Logic.Support,PdfProcessor,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PdfProcessor.cs,RasterizeMany,The following statement contains a magic number: ProgressRange range = new ProgressRange                  {                      Minimum = pageCountRunning * 100 / pageCountTotal'                      Maximum = (pageCountRunning + pdfPageCount) * 100 / pageCountTotal                  };
Magic Number,Swarmops.Logic.Support,PdfProcessor,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PdfProcessor.cs,RasterizeMany,The following statement contains a magic number: ProgressRange range = new ProgressRange                  {                      Minimum = pageCountRunning * 100 / pageCountTotal'                      Maximum = (pageCountRunning + pdfPageCount) * 100 / pageCountTotal                  };
Magic Number,Swarmops.Logic.Support,PdfProcessor,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PdfProcessor.cs,RasterizeMany,The following statement contains a magic number: BroadcastProgress(organization' guid' 100);
Magic Number,Swarmops.Logic.Support,PdfProcessor,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PdfProcessor.cs,RasterizeOne,The following statement contains a magic number: process.WaitForExit(250);
Magic Number,Swarmops.Logic.Support,PdfProcessor,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PdfProcessor.cs,Rerasterize,The following statement contains a magic number: document.Description.Length < 32
Magic Number,Swarmops.Logic.Support,PdfProcessor,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PdfProcessor.cs,Rerasterize,The following statement contains a magic number: document.ServerFileName.Length < 64
Magic Number,Swarmops.Logic.Support,PdfProcessor,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PdfProcessor.cs,Rerasterize,The following statement contains a magic number: int density = 75;
Magic Number,Swarmops.Logic.Support,PdfProcessor,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PdfProcessor.cs,Rerasterize,The following statement contains a magic number: density = 300;
Magic Number,Swarmops.Logic.Support,PdfProcessor,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PdfProcessor.cs,Rerasterize,The following statement contains a magic number: string firstPart = document.ServerFileName.Substring(0' 64);
Magic Number,Swarmops.Logic.Support,ProgressRange,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PdfProcessor.cs,ProgressRange,The following statement contains a magic number: this.Maximum = 100;
Magic Number,Swarmops.Logic.Support,PluralBase<TPlural;TSingular;TBasic>,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PluralBase.cs,FromArray,The following statement contains a magic number: TPlural result = new TPlural {Capacity = basicArray.Length*11/10};
Magic Number,Swarmops.Logic.Support,PluralBase<TPlural;TSingular;TBasic>,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PluralBase.cs,FromArray,The following statement contains a magic number: TPlural result = new TPlural {Capacity = basicArray.Length*11/10};
Magic Number,Swarmops.Logic.Support,PluralBase<TPlural;TSingular;TBasic>,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PluralBase.cs,FromArray,The following statement contains a magic number: TPlural result = new TPlural {Capacity = logicObjectArray.Length*11/10};
Magic Number,Swarmops.Logic.Support,PluralBase<TPlural;TSingular;TBasic>,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\PluralBase.cs,FromArray,The following statement contains a magic number: TPlural result = new TPlural {Capacity = logicObjectArray.Length*11/10};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[0] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[0] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[0] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[0] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[0] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[0] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[0] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[0] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[1] = new[] {1' 2' 3' 4' 0' 6' 7' 8' 9' 5};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[1] = new[] {1' 2' 3' 4' 0' 6' 7' 8' 9' 5};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[1] = new[] {1' 2' 3' 4' 0' 6' 7' 8' 9' 5};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[1] = new[] {1' 2' 3' 4' 0' 6' 7' 8' 9' 5};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[1] = new[] {1' 2' 3' 4' 0' 6' 7' 8' 9' 5};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[1] = new[] {1' 2' 3' 4' 0' 6' 7' 8' 9' 5};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[1] = new[] {1' 2' 3' 4' 0' 6' 7' 8' 9' 5};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[1] = new[] {1' 2' 3' 4' 0' 6' 7' 8' 9' 5};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[2] = new[] {2' 3' 4' 0' 1' 7' 8' 9' 5' 6};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[2] = new[] {2' 3' 4' 0' 1' 7' 8' 9' 5' 6};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[2] = new[] {2' 3' 4' 0' 1' 7' 8' 9' 5' 6};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[2] = new[] {2' 3' 4' 0' 1' 7' 8' 9' 5' 6};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[2] = new[] {2' 3' 4' 0' 1' 7' 8' 9' 5' 6};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[2] = new[] {2' 3' 4' 0' 1' 7' 8' 9' 5' 6};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[2] = new[] {2' 3' 4' 0' 1' 7' 8' 9' 5' 6};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[2] = new[] {2' 3' 4' 0' 1' 7' 8' 9' 5' 6};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[2] = new[] {2' 3' 4' 0' 1' 7' 8' 9' 5' 6};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[3] = new[] {3' 4' 0' 1' 2' 8' 9' 5' 6' 7};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[3] = new[] {3' 4' 0' 1' 2' 8' 9' 5' 6' 7};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[3] = new[] {3' 4' 0' 1' 2' 8' 9' 5' 6' 7};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[3] = new[] {3' 4' 0' 1' 2' 8' 9' 5' 6' 7};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[3] = new[] {3' 4' 0' 1' 2' 8' 9' 5' 6' 7};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[3] = new[] {3' 4' 0' 1' 2' 8' 9' 5' 6' 7};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[3] = new[] {3' 4' 0' 1' 2' 8' 9' 5' 6' 7};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[3] = new[] {3' 4' 0' 1' 2' 8' 9' 5' 6' 7};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[3] = new[] {3' 4' 0' 1' 2' 8' 9' 5' 6' 7};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[4] = new[] {4' 0' 1' 2' 3' 9' 5' 6' 7' 8};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[4] = new[] {4' 0' 1' 2' 3' 9' 5' 6' 7' 8};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[4] = new[] {4' 0' 1' 2' 3' 9' 5' 6' 7' 8};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[4] = new[] {4' 0' 1' 2' 3' 9' 5' 6' 7' 8};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[4] = new[] {4' 0' 1' 2' 3' 9' 5' 6' 7' 8};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[4] = new[] {4' 0' 1' 2' 3' 9' 5' 6' 7' 8};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[4] = new[] {4' 0' 1' 2' 3' 9' 5' 6' 7' 8};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[4] = new[] {4' 0' 1' 2' 3' 9' 5' 6' 7' 8};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[4] = new[] {4' 0' 1' 2' 3' 9' 5' 6' 7' 8};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[5] = new[] {5' 9' 8' 7' 6' 0' 4' 3' 2' 1};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[5] = new[] {5' 9' 8' 7' 6' 0' 4' 3' 2' 1};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[5] = new[] {5' 9' 8' 7' 6' 0' 4' 3' 2' 1};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[5] = new[] {5' 9' 8' 7' 6' 0' 4' 3' 2' 1};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[5] = new[] {5' 9' 8' 7' 6' 0' 4' 3' 2' 1};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[5] = new[] {5' 9' 8' 7' 6' 0' 4' 3' 2' 1};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[5] = new[] {5' 9' 8' 7' 6' 0' 4' 3' 2' 1};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[5] = new[] {5' 9' 8' 7' 6' 0' 4' 3' 2' 1};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[5] = new[] {5' 9' 8' 7' 6' 0' 4' 3' 2' 1};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[6] = new[] {6' 5' 9' 8' 7' 1' 0' 4' 3' 2};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[6] = new[] {6' 5' 9' 8' 7' 1' 0' 4' 3' 2};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[6] = new[] {6' 5' 9' 8' 7' 1' 0' 4' 3' 2};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[6] = new[] {6' 5' 9' 8' 7' 1' 0' 4' 3' 2};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[6] = new[] {6' 5' 9' 8' 7' 1' 0' 4' 3' 2};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[6] = new[] {6' 5' 9' 8' 7' 1' 0' 4' 3' 2};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[6] = new[] {6' 5' 9' 8' 7' 1' 0' 4' 3' 2};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[6] = new[] {6' 5' 9' 8' 7' 1' 0' 4' 3' 2};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[6] = new[] {6' 5' 9' 8' 7' 1' 0' 4' 3' 2};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[7] = new[] {7' 6' 5' 9' 8' 2' 1' 0' 4' 3};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[7] = new[] {7' 6' 5' 9' 8' 2' 1' 0' 4' 3};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[7] = new[] {7' 6' 5' 9' 8' 2' 1' 0' 4' 3};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[7] = new[] {7' 6' 5' 9' 8' 2' 1' 0' 4' 3};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[7] = new[] {7' 6' 5' 9' 8' 2' 1' 0' 4' 3};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[7] = new[] {7' 6' 5' 9' 8' 2' 1' 0' 4' 3};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[7] = new[] {7' 6' 5' 9' 8' 2' 1' 0' 4' 3};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[7] = new[] {7' 6' 5' 9' 8' 2' 1' 0' 4' 3};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[7] = new[] {7' 6' 5' 9' 8' 2' 1' 0' 4' 3};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[8] = new[] {8' 7' 6' 5' 9' 3' 2' 1' 0' 4};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[8] = new[] {8' 7' 6' 5' 9' 3' 2' 1' 0' 4};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[8] = new[] {8' 7' 6' 5' 9' 3' 2' 1' 0' 4};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[8] = new[] {8' 7' 6' 5' 9' 3' 2' 1' 0' 4};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[8] = new[] {8' 7' 6' 5' 9' 3' 2' 1' 0' 4};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[8] = new[] {8' 7' 6' 5' 9' 3' 2' 1' 0' 4};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[8] = new[] {8' 7' 6' 5' 9' 3' 2' 1' 0' 4};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[8] = new[] {8' 7' 6' 5' 9' 3' 2' 1' 0' 4};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[8] = new[] {8' 7' 6' 5' 9' 3' 2' 1' 0' 4};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[9] = new[] {9' 8' 7' 6' 5' 4' 3' 2' 1' 0};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[9] = new[] {9' 8' 7' 6' 5' 4' 3' 2' 1' 0};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[9] = new[] {9' 8' 7' 6' 5' 4' 3' 2' 1' 0};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[9] = new[] {9' 8' 7' 6' 5' 4' 3' 2' 1' 0};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[9] = new[] {9' 8' 7' 6' 5' 4' 3' 2' 1' 0};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[9] = new[] {9' 8' 7' 6' 5' 4' 3' 2' 1' 0};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[9] = new[] {9' 8' 7' 6' 5' 4' 3' 2' 1' 0};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[9] = new[] {9' 8' 7' 6' 5' 4' 3' 2' 1' 0};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.op[9] = new[] {9' 8' 7' 6' 5' 4' 3' 2' 1' 0};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.F[0] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.F[0] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.F[0] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.F[0] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.F[0] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.F[0] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.F[0] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.F[0] = new[] {0' 1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.F[1] = new[] {1' 5' 7' 6' 2' 8' 3' 0' 9' 4};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.F[1] = new[] {1' 5' 7' 6' 2' 8' 3' 0' 9' 4};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.F[1] = new[] {1' 5' 7' 6' 2' 8' 3' 0' 9' 4};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.F[1] = new[] {1' 5' 7' 6' 2' 8' 3' 0' 9' 4};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.F[1] = new[] {1' 5' 7' 6' 2' 8' 3' 0' 9' 4};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.F[1] = new[] {1' 5' 7' 6' 2' 8' 3' 0' 9' 4};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.F[1] = new[] {1' 5' 7' 6' 2' 8' 3' 0' 9' 4};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.F[1] = new[] {1' 5' 7' 6' 2' 8' 3' 0' 9' 4};
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: this.F[i] = new int[10];
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: j < 10
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,CheckDigit,The following statement contains a magic number: i < 8
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,_ConvertToLong,The following statement contains a magic number: power *= 10;
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,_CalculateCheckDigit,The following statement contains a magic number: check = this.op[check][this.F[(i + 1)%8][reversedInput[i]]];
Magic Number,Swarmops.Logic.Support,CheckDigit,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\CheckDigit.cs,_Check,The following statement contains a magic number: check = this.op[check][this.F[i%8][reversedInput[i]]];
Magic Number,Swarmops.Logic.Support,Formatting,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\Formatting.cs,DoubleRoundToCents,The following statement contains a magic number: double epsilonLimit = 0.004;
Magic Number,Swarmops.Logic.Support,Formatting,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\Formatting.cs,DoubleRoundToCents,The following statement contains a magic number: double scalingFactor = 100.0;
Magic Number,Swarmops.Logic.Support,Formatting,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\Formatting.cs,DoubleRoundToCents,The following statement contains a magic number: epsilonLimit /= 100.0;
Magic Number,Swarmops.Logic.Support,Formatting,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\Formatting.cs,DoubleRoundToCents,The following statement contains a magic number: scalingFactor *= 100.0;
Magic Number,Swarmops.Logic.Support,Formatting,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\Formatting.cs,DoubleRoundToCents,The following statement contains a magic number: return Convert.ToInt64(input * scalingFactor + 0.2);
Magic Number,Swarmops.Logic.Support,Formatting,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\Formatting.cs,DoubleRoundToCents,The following statement contains a magic number: return Convert.ToInt64(input * scalingFactor - 0.2);
Magic Number,Swarmops.Logic.Support,Formatting,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\Formatting.cs,GenerateRangeString,The following statement contains a magic number: return result.Substring (2);
Magic Number,Swarmops.Logic.Support,Formatting,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\Formatting.cs,GetLuhnChecksum,The following statement contains a magic number: int temp = (number[i] - '0') * (((number.Length - i) % 2) == 1 ? 2 : 1);
Magic Number,Swarmops.Logic.Support,Formatting,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\Formatting.cs,GetLuhnChecksum,The following statement contains a magic number: int temp = (number[i] - '0') * (((number.Length - i) % 2) == 1 ? 2 : 1);
Magic Number,Swarmops.Logic.Support,Formatting,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\Formatting.cs,GetLuhnChecksum,The following statement contains a magic number: temp -= 9;
Magic Number,Swarmops.Logic.Support,Formatting,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\Formatting.cs,GetLuhnChecksum,The following statement contains a magic number: temp > 9
Magic Number,Swarmops.Logic.Support,Formatting,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\Formatting.cs,GetLuhnChecksum,The following statement contains a magic number: return ((10 - (sum % 10)) % 10).ToString(CultureInfo.InvariantCulture);
Magic Number,Swarmops.Logic.Support,Formatting,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\Formatting.cs,GetLuhnChecksum,The following statement contains a magic number: return ((10 - (sum % 10)) % 10).ToString(CultureInfo.InvariantCulture);
Magic Number,Swarmops.Logic.Support,Formatting,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\Formatting.cs,GetLuhnChecksum,The following statement contains a magic number: return ((10 - (sum % 10)) % 10).ToString(CultureInfo.InvariantCulture);
Magic Number,Swarmops.Logic.Support,Formatting,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\Formatting.cs,CheckLuhnChecksum,The following statement contains a magic number: number.Length < 2
Magic Number,Swarmops.Logic.Support,LogicServices,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\LogicServices.cs,ObjectsToIdentifiers,The following statement contains a magic number: result.Capacity = identifiables.Length*11/10;
Magic Number,Swarmops.Logic.Support,LogicServices,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\LogicServices.cs,ObjectsToIdentifiers,The following statement contains a magic number: result.Capacity = identifiables.Length*11/10;
Magic Number,Swarmops.Logic.Support,QuotedPrintable,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\QuotedPrintable.cs,HexDecoderEvaluator,The following statement contains a magic number: CaptureCollection captures = m.Groups[3].Captures;
Magic Number,Swarmops.Logic.Support,QuotedPrintable,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Support\QuotedPrintable.cs,HexDecoderEvaluator,The following statement contains a magic number: bytes[i] = Convert.ToByte (captures[i].Value' 16);
Magic Number,Swarmops.Logic.Governance,Election,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\Election.cs,FromIdentity,The following statement contains a magic number: switch (electionId)              {                  case 1:                      return                          FromBasic (new BasicElection (1' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2006' 9' 17)));                  case 2:                      return                          FromBasic (new BasicElection (2' "SE European Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2009' 6' 7)));                  case 3:                      return                          FromBasic (new BasicElection (3' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2010' 9' 19)));                    default:                      throw new NotImplementedException ("Elections are not in the db yet.");              }
Magic Number,Swarmops.Logic.Governance,Election,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\Election.cs,FromIdentity,The following statement contains a magic number: switch (electionId)              {                  case 1:                      return                          FromBasic (new BasicElection (1' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2006' 9' 17)));                  case 2:                      return                          FromBasic (new BasicElection (2' "SE European Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2009' 6' 7)));                  case 3:                      return                          FromBasic (new BasicElection (3' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2010' 9' 19)));                    default:                      throw new NotImplementedException ("Elections are not in the db yet.");              }
Magic Number,Swarmops.Logic.Governance,Election,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\Election.cs,FromIdentity,The following statement contains a magic number: switch (electionId)              {                  case 1:                      return                          FromBasic (new BasicElection (1' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2006' 9' 17)));                  case 2:                      return                          FromBasic (new BasicElection (2' "SE European Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2009' 6' 7)));                  case 3:                      return                          FromBasic (new BasicElection (3' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2010' 9' 19)));                    default:                      throw new NotImplementedException ("Elections are not in the db yet.");              }
Magic Number,Swarmops.Logic.Governance,Election,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\Election.cs,FromIdentity,The following statement contains a magic number: switch (electionId)              {                  case 1:                      return                          FromBasic (new BasicElection (1' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2006' 9' 17)));                  case 2:                      return                          FromBasic (new BasicElection (2' "SE European Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2009' 6' 7)));                  case 3:                      return                          FromBasic (new BasicElection (3' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2010' 9' 19)));                    default:                      throw new NotImplementedException ("Elections are not in the db yet.");              }
Magic Number,Swarmops.Logic.Governance,Election,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\Election.cs,FromIdentity,The following statement contains a magic number: switch (electionId)              {                  case 1:                      return                          FromBasic (new BasicElection (1' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2006' 9' 17)));                  case 2:                      return                          FromBasic (new BasicElection (2' "SE European Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2009' 6' 7)));                  case 3:                      return                          FromBasic (new BasicElection (3' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2010' 9' 19)));                    default:                      throw new NotImplementedException ("Elections are not in the db yet.");              }
Magic Number,Swarmops.Logic.Governance,Election,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\Election.cs,FromIdentity,The following statement contains a magic number: switch (electionId)              {                  case 1:                      return                          FromBasic (new BasicElection (1' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2006' 9' 17)));                  case 2:                      return                          FromBasic (new BasicElection (2' "SE European Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2009' 6' 7)));                  case 3:                      return                          FromBasic (new BasicElection (3' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2010' 9' 19)));                    default:                      throw new NotImplementedException ("Elections are not in the db yet.");              }
Magic Number,Swarmops.Logic.Governance,Election,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\Election.cs,FromIdentity,The following statement contains a magic number: switch (electionId)              {                  case 1:                      return                          FromBasic (new BasicElection (1' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2006' 9' 17)));                  case 2:                      return                          FromBasic (new BasicElection (2' "SE European Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2009' 6' 7)));                  case 3:                      return                          FromBasic (new BasicElection (3' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2010' 9' 19)));                    default:                      throw new NotImplementedException ("Elections are not in the db yet.");              }
Magic Number,Swarmops.Logic.Governance,Election,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\Election.cs,FromIdentity,The following statement contains a magic number: switch (electionId)              {                  case 1:                      return                          FromBasic (new BasicElection (1' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2006' 9' 17)));                  case 2:                      return                          FromBasic (new BasicElection (2' "SE European Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2009' 6' 7)));                  case 3:                      return                          FromBasic (new BasicElection (3' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2010' 9' 19)));                    default:                      throw new NotImplementedException ("Elections are not in the db yet.");              }
Magic Number,Swarmops.Logic.Governance,Election,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\Election.cs,FromIdentity,The following statement contains a magic number: switch (electionId)              {                  case 1:                      return                          FromBasic (new BasicElection (1' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2006' 9' 17)));                  case 2:                      return                          FromBasic (new BasicElection (2' "SE European Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2009' 6' 7)));                  case 3:                      return                          FromBasic (new BasicElection (3' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2010' 9' 19)));                    default:                      throw new NotImplementedException ("Elections are not in the db yet.");              }
Magic Number,Swarmops.Logic.Governance,Election,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\Election.cs,FromIdentity,The following statement contains a magic number: switch (electionId)              {                  case 1:                      return                          FromBasic (new BasicElection (1' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2006' 9' 17)));                  case 2:                      return                          FromBasic (new BasicElection (2' "SE European Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2009' 6' 7)));                  case 3:                      return                          FromBasic (new BasicElection (3' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2010' 9' 19)));                    default:                      throw new NotImplementedException ("Elections are not in the db yet.");              }
Magic Number,Swarmops.Logic.Governance,Election,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\Election.cs,FromIdentity,The following statement contains a magic number: switch (electionId)              {                  case 1:                      return                          FromBasic (new BasicElection (1' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2006' 9' 17)));                  case 2:                      return                          FromBasic (new BasicElection (2' "SE European Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2009' 6' 7)));                  case 3:                      return                          FromBasic (new BasicElection (3' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2010' 9' 19)));                    default:                      throw new NotImplementedException ("Elections are not in the db yet.");              }
Magic Number,Swarmops.Logic.Governance,Election,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\Election.cs,FromIdentity,The following statement contains a magic number: switch (electionId)              {                  case 1:                      return                          FromBasic (new BasicElection (1' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2006' 9' 17)));                  case 2:                      return                          FromBasic (new BasicElection (2' "SE European Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2009' 6' 7)));                  case 3:                      return                          FromBasic (new BasicElection (3' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2010' 9' 19)));                    default:                      throw new NotImplementedException ("Elections are not in the db yet.");              }
Magic Number,Swarmops.Logic.Governance,Election,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\Election.cs,FromIdentity,The following statement contains a magic number: switch (electionId)              {                  case 1:                      return                          FromBasic (new BasicElection (1' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2006' 9' 17)));                  case 2:                      return                          FromBasic (new BasicElection (2' "SE European Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2009' 6' 7)));                  case 3:                      return                          FromBasic (new BasicElection (3' "SE General Elections"' Country.FromCode ("SE").GeographyId'                              new DateTime (2010' 9' 19)));                    default:                      throw new NotImplementedException ("Elections are not in the db yet.");              }
Magic Number,Swarmops.Logic.Governance,MeetingElectionVote,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\MeetingElectionVote.cs,Create,The following statement contains a magic number: return                  FromIdentity (SwarmDb.GetDatabaseForWriting()                      .CreateInternalPollVote (poll.Identity' voteGeography.Identity'                          Authentication.                              CreateWeakSecret (12)));
Magic Number,Swarmops.Logic.Governance,MeetingElectionVoters,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\MeetingElectionVoters.cs,FromArray,The following statement contains a magic number: MeetingElectionVoters result = new MeetingElectionVoters {Capacity = basicArray.Length*11/10};
Magic Number,Swarmops.Logic.Governance,MeetingElectionVoters,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Governance\MeetingElectionVoters.cs,FromArray,The following statement contains a magic number: MeetingElectionVoters result = new MeetingElectionVoters {Capacity = basicArray.Length*11/10};
Magic Number,Swarmops.Logic.Media,MediaCategories,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Media\MediaCategories.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Media,MediaCategories,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Media\MediaCategories.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Media,MediaEntries,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Media\MediaEntries.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Media,MediaEntries,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Media\MediaEntries.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Media,Reporters,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Media\Reporters.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Media,Reporters,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Media\Reporters.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,GetUndeliverableCases,The following statement contains a magic number: return GetUndeliverableCases (0' 99999);
Magic Number,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,GetCaseDeltas,The following statement contains a magic number: command.CommandTimeout = 600;
Magic Number,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,ReadSupportEmailFromReader,The following statement contains a magic number: email.Body = Encoding.UTF8.GetString (Encoding.GetEncoding (1252).GetBytes (reader.GetString (4)));
Magic Number,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,ReadSupportEmailFromReader,The following statement contains a magic number: email.Body = Encoding.UTF8.GetString (Encoding.GetEncoding (1252).GetBytes (reader.GetString (4)));
Magic Number,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,ReadSupportEmailFromReader,The following statement contains a magic number: email.From = reader.GetString (5);
Magic Number,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,ReadSupportEmailFromReader,The following statement contains a magic number: email.To = reader.GetString (3);
Magic Number,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,ReadSupportEmailFromReader,The following statement contains a magic number: email.CaseTitle = reader.GetString (2);
Magic Number,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,ReadFullSupportCaseFromReader,The following statement contains a magic number: email = reader.GetString (2);
Magic Number,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,ReadFullSupportCaseFromReader,The following statement contains a magic number: !reader.IsDBNull (2)
Magic Number,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,ReadSupportCaseDeltaFromReader,The following statement contains a magic number: int personId = reader.GetInt32 (2);
Magic Number,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,ReadSupportCaseDeltaFromReader,The following statement contains a magic number: DateTime dateTime = reader.GetDateTime (3);
Magic Number,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,ReadSupportCaseDeltaFromReader,The following statement contains a magic number: string verb = reader.GetString (4);
Magic Number,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,ReadSupportCaseDeltaFromReader,The following statement contains a magic number: string changes = reader.GetString (5);
Magic Number,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,NotifyBouncingEmails,The following statement contains a magic number: cases = GetUndeliverableCases (lastCaseHandled' 100);
Magic Number,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,NotifyBouncingEmails,The following statement contains a magic number: body = body.Substring (bodySeparator + 4);
Magic Number,Swarmops.Logic.Special.Sweden,SupportDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SupportDatabase.cs,NotifyBouncingEmails,The following statement contains a magic number: people.Count > 2
Magic Number,Swarmops.Logic.Special.Sweden,SwedishForumDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SwedishForumDatabase.cs,GetDatabase,The following statement contains a magic number: return GetDatabase (2);
Magic Number,Swarmops.Logic.Special.Sweden,SwedishForumDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SwedishForumDatabase.cs,GetDatabase,The following statement contains a magic number: return GetDatabase (2);
Magic Number,Swarmops.Logic.Special.Sweden,SwedishForumDatabaseInstantForum,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SwedishForumDatabase.cs,IsPartyMember,The following statement contains a magic number: roleId == 7
Magic Number,Swarmops.Logic.Special.Sweden,SwedishForumDatabaseInstantForum,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SwedishForumDatabase.cs,CreateNewPost,The following statement contains a magic number: SqlParameter parameterText = new SqlParameter ("@strMessage"' SqlDbType.NText' post.Length*2 + 2048);
Magic Number,Swarmops.Logic.Special.Sweden,SwedishForumDatabaseInstantForum,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SwedishForumDatabase.cs,CreateNewPost,The following statement contains a magic number: SqlParameter parameterText = new SqlParameter ("@strMessage"' SqlDbType.NText' post.Length*2 + 2048);
Magic Number,Swarmops.Logic.Special.Sweden,SwedishForumDatabaseInstantForum,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SwedishForumDatabase.cs,CreateNewPost,The following statement contains a magic number: SqlParameter parameterResult = new SqlParameter ("@intIdentity"' SqlDbType.Int' 4);
Magic Number,Swarmops.Logic.Special.Sweden,ErrorIgnorerPolicy,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SwedishForumDatabase.cs,CheckValidationResult,The following statement contains a magic number: error != -2146762486
Magic Number,Swarmops.Logic.Special.Sweden,SwedishForumDatabaseVBulletin,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Sweden\SwedishForumDatabase.cs,GetAccountId,The following statement contains a magic number: command.CommandTimeout = 20;
Magic Number,Swarmops.Logic.Structure,GeographyUpdate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyUpdate.cs,PrimeCountry,The following statement contains a magic number: StringBuilder sqlCityBuild =                  new StringBuilder("INSERT INTO Cities (CityName' GeographyId' CountryId' Comment) VALUES "' 65536);
Magic Number,Swarmops.Logic.Structure,GeographyUpdate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyUpdate.cs,PrimeCountry,The following statement contains a magic number: StringBuilder sqlBuild =                      new StringBuilder ("INSERT INTO PostalCodes (PostalCode' CityId' CountryId) VALUES "' 65536);
Magic Number,Swarmops.Logic.Structure,GeographyUpdate,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyUpdate.cs,InitDatabaseThreadCreateGeographyChildren,The following statement contains a magic number: GuidCache.Set("DbInitProgress"' String.Format ("({0}%)"' count * 100 / total));
Magic Number,Swarmops.Logic.Structure,PostalCodes,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\PostalCodes.cs,FromArray,The following statement contains a magic number: PostalCodes result = new PostalCodes {Capacity = (array.Length*11/10)};
Magic Number,Swarmops.Logic.Structure,PostalCodes,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\PostalCodes.cs,FromArray,The following statement contains a magic number: PostalCodes result = new PostalCodes {Capacity = (array.Length*11/10)};
Magic Number,Swarmops.Logic.Structure,Cities,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Cities.cs,FromArray,The following statement contains a magic number: Cities result = new Cities {Capacity = (array.Length*11/10)};
Magic Number,Swarmops.Logic.Structure,Cities,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Cities.cs,FromArray,The following statement contains a magic number: Cities result = new Cities {Capacity = (array.Length*11/10)};
Magic Number,Swarmops.Logic.Structure,Geographies,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Geographies.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Structure,Geographies,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Geographies.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Structure,Geographies,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Geographies.cs,BuildHierarchicalSortOrder,The following statement contains a magic number: level > 20
Magic Number,Swarmops.Logic.Structure,GeographyDataPoint,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyDataPoint.cs,GeographyDataPoint,The following statement contains a magic number: this.OrganizationData = new GeographyOrganizationDataPoint[2];
Magic Number,Swarmops.Logic.Structure,GeographyDataPoint,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyDataPoint.cs,GeographyDataPoint,The following statement contains a magic number: this.OrganizationData[1].OrganizationId = 2;
Magic Number,Swarmops.Logic.Structure,GeographyOrganizationDataPoint,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyDataPoint.cs,GeographyOrganizationDataPoint,The following statement contains a magic number: this.BirthYearBracketMemberCounts = new int[30];
Magic Number,Swarmops.Logic.Structure,GeographyStatistics,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyStatistics.cs,GeneratePresent,The following statement contains a magic number: int birthYearBracket = (person.Birthdate.Year - 1900)/5;
Magic Number,Swarmops.Logic.Structure,GeographyStatistics,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyStatistics.cs,GeneratePresent,The following statement contains a magic number: int birthYearBracket = (person.Birthdate.Year - 1900)/5;
Magic Number,Swarmops.Logic.Structure,GeographyStatistics,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyStatistics.cs,GeneratePresent,The following statement contains a magic number: birthYearBracket >= 0 && birthYearBracket < 30
Magic Number,Swarmops.Logic.Structure,GeographyStatistics,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyStatistics.cs,GeneratePresent,The following statement contains a magic number: GeographyOrganizationDataPoint[] tempOrgData = new GeographyOrganizationDataPoint[2];
Magic Number,Swarmops.Logic.Structure,GeographyStatistics,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyStatistics.cs,GeneratePresent,The following statement contains a magic number: ageBracketIndex < 30
Magic Number,Swarmops.Logic.Structure,GeographyStatistics,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyStatistics.cs,GeneratePresent,The following statement contains a magic number: orgIndex < 2
Magic Number,Swarmops.Logic.Structure,GeographyStatistics,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyStatistics.cs,GeneratePresent,The following statement contains a magic number: ageBracketIndex < 30
Magic Number,Swarmops.Logic.Structure,GeographyStatistics,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\GeographyStatistics.cs,GeneratePresent,The following statement contains a magic number: orgIndex < 2
Magic Number,Swarmops.Logic.Structure,Organization,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organization.cs,GetEndOfFiscalYear,The following statement contains a magic number: return new DateTime (year' 12' 31' 23' 59' 59' 999);
Magic Number,Swarmops.Logic.Structure,Organization,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organization.cs,GetEndOfFiscalYear,The following statement contains a magic number: return new DateTime (year' 12' 31' 23' 59' 59' 999);
Magic Number,Swarmops.Logic.Structure,Organization,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organization.cs,GetEndOfFiscalYear,The following statement contains a magic number: return new DateTime (year' 12' 31' 23' 59' 59' 999);
Magic Number,Swarmops.Logic.Structure,Organization,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organization.cs,GetEndOfFiscalYear,The following statement contains a magic number: return new DateTime (year' 12' 31' 23' 59' 59' 999);
Magic Number,Swarmops.Logic.Structure,Organization,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organization.cs,GetEndOfFiscalYear,The following statement contains a magic number: return new DateTime (year' 12' 31' 23' 59' 59' 999);
Magic Number,Swarmops.Logic.Structure,Organization,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organization.cs,GetEndOfFiscalYear,The following statement contains a magic number: return new DateTime (year' 12' 31' 23' 59' 59' 999);
Magic Number,Swarmops.Logic.Structure,Organizations,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organizations.cs,FromArray,The following statement contains a magic number: Organizations result = new Organizations {Capacity = (organizationArray.Length*11/10)};
Magic Number,Swarmops.Logic.Structure,Organizations,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organizations.cs,FromArray,The following statement contains a magic number: Organizations result = new Organizations {Capacity = (organizationArray.Length*11/10)};
Magic Number,Swarmops.Logic.Structure,Organizations,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organizations.cs,FromArray,The following statement contains a magic number: Organizations result = new Organizations {Capacity = (organizationArray.Length*11/10)};
Magic Number,Swarmops.Logic.Structure,Organizations,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Structure\Organizations.cs,FromArray,The following statement contains a magic number: Organizations result = new Organizations {Capacity = (organizationArray.Length*11/10)};
Magic Number,Swarmops,MD5,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Security\MD5.cs,Hash,The following statement contains a magic number: byte[] data = Encoding.GetEncoding (1252).GetBytes (input);
Magic Number,Swarmops.Logic.Special.Mail,MailServerDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Mail\MailServerDatabase.cs,FindFreeAccount,The following statement contains a magic number: email == null || email.IndexOf ("@") < 2
Magic Number,Swarmops.Logic.Special.Mail,MailServerDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Mail\MailServerDatabase.cs,StartForwarding,The following statement contains a magic number: fromEmail == null || fromEmail.IndexOf ("@") < 2
Magic Number,Swarmops.Logic.Special.Mail,MailServerDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Mail\MailServerDatabase.cs,StartForwarding,The following statement contains a magic number: toEmail == null || toEmail.IndexOf ("@") < 2
Magic Number,Swarmops.Logic.Special.Mail,MailServerDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Mail\MailServerDatabase.cs,StopSpecificForwarding,The following statement contains a magic number: fromEmail == null || fromEmail.IndexOf ("@") < 2
Magic Number,Swarmops.Logic.Special.Mail,MailServerDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Mail\MailServerDatabase.cs,StopSpecificForwarding,The following statement contains a magic number: toEmail == null || toEmail.IndexOf ("@") < 2
Magic Number,Swarmops.Logic.Special.Mail,MailServerDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Mail\MailServerDatabase.cs,StopForwarding,The following statement contains a magic number: fromEmail == null || fromEmail.IndexOf ("@") < 2
Magic Number,Swarmops.Logic.Special.Mail,MailServerDatabase,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Special\Mail\MailServerDatabase.cs,DeleteAccount,The following statement contains a magic number: fromEmail == null || fromEmail.IndexOf ("@") < 2
Magic Number,Swarmops.Logic.Swarm,ChurnData,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\ChurnData.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Swarm,ChurnData,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\ChurnData.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Swarm,Participation,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Participation.cs,Terminate,The following statement contains a magic number: newsletterFeedId < 10
Magic Number,Swarmops.Logic.Swarm,MembershipEvents,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\MembershipEvents.cs,LoadAll,The following statement contains a magic number: safetyDelta = new TimeSpan (0' 0' 5);
Magic Number,Swarmops.Logic.Swarm,MembershipEvents,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\MembershipEvents.cs,LoadAll,The following statement contains a magic number: (membership.DateTerminated - membership.MemberSince) < new TimeSpan (0' 0' 5)
Magic Number,Swarmops.Logic.Swarm,Participations,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Participations.cs,GetExpired,The following statement contains a magic number: return                  FromArray (SwarmDb.GetDatabaseForReading().GetExpiringParticipations (organization' new DateTime(1800'1'1)'                      DateTime.Now));
Magic Number,Swarmops.Logic.Swarm,ParleyAttendee,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\ParleyAttendee.cs,SendInvoice,The following statement contains a magic number: DateTime invoiceDue = DateTime.Today.AddDays (14);
Magic Number,Swarmops.Logic.Swarm,ParleyAttendee,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\ParleyAttendee.cs,SendInvoice,The following statement contains a magic number: DateTime maxInvoiceDue = Parley.StartDate.AddDays (-10);
Magic Number,Swarmops.Logic.Swarm,PaymentCode,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\PaymentCode.cs,Create,The following statement contains a magic number: string randomCode = CreateRandomCode (5);
Magic Number,Swarmops.Logic.Swarm,People,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\People.cs,FromIdentities,The following statement contains a magic number: personIds.Length > 500
Magic Number,Swarmops.Logic.Swarm,People,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\People.cs,FromNamePattern,The following statement contains a magic number: namePattern.Trim().Length < 3
Magic Number,Swarmops.Logic.Swarm,People,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\People.cs,FromOrganizationAndGeographyWithPattern,The following statement contains a magic number: pattern.Length < 3
Magic Number,Swarmops.Logic.Swarm,People,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\People.cs,FromArray,The following statement contains a magic number: result.Capacity = personArray.Length*11/10;
Magic Number,Swarmops.Logic.Swarm,People,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\People.cs,FromArray,The following statement contains a magic number: result.Capacity = personArray.Length*11/10;
Magic Number,Swarmops.Logic.Swarm,People,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\People.cs,FromArray,The following statement contains a magic number: result.Capacity = personArray.Length*11/10;
Magic Number,Swarmops.Logic.Swarm,People,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\People.cs,FromArray,The following statement contains a magic number: result.Capacity = personArray.Length*11/10;
Magic Number,Swarmops.Logic.Swarm,People,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\People.cs,FromNewsletterFeed,The following statement contains a magic number: int[] subscriberIds = SwarmDb.GetDatabaseForReading().GetSubscribersForNewsletterFeed (2);
Magic Number,Swarmops.Logic.Swarm,Person,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Person.cs,ResolveGeography,The following statement contains a magic number: shortening <= 3
Magic Number,Swarmops.Logic.Swarm,Person,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Person.cs,ResolveGeography,The following statement contains a magic number: cities.Count == 0 && PostalCode.Length > 3
Magic Number,Swarmops.Logic.Swarm,Positions,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Positions.cs,ForOrganizationGeography,The following statement contains a magic number: ForOrganizationGeographyRecurse(geoTree.RootNodes[0]' expandingNode' geographyLeaderTemplate' 2);
Magic Number,Swarmops.Logic.Swarm,Roles,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Roles.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Swarm,Roles,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Roles.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Swarm,VolunteerRoles,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\VolunteerRoles.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Swarm,VolunteerRoles,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\VolunteerRoles.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Swarm,Volunteers,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Volunteers.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Magic Number,Swarmops.Logic.Swarm,Volunteers,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Swarm\Volunteers.cs,FromArray,The following statement contains a magic number: result.Capacity = basicArray.Length*11/10;
Duplicate Code,Swarmops.Logic.Financial,BitcoinUtility,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\Financial\BitcoinUtility.cs,TestUnspents,The method contains a code clone-set at the following line numbers (starting from the method definition): ((28' 62)' (123' 157))
Missing Default,Swarmops.Logic.DataObjects,OrganizationsDataObject,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\DataObjects\OrganizationDataObject.cs,SelectSortedStatic,The following switch statement is missing a default case: switch (sort)              {                  case "OrganizationId":                      pList.Sort (IdentityComparison);                      break;              }
Missing Default,Swarmops.Logic.DataObjects,PeopleDataObject,D:\research\architectureSmells\repos1\Swarmops_Swarmops\Logic\DataObjects\PeopleDataObject.cs,SelectSortedStatic,The following switch statement is missing a default case: switch (sort)              {                  case "PersonId":                      pList.Sort (PersonIdComparison);                      break;                  case "Name":                      pList.Sort (NameComparison);                      break;                  case "PostalCode":                      pList.Sort (PostalCodeComparison);                      break;                  case "CityName":                      pList.Sort (CityComparison);                      break;                  case "Birthdate":                      pList.Sort (BirthdateComparison);                      break;                        // New sortexpressions                  case "Email":                      pList.Sort (EmailComparison);                      break;                  case "Phone":                      pList.Sort (PhoneComparison);                      break;              }
