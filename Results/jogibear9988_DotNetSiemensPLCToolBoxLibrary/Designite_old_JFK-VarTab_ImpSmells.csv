Implementation smell,Namespace,Class,File,Method,Description
Long Method,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The method has 293 lines of code.
Complex Method,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,dataGridView1_CellEndEdit,Cyclomatic complexity of the method is 8
Long Statement,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,dataGridView1_CellEndEdit,The length of the statement  "                        myValues[nr].LibNoDaveValue.ChangeDataTypeFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString()); " is 120.
Long Statement,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,dataGridView1_CellEndEdit,The length of the statement  "                        myValues[nr].LibNoDaveValue.ChangeDataTypeStringFormatFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString()); " is 132.
Long Statement,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,dataGridView1_CellEndEdit,The length of the statement  "                            myValues[nr].LibNoDaveValue.ParseControlValueFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString()); " is 123.
Long Statement,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,cmdLoad_Click,The length of the statement  "                //    dataGridViewVarTab.Rows.Add(new object[] {libNoDaveValue.GetS7FormatAddress()' libNoDaveValue.TagDataType' libNoDaveValue.DataTypeStringFormat' libNoDaveValue.GetValueAsString()' libNoDaveValue.GetControlValueAsString()}); " is 228.
Long Statement,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,reload,The length of the statement  "                    dataGridViewVarTab.Rows.Add(new object[] { libNoDaveValue.S7FormatAddress' libNoDaveValue.TagDataType' libNoDaveValue.DataTypeStringFormat' libNoDaveValue.GetValueAsString()' libNoDaveValue.GetControlValueAsString() }); " is 219.
Long Statement,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The length of the statement  "            this.dataGridViewVarTab.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 124.
Long Statement,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The length of the statement  "            this.dataGridViewVarTab.CellContentClick += new System.Windows.Forms.DataGridViewCellEventHandler(this.dataGridViewVarTab_CellContentClick); " is 140.
Long Statement,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The length of the statement  "            this.dataGridViewVarTab.CellEndEdit += new System.Windows.Forms.DataGridViewCellEventHandler(this.dataGridView1_CellEndEdit); " is 125.
Long Statement,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The length of the statement  "            this.dataGridViewVarTab.RowsRemoved += new System.Windows.Forms.DataGridViewRowsRemovedEventHandler(this.dataGridView1_RowsRemoved); " is 132.
Long Statement,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanel1.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent' 100F)); " is 123.
Long Statement,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The length of the statement  "            this.statusStrip1.ItemClicked += new System.Windows.Forms.ToolStripItemClickedEventHandler(this.statusStrip1_ItemClicked); " is 122.
Empty Catch Block,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,dataGridView1_CellEndEdit,The method has an empty catch block.
Empty Catch Block,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,dataGridView1_RowsRemoved,The method has an empty catch block.
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,dataGridView1_CellEndEdit,The following statement contains a magic number: try              {                  int nr = e.RowIndex;                  if (myValues.Count <= nr)                      myValues.Add(new S7VATRow());                      //myValues.Add(new LibNoDaveValue());                    if (myValues[myValues.Count - 1].LibNoDaveValue == null)                      myValues[myValues.Count - 1].LibNoDaveValue = new PLCTag();                    if (dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value != null)                  {                      if (e.ColumnIndex == 0)                          myValues[nr].LibNoDaveValue.ChangeAddressFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                          //myValues[nr].ChangeAddressFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                      else if (e.ColumnIndex == 1)                          myValues[nr].LibNoDaveValue.ChangeDataTypeFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                          //myValues[nr].ChangeDataTypeFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                      else if (e.ColumnIndex == 2)                          myValues[nr].LibNoDaveValue.ChangeDataTypeStringFormatFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                          //myValues[nr].ChangeDataTypeStringFormatFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                      else if (e.ColumnIndex == 4)                          if (dataGridViewVarTab.Rows[e.RowIndex].Cells[e.ColumnIndex].Value != null)                              myValues[nr].LibNoDaveValue.ParseControlValueFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                              //myValues[nr].ParseControlValueFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                  }                    dataGridViewVarTab.Rows[nr].Cells[0].Value = myValues[nr].LibNoDaveValue.S7FormatAddress;                  dataGridViewVarTab.Rows[nr].Cells[1].Value = myValues[nr].LibNoDaveValue.TagDataType;                  dataGridViewVarTab.Rows[nr].Cells[2].Value = myValues[nr].LibNoDaveValue.DataTypeStringFormat;                  dataGridViewVarTab.Rows[nr].Cells[3].Value = myValues[nr].LibNoDaveValue.GetValueAsString();                  dataGridViewVarTab.Rows[nr].Cells[4].Value = myValues[nr].LibNoDaveValue.GetControlValueAsString();                                      if (mySymtable != null)                      foreach (var it in mySymtable.SymbolTableEntrys)                      {                          if (it.Operand.Trim().ToLower() == dataGridViewVarTab.Rows[nr].Cells[0].Value.ToString().Trim().ToLower())                          {                              dataGridViewVarTab.Rows[nr].Cells[5].Value = it.Symbol;                          }                      }                                 }              catch (Exception)              { }
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,dataGridView1_CellEndEdit,The following statement contains a magic number: try              {                  int nr = e.RowIndex;                  if (myValues.Count <= nr)                      myValues.Add(new S7VATRow());                      //myValues.Add(new LibNoDaveValue());                    if (myValues[myValues.Count - 1].LibNoDaveValue == null)                      myValues[myValues.Count - 1].LibNoDaveValue = new PLCTag();                    if (dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value != null)                  {                      if (e.ColumnIndex == 0)                          myValues[nr].LibNoDaveValue.ChangeAddressFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                          //myValues[nr].ChangeAddressFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                      else if (e.ColumnIndex == 1)                          myValues[nr].LibNoDaveValue.ChangeDataTypeFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                          //myValues[nr].ChangeDataTypeFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                      else if (e.ColumnIndex == 2)                          myValues[nr].LibNoDaveValue.ChangeDataTypeStringFormatFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                          //myValues[nr].ChangeDataTypeStringFormatFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                      else if (e.ColumnIndex == 4)                          if (dataGridViewVarTab.Rows[e.RowIndex].Cells[e.ColumnIndex].Value != null)                              myValues[nr].LibNoDaveValue.ParseControlValueFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                              //myValues[nr].ParseControlValueFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                  }                    dataGridViewVarTab.Rows[nr].Cells[0].Value = myValues[nr].LibNoDaveValue.S7FormatAddress;                  dataGridViewVarTab.Rows[nr].Cells[1].Value = myValues[nr].LibNoDaveValue.TagDataType;                  dataGridViewVarTab.Rows[nr].Cells[2].Value = myValues[nr].LibNoDaveValue.DataTypeStringFormat;                  dataGridViewVarTab.Rows[nr].Cells[3].Value = myValues[nr].LibNoDaveValue.GetValueAsString();                  dataGridViewVarTab.Rows[nr].Cells[4].Value = myValues[nr].LibNoDaveValue.GetControlValueAsString();                                      if (mySymtable != null)                      foreach (var it in mySymtable.SymbolTableEntrys)                      {                          if (it.Operand.Trim().ToLower() == dataGridViewVarTab.Rows[nr].Cells[0].Value.ToString().Trim().ToLower())                          {                              dataGridViewVarTab.Rows[nr].Cells[5].Value = it.Symbol;                          }                      }                                 }              catch (Exception)              { }
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,dataGridView1_CellEndEdit,The following statement contains a magic number: try              {                  int nr = e.RowIndex;                  if (myValues.Count <= nr)                      myValues.Add(new S7VATRow());                      //myValues.Add(new LibNoDaveValue());                    if (myValues[myValues.Count - 1].LibNoDaveValue == null)                      myValues[myValues.Count - 1].LibNoDaveValue = new PLCTag();                    if (dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value != null)                  {                      if (e.ColumnIndex == 0)                          myValues[nr].LibNoDaveValue.ChangeAddressFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                          //myValues[nr].ChangeAddressFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                      else if (e.ColumnIndex == 1)                          myValues[nr].LibNoDaveValue.ChangeDataTypeFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                          //myValues[nr].ChangeDataTypeFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                      else if (e.ColumnIndex == 2)                          myValues[nr].LibNoDaveValue.ChangeDataTypeStringFormatFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                          //myValues[nr].ChangeDataTypeStringFormatFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                      else if (e.ColumnIndex == 4)                          if (dataGridViewVarTab.Rows[e.RowIndex].Cells[e.ColumnIndex].Value != null)                              myValues[nr].LibNoDaveValue.ParseControlValueFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                              //myValues[nr].ParseControlValueFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                  }                    dataGridViewVarTab.Rows[nr].Cells[0].Value = myValues[nr].LibNoDaveValue.S7FormatAddress;                  dataGridViewVarTab.Rows[nr].Cells[1].Value = myValues[nr].LibNoDaveValue.TagDataType;                  dataGridViewVarTab.Rows[nr].Cells[2].Value = myValues[nr].LibNoDaveValue.DataTypeStringFormat;                  dataGridViewVarTab.Rows[nr].Cells[3].Value = myValues[nr].LibNoDaveValue.GetValueAsString();                  dataGridViewVarTab.Rows[nr].Cells[4].Value = myValues[nr].LibNoDaveValue.GetControlValueAsString();                                      if (mySymtable != null)                      foreach (var it in mySymtable.SymbolTableEntrys)                      {                          if (it.Operand.Trim().ToLower() == dataGridViewVarTab.Rows[nr].Cells[0].Value.ToString().Trim().ToLower())                          {                              dataGridViewVarTab.Rows[nr].Cells[5].Value = it.Symbol;                          }                      }                                 }              catch (Exception)              { }
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,dataGridView1_CellEndEdit,The following statement contains a magic number: try              {                  int nr = e.RowIndex;                  if (myValues.Count <= nr)                      myValues.Add(new S7VATRow());                      //myValues.Add(new LibNoDaveValue());                    if (myValues[myValues.Count - 1].LibNoDaveValue == null)                      myValues[myValues.Count - 1].LibNoDaveValue = new PLCTag();                    if (dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value != null)                  {                      if (e.ColumnIndex == 0)                          myValues[nr].LibNoDaveValue.ChangeAddressFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                          //myValues[nr].ChangeAddressFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                      else if (e.ColumnIndex == 1)                          myValues[nr].LibNoDaveValue.ChangeDataTypeFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                          //myValues[nr].ChangeDataTypeFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                      else if (e.ColumnIndex == 2)                          myValues[nr].LibNoDaveValue.ChangeDataTypeStringFormatFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                          //myValues[nr].ChangeDataTypeStringFormatFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                      else if (e.ColumnIndex == 4)                          if (dataGridViewVarTab.Rows[e.RowIndex].Cells[e.ColumnIndex].Value != null)                              myValues[nr].LibNoDaveValue.ParseControlValueFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                              //myValues[nr].ParseControlValueFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                  }                    dataGridViewVarTab.Rows[nr].Cells[0].Value = myValues[nr].LibNoDaveValue.S7FormatAddress;                  dataGridViewVarTab.Rows[nr].Cells[1].Value = myValues[nr].LibNoDaveValue.TagDataType;                  dataGridViewVarTab.Rows[nr].Cells[2].Value = myValues[nr].LibNoDaveValue.DataTypeStringFormat;                  dataGridViewVarTab.Rows[nr].Cells[3].Value = myValues[nr].LibNoDaveValue.GetValueAsString();                  dataGridViewVarTab.Rows[nr].Cells[4].Value = myValues[nr].LibNoDaveValue.GetControlValueAsString();                                      if (mySymtable != null)                      foreach (var it in mySymtable.SymbolTableEntrys)                      {                          if (it.Operand.Trim().ToLower() == dataGridViewVarTab.Rows[nr].Cells[0].Value.ToString().Trim().ToLower())                          {                              dataGridViewVarTab.Rows[nr].Cells[5].Value = it.Symbol;                          }                      }                                 }              catch (Exception)              { }
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,dataGridView1_CellEndEdit,The following statement contains a magic number: try              {                  int nr = e.RowIndex;                  if (myValues.Count <= nr)                      myValues.Add(new S7VATRow());                      //myValues.Add(new LibNoDaveValue());                    if (myValues[myValues.Count - 1].LibNoDaveValue == null)                      myValues[myValues.Count - 1].LibNoDaveValue = new PLCTag();                    if (dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value != null)                  {                      if (e.ColumnIndex == 0)                          myValues[nr].LibNoDaveValue.ChangeAddressFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                          //myValues[nr].ChangeAddressFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                      else if (e.ColumnIndex == 1)                          myValues[nr].LibNoDaveValue.ChangeDataTypeFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                          //myValues[nr].ChangeDataTypeFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                      else if (e.ColumnIndex == 2)                          myValues[nr].LibNoDaveValue.ChangeDataTypeStringFormatFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                          //myValues[nr].ChangeDataTypeStringFormatFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                      else if (e.ColumnIndex == 4)                          if (dataGridViewVarTab.Rows[e.RowIndex].Cells[e.ColumnIndex].Value != null)                              myValues[nr].LibNoDaveValue.ParseControlValueFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                              //myValues[nr].ParseControlValueFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                  }                    dataGridViewVarTab.Rows[nr].Cells[0].Value = myValues[nr].LibNoDaveValue.S7FormatAddress;                  dataGridViewVarTab.Rows[nr].Cells[1].Value = myValues[nr].LibNoDaveValue.TagDataType;                  dataGridViewVarTab.Rows[nr].Cells[2].Value = myValues[nr].LibNoDaveValue.DataTypeStringFormat;                  dataGridViewVarTab.Rows[nr].Cells[3].Value = myValues[nr].LibNoDaveValue.GetValueAsString();                  dataGridViewVarTab.Rows[nr].Cells[4].Value = myValues[nr].LibNoDaveValue.GetControlValueAsString();                                      if (mySymtable != null)                      foreach (var it in mySymtable.SymbolTableEntrys)                      {                          if (it.Operand.Trim().ToLower() == dataGridViewVarTab.Rows[nr].Cells[0].Value.ToString().Trim().ToLower())                          {                              dataGridViewVarTab.Rows[nr].Cells[5].Value = it.Symbol;                          }                      }                                 }              catch (Exception)              { }
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,dataGridView1_CellEndEdit,The following statement contains a magic number: try              {                  int nr = e.RowIndex;                  if (myValues.Count <= nr)                      myValues.Add(new S7VATRow());                      //myValues.Add(new LibNoDaveValue());                    if (myValues[myValues.Count - 1].LibNoDaveValue == null)                      myValues[myValues.Count - 1].LibNoDaveValue = new PLCTag();                    if (dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value != null)                  {                      if (e.ColumnIndex == 0)                          myValues[nr].LibNoDaveValue.ChangeAddressFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                          //myValues[nr].ChangeAddressFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                      else if (e.ColumnIndex == 1)                          myValues[nr].LibNoDaveValue.ChangeDataTypeFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                          //myValues[nr].ChangeDataTypeFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                      else if (e.ColumnIndex == 2)                          myValues[nr].LibNoDaveValue.ChangeDataTypeStringFormatFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                          //myValues[nr].ChangeDataTypeStringFormatFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                      else if (e.ColumnIndex == 4)                          if (dataGridViewVarTab.Rows[e.RowIndex].Cells[e.ColumnIndex].Value != null)                              myValues[nr].LibNoDaveValue.ParseControlValueFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                              //myValues[nr].ParseControlValueFromString(dataGridViewVarTab.Rows[nr].Cells[e.ColumnIndex].Value.ToString());                  }                    dataGridViewVarTab.Rows[nr].Cells[0].Value = myValues[nr].LibNoDaveValue.S7FormatAddress;                  dataGridViewVarTab.Rows[nr].Cells[1].Value = myValues[nr].LibNoDaveValue.TagDataType;                  dataGridViewVarTab.Rows[nr].Cells[2].Value = myValues[nr].LibNoDaveValue.DataTypeStringFormat;                  dataGridViewVarTab.Rows[nr].Cells[3].Value = myValues[nr].LibNoDaveValue.GetValueAsString();                  dataGridViewVarTab.Rows[nr].Cells[4].Value = myValues[nr].LibNoDaveValue.GetControlValueAsString();                                      if (mySymtable != null)                      foreach (var it in mySymtable.SymbolTableEntrys)                      {                          if (it.Operand.Trim().ToLower() == dataGridViewVarTab.Rows[nr].Cells[0].Value.ToString().Trim().ToLower())                          {                              dataGridViewVarTab.Rows[nr].Cells[5].Value = it.Symbol;                          }                      }                                 }              catch (Exception)              { }
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,refresh,The following statement contains a magic number: for (int nr = 0; nr < dataGridViewVarTab.Rows.Count - 1; nr++)              {                  if (myValues[nr].LibNoDaveValue != null)                  {                      dataGridViewVarTab.Rows[nr].Cells[0].Value = myValues[nr].LibNoDaveValue.S7FormatAddress;                      dataGridViewVarTab.Rows[nr].Cells[1].Value = myValues[nr].LibNoDaveValue.TagDataType;                      dataGridViewVarTab.Rows[nr].Cells[2].Value = myValues[nr].LibNoDaveValue.DataTypeStringFormat;                      dataGridViewVarTab.Rows[nr].Cells[3].Value = myValues[nr].LibNoDaveValue.GetValueAsString();                      dataGridViewVarTab.Rows[nr].Cells[4].Value = myValues[nr].LibNoDaveValue.GetControlValueAsString();                  }                  //Symboltabelle                                    if (mySymtable != null)                      foreach (var it in mySymtable.SymbolTableEntrys)                      {                          string a = it.Operand.Trim().ToLower().Replace(" "' "");                          string b = dataGridViewVarTab.Rows[nr].Cells[0].Value.ToString().Trim().ToLower().Replace(" "' "");                          if (a == b)                          {                              dataGridViewVarTab.Rows[nr].Cells[5].Value = it.Symbol;                          }                      }                                 }
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,refresh,The following statement contains a magic number: for (int nr = 0; nr < dataGridViewVarTab.Rows.Count - 1; nr++)              {                  if (myValues[nr].LibNoDaveValue != null)                  {                      dataGridViewVarTab.Rows[nr].Cells[0].Value = myValues[nr].LibNoDaveValue.S7FormatAddress;                      dataGridViewVarTab.Rows[nr].Cells[1].Value = myValues[nr].LibNoDaveValue.TagDataType;                      dataGridViewVarTab.Rows[nr].Cells[2].Value = myValues[nr].LibNoDaveValue.DataTypeStringFormat;                      dataGridViewVarTab.Rows[nr].Cells[3].Value = myValues[nr].LibNoDaveValue.GetValueAsString();                      dataGridViewVarTab.Rows[nr].Cells[4].Value = myValues[nr].LibNoDaveValue.GetControlValueAsString();                  }                  //Symboltabelle                                    if (mySymtable != null)                      foreach (var it in mySymtable.SymbolTableEntrys)                      {                          string a = it.Operand.Trim().ToLower().Replace(" "' "");                          string b = dataGridViewVarTab.Rows[nr].Cells[0].Value.ToString().Trim().ToLower().Replace(" "' "");                          if (a == b)                          {                              dataGridViewVarTab.Rows[nr].Cells[5].Value = it.Symbol;                          }                      }                                 }
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,refresh,The following statement contains a magic number: for (int nr = 0; nr < dataGridViewVarTab.Rows.Count - 1; nr++)              {                  if (myValues[nr].LibNoDaveValue != null)                  {                      dataGridViewVarTab.Rows[nr].Cells[0].Value = myValues[nr].LibNoDaveValue.S7FormatAddress;                      dataGridViewVarTab.Rows[nr].Cells[1].Value = myValues[nr].LibNoDaveValue.TagDataType;                      dataGridViewVarTab.Rows[nr].Cells[2].Value = myValues[nr].LibNoDaveValue.DataTypeStringFormat;                      dataGridViewVarTab.Rows[nr].Cells[3].Value = myValues[nr].LibNoDaveValue.GetValueAsString();                      dataGridViewVarTab.Rows[nr].Cells[4].Value = myValues[nr].LibNoDaveValue.GetControlValueAsString();                  }                  //Symboltabelle                                    if (mySymtable != null)                      foreach (var it in mySymtable.SymbolTableEntrys)                      {                          string a = it.Operand.Trim().ToLower().Replace(" "' "");                          string b = dataGridViewVarTab.Rows[nr].Cells[0].Value.ToString().Trim().ToLower().Replace(" "' "");                          if (a == b)                          {                              dataGridViewVarTab.Rows[nr].Cells[5].Value = it.Symbol;                          }                      }                                 }
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,refresh,The following statement contains a magic number: for (int nr = 0; nr < dataGridViewVarTab.Rows.Count - 1; nr++)              {                  if (myValues[nr].LibNoDaveValue != null)                  {                      dataGridViewVarTab.Rows[nr].Cells[0].Value = myValues[nr].LibNoDaveValue.S7FormatAddress;                      dataGridViewVarTab.Rows[nr].Cells[1].Value = myValues[nr].LibNoDaveValue.TagDataType;                      dataGridViewVarTab.Rows[nr].Cells[2].Value = myValues[nr].LibNoDaveValue.DataTypeStringFormat;                      dataGridViewVarTab.Rows[nr].Cells[3].Value = myValues[nr].LibNoDaveValue.GetValueAsString();                      dataGridViewVarTab.Rows[nr].Cells[4].Value = myValues[nr].LibNoDaveValue.GetControlValueAsString();                  }                  //Symboltabelle                                    if (mySymtable != null)                      foreach (var it in mySymtable.SymbolTableEntrys)                      {                          string a = it.Operand.Trim().ToLower().Replace(" "' "");                          string b = dataGridViewVarTab.Rows[nr].Cells[0].Value.ToString().Trim().ToLower().Replace(" "' "");                          if (a == b)                          {                              dataGridViewVarTab.Rows[nr].Cells[5].Value = it.Symbol;                          }                      }                                 }
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,timer1_Tick,The following statement contains a magic number: try              {                  if (myConn != null)                  {                      int wrt = progressBar1.Value + 33;                      if (wrt >= 100)                          progressBar1.Value = 0;                      else                          progressBar1.Value = wrt;                      myConn.ReadValues(getListVal());                      int i = 0;                      foreach (var akVal in myValues)                      {                          if (akVal.LibNoDaveValue != null)                              dataGridViewVarTab.Rows[i].Cells[3].Value = akVal.LibNoDaveValue.GetValueAsString();                          i++;                      }                  }              }              catch (Exception ex)              {                  errtxt.Text = ex.Message;              }
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,timer1_Tick,The following statement contains a magic number: try              {                  if (myConn != null)                  {                      int wrt = progressBar1.Value + 33;                      if (wrt >= 100)                          progressBar1.Value = 0;                      else                          progressBar1.Value = wrt;                      myConn.ReadValues(getListVal());                      int i = 0;                      foreach (var akVal in myValues)                      {                          if (akVal.LibNoDaveValue != null)                              dataGridViewVarTab.Rows[i].Cells[3].Value = akVal.LibNoDaveValue.GetValueAsString();                          i++;                      }                  }              }              catch (Exception ex)              {                  errtxt.Text = ex.Message;              }
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,timer1_Tick,The following statement contains a magic number: try              {                  if (myConn != null)                  {                      int wrt = progressBar1.Value + 33;                      if (wrt >= 100)                          progressBar1.Value = 0;                      else                          progressBar1.Value = wrt;                      myConn.ReadValues(getListVal());                      int i = 0;                      foreach (var akVal in myValues)                      {                          if (akVal.LibNoDaveValue != null)                              dataGridViewVarTab.Rows[i].Cells[3].Value = akVal.LibNoDaveValue.GetValueAsString();                          i++;                      }                  }              }              catch (Exception ex)              {                  errtxt.Text = ex.Message;              }
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,cmdControlValues_Click,The following statement contains a magic number: try              {                  errtxt.Text = "";                  if (myConn != null)                  {                      int i = 0;                      List<PLCTag> steu = new List<PLCTag>();                      foreach (var row in myValues)                      {                          if (dataGridViewVarTab.Rows[i].Cells[4].Value != null && dataGridViewVarTab.Rows[i].Cells[4].Value.ToString() != "")                          {                              row.LibNoDaveValue.Controlvalue = dataGridViewVarTab.Rows[i].Cells[4].Value;                              steu.Add(row.LibNoDaveValue);                          }                          i++;                      }                      myConn.WriteValues(steu);                  }              }              catch (Exception ex)              {                  errtxt.Text = ex.Message;              }
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,cmdControlValues_Click,The following statement contains a magic number: try              {                  errtxt.Text = "";                  if (myConn != null)                  {                      int i = 0;                      List<PLCTag> steu = new List<PLCTag>();                      foreach (var row in myValues)                      {                          if (dataGridViewVarTab.Rows[i].Cells[4].Value != null && dataGridViewVarTab.Rows[i].Cells[4].Value.ToString() != "")                          {                              row.LibNoDaveValue.Controlvalue = dataGridViewVarTab.Rows[i].Cells[4].Value;                              steu.Add(row.LibNoDaveValue);                          }                          i++;                      }                      myConn.WriteValues(steu);                  }              }              catch (Exception ex)              {                  errtxt.Text = ex.Message;              }
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,cmdControlValues_Click,The following statement contains a magic number: try              {                  errtxt.Text = "";                  if (myConn != null)                  {                      int i = 0;                      List<PLCTag> steu = new List<PLCTag>();                      foreach (var row in myValues)                      {                          if (dataGridViewVarTab.Rows[i].Cells[4].Value != null && dataGridViewVarTab.Rows[i].Cells[4].Value.ToString() != "")                          {                              row.LibNoDaveValue.Controlvalue = dataGridViewVarTab.Rows[i].Cells[4].Value;                              steu.Add(row.LibNoDaveValue);                          }                          i++;                      }                      myConn.WriteValues(steu);                  }              }              catch (Exception ex)              {                  errtxt.Text = ex.Message;              }
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewVarTab.Location = new System.Drawing.Point(3' 43);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewVarTab.Location = new System.Drawing.Point(3' 43);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewVarTab.Size = new System.Drawing.Size(1055' 470);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewVarTab.Size = new System.Drawing.Size(1055' 470);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.timer1.Interval = 300;
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.RowCount = 2;
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Size = new System.Drawing.Size(1061' 516);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Size = new System.Drawing.Size(1061' 516);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.TabIndex = 2;
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.flowLayoutPanel1.Location = new System.Drawing.Point(3' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.flowLayoutPanel1.Location = new System.Drawing.Point(3' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.flowLayoutPanel1.Size = new System.Drawing.Size(1055' 34);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.flowLayoutPanel1.Size = new System.Drawing.Size(1055' 34);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdConfigConnection.Location = new System.Drawing.Point(3' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdConfigConnection.Location = new System.Drawing.Point(3' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdConfigConnection.Size = new System.Drawing.Size(64' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdConfigConnection.Size = new System.Drawing.Size(64' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdConfigConnection.TabIndex = 3;
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.lstConnections.ItemHeight = 13;
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.lstConnections.Location = new System.Drawing.Point(73' 7);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.lstConnections.Location = new System.Drawing.Point(73' 7);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.lstConnections.Margin = new System.Windows.Forms.Padding(3' 7' 3' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.lstConnections.Margin = new System.Windows.Forms.Padding(3' 7' 3' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.lstConnections.Margin = new System.Windows.Forms.Padding(3' 7' 3' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.lstConnections.Margin = new System.Windows.Forms.Padding(3' 7' 3' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.lstConnections.Size = new System.Drawing.Size(121' 21);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.lstConnections.Size = new System.Drawing.Size(121' 21);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.lstConnections.TabIndex = 11;
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdConnect.Location = new System.Drawing.Point(200' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdConnect.Location = new System.Drawing.Point(200' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdConnect.Size = new System.Drawing.Size(75' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdConnect.Size = new System.Drawing.Size(75' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdConnect.TabIndex = 4;
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdDisconnect.Location = new System.Drawing.Point(281' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdDisconnect.Location = new System.Drawing.Point(281' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdDisconnect.Size = new System.Drawing.Size(75' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdDisconnect.Size = new System.Drawing.Size(75' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdDisconnect.TabIndex = 4;
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdView.Location = new System.Drawing.Point(362' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdView.Location = new System.Drawing.Point(362' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdView.Size = new System.Drawing.Size(72' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdView.Size = new System.Drawing.Size(72' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdView.TabIndex = 2;
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdStopView.Location = new System.Drawing.Point(440' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdStopView.Location = new System.Drawing.Point(440' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdStopView.Size = new System.Drawing.Size(72' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdStopView.Size = new System.Drawing.Size(72' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdStopView.TabIndex = 5;
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.progressBar1.Location = new System.Drawing.Point(518' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.progressBar1.Location = new System.Drawing.Point(518' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.progressBar1.MarqueeAnimationSpeed = 10;
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.progressBar1.Size = new System.Drawing.Size(100' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.progressBar1.Size = new System.Drawing.Size(100' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.progressBar1.TabIndex = 8;
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdControlValues.Location = new System.Drawing.Point(624' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdControlValues.Location = new System.Drawing.Point(624' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdControlValues.Size = new System.Drawing.Size(72' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdControlValues.Size = new System.Drawing.Size(72' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdControlValues.TabIndex = 2;
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdSave.Location = new System.Drawing.Point(702' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdSave.Location = new System.Drawing.Point(702' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdSave.Size = new System.Drawing.Size(72' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdSave.Size = new System.Drawing.Size(72' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdSave.TabIndex = 6;
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdLoad.Location = new System.Drawing.Point(780' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdLoad.Location = new System.Drawing.Point(780' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdLoad.Size = new System.Drawing.Size(72' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdLoad.Size = new System.Drawing.Size(72' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdLoad.TabIndex = 7;
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdLoadVat.Location = new System.Drawing.Point(858' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdLoadVat.Location = new System.Drawing.Point(858' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdLoadVat.Size = new System.Drawing.Size(75' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdLoadVat.Size = new System.Drawing.Size(75' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdLoadVat.TabIndex = 9;
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdLoadSymboltable.Location = new System.Drawing.Point(939' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdLoadSymboltable.Location = new System.Drawing.Point(939' 3);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdLoadSymboltable.Size = new System.Drawing.Size(75' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdLoadSymboltable.Size = new System.Drawing.Size(75' 31);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.cmdLoadSymboltable.TabIndex = 12;
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.Location = new System.Drawing.Point(0' 494);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.Size = new System.Drawing.Size(1061' 22);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.Size = new System.Drawing.Size(1061' 22);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.TabIndex = 3;
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.conninfo.Size = new System.Drawing.Size(24' 17);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.conninfo.Size = new System.Drawing.Size(24' 17);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.errtxt.Size = new System.Drawing.Size(22' 17);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.errtxt.Size = new System.Drawing.Size(22' 17);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(1061' 516);
Magic Number,JFK_VarTab,Vartab,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\jfkvartab\JFK-VarTab\Vartab.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(1061' 516);
