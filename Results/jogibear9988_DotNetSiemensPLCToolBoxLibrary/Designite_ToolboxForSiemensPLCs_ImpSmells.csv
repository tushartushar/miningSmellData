Implementation smell,Namespace,Class,File,Method,Description
Long Method,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The method has 176 lines of code.
Long Method,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The method has 152 lines of code.
Long Method,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PaintCurrentBytesSign,The method has 148 lines of code.
Long Method,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,treeView1_AfterSelect,The method has 140 lines of code.
Long Method,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateWinCCErrorMessages_Click,The method has 102 lines of code.
Long Method,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateWinCCFlexibleTags_Click,The method has 122 lines of code.
Long Method,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The method has 1051 lines of code.
Complex Method,Be.Windows.Forms,DynamicFileByteProvider,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\DynamicFileByteProvider.cs,WriteByte,Cyclomatic complexity of the method is 12
Complex Method,Be.Windows.Forms,DynamicFileByteProvider,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\DynamicFileByteProvider.cs,InsertBytes,Cyclomatic complexity of the method is 8
Complex Method,Be.Windows.Forms,DynamicFileByteProvider,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\DynamicFileByteProvider.cs,ApplyChanges,Cyclomatic complexity of the method is 8
Complex Method,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,Find,Cyclomatic complexity of the method is 8
Complex Method,Be.Windows.Forms,KeyInterpreter,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PreProcessWmChar,Cyclomatic complexity of the method is 12
Complex Method,Be.Windows.Forms,StringKeyInterpreter,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PreProcessWmChar,Cyclomatic complexity of the method is 8
Complex Method,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateFlexibleErrorMessages_Click,Cyclomatic complexity of the method is 11
Complex Method,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateWinCCErrorMessages_Click,Cyclomatic complexity of the method is 13
Complex Method,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,fetchPLCData_Tick,Cyclomatic complexity of the method is 9
Long Parameter List,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PaintHexStringSelected,The method has 5 parameters. Parameters: g' b' brush' brushBack' gridPoint
Long Identifier,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,,The length of the parameter cmdCreateFlexibleErrorMessages is 30.
Long Identifier,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,,The length of the parameter configConnectionToolStripMenuItem is 33.
Long Identifier,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,,The length of the parameter downloadOnlineBlockToolStripMenuItem is 36.
Long Identifier,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,,The length of the parameter dBStructResizerToolStripMenuItem is 32.
Long Identifier,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,,The length of the parameter searchPasswordToolStripMenuItem is 31.
Long Identifier,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,,The length of the parameter createDokumentationToolStripMenuItem is 36.
Long Identifier,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,,The length of the parameter parseAllBlocksToolStripMenuItem is 31.
Long Identifier,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,,The length of the parameter dataBlockValueSaveRestoreToolStripMenuItem is 42.
Long Identifier,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,,The length of the parameter reachablePLCsToolStripMenuItem is 30.
Long Statement,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,button1_Click,The length of the statement  "                PLCTag plcTag=new PLCTag(){TagDataType = TagDataType.ByteArray' TagDataSource = MemoryArea.Datablock' DataBlockNumber = Convert.ToInt32(txtDB.Text)' ByteAddress = Convert.ToInt32(txtStartByte.Text)' ArraySize = Convert.ToInt32(txtBytes.Text)}; " is 243.
Long Statement,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,button2_Click,The length of the statement  "                    PLCTag plcTag = new PLCTag() {TagDataType = TagDataType.ByteArray' TagDataSource = MemoryArea.Datablock' DataBlockNumber = Convert.ToInt32(txtDB.Text)' ByteAddress = Convert.ToInt32(txtStartByte.Text) + n*Convert.ToInt32(txtNewSize.Text)' ArraySize = Convert.ToInt32(txtSize.Text)}; " is 282.
Long Statement,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(Features)); " is 128.
Long Statement,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanel1.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent' 100F)); " is 123.
Long Statement,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanel1.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Absolute' 200F)); " is 124.
Long Statement,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The length of the statement  "            this.dataGridViewSend.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 122.
Long Statement,Be.Windows.Forms,BuiltInContextMenu,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\BuiltInContextMenu.cs,CheckBuiltInContextMenu,The length of the statement  "                _cutToolStripMenuItem = new ToolStripMenuItem(CutMenuItemTextInternal' CutMenuItemImage' new EventHandler(CutMenuItem_Click)); " is 126.
Long Statement,Be.Windows.Forms,BuiltInContextMenu,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\BuiltInContextMenu.cs,CheckBuiltInContextMenu,The length of the statement  "                _copyToolStripMenuItem = new ToolStripMenuItem(CopyMenuItemTextInternal' CopyMenuItemImage' new EventHandler(CopyMenuItem_Click)); " is 130.
Long Statement,Be.Windows.Forms,BuiltInContextMenu,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\BuiltInContextMenu.cs,CheckBuiltInContextMenu,The length of the statement  "                _pasteToolStripMenuItem = new ToolStripMenuItem(PasteMenuItemTextInternal' PasteMenuItemImage' new EventHandler(PasteMenuItem_Click)); " is 134.
Long Statement,Be.Windows.Forms,BuiltInContextMenu,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\BuiltInContextMenu.cs,CheckBuiltInContextMenu,The length of the statement  "                _selectAllToolStripMenuItem = new ToolStripMenuItem(SelectAllMenuItemTextInternal' SelectAllMenuItemImage' new EventHandler(SelectAllMenuItem_Click)); " is 150.
Long Statement,Be.Windows.Forms,DynamicFileByteProvider,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\DynamicFileByteProvider.cs,InsertBytes,The length of the statement  "                // If the insertion point is at the start of a file block' and the previous block is a memory block' append it to that block. " is 125.
Long Statement,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,UpdateScrollSize,The length of the statement  "				long scrollmax = (long)Math.Ceiling((double)(_byteProvider.Length + 1) / (double)_iHexMaxHBytes - (double)_iHexMaxVBytes); " is 122.
Long Statement,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,Find,The length of the statement  "					throw new ArgumentException("FindBufferUpperCase and FindBufferUpperCase must have the same size when Type is Text and MatchCase is true"); " is 139.
Long Statement,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PaintColumnSeparator,The length of the statement  "					g.DrawLine(pen' new PointF(byteStringPointF.X' byteStringPointF.Y)' new PointF(byteStringPointF.X' byteStringPointF.Y + _recHex.Height)); " is 137.
Long Statement,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PaintHexAndStringView,The length of the statement  "			bool isStringKeyInterpreterActive = _keyInterpreter != null && _keyInterpreter.GetType() == typeof(StringKeyInterpreter); " is 121.
Long Statement,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,UpdateRectanglePositioning,The length of the statement  "			_recColumnInfo = new Rectangle(_recLineInfo.X + _recLineInfo.Width' _recContent.Y' _recContent.Width - _recLineInfo.Width' (int)charSize.Height + 4); " is 149.
Long Statement,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,ConvertHexToByte,The length of the statement  "			bool isByte = byte.TryParse(hex' System.Globalization.NumberStyles.HexNumber' System.Threading.Thread.CurrentThread.CurrentCulture' out b); " is 139.
Long Statement,Be.Windows.Forms,KeyInterpreter,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PreProcessWmChar,The length of the statement  "					byte newcb = byte.Parse(sNewCb' System.Globalization.NumberStyles.AllowHexSpecifier' System.Threading.Thread.CurrentThread.CurrentCulture); " is 139.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateWinCCErrorMessages_Click,The length of the statement  "                            //errors += "\"D\"\t\"" + errNr.ToString() + "\"\t\"Alarms\"\t\"" + varname + "\"\t\"" + bitnr.ToString() + "\"\t\t\t\t\t\t\"0\"\t\"de-DE=" + stoeTxt + "\"\t\"en-US=" + stoeTxtEn + "\"\t\"de-DE=\"" + "\r\n"; " is 207.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,openToolStripMenuItem_Click,The length of the statement  "                "All supported types (*.zip' *.s7p' *.s5d' *.ap11' *.ap12' *.ap13; *.ap14; *.al11; *.al12; *.al13; *.al14; *.zap13; *.zap14)|*.s7p;*.zip;*.s5d;*.s7l;*.ap11;*.ap12;*.ap13;*.ap14;*.al11;*.al12;*.al13;*.al14;*.zap13;*.zap14|Step5 Project|*.s5d|Step7 V5.5 Project|*.s7p;*.s7l|Zipped Step5/Step7 Project|*.zip|TIA-Portal Project|*.ap11;*.ap12;*.ap13;*.ap14;*.al11;*.al12;*.al13;*.al14;*.zap13;*.zap14"; " is 397.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,reachablePLCsToolStripMenuItem_Click,The length of the statement  "            DotNetSiemensPLCToolBoxLibrary.Communication.Discovery.S7ReachablePLCDialog Form = new DotNetSiemensPLCToolBoxLibrary.Communication.Discovery.S7ReachablePLCDialog(); " is 165.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(Form1)); " is 125.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.treeStep7Project.BeforeCollapse += new System.Windows.Forms.TreeViewCancelEventHandler(this.treeStep7Project_BeforeCollapse); " is 130.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.treeStep7Project.BeforeExpand += new System.Windows.Forms.TreeViewCancelEventHandler(this.treeStep7Project_BeforeExpand); " is 126.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.treeStep7Project.NodeMouseClick += new System.Windows.Forms.TreeNodeMouseClickEventHandler(this.treeStep7Project_NodeMouseClick); " is 134.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.imglstIconsForTreeview.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("imglstIconsForTreeview.ImageStream"))); " is 144.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.dtaSymbolTable.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 120.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.lblConnected.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(64))))' ((int)(((byte)(64))))' ((int)(((byte)(64))))); " is 129.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.cmdProjectsBrowser.Font = new System.Drawing.Font("Courier New"' 6.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 159.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.downloadOnlineBlockToolStripMenuItem.Click += new System.EventHandler(this.downloadOnlineBlockToolStripMenuItem_Click); " is 124.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.dataBlockValueSaveRestoreToolStripMenuItem.Click += new System.EventHandler(this.dataBlockValueSaveRestoreToolStripMenuItem_Click); " is 136.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.createDokumentationToolStripMenuItem.Click += new System.EventHandler(this.createDokumentationToolStripMenuItem_Click); " is 124.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanel1.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent' 100F)); " is 123.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanel2.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent' 100F)); " is 123.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanel2.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Absolute' 84F)); " is 123.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanel3.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent' 100F)); " is 123.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanelVisu.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent' 100F)); " is 126.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanelVisu.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Absolute' 238F)); " is 127.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanelVisu.RowStyles.Add(new System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent' 100F)); " is 120.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.datablockView.ChildChanged += new System.EventHandler<System.Windows.Forms.Integration.ChildChangedEventArgs>(this.elementHost1_ChildChanged); " is 147.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.hexBox.Font = new System.Drawing.Font("Courier New"' 9F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 144.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.hexBox.ShadowSelectionColor = System.Drawing.Color.FromArgb(((int)(((byte)(100))))' ((int)(((byte)(60))))' ((int)(((byte)(188))))' ((int)(((byte)(255))))); " is 160.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanel5.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent' 100F)); " is 123.
Long Statement,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The length of the statement  "            this.Font = new System.Drawing.Font("Courier New"' 9.900001F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 144.
Complex Conditional,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,UpdateScrollSize,The conditional expression  "VScrollBarVisible && _byteProvider != null && _byteProvider.Length > 0 && _iHexMaxHBytes != 0"  is complex.
Complex Conditional,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,CreateCaret,The conditional expression  "_byteProvider == null || _keyInterpreter == null || _caretVisible || !this.Focused"  is complex.
Complex Conditional,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PaintCurrentByteSign,The conditional expression  "rec.Top < 0 || rec.Left < 0 || rec.Width <= 0 || rec.Height <= 0"  is complex.
Complex Conditional,Be.Windows.Forms,KeyInterpreter,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PreProcessWmChar,The conditional expression  "(!sw && pos != _hexBox._byteProvider.Length) ||  					(!si && pos == _hexBox._byteProvider.Length)"  is complex.
Complex Conditional,Be.Windows.Forms,KeyInterpreter,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PreProcessWmChar,The conditional expression  "!isInsertMode && si && _hexBox.InsertActive && cp == 0"  is complex.
Complex Conditional,Be.Windows.Forms,StringKeyInterpreter,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PreProcessWmChar,The conditional expression  "(!sw && pos != _hexBox._byteProvider.Length) ||  					(!si && pos == _hexBox._byteProvider.Length)"  is complex.
Complex Conditional,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,listBox1_DoubleClick,The conditional expression  "tmp.BlockType == PLCBlockType.UDT || tmp.BlockType == PLCBlockType.DB ||                          tmp.BlockType == PLCBlockType.S5_DV || tmp.BlockType == PLCBlockType.S5_DB"  is complex.
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,button3_Click,The following statement contains a magic number: if (dlg.ShowDialog() == System.Windows.Forms.DialogResult.OK)              {                  foreach (var fileName in dlg.FileNames)                  {                      var rd = new BinaryReader(File.Open(fileName' FileMode.Open));                      var bytes = rd.ReadBytes(Convert.ToInt32(rd.BaseStream.Length));                        var fn = Path.GetFileName(fileName);                      fn = fn.Substring(0' fn.Length - 5);                      var Tag = new PLCTag(fn + ".DBX0.0");                      Tag.TagDataType = TagDataType.ByteArray;                      Tag.ArraySize = bytes.Length;                      Tag.Controlvalue = bytes;                      myConn.WriteValue(Tag);                  }                               }
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(407' 12);
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(407' 12);
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(122' 36);
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(122' 36);
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.Location = new System.Drawing.Point(12' 12);
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.Location = new System.Drawing.Point(12' 12);
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.Size = new System.Drawing.Size(389' 108);
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.Size = new System.Drawing.Size(389' 108);
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,InitializeComponent,The following statement contains a magic number: this.button2.Location = new System.Drawing.Point(12' 135);
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,InitializeComponent,The following statement contains a magic number: this.button2.Location = new System.Drawing.Point(12' 135);
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,InitializeComponent,The following statement contains a magic number: this.button2.Size = new System.Drawing.Size(96' 32);
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,InitializeComponent,The following statement contains a magic number: this.button2.Size = new System.Drawing.Size(96' 32);
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,InitializeComponent,The following statement contains a magic number: this.button2.TabIndex = 2;
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,InitializeComponent,The following statement contains a magic number: this.button3.Location = new System.Drawing.Point(12' 279);
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,InitializeComponent,The following statement contains a magic number: this.button3.Location = new System.Drawing.Point(12' 279);
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,InitializeComponent,The following statement contains a magic number: this.button3.Size = new System.Drawing.Size(365' 91);
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,InitializeComponent,The following statement contains a magic number: this.button3.Size = new System.Drawing.Size(365' 91);
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,InitializeComponent,The following statement contains a magic number: this.button3.TabIndex = 3;
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(541' 431);
Magic Number,ToolboxForSiemensPLCs,DataBlockValueSaver,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DataBlockValueSaver.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(541' 431);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(12' 9);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(12' 9);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(64' 13);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(64' 13);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.lstConnections.Location = new System.Drawing.Point(112' 6);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.lstConnections.Location = new System.Drawing.Point(112' 6);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.lstConnections.Size = new System.Drawing.Size(135' 21);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.lstConnections.Size = new System.Drawing.Size(135' 21);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(12' 39);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(12' 39);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(25' 13);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(25' 13);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtDB.Location = new System.Drawing.Point(112' 36);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtDB.Location = new System.Drawing.Point(112' 36);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtDB.Size = new System.Drawing.Size(127' 20);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtDB.Size = new System.Drawing.Size(127' 20);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtDB.TabIndex = 2;
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(12' 65);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(12' 65);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(69' 13);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(69' 13);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtStartByte.Location = new System.Drawing.Point(112' 62);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtStartByte.Location = new System.Drawing.Point(112' 62);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtStartByte.Size = new System.Drawing.Size(127' 20);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtStartByte.Size = new System.Drawing.Size(127' 20);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtStartByte.TabIndex = 2;
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(12' 91);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(12' 91);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(71' 13);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(71' 13);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtBytes.Location = new System.Drawing.Point(112' 88);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtBytes.Location = new System.Drawing.Point(112' 88);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtBytes.Size = new System.Drawing.Size(127' 20);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtBytes.Size = new System.Drawing.Size(127' 20);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtBytes.TabIndex = 2;
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(12' 117);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(12' 117);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(68' 13);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(68' 13);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtSize.Location = new System.Drawing.Point(112' 114);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtSize.Location = new System.Drawing.Point(112' 114);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtSize.Size = new System.Drawing.Size(127' 20);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtSize.Size = new System.Drawing.Size(127' 20);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtSize.TabIndex = 2;
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label6.Location = new System.Drawing.Point(12' 143);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label6.Location = new System.Drawing.Point(12' 143);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label6.Size = new System.Drawing.Size(96' 13);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.label6.Size = new System.Drawing.Size(96' 13);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtNewSize.Location = new System.Drawing.Point(112' 140);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtNewSize.Location = new System.Drawing.Point(112' 140);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtNewSize.Size = new System.Drawing.Size(127' 20);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtNewSize.Size = new System.Drawing.Size(127' 20);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.txtNewSize.TabIndex = 2;
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(15' 233);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(15' 233);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(237' 36);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(237' 36);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.button1.TabIndex = 3;
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.button2.Location = new System.Drawing.Point(15' 275);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.button2.Location = new System.Drawing.Point(15' 275);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.button2.Size = new System.Drawing.Size(237' 36);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.button2.Size = new System.Drawing.Size(237' 36);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.button2.TabIndex = 3;
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.lblState.Location = new System.Drawing.Point(15' 174);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.lblState.Location = new System.Drawing.Point(15' 174);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.lblState.Size = new System.Drawing.Size(237' 56);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.lblState.Size = new System.Drawing.Size(237' 56);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.lblState.TabIndex = 4;
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(269' 330);
Magic Number,TestProjectFileFunctions,DBStructresizer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DBStructresizer.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(269' 330);
Magic Number,TestProjectFileFunctions,DownloadBlock,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DownloadBlock.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.Location = new System.Drawing.Point(12' 64);
Magic Number,TestProjectFileFunctions,DownloadBlock,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DownloadBlock.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.Location = new System.Drawing.Point(12' 64);
Magic Number,TestProjectFileFunctions,DownloadBlock,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DownloadBlock.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.Size = new System.Drawing.Size(260' 186);
Magic Number,TestProjectFileFunctions,DownloadBlock,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DownloadBlock.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.Size = new System.Drawing.Size(260' 186);
Magic Number,TestProjectFileFunctions,DownloadBlock,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DownloadBlock.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(12' 256);
Magic Number,TestProjectFileFunctions,DownloadBlock,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DownloadBlock.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(12' 256);
Magic Number,TestProjectFileFunctions,DownloadBlock,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DownloadBlock.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(260' 46);
Magic Number,TestProjectFileFunctions,DownloadBlock,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DownloadBlock.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(260' 46);
Magic Number,TestProjectFileFunctions,DownloadBlock,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DownloadBlock.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(12' 9);
Magic Number,TestProjectFileFunctions,DownloadBlock,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DownloadBlock.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(12' 9);
Magic Number,TestProjectFileFunctions,DownloadBlock,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DownloadBlock.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(260' 52);
Magic Number,TestProjectFileFunctions,DownloadBlock,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DownloadBlock.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(260' 52);
Magic Number,TestProjectFileFunctions,DownloadBlock,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DownloadBlock.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 2;
Magic Number,TestProjectFileFunctions,DownloadBlock,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DownloadBlock.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(284' 312);
Magic Number,TestProjectFileFunctions,DownloadBlock,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\DownloadBlock.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(284' 312);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.label7.Location = new System.Drawing.Point(12' 9);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.label7.Location = new System.Drawing.Point(12' 9);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.label7.Size = new System.Drawing.Size(391' 91);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.label7.Size = new System.Drawing.Size(391' 91);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.label7.TabIndex = 16;
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(12' 131);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(12' 131);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(235' 52);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(235' 52);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 16;
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Location = new System.Drawing.Point(253' 157);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Location = new System.Drawing.Point(253' 157);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Size = new System.Drawing.Size(251' 13);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Size = new System.Drawing.Size(251' 13);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.TabIndex = 17;
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel2.Location = new System.Drawing.Point(212' 144);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel2.Location = new System.Drawing.Point(212' 144);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel2.Size = new System.Drawing.Size(166' 13);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel2.Size = new System.Drawing.Size(166' 13);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel2.TabIndex = 17;
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel3.Location = new System.Drawing.Point(257' 170);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel3.Location = new System.Drawing.Point(257' 170);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel3.Size = new System.Drawing.Size(275' 13);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel3.Size = new System.Drawing.Size(275' 13);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel3.TabIndex = 17;
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(12' 220);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(12' 220);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(45' 13);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(45' 13);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 16;
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.lblVer.Location = new System.Drawing.Point(63' 220);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.lblVer.Location = new System.Drawing.Point(63' 220);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.lblVer.Size = new System.Drawing.Size(45' 13);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.lblVer.Size = new System.Drawing.Size(45' 13);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.lblVer.TabIndex = 16;
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(545' 242);
Magic Number,TestProjectFileFunctions,Features,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\Features.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(545' 242);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.tabControl.Size = new System.Drawing.Size(838' 610);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.tabControl.Size = new System.Drawing.Size(838' 610);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Location = new System.Drawing.Point(4' 22);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Location = new System.Drawing.Point(4' 22);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Padding = new System.Windows.Forms.Padding(3);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Size = new System.Drawing.Size(830' 584);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Size = new System.Drawing.Size(830' 584);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.tabPage2.Location = new System.Drawing.Point(4' 22);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.tabPage2.Location = new System.Drawing.Point(4' 22);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.tabPage2.Padding = new System.Windows.Forms.Padding(3);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.tabPage2.Size = new System.Drawing.Size(543' 414);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.tabPage2.Size = new System.Drawing.Size(543' 414);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.ColumnCount = 2;
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Location = new System.Drawing.Point(3' 3);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Location = new System.Drawing.Point(3' 3);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Size = new System.Drawing.Size(824' 578);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Size = new System.Drawing.Size(824' 578);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Location = new System.Drawing.Point(3' 3);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Location = new System.Drawing.Point(3' 3);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Size = new System.Drawing.Size(618' 572);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Size = new System.Drawing.Size(618' 572);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.SplitterDistance = 281;
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewSend.Size = new System.Drawing.Size(618' 281);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewSend.Size = new System.Drawing.Size(618' 281);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(618' 287);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(618' 287);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(838' 610);
Magic Number,TestProjectFileFunctions,TelegrammSimulator,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\TelegrammSimulator.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(838' 610);
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,HexBox,The following statement contains a magic number: _thumbTrackTimer.Interval = 50;
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,ToScrollPos,The following statement contains a magic number: int max = 65535;
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,ToScrollPos,The following statement contains a magic number: if (_scrollVmax < max)  				return (int)value;  			else  			{  				double valperc = (double)value / (double)_scrollVmax * (double)100;  				int res = (int)Math.Floor((double)max / (double)100 * valperc);  				res = (int)Math.Max(_scrollVmin' res);  				res = (int)Math.Min(_scrollVmax' res);  				return res;  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,ToScrollPos,The following statement contains a magic number: if (_scrollVmax < max)  				return (int)value;  			else  			{  				double valperc = (double)value / (double)_scrollVmax * (double)100;  				int res = (int)Math.Floor((double)max / (double)100 * valperc);  				res = (int)Math.Max(_scrollVmin' res);  				res = (int)Math.Min(_scrollVmax' res);  				return res;  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,FromScrollPos,The following statement contains a magic number: int max = 65535;
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,FromScrollPos,The following statement contains a magic number: if (_scrollVmax < max)  			{  				return (long)value;  			}  			else  			{  				double valperc = (double)value / (double)max * (double)100;  				long res = (int)Math.Floor((double)_scrollVmax / (double)100 * valperc);  				return res;  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,FromScrollPos,The following statement contains a magic number: if (_scrollVmax < max)  			{  				return (long)value;  			}  			else  			{  				double valperc = (double)value / (double)max * (double)100;  				long res = (int)Math.Floor((double)_scrollVmax / (double)100 * valperc);  				return res;  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,ToScrollMax,The following statement contains a magic number: long max = 65535;
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PerformScrollThumpPosition,The following statement contains a magic number: int difference = (_scrollVmax > 65535) ? 10 : 9;
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PerformScrollThumpPosition,The following statement contains a magic number: int difference = (_scrollVmax > 65535) ? 10 : 9;
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PerformScrollThumpPosition,The following statement contains a magic number: int difference = (_scrollVmax > 65535) ? 10 : 9;
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,GetHexBytePositionInfo,The following statement contains a magic number: int hPos = (iX / 3 + 1);
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,GetHexBytePositionInfo,The following statement contains a magic number: byteCharaterPos = (iX % 3);
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,Find,The following statement contains a magic number: for (long pos = startIndex; pos < _byteProvider.Length; pos++)  			{  				if (_abortFind)  					return -2;    				if (pos % 1000 == 0) // for performance reasons: DoEvents only 1 times per 1000 loops  					Application.DoEvents();    				byte compareByte = _byteProvider.ReadByte(pos);  				bool buffer1Match = compareByte == buffer1[match];  				bool hasBuffer2 = buffer2 != null;  				bool buffer2Match = hasBuffer2 ? compareByte == buffer2[match] : false;  				bool isMatch = buffer1Match || buffer2Match;  				if (!isMatch)  				{  					pos -= match;  					match = 0;  					_findingPos = pos;  					continue;  				}    				match++;    				if (match == buffer1Length)  				{  					long bytePos = pos - buffer1Length + 1;  					Select(bytePos' buffer1Length);  					ScrollByteIntoView(_bytePos + _selectionLength);  					ScrollByteIntoView(_bytePos);    					return bytePos;  				}  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,Find,The following statement contains a magic number: for (long pos = startIndex; pos < _byteProvider.Length; pos++)  			{  				if (_abortFind)  					return -2;    				if (pos % 1000 == 0) // for performance reasons: DoEvents only 1 times per 1000 loops  					Application.DoEvents();    				byte compareByte = _byteProvider.ReadByte(pos);  				bool buffer1Match = compareByte == buffer1[match];  				bool hasBuffer2 = buffer2 != null;  				bool buffer2Match = hasBuffer2 ? compareByte == buffer2[match] : false;  				bool isMatch = buffer1Match || buffer2Match;  				if (!isMatch)  				{  					pos -= match;  					match = 0;  					_findingPos = pos;  					continue;  				}    				match++;    				if (match == buffer1Length)  				{  					long bytePos = pos - buffer1Length + 1;  					Select(bytePos' buffer1Length);  					ScrollByteIntoView(_bytePos + _selectionLength);  					ScrollByteIntoView(_bytePos);    					return bytePos;  				}  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PaintLineInfo,The following statement contains a magic number: for (int i = 0; i < maxLine; i++)  			{  				long firstLineByte = (startByte + (_iHexMaxHBytes) * i) + _lineInfoOffset;    				PointF bytePointF = GetBytePointF(new Point(0' 0 + i));  				string info = firstLineByte.ToString(_hexStringFormat' System.Threading.Thread.CurrentThread.CurrentCulture);  				int nulls = 8 - info.Length;  				string formattedInfo;  				if (nulls > -1)  				{  					formattedInfo = new string('0'' 8 - info.Length) + info;  				}  				else  				{  					formattedInfo = new string('~'' 8);  				}    				g.DrawString(formattedInfo' Font' brush' new PointF(_recLineInfo.X' bytePointF.Y)' _stringFormat);  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PaintLineInfo,The following statement contains a magic number: for (int i = 0; i < maxLine; i++)  			{  				long firstLineByte = (startByte + (_iHexMaxHBytes) * i) + _lineInfoOffset;    				PointF bytePointF = GetBytePointF(new Point(0' 0 + i));  				string info = firstLineByte.ToString(_hexStringFormat' System.Threading.Thread.CurrentThread.CurrentCulture);  				int nulls = 8 - info.Length;  				string formattedInfo;  				if (nulls > -1)  				{  					formattedInfo = new string('0'' 8 - info.Length) + info;  				}  				else  				{  					formattedInfo = new string('~'' 8);  				}    				g.DrawString(formattedInfo' Font' brush' new PointF(_recLineInfo.X' bytePointF.Y)' _stringFormat);  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PaintLineInfo,The following statement contains a magic number: for (int i = 0; i < maxLine; i++)  			{  				long firstLineByte = (startByte + (_iHexMaxHBytes) * i) + _lineInfoOffset;    				PointF bytePointF = GetBytePointF(new Point(0' 0 + i));  				string info = firstLineByte.ToString(_hexStringFormat' System.Threading.Thread.CurrentThread.CurrentCulture);  				int nulls = 8 - info.Length;  				string formattedInfo;  				if (nulls > -1)  				{  					formattedInfo = new string('0'' 8 - info.Length) + info;  				}  				else  				{  					formattedInfo = new string('~'' 8);  				}    				g.DrawString(formattedInfo' Font' brush' new PointF(_recLineInfo.X' bytePointF.Y)' _stringFormat);  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PaintColumnSeparator,The following statement contains a magic number: for (int col = GroupSize; col < _iHexMaxHBytes; col += GroupSize)  			{  				var pen = new Pen(new SolidBrush(this.InfoForeColor)' 1);  				PointF headerPointF = GetColumnInfoPointF(col);  				headerPointF.X -= _charSize.Width / 2;  				g.DrawLine(pen' headerPointF' new PointF(headerPointF.X' headerPointF.Y + _recColumnInfo.Height + _recHex.Height));  				if (StringViewVisible)  				{  					PointF byteStringPointF = GetByteStringPointF(new Point(col' 0));  					headerPointF.X -= 2;  					g.DrawLine(pen' new PointF(byteStringPointF.X' byteStringPointF.Y)' new PointF(byteStringPointF.X' byteStringPointF.Y + _recHex.Height));  				}  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PaintColumnSeparator,The following statement contains a magic number: for (int col = GroupSize; col < _iHexMaxHBytes; col += GroupSize)  			{  				var pen = new Pen(new SolidBrush(this.InfoForeColor)' 1);  				PointF headerPointF = GetColumnInfoPointF(col);  				headerPointF.X -= _charSize.Width / 2;  				g.DrawLine(pen' headerPointF' new PointF(headerPointF.X' headerPointF.Y + _recColumnInfo.Height + _recHex.Height));  				if (StringViewVisible)  				{  					PointF byteStringPointF = GetByteStringPointF(new Point(col' 0));  					headerPointF.X -= 2;  					g.DrawLine(pen' new PointF(byteStringPointF.X' byteStringPointF.Y)' new PointF(byteStringPointF.X' byteStringPointF.Y + _recHex.Height));  				}  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PaintHexStringSelected,The following statement contains a magic number: float bcWidth = (isLastLineChar) ? _charSize.Width * 2 : _charSize.Width * 3;
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PaintHexStringSelected,The following statement contains a magic number: float bcWidth = (isLastLineChar) ? _charSize.Width * 2 : _charSize.Width * 3;
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PaintCurrentBytesSign,The following statement contains a magic number: if (_keyInterpreter != null && _bytePos != -1 && Enabled)  			{  				if (_keyInterpreter.GetType() == typeof(KeyInterpreter))  				{  					if (_selectionLength == 0)  					{  						Point gp = GetGridBytePoint(_bytePos - _startByte);  						PointF pf = GetByteStringPointF(gp);  						Size s = new Size((int)_charSize.Width' (int)_charSize.Height);  						Rectangle r = new Rectangle((int)pf.X' (int)pf.Y' s.Width' s.Height);  						if (r.IntersectsWith(_recStringView))  						{  							r.Intersect(_recStringView);  							PaintCurrentByteSign(g' r);  						}  					}  					else  					{  						int lineWidth = (int)(_recStringView.Width - _charSize.Width);    						Point startSelGridPoint = GetGridBytePoint(_bytePos - _startByte);  						PointF startSelPointF = GetByteStringPointF(startSelGridPoint);    						Point endSelGridPoint = GetGridBytePoint(_bytePos - _startByte + _selectionLength - 1);  						PointF endSelPointF = GetByteStringPointF(endSelGridPoint);    						int multiLine = endSelGridPoint.Y - startSelGridPoint.Y;  						if (multiLine == 0)  						{  							  							Rectangle singleLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(endSelPointF.X - startSelPointF.X + _charSize.Width)'  								(int)_charSize.Height);  							if (singleLine.IntersectsWith(_recStringView))  							{  								singleLine.Intersect(_recStringView);  								PaintCurrentByteSign(g' singleLine);  							}  						}  						else  						{  							Rectangle firstLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(_recStringView.X + lineWidth - startSelPointF.X + _charSize.Width)'  								(int)_charSize.Height);  							if (firstLine.IntersectsWith(_recStringView))  							{  								firstLine.Intersect(_recStringView);  								PaintCurrentByteSign(g' firstLine);  							}    							if (multiLine > 1)  							{  								Rectangle betweenLines = new Rectangle(  									_recStringView.X'  									(int)(startSelPointF.Y + _charSize.Height)'  									(int)(_recStringView.Width)'  									(int)(_charSize.Height * (multiLine - 1)));  								if (betweenLines.IntersectsWith(_recStringView))  								{  									betweenLines.Intersect(_recStringView);  									PaintCurrentByteSign(g' betweenLines);  								}    							}    							Rectangle lastLine = new Rectangle(  								_recStringView.X'  								(int)endSelPointF.Y'  								(int)(endSelPointF.X - _recStringView.X + _charSize.Width)'  								(int)_charSize.Height);  							if (lastLine.IntersectsWith(_recStringView))  							{  								lastLine.Intersect(_recStringView);  								PaintCurrentByteSign(g' lastLine);  							}  						}  					}  				}  				else  				{  					if (_selectionLength == 0)  					{  						Point gp = GetGridBytePoint(_bytePos - _startByte);  						PointF pf = GetBytePointF(gp);  						Size s = new Size((int)_charSize.Width * 2' (int)_charSize.Height);  						Rectangle r = new Rectangle((int)pf.X' (int)pf.Y' s.Width' s.Height);  						PaintCurrentByteSign(g' r);  					}  					else  					{  						int lineWidth = (int)(_recHex.Width - _charSize.Width * 5);    						Point startSelGridPoint = GetGridBytePoint(_bytePos - _startByte);  						PointF startSelPointF = GetBytePointF(startSelGridPoint);    						Point endSelGridPoint = GetGridBytePoint(_bytePos - _startByte + _selectionLength - 1);  						PointF endSelPointF = GetBytePointF(endSelGridPoint);    						int multiLine = endSelGridPoint.Y - startSelGridPoint.Y;  						if (multiLine == 0)  						{  							Rectangle singleLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(endSelPointF.X - startSelPointF.X + _charSize.Width * 2)'  								(int)_charSize.Height);  							if (singleLine.IntersectsWith(_recHex))  							{  								singleLine.Intersect(_recHex);  								PaintCurrentByteSign(g' singleLine);  							}  						}  						else  						{  							Rectangle firstLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(_recHex.X + lineWidth - startSelPointF.X + _charSize.Width * 2)'  								(int)_charSize.Height);  							if (firstLine.IntersectsWith(_recHex))  							{  								firstLine.Intersect(_recHex);  								PaintCurrentByteSign(g' firstLine);  							}    							if (multiLine > 1)  							{  								Rectangle betweenLines = new Rectangle(  									_recHex.X'  									(int)(startSelPointF.Y + _charSize.Height)'  									(int)(lineWidth + _charSize.Width * 2)'  									(int)(_charSize.Height * (multiLine - 1)));  								if (betweenLines.IntersectsWith(_recHex))  								{  									betweenLines.Intersect(_recHex);  									PaintCurrentByteSign(g' betweenLines);  								}    							}    							Rectangle lastLine = new Rectangle(  								_recHex.X'  								(int)endSelPointF.Y'  								(int)(endSelPointF.X - _recHex.X + _charSize.Width * 2)'  								(int)_charSize.Height);  							if (lastLine.IntersectsWith(_recHex))  							{  								lastLine.Intersect(_recHex);  								PaintCurrentByteSign(g' lastLine);  							}  						}  					}  				}  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PaintCurrentBytesSign,The following statement contains a magic number: if (_keyInterpreter != null && _bytePos != -1 && Enabled)  			{  				if (_keyInterpreter.GetType() == typeof(KeyInterpreter))  				{  					if (_selectionLength == 0)  					{  						Point gp = GetGridBytePoint(_bytePos - _startByte);  						PointF pf = GetByteStringPointF(gp);  						Size s = new Size((int)_charSize.Width' (int)_charSize.Height);  						Rectangle r = new Rectangle((int)pf.X' (int)pf.Y' s.Width' s.Height);  						if (r.IntersectsWith(_recStringView))  						{  							r.Intersect(_recStringView);  							PaintCurrentByteSign(g' r);  						}  					}  					else  					{  						int lineWidth = (int)(_recStringView.Width - _charSize.Width);    						Point startSelGridPoint = GetGridBytePoint(_bytePos - _startByte);  						PointF startSelPointF = GetByteStringPointF(startSelGridPoint);    						Point endSelGridPoint = GetGridBytePoint(_bytePos - _startByte + _selectionLength - 1);  						PointF endSelPointF = GetByteStringPointF(endSelGridPoint);    						int multiLine = endSelGridPoint.Y - startSelGridPoint.Y;  						if (multiLine == 0)  						{  							  							Rectangle singleLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(endSelPointF.X - startSelPointF.X + _charSize.Width)'  								(int)_charSize.Height);  							if (singleLine.IntersectsWith(_recStringView))  							{  								singleLine.Intersect(_recStringView);  								PaintCurrentByteSign(g' singleLine);  							}  						}  						else  						{  							Rectangle firstLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(_recStringView.X + lineWidth - startSelPointF.X + _charSize.Width)'  								(int)_charSize.Height);  							if (firstLine.IntersectsWith(_recStringView))  							{  								firstLine.Intersect(_recStringView);  								PaintCurrentByteSign(g' firstLine);  							}    							if (multiLine > 1)  							{  								Rectangle betweenLines = new Rectangle(  									_recStringView.X'  									(int)(startSelPointF.Y + _charSize.Height)'  									(int)(_recStringView.Width)'  									(int)(_charSize.Height * (multiLine - 1)));  								if (betweenLines.IntersectsWith(_recStringView))  								{  									betweenLines.Intersect(_recStringView);  									PaintCurrentByteSign(g' betweenLines);  								}    							}    							Rectangle lastLine = new Rectangle(  								_recStringView.X'  								(int)endSelPointF.Y'  								(int)(endSelPointF.X - _recStringView.X + _charSize.Width)'  								(int)_charSize.Height);  							if (lastLine.IntersectsWith(_recStringView))  							{  								lastLine.Intersect(_recStringView);  								PaintCurrentByteSign(g' lastLine);  							}  						}  					}  				}  				else  				{  					if (_selectionLength == 0)  					{  						Point gp = GetGridBytePoint(_bytePos - _startByte);  						PointF pf = GetBytePointF(gp);  						Size s = new Size((int)_charSize.Width * 2' (int)_charSize.Height);  						Rectangle r = new Rectangle((int)pf.X' (int)pf.Y' s.Width' s.Height);  						PaintCurrentByteSign(g' r);  					}  					else  					{  						int lineWidth = (int)(_recHex.Width - _charSize.Width * 5);    						Point startSelGridPoint = GetGridBytePoint(_bytePos - _startByte);  						PointF startSelPointF = GetBytePointF(startSelGridPoint);    						Point endSelGridPoint = GetGridBytePoint(_bytePos - _startByte + _selectionLength - 1);  						PointF endSelPointF = GetBytePointF(endSelGridPoint);    						int multiLine = endSelGridPoint.Y - startSelGridPoint.Y;  						if (multiLine == 0)  						{  							Rectangle singleLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(endSelPointF.X - startSelPointF.X + _charSize.Width * 2)'  								(int)_charSize.Height);  							if (singleLine.IntersectsWith(_recHex))  							{  								singleLine.Intersect(_recHex);  								PaintCurrentByteSign(g' singleLine);  							}  						}  						else  						{  							Rectangle firstLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(_recHex.X + lineWidth - startSelPointF.X + _charSize.Width * 2)'  								(int)_charSize.Height);  							if (firstLine.IntersectsWith(_recHex))  							{  								firstLine.Intersect(_recHex);  								PaintCurrentByteSign(g' firstLine);  							}    							if (multiLine > 1)  							{  								Rectangle betweenLines = new Rectangle(  									_recHex.X'  									(int)(startSelPointF.Y + _charSize.Height)'  									(int)(lineWidth + _charSize.Width * 2)'  									(int)(_charSize.Height * (multiLine - 1)));  								if (betweenLines.IntersectsWith(_recHex))  								{  									betweenLines.Intersect(_recHex);  									PaintCurrentByteSign(g' betweenLines);  								}    							}    							Rectangle lastLine = new Rectangle(  								_recHex.X'  								(int)endSelPointF.Y'  								(int)(endSelPointF.X - _recHex.X + _charSize.Width * 2)'  								(int)_charSize.Height);  							if (lastLine.IntersectsWith(_recHex))  							{  								lastLine.Intersect(_recHex);  								PaintCurrentByteSign(g' lastLine);  							}  						}  					}  				}  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PaintCurrentBytesSign,The following statement contains a magic number: if (_keyInterpreter != null && _bytePos != -1 && Enabled)  			{  				if (_keyInterpreter.GetType() == typeof(KeyInterpreter))  				{  					if (_selectionLength == 0)  					{  						Point gp = GetGridBytePoint(_bytePos - _startByte);  						PointF pf = GetByteStringPointF(gp);  						Size s = new Size((int)_charSize.Width' (int)_charSize.Height);  						Rectangle r = new Rectangle((int)pf.X' (int)pf.Y' s.Width' s.Height);  						if (r.IntersectsWith(_recStringView))  						{  							r.Intersect(_recStringView);  							PaintCurrentByteSign(g' r);  						}  					}  					else  					{  						int lineWidth = (int)(_recStringView.Width - _charSize.Width);    						Point startSelGridPoint = GetGridBytePoint(_bytePos - _startByte);  						PointF startSelPointF = GetByteStringPointF(startSelGridPoint);    						Point endSelGridPoint = GetGridBytePoint(_bytePos - _startByte + _selectionLength - 1);  						PointF endSelPointF = GetByteStringPointF(endSelGridPoint);    						int multiLine = endSelGridPoint.Y - startSelGridPoint.Y;  						if (multiLine == 0)  						{  							  							Rectangle singleLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(endSelPointF.X - startSelPointF.X + _charSize.Width)'  								(int)_charSize.Height);  							if (singleLine.IntersectsWith(_recStringView))  							{  								singleLine.Intersect(_recStringView);  								PaintCurrentByteSign(g' singleLine);  							}  						}  						else  						{  							Rectangle firstLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(_recStringView.X + lineWidth - startSelPointF.X + _charSize.Width)'  								(int)_charSize.Height);  							if (firstLine.IntersectsWith(_recStringView))  							{  								firstLine.Intersect(_recStringView);  								PaintCurrentByteSign(g' firstLine);  							}    							if (multiLine > 1)  							{  								Rectangle betweenLines = new Rectangle(  									_recStringView.X'  									(int)(startSelPointF.Y + _charSize.Height)'  									(int)(_recStringView.Width)'  									(int)(_charSize.Height * (multiLine - 1)));  								if (betweenLines.IntersectsWith(_recStringView))  								{  									betweenLines.Intersect(_recStringView);  									PaintCurrentByteSign(g' betweenLines);  								}    							}    							Rectangle lastLine = new Rectangle(  								_recStringView.X'  								(int)endSelPointF.Y'  								(int)(endSelPointF.X - _recStringView.X + _charSize.Width)'  								(int)_charSize.Height);  							if (lastLine.IntersectsWith(_recStringView))  							{  								lastLine.Intersect(_recStringView);  								PaintCurrentByteSign(g' lastLine);  							}  						}  					}  				}  				else  				{  					if (_selectionLength == 0)  					{  						Point gp = GetGridBytePoint(_bytePos - _startByte);  						PointF pf = GetBytePointF(gp);  						Size s = new Size((int)_charSize.Width * 2' (int)_charSize.Height);  						Rectangle r = new Rectangle((int)pf.X' (int)pf.Y' s.Width' s.Height);  						PaintCurrentByteSign(g' r);  					}  					else  					{  						int lineWidth = (int)(_recHex.Width - _charSize.Width * 5);    						Point startSelGridPoint = GetGridBytePoint(_bytePos - _startByte);  						PointF startSelPointF = GetBytePointF(startSelGridPoint);    						Point endSelGridPoint = GetGridBytePoint(_bytePos - _startByte + _selectionLength - 1);  						PointF endSelPointF = GetBytePointF(endSelGridPoint);    						int multiLine = endSelGridPoint.Y - startSelGridPoint.Y;  						if (multiLine == 0)  						{  							Rectangle singleLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(endSelPointF.X - startSelPointF.X + _charSize.Width * 2)'  								(int)_charSize.Height);  							if (singleLine.IntersectsWith(_recHex))  							{  								singleLine.Intersect(_recHex);  								PaintCurrentByteSign(g' singleLine);  							}  						}  						else  						{  							Rectangle firstLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(_recHex.X + lineWidth - startSelPointF.X + _charSize.Width * 2)'  								(int)_charSize.Height);  							if (firstLine.IntersectsWith(_recHex))  							{  								firstLine.Intersect(_recHex);  								PaintCurrentByteSign(g' firstLine);  							}    							if (multiLine > 1)  							{  								Rectangle betweenLines = new Rectangle(  									_recHex.X'  									(int)(startSelPointF.Y + _charSize.Height)'  									(int)(lineWidth + _charSize.Width * 2)'  									(int)(_charSize.Height * (multiLine - 1)));  								if (betweenLines.IntersectsWith(_recHex))  								{  									betweenLines.Intersect(_recHex);  									PaintCurrentByteSign(g' betweenLines);  								}    							}    							Rectangle lastLine = new Rectangle(  								_recHex.X'  								(int)endSelPointF.Y'  								(int)(endSelPointF.X - _recHex.X + _charSize.Width * 2)'  								(int)_charSize.Height);  							if (lastLine.IntersectsWith(_recHex))  							{  								lastLine.Intersect(_recHex);  								PaintCurrentByteSign(g' lastLine);  							}  						}  					}  				}  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PaintCurrentBytesSign,The following statement contains a magic number: if (_keyInterpreter != null && _bytePos != -1 && Enabled)  			{  				if (_keyInterpreter.GetType() == typeof(KeyInterpreter))  				{  					if (_selectionLength == 0)  					{  						Point gp = GetGridBytePoint(_bytePos - _startByte);  						PointF pf = GetByteStringPointF(gp);  						Size s = new Size((int)_charSize.Width' (int)_charSize.Height);  						Rectangle r = new Rectangle((int)pf.X' (int)pf.Y' s.Width' s.Height);  						if (r.IntersectsWith(_recStringView))  						{  							r.Intersect(_recStringView);  							PaintCurrentByteSign(g' r);  						}  					}  					else  					{  						int lineWidth = (int)(_recStringView.Width - _charSize.Width);    						Point startSelGridPoint = GetGridBytePoint(_bytePos - _startByte);  						PointF startSelPointF = GetByteStringPointF(startSelGridPoint);    						Point endSelGridPoint = GetGridBytePoint(_bytePos - _startByte + _selectionLength - 1);  						PointF endSelPointF = GetByteStringPointF(endSelGridPoint);    						int multiLine = endSelGridPoint.Y - startSelGridPoint.Y;  						if (multiLine == 0)  						{  							  							Rectangle singleLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(endSelPointF.X - startSelPointF.X + _charSize.Width)'  								(int)_charSize.Height);  							if (singleLine.IntersectsWith(_recStringView))  							{  								singleLine.Intersect(_recStringView);  								PaintCurrentByteSign(g' singleLine);  							}  						}  						else  						{  							Rectangle firstLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(_recStringView.X + lineWidth - startSelPointF.X + _charSize.Width)'  								(int)_charSize.Height);  							if (firstLine.IntersectsWith(_recStringView))  							{  								firstLine.Intersect(_recStringView);  								PaintCurrentByteSign(g' firstLine);  							}    							if (multiLine > 1)  							{  								Rectangle betweenLines = new Rectangle(  									_recStringView.X'  									(int)(startSelPointF.Y + _charSize.Height)'  									(int)(_recStringView.Width)'  									(int)(_charSize.Height * (multiLine - 1)));  								if (betweenLines.IntersectsWith(_recStringView))  								{  									betweenLines.Intersect(_recStringView);  									PaintCurrentByteSign(g' betweenLines);  								}    							}    							Rectangle lastLine = new Rectangle(  								_recStringView.X'  								(int)endSelPointF.Y'  								(int)(endSelPointF.X - _recStringView.X + _charSize.Width)'  								(int)_charSize.Height);  							if (lastLine.IntersectsWith(_recStringView))  							{  								lastLine.Intersect(_recStringView);  								PaintCurrentByteSign(g' lastLine);  							}  						}  					}  				}  				else  				{  					if (_selectionLength == 0)  					{  						Point gp = GetGridBytePoint(_bytePos - _startByte);  						PointF pf = GetBytePointF(gp);  						Size s = new Size((int)_charSize.Width * 2' (int)_charSize.Height);  						Rectangle r = new Rectangle((int)pf.X' (int)pf.Y' s.Width' s.Height);  						PaintCurrentByteSign(g' r);  					}  					else  					{  						int lineWidth = (int)(_recHex.Width - _charSize.Width * 5);    						Point startSelGridPoint = GetGridBytePoint(_bytePos - _startByte);  						PointF startSelPointF = GetBytePointF(startSelGridPoint);    						Point endSelGridPoint = GetGridBytePoint(_bytePos - _startByte + _selectionLength - 1);  						PointF endSelPointF = GetBytePointF(endSelGridPoint);    						int multiLine = endSelGridPoint.Y - startSelGridPoint.Y;  						if (multiLine == 0)  						{  							Rectangle singleLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(endSelPointF.X - startSelPointF.X + _charSize.Width * 2)'  								(int)_charSize.Height);  							if (singleLine.IntersectsWith(_recHex))  							{  								singleLine.Intersect(_recHex);  								PaintCurrentByteSign(g' singleLine);  							}  						}  						else  						{  							Rectangle firstLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(_recHex.X + lineWidth - startSelPointF.X + _charSize.Width * 2)'  								(int)_charSize.Height);  							if (firstLine.IntersectsWith(_recHex))  							{  								firstLine.Intersect(_recHex);  								PaintCurrentByteSign(g' firstLine);  							}    							if (multiLine > 1)  							{  								Rectangle betweenLines = new Rectangle(  									_recHex.X'  									(int)(startSelPointF.Y + _charSize.Height)'  									(int)(lineWidth + _charSize.Width * 2)'  									(int)(_charSize.Height * (multiLine - 1)));  								if (betweenLines.IntersectsWith(_recHex))  								{  									betweenLines.Intersect(_recHex);  									PaintCurrentByteSign(g' betweenLines);  								}    							}    							Rectangle lastLine = new Rectangle(  								_recHex.X'  								(int)endSelPointF.Y'  								(int)(endSelPointF.X - _recHex.X + _charSize.Width * 2)'  								(int)_charSize.Height);  							if (lastLine.IntersectsWith(_recHex))  							{  								lastLine.Intersect(_recHex);  								PaintCurrentByteSign(g' lastLine);  							}  						}  					}  				}  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PaintCurrentBytesSign,The following statement contains a magic number: if (_keyInterpreter != null && _bytePos != -1 && Enabled)  			{  				if (_keyInterpreter.GetType() == typeof(KeyInterpreter))  				{  					if (_selectionLength == 0)  					{  						Point gp = GetGridBytePoint(_bytePos - _startByte);  						PointF pf = GetByteStringPointF(gp);  						Size s = new Size((int)_charSize.Width' (int)_charSize.Height);  						Rectangle r = new Rectangle((int)pf.X' (int)pf.Y' s.Width' s.Height);  						if (r.IntersectsWith(_recStringView))  						{  							r.Intersect(_recStringView);  							PaintCurrentByteSign(g' r);  						}  					}  					else  					{  						int lineWidth = (int)(_recStringView.Width - _charSize.Width);    						Point startSelGridPoint = GetGridBytePoint(_bytePos - _startByte);  						PointF startSelPointF = GetByteStringPointF(startSelGridPoint);    						Point endSelGridPoint = GetGridBytePoint(_bytePos - _startByte + _selectionLength - 1);  						PointF endSelPointF = GetByteStringPointF(endSelGridPoint);    						int multiLine = endSelGridPoint.Y - startSelGridPoint.Y;  						if (multiLine == 0)  						{  							  							Rectangle singleLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(endSelPointF.X - startSelPointF.X + _charSize.Width)'  								(int)_charSize.Height);  							if (singleLine.IntersectsWith(_recStringView))  							{  								singleLine.Intersect(_recStringView);  								PaintCurrentByteSign(g' singleLine);  							}  						}  						else  						{  							Rectangle firstLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(_recStringView.X + lineWidth - startSelPointF.X + _charSize.Width)'  								(int)_charSize.Height);  							if (firstLine.IntersectsWith(_recStringView))  							{  								firstLine.Intersect(_recStringView);  								PaintCurrentByteSign(g' firstLine);  							}    							if (multiLine > 1)  							{  								Rectangle betweenLines = new Rectangle(  									_recStringView.X'  									(int)(startSelPointF.Y + _charSize.Height)'  									(int)(_recStringView.Width)'  									(int)(_charSize.Height * (multiLine - 1)));  								if (betweenLines.IntersectsWith(_recStringView))  								{  									betweenLines.Intersect(_recStringView);  									PaintCurrentByteSign(g' betweenLines);  								}    							}    							Rectangle lastLine = new Rectangle(  								_recStringView.X'  								(int)endSelPointF.Y'  								(int)(endSelPointF.X - _recStringView.X + _charSize.Width)'  								(int)_charSize.Height);  							if (lastLine.IntersectsWith(_recStringView))  							{  								lastLine.Intersect(_recStringView);  								PaintCurrentByteSign(g' lastLine);  							}  						}  					}  				}  				else  				{  					if (_selectionLength == 0)  					{  						Point gp = GetGridBytePoint(_bytePos - _startByte);  						PointF pf = GetBytePointF(gp);  						Size s = new Size((int)_charSize.Width * 2' (int)_charSize.Height);  						Rectangle r = new Rectangle((int)pf.X' (int)pf.Y' s.Width' s.Height);  						PaintCurrentByteSign(g' r);  					}  					else  					{  						int lineWidth = (int)(_recHex.Width - _charSize.Width * 5);    						Point startSelGridPoint = GetGridBytePoint(_bytePos - _startByte);  						PointF startSelPointF = GetBytePointF(startSelGridPoint);    						Point endSelGridPoint = GetGridBytePoint(_bytePos - _startByte + _selectionLength - 1);  						PointF endSelPointF = GetBytePointF(endSelGridPoint);    						int multiLine = endSelGridPoint.Y - startSelGridPoint.Y;  						if (multiLine == 0)  						{  							Rectangle singleLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(endSelPointF.X - startSelPointF.X + _charSize.Width * 2)'  								(int)_charSize.Height);  							if (singleLine.IntersectsWith(_recHex))  							{  								singleLine.Intersect(_recHex);  								PaintCurrentByteSign(g' singleLine);  							}  						}  						else  						{  							Rectangle firstLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(_recHex.X + lineWidth - startSelPointF.X + _charSize.Width * 2)'  								(int)_charSize.Height);  							if (firstLine.IntersectsWith(_recHex))  							{  								firstLine.Intersect(_recHex);  								PaintCurrentByteSign(g' firstLine);  							}    							if (multiLine > 1)  							{  								Rectangle betweenLines = new Rectangle(  									_recHex.X'  									(int)(startSelPointF.Y + _charSize.Height)'  									(int)(lineWidth + _charSize.Width * 2)'  									(int)(_charSize.Height * (multiLine - 1)));  								if (betweenLines.IntersectsWith(_recHex))  								{  									betweenLines.Intersect(_recHex);  									PaintCurrentByteSign(g' betweenLines);  								}    							}    							Rectangle lastLine = new Rectangle(  								_recHex.X'  								(int)endSelPointF.Y'  								(int)(endSelPointF.X - _recHex.X + _charSize.Width * 2)'  								(int)_charSize.Height);  							if (lastLine.IntersectsWith(_recHex))  							{  								lastLine.Intersect(_recHex);  								PaintCurrentByteSign(g' lastLine);  							}  						}  					}  				}  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PaintCurrentBytesSign,The following statement contains a magic number: if (_keyInterpreter != null && _bytePos != -1 && Enabled)  			{  				if (_keyInterpreter.GetType() == typeof(KeyInterpreter))  				{  					if (_selectionLength == 0)  					{  						Point gp = GetGridBytePoint(_bytePos - _startByte);  						PointF pf = GetByteStringPointF(gp);  						Size s = new Size((int)_charSize.Width' (int)_charSize.Height);  						Rectangle r = new Rectangle((int)pf.X' (int)pf.Y' s.Width' s.Height);  						if (r.IntersectsWith(_recStringView))  						{  							r.Intersect(_recStringView);  							PaintCurrentByteSign(g' r);  						}  					}  					else  					{  						int lineWidth = (int)(_recStringView.Width - _charSize.Width);    						Point startSelGridPoint = GetGridBytePoint(_bytePos - _startByte);  						PointF startSelPointF = GetByteStringPointF(startSelGridPoint);    						Point endSelGridPoint = GetGridBytePoint(_bytePos - _startByte + _selectionLength - 1);  						PointF endSelPointF = GetByteStringPointF(endSelGridPoint);    						int multiLine = endSelGridPoint.Y - startSelGridPoint.Y;  						if (multiLine == 0)  						{  							  							Rectangle singleLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(endSelPointF.X - startSelPointF.X + _charSize.Width)'  								(int)_charSize.Height);  							if (singleLine.IntersectsWith(_recStringView))  							{  								singleLine.Intersect(_recStringView);  								PaintCurrentByteSign(g' singleLine);  							}  						}  						else  						{  							Rectangle firstLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(_recStringView.X + lineWidth - startSelPointF.X + _charSize.Width)'  								(int)_charSize.Height);  							if (firstLine.IntersectsWith(_recStringView))  							{  								firstLine.Intersect(_recStringView);  								PaintCurrentByteSign(g' firstLine);  							}    							if (multiLine > 1)  							{  								Rectangle betweenLines = new Rectangle(  									_recStringView.X'  									(int)(startSelPointF.Y + _charSize.Height)'  									(int)(_recStringView.Width)'  									(int)(_charSize.Height * (multiLine - 1)));  								if (betweenLines.IntersectsWith(_recStringView))  								{  									betweenLines.Intersect(_recStringView);  									PaintCurrentByteSign(g' betweenLines);  								}    							}    							Rectangle lastLine = new Rectangle(  								_recStringView.X'  								(int)endSelPointF.Y'  								(int)(endSelPointF.X - _recStringView.X + _charSize.Width)'  								(int)_charSize.Height);  							if (lastLine.IntersectsWith(_recStringView))  							{  								lastLine.Intersect(_recStringView);  								PaintCurrentByteSign(g' lastLine);  							}  						}  					}  				}  				else  				{  					if (_selectionLength == 0)  					{  						Point gp = GetGridBytePoint(_bytePos - _startByte);  						PointF pf = GetBytePointF(gp);  						Size s = new Size((int)_charSize.Width * 2' (int)_charSize.Height);  						Rectangle r = new Rectangle((int)pf.X' (int)pf.Y' s.Width' s.Height);  						PaintCurrentByteSign(g' r);  					}  					else  					{  						int lineWidth = (int)(_recHex.Width - _charSize.Width * 5);    						Point startSelGridPoint = GetGridBytePoint(_bytePos - _startByte);  						PointF startSelPointF = GetBytePointF(startSelGridPoint);    						Point endSelGridPoint = GetGridBytePoint(_bytePos - _startByte + _selectionLength - 1);  						PointF endSelPointF = GetBytePointF(endSelGridPoint);    						int multiLine = endSelGridPoint.Y - startSelGridPoint.Y;  						if (multiLine == 0)  						{  							Rectangle singleLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(endSelPointF.X - startSelPointF.X + _charSize.Width * 2)'  								(int)_charSize.Height);  							if (singleLine.IntersectsWith(_recHex))  							{  								singleLine.Intersect(_recHex);  								PaintCurrentByteSign(g' singleLine);  							}  						}  						else  						{  							Rectangle firstLine = new Rectangle(  								(int)startSelPointF.X'  								(int)startSelPointF.Y'  								(int)(_recHex.X + lineWidth - startSelPointF.X + _charSize.Width * 2)'  								(int)_charSize.Height);  							if (firstLine.IntersectsWith(_recHex))  							{  								firstLine.Intersect(_recHex);  								PaintCurrentByteSign(g' firstLine);  							}    							if (multiLine > 1)  							{  								Rectangle betweenLines = new Rectangle(  									_recHex.X'  									(int)(startSelPointF.Y + _charSize.Height)'  									(int)(lineWidth + _charSize.Width * 2)'  									(int)(_charSize.Height * (multiLine - 1)));  								if (betweenLines.IntersectsWith(_recHex))  								{  									betweenLines.Intersect(_recHex);  									PaintCurrentByteSign(g' betweenLines);  								}    							}    							Rectangle lastLine = new Rectangle(  								_recHex.X'  								(int)endSelPointF.Y'  								(int)(endSelPointF.X - _recHex.X + _charSize.Width * 2)'  								(int)_charSize.Height);  							if (lastLine.IntersectsWith(_recHex))  							{  								lastLine.Intersect(_recHex);  								PaintCurrentByteSign(g' lastLine);  							}  						}  					}  				}  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,UpdateRectanglePositioning,The following statement contains a magic number: SizeF charSize = this.CreateGraphics().MeasureString("A"' Font' 100' _stringFormat);
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,UpdateRectanglePositioning,The following statement contains a magic number: int marginLeft = 4;
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,UpdateRectanglePositioning,The following statement contains a magic number: if (_lineInfoVisible)  			{  				_recLineInfo = new Rectangle(_recContent.X + marginLeft'  					_recContent.Y'  					(int)(_charSize.Width * 10)'  					_recContent.Height);  			}  			else  			{  				_recLineInfo = Rectangle.Empty;  				_recLineInfo.X = marginLeft;  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,UpdateRectanglePositioning,The following statement contains a magic number: _recColumnInfo = new Rectangle(_recLineInfo.X + _recLineInfo.Width' _recContent.Y' _recContent.Width - _recLineInfo.Width' (int)charSize.Height + 4);
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,UpdateRectanglePositioning,The following statement contains a magic number: if (_columnInfoVisible)  			{  				_recLineInfo.Y += (int)charSize.Height + 4;  				_recLineInfo.Height -= (int)charSize.Height + 4;  			}  			else  			{  				_recColumnInfo.Height = 0;  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,UpdateRectanglePositioning,The following statement contains a magic number: if (_columnInfoVisible)  			{  				_recLineInfo.Y += (int)charSize.Height + 4;  				_recLineInfo.Height -= (int)charSize.Height + 4;  			}  			else  			{  				_recColumnInfo.Height = 0;  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,UpdateRectanglePositioning,The following statement contains a magic number: if (UseFixedBytesPerLine)  			{  				SetHorizontalByteCount(_bytesPerLine);  				_recHex.Width = (int)Math.Floor(((double)_iHexMaxHBytes) * _charSize.Width * 3 + (2 * _charSize.Width));  			}  			else  			{  				int hmax = (int)Math.Floor((double)_recHex.Width / (double)_charSize.Width);  				if (_stringViewVisible)  				{  					hmax -= 2;  					if (hmax > 1)  						SetHorizontalByteCount((int)Math.Floor((double)hmax / 4));  					else  						SetHorizontalByteCount(1);  				}  				else  				{  					if (hmax > 1)  						SetHorizontalByteCount((int)Math.Floor((double)hmax / 3));  					else  						SetHorizontalByteCount(1);  				}  				_recHex.Width = (int)Math.Floor(((double)_iHexMaxHBytes) * _charSize.Width * 3 + (2 * _charSize.Width));  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,UpdateRectanglePositioning,The following statement contains a magic number: if (UseFixedBytesPerLine)  			{  				SetHorizontalByteCount(_bytesPerLine);  				_recHex.Width = (int)Math.Floor(((double)_iHexMaxHBytes) * _charSize.Width * 3 + (2 * _charSize.Width));  			}  			else  			{  				int hmax = (int)Math.Floor((double)_recHex.Width / (double)_charSize.Width);  				if (_stringViewVisible)  				{  					hmax -= 2;  					if (hmax > 1)  						SetHorizontalByteCount((int)Math.Floor((double)hmax / 4));  					else  						SetHorizontalByteCount(1);  				}  				else  				{  					if (hmax > 1)  						SetHorizontalByteCount((int)Math.Floor((double)hmax / 3));  					else  						SetHorizontalByteCount(1);  				}  				_recHex.Width = (int)Math.Floor(((double)_iHexMaxHBytes) * _charSize.Width * 3 + (2 * _charSize.Width));  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,UpdateRectanglePositioning,The following statement contains a magic number: if (UseFixedBytesPerLine)  			{  				SetHorizontalByteCount(_bytesPerLine);  				_recHex.Width = (int)Math.Floor(((double)_iHexMaxHBytes) * _charSize.Width * 3 + (2 * _charSize.Width));  			}  			else  			{  				int hmax = (int)Math.Floor((double)_recHex.Width / (double)_charSize.Width);  				if (_stringViewVisible)  				{  					hmax -= 2;  					if (hmax > 1)  						SetHorizontalByteCount((int)Math.Floor((double)hmax / 4));  					else  						SetHorizontalByteCount(1);  				}  				else  				{  					if (hmax > 1)  						SetHorizontalByteCount((int)Math.Floor((double)hmax / 3));  					else  						SetHorizontalByteCount(1);  				}  				_recHex.Width = (int)Math.Floor(((double)_iHexMaxHBytes) * _charSize.Width * 3 + (2 * _charSize.Width));  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,UpdateRectanglePositioning,The following statement contains a magic number: if (UseFixedBytesPerLine)  			{  				SetHorizontalByteCount(_bytesPerLine);  				_recHex.Width = (int)Math.Floor(((double)_iHexMaxHBytes) * _charSize.Width * 3 + (2 * _charSize.Width));  			}  			else  			{  				int hmax = (int)Math.Floor((double)_recHex.Width / (double)_charSize.Width);  				if (_stringViewVisible)  				{  					hmax -= 2;  					if (hmax > 1)  						SetHorizontalByteCount((int)Math.Floor((double)hmax / 4));  					else  						SetHorizontalByteCount(1);  				}  				else  				{  					if (hmax > 1)  						SetHorizontalByteCount((int)Math.Floor((double)hmax / 3));  					else  						SetHorizontalByteCount(1);  				}  				_recHex.Width = (int)Math.Floor(((double)_iHexMaxHBytes) * _charSize.Width * 3 + (2 * _charSize.Width));  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,UpdateRectanglePositioning,The following statement contains a magic number: if (UseFixedBytesPerLine)  			{  				SetHorizontalByteCount(_bytesPerLine);  				_recHex.Width = (int)Math.Floor(((double)_iHexMaxHBytes) * _charSize.Width * 3 + (2 * _charSize.Width));  			}  			else  			{  				int hmax = (int)Math.Floor((double)_recHex.Width / (double)_charSize.Width);  				if (_stringViewVisible)  				{  					hmax -= 2;  					if (hmax > 1)  						SetHorizontalByteCount((int)Math.Floor((double)hmax / 4));  					else  						SetHorizontalByteCount(1);  				}  				else  				{  					if (hmax > 1)  						SetHorizontalByteCount((int)Math.Floor((double)hmax / 3));  					else  						SetHorizontalByteCount(1);  				}  				_recHex.Width = (int)Math.Floor(((double)_iHexMaxHBytes) * _charSize.Width * 3 + (2 * _charSize.Width));  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,UpdateRectanglePositioning,The following statement contains a magic number: if (UseFixedBytesPerLine)  			{  				SetHorizontalByteCount(_bytesPerLine);  				_recHex.Width = (int)Math.Floor(((double)_iHexMaxHBytes) * _charSize.Width * 3 + (2 * _charSize.Width));  			}  			else  			{  				int hmax = (int)Math.Floor((double)_recHex.Width / (double)_charSize.Width);  				if (_stringViewVisible)  				{  					hmax -= 2;  					if (hmax > 1)  						SetHorizontalByteCount((int)Math.Floor((double)hmax / 4));  					else  						SetHorizontalByteCount(1);  				}  				else  				{  					if (hmax > 1)  						SetHorizontalByteCount((int)Math.Floor((double)hmax / 3));  					else  						SetHorizontalByteCount(1);  				}  				_recHex.Width = (int)Math.Floor(((double)_iHexMaxHBytes) * _charSize.Width * 3 + (2 * _charSize.Width));  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,UpdateRectanglePositioning,The following statement contains a magic number: if (UseFixedBytesPerLine)  			{  				SetHorizontalByteCount(_bytesPerLine);  				_recHex.Width = (int)Math.Floor(((double)_iHexMaxHBytes) * _charSize.Width * 3 + (2 * _charSize.Width));  			}  			else  			{  				int hmax = (int)Math.Floor((double)_recHex.Width / (double)_charSize.Width);  				if (_stringViewVisible)  				{  					hmax -= 2;  					if (hmax > 1)  						SetHorizontalByteCount((int)Math.Floor((double)hmax / 4));  					else  						SetHorizontalByteCount(1);  				}  				else  				{  					if (hmax > 1)  						SetHorizontalByteCount((int)Math.Floor((double)hmax / 3));  					else  						SetHorizontalByteCount(1);  				}  				_recHex.Width = (int)Math.Floor(((double)_iHexMaxHBytes) * _charSize.Width * 3 + (2 * _charSize.Width));  			}
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,GetBytePointF,The following statement contains a magic number: float x = (3 * _charSize.Width) * gp.X + _recHex.X;
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,GetColumnInfoPointF,The following statement contains a magic number: float x = (3 * _charSize.Width) * gp.X + _recColumnInfo.X;
Magic Number,Be.Windows.Forms,HexBox,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,OnMouseWheel,The following statement contains a magic number: int linesToScroll = -(e.Delta * SystemInformation.MouseWheelScrollLines / 120);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,AddNodes,The following statement contains a magic number: foreach (var subitem in lst)              {                  myTreeNode tmpNode = new myTreeNode();                  tmpNode.Text = subitem.Name;                  tmpNode.myObject = subitem;                  tmpNode.ImageIndex = 0;                  //nd.ImageKey                  //Set the Image for the Folders...                  if (subitem.GetType() == typeof (StationConfigurationFolder))                  {                      if (((StationConfigurationFolder) subitem).StationType == PLCType.Simatic300)                          tmpNode.ImageIndex = 4;                      else if (((StationConfigurationFolder) subitem).StationType == PLCType.Simatic400 ||                               ((StationConfigurationFolder) subitem).StationType == PLCType.Simatic400H)                          tmpNode.ImageIndex = 5;                  }                  else if (subitem.GetType() == typeof (CPUFolder))                  {                      if (((CPUFolder) subitem).CpuType == PLCType.Simatic300) tmpNode.ImageIndex = 2;                      else if (((CPUFolder) subitem).CpuType == PLCType.Simatic400 ||                               ((CPUFolder) subitem).CpuType == PLCType.Simatic400H) tmpNode.ImageIndex = 3;                  }                    nd.Nodes.Add(tmpNode);                    if (subitem.SubItems != null) AddNodes(tmpNode' subitem.SubItems);              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,AddNodes,The following statement contains a magic number: foreach (var subitem in lst)              {                  myTreeNode tmpNode = new myTreeNode();                  tmpNode.Text = subitem.Name;                  tmpNode.myObject = subitem;                  tmpNode.ImageIndex = 0;                  //nd.ImageKey                  //Set the Image for the Folders...                  if (subitem.GetType() == typeof (StationConfigurationFolder))                  {                      if (((StationConfigurationFolder) subitem).StationType == PLCType.Simatic300)                          tmpNode.ImageIndex = 4;                      else if (((StationConfigurationFolder) subitem).StationType == PLCType.Simatic400 ||                               ((StationConfigurationFolder) subitem).StationType == PLCType.Simatic400H)                          tmpNode.ImageIndex = 5;                  }                  else if (subitem.GetType() == typeof (CPUFolder))                  {                      if (((CPUFolder) subitem).CpuType == PLCType.Simatic300) tmpNode.ImageIndex = 2;                      else if (((CPUFolder) subitem).CpuType == PLCType.Simatic400 ||                               ((CPUFolder) subitem).CpuType == PLCType.Simatic400H) tmpNode.ImageIndex = 3;                  }                    nd.Nodes.Add(tmpNode);                    if (subitem.SubItems != null) AddNodes(tmpNode' subitem.SubItems);              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,AddNodes,The following statement contains a magic number: foreach (var subitem in lst)              {                  myTreeNode tmpNode = new myTreeNode();                  tmpNode.Text = subitem.Name;                  tmpNode.myObject = subitem;                  tmpNode.ImageIndex = 0;                  //nd.ImageKey                  //Set the Image for the Folders...                  if (subitem.GetType() == typeof (StationConfigurationFolder))                  {                      if (((StationConfigurationFolder) subitem).StationType == PLCType.Simatic300)                          tmpNode.ImageIndex = 4;                      else if (((StationConfigurationFolder) subitem).StationType == PLCType.Simatic400 ||                               ((StationConfigurationFolder) subitem).StationType == PLCType.Simatic400H)                          tmpNode.ImageIndex = 5;                  }                  else if (subitem.GetType() == typeof (CPUFolder))                  {                      if (((CPUFolder) subitem).CpuType == PLCType.Simatic300) tmpNode.ImageIndex = 2;                      else if (((CPUFolder) subitem).CpuType == PLCType.Simatic400 ||                               ((CPUFolder) subitem).CpuType == PLCType.Simatic400H) tmpNode.ImageIndex = 3;                  }                    nd.Nodes.Add(tmpNode);                    if (subitem.SubItems != null) AddNodes(tmpNode' subitem.SubItems);              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,AddNodes,The following statement contains a magic number: foreach (var subitem in lst)              {                  myTreeNode tmpNode = new myTreeNode();                  tmpNode.Text = subitem.Name;                  tmpNode.myObject = subitem;                  tmpNode.ImageIndex = 0;                  //nd.ImageKey                  //Set the Image for the Folders...                  if (subitem.GetType() == typeof (StationConfigurationFolder))                  {                      if (((StationConfigurationFolder) subitem).StationType == PLCType.Simatic300)                          tmpNode.ImageIndex = 4;                      else if (((StationConfigurationFolder) subitem).StationType == PLCType.Simatic400 ||                               ((StationConfigurationFolder) subitem).StationType == PLCType.Simatic400H)                          tmpNode.ImageIndex = 5;                  }                  else if (subitem.GetType() == typeof (CPUFolder))                  {                      if (((CPUFolder) subitem).CpuType == PLCType.Simatic300) tmpNode.ImageIndex = 2;                      else if (((CPUFolder) subitem).CpuType == PLCType.Simatic400 ||                               ((CPUFolder) subitem).CpuType == PLCType.Simatic400H) tmpNode.ImageIndex = 3;                  }                    nd.Nodes.Add(tmpNode);                    if (subitem.SubItems != null) AddNodes(tmpNode' subitem.SubItems);              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,listBox1_SelectedIndexChanged,The following statement contains a magic number: if (lstListBox.SelectedItem != null)                  if (lstListBox.SelectedItem.GetType() == typeof (S7ProjectBlockInfo))                  {                      var tmp = (S7ProjectBlockInfo) lstListBox.SelectedItem;                      if (tmp.BlockType == PLCBlockType.DB) tableLayoutPanelVisu.ColumnStyles[1].Width = 255;                          //grpVisu.Visible = true;                      else                          //grpVisu.Visible = false;                          tableLayoutPanelVisu.ColumnStyles[1].Width = 0;                      if (!tmp.Deleted)                      {                          cmdUndeleteBlock.Visible = false;                          txtUndeleteName.Visible = false;                      }                      else                      {                          //cmdUndeleteBlock.Visible = true;                          //txtUndeleteName.Visible = true;                      }                  }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateFlexibleErrorMessages_Click,The following statement contains a magic number: string tags = varname + ";" + txtConnectionName.Text + ";DB " + myDB.BlockNumber + " DBW 0;Int;;" +                            ((cnt - 2)/2).ToString() + ";2;1 s;;;;;0;10;0;100;0;;0;\r\n";
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateFlexibleErrorMessages_Click,The following statement contains a magic number: string tags = varname + ";" + txtConnectionName.Text + ";DB " + myDB.BlockNumber + " DBW 0;Int;;" +                            ((cnt - 2)/2).ToString() + ";2;1 s;;;;;0;10;0;100;0;;0;\r\n";
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateFlexibleErrorMessages_Click,The following statement contains a magic number: foreach (S7DataRow plcDataRow in S7DataRow.GetChildrowsAsList(((S7DataRow) myDB.Structure)))                  // myDB.GetRowsAsList())              {                  if (plcDataRow.DataType == S7DataRowType.BOOL)                  {                      ByteBitAddress akAddr = plcDataRow.BlockAddress;                        int bitnr = (akAddr.ByteAddress/2)*16 + akAddr.BitAddress; //akAddr.BitAddress;                      if (akAddr.ByteAddress%2 == 0) bitnr += 8;                        string stoeTxt = "";                      string stoeTxtEn = "";                        stoeTxt = plcDataRow.Comment;                        if (chkCombineStructComments.Checked)                      {                          var par = plcDataRow.Parent;                          while (par != null)                          {                              stoeTxt = par.Comment + stoeTxt;                              par = par.Parent;                          }                      }                          if (stoeTxt.Contains(";"))                      {                          stoeTxt = "Störort: " + stoeTxt.Split(';')[0] + "' " + stoeTxt.Split(';')[1];                      }                        if (chkFixedErrorNumber.Checked)                          errNr = Convert.ToInt32(txtStartErrorNumber.Text) + akAddr.ByteAddress*8 + akAddr.BitAddress;                      errors += "\"D\"\t\"" + errNr.ToString() + "\"\t\"Alarms\"\t\"" + varname + "\"\t\"" +                                bitnr.ToString() + "\"\t\t\t\t\t\t\"0\"\t\"de-DE=" + stoeTxt + "\"\t\"en-US=" + stoeTxtEn +                                "\"\t\"de-DE=\"" + "\r\n";                      if (!chkFixedErrorNumber.Checked) errNr++;                  }              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateFlexibleErrorMessages_Click,The following statement contains a magic number: foreach (S7DataRow plcDataRow in S7DataRow.GetChildrowsAsList(((S7DataRow) myDB.Structure)))                  // myDB.GetRowsAsList())              {                  if (plcDataRow.DataType == S7DataRowType.BOOL)                  {                      ByteBitAddress akAddr = plcDataRow.BlockAddress;                        int bitnr = (akAddr.ByteAddress/2)*16 + akAddr.BitAddress; //akAddr.BitAddress;                      if (akAddr.ByteAddress%2 == 0) bitnr += 8;                        string stoeTxt = "";                      string stoeTxtEn = "";                        stoeTxt = plcDataRow.Comment;                        if (chkCombineStructComments.Checked)                      {                          var par = plcDataRow.Parent;                          while (par != null)                          {                              stoeTxt = par.Comment + stoeTxt;                              par = par.Parent;                          }                      }                          if (stoeTxt.Contains(";"))                      {                          stoeTxt = "Störort: " + stoeTxt.Split(';')[0] + "' " + stoeTxt.Split(';')[1];                      }                        if (chkFixedErrorNumber.Checked)                          errNr = Convert.ToInt32(txtStartErrorNumber.Text) + akAddr.ByteAddress*8 + akAddr.BitAddress;                      errors += "\"D\"\t\"" + errNr.ToString() + "\"\t\"Alarms\"\t\"" + varname + "\"\t\"" +                                bitnr.ToString() + "\"\t\t\t\t\t\t\"0\"\t\"de-DE=" + stoeTxt + "\"\t\"en-US=" + stoeTxtEn +                                "\"\t\"de-DE=\"" + "\r\n";                      if (!chkFixedErrorNumber.Checked) errNr++;                  }              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateFlexibleErrorMessages_Click,The following statement contains a magic number: foreach (S7DataRow plcDataRow in S7DataRow.GetChildrowsAsList(((S7DataRow) myDB.Structure)))                  // myDB.GetRowsAsList())              {                  if (plcDataRow.DataType == S7DataRowType.BOOL)                  {                      ByteBitAddress akAddr = plcDataRow.BlockAddress;                        int bitnr = (akAddr.ByteAddress/2)*16 + akAddr.BitAddress; //akAddr.BitAddress;                      if (akAddr.ByteAddress%2 == 0) bitnr += 8;                        string stoeTxt = "";                      string stoeTxtEn = "";                        stoeTxt = plcDataRow.Comment;                        if (chkCombineStructComments.Checked)                      {                          var par = plcDataRow.Parent;                          while (par != null)                          {                              stoeTxt = par.Comment + stoeTxt;                              par = par.Parent;                          }                      }                          if (stoeTxt.Contains(";"))                      {                          stoeTxt = "Störort: " + stoeTxt.Split(';')[0] + "' " + stoeTxt.Split(';')[1];                      }                        if (chkFixedErrorNumber.Checked)                          errNr = Convert.ToInt32(txtStartErrorNumber.Text) + akAddr.ByteAddress*8 + akAddr.BitAddress;                      errors += "\"D\"\t\"" + errNr.ToString() + "\"\t\"Alarms\"\t\"" + varname + "\"\t\"" +                                bitnr.ToString() + "\"\t\t\t\t\t\t\"0\"\t\"de-DE=" + stoeTxt + "\"\t\"en-US=" + stoeTxtEn +                                "\"\t\"de-DE=\"" + "\r\n";                      if (!chkFixedErrorNumber.Checked) errNr++;                  }              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateFlexibleErrorMessages_Click,The following statement contains a magic number: foreach (S7DataRow plcDataRow in S7DataRow.GetChildrowsAsList(((S7DataRow) myDB.Structure)))                  // myDB.GetRowsAsList())              {                  if (plcDataRow.DataType == S7DataRowType.BOOL)                  {                      ByteBitAddress akAddr = plcDataRow.BlockAddress;                        int bitnr = (akAddr.ByteAddress/2)*16 + akAddr.BitAddress; //akAddr.BitAddress;                      if (akAddr.ByteAddress%2 == 0) bitnr += 8;                        string stoeTxt = "";                      string stoeTxtEn = "";                        stoeTxt = plcDataRow.Comment;                        if (chkCombineStructComments.Checked)                      {                          var par = plcDataRow.Parent;                          while (par != null)                          {                              stoeTxt = par.Comment + stoeTxt;                              par = par.Parent;                          }                      }                          if (stoeTxt.Contains(";"))                      {                          stoeTxt = "Störort: " + stoeTxt.Split(';')[0] + "' " + stoeTxt.Split(';')[1];                      }                        if (chkFixedErrorNumber.Checked)                          errNr = Convert.ToInt32(txtStartErrorNumber.Text) + akAddr.ByteAddress*8 + akAddr.BitAddress;                      errors += "\"D\"\t\"" + errNr.ToString() + "\"\t\"Alarms\"\t\"" + varname + "\"\t\"" +                                bitnr.ToString() + "\"\t\t\t\t\t\t\"0\"\t\"de-DE=" + stoeTxt + "\"\t\"en-US=" + stoeTxtEn +                                "\"\t\"de-DE=\"" + "\r\n";                      if (!chkFixedErrorNumber.Checked) errNr++;                  }              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateFlexibleErrorMessages_Click,The following statement contains a magic number: foreach (S7DataRow plcDataRow in S7DataRow.GetChildrowsAsList(((S7DataRow) myDB.Structure)))                  // myDB.GetRowsAsList())              {                  if (plcDataRow.DataType == S7DataRowType.BOOL)                  {                      ByteBitAddress akAddr = plcDataRow.BlockAddress;                        int bitnr = (akAddr.ByteAddress/2)*16 + akAddr.BitAddress; //akAddr.BitAddress;                      if (akAddr.ByteAddress%2 == 0) bitnr += 8;                        string stoeTxt = "";                      string stoeTxtEn = "";                        stoeTxt = plcDataRow.Comment;                        if (chkCombineStructComments.Checked)                      {                          var par = plcDataRow.Parent;                          while (par != null)                          {                              stoeTxt = par.Comment + stoeTxt;                              par = par.Parent;                          }                      }                          if (stoeTxt.Contains(";"))                      {                          stoeTxt = "Störort: " + stoeTxt.Split(';')[0] + "' " + stoeTxt.Split(';')[1];                      }                        if (chkFixedErrorNumber.Checked)                          errNr = Convert.ToInt32(txtStartErrorNumber.Text) + akAddr.ByteAddress*8 + akAddr.BitAddress;                      errors += "\"D\"\t\"" + errNr.ToString() + "\"\t\"Alarms\"\t\"" + varname + "\"\t\"" +                                bitnr.ToString() + "\"\t\t\t\t\t\t\"0\"\t\"de-DE=" + stoeTxt + "\"\t\"en-US=" + stoeTxtEn +                                "\"\t\"de-DE=\"" + "\r\n";                      if (!chkFixedErrorNumber.Checked) errNr++;                  }              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateWinCCErrorMessages_Click,The following statement contains a magic number: try              {                  S7DataBlock myDB =                      (S7DataBlock) ((BlocksOfflineFolder) blkFld).GetBlock((S7ProjectBlockInfo) lstListBox.SelectedItem);                    int cnt = 0;                    if (myDB.Structure != null && myDB.Structure.Children != null)                      cnt =                          ((S7DataRow) myDB.Structure.Children[myDB.Structure.Children.Count - 1]).NextBlockAddress                              .ByteAddress;                    string varname = "STOERUNGEN_DB" + myDB.BlockNumber;                    for (int n = 0; n < cnt/2; n++)                  {                      try                      {                          HMIGOObject.CreateTag(varname + "_" + (n + 1).ToString()'                              HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_UNSIGNED_16BIT_VALUE' txtConnectionName.Text'                              "DB" + myDB.BlockNumber + "'DD" + (n*2).ToString()' "Stoerungen");                      }                      catch (COMException ex)                      {                          if (ex.ErrorCode != -2147196408) throw ex;                      }                    }                    string errors = "";                    int errNr = Convert.ToInt32(txtStartErrorNumber.Text);                    foreach (S7DataRow plcDataRow in S7DataRow.GetChildrowsAsList(((S7DataRow) myDB.Structure)))                      // myDB.GetRowsAsList())                  {                      if (plcDataRow.DataType == S7DataRowType.BOOL && !string.IsNullOrEmpty(plcDataRow.Comment))                      {                          string stoeTxt = "";                          stoeTxt = plcDataRow.Comment;                            if (chkCombineStructComments.Checked)                          {                              var par = plcDataRow.Parent;                              while (par != null)                              {                                  stoeTxt = par.Comment + stoeTxt;                                  par = par.Parent;                              }                          }                              char anfC = plcDataRow.Comment[0];                          if (anfC.ToString() == txtErrPrefix.Text || !chkUseErrPrefix.Checked)                          {                              if (anfC.ToString() == txtErrPrefix.Text) stoeTxt = stoeTxt.Substring(1);                                ByteBitAddress akAddr = plcDataRow.BlockAddress;                              int varnr = (akAddr.ByteAddress/2) + 1;                                int bitnr = akAddr.BitAddress;                              if (akAddr.ByteAddress%2 == 0) bitnr += 8;                                  string stoeOrt = "";                              string stoeTxtEn = "";                                  if (stoeTxt.Contains(";"))                              {                                  stoeOrt = stoeTxt.Split(';')[0];                                  stoeTxt = stoeTxt.Split(';')[1];                              }                                if (chkFixedErrorNumber.Checked)                                  errNr = Convert.ToInt32(txtStartErrorNumber.Text) + akAddr.ByteAddress*8 +                                          akAddr.BitAddress;                                try                              {                                  HMIGOObject.CreateSingleAlarm(errNr'                                      HMIGENOBJECTSLib.HMIGO_SINGLE_ALARM_CLASS_ID.SINGLE_ALARM_ERROR' 1' stoeTxt'                                      varname + "_" + varnr.ToString()' bitnr);                                  //HMIGOObject.SingleAlarmInfoText = stoeOrt;//stoeTxt;                                  HMIGOObject.SingleAlarmText2ID = stoeOrt;                                  HMIGOObject.CommitSingleAlarm();                              }                              catch (System.Runtime.InteropServices.COMException ex)                              {                                  if (ex.ErrorCode != -2147467259) throw ex;                              }                                //errors += "\"D\"\t\"" + errNr.ToString() + "\"\t\"Alarms\"\t\"" + varname + "\"\t\"" + bitnr.ToString() + "\"\t\t\t\t\t\t\"0\"\t\"de-DE=" + stoeTxt + "\"\t\"en-US=" + stoeTxtEn + "\"\t\"de-DE=\"" + "\r\n";                              if (!chkFixedErrorNumber.Checked) errNr++;                          }                      }                  }              }              catch (System.Runtime.InteropServices.COMException ex)              {                  if (ex.ErrorCode == -2147195889)                      MessageBox.Show("Error: The Connection Name you specified does not exist!");                  else MessageBox.Show("Error: " + ex.Message);              }              catch (Exception ex)              {                  MessageBox.Show("Error: " + ex.Message);              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateWinCCErrorMessages_Click,The following statement contains a magic number: try              {                  S7DataBlock myDB =                      (S7DataBlock) ((BlocksOfflineFolder) blkFld).GetBlock((S7ProjectBlockInfo) lstListBox.SelectedItem);                    int cnt = 0;                    if (myDB.Structure != null && myDB.Structure.Children != null)                      cnt =                          ((S7DataRow) myDB.Structure.Children[myDB.Structure.Children.Count - 1]).NextBlockAddress                              .ByteAddress;                    string varname = "STOERUNGEN_DB" + myDB.BlockNumber;                    for (int n = 0; n < cnt/2; n++)                  {                      try                      {                          HMIGOObject.CreateTag(varname + "_" + (n + 1).ToString()'                              HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_UNSIGNED_16BIT_VALUE' txtConnectionName.Text'                              "DB" + myDB.BlockNumber + "'DD" + (n*2).ToString()' "Stoerungen");                      }                      catch (COMException ex)                      {                          if (ex.ErrorCode != -2147196408) throw ex;                      }                    }                    string errors = "";                    int errNr = Convert.ToInt32(txtStartErrorNumber.Text);                    foreach (S7DataRow plcDataRow in S7DataRow.GetChildrowsAsList(((S7DataRow) myDB.Structure)))                      // myDB.GetRowsAsList())                  {                      if (plcDataRow.DataType == S7DataRowType.BOOL && !string.IsNullOrEmpty(plcDataRow.Comment))                      {                          string stoeTxt = "";                          stoeTxt = plcDataRow.Comment;                            if (chkCombineStructComments.Checked)                          {                              var par = plcDataRow.Parent;                              while (par != null)                              {                                  stoeTxt = par.Comment + stoeTxt;                                  par = par.Parent;                              }                          }                              char anfC = plcDataRow.Comment[0];                          if (anfC.ToString() == txtErrPrefix.Text || !chkUseErrPrefix.Checked)                          {                              if (anfC.ToString() == txtErrPrefix.Text) stoeTxt = stoeTxt.Substring(1);                                ByteBitAddress akAddr = plcDataRow.BlockAddress;                              int varnr = (akAddr.ByteAddress/2) + 1;                                int bitnr = akAddr.BitAddress;                              if (akAddr.ByteAddress%2 == 0) bitnr += 8;                                  string stoeOrt = "";                              string stoeTxtEn = "";                                  if (stoeTxt.Contains(";"))                              {                                  stoeOrt = stoeTxt.Split(';')[0];                                  stoeTxt = stoeTxt.Split(';')[1];                              }                                if (chkFixedErrorNumber.Checked)                                  errNr = Convert.ToInt32(txtStartErrorNumber.Text) + akAddr.ByteAddress*8 +                                          akAddr.BitAddress;                                try                              {                                  HMIGOObject.CreateSingleAlarm(errNr'                                      HMIGENOBJECTSLib.HMIGO_SINGLE_ALARM_CLASS_ID.SINGLE_ALARM_ERROR' 1' stoeTxt'                                      varname + "_" + varnr.ToString()' bitnr);                                  //HMIGOObject.SingleAlarmInfoText = stoeOrt;//stoeTxt;                                  HMIGOObject.SingleAlarmText2ID = stoeOrt;                                  HMIGOObject.CommitSingleAlarm();                              }                              catch (System.Runtime.InteropServices.COMException ex)                              {                                  if (ex.ErrorCode != -2147467259) throw ex;                              }                                //errors += "\"D\"\t\"" + errNr.ToString() + "\"\t\"Alarms\"\t\"" + varname + "\"\t\"" + bitnr.ToString() + "\"\t\t\t\t\t\t\"0\"\t\"de-DE=" + stoeTxt + "\"\t\"en-US=" + stoeTxtEn + "\"\t\"de-DE=\"" + "\r\n";                              if (!chkFixedErrorNumber.Checked) errNr++;                          }                      }                  }              }              catch (System.Runtime.InteropServices.COMException ex)              {                  if (ex.ErrorCode == -2147195889)                      MessageBox.Show("Error: The Connection Name you specified does not exist!");                  else MessageBox.Show("Error: " + ex.Message);              }              catch (Exception ex)              {                  MessageBox.Show("Error: " + ex.Message);              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateWinCCErrorMessages_Click,The following statement contains a magic number: try              {                  S7DataBlock myDB =                      (S7DataBlock) ((BlocksOfflineFolder) blkFld).GetBlock((S7ProjectBlockInfo) lstListBox.SelectedItem);                    int cnt = 0;                    if (myDB.Structure != null && myDB.Structure.Children != null)                      cnt =                          ((S7DataRow) myDB.Structure.Children[myDB.Structure.Children.Count - 1]).NextBlockAddress                              .ByteAddress;                    string varname = "STOERUNGEN_DB" + myDB.BlockNumber;                    for (int n = 0; n < cnt/2; n++)                  {                      try                      {                          HMIGOObject.CreateTag(varname + "_" + (n + 1).ToString()'                              HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_UNSIGNED_16BIT_VALUE' txtConnectionName.Text'                              "DB" + myDB.BlockNumber + "'DD" + (n*2).ToString()' "Stoerungen");                      }                      catch (COMException ex)                      {                          if (ex.ErrorCode != -2147196408) throw ex;                      }                    }                    string errors = "";                    int errNr = Convert.ToInt32(txtStartErrorNumber.Text);                    foreach (S7DataRow plcDataRow in S7DataRow.GetChildrowsAsList(((S7DataRow) myDB.Structure)))                      // myDB.GetRowsAsList())                  {                      if (plcDataRow.DataType == S7DataRowType.BOOL && !string.IsNullOrEmpty(plcDataRow.Comment))                      {                          string stoeTxt = "";                          stoeTxt = plcDataRow.Comment;                            if (chkCombineStructComments.Checked)                          {                              var par = plcDataRow.Parent;                              while (par != null)                              {                                  stoeTxt = par.Comment + stoeTxt;                                  par = par.Parent;                              }                          }                              char anfC = plcDataRow.Comment[0];                          if (anfC.ToString() == txtErrPrefix.Text || !chkUseErrPrefix.Checked)                          {                              if (anfC.ToString() == txtErrPrefix.Text) stoeTxt = stoeTxt.Substring(1);                                ByteBitAddress akAddr = plcDataRow.BlockAddress;                              int varnr = (akAddr.ByteAddress/2) + 1;                                int bitnr = akAddr.BitAddress;                              if (akAddr.ByteAddress%2 == 0) bitnr += 8;                                  string stoeOrt = "";                              string stoeTxtEn = "";                                  if (stoeTxt.Contains(";"))                              {                                  stoeOrt = stoeTxt.Split(';')[0];                                  stoeTxt = stoeTxt.Split(';')[1];                              }                                if (chkFixedErrorNumber.Checked)                                  errNr = Convert.ToInt32(txtStartErrorNumber.Text) + akAddr.ByteAddress*8 +                                          akAddr.BitAddress;                                try                              {                                  HMIGOObject.CreateSingleAlarm(errNr'                                      HMIGENOBJECTSLib.HMIGO_SINGLE_ALARM_CLASS_ID.SINGLE_ALARM_ERROR' 1' stoeTxt'                                      varname + "_" + varnr.ToString()' bitnr);                                  //HMIGOObject.SingleAlarmInfoText = stoeOrt;//stoeTxt;                                  HMIGOObject.SingleAlarmText2ID = stoeOrt;                                  HMIGOObject.CommitSingleAlarm();                              }                              catch (System.Runtime.InteropServices.COMException ex)                              {                                  if (ex.ErrorCode != -2147467259) throw ex;                              }                                //errors += "\"D\"\t\"" + errNr.ToString() + "\"\t\"Alarms\"\t\"" + varname + "\"\t\"" + bitnr.ToString() + "\"\t\t\t\t\t\t\"0\"\t\"de-DE=" + stoeTxt + "\"\t\"en-US=" + stoeTxtEn + "\"\t\"de-DE=\"" + "\r\n";                              if (!chkFixedErrorNumber.Checked) errNr++;                          }                      }                  }              }              catch (System.Runtime.InteropServices.COMException ex)              {                  if (ex.ErrorCode == -2147195889)                      MessageBox.Show("Error: The Connection Name you specified does not exist!");                  else MessageBox.Show("Error: " + ex.Message);              }              catch (Exception ex)              {                  MessageBox.Show("Error: " + ex.Message);              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateWinCCErrorMessages_Click,The following statement contains a magic number: try              {                  S7DataBlock myDB =                      (S7DataBlock) ((BlocksOfflineFolder) blkFld).GetBlock((S7ProjectBlockInfo) lstListBox.SelectedItem);                    int cnt = 0;                    if (myDB.Structure != null && myDB.Structure.Children != null)                      cnt =                          ((S7DataRow) myDB.Structure.Children[myDB.Structure.Children.Count - 1]).NextBlockAddress                              .ByteAddress;                    string varname = "STOERUNGEN_DB" + myDB.BlockNumber;                    for (int n = 0; n < cnt/2; n++)                  {                      try                      {                          HMIGOObject.CreateTag(varname + "_" + (n + 1).ToString()'                              HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_UNSIGNED_16BIT_VALUE' txtConnectionName.Text'                              "DB" + myDB.BlockNumber + "'DD" + (n*2).ToString()' "Stoerungen");                      }                      catch (COMException ex)                      {                          if (ex.ErrorCode != -2147196408) throw ex;                      }                    }                    string errors = "";                    int errNr = Convert.ToInt32(txtStartErrorNumber.Text);                    foreach (S7DataRow plcDataRow in S7DataRow.GetChildrowsAsList(((S7DataRow) myDB.Structure)))                      // myDB.GetRowsAsList())                  {                      if (plcDataRow.DataType == S7DataRowType.BOOL && !string.IsNullOrEmpty(plcDataRow.Comment))                      {                          string stoeTxt = "";                          stoeTxt = plcDataRow.Comment;                            if (chkCombineStructComments.Checked)                          {                              var par = plcDataRow.Parent;                              while (par != null)                              {                                  stoeTxt = par.Comment + stoeTxt;                                  par = par.Parent;                              }                          }                              char anfC = plcDataRow.Comment[0];                          if (anfC.ToString() == txtErrPrefix.Text || !chkUseErrPrefix.Checked)                          {                              if (anfC.ToString() == txtErrPrefix.Text) stoeTxt = stoeTxt.Substring(1);                                ByteBitAddress akAddr = plcDataRow.BlockAddress;                              int varnr = (akAddr.ByteAddress/2) + 1;                                int bitnr = akAddr.BitAddress;                              if (akAddr.ByteAddress%2 == 0) bitnr += 8;                                  string stoeOrt = "";                              string stoeTxtEn = "";                                  if (stoeTxt.Contains(";"))                              {                                  stoeOrt = stoeTxt.Split(';')[0];                                  stoeTxt = stoeTxt.Split(';')[1];                              }                                if (chkFixedErrorNumber.Checked)                                  errNr = Convert.ToInt32(txtStartErrorNumber.Text) + akAddr.ByteAddress*8 +                                          akAddr.BitAddress;                                try                              {                                  HMIGOObject.CreateSingleAlarm(errNr'                                      HMIGENOBJECTSLib.HMIGO_SINGLE_ALARM_CLASS_ID.SINGLE_ALARM_ERROR' 1' stoeTxt'                                      varname + "_" + varnr.ToString()' bitnr);                                  //HMIGOObject.SingleAlarmInfoText = stoeOrt;//stoeTxt;                                  HMIGOObject.SingleAlarmText2ID = stoeOrt;                                  HMIGOObject.CommitSingleAlarm();                              }                              catch (System.Runtime.InteropServices.COMException ex)                              {                                  if (ex.ErrorCode != -2147467259) throw ex;                              }                                //errors += "\"D\"\t\"" + errNr.ToString() + "\"\t\"Alarms\"\t\"" + varname + "\"\t\"" + bitnr.ToString() + "\"\t\t\t\t\t\t\"0\"\t\"de-DE=" + stoeTxt + "\"\t\"en-US=" + stoeTxtEn + "\"\t\"de-DE=\"" + "\r\n";                              if (!chkFixedErrorNumber.Checked) errNr++;                          }                      }                  }              }              catch (System.Runtime.InteropServices.COMException ex)              {                  if (ex.ErrorCode == -2147195889)                      MessageBox.Show("Error: The Connection Name you specified does not exist!");                  else MessageBox.Show("Error: " + ex.Message);              }              catch (Exception ex)              {                  MessageBox.Show("Error: " + ex.Message);              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateWinCCErrorMessages_Click,The following statement contains a magic number: try              {                  S7DataBlock myDB =                      (S7DataBlock) ((BlocksOfflineFolder) blkFld).GetBlock((S7ProjectBlockInfo) lstListBox.SelectedItem);                    int cnt = 0;                    if (myDB.Structure != null && myDB.Structure.Children != null)                      cnt =                          ((S7DataRow) myDB.Structure.Children[myDB.Structure.Children.Count - 1]).NextBlockAddress                              .ByteAddress;                    string varname = "STOERUNGEN_DB" + myDB.BlockNumber;                    for (int n = 0; n < cnt/2; n++)                  {                      try                      {                          HMIGOObject.CreateTag(varname + "_" + (n + 1).ToString()'                              HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_UNSIGNED_16BIT_VALUE' txtConnectionName.Text'                              "DB" + myDB.BlockNumber + "'DD" + (n*2).ToString()' "Stoerungen");                      }                      catch (COMException ex)                      {                          if (ex.ErrorCode != -2147196408) throw ex;                      }                    }                    string errors = "";                    int errNr = Convert.ToInt32(txtStartErrorNumber.Text);                    foreach (S7DataRow plcDataRow in S7DataRow.GetChildrowsAsList(((S7DataRow) myDB.Structure)))                      // myDB.GetRowsAsList())                  {                      if (plcDataRow.DataType == S7DataRowType.BOOL && !string.IsNullOrEmpty(plcDataRow.Comment))                      {                          string stoeTxt = "";                          stoeTxt = plcDataRow.Comment;                            if (chkCombineStructComments.Checked)                          {                              var par = plcDataRow.Parent;                              while (par != null)                              {                                  stoeTxt = par.Comment + stoeTxt;                                  par = par.Parent;                              }                          }                              char anfC = plcDataRow.Comment[0];                          if (anfC.ToString() == txtErrPrefix.Text || !chkUseErrPrefix.Checked)                          {                              if (anfC.ToString() == txtErrPrefix.Text) stoeTxt = stoeTxt.Substring(1);                                ByteBitAddress akAddr = plcDataRow.BlockAddress;                              int varnr = (akAddr.ByteAddress/2) + 1;                                int bitnr = akAddr.BitAddress;                              if (akAddr.ByteAddress%2 == 0) bitnr += 8;                                  string stoeOrt = "";                              string stoeTxtEn = "";                                  if (stoeTxt.Contains(";"))                              {                                  stoeOrt = stoeTxt.Split(';')[0];                                  stoeTxt = stoeTxt.Split(';')[1];                              }                                if (chkFixedErrorNumber.Checked)                                  errNr = Convert.ToInt32(txtStartErrorNumber.Text) + akAddr.ByteAddress*8 +                                          akAddr.BitAddress;                                try                              {                                  HMIGOObject.CreateSingleAlarm(errNr'                                      HMIGENOBJECTSLib.HMIGO_SINGLE_ALARM_CLASS_ID.SINGLE_ALARM_ERROR' 1' stoeTxt'                                      varname + "_" + varnr.ToString()' bitnr);                                  //HMIGOObject.SingleAlarmInfoText = stoeOrt;//stoeTxt;                                  HMIGOObject.SingleAlarmText2ID = stoeOrt;                                  HMIGOObject.CommitSingleAlarm();                              }                              catch (System.Runtime.InteropServices.COMException ex)                              {                                  if (ex.ErrorCode != -2147467259) throw ex;                              }                                //errors += "\"D\"\t\"" + errNr.ToString() + "\"\t\"Alarms\"\t\"" + varname + "\"\t\"" + bitnr.ToString() + "\"\t\t\t\t\t\t\"0\"\t\"de-DE=" + stoeTxt + "\"\t\"en-US=" + stoeTxtEn + "\"\t\"de-DE=\"" + "\r\n";                              if (!chkFixedErrorNumber.Checked) errNr++;                          }                      }                  }              }              catch (System.Runtime.InteropServices.COMException ex)              {                  if (ex.ErrorCode == -2147195889)                      MessageBox.Show("Error: The Connection Name you specified does not exist!");                  else MessageBox.Show("Error: " + ex.Message);              }              catch (Exception ex)              {                  MessageBox.Show("Error: " + ex.Message);              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateWinCCErrorMessages_Click,The following statement contains a magic number: try              {                  S7DataBlock myDB =                      (S7DataBlock) ((BlocksOfflineFolder) blkFld).GetBlock((S7ProjectBlockInfo) lstListBox.SelectedItem);                    int cnt = 0;                    if (myDB.Structure != null && myDB.Structure.Children != null)                      cnt =                          ((S7DataRow) myDB.Structure.Children[myDB.Structure.Children.Count - 1]).NextBlockAddress                              .ByteAddress;                    string varname = "STOERUNGEN_DB" + myDB.BlockNumber;                    for (int n = 0; n < cnt/2; n++)                  {                      try                      {                          HMIGOObject.CreateTag(varname + "_" + (n + 1).ToString()'                              HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_UNSIGNED_16BIT_VALUE' txtConnectionName.Text'                              "DB" + myDB.BlockNumber + "'DD" + (n*2).ToString()' "Stoerungen");                      }                      catch (COMException ex)                      {                          if (ex.ErrorCode != -2147196408) throw ex;                      }                    }                    string errors = "";                    int errNr = Convert.ToInt32(txtStartErrorNumber.Text);                    foreach (S7DataRow plcDataRow in S7DataRow.GetChildrowsAsList(((S7DataRow) myDB.Structure)))                      // myDB.GetRowsAsList())                  {                      if (plcDataRow.DataType == S7DataRowType.BOOL && !string.IsNullOrEmpty(plcDataRow.Comment))                      {                          string stoeTxt = "";                          stoeTxt = plcDataRow.Comment;                            if (chkCombineStructComments.Checked)                          {                              var par = plcDataRow.Parent;                              while (par != null)                              {                                  stoeTxt = par.Comment + stoeTxt;                                  par = par.Parent;                              }                          }                              char anfC = plcDataRow.Comment[0];                          if (anfC.ToString() == txtErrPrefix.Text || !chkUseErrPrefix.Checked)                          {                              if (anfC.ToString() == txtErrPrefix.Text) stoeTxt = stoeTxt.Substring(1);                                ByteBitAddress akAddr = plcDataRow.BlockAddress;                              int varnr = (akAddr.ByteAddress/2) + 1;                                int bitnr = akAddr.BitAddress;                              if (akAddr.ByteAddress%2 == 0) bitnr += 8;                                  string stoeOrt = "";                              string stoeTxtEn = "";                                  if (stoeTxt.Contains(";"))                              {                                  stoeOrt = stoeTxt.Split(';')[0];                                  stoeTxt = stoeTxt.Split(';')[1];                              }                                if (chkFixedErrorNumber.Checked)                                  errNr = Convert.ToInt32(txtStartErrorNumber.Text) + akAddr.ByteAddress*8 +                                          akAddr.BitAddress;                                try                              {                                  HMIGOObject.CreateSingleAlarm(errNr'                                      HMIGENOBJECTSLib.HMIGO_SINGLE_ALARM_CLASS_ID.SINGLE_ALARM_ERROR' 1' stoeTxt'                                      varname + "_" + varnr.ToString()' bitnr);                                  //HMIGOObject.SingleAlarmInfoText = stoeOrt;//stoeTxt;                                  HMIGOObject.SingleAlarmText2ID = stoeOrt;                                  HMIGOObject.CommitSingleAlarm();                              }                              catch (System.Runtime.InteropServices.COMException ex)                              {                                  if (ex.ErrorCode != -2147467259) throw ex;                              }                                //errors += "\"D\"\t\"" + errNr.ToString() + "\"\t\"Alarms\"\t\"" + varname + "\"\t\"" + bitnr.ToString() + "\"\t\t\t\t\t\t\"0\"\t\"de-DE=" + stoeTxt + "\"\t\"en-US=" + stoeTxtEn + "\"\t\"de-DE=\"" + "\r\n";                              if (!chkFixedErrorNumber.Checked) errNr++;                          }                      }                  }              }              catch (System.Runtime.InteropServices.COMException ex)              {                  if (ex.ErrorCode == -2147195889)                      MessageBox.Show("Error: The Connection Name you specified does not exist!");                  else MessageBox.Show("Error: " + ex.Message);              }              catch (Exception ex)              {                  MessageBox.Show("Error: " + ex.Message);              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateWinCCErrorMessages_Click,The following statement contains a magic number: try              {                  S7DataBlock myDB =                      (S7DataBlock) ((BlocksOfflineFolder) blkFld).GetBlock((S7ProjectBlockInfo) lstListBox.SelectedItem);                    int cnt = 0;                    if (myDB.Structure != null && myDB.Structure.Children != null)                      cnt =                          ((S7DataRow) myDB.Structure.Children[myDB.Structure.Children.Count - 1]).NextBlockAddress                              .ByteAddress;                    string varname = "STOERUNGEN_DB" + myDB.BlockNumber;                    for (int n = 0; n < cnt/2; n++)                  {                      try                      {                          HMIGOObject.CreateTag(varname + "_" + (n + 1).ToString()'                              HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_UNSIGNED_16BIT_VALUE' txtConnectionName.Text'                              "DB" + myDB.BlockNumber + "'DD" + (n*2).ToString()' "Stoerungen");                      }                      catch (COMException ex)                      {                          if (ex.ErrorCode != -2147196408) throw ex;                      }                    }                    string errors = "";                    int errNr = Convert.ToInt32(txtStartErrorNumber.Text);                    foreach (S7DataRow plcDataRow in S7DataRow.GetChildrowsAsList(((S7DataRow) myDB.Structure)))                      // myDB.GetRowsAsList())                  {                      if (plcDataRow.DataType == S7DataRowType.BOOL && !string.IsNullOrEmpty(plcDataRow.Comment))                      {                          string stoeTxt = "";                          stoeTxt = plcDataRow.Comment;                            if (chkCombineStructComments.Checked)                          {                              var par = plcDataRow.Parent;                              while (par != null)                              {                                  stoeTxt = par.Comment + stoeTxt;                                  par = par.Parent;                              }                          }                              char anfC = plcDataRow.Comment[0];                          if (anfC.ToString() == txtErrPrefix.Text || !chkUseErrPrefix.Checked)                          {                              if (anfC.ToString() == txtErrPrefix.Text) stoeTxt = stoeTxt.Substring(1);                                ByteBitAddress akAddr = plcDataRow.BlockAddress;                              int varnr = (akAddr.ByteAddress/2) + 1;                                int bitnr = akAddr.BitAddress;                              if (akAddr.ByteAddress%2 == 0) bitnr += 8;                                  string stoeOrt = "";                              string stoeTxtEn = "";                                  if (stoeTxt.Contains(";"))                              {                                  stoeOrt = stoeTxt.Split(';')[0];                                  stoeTxt = stoeTxt.Split(';')[1];                              }                                if (chkFixedErrorNumber.Checked)                                  errNr = Convert.ToInt32(txtStartErrorNumber.Text) + akAddr.ByteAddress*8 +                                          akAddr.BitAddress;                                try                              {                                  HMIGOObject.CreateSingleAlarm(errNr'                                      HMIGENOBJECTSLib.HMIGO_SINGLE_ALARM_CLASS_ID.SINGLE_ALARM_ERROR' 1' stoeTxt'                                      varname + "_" + varnr.ToString()' bitnr);                                  //HMIGOObject.SingleAlarmInfoText = stoeOrt;//stoeTxt;                                  HMIGOObject.SingleAlarmText2ID = stoeOrt;                                  HMIGOObject.CommitSingleAlarm();                              }                              catch (System.Runtime.InteropServices.COMException ex)                              {                                  if (ex.ErrorCode != -2147467259) throw ex;                              }                                //errors += "\"D\"\t\"" + errNr.ToString() + "\"\t\"Alarms\"\t\"" + varname + "\"\t\"" + bitnr.ToString() + "\"\t\t\t\t\t\t\"0\"\t\"de-DE=" + stoeTxt + "\"\t\"en-US=" + stoeTxtEn + "\"\t\"de-DE=\"" + "\r\n";                              if (!chkFixedErrorNumber.Checked) errNr++;                          }                      }                  }              }              catch (System.Runtime.InteropServices.COMException ex)              {                  if (ex.ErrorCode == -2147195889)                      MessageBox.Show("Error: The Connection Name you specified does not exist!");                  else MessageBox.Show("Error: " + ex.Message);              }              catch (Exception ex)              {                  MessageBox.Show("Error: " + ex.Message);              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateWinCCErrorMessages_Click,The following statement contains a magic number: try              {                  S7DataBlock myDB =                      (S7DataBlock) ((BlocksOfflineFolder) blkFld).GetBlock((S7ProjectBlockInfo) lstListBox.SelectedItem);                    int cnt = 0;                    if (myDB.Structure != null && myDB.Structure.Children != null)                      cnt =                          ((S7DataRow) myDB.Structure.Children[myDB.Structure.Children.Count - 1]).NextBlockAddress                              .ByteAddress;                    string varname = "STOERUNGEN_DB" + myDB.BlockNumber;                    for (int n = 0; n < cnt/2; n++)                  {                      try                      {                          HMIGOObject.CreateTag(varname + "_" + (n + 1).ToString()'                              HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_UNSIGNED_16BIT_VALUE' txtConnectionName.Text'                              "DB" + myDB.BlockNumber + "'DD" + (n*2).ToString()' "Stoerungen");                      }                      catch (COMException ex)                      {                          if (ex.ErrorCode != -2147196408) throw ex;                      }                    }                    string errors = "";                    int errNr = Convert.ToInt32(txtStartErrorNumber.Text);                    foreach (S7DataRow plcDataRow in S7DataRow.GetChildrowsAsList(((S7DataRow) myDB.Structure)))                      // myDB.GetRowsAsList())                  {                      if (plcDataRow.DataType == S7DataRowType.BOOL && !string.IsNullOrEmpty(plcDataRow.Comment))                      {                          string stoeTxt = "";                          stoeTxt = plcDataRow.Comment;                            if (chkCombineStructComments.Checked)                          {                              var par = plcDataRow.Parent;                              while (par != null)                              {                                  stoeTxt = par.Comment + stoeTxt;                                  par = par.Parent;                              }                          }                              char anfC = plcDataRow.Comment[0];                          if (anfC.ToString() == txtErrPrefix.Text || !chkUseErrPrefix.Checked)                          {                              if (anfC.ToString() == txtErrPrefix.Text) stoeTxt = stoeTxt.Substring(1);                                ByteBitAddress akAddr = plcDataRow.BlockAddress;                              int varnr = (akAddr.ByteAddress/2) + 1;                                int bitnr = akAddr.BitAddress;                              if (akAddr.ByteAddress%2 == 0) bitnr += 8;                                  string stoeOrt = "";                              string stoeTxtEn = "";                                  if (stoeTxt.Contains(";"))                              {                                  stoeOrt = stoeTxt.Split(';')[0];                                  stoeTxt = stoeTxt.Split(';')[1];                              }                                if (chkFixedErrorNumber.Checked)                                  errNr = Convert.ToInt32(txtStartErrorNumber.Text) + akAddr.ByteAddress*8 +                                          akAddr.BitAddress;                                try                              {                                  HMIGOObject.CreateSingleAlarm(errNr'                                      HMIGENOBJECTSLib.HMIGO_SINGLE_ALARM_CLASS_ID.SINGLE_ALARM_ERROR' 1' stoeTxt'                                      varname + "_" + varnr.ToString()' bitnr);                                  //HMIGOObject.SingleAlarmInfoText = stoeOrt;//stoeTxt;                                  HMIGOObject.SingleAlarmText2ID = stoeOrt;                                  HMIGOObject.CommitSingleAlarm();                              }                              catch (System.Runtime.InteropServices.COMException ex)                              {                                  if (ex.ErrorCode != -2147467259) throw ex;                              }                                //errors += "\"D\"\t\"" + errNr.ToString() + "\"\t\"Alarms\"\t\"" + varname + "\"\t\"" + bitnr.ToString() + "\"\t\t\t\t\t\t\"0\"\t\"de-DE=" + stoeTxt + "\"\t\"en-US=" + stoeTxtEn + "\"\t\"de-DE=\"" + "\r\n";                              if (!chkFixedErrorNumber.Checked) errNr++;                          }                      }                  }              }              catch (System.Runtime.InteropServices.COMException ex)              {                  if (ex.ErrorCode == -2147195889)                      MessageBox.Show("Error: The Connection Name you specified does not exist!");                  else MessageBox.Show("Error: " + ex.Message);              }              catch (Exception ex)              {                  MessageBox.Show("Error: " + ex.Message);              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateWinCCErrorMessages_Click,The following statement contains a magic number: try              {                  S7DataBlock myDB =                      (S7DataBlock) ((BlocksOfflineFolder) blkFld).GetBlock((S7ProjectBlockInfo) lstListBox.SelectedItem);                    int cnt = 0;                    if (myDB.Structure != null && myDB.Structure.Children != null)                      cnt =                          ((S7DataRow) myDB.Structure.Children[myDB.Structure.Children.Count - 1]).NextBlockAddress                              .ByteAddress;                    string varname = "STOERUNGEN_DB" + myDB.BlockNumber;                    for (int n = 0; n < cnt/2; n++)                  {                      try                      {                          HMIGOObject.CreateTag(varname + "_" + (n + 1).ToString()'                              HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_UNSIGNED_16BIT_VALUE' txtConnectionName.Text'                              "DB" + myDB.BlockNumber + "'DD" + (n*2).ToString()' "Stoerungen");                      }                      catch (COMException ex)                      {                          if (ex.ErrorCode != -2147196408) throw ex;                      }                    }                    string errors = "";                    int errNr = Convert.ToInt32(txtStartErrorNumber.Text);                    foreach (S7DataRow plcDataRow in S7DataRow.GetChildrowsAsList(((S7DataRow) myDB.Structure)))                      // myDB.GetRowsAsList())                  {                      if (plcDataRow.DataType == S7DataRowType.BOOL && !string.IsNullOrEmpty(plcDataRow.Comment))                      {                          string stoeTxt = "";                          stoeTxt = plcDataRow.Comment;                            if (chkCombineStructComments.Checked)                          {                              var par = plcDataRow.Parent;                              while (par != null)                              {                                  stoeTxt = par.Comment + stoeTxt;                                  par = par.Parent;                              }                          }                              char anfC = plcDataRow.Comment[0];                          if (anfC.ToString() == txtErrPrefix.Text || !chkUseErrPrefix.Checked)                          {                              if (anfC.ToString() == txtErrPrefix.Text) stoeTxt = stoeTxt.Substring(1);                                ByteBitAddress akAddr = plcDataRow.BlockAddress;                              int varnr = (akAddr.ByteAddress/2) + 1;                                int bitnr = akAddr.BitAddress;                              if (akAddr.ByteAddress%2 == 0) bitnr += 8;                                  string stoeOrt = "";                              string stoeTxtEn = "";                                  if (stoeTxt.Contains(";"))                              {                                  stoeOrt = stoeTxt.Split(';')[0];                                  stoeTxt = stoeTxt.Split(';')[1];                              }                                if (chkFixedErrorNumber.Checked)                                  errNr = Convert.ToInt32(txtStartErrorNumber.Text) + akAddr.ByteAddress*8 +                                          akAddr.BitAddress;                                try                              {                                  HMIGOObject.CreateSingleAlarm(errNr'                                      HMIGENOBJECTSLib.HMIGO_SINGLE_ALARM_CLASS_ID.SINGLE_ALARM_ERROR' 1' stoeTxt'                                      varname + "_" + varnr.ToString()' bitnr);                                  //HMIGOObject.SingleAlarmInfoText = stoeOrt;//stoeTxt;                                  HMIGOObject.SingleAlarmText2ID = stoeOrt;                                  HMIGOObject.CommitSingleAlarm();                              }                              catch (System.Runtime.InteropServices.COMException ex)                              {                                  if (ex.ErrorCode != -2147467259) throw ex;                              }                                //errors += "\"D\"\t\"" + errNr.ToString() + "\"\t\"Alarms\"\t\"" + varname + "\"\t\"" + bitnr.ToString() + "\"\t\t\t\t\t\t\"0\"\t\"de-DE=" + stoeTxt + "\"\t\"en-US=" + stoeTxtEn + "\"\t\"de-DE=\"" + "\r\n";                              if (!chkFixedErrorNumber.Checked) errNr++;                          }                      }                  }              }              catch (System.Runtime.InteropServices.COMException ex)              {                  if (ex.ErrorCode == -2147195889)                      MessageBox.Show("Error: The Connection Name you specified does not exist!");                  else MessageBox.Show("Error: " + ex.Message);              }              catch (Exception ex)              {                  MessageBox.Show("Error: " + ex.Message);              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateWinCCTags_Click,The following statement contains a magic number: try              {                  foreach (S7DataRow plcDataRow in myLst)                  {                      string tagName = txtTagsPrefix.Text +                                       plcDataRow.StructuredName.Replace("."' "_")                                           .Replace("["' "_")                                           .Replace("]"' "")                                           .Replace(" "' "")                                           .Replace("'"' "_");                      try                      {                          switch (plcDataRow.DataType)                          {                              case S7DataRowType.BOOL:                                  HMIGOObject.CreateTag(tagName' HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_BINARY_TAG'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'D" + plcDataRow.BlockAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                              case S7DataRowType.INT:                                  HMIGOObject.CreateTag(tagName' HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_SIGNED_16BIT_VALUE'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'DW" + plcDataRow.BlockAddress.ByteAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                              case S7DataRowType.DINT:                                  HMIGOObject.CreateTag(tagName' HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_SIGNED_32BIT_VALUE'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'DD" + plcDataRow.BlockAddress.ByteAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                              case S7DataRowType.WORD:                                  HMIGOObject.CreateTag(tagName' HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_UNSIGNED_16BIT_VALUE'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'DW" + plcDataRow.BlockAddress.ByteAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                              case S7DataRowType.DWORD:                                  HMIGOObject.CreateTag(tagName' HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_UNSIGNED_32BIT_VALUE'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'DD" + plcDataRow.BlockAddress.ByteAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                              case S7DataRowType.BYTE:                                  HMIGOObject.CreateTag(tagName' HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_UNSIGNED_8BIT_VALUE'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'DBB" + plcDataRow.BlockAddress.ByteAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                              case S7DataRowType.REAL:                                  HMIGOObject.CreateTag(tagName'                                      HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_FLOATINGPOINT_NUMBER_32BIT_IEEE_754'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'DD" + plcDataRow.BlockAddress.ByteAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                          }                      }                      catch (System.Runtime.InteropServices.COMException ex)                      {                          if (ex.ErrorCode != -2147196408) throw ex;                          //Tag existiert schoin                                                  }                  }              }              catch (System.Runtime.InteropServices.COMException ex)              {                  if (ex.ErrorCode == -2147195889)                      MessageBox.Show("Error: The Connection Name you specified does not exist!");                  else MessageBox.Show("Error: " + ex.Message);              }              catch (Exception ex)              {                  MessageBox.Show("Error: " + ex.Message);              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateWinCCTags_Click,The following statement contains a magic number: try              {                  foreach (S7DataRow plcDataRow in myLst)                  {                      string tagName = txtTagsPrefix.Text +                                       plcDataRow.StructuredName.Replace("."' "_")                                           .Replace("["' "_")                                           .Replace("]"' "")                                           .Replace(" "' "")                                           .Replace("'"' "_");                      try                      {                          switch (plcDataRow.DataType)                          {                              case S7DataRowType.BOOL:                                  HMIGOObject.CreateTag(tagName' HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_BINARY_TAG'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'D" + plcDataRow.BlockAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                              case S7DataRowType.INT:                                  HMIGOObject.CreateTag(tagName' HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_SIGNED_16BIT_VALUE'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'DW" + plcDataRow.BlockAddress.ByteAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                              case S7DataRowType.DINT:                                  HMIGOObject.CreateTag(tagName' HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_SIGNED_32BIT_VALUE'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'DD" + plcDataRow.BlockAddress.ByteAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                              case S7DataRowType.WORD:                                  HMIGOObject.CreateTag(tagName' HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_UNSIGNED_16BIT_VALUE'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'DW" + plcDataRow.BlockAddress.ByteAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                              case S7DataRowType.DWORD:                                  HMIGOObject.CreateTag(tagName' HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_UNSIGNED_32BIT_VALUE'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'DD" + plcDataRow.BlockAddress.ByteAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                              case S7DataRowType.BYTE:                                  HMIGOObject.CreateTag(tagName' HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_UNSIGNED_8BIT_VALUE'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'DBB" + plcDataRow.BlockAddress.ByteAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                              case S7DataRowType.REAL:                                  HMIGOObject.CreateTag(tagName'                                      HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_FLOATINGPOINT_NUMBER_32BIT_IEEE_754'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'DD" + plcDataRow.BlockAddress.ByteAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                          }                      }                      catch (System.Runtime.InteropServices.COMException ex)                      {                          if (ex.ErrorCode != -2147196408) throw ex;                          //Tag existiert schoin                                                  }                  }              }              catch (System.Runtime.InteropServices.COMException ex)              {                  if (ex.ErrorCode == -2147195889)                      MessageBox.Show("Error: The Connection Name you specified does not exist!");                  else MessageBox.Show("Error: " + ex.Message);              }              catch (Exception ex)              {                  MessageBox.Show("Error: " + ex.Message);              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,fetchPLCData_Tick,The following statement contains a magic number: try              {                  if (myConn.Connected)                  {                          /* Get the ScrollViewer des XAML Trees (um scrollposition zu lesen!)... */                      if (myScrollViewer == null)                      {                          DependencyObject tst = VisualTreeHelper.GetChild(dataBlockViewControl.MyTree' 0);                          while (tst != null && tst.GetType() != typeof (ScrollViewer))                          {                              tst = VisualTreeHelper.GetChild(tst' 0);                          }                          if (tst != null)                          {                              myScrollViewer = (ScrollViewer) tst;                            }                      }                        //nur die angezeigten Values von der SPS lesen...                      int start = (int) myScrollViewer.VerticalOffset/20;                      if (valueList == null || start != oldPos)                      {                          List<S7DataRow> tmpLst = S7DataRow.GetChildrowsAsList(expRow).Cast<S7DataRow>().ToList();                          List<S7DataRow> askLst = new List<S7DataRow>();                          for (int n = 0; n < tmpLst.Count; n++)                          {                              if (n >= start && n < start + 24)                              {                                  askLst.Add(tmpLst[n]);                              }                          }                          valueList = S7DataRow.GetLibnoDaveValues(askLst);                          oldPos = start;                      }                      myConn.ReadValues(valueList);                  }                  else                  {                      oldPos = 0;                      myScrollViewer = null;                      fetchPLCData.Enabled = false;                      valueList = null;                      lblConnected.BackColor = Color.DarkGray;                  }              }              catch (Exception ex)              {                  lblStatus.Text = ex.Message;              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,fetchPLCData_Tick,The following statement contains a magic number: try              {                  if (myConn.Connected)                  {                          /* Get the ScrollViewer des XAML Trees (um scrollposition zu lesen!)... */                      if (myScrollViewer == null)                      {                          DependencyObject tst = VisualTreeHelper.GetChild(dataBlockViewControl.MyTree' 0);                          while (tst != null && tst.GetType() != typeof (ScrollViewer))                          {                              tst = VisualTreeHelper.GetChild(tst' 0);                          }                          if (tst != null)                          {                              myScrollViewer = (ScrollViewer) tst;                            }                      }                        //nur die angezeigten Values von der SPS lesen...                      int start = (int) myScrollViewer.VerticalOffset/20;                      if (valueList == null || start != oldPos)                      {                          List<S7DataRow> tmpLst = S7DataRow.GetChildrowsAsList(expRow).Cast<S7DataRow>().ToList();                          List<S7DataRow> askLst = new List<S7DataRow>();                          for (int n = 0; n < tmpLst.Count; n++)                          {                              if (n >= start && n < start + 24)                              {                                  askLst.Add(tmpLst[n]);                              }                          }                          valueList = S7DataRow.GetLibnoDaveValues(askLst);                          oldPos = start;                      }                      myConn.ReadValues(valueList);                  }                  else                  {                      oldPos = 0;                      myScrollViewer = null;                      fetchPLCData.Enabled = false;                      valueList = null;                      lblConnected.BackColor = Color.DarkGray;                  }              }              catch (Exception ex)              {                  lblStatus.Text = ex.Message;              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,searchPasswordToolStripMenuItem_Click,The following statement contains a magic number: int[] cnt = new int[8];
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,searchPasswordToolStripMenuItem_Click,The following statement contains a magic number: while (!pwdCorr)              {                  cnt[0]++;                  for (int n = 0; n < 7; n++)                  {                      if (cnt[n] >= zeichen.Length)                      {                          cnt[n + 1]++;                          cnt[n] = 0;                      }                  }                    if (cnt[7] >= zeichen.Length)                  {                      MessageBox.Show("Password not found!");                      return;                  }                      pwd = "";                  for (int n = 0; n < 8; n++)                  {                      pwd += zeichen[cnt[n]];                  }                    anz++;                  pwdCorr = myConn.PLCSendPassword(pwd.Trim());              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,searchPasswordToolStripMenuItem_Click,The following statement contains a magic number: while (!pwdCorr)              {                  cnt[0]++;                  for (int n = 0; n < 7; n++)                  {                      if (cnt[n] >= zeichen.Length)                      {                          cnt[n + 1]++;                          cnt[n] = 0;                      }                  }                    if (cnt[7] >= zeichen.Length)                  {                      MessageBox.Show("Password not found!");                      return;                  }                      pwd = "";                  for (int n = 0; n < 8; n++)                  {                      pwd += zeichen[cnt[n]];                  }                    anz++;                  pwdCorr = myConn.PLCSendPassword(pwd.Trim());              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,searchPasswordToolStripMenuItem_Click,The following statement contains a magic number: while (!pwdCorr)              {                  cnt[0]++;                  for (int n = 0; n < 7; n++)                  {                      if (cnt[n] >= zeichen.Length)                      {                          cnt[n + 1]++;                          cnt[n] = 0;                      }                  }                    if (cnt[7] >= zeichen.Length)                  {                      MessageBox.Show("Password not found!");                      return;                  }                      pwd = "";                  for (int n = 0; n < 8; n++)                  {                      pwd += zeichen[cnt[n]];                  }                    anz++;                  pwdCorr = myConn.PLCSendPassword(pwd.Trim());              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,createDokumentationToolStripMenuItem_Click,The following statement contains a magic number: foreach (var par in myFB.Parameter.Children)              {                  if (par.Name == "IN" || par.Name == "OUT" || par.Name == "IN_OUT")                      foreach (var par2 in par.Children)                      {                          html += "<b>" + par.Name.PadRight(6' ' ').Replace(" "' "&nbsp;") + ": <i>" + par2.Name +                                  "</i></b>";                          html += "<ul>";                          html += "&nbsp;&nbsp;&nbsp;&nbsp;" + par2.Comment;                          html += "</ul>";                      }              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,CreateHirachy,The following statement contains a magic number: if (prefix != "")                  retVal += prefix.Substring(0' prefix.Length - 3) + "---" + block.BlockName + Environment.NewLine;              else                  retVal += block.BlockName + Environment.NewLine;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,CreateHirachy,The following statement contains a magic number: foreach (var calledBlock in block.CalledBlocks.Distinct())              {                  var fld = block.ParentFolder as BlocksOfflineFolder;                  var blk = fld.GetBlock(calledBlock) as S7FunctionBlock;                    if (blk != null)                  {                      if (!parentBlocks.Contains(blk.BlockName))                      {                          retVal += CreateHirachy(prefix + spacer' blk' parentBlocks);                      }                      else                      {                          retVal += prefix + spacer.Substring(0'3) + "---" + blk.BlockName + " (recursive)" + Environment.NewLine;                      }                  }              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,CreateHirachy,The following statement contains a magic number: if (prefix != "")                  retVal += prefix.Substring(0' prefix.Length - 3) + "---" + block.BlockName + Environment.NewLine;              else                  retVal += block.BlockName + Environment.NewLine;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,CreateHirachy,The following statement contains a magic number: foreach (var calledBlock in block.CalledBlocks.Distinct())              {                  var fld = block.ParentFolder as Step5BlocksFolder;                  var blk = fld.GetBlock(calledBlock) as S5FunctionBlock;                    if (blk != null)                  {                      if (!parentBlocks.Contains(blk.BlockName))                      {                          retVal += CreateHirachy(prefix + spacer' blk' parentBlocks);                      }                      else                      {                          retVal += prefix + spacer.Substring(0' 3) + "---" + blk.BlockName + " (recursive)" + Environment.NewLine;                      }                  }              }
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblProjectInfo.Location = new System.Drawing.Point(100' 41);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblProjectInfo.Location = new System.Drawing.Point(100' 41);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblProjectInfo.Size = new System.Drawing.Size(690' 13);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblProjectInfo.Size = new System.Drawing.Size(690' 13);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblProjectInfo.TabIndex = 3;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblProjectName.Location = new System.Drawing.Point(100' 28);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblProjectName.Location = new System.Drawing.Point(100' 28);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblProjectName.Size = new System.Drawing.Size(643' 13);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblProjectName.Size = new System.Drawing.Size(643' 13);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblProjectName.TabIndex = 3;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.treeStep7Project.Location = new System.Drawing.Point(3' 3);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.treeStep7Project.Location = new System.Drawing.Point(3' 3);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.treeStep7Project.Size = new System.Drawing.Size(251' 164);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.treeStep7Project.Size = new System.Drawing.Size(251' 164);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.treeStep7Project.TabIndex = 4;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.imglstIconsForTreeview.Images.SetKeyName(2' "300er.png");
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.imglstIconsForTreeview.Images.SetKeyName(3' "400er.png");
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.imglstIconsForTreeview.Images.SetKeyName(4' "Rack300.png");
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.imglstIconsForTreeview.Images.SetKeyName(5' "rack400.png");
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.imglstIconsForTreeview.Images.SetKeyName(6' "Folder.png");
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.imglstIconsForTreeview.Images.SetKeyName(7' "im151.png");
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.imglstIconsForTreeview.Images.SetKeyName(8' "im151cpu.png");
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.imglstIconsForTreeview.Images.SetKeyName(9' "cp.png");
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.imglstIconsForTreeview.Images.SetKeyName(10' "s5.png");
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.dtaSymbolTable.Size = new System.Drawing.Size(499' 301);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.dtaSymbolTable.Size = new System.Drawing.Size(499' 301);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.dtaSymbolTable.TabIndex = 5;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstListBox.ItemHeight = 16;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstListBox.Location = new System.Drawing.Point(3' 3);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstListBox.Location = new System.Drawing.Point(3' 3);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstListBox.Size = new System.Drawing.Size(243' 234);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstListBox.Size = new System.Drawing.Size(243' 234);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstListBox.TabIndex = 6;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtTextBox.Size = new System.Drawing.Size(499' 301);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtTextBox.Size = new System.Drawing.Size(499' 301);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtTextBox.TabIndex = 7;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkShowDeleted.Location = new System.Drawing.Point(3' 280);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkShowDeleted.Location = new System.Drawing.Point(3' 280);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkShowDeleted.Size = new System.Drawing.Size(123' 18);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkShowDeleted.Size = new System.Drawing.Size(123' 18);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkShowDeleted.TabIndex = 8;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(3' 28);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(3' 28);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(112' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(112' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 3;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(3' 41);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(3' 41);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(112' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(112' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label4.TabIndex = 3;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdSetKnowHow.Location = new System.Drawing.Point(3' 3);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdSetKnowHow.Location = new System.Drawing.Point(3' 3);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdSetKnowHow.Size = new System.Drawing.Size(166' 24);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdSetKnowHow.Size = new System.Drawing.Size(166' 24);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdSetKnowHow.TabIndex = 10;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdRemoveKnowHow.Location = new System.Drawing.Point(175' 3);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdRemoveKnowHow.Location = new System.Drawing.Point(175' 3);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdRemoveKnowHow.Size = new System.Drawing.Size(184' 24);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdRemoveKnowHow.Size = new System.Drawing.Size(184' 24);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdRemoveKnowHow.TabIndex = 11;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdUndeleteBlock.Location = new System.Drawing.Point(3' 33);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdUndeleteBlock.Location = new System.Drawing.Point(3' 33);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdUndeleteBlock.Size = new System.Drawing.Size(164' 24);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdUndeleteBlock.Size = new System.Drawing.Size(164' 24);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdUndeleteBlock.TabIndex = 12;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtUndeleteName.Location = new System.Drawing.Point(173' 33);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtUndeleteName.Location = new System.Drawing.Point(173' 33);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtUndeleteName.Size = new System.Drawing.Size(68' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtUndeleteName.Size = new System.Drawing.Size(68' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtUndeleteName.TabIndex = 13;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.grpVisu.Location = new System.Drawing.Point(252' 3);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.grpVisu.Location = new System.Drawing.Point(252' 3);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.grpVisu.Size = new System.Drawing.Size(232' 234);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.grpVisu.Size = new System.Drawing.Size(232' 234);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.grpVisu.TabIndex = 16;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdWebfactoryTags.Location = new System.Drawing.Point(19' 365);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdWebfactoryTags.Location = new System.Drawing.Point(19' 365);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdWebfactoryTags.Size = new System.Drawing.Size(198' 23);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdWebfactoryTags.Size = new System.Drawing.Size(198' 23);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdWebfactoryTags.TabIndex = 7;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkCombineStructComments.Location = new System.Drawing.Point(19' 91);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkCombineStructComments.Location = new System.Drawing.Point(19' 91);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkCombineStructComments.Size = new System.Drawing.Size(208' 16);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkCombineStructComments.Size = new System.Drawing.Size(208' 16);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkCombineStructComments.TabIndex = 6;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCreateWinCCFlexibleTags.Location = new System.Drawing.Point(19' 345);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCreateWinCCFlexibleTags.Location = new System.Drawing.Point(19' 345);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCreateWinCCFlexibleTags.Size = new System.Drawing.Size(198' 23);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCreateWinCCFlexibleTags.Size = new System.Drawing.Size(198' 23);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCreateWinCCFlexibleTags.TabIndex = 5;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkExpandArrays.Location = new System.Drawing.Point(23' 280);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkExpandArrays.Location = new System.Drawing.Point(23' 280);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkExpandArrays.Size = new System.Drawing.Size(131' 21);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkExpandArrays.Size = new System.Drawing.Size(131' 21);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkExpandArrays.TabIndex = 4;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkUseErrPrefix.Location = new System.Drawing.Point(19' 107);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkUseErrPrefix.Location = new System.Drawing.Point(19' 107);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkUseErrPrefix.Size = new System.Drawing.Size(154' 16);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkUseErrPrefix.Size = new System.Drawing.Size(154' 16);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkUseErrPrefix.TabIndex = 4;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkFixedErrorNumber.Location = new System.Drawing.Point(19' 75);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkFixedErrorNumber.Location = new System.Drawing.Point(19' 75);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkFixedErrorNumber.Size = new System.Drawing.Size(171' 21);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkFixedErrorNumber.Size = new System.Drawing.Size(171' 21);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.chkFixedErrorNumber.TabIndex = 4;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label10.Location = new System.Drawing.Point(20' 223);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label10.Location = new System.Drawing.Point(20' 223);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label10.Size = new System.Drawing.Size(240' 68);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label10.Size = new System.Drawing.Size(240' 68);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label10.TabIndex = 3;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(16' 301);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(16' 301);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(96' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(96' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 2;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(16' 59);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(16' 59);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(152' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(152' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 2;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtTagsPrefix.Location = new System.Drawing.Point(100' 298);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtTagsPrefix.Location = new System.Drawing.Point(100' 298);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtTagsPrefix.Size = new System.Drawing.Size(113' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtTagsPrefix.Size = new System.Drawing.Size(113' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtErrPrefix.Location = new System.Drawing.Point(173' 105);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtErrPrefix.Location = new System.Drawing.Point(173' 105);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtErrPrefix.Size = new System.Drawing.Size(40' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtErrPrefix.Size = new System.Drawing.Size(40' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtStartErrorNumber.Location = new System.Drawing.Point(146' 57);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtStartErrorNumber.Location = new System.Drawing.Point(146' 57);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtStartErrorNumber.Size = new System.Drawing.Size(68' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtStartErrorNumber.Size = new System.Drawing.Size(68' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label9.Location = new System.Drawing.Point(6' 21);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label9.Location = new System.Drawing.Point(6' 21);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label9.Size = new System.Drawing.Size(136' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label9.Size = new System.Drawing.Size(136' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label9.TabIndex = 2;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtConnectionName.Location = new System.Drawing.Point(15' 37);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtConnectionName.Location = new System.Drawing.Point(15' 37);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtConnectionName.Size = new System.Drawing.Size(198' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.txtConnectionName.Size = new System.Drawing.Size(198' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCreateWinCCTags.Location = new System.Drawing.Point(19' 319);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCreateWinCCTags.Location = new System.Drawing.Point(19' 319);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCreateWinCCTags.Size = new System.Drawing.Size(198' 25);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCreateWinCCTags.Size = new System.Drawing.Size(198' 25);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCreateWinCCErrorMessages.Location = new System.Drawing.Point(19' 171);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCreateWinCCErrorMessages.Location = new System.Drawing.Point(19' 171);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCreateWinCCErrorMessages.Size = new System.Drawing.Size(198' 44);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCreateWinCCErrorMessages.Size = new System.Drawing.Size(198' 44);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCreateFlexibleErrorMessages.Location = new System.Drawing.Point(19' 128);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCreateFlexibleErrorMessages.Location = new System.Drawing.Point(19' 128);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCreateFlexibleErrorMessages.Size = new System.Drawing.Size(198' 44);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdCreateFlexibleErrorMessages.Size = new System.Drawing.Size(198' 44);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(3' 0);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(520' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(520' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.label5.TabIndex = 15;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.fetchPLCData.Interval = 300;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip.ImageScalingSize = new System.Drawing.Size(40' 40);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip.ImageScalingSize = new System.Drawing.Size(40' 40);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip.Location = new System.Drawing.Point(0' 399);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip.Padding = new System.Windows.Forms.Padding(1' 0' 13' 0);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip.Size = new System.Drawing.Size(766' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip.Size = new System.Drawing.Size(766' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip.TabIndex = 22;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblToolStripFileSystemFolder.Size = new System.Drawing.Size(600' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblToolStripFileSystemFolder.Size = new System.Drawing.Size(600' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblStatus.Size = new System.Drawing.Size(1' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblConnInfo.Size = new System.Drawing.Size(230' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblConnInfo.Size = new System.Drawing.Size(230' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabel1.Size = new System.Drawing.Size(13' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabel1.Size = new System.Drawing.Size(13' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblConnected.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(64))))' ((int)(((byte)(64))))' ((int)(((byte)(64)))));
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblConnected.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(64))))' ((int)(((byte)(64))))' ((int)(((byte)(64)))));
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblConnected.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(64))))' ((int)(((byte)(64))))' ((int)(((byte)(64)))));
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblConnected.Size = new System.Drawing.Size(19' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lblConnected.Size = new System.Drawing.Size(19' 17);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstProjects.ItemHeight = 16;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstProjects.Location = new System.Drawing.Point(3' 3);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstProjects.Location = new System.Drawing.Point(3' 3);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstProjects.Size = new System.Drawing.Size(161' 95);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstProjects.Size = new System.Drawing.Size(161' 95);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstProjects.TabIndex = 24;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdProjectsBrowser.Location = new System.Drawing.Point(170' 3);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdProjectsBrowser.Location = new System.Drawing.Point(170' 3);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdProjectsBrowser.Size = new System.Drawing.Size(78' 95);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdProjectsBrowser.Size = new System.Drawing.Size(78' 95);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.cmdProjectsBrowser.TabIndex = 25;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.ImageScalingSize = new System.Drawing.Size(40' 40);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.ImageScalingSize = new System.Drawing.Size(40' 40);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.Size = new System.Drawing.Size(766' 24);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.Size = new System.Drawing.Size(766' 24);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.TabIndex = 26;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.fileToolStripMenuItem.Size = new System.Drawing.Size(37' 20);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.fileToolStripMenuItem.Size = new System.Drawing.Size(37' 20);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.openToolStripMenuItem.Size = new System.Drawing.Size(103' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.openToolStripMenuItem.Size = new System.Drawing.Size(103' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.exitToolStripMenuItem.Size = new System.Drawing.Size(103' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.exitToolStripMenuItem.Size = new System.Drawing.Size(103' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.toolsToolStripMenuItem.Size = new System.Drawing.Size(54' 20);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.toolsToolStripMenuItem.Size = new System.Drawing.Size(54' 20);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.configConnectionToolStripMenuItem.Size = new System.Drawing.Size(232' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.configConnectionToolStripMenuItem.Size = new System.Drawing.Size(232' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.reachablePLCsToolStripMenuItem.Size = new System.Drawing.Size(232' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.reachablePLCsToolStripMenuItem.Size = new System.Drawing.Size(232' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstConnections.Size = new System.Drawing.Size(121' 23);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.lstConnections.Size = new System.Drawing.Size(121' 23);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(229' 6);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(229' 6);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.watchToolStripMenuItem.Size = new System.Drawing.Size(232' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.watchToolStripMenuItem.Size = new System.Drawing.Size(232' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.unwatchToolStripMenuItem.Size = new System.Drawing.Size(232' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.unwatchToolStripMenuItem.Size = new System.Drawing.Size(232' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size(229' 6);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size(229' 6);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.downloadOnlineBlockToolStripMenuItem.Size = new System.Drawing.Size(232' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.downloadOnlineBlockToolStripMenuItem.Size = new System.Drawing.Size(232' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator3.Size = new System.Drawing.Size(229' 6);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator3.Size = new System.Drawing.Size(229' 6);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.dBStructResizerToolStripMenuItem.Size = new System.Drawing.Size(232' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.dBStructResizerToolStripMenuItem.Size = new System.Drawing.Size(232' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.dataBlockValueSaveRestoreToolStripMenuItem.Size = new System.Drawing.Size(232' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.dataBlockValueSaveRestoreToolStripMenuItem.Size = new System.Drawing.Size(232' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator4.Size = new System.Drawing.Size(229' 6);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator4.Size = new System.Drawing.Size(229' 6);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.searchPasswordToolStripMenuItem.Size = new System.Drawing.Size(232' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.searchPasswordToolStripMenuItem.Size = new System.Drawing.Size(232' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.optionsToolStripMenuItem.Size = new System.Drawing.Size(61' 20);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.optionsToolStripMenuItem.Size = new System.Drawing.Size(61' 20);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.convertCallsToolStripMenuItem.Size = new System.Drawing.Size(204' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.convertCallsToolStripMenuItem.Size = new System.Drawing.Size(204' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.mnuExpandDatablockArrays.Size = new System.Drawing.Size(204' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.mnuExpandDatablockArrays.Size = new System.Drawing.Size(204' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.toolsToolStripMenuItem1.Size = new System.Drawing.Size(47' 20);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.toolsToolStripMenuItem1.Size = new System.Drawing.Size(47' 20);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.createDokumentationToolStripMenuItem.Size = new System.Drawing.Size(194' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.createDokumentationToolStripMenuItem.Size = new System.Drawing.Size(194' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.parseAllBlocksToolStripMenuItem.Size = new System.Drawing.Size(194' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.parseAllBlocksToolStripMenuItem.Size = new System.Drawing.Size(194' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.createAWLToolStripMenuItem.Size = new System.Drawing.Size(194' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.createAWLToolStripMenuItem.Size = new System.Drawing.Size(194' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.dependenciesToolStripMenuItem.Size = new System.Drawing.Size(194' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.dependenciesToolStripMenuItem.Size = new System.Drawing.Size(194' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.callHirachyToolStripMenuItem.Size = new System.Drawing.Size(194' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.callHirachyToolStripMenuItem.Size = new System.Drawing.Size(194' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.helpToolStripMenuItem.Size = new System.Drawing.Size(44' 20);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.helpToolStripMenuItem.Size = new System.Drawing.Size(44' 20);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.featuresToolStripMenuItem.Size = new System.Drawing.Size(118' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.featuresToolStripMenuItem.Size = new System.Drawing.Size(118' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.mainSplitContainer.Location = new System.Drawing.Point(3' 71);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.mainSplitContainer.Location = new System.Drawing.Point(3' 71);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.mainSplitContainer.Size = new System.Drawing.Size(760' 301);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.mainSplitContainer.Size = new System.Drawing.Size(760' 301);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.mainSplitContainer.SplitterDistance = 257;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.mainSplitContainer.TabIndex = 26;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.chkShowDeleted' 0' 2);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.RowCount = 3;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Size = new System.Drawing.Size(257' 301);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Size = new System.Drawing.Size(257' 301);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel2.ColumnCount = 2;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel2.Location = new System.Drawing.Point(3' 173);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel2.Location = new System.Drawing.Point(3' 173);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel2.Size = new System.Drawing.Size(251' 101);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel2.Size = new System.Drawing.Size(251' 101);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.viewBlockList.Size = new System.Drawing.Size(499' 301);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.viewBlockList.Size = new System.Drawing.Size(499' 301);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel3.Location = new System.Drawing.Point(3' 18);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel3.Location = new System.Drawing.Point(3' 18);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel3.RowCount = 2;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel3.Size = new System.Drawing.Size(493' 280);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel3.Size = new System.Drawing.Size(493' 280);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.flowLayoutPanel1.Location = new System.Drawing.Point(3' 249);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.flowLayoutPanel1.Location = new System.Drawing.Point(3' 249);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.flowLayoutPanel1.Size = new System.Drawing.Size(487' 28);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.flowLayoutPanel1.Size = new System.Drawing.Size(487' 28);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.flowLayoutPanel1.TabIndex = 11;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanelVisu.ColumnCount = 2;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanelVisu.Location = new System.Drawing.Point(3' 3);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanelVisu.Location = new System.Drawing.Point(3' 3);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanelVisu.Size = new System.Drawing.Size(487' 240);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanelVisu.Size = new System.Drawing.Size(487' 240);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanelVisu.TabIndex = 12;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.datablockView.Size = new System.Drawing.Size(499' 301);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.datablockView.Size = new System.Drawing.Size(499' 301);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.datablockView.TabIndex = 17;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.hexBox.ShadowSelectionColor = System.Drawing.Color.FromArgb(((int)(((byte)(100))))' ((int)(((byte)(60))))' ((int)(((byte)(188))))' ((int)(((byte)(255)))));
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.hexBox.ShadowSelectionColor = System.Drawing.Color.FromArgb(((int)(((byte)(100))))' ((int)(((byte)(60))))' ((int)(((byte)(188))))' ((int)(((byte)(255)))));
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.hexBox.ShadowSelectionColor = System.Drawing.Color.FromArgb(((int)(((byte)(100))))' ((int)(((byte)(60))))' ((int)(((byte)(188))))' ((int)(((byte)(255)))));
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.hexBox.ShadowSelectionColor = System.Drawing.Color.FromArgb(((int)(((byte)(100))))' ((int)(((byte)(60))))' ((int)(((byte)(188))))' ((int)(((byte)(255)))));
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.hexBox.Size = new System.Drawing.Size(499' 301);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.hexBox.Size = new System.Drawing.Size(499' 301);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.hexBox.TabIndex = 18;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.dtaPnPbList.Size = new System.Drawing.Size(499' 301);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.dtaPnPbList.Size = new System.Drawing.Size(499' 301);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.dtaPnPbList.TabIndex = 19;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.exportMenu.ImageScalingSize = new System.Drawing.Size(40' 40);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.exportMenu.ImageScalingSize = new System.Drawing.Size(40' 40);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.exportMenu.Size = new System.Drawing.Size(108' 26);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.exportMenu.Size = new System.Drawing.Size(108' 26);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.export.Size = new System.Drawing.Size(107' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.export.Size = new System.Drawing.Size(107' 22);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel5.Location = new System.Drawing.Point(0' 24);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel5.RowCount = 2;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel5.Size = new System.Drawing.Size(766' 375);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel5.Size = new System.Drawing.Size(766' 375);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel5.TabIndex = 28;
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Location = new System.Drawing.Point(3' 3);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Location = new System.Drawing.Point(3' 3);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(760' 62);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(760' 62);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(766' 421);
Magic Number,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(766' 421);
Missing Default,Be.Windows.Forms,KeyInterpreter,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PreProcessWmKeyUp,The following switch statement is missing a default case: switch (keyData)  				{  					case Keys.ShiftKey:  					case Keys.Insert:  						if (RaiseKeyUp(keyData))  							return true;  						break;  				}
Missing Default,Be.Windows.Forms,StringKeyInterpreter,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\HexBox\HexBox.cs,PreProcessWmKeyDown,The following switch statement is missing a default case: switch (keyData)  				{  					case Keys.Tab | Keys.Shift:  					case Keys.Tab:  						if (RaiseKeyDown(keyData))  							return true;  						break;  				}
Missing Default,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateWinCCTags_Click,The following switch statement is missing a default case: switch (plcDataRow.DataType)                          {                              case S7DataRowType.BOOL:                                  HMIGOObject.CreateTag(tagName' HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_BINARY_TAG'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'D" + plcDataRow.BlockAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                              case S7DataRowType.INT:                                  HMIGOObject.CreateTag(tagName' HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_SIGNED_16BIT_VALUE'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'DW" + plcDataRow.BlockAddress.ByteAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                              case S7DataRowType.DINT:                                  HMIGOObject.CreateTag(tagName' HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_SIGNED_32BIT_VALUE'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'DD" + plcDataRow.BlockAddress.ByteAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                              case S7DataRowType.WORD:                                  HMIGOObject.CreateTag(tagName' HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_UNSIGNED_16BIT_VALUE'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'DW" + plcDataRow.BlockAddress.ByteAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                              case S7DataRowType.DWORD:                                  HMIGOObject.CreateTag(tagName' HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_UNSIGNED_32BIT_VALUE'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'DD" + plcDataRow.BlockAddress.ByteAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                              case S7DataRowType.BYTE:                                  HMIGOObject.CreateTag(tagName' HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_UNSIGNED_8BIT_VALUE'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'DBB" + plcDataRow.BlockAddress.ByteAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                              case S7DataRowType.REAL:                                  HMIGOObject.CreateTag(tagName'                                      HMIGENOBJECTSLib.HMIGO_TAG_TYPE.TAG_FLOATINGPOINT_NUMBER_32BIT_IEEE_754'                                      txtConnectionName.Text'                                      "DB" + myDB.BlockNumber + "'DD" + plcDataRow.BlockAddress.ByteAddress.ToString()'                                      "TAGS_DB" + myDB.BlockNumber);                                  break;                          }
Missing Default,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateWinCCFlexibleTags_Click,The following switch statement is missing a default case: switch (plcDataRow.DataType)                  {                      case S7DataRowType.BOOL:                          tags += tagName + ";" + txtConnectionName.Text + ";DB " + myDB.BlockNumber + " DBX " +                                  plcDataRow.BlockAddress.ByteAddress.ToString() + "." +                                  plcDataRow.BlockAddress.BitAddress.ToString() + ";Bool;;" + "1" +                                  ";2;1 s;;;;;0;10;0;100;0;;0;\r\n";                          break;                      case S7DataRowType.INT:                          tags += tagName + ";" + txtConnectionName.Text + ";DB " + myDB.BlockNumber + " DBW " +                                  plcDataRow.BlockAddress.ByteAddress.ToString() + ";Int;;" + "1" +                                  ";2;1 s;;;;;0;10;0;100;0;;0;\r\n";                          break;                      case S7DataRowType.DINT:                          tags += tagName + ";" + txtConnectionName.Text + ";DB " + myDB.BlockNumber + " DBD " +                                  plcDataRow.BlockAddress.ByteAddress.ToString() + ";DInt;;" + "1" +                                  ";2;1 s;;;;;0;10;0;100;0;;0;\r\n";                          break;                      case S7DataRowType.WORD:                          tags += tagName + ";" + txtConnectionName.Text + ";DB " + myDB.BlockNumber + " DBW " +                                  plcDataRow.BlockAddress.ByteAddress.ToString() + ";Word;;" + "1" +                                  ";2;1 s;;;;;0;10;0;100;0;;0;\r\n";                          break;                      case S7DataRowType.DWORD:                          tags += tagName + ";" + txtConnectionName.Text + ";DB " + myDB.BlockNumber + " DBD " +                                  plcDataRow.BlockAddress.ByteAddress.ToString() + ";DWord;;" + "1" +                                  ";2;1 s;;;;;0;10;0;100;0;;0;\r\n";                          break;                      case S7DataRowType.BYTE:                          tags += tagName + ";" + txtConnectionName.Text + ";DB " + myDB.BlockNumber + " DBB " +                                  plcDataRow.BlockAddress.ByteAddress.ToString() + ";Byte;;" + "1" +                                  ";2;1 s;;;;;0;10;0;100;0;;0;\r\n";                          break;                      case S7DataRowType.REAL:                          tags += tagName + ";" + txtConnectionName.Text + ";DB " + myDB.BlockNumber + " DBD " +                                  plcDataRow.BlockAddress.ByteAddress.ToString() + ";Real;;" + "1" +                                  ";2;1 s;;;;;0;10;0;100;0;;0;\r\n";                          break;                      case S7DataRowType.CHAR:                          if (plcDataRow.IsArray)                              tags += tagName + ";" + txtConnectionName.Text + ";DB " + myDB.BlockNumber + " DBB " +                                      plcDataRow.BlockAddress.ByteAddress.ToString() + ";StringChar;" +                                      plcDataRow.GetArrayLines().ToString() + ";" + "1" +                                      ";2;1 s;;;;;0;10;0;100;0;;0;\r\n";                          else                              tags += tagName + ";" + txtConnectionName.Text + ";DB " + myDB.BlockNumber + " DBB " +                                      plcDataRow.BlockAddress.ByteAddress.ToString() + ";Char;;" + "1" +                                      ";2;1 s;;;;;0;10;0;100;0;;0;\r\n";                          break;                      case S7DataRowType.COUNTER:                          tags += tagName + ";" + txtConnectionName.Text + ";DB " + myDB.BlockNumber + " DBW " +                                  plcDataRow.BlockAddress.ByteAddress.ToString() + ";Counter;;" + "1" +                                  ";2;1 s;;;;;0;10;0;100;0;;0;\r\n";                          break;                      case S7DataRowType.DATE:                          tags += tagName + ";" + txtConnectionName.Text + ";DB " + myDB.BlockNumber + " DBD " +                                  plcDataRow.BlockAddress.ByteAddress.ToString() + ";Date;;" + "1" +                                  ";2;1 s;;;;;0;10;0;100;0;;0;\r\n";                          break;                      case S7DataRowType.DATE_AND_TIME:                          tags += tagName + ";" + txtConnectionName.Text + ";DB " + myDB.BlockNumber + " DBB " +                                  plcDataRow.BlockAddress.ByteAddress.ToString() + ";Date and Time;;" + "1" +                                  ";2;1 s;;;;;0;10;0;100;0;;0;\r\n";                          break;                      case S7DataRowType.S5TIME:                          tags += tagName + ";" + txtConnectionName.Text + ";DB " + myDB.BlockNumber + " DBW " +                                  plcDataRow.BlockAddress.ByteAddress.ToString() + ";Timer;;" + "1" +                                  ";2;1 s;;;;;0;10;0;100;0;;0;\r\n";                          break;                      case S7DataRowType.STRING:                          tags += tagName + ";" + txtConnectionName.Text + ";DB " + myDB.BlockNumber + " DBB " +                                  plcDataRow.BlockAddress.ByteAddress.ToString() + ";String;" +                                  plcDataRow.StringSize.ToString() + ";" + "1" + ";2;1 s;;;;;0;10;0;100;0;;0;\r\n";                          break;                      case S7DataRowType.TIME:                          tags += tagName + ";" + txtConnectionName.Text + ";DB " + myDB.BlockNumber + " DBD " +                                  plcDataRow.BlockAddress.ByteAddress.ToString() + ";Time;;" + "1" +                                  ";2;1 s;;;;;0;10;0;100;0;;0;\r\n";                          break;                      case S7DataRowType.TIME_OF_DAY:                          tags += tagName + ";" + txtConnectionName.Text + ";DB " + myDB.BlockNumber + " DBD " +                                  plcDataRow.BlockAddress.ByteAddress.ToString() + ";Time of Day;;" + "1" +                                  ";2;1 s;;;;;0;10;0;100;0;;0;\r\n";                          break;                      case S7DataRowType.TIMER:                          tags += tagName + ";" + txtConnectionName.Text + ";DB " + myDB.BlockNumber + " DBW " +                                  plcDataRow.BlockAddress.ByteAddress.ToString() + ";Timer;;" + "1" +                                  ";2;1 s;;;;;0;10;0;100;0;;0;\r\n";                          break;                  }
Missing Default,JFK_VarTab,Form1,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\TestProjectFileFunctions\MainWindow.cs,cmdCreateWEBfactoryTags_Click,The following switch statement is missing a default case: switch (plcDataRow.DataType)                  {                      case S7DataRowType.BOOL:                          tag.OPCItemName = txtTagsPrefix.Text + "." + "DB" + myDB.BlockNumber + "." + "X" +                                            plcDataRow.BlockAddress.ByteAddress.ToString() + "." +                                            plcDataRow.BlockAddress.BitAddress.ToString();                          break;                      case S7DataRowType.BYTE:                          tag.OPCItemName = txtTagsPrefix.Text + "." + "DB" + myDB.BlockNumber + "." + "B" +                                            plcDataRow.BlockAddress.ByteAddress.ToString();                          break;                      case S7DataRowType.WORD:                          tag.OPCItemName = txtTagsPrefix.Text + "." + "DB" + myDB.BlockNumber + "." + "W" +                                            plcDataRow.BlockAddress.ByteAddress.ToString();                          break;                      case S7DataRowType.INT:                          tag.OPCItemName = txtTagsPrefix.Text + "." + "DB" + myDB.BlockNumber + "." + "I" +                                            plcDataRow.BlockAddress.ByteAddress.ToString();                          break;                      case S7DataRowType.REAL:                          tag.OPCItemName = txtTagsPrefix.Text + "." + "DB" + myDB.BlockNumber + "." + "R" +                                            plcDataRow.BlockAddress.ByteAddress.ToString();                          break;                      case S7DataRowType.STRING:                          tag.OPCItemName = txtTagsPrefix.Text + "." + "DB" + myDB.BlockNumber + "." + "S" +                                            plcDataRow.BlockAddress.ByteAddress.ToString() + "." +                                            plcDataRow.StringSize.ToString();                          break;                      case S7DataRowType.STRUCT:                      {                          if (!plcDataRow.Children.Any(itm => itm.DataType != S7DataRowType.CHAR))                          {                              tag.OPCItemName = txtTagsPrefix.Text + "." + "DB" + myDB.BlockNumber + "." + "S" +                                                plcDataRow.BlockAddress.ByteAddress.ToString() + "." +                                                plcDataRow.ByteLength.ToString();                          }                      }                          break;                      case S7DataRowType.DWORD:                          tag.OPCItemName = txtTagsPrefix.Text + "." + "DB" + myDB.BlockNumber + "." + "DW" +                                            plcDataRow.BlockAddress.ByteAddress.ToString();                          break;                      case S7DataRowType.DINT:                          tag.OPCItemName = txtTagsPrefix.Text + "." + "DB" + myDB.BlockNumber + "." + "DI" +                                            plcDataRow.BlockAddress.ByteAddress.ToString();                          break;                  }
