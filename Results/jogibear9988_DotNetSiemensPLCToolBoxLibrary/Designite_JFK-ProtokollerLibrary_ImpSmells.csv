Implementation smell,Namespace,Class,File,Method,Description
Long Method,DotNetSimaticDatabaseProtokollerLibrary.Databases.MySQL,MySQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MySQL\MySQLStorage.cs,CreateOrModify_TablesAndFields,The method has 130 lines of code.
Long Method,DotNetSimaticDatabaseProtokollerLibrary.Databases.PostgreSQL,PostgreSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\PostgreSQL\PostgreSQLStorage.cs,CreateOrModify_TablesAndFields,The method has 121 lines of code.
Long Method,DotNetSimaticDatabaseProtokollerLibrary.Databases.PostgreSQL,PostgreSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\PostgreSQL\PostgreSQLStorage.cs,_internal_Write,The method has 140 lines of code.
Long Method,DotNetSimaticDatabaseProtokollerLibrary.Databases.SQLite,SQLLiteStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\SQLite\SQLLiteStorage.cs,_internal_Write,The method has 116 lines of code.
Long Method,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,PLCTagTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\PLCTagTriggerThread.cs,WaitForTrigger,The method has 134 lines of code.
Long Method,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,CheckConfiguration,The method has 150 lines of code.
Complex Method,DotNetSimaticDatabaseProtokollerLibrary.Databases.Excel,Excel2007Storage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\Excel2007\Excel2007Storage.cs,_internal_Write,Cyclomatic complexity of the method is 11
Complex Method,DotNetSimaticDatabaseProtokollerLibrary.Databases.Excel,ExcelStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\Excel\ExcelStorage.cs,_internal_Write,Cyclomatic complexity of the method is 9
Complex Method,DotNetSimaticDatabaseProtokollerLibrary.Databases.Excel,ExcelStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\Excel\ExcelStorage.cs,ReadData,Cyclomatic complexity of the method is 8
Complex Method,DotNetSimaticDatabaseProtokollerLibrary.Databases.CSVFile,CSVStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\CSVFile\CSVStorage.cs,_internal_Write,Cyclomatic complexity of the method is 10
Complex Method,DotNetSimaticDatabaseProtokollerLibrary.Databases.Firebird,FirebirdStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\Firebird\FirebirdStorage.cs,CreateOrModify_TablesAndFields,Cyclomatic complexity of the method is 8
Complex Method,DotNetSimaticDatabaseProtokollerLibrary.Databases.MsSQL,MsSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MsSQL\MsSQLStorage.cs,CreateOrModify_TablesAndFields,Cyclomatic complexity of the method is 9
Complex Method,DotNetSimaticDatabaseProtokollerLibrary.Databases.MsSQL,MsSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MsSQL\MsSQLStorage.cs,ReadData,Cyclomatic complexity of the method is 8
Complex Method,DotNetSimaticDatabaseProtokollerLibrary.Databases.MySQL,MySQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MySQL\MySQLStorage.cs,CreateOrModify_TablesAndFields,Cyclomatic complexity of the method is 9
Complex Method,DotNetSimaticDatabaseProtokollerLibrary.Databases.PostgreSQL,PostgreSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\PostgreSQL\PostgreSQLStorage.cs,CreateOrModify_TablesAndFields,Cyclomatic complexity of the method is 9
Complex Method,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ProtokollerInstance,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\PolicyServer.cs,Dispose,Cyclomatic complexity of the method is 10
Complex Method,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,TimeTriggerWithCheckForChangesThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\TimeTriggerWithCheckForChangesThread.cs,WaitForTrigger,Cyclomatic complexity of the method is 8
Complex Method,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,PLCTagTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\PLCTagTriggerThread.cs,WaitForTrigger,Cyclomatic complexity of the method is 9
Complex Method,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,CheckConfiguration,Cyclomatic complexity of the method is 30
Long Parameter List,DotNetSimaticDatabaseProtokollerLibrary.Common,NetworkShare,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Common\NetworkShare.cs,FormatMessage,The method has 7 parameters. Parameters: dwFlags' lpSource' dwMessageId' dwLanguageId' lpBuffer' nSize' Arguments
Long Parameter List,DotNetSimaticDatabaseProtokollerLibrary.Databases.MultiStorage,MultiStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MultiStorage\MultiStorage.cs,ReadData,The method has 6 parameters. Parameters: datasetConfig' filter' Start' Count' FromDate' ToDate
Long Parameter List,DotNetSimaticDatabaseProtokollerLibrary.Databases.Excel,ExcelStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\Excel\ExcelStorage.cs,ReadData,The method has 6 parameters. Parameters: datasetConfig' filter' Start' Count' Fromdate' ToDate
Long Parameter List,DotNetSimaticDatabaseProtokollerLibrary.Databases.CSVFile,CSVStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\CSVFile\CSVStorage.cs,ReadData,The method has 6 parameters. Parameters: datasetConfig' filter' Start' Count' Fromdate' ToDate
Long Parameter List,DotNetSimaticDatabaseProtokollerLibrary.Databases.Interfaces,IDBViewable,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\Interfaces\IDBViewable.cs,ReadData,The method has 6 parameters. Parameters: datasetConfig' filter' Start' Count' FromDate' ToDate
Long Parameter List,DotNetSimaticDatabaseProtokollerLibrary.Databases.MsSQL,MsSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MsSQL\MsSQLStorage.cs,ReadData,The method has 6 parameters. Parameters: datasetConfig' filter' Start' Count' FromDate' ToDate
Long Parameter List,DotNetSimaticDatabaseProtokollerLibrary.Databases.MySQL,MySQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MySQL\MySQLStorage.cs,ReadData,The method has 6 parameters. Parameters: datasetConfig' filter' Start' Count' Fromdate' ToDate
Long Parameter List,DotNetSimaticDatabaseProtokollerLibrary.Databases.PostgreSQL,PostgreSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\PostgreSQL\PostgreSQLStorage.cs,ReadData,The method has 6 parameters. Parameters: datasetConfig' filter' Start' Count' Fromdate' ToDate
Long Parameter List,DotNetSimaticDatabaseProtokollerLibrary.wcfService,IProtocolService,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\IProtocolService.cs,GetProtocolData,The method has 6 parameters. Parameters: storageName' startRow' maxRows' filter' FromDate' ToDate
Long Parameter List,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ProtokollerInstance,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\PolicyServer.cs,GetProtocolData,The method has 6 parameters. Parameters: storageName' startRow' maxRows' filter' FromDate' ToDate
Long Parameter List,DotNetSimaticDatabaseProtokollerLibrary.Databases.SQLite,SQLLiteStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\SQLite\SQLLiteStorage.cs,ReadData,The method has 6 parameters. Parameters: datasetConfig' filter' Start' Count' Fromdate' ToDate
Long Parameter List,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,PLCTagTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\PLCTagTriggerThread.cs,PLCTagTriggerThread,The method has 5 parameters. Parameters: dbInterface' datasetConfig' activConnections' StartedAsService' onlyUseOneTag
Long Identifier,DotNetSimaticDatabaseProtokollerLibrary.SettingsClasses.Storage,MsSQLConfig,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\SettingsClasses\Storage\MsSQLConfig.cs,,The length of the parameter _combineMultipleInsertsInATransaction is 37.
Long Identifier,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ProtokollerInstance,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\PolicyServer.cs,,The length of the parameter myReEstablishConnectionsThreads is 31.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.aspx,AspxNetEngine,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\aspx\AspxNetEngine.cs,ToString,The length of the statement  "            return String.Format(new CultureInfo("En-us")'"AspNetEngine: (ID : {0})' (Virtual Alias  : {1})' (Physical Directory : {2})"' 1' m_VirtualAlias' m_PhysicalDirectory); " is 166.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.aspx,AspxNetEngine,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\aspx\AspxNetEngine.cs,ProcessRequest,The length of the statement  "                if (page != null && (page.ToLower().EndsWith("gif") || page.ToLower().EndsWith("jpg") || page.ToLower().EndsWith("png") || page.ToLower().EndsWith("html")) && File.Exists(Path.Combine(m_PhysicalDirectory' page))) " is 212.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.aspx,AspxVirtualRoot,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\aspx\AspxVirtualRoot.cs,ContextReceivedCallback,The length of the statement  "                m_AspNetEngine.ExecutingAppDomain.ProcessRequest(pageRequested' listenerContext.Request.Url.Query.Replace("?"' "")' dataHolder); " is 128.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Common,IpAddressConverter,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Common\IpAddressConverter.cs,ReadJson,The length of the statement  "            //return new Size(double.Parse(chars[0]' CultureInfo.InvariantCulture)' double.Parse(chars[1]' CultureInfo.InvariantCulture)); " is 126.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Common,Logging,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Common\Logging.cs,_internalSend,The length of the statement  "                    Body += "\r\n ***** Timestamp: " + _DateTimesList[i].ToString() + " ***** Message " + (i + 1) + "/" + _maxAdd + " ***** ***** \r\n " + _stringMessageList[i].ToString(); " is 168.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Common,Logging,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Common\Logging.cs,_internalSend,The length of the statement  "            SmtpClient MailClient = new SmtpClient(ProtokollerConfiguration.ActualConfigInstance.SmtpServer' ProtokollerConfiguration.ActualConfigInstance.SmtpPort); " is 153.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Common,Logging,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Common\Logging.cs,_internalSend,The length of the statement  "                System.Net.NetworkCredential Credential = new System.Net.NetworkCredential(ProtokollerConfiguration.ActualConfigInstance.SmtpUsername' ProtokollerConfiguration.ActualConfigInstance.SmtpPassword); " is 195.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.CSVFile,CSVStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\CSVFile\CSVStorage.cs,Connect_To_Database,The length of the statement  "                    networkShare = new NetworkShare(Path.GetDirectoryName(myConfig.Textfile)' myConfig.NetworkUserName' myConfig.NetworkPassword); " is 126.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.Firebird,FirebirdStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\Firebird\FirebirdStorage.cs,CreateOrModify_TablesAndFields,The length of the statement  "            if (!string.IsNullOrEmpty(datasetConfig.DatasetTableName)) //Add the posibility to use a specific table_name (for using the table more then ones) " is 145.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.Firebird,FirebirdStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\Firebird\FirebirdStorage.cs,_internal_Write,The length of the statement  "                                myCmd.Parameters.Add(new FbParameter("@" + field.DatabaseField' System.Data.DbType.String) {Value = value.ToString().Replace('''' '.')}); " is 137.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.Firebird,FirebirdStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\Firebird\FirebirdStorage.cs,_internal_Write,The length of the statement  "                                myCmd.Parameters.Add(new FbParameter("@" + field.DatabaseField' System.Data.DbType.String) {Value = ((DateTime) value).ToString("dd-MM-yyyy HH:mm:ss")}); " is 153.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.Firebird,FirebirdStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\Firebird\FirebirdStorage.cs,_internal_Write,The length of the statement  "                string delstr = "DELETE FROM " + myProtokollDaten.DataBaseTable + " WHERE id <= (SELECT max(id) FROM " + myProtokollDaten.DataBaseTable + ") - (" + myProtokollDaten.MaxDatasets.ToString() + ")"; " is 194.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.Interfaces,DBBaseClass,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\Interfaces\DBBaseClass.cs,Initiate,The length of the statement  "                    "Database Initialised: " + datasetConfig.Storage.Name + "'" + datasetConfig.DatasetTableName + "' " + datasetConfig.Name' " is 121.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.MsSQL,MsSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MsSQL\MsSQLStorage.cs,CreateOrModify_TablesAndFields,The length of the statement  "            if (!string.IsNullOrEmpty(datasetConfig.DatasetTableName)) //Add the posibility to use a specific table_name (for using the table more then ones) " is 145.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.MsSQL,MsSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MsSQL\MsSQLStorage.cs,_internal_Write,The length of the statement  "                                    if (field.DatabaseFieldType == "text" || field.DatabaseFieldType == "varchar" || field.DatabaseFieldType == "ntext" || field.DatabaseFieldType == "nvarchar" || field.DatabaseFieldType == "char" || field.DatabaseFieldType == "nchar") " is 232.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.MsSQL,MsSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MsSQL\MsSQLStorage.cs,_internal_Write,The length of the statement  "                        string delstr = "DELETE FROM " + dataTable + " WHERE id <= (SELECT max(id) FROM " + dataTable + ") - (" + datasetConfig.MaxDatasets.ToString() + ")"; " is 149.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.MsSQL,MsSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MsSQL\MsSQLStorage.cs,ReadData,The length of the statement  "            readCmd.CommandText = "WITH " + datasetConfig.Name + "_withRowNumber AS ( SELECT *' ROW_NUMBER() OVER (ORDER BY id DESC) AS 'RowNumber' FROM " + datasetConfig.Name + where + " ) SELECT * FROM " + datasetConfig.Name + "_withRowNumber WHERE RowNumber BETWEEN " + Start.ToString() + " AND " + (Start + Count).ToString() + ";"; " is 323.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.MsSQL,MsSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MsSQL\MsSQLStorage.cs,ReadData,The length of the statement  "            //readCmd.CommandText = "SELECT *' ROW_NUMBER() OVER(ORDER BY id DESC) AS [RowNum] FROM " + datasetConfig.Name + " WHERE RowNum BETWEEN " + Start.ToString() + " AND " + (Start + Count).ToString(); " is 196.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.MsSQL,MsSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MsSQL\MsSQLStorage.cs,ReadData,The length of the statement  "            //readCmd.CommandText = "SELECT * FROM " + datasetConfig.Name + " ORDER BY id DESC LIMIT " + Count.ToString() + " OFFSET " + Start.ToString(); " is 142.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.MySQL,MySQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MySQL\MySQLStorage.cs,CreateOrModify_TablesAndFields,The length of the statement  "            if (!string.IsNullOrEmpty(datasetConfig.DatasetTableName)) //Add the posibility to use a specific table_name (for using the table more then ones) " is 145.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.MySQL,MySQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MySQL\MySQLStorage.cs,CreateOrModify_TablesAndFields,The length of the statement  "                        Logging.LogText("Database-table could not be created. Storage: " + myConfig.Name + "' Table: " + dataTable' ex' Logging.LogLevel.Error); " is 136.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.MySQL,MySQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MySQL\MySQLStorage.cs,_internal_Write,The length of the statement  "                string delstr = "DELETE FROM " + myProtokollDaten.DataBaseTable + " WHERE id <= (SELECT max(id) FROM " + myProtokollDaten.DataBaseTable + ") - (" + myProtokollDaten.MaxDatasets.ToString() + ")"; " is 194.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.MySQL,MySQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MySQL\MySQLStorage.cs,ReadData,The length of the statement  "                readCmd.CommandText = "SELECT * FROM " + datasetConfig.Name + " LIMIT " + Count.ToString() + " OFFSET " + Start.ToString(); " is 123.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.PostgreSQL,PostgreSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\PostgreSQL\PostgreSQLStorage.cs,CreateOrModify_TablesAndFields,The length of the statement  "            if (!string.IsNullOrEmpty(datasetConfig.DatasetTableName)) //Add the posibility to use a specific table_name (for using the table more then ones) " is 145.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.PostgreSQL,PostgreSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\PostgreSQL\PostgreSQLStorage.cs,CreateOrModify_TablesAndFields,The length of the statement  "                        Logging.LogText("Database-table could not be created. Storage: " + myConfig.Name + "' Table: " + dataTable' ex' Logging.LogLevel.Error); " is 136.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.PostgreSQL,PostgreSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\PostgreSQL\PostgreSQLStorage.cs,_internal_Write,The length of the statement  "                        //Logging.LogText(string.Format("KeyValue Key:{0} Value:{1}"' field.DatabaseField' value ?? "null")' Logging.LogLevel.Information);                    " is 131.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.PostgreSQL,PostgreSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\PostgreSQL\PostgreSQLStorage.cs,_internal_Write,The length of the statement  "                string delstr = "DELETE FROM " + myProtokollDaten.DataBaseTable + " WHERE id <= (SELECT max(id) FROM " + myProtokollDaten.DataBaseTable + ") - (" + myProtokollDaten.MaxDatasets.ToString() + ")"; " is 194.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.PostgreSQL,PostgreSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\PostgreSQL\PostgreSQLStorage.cs,ReadData,The length of the statement  "                readCmd.CommandText = "SELECT * FROM " + datasetConfig.Name + " LIMIT " + Count.ToString() + " OFFSET " + Start.ToString(); " is 123.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ProtokollerInstance,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\PolicyServer.cs,GetProtocolData,The length of the statement  "            IDBInterface dbInterface = StorageHelper.GetStorage(ProtokollerConfiguration.ActualConfigInstance' datasetConfig.Storage' null); " is 128.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ProtokollerInstance,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\PolicyServer.cs,Start,The length of the statement  "                webServer.Configure("/"' System.IO.Path.Combine(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location)' "web")); " is 121.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ProtokollerInstance,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\PolicyServer.cs,Start,The length of the statement  "                wcfWebService.AddServiceEndpoint(typeof(IPolicyRetriever)' new WebHttpBinding()' "").Behaviors.Add(new WebHttpBehavior()); " is 122.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ProtokollerInstance,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\PolicyServer.cs,EstablishConnections,The length of the statement  "                    //TCPFunctionsAsync tmpConn = new TCPFunctionsAsync(new SynchronizationContext()' tcpipConnConf.IPasIPAddres' tcpipConnConf.Port' !tcpipConnConf.PassiveConnection' 0); " is 167.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ProtokollerInstance,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\PolicyServer.cs,EstablishConnections,The length of the statement  "                    var thrd = new Thread(new ParameterizedThreadStart(ReEstablishConnectionsThreadProc)) { Name = "EstablishConnectionsThreadProc" }; " is 130.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ProtokollerInstance,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\PolicyServer.cs,TestDataReadWrite,The length of the statement  "            DatabaseInterfaces[testDataset].Write(ReadData.ReadDataFromDataSources(testDataset' testDataset.DatasetConfigRows' ConnectionList' false)); " is 139.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ProtokollerInstance,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\PolicyServer.cs,OpenStoragesAndCreateTriggers,The length of the statement  "                        if (datasetConfig.Trigger == DatasetTriggerType.Tags_Handshake_Trigger || datasetConfig.Trigger == DatasetTriggerType.Tags_Handshake_Trigger_only_one_Tag) " is 154.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ProtokollerInstance,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\PolicyServer.cs,OpenStoragesAndCreateTriggers,The length of the statement  "                            PLCTagTriggerThread tmpTrigger = new PLCTagTriggerThread(akDBInterface' datasetConfig' ConnectionList' StartedAsService' datasetConfig.Trigger == DatasetTriggerType.Tags_Handshake_Trigger_only_one_Tag); " is 202.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ProtokollerInstance,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\PolicyServer.cs,OpenStoragesAndCreateTriggers,The length of the statement  "                            TimeTriggerWithCheckForChangesThread tmpTrigger = new TimeTriggerWithCheckForChangesThread(akDBInterface' datasetConfig' ConnectionList' StartedAsService); " is 155.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ProtokollerInstance,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\PolicyServer.cs,OpenStoragesAndCreateTriggers,The length of the statement  "                            QuartzTriggerThread tmpTrigger = new QuartzTriggerThread(akDBInterface' datasetConfig' ConnectionList' StartedAsService); " is 121.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ProtokollerInstance,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\PolicyServer.cs,OpenStoragesAndCreateTriggers,The length of the statement  "                            TCPFunctionsAsync tmpConn = new TCPFunctionsAsync(null' tcpipConnConf.IPasIPAddress' tcpipConnConf.Port' !tcpipConnConf.PassiveConnection' tcpipConnConf.DontUseFixedTCPLength ? -1 : ReadData.GetCountOfBytesToRead(datasetConfig.DatasetConfigRows) * tcpipConnConf.MultiTelegramme); " is 279.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ProtokollerInstance,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\PolicyServer.cs,OpenStoragesAndCreateTriggers,The length of the statement  "                                                                     Logging.LogText("Connection established: " + tcpipConnConf.IPasIPAddress + "' " + tcpipConnConf.Port' Logging.LogLevel.Information); " is 132.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ProtokollerInstance,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\PolicyServer.cs,OpenStoragesAndCreateTriggers,The length of the statement  "                                                                Logging.LogText("Connection closed: " + tcpipConnConf.IPasIPAddress + "' " + tcpipConnConf.Port' Logging.LogLevel.Information); " is 127.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ProtokollerInstance,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\PolicyServer.cs,OpenStoragesAndCreateTriggers,The length of the statement  "                            Logging.LogText("Connection prepared: " + tcpipConnConf.IPasIPAddress + "' " + tcpipConnConf.Port' Logging.LogLevel.Information); " is 129.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ReadData,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\ReadData.cs,ReadDataFromDataSources,The length of the statement  "                                    Logging.LogText("Tag does not Exist! " + plcConn.Configuration.ConnectionName + ": " + plcTag.S7FormatAddress' Logging.LogLevel.Error); " is 135.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ReadData,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\ReadData.cs,ReadDataFromDataSources,The length of the statement  "                                    Logging.LogTextToLog4Net("ReadDataFromDataSources() => \"" + datasetConfig.TriggerConnection.Name + "\" Discconnect because !StayConnected"); " is 141.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.SQLite,SQLLiteStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\SQLite\SQLLiteStorage.cs,CreateOrModify_TablesAndFields,The length of the statement  "            if (!string.IsNullOrEmpty(datasetConfig.DatasetTableName)) //Add the posibility to use a specific table_name (for using the table more then ones) " is 145.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.SQLite,SQLLiteStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\SQLite\SQLLiteStorage.cs,_internal_Write,The length of the statement  "                                    cmd.Parameters.Add(new SQLiteParameter("@" + dateFieldName' System.Data.DbType.String) { Value = addDateTime.ToString("yyyy.MM.dd - HH:mm:ss.fff") }); " is 150.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.SQLite,SQLLiteStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\SQLite\SQLLiteStorage.cs,_internal_Write,The length of the statement  "                                                cmd.Parameters.Add(new SQLiteParameter("@" + field.DatabaseField' System.Data.DbType.String) {Value = value.ToString()}); " is 121.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.SQLite,SQLLiteStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\SQLite\SQLLiteStorage.cs,_internal_Write,The length of the statement  "                                                cmd.Parameters.Add(new SQLiteParameter("@" + field.DatabaseField' System.Data.DbType.String) {Value = value.ToString().Replace('''' '.')}); " is 139.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.SQLite,SQLLiteStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\SQLite\SQLLiteStorage.cs,_internal_Write,The length of the statement  "                                                cmd.Parameters.Add(new SQLiteParameter("@" + field.DatabaseField' System.Data.DbType.String) {Value = ((DateTime) value).ToString("yyyy-MM-dd HH:mm:ss.fffffff")}); " is 163.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.SQLite,SQLLiteStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\SQLite\SQLLiteStorage.cs,_internal_Write,The length of the statement  "                                string delstr = "DELETE FROM " + dataTable + " WHERE id <= (SELECT max(id) FROM " + dataTable + ") - (" + datasetConfig.MaxDatasets.ToString() + ")"; " is 149.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.SQLite,SQLLiteStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\SQLite\SQLLiteStorage.cs,ReadData,The length of the statement  "            readCmd.CommandText = "SELECT " + dbFieldNames + " FROM " + datasetConfig.Name + where + " ORDER BY id DESC LIMIT " + Count.ToString() + " OFFSET " + Start.ToString(); " is 167.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Databases.SQLite,SQLLiteStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\SQLite\SQLLiteStorage.cs,ReadData,The length of the statement  "                if (!readCmd.CommandText.Contains("ORDER BY") && !readCmd.CommandText.Contains("LIMIT") && !readCmd.CommandText.Contains("OFFSET")) " is 131.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,DatabaseTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\DatabaseTriggerThread.cs,StartTrigger,The length of the statement  "            myThread = new Thread(new ThreadStart(WaitForTrigger)) {Name = "DatabaseTriggerThread' DataSetConfig:" + datasetConfig.Name}; " is 125.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,DatabaseTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\DatabaseTriggerThread.cs,WaitForTrigger,The length of the statement  "            //                    Logging.LogText("Error: Exception during ReadData' maybe Connection interupted?"' ex' Logging.LogLevel.Error); " is 132.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,DatabaseTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\DatabaseTriggerThread.cs,WaitForTrigger,The length of the statement  "            //            //If the cycle counter is 0' switch to the slower interval (it means that no new data was there for a long time! ;-) " is 130.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,DatabaseTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\DatabaseTriggerThread.cs,WaitForTrigger,The length of the statement  "            //                IEnumerable<object> values = ReadData.ReadDataFromDataSources(datasetConfig' datasetConfig.DatasetConfigRows' activConnections' StartedAsService); " is 164.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,DatabaseTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\DatabaseTriggerThread.cs,WaitForTrigger,The length of the statement  "            //                            Logging.LogText("Error: Exception during WriteValue' maybe Connection interupted?"' ex' Logging.LogLevel.Error); " is 142.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,DatabaseTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\DatabaseTriggerThread.cs,WaitForTrigger,The length of the statement  "            //                            Logging.LogText("Error: Exception during WriteValue' maybe Connection interupted?"' ex' Logging.LogLevel.Error); " is 142.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,TimeTriggerWithCheckForChangesThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\TimeTriggerWithCheckForChangesThread.cs,StartTrigger,The length of the statement  "            myThread = new Thread(new ThreadStart(WaitForTrigger)) {Name = "TimeTriggerThread' DataSetConfig:" + datasetConfig.Name}; " is 121.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,TimeTriggerWithCheckForChangesThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\TimeTriggerWithCheckForChangesThread.cs,WaitForTrigger,The length of the statement  "                    IEnumerable<object> values = ReadData.ReadDataFromDataSources(datasetConfig' datasetConfig.DatasetConfigRows' activConnections' StartedAsService); " is 146.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,QuartzTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\QuartzTriggerThread.cs,TriggerCallback,The length of the statement  "                IEnumerable<object> values = ReadData.ReadDataFromDataSources(datasetConfig' datasetConfig.DatasetConfigRows' activConnections' StartedAsService); " is 146.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,TimeTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\TimeTriggerThread.cs,StartTrigger,The length of the statement  "            myThread = new Thread(new ThreadStart(WaitForTrigger)) {Name = "TimeTriggerThread' DataSetConfig:" + datasetConfig.Name}; " is 121.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,TimeTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\TimeTriggerThread.cs,WaitForTrigger,The length of the statement  "                    IEnumerable<object> values = ReadData.ReadDataFromDataSources(datasetConfig' datasetConfig.DatasetConfigRows' activConnections' StartedAsService); " is 146.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,PLCTagTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\PLCTagTriggerThread.cs,StartTrigger,The length of the statement  "            myThread = new Thread(new ThreadStart(WaitForTrigger)) {Name = "PLCTagTriggerThread' DataSetConfig:" + datasetConfig.Name}; " is 123.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,PLCTagTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\PLCTagTriggerThread.cs,WaitForTrigger,The length of the statement  "                            //Logging.LogTextToLog4Net("WaitForTrigger() => \"" + datasetConfig.TriggerConnection.Name + "\" - NoDataInterval active"); " is 123.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,PLCTagTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\PLCTagTriggerThread.cs,WaitForTrigger,The length of the statement  "                            if ((!((bool) readBit.Value) && !alreadyWritten) && datasetConfig.TriggerConnection is LibNoDaveConfig && !((LibNoDaveConfig)datasetConfig.TriggerConnection).StayConnected) " is 172.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,PLCTagTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\PLCTagTriggerThread.cs,WaitForTrigger,The length of the statement  "                                Logging.LogTextToLog4Net("WaitForTrigger() => \"" + datasetConfig.TriggerConnection.Name + "\" Discconnect because !StayConnected"); " is 132.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,PLCTagTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\PLCTagTriggerThread.cs,WaitForTrigger,The length of the statement  "                            //Logging.LogTextToLog4Net("WaitForTrigger() => \"" + datasetConfig.TriggerConnection.Name + "\" - NewDataInterval active"); " is 124.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,PLCTagTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\PLCTagTriggerThread.cs,WaitForTrigger,The length of the statement  "                            IEnumerable<object> values = ReadData.ReadDataFromDataSources(datasetConfig' datasetConfig.DatasetConfigRows' activConnections' StartedAsService); " is 146.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Remoting,RemotingClient,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Remoting\RemotingClient.cs,Start,The length of the statement  "            var m_RemoteObject = (ICallsToServer) Activator.GetObject(typeof (ICallsToServer)' "ipc://" + RemotingConfig.PortName + "/" + RemotingConfig.ServerName); " is 153.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Remoting,RemotingClient,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Remoting\RemotingClient.cs,Start,The length of the statement  "            RemotingConfiguration.RegisterWellKnownServiceType(typeof(RemotingClient)' "ServerEvents"' WellKnownObjectMode.Singleton); " is 122.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Remoting,RemotingServer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Remoting\RemotingServer.cs,Start,The length of the statement  "            BinaryServerFormatterSinkProvider serverProvider = new BinaryServerFormatterSinkProvider {TypeFilterLevel = System.Runtime.Serialization.Formatters.TypeFilterLevel.Full}; " is 170.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.Remoting,RemotingServer,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Remoting\RemotingServer.cs,Start,The length of the statement  "            RemotingConfiguration.RegisterWellKnownServiceType(typeof (ClientComms)' RemotingConfig.ServerName' WellKnownObjectMode.Singleton); " is 131.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.SettingsClasses.Connections,TCPIPProxyConfig,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\SettingsClasses\Connections\TCPIPProxyConfig.cs,ToString,The length of the statement  "            //return "TCP/IP-Verbindung (IP:" + IP + "' Port:" + Port.ToString() + "' Passive:" + PassiveConnection.ToString() + ")"; " is 121.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,Save,The length of the statement  "            string conf = JsonNetSerialize(ProtokollerConfiguration.ActualConfigInstance);  //SerializeToString<ProtokollerConfiguration>.Serialize(ProtokollerConfiguration.ActualConfigInstance); " is 183.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,Save,The length of the statement  "            regKey = regKey.CreateSubKey("SYSTEM\\CurrentControlSet\\services\\" + StaticServiceConfig.MyServiceName + "\\Parameters"); " is 123.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,ConfigFileName,The length of the statement  "            return Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData)' StaticServiceConfig.MyServiceName + "\\XMLConfig.config"); " is 154.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,JsonNetSerialize,The length of the statement  "            return Newtonsoft.Json.JsonConvert.SerializeObject(obj' typeof(T)' beautifyOutput ? Newtonsoft.Json.Formatting.Indented : Newtonsoft.Json.Formatting.None' jsonNetSettings); " is 172.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,SaveToFile,The length of the statement  "            string conf = JsonNetSerialize(ProtokollerConfiguration.ActualConfigInstance); // SerializeToString<ProtokollerConfiguration>.Serialize(ProtokollerConfiguration.ActualConfigInstance); " is 183.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,ReReferenceProtokollerConfiguration,The length of the statement  "                    datasetConfig.TriggerConnection = cfg.Connections.Where(c => c.Name == datasetConfig.TriggerConnection.Name).FirstOrDefault(); " is 126.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,ImportFromRegistry,The length of the statement  "            regKey = regKey.CreateSubKey("SYSTEM\\CurrentControlSet\\services\\" + StaticServiceConfig.MyServiceName + "\\Parameters"); " is 123.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,ImportFromRegistry,The length of the statement  "                    MessageBox.Show("Error reading Config from the Registry' maybe you need to Login as Administrator' or no config has yet been created!"); " is 136.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,CheckConfiguration,The length of the statement  "                                    error += "Error: Dataset \"" + datasetConfig.Name + "\" - The same TCP/IP Connection is used in more than one Dataset with differnet bytes sizes' but fixed Length should be used!" + Environment.NewLine; " is 202.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,CheckConfiguration,The length of the statement  "                    error += "Error: Dataset \"" + datasetConfig.Name + "\" - The same TCP/IP Connection is used in more than one Dataset!" + Environment.NewLine; " is 142.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,CheckConfiguration,The length of the statement  "                //Look if Trigger on a Dataset with TCP/IP Connection is Incoming Data' and that this trigger is not used on a Connection without TCP/IP " is 136.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,CheckConfiguration,The length of the statement  "                    if (!(datasetConfig.TriggerConnection is TCPIPConfig) && (datasetConfig.Trigger == DatasetTriggerType.Triggered_By_Incoming_Data_On_A_TCPIP_Connection)) " is 152.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,CheckConfiguration,The length of the statement  "                        error += "Error: Dataset \"" + datasetConfig.Name + "\" - The selected Connection for incoming Trigger is no TCP/IP Connection !" + Environment.NewLine; " is 152.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,CheckConfiguration,The length of the statement  "                if (datasetConfig.Trigger == DatasetTriggerType.Triggered_By_Incoming_Data_On_A_TCPIP_Connection && datasetConfig.TriggerConnection == null) " is 140.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,CheckConfiguration,The length of the statement  "                    if (datasetConfigRow.Connection == null && datasetConfig.Trigger != DatasetTriggerType.Triggered_By_Incoming_Data_On_A_TCPIP_Connection) " is 136.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,CheckConfiguration,The length of the statement  "                        error += "Error: Dataset \"" + datasetConfig.Name + "\" Row \"" + datasetConfigRow.DatabaseField + "\" - Connection not Set!" + Environment.NewLine; " is 148.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,CheckConfiguration,The length of the statement  "                    if (datasetConfigRow.Connection == null && datasetConfig.Trigger != DatasetTriggerType.Triggered_By_Incoming_Data_On_A_TCPIP_Connection) error += "Error: Dataset \"" + datasetConfig.Name + "\" Row \"" + datasetConfigRow.DatabaseField + "\" - Connection not Set!" + Environment.NewLine; " is 285.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,CheckConfiguration,The length of the statement  "                    if (datasetConfigRow.DatabaseFieldType == "") error += "Error: Dataset \"" + datasetConfig.Name + "\" Row \"" + datasetConfigRow.DatabaseField + "\" - DatabaseFieldType not Set!" + Environment.NewLine; " is 201.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,CheckConfiguration,The length of the statement  "                        error += "Error: Dataset \"" + datasetConfig.Name + "\" Row \"" + datasetConfigRow.DatabaseField + "\" - PLC-ValueType not Set!" + Environment.NewLine; " is 151.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,CheckConfiguration,The length of the statement  "                                if (datasetConfigRow.PLCTag.ItemDoesNotExist) error += "Error: Dataset \"" + datasetConfig.Name + "\" Row \"" + datasetConfigRow.DatabaseField + "\" - Error Reading Value on Address " + datasetConfigRow.PLCTag.S7FormatAddress + " !" + Environment.NewLine; " is 255.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,CheckConfiguration,The length of the statement  "                                error += "Error: Dataset \"" + datasetConfig.Name + "\" Row \"" + datasetConfigRow.DatabaseField + "\" - Error Reading Value on Address " + datasetConfigRow.PLCTag.S7FormatAddress + " !" + Environment.NewLine; " is 209.
Long Statement,DotNetSimaticDatabaseProtokollerLibrary.SettingsClasses.Datasets,DatasetConfigRow,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\SettingsClasses\Datasets\DatasetConfigRow.cs,Value,The length of the statement  "            if ((Multiplier != 0 || Precision != 0) && (PLCTag.Value is double || PLCTag.Value is float || PLCTag.Value is byte || PLCTag.Value is sbyte || PLCTag.Value is Int16 || PLCTag.Value is UInt16 || PLCTag.Value is int || PLCTag.Value is uint || PLCTag.Value is byte || PLCTag.Value is sbyte || PLCTag.Value is Int64 || PLCTag.Value is UInt64)) " is 340.
Complex Conditional,DotNetSimaticDatabaseProtokollerLibrary.aspx,AspxNetEngine,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\aspx\AspxNetEngine.cs,ProcessRequest,The conditional expression  "page != null && (page.ToLower().EndsWith("gif") || page.ToLower().EndsWith("jpg") || page.ToLower().EndsWith("png") || page.ToLower().EndsWith("html")) && File.Exists(Path.Combine(m_PhysicalDirectory' page))"  is complex.
Complex Conditional,DotNetSimaticDatabaseProtokollerLibrary.Databases.Excel,Excel2007Storage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\Excel2007\Excel2007Storage.cs,_internal_Write,The conditional expression  "akValue is Int16 || akValue is Int32 || akValue is Int64 || akValue is UInt16 ||                               akValue is UInt32 || akValue is UInt64 || akValue is Byte || akValue is SByte"  is complex.
Complex Conditional,DotNetSimaticDatabaseProtokollerLibrary.Databases.Excel,ExcelStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\Excel\ExcelStorage.cs,_internal_Write,The conditional expression  "akValue is Int16 || akValue is Int32 || akValue is Int64 || akValue is UInt16 ||                               akValue is UInt32 || akValue is UInt64 || akValue is Byte || akValue is SByte"  is complex.
Complex Conditional,DotNetSimaticDatabaseProtokollerLibrary.Databases.MsSQL,MsSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MsSQL\MsSQLStorage.cs,_internal_Write,The conditional expression  "field.DatabaseFieldType == "text" || field.DatabaseFieldType == "varchar" || field.DatabaseFieldType == "ntext" || field.DatabaseFieldType == "nvarchar" || field.DatabaseFieldType == "char" || field.DatabaseFieldType == "nchar""  is complex.
Complex Conditional,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,PLCTagTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\PLCTagTriggerThread.cs,WaitForTrigger,The conditional expression  "(!((bool) readBit.Value) && !alreadyWritten) && datasetConfig.TriggerConnection is LibNoDaveConfig && !((LibNoDaveConfig)datasetConfig.TriggerConnection).StayConnected"  is complex.
Complex Conditional,DotNetSimaticDatabaseProtokollerLibrary.SettingsClasses.Datasets,DatasetConfigRow,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\SettingsClasses\Datasets\DatasetConfigRow.cs,Value,The conditional expression  "(Multiplier != 0 || Precision != 0) && (PLCTag.Value is double || PLCTag.Value is float || PLCTag.Value is byte || PLCTag.Value is sbyte || PLCTag.Value is Int16 || PLCTag.Value is UInt16 || PLCTag.Value is int || PLCTag.Value is uint || PLCTag.Value is byte || PLCTag.Value is sbyte || PLCTag.Value is Int64 || PLCTag.Value is UInt64)"  is complex.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary.Common,Logging,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Common\Logging.cs,internalLogText,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary.Common,Logging,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Common\Logging.cs,internalLogText,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary.Databases.Firebird,FirebirdStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\Firebird\FirebirdStorage.cs,CreateOrModify_TablesAndFields,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary.Databases.MsSQL,MsSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MsSQL\MsSQLStorage.cs,ReadCount,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary.Databases.MySQL,MySQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MySQL\MySQLStorage.cs,ReadData,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary.Databases.MySQL,MySQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MySQL\MySQLStorage.cs,ReadData,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary.Databases.MySQL,MySQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MySQL\MySQLStorage.cs,ReadCount,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary.Databases.PostgreSQL,PostgreSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\PostgreSQL\PostgreSQLStorage.cs,ReadData,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary.Databases.PostgreSQL,PostgreSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\PostgreSQL\PostgreSQLStorage.cs,ReadData,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary.Databases.PostgreSQL,PostgreSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\PostgreSQL\PostgreSQLStorage.cs,ReadCount,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ProtokollerInstance,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\PolicyServer.cs,ReEstablishConnectionsThreadProc,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ProtokollerInstance,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\PolicyServer.cs,synchronizePLCTimes,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary.Databases.SQLite,SQLLiteStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\SQLite\SQLLiteStorage.cs,ReadCount,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,TimeTriggerWithCheckForChangesThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\TimeTriggerWithCheckForChangesThread.cs,WaitForTrigger,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,QuartzTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\QuartzTriggerThread.cs,TriggerCallback,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,TimeTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\TimeTriggerThread.cs,WaitForTrigger,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,PLCTagTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\PLCTagTriggerThread.cs,WaitForTrigger,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary.Remoting,RemotingClient,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Remoting\RemotingClient.cs,Start,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,DeSerialize,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,DeSerialize,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary,ProtokollerConfiguration,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\ProtokollerConfiguration.cs,CheckConfiguration,The method has an empty catch block.
Empty Catch Block,DotNetSimaticDatabaseProtokollerLibrary.SettingsClasses.Datasets,DatasetConfigRow,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\SettingsClasses\Datasets\DatasetConfigRow.cs,Value,The method has an empty catch block.
Magic Number,DotNetSimaticDatabaseProtokollerLibrary.aspx,AspxVirtualRoot,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\aspx\AspxVirtualRoot.cs,ContextReceivedCallback,The following statement contains a magic number: if (m_AspNetEngine == null)              {                  listenerContext.Response.StatusCode = 404;                  listenerContext.Response.Close();                  return;              }
Magic Number,DotNetSimaticDatabaseProtokollerLibrary.Common,NetworkShare,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Common\NetworkShare.cs,GetSystemMessage,The following statement contains a magic number: int capacity = 512;
Magic Number,DotNetSimaticDatabaseProtokollerLibrary.Common,NetworkShare,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Common\NetworkShare.cs,GetSystemMessage,The following statement contains a magic number: if (i > 0 && sb[i - 1] == 10) i--;
Magic Number,DotNetSimaticDatabaseProtokollerLibrary.Common,NetworkShare,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Common\NetworkShare.cs,GetSystemMessage,The following statement contains a magic number: if (i > 0 && sb[i - 1] == 13) i--;
Magic Number,DotNetSimaticDatabaseProtokollerLibrary.Databases.Interfaces,DBBaseClass,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\Interfaces\DBBaseClass.cs,ThreadProc,The following statement contains a magic number: try              {                  while (true)                  {                      if (_initiated)                      {                          bool ok = false;                          if (_intValueList.Count > 0)                          {                              lock (_intValueList) _maxAdd = _intValueList.Count;                                try                              {                                  ok = _internal_Write();                              }                              catch (ThreadAbortException)                              {                                  throw;                              }                              catch (Exception ex)                              {                                  if (ThreadExceptionOccured != null) ThreadExceptionOccured.Invoke(this' new ThreadExceptionEventArgs(ex));                                  else Logging.LogText("Exception: "' ex' Logging.LogLevel.Error);                              }                                if (ok)                                  lock (_intValueList)                                  {                                      _intValueList.RemoveRange(0' _maxAdd);                                      _intDateTimesList.RemoveRange(0' _maxAdd);                                  }                          }                          else Thread.Sleep(20);                      }                      else                      {                          this.Initiate();                      }                  }              }              catch (ThreadAbortException)              {                  return;              }
Magic Number,DotNetSimaticDatabaseProtokollerLibrary.Databases.MsSQL,MsSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MsSQL\MsSQLStorage.cs,CreateOrModify_TablesAndFields,The following statement contains a magic number: try              {                  string sql = "SELECT TOP 1 * FROM " + dataTable + ";";                  myCmd.Connection = myDBConn;                  myCmd.CommandText = sql;                  myReader = myCmd.ExecuteReader();                }              catch (SqlException ex)              {                  if (ex.Number == 208)                  {                      try                      {                          string sql = "CREATE TABLE " + dataTable + " (id int IDENTITY(1'1)PRIMARY KEY CLUSTERED); ";                            myCmd.CommandText = sql;                          myCmd.ExecuteNonQuery();                            sql = "SELECT * FROM " + dataTable + ";";                          myCmd.CommandText = sql;                          myReader = myCmd.ExecuteReader();                      }                      catch (SqlException ex_ex)                      {                          throw ex_ex;                      }                  }                  else                  {                      throw ex;                  }              }
Magic Number,DotNetSimaticDatabaseProtokollerLibrary.Databases.MySQL,MySQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MySQL\MySQLStorage.cs,CreateOrModify_TablesAndFields,The following statement contains a magic number: try              {                  sql = "CREATE DATABASE " + myConfig.Database + ";";                  myCmd.Connection = myDBConn;                  myCmd.CommandText = sql;                  myCmd.ExecuteNonQuery();              }              catch (MySqlException ex)              {                  if (ex.Number != 1007)                  {                      Logging.LogText("Database could not be created. Storage: " + myConfig.Name' ex' Logging.LogLevel.Error);                      throw ex;                  }              }
Magic Number,DotNetSimaticDatabaseProtokollerLibrary.Databases.MySQL,MySQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MySQL\MySQLStorage.cs,CreateOrModify_TablesAndFields,The following statement contains a magic number: try              {                  sql = "SELECT * FROM " + dataTable + ";";                  myCmd.Connection = myDBConn;                  myCmd.CommandText = sql;                  myReader = myCmd.ExecuteReader();                }              catch (MySqlException ex)              {                  if (ex.Number == 1146)                  {                      try                      {                          sql = "CREATE TABLE " + dataTable + " (";                          sql += "id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY); ";                                                                            myCmd.CommandText = sql;                          myCmd.ExecuteNonQuery();                            sql = "SELECT * FROM " + dataTable + ";";                                                  myCmd.CommandText = sql;                          myReader = myCmd.ExecuteReader();                      }                      catch (Exception ex_ex)                      {                          Logging.LogText("Database-table could not be created. Storage: " + myConfig.Name + "' Table: " + dataTable' ex' Logging.LogLevel.Error);                          throw ex_ex;                      }                  }                  else                  {                      Logging.LogText("Error accessing Table. Storage: " + myConfig.Name' ex' Logging.LogLevel.Error);                      throw ex;                  }              }
Magic Number,DotNetSimaticDatabaseProtokollerLibrary.Protocolling,ProtokollerInstance,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\wcfService\PolicyServer.cs,Start,The following statement contains a magic number: synTimer = new Timer(synchronizePLCTimes' null' 0' 60000);
Magic Number,DotNetSimaticDatabaseProtokollerLibrary.Databases.SQLite,SQLLiteStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\SQLite\SQLLiteStorage.cs,_internal_Write,The following statement contains a magic number: lock (FileNameLockObjects[myConfig.DatabaseFile])              {                  myCmd = new SQLiteCommand();                    //Look if the Connection is still open..                  try                  {                      string sql = "SELECT id FROM " + dataTable + " WHERE id = 0";                      myCmd.Connection = myDBConn;                      myCmd.CommandText = sql;                      myCmd.ExecuteNonQuery();                  }                    catch (Exception)                  {                      myDBConn.Close(); //Verbindung schließen!                      myDBConn.Open();                      if (myDBConn.State != System.Data.ConnectionState.Open)                      {                          Logging.LogText("Error ReConnecting to Database! Dataset:" + datasetConfig.Name' Logging.LogLevel.Error);                          return false;                      }                  }                    //Add the Fields to the Database                  myCmd.Connection = myDBConn;                  myCmd.CommandText = insertCommand;                  myCmd.Dispose();                    int tryCounter = 0;                  nomol:                  try                  {                        using (DbTransaction dbTrans = myDBConn.BeginTransaction())                      {                          using (DbCommand cmd = myDBConn.CreateCommand())                          {                              cmd.CommandText = insertCommand;                              for (int n = 0; n < _maxAdd; n++)                                  //foreach (IEnumerable<object> values in _intValueList)                              {                                  cmd.Parameters.Clear();                                    IEnumerable<object> values = _intValueList[n];                                  var addDateTime = _intDateTimesList[n];                                    if (!string.IsNullOrEmpty(dateFieldName))                                      cmd.Parameters.Add(new SQLiteParameter("@" + dateFieldName' System.Data.DbType.String) { Value = addDateTime.ToString("yyyy.MM.dd - HH:mm:ss.fff") });                                    using (IEnumerator<DatasetConfigRow> e1 = fieldList.GetEnumerator())                                  using (IEnumerator<object> e2 = values.GetEnumerator())                                  {                                      while (e1.MoveNext() && e2.MoveNext())                                      {                                          //foreach (DatasetConfigRow field in fieldList)                                          //{                                          DatasetConfigRow field = e1.Current;                                          Object value = e2.Current; //values[fnr++];                                            switch (field.PLCTag.TagDataType)                                          {                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.LInt:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.LWord:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.Int:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.Dint:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.Word:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.Dword:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.Byte:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.BCDByte:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.BCDWord:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.BCDDWord:                                                  cmd.Parameters.Add(new SQLiteParameter("@" + field.DatabaseField' System.Data.DbType.String) {Value = value.ToString()});                                                  break;                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.Float:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.LReal:                                                  cmd.Parameters.Add(new SQLiteParameter("@" + field.DatabaseField' System.Data.DbType.String) {Value = value.ToString().Replace('''' '.')});                                                  break;                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.DateTime:                                                  cmd.Parameters.Add(new SQLiteParameter("@" + field.DatabaseField' System.Data.DbType.String) {Value = ((DateTime) value).ToString("yyyy-MM-dd HH:mm:ss.fffffff")});                                                  break;                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.String:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.CharArray:                                                  cmd.Parameters.Add(new SQLiteParameter("@" + field.DatabaseField' System.Data.DbType.String) {Value = (String) value});                                                  break;                                          }                                      }                                  }                                  cmd.ExecuteNonQuery();                              }                                //Ringpufferarchiv...                              if (datasetConfig.MaxDatasets > 0)                              {                                  string delstr = "DELETE FROM " + dataTable + " WHERE id <= (SELECT max(id) FROM " + dataTable + ") - (" + datasetConfig.MaxDatasets.ToString() + ")";                                  cmd.CommandText = delstr;                                  cmd.ExecuteNonQuery();                              }                          }                            dbTrans.Commit();                                              }                  }                  catch (SQLiteException ex)                  {                      if (ex.ErrorCode == SQLiteErrorCode.Busy || ex.ErrorCode == SQLiteErrorCode.Locked) //Locked || Busy                      {                          tryCounter++;                          if (tryCounter > 20)                              throw new Exception("SQLLite-Datenbank nach 20 Versuchen immer noch locked oder busy!!");                          goto nomol;                      }                      else                      {                          throw ex;                      }                  }                  catch (Exception ex)                  {                      throw ex;                  }                    if (_newDataCallback != null)                      _newDataCallback(datasetConfig.Name);                                   return true;              }
Magic Number,DotNetSimaticDatabaseProtokollerLibrary.Protocolling.Trigger,PLCTagTriggerThread,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Protocolling\Trigger\PLCTagTriggerThread.cs,PLCTagTriggerThread,The following statement contains a magic number: this.NoDataInterval = datasetConfig.NoDataInterval > 0 ? datasetConfig.NoDataInterval : 300;
Magic Number,DotNetSimaticDatabaseProtokollerLibrary.SettingsClasses.Datasets,DatasetConfig,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\SettingsClasses\Datasets\DatasetConfig.cs,DatasetConfig,The following statement contains a magic number: _triggerTimeSpan = new TimeSpan(0' 0' 0' 0' 500);
Missing Default,DotNetSimaticDatabaseProtokollerLibrary.Common,Logging,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Common\Logging.cs,internalLogText,The following switch statement is missing a default case: switch (MessageLogLevel)                              {                                  case LogLevel.None:                                      tmpLogLevel = LogErrorLevel.None;                                      break;                                  case LogLevel.Error:                                      tmpLogLevel = LogErrorLevel.Error;                                      break;                                    case LogLevel.Warning:                                      tmpLogLevel = LogErrorLevel.Warning;                                      break;                                    case LogLevel.Information:                                      tmpLogLevel = LogErrorLevel.Information;                                      break;                              }
Missing Default,DotNetSimaticDatabaseProtokollerLibrary.Connections,DatabaseConnection,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Connections\DatabaseConnection.cs,Connect,The following switch statement is missing a default case: switch (databaseConfig.DatabaseDriver)             {                 case DatabaseConfig.Databasedriver.SQLlite:                     connection = new SQLiteConnection(databaseConfig.ConnectionString);                     break;                 case DatabaseConfig.Databasedriver.MSSQL:                     connection = new SqlConnection(databaseConfig.ConnectionString);                     break;                 case DatabaseConfig.Databasedriver.MySQL:                     connection = new MySqlConnection(databaseConfig.ConnectionString);                     break;                 case DatabaseConfig.Databasedriver.Firebird:                     connection = new FbConnection(databaseConfig.ConnectionString);                     break;                 case DatabaseConfig.Databasedriver.PostgreSQL:                     connection = new NpgsqlConnection(databaseConfig.ConnectionString);                     break;             }
Missing Default,DotNetSimaticDatabaseProtokollerLibrary.Databases.Firebird,FirebirdStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\Firebird\FirebirdStorage.cs,_internal_Write,The following switch statement is missing a default case: switch (field.PLCTag.TagDataType)                          {                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.LInt:                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.LWord:                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.Int:                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.Dint:                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.Word:                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.Dword:                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.Byte:                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.BCDByte:                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.BCDWord:                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.BCDDWord:                                  myCmd.Parameters.Add(new FbParameter("@" + field.DatabaseField' System.Data.DbType.String) {Value = value.ToString()});                                  break;                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.Float:                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.LReal:                                  myCmd.Parameters.Add(new FbParameter("@" + field.DatabaseField' System.Data.DbType.String) {Value = value.ToString().Replace('''' '.')});                                  break;                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.DateTime:                                  myCmd.Parameters.Add(new FbParameter("@" + field.DatabaseField' System.Data.DbType.String) {Value = ((DateTime) value).ToString("dd-MM-yyyy HH:mm:ss")});                                  break;                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.String:                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.CharArray:                                  myCmd.Parameters.Add(new FbParameter("@" + field.DatabaseField' System.Data.DbType.String) {Value = (String) value});                                  break;                          }
Missing Default,DotNetSimaticDatabaseProtokollerLibrary.Databases.MySQL,MySQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\MySQL\MySQLStorage.cs,CreateOrModify_TablesAndFields,The following switch statement is missing a default case: switch (dbfieldtype)                  {                      case "bigint":                          dbfieldtype = "bigint NOT NULL default 0";                          break;                      case "real":                          dbfieldtype = "real NOT NULL default 0";                          break;                      case "datetime":                          dbfieldtype = "TIMESTAMP NOT NULL";                          break;                      case "varchar":                          dbfieldtype = "VARCHAR(" + myFeld.DatabaseFieldSize + ") NOT NULL DEFAULT ''";                          break;                  }
Missing Default,DotNetSimaticDatabaseProtokollerLibrary.Databases.PostgreSQL,PostgreSQLStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\PostgreSQL\PostgreSQLStorage.cs,CreateOrModify_TablesAndFields,The following switch statement is missing a default case: switch (dbfieldtype)                  {                      case "bigint":                          dbfieldtype = "bigint NOT NULL default 0";                          break;                      case "real":                          dbfieldtype = "real NOT NULL default 0";                          break;                      case "varchar":                          dbfieldtype = "character varying(" + myFeld.DatabaseFieldSize + ") NOT NULL DEFAULT ''::character varying";                          break;                  }
Missing Default,DotNetSimaticDatabaseProtokollerLibrary.SettingsClasses.Storage,StorageConfig,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\SettingsClasses\Storage\StorageConfig.cs,GetDefaultDatabaseFieldTypeForLibNoDaveTag,The following switch statement is missing a default case: switch (tag.TagDataType.ToString().ToLower().Trim())              {                  case "float":                      return "float";                      break;                    case "int":                      return "int";                      break;                    case "word":                      return "word";                      break;                    case "date":                      return "date";                      break;                    case "datetime":                      return "datetime";                      break;                    case "time":                      return "time";                      break;                    case "dint":                      return "bigint";                      break;                             }
Missing Default,DotNetSimaticDatabaseProtokollerLibrary.Databases.SQLite,SQLLiteStorage,C:\repos\jogibear9988_DotNetSiemensPLCToolBoxLibrary\DotNetDatenbankProtokollerV2\ProtokollerLibrary\Databases\SQLite\SQLLiteStorage.cs,_internal_Write,The following switch statement is missing a default case: switch (field.PLCTag.TagDataType)                                          {                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.LInt:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.LWord:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.Int:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.Dint:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.Word:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.Dword:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.Byte:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.BCDByte:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.BCDWord:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.BCDDWord:                                                  cmd.Parameters.Add(new SQLiteParameter("@" + field.DatabaseField' System.Data.DbType.String) {Value = value.ToString()});                                                  break;                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.Float:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.LReal:                                                  cmd.Parameters.Add(new SQLiteParameter("@" + field.DatabaseField' System.Data.DbType.String) {Value = value.ToString().Replace('''' '.')});                                                  break;                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.DateTime:                                                  cmd.Parameters.Add(new SQLiteParameter("@" + field.DatabaseField' System.Data.DbType.String) {Value = ((DateTime) value).ToString("yyyy-MM-dd HH:mm:ss.fffffff")});                                                  break;                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.String:                                              case DotNetSiemensPLCToolBoxLibrary.DataTypes.TagDataType.CharArray:                                                  cmd.Parameters.Add(new SQLiteParameter("@" + field.DatabaseField' System.Data.DbType.String) {Value = (String) value});                                                  break;                                          }
