Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MultiMiner.WhatMine,ApiContext,C:\research\architectureSmells\repos\nwoolls_MultiMiner\MultiMiner.WhatMine\ApiContext.cs,CalculateProfitability,The length of the statement  "            CoinInformation btcInformation = coinInformation.Single(mpi => mpi.Symbol.Equals("BTC"' StringComparison.OrdinalIgnoreCase));" is 125.
Long Statement,MultiMiner.WhatMine.Extensions,CoinInformationExtensions,C:\research\architectureSmells\repos\nwoolls_MultiMiner\MultiMiner.WhatMine\Extensions\CoinInformationExtensions.cs,FixAlgorithmName,The length of the statement  "                KnownAlgorithm knownAlgorithm = KnownAlgorithms.Algorithms.SingleOrDefault(a => a.Name.Equals(algorithm' StringComparison.OrdinalIgnoreCase));" is 142.
Magic Number,MultiMiner.WhatMine,ApiContext,C:\research\architectureSmells\repos\nwoolls_MultiMiner\MultiMiner.WhatMine\ApiContext.cs,CalculateProfitability,The following statement contains a magic number: otherInformation.Profitability = (otherInformation.Income / btcInformation.Income) * 100;
Magic Number,MultiMiner.WhatMine,ApiContext,C:\research\architectureSmells\repos\nwoolls_MultiMiner\MultiMiner.WhatMine\ApiContext.cs,GetApiUrl,The following statement contains a magic number: const int Hashrate = 1000000;
Magic Number,MultiMiner.WhatMine,ApiContext,C:\research\architectureSmells\repos\nwoolls_MultiMiner\MultiMiner.WhatMine\ApiContext.cs,GetApiUrl,The following statement contains a magic number: apiUrl = String.Format("{0}&{1}_speed={2}"'                  apiUrl'                 AlgorithmNames.SHA256.ToUpper()'                 AlgorithmMultipliers.SHA256 * Hashrate                 //API wants Gh/s                 / 1000 / 1000);
Magic Number,MultiMiner.WhatMine,ApiContext,C:\research\architectureSmells\repos\nwoolls_MultiMiner\MultiMiner.WhatMine\ApiContext.cs,GetApiUrl,The following statement contains a magic number: apiUrl = String.Format("{0}&{1}_speed={2}"'                  apiUrl'                 AlgorithmNames.SHA256.ToUpper()'                 AlgorithmMultipliers.SHA256 * Hashrate                 //API wants Gh/s                 / 1000 / 1000);
Magic Number,MultiMiner.WhatMine,ApiContext,C:\research\architectureSmells\repos\nwoolls_MultiMiner\MultiMiner.WhatMine\ApiContext.cs,GetApiUrl,The following statement contains a magic number: apiUrl = String.Format("{0}&{1}_speed={2}"'                 apiUrl'                 AlgorithmNames.Keccak.ToUpper()'                 AlgorithmMultipliers.Keccak * Hashrate                 //API wants Mh/s                 / 1000);
Magic Number,MultiMiner.WhatMine,ApiContext,C:\research\architectureSmells\repos\nwoolls_MultiMiner\MultiMiner.WhatMine\ApiContext.cs,GetApiUrl,The following statement contains a magic number: apiUrl = String.Format("{0}&{1}_speed={2}"'                 apiUrl'                 AlgorithmNames.Groestl.ToUpper()'                 AlgorithmMultipliers.Groestl * Hashrate                 //API wants Mh/s                 / 1000);
Magic Number,MultiMiner.WhatMine,ApiContext,C:\research\architectureSmells\repos\nwoolls_MultiMiner\MultiMiner.WhatMine\ApiContext.cs,GetApiUrl,The following statement contains a magic number: apiUrl = String.Format("{0}&{1}_speed={2}"'                 apiUrl'                 AlgorithmNames.X13.ToUpper()'                 AlgorithmMultipliers.X13 * Hashrate                 //API wants Mh/s                 / 1000);
Magic Number,MultiMiner.WhatMine,ApiContext,C:\research\architectureSmells\repos\nwoolls_MultiMiner\MultiMiner.WhatMine\ApiContext.cs,GetApiUrl,The following statement contains a magic number: apiUrl = String.Format("{0}&{1}_speed={2}"'                 apiUrl'                 AlgorithmNames.X15.ToUpper()'                 AlgorithmMultipliers.X15 * Hashrate                 //API wants Mh/s                 / 1000);
Magic Number,MultiMiner.WhatMine,ApiContext,C:\research\architectureSmells\repos\nwoolls_MultiMiner\MultiMiner.WhatMine\ApiContext.cs,GetApiUrl,The following statement contains a magic number: apiUrl = String.Format("{0}&{1}_speed={2}"'                 apiUrl'                 AlgorithmNames.Nist5.ToUpper()'                 AlgorithmMultipliers.Nist5 * Hashrate                 //API wants Mh/s                 / 1000);
