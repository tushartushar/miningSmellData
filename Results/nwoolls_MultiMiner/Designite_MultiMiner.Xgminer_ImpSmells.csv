Implementation smell,Namespace,Class,File,Method,Description
Long Method,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,Launch,The method has 107 lines of code.
Complex Method,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,MakeNamesPretty,Cyclomatic complexity of the method is 7
Complex Method,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,Launch,Cyclomatic complexity of the method is 25
Complex Method,MultiMiner.Xgminer.Parsers,DeviceListParser,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Parsers\DeviceListParser.cs,ParseTextForDevices,Cyclomatic complexity of the method is 9
Complex Method,MultiMiner.Xgminer.Parsers,EnumerateDevicesParser,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Parsers\EnumerateDevicesParser.cs,ParseTextForUsbDevices,Cyclomatic complexity of the method is 7
Complex Method,MultiMiner.Xgminer.Parsers,EnumerateDevicesParser,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Parsers\EnumerateDevicesParser.cs,ParseTextForGpuDevices,Cyclomatic complexity of the method is 11
Long Parameter List,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,StartMinerProcess,The method has 5 parameters.
Long Statement,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,ListDevices,The length of the statement  "	if ((minerVersion != null) && (((minerVersion.Major == 3) && (minerVersion.Minor >= 99)) || (minerVersion.Major >= 4))) { " is 121.
Long Statement,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,LogListDevices,The length of the statement  "	string logFilePath = Path.Combine (Path.GetTempPath ()' String.Format ("{0}-{1}-{2}-{3}.log"' assemblyName' MethodName' algorithm' Stopwatch.GetTimestamp ().ToString ())); " is 171.
Long Statement,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,GetListSerialArguments,The length of the statement  "		serialArg = MinerParameter.ScanSerialNanofuryAll + " " + MinerParameter.ScanSerialErupterAll + " " + MinerParameter.ScanSerialAll; " is 130.
Long Statement,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,Launch,The length of the statement  "	IEnumerable<MiningPool> validPools = minerConfiguration.Pools.Where (p => !String.IsNullOrEmpty (p.Host) && !String.IsNullOrEmpty (p.Username)); " is 144.
Long Statement,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,Launch,The length of the statement  "		arguments = string.Format ("{0} -d {1}"' arguments' String.Join ("'"' minerConfiguration.DeviceDescriptors.Select (dd => dd.RelativeIndex.ToString ()).ToArray ())); " is 164.
Long Statement,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,Launch,The length of the statement  "		arguments = string.Format ("{0} --api-listen --api-port {1} --api-allow W:{2}"' arguments' minerConfiguration.ApiPort' allowedApiIps); " is 134.
Long Statement,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,Launch,The length of the statement  "	//we don't read the console output anyway and this is proven to improve performance (at least with very fast devices' e.g. KnC) " is 127.
Long Statement,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,HandleProcessOutput,The length of the statement  "	if (((e.Data.IndexOf ("No servers could be used"' StringComparison.OrdinalIgnoreCase) >= 0) || (e.Data.IndexOf ("No servers were found"' StringComparison.OrdinalIgnoreCase) >= 0)) && (LaunchFailed != null)) { " is 208.
Long Statement,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,HandleProcessOutput,The length of the statement  "		args.Reason = String.Format ("None of the pools configured for {0} could be used. Verify your pool settings and try again."' minerConfiguration.CoinName); " is 154.
Long Statement,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,EnsureProcessStarts,The length of the statement  "			throw new MinerLaunchException (string.Format ("{5} is exiting after launching with exit code {1}.\n\n" + "Details: {4}\n\nExecutable: {2}\nArguments: {3}"' retries' process.ExitCode' startInfo.FileName' startInfo.Arguments' errors' Path.GetFileNameWithoutExtension (startInfo.FileName))); " is 289.
Long Statement,MultiMiner.Xgminer.Data,DeviceDescriptor,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Data\Device\DeviceDescriptor.cs,IsScryptAsic,The length of the statement  "	return Driver.Equals (DualMinerDriver' StringComparison.OrdinalIgnoreCase) || Driver.Equals (GridSeedDriver' StringComparison.OrdinalIgnoreCase) || Driver.Equals (ZeusMinerDriver' StringComparison.OrdinalIgnoreCase); " is 216.
Long Statement,MultiMiner.Xgminer.Data,DeviceDescriptor,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Data\Device\DeviceDescriptor.cs,Equals,The length of the statement  "		return target.Driver.Equals (Driver' StringComparison.OrdinalIgnoreCase) && target.Path.Equals (Path' StringComparison.OrdinalIgnoreCase); " is 138.
Long Statement,MultiMiner.Xgminer.Data,DeviceDescriptor,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Data\Device\DeviceDescriptor.cs,Equals,The length of the statement  "	return target.Driver.Equals (Driver' StringComparison.OrdinalIgnoreCase) && target.Serial.Equals (Serial' StringComparison.OrdinalIgnoreCase) && target.Path.Equals (Path' StringComparison.OrdinalIgnoreCase); " is 207.
Long Statement,MultiMiner.Xgminer.Parsers,DeviceListParser,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Parsers\DeviceListParser.cs,ParseTextForDevices,The length of the statement  "				Dictionary<string' string> details = value.Split (';').Select (x => x.Split ('=')).ToDictionary (y => y [0].Trim ()' y => y [1].Trim ()); " is 137.
Long Statement,MultiMiner.Xgminer.Parsers,DeviceListParser,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Parsers\DeviceListParser.cs,ParseTextForDevices,The length of the statement  "				device.Kind = device.Driver.Equals ("opencl") ? DeviceKind.GPU : device.Driver.Equals ("cpu") ? DeviceKind.CPU : DeviceKind.USB; " is 128.
Complex Conditional,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,ListDevices,The conditional expression  "(minerVersion != null) && (((minerVersion.Major == 3) && (minerVersion.Minor >= 99)) || (minerVersion.Major >= 4))"  is complex.
Magic Number,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,ListDevices,The following statement contains a magic number: if ((minerVersion != null) && (((minerVersion.Major == 3) && (minerVersion.Minor >= 99)) || (minerVersion.Major >= 4))) {  	//order is important here - scan SHA then Scrypt' scanning Scrypt bricks bigpic until reset  	//at least with this order it will be detected' but needs a reset before starting mining again  	List<Device> sha256Devices = ListDevices (prettyNames' AlgorithmNames.SHA256' logging);  	List<Device> scryptDevices = ListDevices (prettyNames' AlgorithmNames.Scrypt' logging);  	return MergeDeviceLists (sha256Devices' scryptDevices);  }  
Magic Number,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,ListDevices,The following statement contains a magic number: if ((minerVersion != null) && (((minerVersion.Major == 3) && (minerVersion.Minor >= 99)) || (minerVersion.Major >= 4))) {  	//order is important here - scan SHA then Scrypt' scanning Scrypt bricks bigpic until reset  	//at least with this order it will be detected' but needs a reset before starting mining again  	List<Device> sha256Devices = ListDevices (prettyNames' AlgorithmNames.SHA256' logging);  	List<Device> scryptDevices = ListDevices (prettyNames' AlgorithmNames.Scrypt' logging);  	return MergeDeviceLists (sha256Devices' scryptDevices);  }  
Magic Number,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,ListDevices,The following statement contains a magic number: if ((minerVersion != null) && (((minerVersion.Major == 3) && (minerVersion.Minor >= 99)) || (minerVersion.Major >= 4))) {  	//order is important here - scan SHA then Scrypt' scanning Scrypt bricks bigpic until reset  	//at least with this order it will be detected' but needs a reset before starting mining again  	List<Device> sha256Devices = ListDevices (prettyNames' AlgorithmNames.SHA256' logging);  	List<Device> scryptDevices = ListDevices (prettyNames' AlgorithmNames.Scrypt' logging);  	return MergeDeviceLists (sha256Devices' scryptDevices);  }  
Magic Number,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,ListDevices,The following statement contains a magic number: minerProcess.WaitForExit (5 * 60 * 1000);  
Magic Number,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,ListDevices,The following statement contains a magic number: minerProcess.WaitForExit (5 * 60 * 1000);  
Magic Number,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,ListDevices,The following statement contains a magic number: minerProcess.WaitForExit (5 * 60 * 1000);  
Magic Number,MultiMiner.Xgminer,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Miner.cs,EnsureProcessStarts,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,MultiMiner.Xgminer.Parsers,DeviceListParser,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Parsers\DeviceListParser.cs,ParseTextForDevices,The following statement contains a magic number: foreach (string line in text) {  	if (Regex.Match (line' DevicesFooterPattern).Success) {  		inDevices = false;  	}  	if (inDevices) {  		Match match = Regex.Match (line' DeviceFullPattern);  		if (match.Success) {  			Device device = new Device ();  			device.Name = match.Groups [1].Value.Trim ();  			string value = match.Groups [2].Value.TrimEnd ();  			Dictionary<string' string> details = value.Split (';').Select (x => x.Split ('=')).ToDictionary (y => y [0].Trim ()' y => y [1].Trim ());  			device.Driver = details ["driver"];  			device.ProcessorCount = int.Parse (details ["procs"]);  			if (details.ContainsKey ("path"))  				device.Path = details ["path"];  			if (details.ContainsKey ("serial"))  				device.Serial = details ["serial"];  			device.Kind = device.Driver.Equals ("opencl") ? DeviceKind.GPU : device.Driver.Equals ("cpu") ? DeviceKind.CPU : DeviceKind.USB;  			if ((devices.Count > 0) && (devices.Last ()).Kind != device.Kind)  				//relativeIndex is relative to device Kind  				relativeIndex = 0;  			device.RelativeIndex = relativeIndex;  			devices.Add (device);  			relativeIndex++;  		}  	}  	if (Regex.Match (line' DevicesHeaderPattern).Success) {  		inDevices = true;  	}  }  
Magic Number,MultiMiner.Xgminer.Parsers,DeviceListParser,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Parsers\DeviceListParser.cs,ParseTextForDevices,The following statement contains a magic number: if (inDevices) {  	Match match = Regex.Match (line' DeviceFullPattern);  	if (match.Success) {  		Device device = new Device ();  		device.Name = match.Groups [1].Value.Trim ();  		string value = match.Groups [2].Value.TrimEnd ();  		Dictionary<string' string> details = value.Split (';').Select (x => x.Split ('=')).ToDictionary (y => y [0].Trim ()' y => y [1].Trim ());  		device.Driver = details ["driver"];  		device.ProcessorCount = int.Parse (details ["procs"]);  		if (details.ContainsKey ("path"))  			device.Path = details ["path"];  		if (details.ContainsKey ("serial"))  			device.Serial = details ["serial"];  		device.Kind = device.Driver.Equals ("opencl") ? DeviceKind.GPU : device.Driver.Equals ("cpu") ? DeviceKind.CPU : DeviceKind.USB;  		if ((devices.Count > 0) && (devices.Last ()).Kind != device.Kind)  			//relativeIndex is relative to device Kind  			relativeIndex = 0;  		device.RelativeIndex = relativeIndex;  		devices.Add (device);  		relativeIndex++;  	}  }  
Magic Number,MultiMiner.Xgminer.Parsers,DeviceListParser,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Parsers\DeviceListParser.cs,ParseTextForDevices,The following statement contains a magic number: if (match.Success) {  	Device device = new Device ();  	device.Name = match.Groups [1].Value.Trim ();  	string value = match.Groups [2].Value.TrimEnd ();  	Dictionary<string' string> details = value.Split (';').Select (x => x.Split ('=')).ToDictionary (y => y [0].Trim ()' y => y [1].Trim ());  	device.Driver = details ["driver"];  	device.ProcessorCount = int.Parse (details ["procs"]);  	if (details.ContainsKey ("path"))  		device.Path = details ["path"];  	if (details.ContainsKey ("serial"))  		device.Serial = details ["serial"];  	device.Kind = device.Driver.Equals ("opencl") ? DeviceKind.GPU : device.Driver.Equals ("cpu") ? DeviceKind.CPU : DeviceKind.USB;  	if ((devices.Count > 0) && (devices.Last ()).Kind != device.Kind)  		//relativeIndex is relative to device Kind  		relativeIndex = 0;  	device.RelativeIndex = relativeIndex;  	devices.Add (device);  	relativeIndex++;  }  
Magic Number,MultiMiner.Xgminer.Data.Configuration,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Data\Configuration\Miner.cs,Miner,The following statement contains a magic number: StratumProxyPort = 8332;  
Magic Number,MultiMiner.Xgminer.Data.Configuration,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Data\Configuration\Miner.cs,Miner,The following statement contains a magic number: StratumProxyStratumPort = 3333;  
Magic Number,MultiMiner.Xgminer.Data.Configuration,Miner,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.Xgminer\Data\Configuration\Miner.cs,Miner,The following statement contains a magic number: LogInterval = 5;  
