Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MultiMiner.NiceHash.Extensions,CoinInformationExtensions,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.NiceHash\Extensions\MultipoolInformationExtensions.cs,PopulateFromJson,Cyclomatic complexity of the method is 32
Long Statement,MultiMiner.NiceHash,ApiContext,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.NiceHash\ApiContext.cs,GetMultipoolInformation,The length of the statement  "		otherInformation.Profitability = ((otherInformation.Price * knownAlgorithm.Multiplier) / btcInformation.Price) * PoolProfitability * 100; " is 137.
Magic Number,MultiMiner.NiceHash,ApiContext,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.NiceHash\ApiContext.cs,GetMultipoolInformation,The following statement contains a magic number: foreach (MultipoolInformation otherInformation in result) {  	KnownAlgorithm knownAlgorithm = KnownAlgorithms.Algorithms.Single (ka => ka.Name.Equals (otherInformation.Algorithm));  	otherInformation.Profitability = ((otherInformation.Price * knownAlgorithm.Multiplier) / btcInformation.Price) * PoolProfitability * 100;  }  
Magic Number,MultiMiner.NiceHash,ApiContext,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.NiceHash\ApiContext.cs,GetMultipoolInformation,The following statement contains a magic number: otherInformation.Profitability = ((otherInformation.Price * knownAlgorithm.Multiplier) / btcInformation.Price) * PoolProfitability * 100;  
Magic Number,MultiMiner.NiceHash.Extensions,CoinInformationExtensions,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.NiceHash\Extensions\MultipoolInformationExtensions.cs,PopulateFromJson,The following statement contains a magic number: switch (algorithmIndex) {  case 0:  	multipoolInformation.Algorithm = AlgorithmNames.Scrypt;  	break;  case 1:  	multipoolInformation.Algorithm = AlgorithmNames.SHA256;  	//only algo returned in Th/s  	multipoolInformation.Price /= 1000;  	break;  case 2:  	multipoolInformation.Algorithm = AlgorithmNames.ScryptN;  	break;  case 3:  	multipoolInformation.Algorithm = AlgorithmNames.X11;  	break;  case 4:  	multipoolInformation.Algorithm = AlgorithmNames.X13;  	break;  case 5:  	multipoolInformation.Algorithm = AlgorithmNames.Keccak;  	break;  case 6:  	multipoolInformation.Algorithm = AlgorithmNames.X15;  	break;  case 7:  	multipoolInformation.Algorithm = AlgorithmNames.Nist5;  	break;  case 8:  	multipoolInformation.Algorithm = AlgorithmNames.NeoScrypt;  	break;  case 9:  	multipoolInformation.Algorithm = AlgorithmNames.Lyra2RE;  	break;  default:  	//unknown algo  	return false;  }  
Magic Number,MultiMiner.NiceHash.Extensions,CoinInformationExtensions,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.NiceHash\Extensions\MultipoolInformationExtensions.cs,PopulateFromJson,The following statement contains a magic number: switch (algorithmIndex) {  case 0:  	multipoolInformation.Algorithm = AlgorithmNames.Scrypt;  	break;  case 1:  	multipoolInformation.Algorithm = AlgorithmNames.SHA256;  	//only algo returned in Th/s  	multipoolInformation.Price /= 1000;  	break;  case 2:  	multipoolInformation.Algorithm = AlgorithmNames.ScryptN;  	break;  case 3:  	multipoolInformation.Algorithm = AlgorithmNames.X11;  	break;  case 4:  	multipoolInformation.Algorithm = AlgorithmNames.X13;  	break;  case 5:  	multipoolInformation.Algorithm = AlgorithmNames.Keccak;  	break;  case 6:  	multipoolInformation.Algorithm = AlgorithmNames.X15;  	break;  case 7:  	multipoolInformation.Algorithm = AlgorithmNames.Nist5;  	break;  case 8:  	multipoolInformation.Algorithm = AlgorithmNames.NeoScrypt;  	break;  case 9:  	multipoolInformation.Algorithm = AlgorithmNames.Lyra2RE;  	break;  default:  	//unknown algo  	return false;  }  
Magic Number,MultiMiner.NiceHash.Extensions,CoinInformationExtensions,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.NiceHash\Extensions\MultipoolInformationExtensions.cs,PopulateFromJson,The following statement contains a magic number: switch (algorithmIndex) {  case 0:  	multipoolInformation.Algorithm = AlgorithmNames.Scrypt;  	break;  case 1:  	multipoolInformation.Algorithm = AlgorithmNames.SHA256;  	//only algo returned in Th/s  	multipoolInformation.Price /= 1000;  	break;  case 2:  	multipoolInformation.Algorithm = AlgorithmNames.ScryptN;  	break;  case 3:  	multipoolInformation.Algorithm = AlgorithmNames.X11;  	break;  case 4:  	multipoolInformation.Algorithm = AlgorithmNames.X13;  	break;  case 5:  	multipoolInformation.Algorithm = AlgorithmNames.Keccak;  	break;  case 6:  	multipoolInformation.Algorithm = AlgorithmNames.X15;  	break;  case 7:  	multipoolInformation.Algorithm = AlgorithmNames.Nist5;  	break;  case 8:  	multipoolInformation.Algorithm = AlgorithmNames.NeoScrypt;  	break;  case 9:  	multipoolInformation.Algorithm = AlgorithmNames.Lyra2RE;  	break;  default:  	//unknown algo  	return false;  }  
Magic Number,MultiMiner.NiceHash.Extensions,CoinInformationExtensions,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.NiceHash\Extensions\MultipoolInformationExtensions.cs,PopulateFromJson,The following statement contains a magic number: switch (algorithmIndex) {  case 0:  	multipoolInformation.Algorithm = AlgorithmNames.Scrypt;  	break;  case 1:  	multipoolInformation.Algorithm = AlgorithmNames.SHA256;  	//only algo returned in Th/s  	multipoolInformation.Price /= 1000;  	break;  case 2:  	multipoolInformation.Algorithm = AlgorithmNames.ScryptN;  	break;  case 3:  	multipoolInformation.Algorithm = AlgorithmNames.X11;  	break;  case 4:  	multipoolInformation.Algorithm = AlgorithmNames.X13;  	break;  case 5:  	multipoolInformation.Algorithm = AlgorithmNames.Keccak;  	break;  case 6:  	multipoolInformation.Algorithm = AlgorithmNames.X15;  	break;  case 7:  	multipoolInformation.Algorithm = AlgorithmNames.Nist5;  	break;  case 8:  	multipoolInformation.Algorithm = AlgorithmNames.NeoScrypt;  	break;  case 9:  	multipoolInformation.Algorithm = AlgorithmNames.Lyra2RE;  	break;  default:  	//unknown algo  	return false;  }  
Magic Number,MultiMiner.NiceHash.Extensions,CoinInformationExtensions,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.NiceHash\Extensions\MultipoolInformationExtensions.cs,PopulateFromJson,The following statement contains a magic number: switch (algorithmIndex) {  case 0:  	multipoolInformation.Algorithm = AlgorithmNames.Scrypt;  	break;  case 1:  	multipoolInformation.Algorithm = AlgorithmNames.SHA256;  	//only algo returned in Th/s  	multipoolInformation.Price /= 1000;  	break;  case 2:  	multipoolInformation.Algorithm = AlgorithmNames.ScryptN;  	break;  case 3:  	multipoolInformation.Algorithm = AlgorithmNames.X11;  	break;  case 4:  	multipoolInformation.Algorithm = AlgorithmNames.X13;  	break;  case 5:  	multipoolInformation.Algorithm = AlgorithmNames.Keccak;  	break;  case 6:  	multipoolInformation.Algorithm = AlgorithmNames.X15;  	break;  case 7:  	multipoolInformation.Algorithm = AlgorithmNames.Nist5;  	break;  case 8:  	multipoolInformation.Algorithm = AlgorithmNames.NeoScrypt;  	break;  case 9:  	multipoolInformation.Algorithm = AlgorithmNames.Lyra2RE;  	break;  default:  	//unknown algo  	return false;  }  
Magic Number,MultiMiner.NiceHash.Extensions,CoinInformationExtensions,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.NiceHash\Extensions\MultipoolInformationExtensions.cs,PopulateFromJson,The following statement contains a magic number: switch (algorithmIndex) {  case 0:  	multipoolInformation.Algorithm = AlgorithmNames.Scrypt;  	break;  case 1:  	multipoolInformation.Algorithm = AlgorithmNames.SHA256;  	//only algo returned in Th/s  	multipoolInformation.Price /= 1000;  	break;  case 2:  	multipoolInformation.Algorithm = AlgorithmNames.ScryptN;  	break;  case 3:  	multipoolInformation.Algorithm = AlgorithmNames.X11;  	break;  case 4:  	multipoolInformation.Algorithm = AlgorithmNames.X13;  	break;  case 5:  	multipoolInformation.Algorithm = AlgorithmNames.Keccak;  	break;  case 6:  	multipoolInformation.Algorithm = AlgorithmNames.X15;  	break;  case 7:  	multipoolInformation.Algorithm = AlgorithmNames.Nist5;  	break;  case 8:  	multipoolInformation.Algorithm = AlgorithmNames.NeoScrypt;  	break;  case 9:  	multipoolInformation.Algorithm = AlgorithmNames.Lyra2RE;  	break;  default:  	//unknown algo  	return false;  }  
Magic Number,MultiMiner.NiceHash.Extensions,CoinInformationExtensions,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.NiceHash\Extensions\MultipoolInformationExtensions.cs,PopulateFromJson,The following statement contains a magic number: switch (algorithmIndex) {  case 0:  	multipoolInformation.Algorithm = AlgorithmNames.Scrypt;  	break;  case 1:  	multipoolInformation.Algorithm = AlgorithmNames.SHA256;  	//only algo returned in Th/s  	multipoolInformation.Price /= 1000;  	break;  case 2:  	multipoolInformation.Algorithm = AlgorithmNames.ScryptN;  	break;  case 3:  	multipoolInformation.Algorithm = AlgorithmNames.X11;  	break;  case 4:  	multipoolInformation.Algorithm = AlgorithmNames.X13;  	break;  case 5:  	multipoolInformation.Algorithm = AlgorithmNames.Keccak;  	break;  case 6:  	multipoolInformation.Algorithm = AlgorithmNames.X15;  	break;  case 7:  	multipoolInformation.Algorithm = AlgorithmNames.Nist5;  	break;  case 8:  	multipoolInformation.Algorithm = AlgorithmNames.NeoScrypt;  	break;  case 9:  	multipoolInformation.Algorithm = AlgorithmNames.Lyra2RE;  	break;  default:  	//unknown algo  	return false;  }  
Magic Number,MultiMiner.NiceHash.Extensions,CoinInformationExtensions,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.NiceHash\Extensions\MultipoolInformationExtensions.cs,PopulateFromJson,The following statement contains a magic number: switch (algorithmIndex) {  case 0:  	multipoolInformation.Algorithm = AlgorithmNames.Scrypt;  	break;  case 1:  	multipoolInformation.Algorithm = AlgorithmNames.SHA256;  	//only algo returned in Th/s  	multipoolInformation.Price /= 1000;  	break;  case 2:  	multipoolInformation.Algorithm = AlgorithmNames.ScryptN;  	break;  case 3:  	multipoolInformation.Algorithm = AlgorithmNames.X11;  	break;  case 4:  	multipoolInformation.Algorithm = AlgorithmNames.X13;  	break;  case 5:  	multipoolInformation.Algorithm = AlgorithmNames.Keccak;  	break;  case 6:  	multipoolInformation.Algorithm = AlgorithmNames.X15;  	break;  case 7:  	multipoolInformation.Algorithm = AlgorithmNames.Nist5;  	break;  case 8:  	multipoolInformation.Algorithm = AlgorithmNames.NeoScrypt;  	break;  case 9:  	multipoolInformation.Algorithm = AlgorithmNames.Lyra2RE;  	break;  default:  	//unknown algo  	return false;  }  
Magic Number,MultiMiner.NiceHash.Extensions,CoinInformationExtensions,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.NiceHash\Extensions\MultipoolInformationExtensions.cs,PopulateFromJson,The following statement contains a magic number: switch (algorithmIndex) {  case 0:  	multipoolInformation.Algorithm = AlgorithmNames.Scrypt;  	break;  case 1:  	multipoolInformation.Algorithm = AlgorithmNames.SHA256;  	//only algo returned in Th/s  	multipoolInformation.Price /= 1000;  	break;  case 2:  	multipoolInformation.Algorithm = AlgorithmNames.ScryptN;  	break;  case 3:  	multipoolInformation.Algorithm = AlgorithmNames.X11;  	break;  case 4:  	multipoolInformation.Algorithm = AlgorithmNames.X13;  	break;  case 5:  	multipoolInformation.Algorithm = AlgorithmNames.Keccak;  	break;  case 6:  	multipoolInformation.Algorithm = AlgorithmNames.X15;  	break;  case 7:  	multipoolInformation.Algorithm = AlgorithmNames.Nist5;  	break;  case 8:  	multipoolInformation.Algorithm = AlgorithmNames.NeoScrypt;  	break;  case 9:  	multipoolInformation.Algorithm = AlgorithmNames.Lyra2RE;  	break;  default:  	//unknown algo  	return false;  }  
Magic Number,MultiMiner.NiceHash.Extensions,CoinInformationExtensions,D:\newReposJune17\nwoolls_MultiMiner\MultiMiner.NiceHash\Extensions\MultipoolInformationExtensions.cs,PopulateFromJson,The following statement contains a magic number: multipoolInformation.Price /= 1000;  
