Implementation smell,Namespace,Class,File,Method,Description
Complex Method,EtoolTech.MongoDB.Mapper,MongoQuery,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoQuery.cs,Eq,Cyclomatic complexity of the method is 24
Complex Method,EtoolTech.MongoDB.Mapper,MongoQuery,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoQuery.cs,Gt,Cyclomatic complexity of the method is 12
Complex Method,EtoolTech.MongoDB.Mapper,MongoQuery,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoQuery.cs,Gte,Cyclomatic complexity of the method is 12
Complex Method,EtoolTech.MongoDB.Mapper,MongoQuery,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoQuery.cs,Lt,Cyclomatic complexity of the method is 12
Complex Method,EtoolTech.MongoDB.Mapper,MongoQuery,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoQuery.cs,Lte,Cyclomatic complexity of the method is 12
Complex Method,EtoolTech.MongoDB.Mapper,MongoQuery,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoQuery.cs,Ne,Cyclomatic complexity of the method is 14
Complex Method,EtoolTech.MongoDB.Mapper,ReflectionUtility,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\ReflectionUtility.cs,CheckRelations,Cyclomatic complexity of the method is 8
Complex Method,EtoolTech.MongoDB.Mapper,MongoMapperHelper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperHelper.cs,CreateIndexes,Cyclomatic complexity of the method is 13
Long Parameter List,EtoolTech.MongoDB.Mapper.Attributes,MongoRelation,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Attributes\MongoRelation.cs,MongoRelation,The method has 5 parameters.
Long Identifier,EtoolTech.MongoDB.Mapper.Configuration,MongoMapperConfiguration,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Configuration\MongoMapperConfiguration.cs,GetConfig,The length of the parameter configurationKeyConfigSectionName is 33.
Long Statement,EtoolTech.MongoDB.Mapper.Configuration,ConfigManager,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Configuration\ConfigManager.cs,GetConfigurationKeyModeEnum,The length of the statement  "		return (ConfigurationKeyModeEnum)Enum.Parse (typeof(ConfigurationKeyModeEnum)' ConfigurationManager.AppSettings ["MongoMapperConfigurationKeyMode"]); " is 149.
Long Statement,EtoolTech.MongoDB.Mapper.Configuration,ConfigManager,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Configuration\ConfigManager.cs,DataBaseName,The length of the statement  "		return String.IsNullOrEmpty (DatabasePrefix) ? cfg.Database.Name : string.Format ("{0}_{1}"' DatabasePrefix' cfg.Database.Name); " is 128.
Long Statement,EtoolTech.MongoDB.Mapper.Configuration,ConfigManager,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Configuration\ConfigManager.cs,DataBaseName,The length of the statement  "	return String.IsNullOrEmpty (DatabasePrefix) ? Config.Database.Name : string.Format ("{0}_{1}"' DatabasePrefix' Config.Database.Name); " is 134.
Long Statement,EtoolTech.MongoDB.Mapper.Configuration,MongoMapperConfiguration,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Configuration\MongoMapperConfiguration.cs,SetDbConfig,The length of the statement  "		db.GetCollection<MongoMapperConfiguracionBase> (values [2]).InsertOneAsync ((MongoMapperConfiguracionBase)Configuration); " is 121.
Long Statement,EtoolTech.MongoDB.Mapper.Configuration,MongoMapperConfiguration,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Configuration\MongoMapperConfiguration.cs,GetConfig,The length of the statement  "			var fileConfig = (MongoMapperConfiguration)ConfigurationManager.GetSection (configurationKeyConfigSectionName) ?? (MongoMapperConfiguration)ConfigurationManager.GetSection (ConfigSectionName); " is 192.
Long Statement,EtoolTech.MongoDB.Mapper.Configuration,MongoMapperConfiguration,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Configuration\MongoMapperConfiguration.cs,GetConfig,The length of the statement  "		var config = db.GetCollection<MongoMapperConfiguracionBase> (values [2]).Find (C => C.Key == values [3]).Limit (1).ToListAsync ().Result.FirstOrDefault (); " is 155.
Long Statement,EtoolTech.MongoDB.Mapper,CollectionsManager,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\CollectionsManager.cs,GetCollection,The length of the statement  "	string key = string.Format ("{0}|{1}|{2}"' Name' typeof(T).FullName' Configuration.ConfigManager.GetConfigurationKey ()); " is 121.
Long Statement,EtoolTech.MongoDB.Mapper,CollectionsManager,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\CollectionsManager.cs,GetPrimaryCollection,The length of the statement  "	string key = string.Format ("{0}|{1}|{2}"' Name' typeof(T).FullName' Configuration.ConfigManager.GetConfigurationKey ()); " is 121.
Long Statement,EtoolTech.MongoDB.Mapper,Writer,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\Writer.cs,UpdateAsync,The length of the statement  "	return CollectionsManager.GetCollection<T> (Name).ReplaceOneAsync (Builders<T>.Filter.Eq ("_id"' mongoMapperIdeable.m_id)' Document' new UpdateOptions { " is 152.
Long Statement,EtoolTech.MongoDB.Mapper,Writer,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\Writer.cs,DeleteAsync,The length of the statement  "		mongoMapperIdeable.m_id = Finder.Instance.FindIdByKey<T> (Type' MongoMapperHelper.GetPrimaryKey (Type).ToDictionary (KeyField => KeyField' KeyField => ReflectionUtility.GetPropertyValue (this' KeyField))); " is 205.
Long Statement,EtoolTech.MongoDB.Mapper,MongoQuery,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoQuery.cs,Eq,The length of the statement  "			query = Builders<T>.Filter.Regex (FieldName' new BsonRegularExpression (string.Format ("{0}i"' Value.ToString ().Replace ("%"' "")))); " is 134.
Long Statement,EtoolTech.MongoDB.Mapper,ReflectionUtility,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\ReflectionUtility.cs,BuildSchema,The length of the statement  "	List<Type> types = String.IsNullOrEmpty (ClassName) ? Assembly.GetTypes ().Where (T => T.BaseType != null && T.BaseType.Name == "MongoMapper`1").ToList () : Assembly.GetTypes ().Where (T => T.BaseType != null && T.BaseType.Name == "MongoMapper`1" && T.Name == ClassName).ToList (); " is 281.
Long Statement,EtoolTech.MongoDB.Mapper,ReflectionUtility,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\ReflectionUtility.cs,DeteleExistingIndexesAndBuildNewOnes,The length of the statement  "	List<Type> types = String.IsNullOrEmpty (ClassName) ? Assembly.GetTypes ().Where (T => T.BaseType != null && T.BaseType.Name == "MongoMapper`1").ToList () : Assembly.GetTypes ().Where (T => T.BaseType != null && T.BaseType.Name == "MongoMapper`1" && T.Name == ClassName).ToList (); " is 281.
Long Statement,EtoolTech.MongoDB.Mapper,ReflectionUtility,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\ReflectionUtility.cs,CheckRelations,The length of the statement  "	List<Type> types = String.IsNullOrEmpty (ClassName) ? Assembly.GetTypes ().Where (T => T.BaseType != null && T.BaseType.Name == "MongoMapper`1").ToList () : Assembly.GetTypes ().Where (T => T.BaseType != null && T.BaseType.Name == "MongoMapper`1" && T.Name == ClassName).ToList (); " is 281.
Long Statement,EtoolTech.MongoDB.Mapper,ReflectionUtility,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\ReflectionUtility.cs,CheckRelations,The length of the statement  "			var destinationObj = Assembly.GetTypes ().Where (T => T.BaseType != null && T.BaseType.Name == "MongoMapper`1" && T.Name == relation.RelationObjectName).ToList (); " is 163.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapperIdGenerator,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperIdGenerator.cs,FindAndModifyResult,The length of the statement  "	var result = MongoMapperHelper.Db ("Counters"' true).GetCollection<BsonDocument> ("Counters").FindOneAndUpdateAsync (Builders<BsonDocument>.Filter.Eq ("document"' ObjName)' Builders<BsonDocument>.Update.Inc ("last"' (long)1)' new FindOneAndUpdateOptions<BsonDocument> () { " is 272.
Long Statement,EtoolTech.MongoDB.Mapper,PropertyValidator,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\PropertyValidator.cs,GetPropertyValidators,The length of the statement  "			List<MethodInfo> publicMethodInfos = T.GetMethods ().Where (C => C.GetCustomAttributes (typeof(MongoPropertyValidator)' false).FirstOrDefault () != null).ToList (); " is 164.
Long Statement,EtoolTech.MongoDB.Mapper,PropertyValidator,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\PropertyValidator.cs,GetPropertyValidators,The length of the statement  "				var propValidatorAtt = (MongoPropertyValidator)methodInfo.GetCustomAttributes (typeof(MongoPropertyValidator)' false).FirstOrDefault (); " is 136.
Long Statement,EtoolTech.MongoDB.Mapper,Finder,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\Finder.cs,FindBsonDocumentById,The length of the statement  "	var result = CollectionsManager.GetCollection<T> (typeof(T).Name).Find (Builders<T>.Filter.Eq ("_id"' Id)).Limit (1).ToListAsync ().Result; " is 139.
Long Statement,EtoolTech.MongoDB.Mapper,Finder,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\Finder.cs,FindById,The length of the statement  "	var result = CollectionsManager.GetCollection<T> (typeof(T).Name).Find (Builders<T>.Filter.Eq ("_id"' Id)).Limit (1).ToListAsync ().Result; " is 139.
Long Statement,EtoolTech.MongoDB.Mapper,Finder,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\Finder.cs,FindIdByKey,The length of the statement  "	if (KeyValues.Count == 1 && KeyValues.First ().Key == "m_id" && KeyValues.First ().Value is long && (long)KeyValues.First ().Value == default(long)) { " is 150.
Long Statement,EtoolTech.MongoDB.Mapper,Finder,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\Finder.cs,FindIdByKey,The length of the statement  "	var query = Builders<T>.Filter.And (KeyValues.Select (KeyValue => Builders<T>.Filter.Eq (KeyValue.Key' KeyValue.Value)).ToArray ()); " is 132.
Long Statement,EtoolTech.MongoDB.Mapper,Finder,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\Finder.cs,FindIdByKey,The length of the statement  "	var result = CollectionsManager.GetCollection<T> (Type.Name).Find (Builders<T>.Filter.And (query)).Project (Builders<T>.Projection.Include ("_id")).Limit (1).ToListAsync ().Result; " is 180.
Long Statement,EtoolTech.MongoDB.Mapper,Finder,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\Finder.cs,FindObjectByKey,The length of the statement  "	var query = Builders<T>.Filter.And (KeyValues.Select (KeyValue => Builders<T>.Filter.Eq (KeyValue.Key' KeyValue.Value)).ToArray ()); " is 132.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapperHelper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperHelper.cs,RebuildClass,The length of the statement  "				var colNameAtt = (MongoCollectionName)ClassType.GetCustomAttributes (typeof(MongoCollectionName)' false).FirstOrDefault (); " is 123.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapperHelper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperHelper.cs,RebuildClass,The length of the statement  "	if ((RepairCollection || !ConfigManager.Config.Context.Generated) && !CollectionsManager.CollectionExists (CollectionsManager.GetCollectioName (ClassType.Name))) { " is 163.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapperHelper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperHelper.cs,RebuildClass,The length of the statement  "		Db (ClassType.Name).CreateCollectionAsync ((CollectionsManager.GetCollectioName (ClassType.Name))).GetAwaiter ().GetResult (); " is 126.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapperHelper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperHelper.cs,RebuildClass,The length of the statement  "				var properties = ClassType.GetProperties ().Where (P => P.GetCustomAttributes (typeof(BsonDefaultValueAttribute)' true).Count () != 0); " is 135.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapperHelper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperHelper.cs,RebuildClass,The length of the statement  "					var att = (BsonDefaultValueAttribute)propertyInfo.GetCustomAttributes (typeof(BsonDefaultValueAttribute)' true).FirstOrDefault (); " is 130.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapperHelper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperHelper.cs,RebuildClass,The length of the statement  "				var properties = ClassType.GetProperties ().Where (p => p.GetCustomAttributes (typeof(BsonElementAttribute)' true).Count () != 0); " is 130.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapperHelper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperHelper.cs,RebuildClass,The length of the statement  "					var att = (BsonElementAttribute)propertyInfo.GetCustomAttributes (typeof(BsonElementAttribute)' true).FirstOrDefault (); " is 120.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapperHelper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperHelper.cs,CreateIndexes,The length of the statement  "			var mongoIndex = Builders<BsonDocument>.IndexKeys.Geo2D (MongoMapperHelper.ConvertFieldName (ClassType.Name' index.Split ('|') [1]).Trim ()); " is 141.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapperHelper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperHelper.cs,CreateIndexes,The length of the statement  "				CollectionsManager.GetCollection<BsonDocument> (ClassType.Name).Indexes.CreateOneAsync (mongoIndex' new CreateIndexOptions () { " is 127.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapperHelper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperHelper.cs,CreateIndexes,The length of the statement  "				var mongoIndex = Builders<BsonDocument>.IndexKeys.Geo2DSphere (MongoMapperHelper.ConvertFieldName (ClassType.Name' index.Split ('|') [1]).Trim ()); " is 147.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapperHelper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperHelper.cs,CreateIndexes,The length of the statement  "				CollectionsManager.GetCollection<BsonDocument> (ClassType.Name).Indexes.CreateOneAsync (mongoIndex' new CreateIndexOptions () { " is 127.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapperHelper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperHelper.cs,CreateIndexes,The length of the statement  "			var indexFieldnames = MongoMapperHelper.ConvertFieldName (ClassType.Name' index.Split (''').ToList ()).Select (IndexField => IndexField.Trim ()); " is 145.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapperHelper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperHelper.cs,CreateIndexes,The length of the statement  "					CollectionsManager.GetCollection<BsonDocument> (ClassType.Name).Indexes.CreateOneAsync (indexFields' new CreateIndexOptions () { " is 128.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapperHelper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperHelper.cs,CreateIndexes,The length of the statement  "		var indexFieldnames = MongoMapperHelper.ConvertFieldName (ClassType.Name' pk.ToList ()).Select (PkField => PkField.Trim ()); " is 124.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapperHelper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperHelper.cs,CreateIndexes,The length of the statement  "				CollectionsManager.GetCollection<BsonDocument> (ClassType.Name).Indexes.CreateOneAsync (indexFields' new CreateIndexOptions () { " is 128.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapperHelper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperHelper.cs,CreateIndexes,The length of the statement  "			CollectionsManager.GetCollection<BsonDocument> (ClassType.Name).Indexes.CreateOneAsync (keys' new CreateIndexOptions () { " is 121.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapperHelper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperHelper.cs,GetExistinIndexNames,The length of the statement  "	var existingIndexNames = CollectionsManager.GetCollection<BsonDocument> (ClassType.Name).Indexes.ListAsync ().GetAwaiter ().GetResult ().ToList ().Select (Index => Index ["name"].ToString ()).ToList (); " is 202.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapperHelper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperHelper.cs,GetIndexes,The length of the statement  "			var geoSphereIndexAtt = (MongoGeo2DSphereIndex)T.GetCustomAttributes (typeof(MongoGeo2DSphereIndex)' false).FirstOrDefault (); " is 126.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\MongoMapper.cs,IsLastVersion,The length of the statement  "	var result = CollectionsManager.GetCollection<BsonDocument> (_classType.Name).Find (Builders<BsonDocument>.Filter.And (query)).Project (Builders<BsonDocument>.Projection.Include ("m_dv")).Limit (1).ToListAsync ().Result; " is 220.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\MongoMapper.cs,FillFromLastVersion,The length of the statement  "	var result = CollectionsManager.GetCollection<BsonDocument> (_classType.Name).Find (Builders<BsonDocument>.Filter.And (query)).Limit (1).ToListAsync ().Result; " is 159.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\MongoMapper.cs,GetOriginalObject,The length of the statement  "		throw new NotImplementedException ("OriginalObject: This functionality is disabled' enable EnableOriginalObject in the App.config"); " is 132.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\MongoMapper.cs,ServerUpdate,The length of the statement  "	var result = CollectionsManager.GetCollection<T> (_classType.Name).FindOneAndUpdateAsync (query' Update' new FindOneAndUpdateOptions<T> () { " is 140.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\MongoMapper.cs,ServerDelete,The length of the statement  "	var result = CollectionsManager.GetCollection<T> (typeof(T).Name).FindOneAndDeleteAsync (Query).GetAwaiter ().GetResult (); " is 123.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\MongoMapper.cs,GetPrimaryKeyValues,The length of the statement  "	return MongoMapperHelper.GetPrimaryKey (_classType).ToDictionary (KeyField => KeyField' KeyField => ReflectionUtility.GetPropertyValue (this' KeyField)); " is 153.
Long Statement,EtoolTech.MongoDB.Mapper,MongoMapperCollection,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\MongoMapperCollection.cs,GetCollection,The length of the statement  "	return FromPrimary ? CollectionsManager.GetPrimaryCollection<T> (typeof(T).Name) : CollectionsManager.GetCollection<T> (typeof(T).Name); " is 136.
Long Statement,EtoolTech.MongoDB.Mapper,Relations,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\Relations.cs,CheckRelation,The length of the statement  "	var filters = fieldValues.Select (CurrentFieldvalue => MongoQuery<BsonDocument>.Eq (Relation.RelationObjectName' CurrentFieldvalue.Key' CurrentFieldvalue.Value)).ToList (); " is 172.
Long Statement,EtoolTech.MongoDB.Mapper,Relations,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\Relations.cs,GetDownRelations,The length of the statement  "			var downRelations = relationAttList.Where (RelationAtt => RelationAtt != null && !((MongoRelation)RelationAtt).UpRelation).Cast<MongoRelation> ().ToList (); " is 156.
Long Statement,EtoolTech.MongoDB.Mapper,Relations,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\Relations.cs,GetUpRelations,The length of the statement  "			var upRelations = relationAttList.Where (RelationAtt => RelationAtt != null && ((MongoRelation)RelationAtt).UpRelation).Cast<MongoRelation> ().ToList (); " is 153.
Long Statement,EtoolTech.MongoDB.Mapper,ChildsManager,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\ChildsManager.cs,GenerateChilsIds,The length of the statement  "		item._id = ConfigManager.UseChildIncrementalId (ObjName) ? MongoMapperIdGenerator.Instance.GenerateIncrementalId (o.GetType ().Name) : MongoMapperIdGenerator.Instance.GenerateId (); " is 181.
Long Statement,EtoolTech.MongoDB.Mapper,ChildsManager,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\ChildsManager.cs,GeFieldNames,The length of the statement  "			List<PropertyInfo> pList = Sender.GetType ().GetProperties ().Where (p => p.GetCustomAttributes (typeof(MongoChildCollection)' false).FirstOrDefault () != null).ToList (); " is 171.
Complex Conditional,EtoolTech.MongoDB.Mapper,Finder,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\Finder.cs,FindIdByKey,The conditional expression  "KeyValues.Count == 1 && KeyValues.First ().Key == "m_id" && KeyValues.First ().Value is long && (long)KeyValues.First ().Value == default(long)"  is complex.
Empty Catch Block,EtoolTech.MongoDB.Mapper,MongoMapperTransaction,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Transaction\MongoMapperTransaction.cs,Commit,The method has an empty catch block.
Magic Number,EtoolTech.MongoDB.Mapper.Configuration,MongoMapperConfiguration,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Configuration\MongoMapperConfiguration.cs,SetDbConfig,The following statement contains a magic number: if (!String.IsNullOrEmpty (dbConfigKey)) {  	string[] values = dbConfigKey.Split ('|');  	var client = new MongoClient (values [0]);  	var db = client.GetDatabase (values [1]);  	db.GetCollection<MongoMapperConfiguracionBase> (values [2]).InsertOneAsync ((MongoMapperConfiguracionBase)Configuration);  }  
Magic Number,EtoolTech.MongoDB.Mapper.Configuration,MongoMapperConfiguration,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Configuration\MongoMapperConfiguration.cs,SetDbConfig,The following statement contains a magic number: db.GetCollection<MongoMapperConfiguracionBase> (values [2]).InsertOneAsync ((MongoMapperConfiguracionBase)Configuration);  
Magic Number,EtoolTech.MongoDB.Mapper.Configuration,MongoMapperConfiguration,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Configuration\MongoMapperConfiguration.cs,GetConfig,The following statement contains a magic number: if (string.IsNullOrEmpty (dbConfigKey)) {  	lock (LockCacheObject) {  		if (_cache.ContainsKey (ConfigurationKey))  			return _cache [ConfigurationKey];  		var configurationKeyConfigSectionName = ConfigSectionName;  		if (!string.IsNullOrEmpty (ConfigurationKey)) {  			configurationKeyConfigSectionName = string.Format ("{0}.{1}"' ConfigurationKey' configurationKeyConfigSectionName);  		}  		var fileConfig = (MongoMapperConfiguration)ConfigurationManager.GetSection (configurationKeyConfigSectionName) ?? (MongoMapperConfiguration)ConfigurationManager.GetSection (ConfigSectionName);  		var config = new MongoMapperConfiguracionBase {  			Context = new MongoMapperConfigurationContext {  				EnableOriginalObject = fileConfig.Context.EnableOriginalObject'  				ExceptionOnDuplicateKey = fileConfig.Context.ExceptionOnDuplicateKey'  				Generated = fileConfig.Context.Generated'  				MaxDocumentSize = fileConfig.Context.MaxDocumentSize'  				UseChidlsIncrementalId = fileConfig.Context.UseChidlsIncrementalId'  				UseIncrementalId = fileConfig.Context.UseIncrementalId  			}'  			Database = new MongoMapperConfigurationDababase {  				Name = fileConfig.Database.Name  			}'  			Server = new MongoMapperConfigurationServer {  				Url = fileConfig.Server.Url  			}'  			CustomCollectionConfig = new List<MongoMapperConfigurationElement> ()  		};  		foreach (CollectionElement element in fileConfig.CollectionConfig) {  			var configElement = new MongoMapperConfigurationElement {  				Name = element.Name'  				Context = new MongoMapperConfigurationContext {  					EnableOriginalObject = element.Context.EnableOriginalObject'  					ExceptionOnDuplicateKey = element.Context.ExceptionOnDuplicateKey'  					Generated = element.Context.Generated'  					MaxDocumentSize = element.Context.MaxDocumentSize'  					UseChidlsIncrementalId = element.Context.UseChidlsIncrementalId'  					UseIncrementalId = element.Context.UseIncrementalId  				}'  				Database = new MongoMapperConfigurationDababase {  					Name = element.Database.Name  				}'  				Server = new MongoMapperConfigurationServer {  					Url = element.Server.Url  				}  			};  			config.CustomCollectionConfig.Add (configElement);  		}  		_cache.Add (ConfigurationKey' config);  		return _cache [ConfigurationKey];  	}  } else {  	string[] values = dbConfigKey.Split ('|');  	var client = new MongoClient (values [0]);  	var db = client.GetDatabase (values [1]);  	var config = db.GetCollection<MongoMapperConfiguracionBase> (values [2]).Find (C => C.Key == values [3]).Limit (1).ToListAsync ().Result.FirstOrDefault ();  	return config;  }  
Magic Number,EtoolTech.MongoDB.Mapper.Configuration,MongoMapperConfiguration,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Configuration\MongoMapperConfiguration.cs,GetConfig,The following statement contains a magic number: if (string.IsNullOrEmpty (dbConfigKey)) {  	lock (LockCacheObject) {  		if (_cache.ContainsKey (ConfigurationKey))  			return _cache [ConfigurationKey];  		var configurationKeyConfigSectionName = ConfigSectionName;  		if (!string.IsNullOrEmpty (ConfigurationKey)) {  			configurationKeyConfigSectionName = string.Format ("{0}.{1}"' ConfigurationKey' configurationKeyConfigSectionName);  		}  		var fileConfig = (MongoMapperConfiguration)ConfigurationManager.GetSection (configurationKeyConfigSectionName) ?? (MongoMapperConfiguration)ConfigurationManager.GetSection (ConfigSectionName);  		var config = new MongoMapperConfiguracionBase {  			Context = new MongoMapperConfigurationContext {  				EnableOriginalObject = fileConfig.Context.EnableOriginalObject'  				ExceptionOnDuplicateKey = fileConfig.Context.ExceptionOnDuplicateKey'  				Generated = fileConfig.Context.Generated'  				MaxDocumentSize = fileConfig.Context.MaxDocumentSize'  				UseChidlsIncrementalId = fileConfig.Context.UseChidlsIncrementalId'  				UseIncrementalId = fileConfig.Context.UseIncrementalId  			}'  			Database = new MongoMapperConfigurationDababase {  				Name = fileConfig.Database.Name  			}'  			Server = new MongoMapperConfigurationServer {  				Url = fileConfig.Server.Url  			}'  			CustomCollectionConfig = new List<MongoMapperConfigurationElement> ()  		};  		foreach (CollectionElement element in fileConfig.CollectionConfig) {  			var configElement = new MongoMapperConfigurationElement {  				Name = element.Name'  				Context = new MongoMapperConfigurationContext {  					EnableOriginalObject = element.Context.EnableOriginalObject'  					ExceptionOnDuplicateKey = element.Context.ExceptionOnDuplicateKey'  					Generated = element.Context.Generated'  					MaxDocumentSize = element.Context.MaxDocumentSize'  					UseChidlsIncrementalId = element.Context.UseChidlsIncrementalId'  					UseIncrementalId = element.Context.UseIncrementalId  				}'  				Database = new MongoMapperConfigurationDababase {  					Name = element.Database.Name  				}'  				Server = new MongoMapperConfigurationServer {  					Url = element.Server.Url  				}  			};  			config.CustomCollectionConfig.Add (configElement);  		}  		_cache.Add (ConfigurationKey' config);  		return _cache [ConfigurationKey];  	}  } else {  	string[] values = dbConfigKey.Split ('|');  	var client = new MongoClient (values [0]);  	var db = client.GetDatabase (values [1]);  	var config = db.GetCollection<MongoMapperConfiguracionBase> (values [2]).Find (C => C.Key == values [3]).Limit (1).ToListAsync ().Result.FirstOrDefault ();  	return config;  }  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapperIdGenerator,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperIdGenerator.cs,GenerateId,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes (days)' 0' bytes' 10' 2);  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapperIdGenerator,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperIdGenerator.cs,GenerateId,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes (days)' 0' bytes' 10' 2);  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapperIdGenerator,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperIdGenerator.cs,GenerateId,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes (milliseconds)' 0' bytes' 12' 4);  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapperIdGenerator,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperIdGenerator.cs,GenerateId,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes (milliseconds)' 0' bytes' 12' 4);  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapperIdGenerator,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperIdGenerator.cs,GenerateId,The following statement contains a magic number: if (BitConverter.IsLittleEndian) {  	Array.Reverse (bytes' 10' 2);  	Array.Reverse (bytes' 12' 4);  }  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapperIdGenerator,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperIdGenerator.cs,GenerateId,The following statement contains a magic number: if (BitConverter.IsLittleEndian) {  	Array.Reverse (bytes' 10' 2);  	Array.Reverse (bytes' 12' 4);  }  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapperIdGenerator,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperIdGenerator.cs,GenerateId,The following statement contains a magic number: if (BitConverter.IsLittleEndian) {  	Array.Reverse (bytes' 10' 2);  	Array.Reverse (bytes' 12' 4);  }  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapperIdGenerator,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperIdGenerator.cs,GenerateId,The following statement contains a magic number: if (BitConverter.IsLittleEndian) {  	Array.Reverse (bytes' 10' 2);  	Array.Reverse (bytes' 12' 4);  }  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapperIdGenerator,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperIdGenerator.cs,GenerateId,The following statement contains a magic number: Array.Reverse (bytes' 10' 2);  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapperIdGenerator,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperIdGenerator.cs,GenerateId,The following statement contains a magic number: Array.Reverse (bytes' 10' 2);  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapperIdGenerator,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperIdGenerator.cs,GenerateId,The following statement contains a magic number: Array.Reverse (bytes' 12' 4);  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapperIdGenerator,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Core\MongoMapperIdGenerator.cs,GenerateId,The following statement contains a magic number: Array.Reverse (bytes' 12' 4);  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\MongoMapper.cs,MongoMapper,The following statement contains a magic number: BsonDefaults.MaxDocumentSize = ConfigManager.MaxDocumentSize (_classType.Name) * 1024 * 1024;  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapper,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\MongoMapper.cs,MongoMapper,The following statement contains a magic number: BsonDefaults.MaxDocumentSize = ConfigManager.MaxDocumentSize (_classType.Name) * 1024 * 1024;  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapperCollection,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\MongoMapperCollection.cs,MongoMapperCollection,The following statement contains a magic number: BsonDefaults.MaxDocumentSize = ConfigManager.MaxDocumentSize (typeof(T).Name) * 1024 * 1024;  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapperCollection,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\MongoMapperCollection.cs,MongoMapperCollection,The following statement contains a magic number: BsonDefaults.MaxDocumentSize = ConfigManager.MaxDocumentSize (typeof(T).Name) * 1024 * 1024;  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapperCollection,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\MongoMapperCollection.cs,MongoMapperCollection,The following statement contains a magic number: BsonDefaults.MaxDocumentSize = ConfigManager.MaxDocumentSize (typeof(T).Name) * 1024 * 1024;  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapperCollection,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\MongoMapperCollection.cs,MongoMapperCollection,The following statement contains a magic number: BsonDefaults.MaxDocumentSize = ConfigManager.MaxDocumentSize (typeof(T).Name) * 1024 * 1024;  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapperTransaction,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Transaction\MongoMapperTransaction.cs,Commit,The following statement contains a magic number: try {  	Commiting = true;  	foreach (Queue queue in TransactionQueue.OrderBy (q => q.Order)) {  		if (queue.OperationType == OperationType.Insert) {  			var result = Writer.Instance.Insert (queue.Type.Name' queue.Type' queue.Document);  			queue.Procesed = true;  		}  		if (queue.OperationType == OperationType.Update) {  			var result = Writer.Instance.Update (queue.Type.Name' queue.Type' queue.Document);  			queue.Procesed = true;  		}  		if (queue.OperationType == OperationType.Delete) {  			var result = Writer.Instance.Delete (queue.Type.Name' queue.Type' queue.Document);  			queue.Procesed = true;  			queue.Result = 2;  		}  	}  } catch (Exception) {  	//TODO: Dejarlo todo como estaba.  } finally {  	TransactionQueue.Clear ();  	Commiting = false;  }  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapperTransaction,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Transaction\MongoMapperTransaction.cs,Commit,The following statement contains a magic number: foreach (Queue queue in TransactionQueue.OrderBy (q => q.Order)) {  	if (queue.OperationType == OperationType.Insert) {  		var result = Writer.Instance.Insert (queue.Type.Name' queue.Type' queue.Document);  		queue.Procesed = true;  	}  	if (queue.OperationType == OperationType.Update) {  		var result = Writer.Instance.Update (queue.Type.Name' queue.Type' queue.Document);  		queue.Procesed = true;  	}  	if (queue.OperationType == OperationType.Delete) {  		var result = Writer.Instance.Delete (queue.Type.Name' queue.Type' queue.Document);  		queue.Procesed = true;  		queue.Result = 2;  	}  }  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapperTransaction,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Transaction\MongoMapperTransaction.cs,Commit,The following statement contains a magic number: if (queue.OperationType == OperationType.Delete) {  	var result = Writer.Instance.Delete (queue.Type.Name' queue.Type' queue.Document);  	queue.Procesed = true;  	queue.Result = 2;  }  
Magic Number,EtoolTech.MongoDB.Mapper,MongoMapperTransaction,F:\newReposMay17\emiliotorrens_MongoMapper.NET\EtoolTech.MongoDB.Mapper\Transaction\MongoMapperTransaction.cs,Commit,The following statement contains a magic number: queue.Result = 2;  
