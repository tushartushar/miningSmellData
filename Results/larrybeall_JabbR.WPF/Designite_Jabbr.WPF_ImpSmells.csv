Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Jabbr.WPF.Markup.Converters,GroupTypeConverter,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\Markup\Converters\GroupTypeConverter.cs,Convert,Cyclomatic complexity of the method is 9
Complex Method,Jabbr.WPF.Markup.Converters,GroupTypeConverter,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\Markup\Converters\GroupTypeConverter.cs,ConvertBack,Cyclomatic complexity of the method is 9
Complex Method,Jabbr.WPF.Rooms,ChatWindowViewModel,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\Rooms\ChatWindowViewModel.cs,SetTyping,Cyclomatic complexity of the method is 10
Complex Method,Jabbr.WPF.Rooms,RoomViewModel,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\Rooms\RoomViewModel.cs,Populate,Cyclomatic complexity of the method is 8
Long Identifier,Jabbr.WPF.Messages,ChatMessageGroupViewModel,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\Messages\ChatMessageGroupViewModel.cs,MessagesOnCollectionChanged,The length of the parameter notifyCollectionChangedEventArgs is 32.
Long Identifier,Jabbr.WPF,App,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\App.xaml.cs,TaskSchedulerOnUnobservedTaskException,The length of the parameter unobservedTaskExceptionEventArgs is 32.
Long Statement,Jabbr.WPF.Infrastructure.Services,AuthenticationService,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\Infrastructure\Services\AuthenticationService.cs,SignIn,The length of the statement  "	tokenAuthentication.ContinueWith (failedTokenTask => HandleSigninException (failedTokenTask.Exception' taskCompletionSource)' TaskContinuationOptions.OnlyOnFaulted); " is 165.
Long Statement,Jabbr.WPF.Infrastructure.Services,AuthenticationService,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\Infrastructure\Services\AuthenticationService.cs,SetupSigninTaskContinuations,The length of the statement  "	signinTask.ContinueWith (completedTask => CompleteSignin (completedTask.Result' taskCompletionSource)' TaskContinuationOptions.OnlyOnRanToCompletion); " is 150.
Long Statement,Jabbr.WPF.Infrastructure.Services,AuthenticationService,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\Infrastructure\Services\AuthenticationService.cs,SetupSigninTaskContinuations,The length of the statement  "	signinTask.ContinueWith (failedTask => HandleSigninException (failedTask.Exception' taskCompletionSource)' TaskContinuationOptions.OnlyOnFaulted); " is 146.
Long Statement,Jabbr.WPF.Infrastructure.Services,AuthenticationService,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\Infrastructure\Services\AuthenticationService.cs,SetupSigninTaskContinuations,The length of the statement  "	taskCompletionSource.Task.ContinueWith (completedSignin => OnSigninComplete (completedSignin.Result' _logOnInfo.Rooms.Any ())' TaskContinuationOptions.OnlyOnRanToCompletion); " is 174.
Long Statement,Jabbr.WPF.Infrastructure.Services,RoomService,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\Infrastructure\Services\RoomService.cs,LeaveRoom,The length of the statement  "	_client.LeaveRoom (roomViewModel.RoomName).ContinueWith (task => PostOnUi (() => roomViewModel.JoinState = JoinState.NotJoined)' TaskContinuationOptions.OnlyOnRanToCompletion); " is 176.
Long Statement,Jabbr.WPF.Infrastructure.Services,MessageService,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\Infrastructure\Services\MessageService.cs,ProcessMessageAsync,The length of the statement  "	task.ContinueWith (completedTask => OnMessageProcessed (completedTask.Result' room)' TaskContinuationOptions.OnlyOnRanToCompletion); " is 132.
Long Statement,Jabbr.WPF.Infrastructure,AutoRefreshCollectionViewSource,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\Infrastructure\AutoRefreshCollectionViewSource.cs,OnSourceCollectionChanged,The length of the statement  "    //Failing to do so would case the collection view itself to linger in memory until all the removed items are garbage collected." is 127.
Long Statement,Jabbr.WPF.Infrastructure,AutoRefreshCollectionViewSource,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\Infrastructure\AutoRefreshCollectionViewSource.cs,IsViewRefreshNeeded,The length of the statement  "	return SortDescriptions.Any (sort => string.Equals (sort.PropertyName' propertyName)) || GroupDescriptions.OfType<PropertyGroupDescription> ().Where (g => string.Equals (g.PropertyName' propertyName)).Any (); " is 208.
Long Statement,Jabbr.WPF,NinjectBootstrapper,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\NinjectBootstrapper.cs,RegisterApplicationBindings,The length of the statement  "	_kernel.Bind<JabbRClient> ().ToMethod (context => new JabbRClient ("http://jabbr.net"' new LongPollingTransport ())).InSingletonScope (); " is 137.
Long Statement,Jabbr.WPF,ShellView,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\ShellView.xaml.cs,TitleBarMouseDown,The length of the statement  "	if (e.RightButton != MouseButtonState.Pressed && e.MiddleButton != MouseButtonState.Pressed && e.LeftButton == MouseButtonState.Pressed) " is 136.
Long Statement,Jabbr.WPF,ShellView,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\ShellView.xaml.cs,TitleBarMouseMove,The length of the statement  "	if (e.RightButton != MouseButtonState.Pressed && e.MiddleButton != MouseButtonState.Pressed && e.LeftButton == MouseButtonState.Pressed && WindowState == WindowState.Maximized) { " is 178.
Long Statement,Jabbr.WPF.Rooms,RoomViewModel,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\Rooms\RoomViewModel.cs,IsRoomVisible,The length of the statement  "	if (Application.Current.MainWindow.IsActive == false || Application.Current.MainWindow.WindowState == WindowState.Minimized) " is 124.
Long Statement,Jabbr.WPF.Rooms,RoomViewModel,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\Rooms\RoomViewModel.cs,OnActivate,The length of the statement  "	List<ICanHaveUnreadMessages> hasUnreadMessags = _messages.OfType<ICanHaveUnreadMessages> ().Where (x => x.HasUnreadMessages).ToList (); " is 135.
Complex Conditional,Jabbr.WPF,ShellView,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\ShellView.xaml.cs,TitleBarMouseMove,The conditional expression  "e.RightButton != MouseButtonState.Pressed && e.MiddleButton != MouseButtonState.Pressed && e.LeftButton == MouseButtonState.Pressed && WindowState == WindowState.Maximized"  is complex.
Magic Number,Jabbr.WPF.Infrastructure.Services,RoomService,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\Infrastructure\Services\RoomService.cs,GetRooms,The following statement contains a magic number: if (timeSinceLastRetrieve.TotalSeconds <= 30) {  	OnRoomsRetrieved ();  	return;  }  
Magic Number,Jabbr.WPF,ShellView,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\ShellView.xaml.cs,TitleBarMouseDown,The following statement contains a magic number: if (e.ClickCount == 2 && (ResizeMode == ResizeMode.CanResizeWithGrip || ResizeMode == ResizeMode.CanResize)) {  	WindowState = WindowState == WindowState.Maximized ? WindowState.Normal : WindowState.Maximized;  }  
Magic Number,Jabbr.WPF,ShellView,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\ShellView.xaml.cs,TitleBarMouseMove,The following statement contains a magic number: if (e.RightButton != MouseButtonState.Pressed && e.MiddleButton != MouseButtonState.Pressed && e.LeftButton == MouseButtonState.Pressed && WindowState == WindowState.Maximized) {  	// Calcualting correct left coordinate for multi-screen system.  	Point mouseAbsolute = PointToScreen (Mouse.GetPosition (this));  	double width = RestoreBounds.Width;  	double left = mouseAbsolute.X - width / 2;  	// Aligning window's position to fit the screen.  	double virtualScreenWidth = SystemParameters.VirtualScreenWidth;  	left = left + width > virtualScreenWidth ? virtualScreenWidth - width : left;  	Point mousePosition = e.MouseDevice.GetPosition (this);  	// When dragging the window down at the very top of the border'  	// move the window a bit upwards to avoid showing the resize handle as soon as the mouse button is released  	Top = mousePosition.Y < 5 ? -5 : mouseAbsolute.Y - mousePosition.Y;  	Left = left;  	// Restore window to normal state.  	WindowState = WindowState.Normal;  	DragMove ();  }  
Magic Number,Jabbr.WPF,ShellView,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\ShellView.xaml.cs,TitleBarMouseMove,The following statement contains a magic number: if (e.RightButton != MouseButtonState.Pressed && e.MiddleButton != MouseButtonState.Pressed && e.LeftButton == MouseButtonState.Pressed && WindowState == WindowState.Maximized) {  	// Calcualting correct left coordinate for multi-screen system.  	Point mouseAbsolute = PointToScreen (Mouse.GetPosition (this));  	double width = RestoreBounds.Width;  	double left = mouseAbsolute.X - width / 2;  	// Aligning window's position to fit the screen.  	double virtualScreenWidth = SystemParameters.VirtualScreenWidth;  	left = left + width > virtualScreenWidth ? virtualScreenWidth - width : left;  	Point mousePosition = e.MouseDevice.GetPosition (this);  	// When dragging the window down at the very top of the border'  	// move the window a bit upwards to avoid showing the resize handle as soon as the mouse button is released  	Top = mousePosition.Y < 5 ? -5 : mouseAbsolute.Y - mousePosition.Y;  	Left = left;  	// Restore window to normal state.  	WindowState = WindowState.Normal;  	DragMove ();  }  
Magic Number,Jabbr.WPF,ShellView,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\ShellView.xaml.cs,TitleBarMouseMove,The following statement contains a magic number: if (e.RightButton != MouseButtonState.Pressed && e.MiddleButton != MouseButtonState.Pressed && e.LeftButton == MouseButtonState.Pressed && WindowState == WindowState.Maximized) {  	// Calcualting correct left coordinate for multi-screen system.  	Point mouseAbsolute = PointToScreen (Mouse.GetPosition (this));  	double width = RestoreBounds.Width;  	double left = mouseAbsolute.X - width / 2;  	// Aligning window's position to fit the screen.  	double virtualScreenWidth = SystemParameters.VirtualScreenWidth;  	left = left + width > virtualScreenWidth ? virtualScreenWidth - width : left;  	Point mousePosition = e.MouseDevice.GetPosition (this);  	// When dragging the window down at the very top of the border'  	// move the window a bit upwards to avoid showing the resize handle as soon as the mouse button is released  	Top = mousePosition.Y < 5 ? -5 : mouseAbsolute.Y - mousePosition.Y;  	Left = left;  	// Restore window to normal state.  	WindowState = WindowState.Normal;  	DragMove ();  }  
Magic Number,Jabbr.WPF,ShellView,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\ShellView.xaml.cs,TitleBarMouseMove,The following statement contains a magic number: Top = mousePosition.Y < 5 ? -5 : mouseAbsolute.Y - mousePosition.Y;  
Magic Number,Jabbr.WPF,ShellView,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\ShellView.xaml.cs,TitleBarMouseMove,The following statement contains a magic number: Top = mousePosition.Y < 5 ? -5 : mouseAbsolute.Y - mousePosition.Y;  
Magic Number,Jabbr.WPF.Rooms,RoomViewModel,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\Rooms\RoomViewModel.cs,OnJoined,The following statement contains a magic number: _typingTimer.Interval = TimeSpan.FromSeconds (3);  
Magic Number,Jabbr.WPF.Users,RoomUserViewModel,F:\newReposMay17\larrybeall_JabbR.WPF\Jabbr.WPF\Jabbr.WPF\Users\RoomUserViewModel.cs,RoomUserViewModel,The following statement contains a magic number: _typingTimer.Interval = TimeSpan.FromSeconds (3);  
