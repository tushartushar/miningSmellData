Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MQCloud.Transport.Implementation,Connection,C:\repos\mqcloud_csharp\Transport\TransportAPI\Implementation\Connection.cs,OnGatewayEventsListnerOnReceiveReady,Cyclomatic complexity of the method is 8
Long Parameter List,MQCloud.Transport.Extensions,OperationRequestExtensions,C:\repos\mqcloud_csharp\Transport\TransportAPI\Extensions\OperationRequestExtensions.cs,SendProtocolOperationRequest,The method has 5 parameters.
Long Parameter List,MQCloud.Transport.Extensions,OperationRequestExtensions,C:\repos\mqcloud_csharp\Transport\TransportAPI\Extensions\OperationRequestExtensions.cs,SendUserOperationRequest,The method has 5 parameters.
Long Parameter List,MQCloud.Transport.Extensions,OperationResponseExtensions,C:\repos\mqcloud_csharp\Transport\TransportAPI\Extensions\OperationResponseExtensions.cs,SendProtocolOperationResponse,The method has 5 parameters.
Long Parameter List,MQCloud.Transport.Extensions,OperationResponseExtensions,C:\repos\mqcloud_csharp\Transport\TransportAPI\Extensions\OperationResponseExtensions.cs,SendUserOperationResponse,The method has 5 parameters.
Long Parameter List,MQCloud.Transport.Implementation,Connection,C:\repos\mqcloud_csharp\Transport\TransportAPI\Implementation\Connection.cs,Connect,The method has 9 parameters.
Long Parameter List,MQCloud.Transport.Protocol.Utilities,SchemaPrinter,C:\repos\mqcloud_csharp\Transport\TransportAPI\Protocol\Utilities\SchemaPrinter.cs,PrepareSchema,The method has 8 parameters.
Long Statement,MQCloud.Transport.Implementation,Connection,C:\repos\mqcloud_csharp\Transport\TransportAPI\Implementation\Connection.cs,Connect,The length of the statement  "			callback (message.Message' response => OperationsExchange.SendUserOperationResponse (response' message.Topic' message.SenderId' message.CallbackId)); " is 149.
Long Statement,MQCloud.Transport.Implementation,Connection,C:\repos\mqcloud_csharp\Transport\TransportAPI\Implementation\Connection.cs,OnGatewayEventsListnerOnReceiveReady,The length of the statement  "		GatewayOperationsExchange.SendProtocolOperationRequest (request' Informer.GatewayOperationsTopic' Id' _asyncOperationsManager.RegisterAsyncOperation (operationResponse =>  { " is 173.
Long Statement,MQCloud.Transport.Implementation,NetworkManager,C:\repos\mqcloud_csharp\Transport\TransportAPI\Implementation\NetworkManager.cs,Resolve,The length of the statement  "	foreach (var address in Dns.GetHostEntry (Dns.GetHostName ()).AddressList.Where (address => address.AddressFamily == AddressFamily.InterNetwork)) { " is 147.
Long Statement,MQCloud.Transport.Implementation,OperationsPublisher,C:\repos\mqcloud_csharp\Transport\TransportAPI\Implementation\OperationsPublisher.cs,OnResponse,The length of the statement  "				var callbackId = _asyncOperationsManager.RegisterAsyncOperation (operationResponse => packageContext.OnResult (operationResponse)); " is 131.
Long Statement,MQCloud.Transport.Implementation,OperationsPublisher,C:\repos\mqcloud_csharp\Transport\TransportAPI\Implementation\OperationsPublisher.cs,CleanUpLoop,The length of the statement  "		var outOfDateOperations = _pendingOperations.Where (context => (now - context.OutDate > zero) && _asyncOperationsManager.RemoveCallback (context.OperationCallbackId)); " is 167.
Long Statement,MQCloud.Transport.Protocol.Utilities,SchemaPrinter,C:\repos\mqcloud_csharp\Transport\TransportAPI\Protocol\Utilities\SchemaPrinter.cs,PrepareSchema,The length of the statement  "		var names = Regex.Matches (newmatch' @"[a-zA-Z]\w+"' RegexOptions.Multiline).Cast<Match> ().Select (match1 => match1.Value).ToDictionary (s => s' s => s); " is 154.
Long Statement,MQCloud.Transport.Protocol.Utilities,SchemaPrinter,C:\repos\mqcloud_csharp\Transport\TransportAPI\Protocol\Utilities\SchemaPrinter.cs,PrepareSchema,The length of the statement  "		newmatch = names.Skip (2).Aggregate (newmatch' (current' pair) => Regex.Replace (current' @"(?<=\s)" + names [pair.Key] + @"(?=\s)"' enumName + names [pair.Key])); " is 163.
Long Statement,MQCloud.Transport.Protocol.Utilities,SchemaPrinter,C:\repos\mqcloud_csharp\Transport\TransportAPI\Protocol\Utilities\SchemaPrinter.cs,PrepareSchema,The length of the statement  "		result = Regex.Replace (result' string.Format (@"(?<=(.*\s+{0}.*\[default\s+=\s+))(?<name1>\w+)"' enumName)' enumName + "${name1}"); " is 132.
Empty Catch Block,MQCloud.Transport.Implementation,NetworkManager,C:\repos\mqcloud_csharp\Transport\TransportAPI\Implementation\NetworkManager.cs,OpenSocket,The method has an empty catch block.
Magic Number,MQCloud.Transport.Extensions,OperationRequestExtensions,C:\repos\mqcloud_csharp\Transport\TransportAPI\Extensions\OperationRequestExtensions.cs,GetOperationRequestCallackId,The following statement contains a magic number: return e.Skip (2).First ().Buffer.ToInt32 ();  
Magic Number,MQCloud.Transport.Extensions,OperationRequestExtensions,C:\repos\mqcloud_csharp\Transport\TransportAPI\Extensions\OperationRequestExtensions.cs,GetUserOperationRequest,The following statement contains a magic number: return new ThematicUserOperationRequest {  	Topic = message.GetOperationRequestTopic ()'  	CallbackId = message.GetOperationRequestCallackId ()'  	SenderId = message.GetOperationRequestSenderId ()'  	Message = message.GetBytes (3)  };  
Magic Number,MQCloud.Transport.Extensions,OperationRequestExtensions,C:\repos\mqcloud_csharp\Transport\TransportAPI\Extensions\OperationRequestExtensions.cs,GetProtocolOperationRequest,The following statement contains a magic number: return new ThematicOperationRequest<T> {  	Topic = message.GetOperationRequestTopic ()'  	CallbackId = message.GetOperationRequestCallackId ()'  	SenderId = message.GetOperationRequestSenderId ()'  	Message = message.GetBytes (3).ToMessage<T> ()  };  
Magic Number,MQCloud.Transport.Extensions,OperationResponseExtensions,C:\repos\mqcloud_csharp\Transport\TransportAPI\Extensions\OperationResponseExtensions.cs,GetUserOperationResponse,The following statement contains a magic number: return new ThematicUserOperationResponse {  	Topic = message.GetOperationResponseTopic ()'  	CallbackId = message.GetOperationResponseCallackId ()'  	Message = message.GetBytes (2)  };  
Magic Number,MQCloud.Transport.Extensions,OperationResponseExtensions,C:\repos\mqcloud_csharp\Transport\TransportAPI\Extensions\OperationResponseExtensions.cs,GetProtocolOperationResponse,The following statement contains a magic number: return new ThematicOperationResponse<T> {  	Topic = message.GetOperationResponseTopic ()'  	CallbackId = message.GetOperationResponseCallackId ()'  	Message = message.GetBytes (2).ToMessage<T> ()  };  
Magic Number,MQCloud.Transport.Protocol.Utilities,SchemaPrinter,C:\repos\mqcloud_csharp\Transport\TransportAPI\Protocol\Utilities\SchemaPrinter.cs,PrepareSchema,The following statement contains a magic number: foreach (Match match in matches) {  	var newmatch = match.Value;  	var names = Regex.Matches (newmatch' @"[a-zA-Z]\w+"' RegexOptions.Multiline).Cast<Match> ().Select (match1 => match1.Value).ToDictionary (s => s' s => s);  	var enumName = names.ElementAt (1).Value;  	newmatch = names.Skip (2).Aggregate (newmatch' (current' pair) => Regex.Replace (current' @"(?<=\s)" + names [pair.Key] + @"(?=\s)"' enumName + names [pair.Key]));  	result = result.Replace (match.Value' newmatch);  	result = Regex.Replace (result' string.Format (@"(?<=(.*\s+{0}.*\[default\s+=\s+))(?<name1>\w+)"' enumName)' enumName + "${name1}");  }  
Magic Number,MQCloud.Transport.Protocol.Utilities,SchemaPrinter,C:\repos\mqcloud_csharp\Transport\TransportAPI\Protocol\Utilities\SchemaPrinter.cs,PrepareSchema,The following statement contains a magic number: newmatch = names.Skip (2).Aggregate (newmatch' (current' pair) => Regex.Replace (current' @"(?<=\s)" + names [pair.Key] + @"(?=\s)"' enumName + names [pair.Key]));  
Missing Default,MQCloud.Transport.Implementation,Connection,C:\repos\mqcloud_csharp\Transport\TransportAPI\Implementation\Connection.cs,OnGatewayEventsListnerOnReceiveReady,The following switch statement is missing a default case: switch ((EventTypeCode)message.TypeAttributes [1]) {  //TODO: add events handling  case EventTypeCode.Peers: {  	if (response.Topic.StartsWith (Informer.GatewayOperationsTopic)) {  		var operationTopic = response.Topic.Replace (Informer.GatewayOperationsTopic' "");  		// TODO : replace only first appearence  		OperationsPublisher publisher;  		if (_operationsPublishers.TryGetValue (operationTopic' out publisher)) {  			publisher.UpdateSubscriptions ((EventPeers)message);  		}  	}  	else if (response.Topic.StartsWith (Informer.GatewayEventsTopic)) {  		var eventTopic = response.Topic.Replace (Informer.GatewayEventsTopic' "");  		// TODO : replace only first appearence  		EventsSubscriptionController publisher;  		if (_eventSubscribers.TryGetValue (eventTopic' out publisher)) {  			publisher.UpdateSubscriptions ((EventPeers)message);  		}  	}  	break;  }  case EventTypeCode.Ping: {  	var request = new OperationPongRequest {  		Id = Id  	};  	GatewayOperationsExchange.SendProtocolOperationRequest (request' Informer.GatewayOperationsTopic' Id' _asyncOperationsManager.RegisterAsyncOperation (operationResponse =>  {  	}));  	break;  }  }  
