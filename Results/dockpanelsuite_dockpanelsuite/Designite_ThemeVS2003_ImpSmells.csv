Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,CalculateTabs_ToolWindow,Cyclomatic complexity of the method is 13
Long Identifier,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,,The length of the parameter _ToolWindowTabSeperatorGapBottom is 32.
Long Statement,WeifenLuo.WinFormsUI.ThemeVS2003,InertButton,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\InertButton.cs,DrawImage,The length of the statement  "                            gMono.DrawImage(image' new Point[3] { new Point(0' 0)' new Point(image.Width - 1' 0)' new Point(0' image.Height - 1) }' rect' GraphicsUnit.Pixel' imageAttr); " is 157.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneCaption,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneCaption.cs,DrawCaption,The length of the statement  "                    g.DrawLine(pen' rectCaption.X + 1' rectCaption.Y + rectCaption.Height - 1' rectCaption.X + rectCaption.Width - 2' rectCaption.Y + rectCaption.Height - 1); " is 154.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneCaption,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneCaption.cs,DrawCaption,The length of the statement  "                    g.DrawLine(pen' rectCaption.X + rectCaption.Width - 1' rectCaption.Y + 1' rectCaption.X + rectCaption.Width - 1' rectCaption.Y + rectCaption.Height - 2); " is 153.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneCaption,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneCaption.cs,DrawCaption,The length of the statement  "            m_buttonClose.BorderColor = m_buttonAutoHide.BorderColor = (DockPane.IsActivated ? ActiveButtonBorderColor : InactiveButtonBorderColor); " is 136.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneCaption,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneCaption.cs,DrawCaption,The length of the statement  "            TextRenderer.DrawText(g' DockPane.CaptionText' Font' rectCaptionText' DockPane.IsActivated ? ActiveTextColor : InactiveTextColor' TextFormat); " is 142.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,GetTabOriginalWidth_Document,The length of the statement  "                        sizeText = TextRenderer.MeasureText(g' content.DockHandler.TabText' boldFont' new Size(DocumentTabMaxWidth' height)' DocumentTextFormat); " is 137.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,GetTabOriginalWidth_Document,The length of the statement  "                    sizeText = TextRenderer.MeasureText(content.DockHandler.TabText' Font' new Size(DocumentTabMaxWidth' height)' DocumentTextFormat); " is 130.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,GetTabRectangle_Document,The length of the statement  "            return new Rectangle(tab.TabX' rectTabStrip.Y + DocumentTabGapTop' tab.TabWidth' rectTabStrip.Height - DocumentTabGapTop); " is 122.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,SetInertButtons,The length of the statement  "            m_buttonScrollLeft.Visible = m_buttonScrollRight.Visible = m_buttonClose.Visible = (DockPane.DockState == DockState.Document); " is 126.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,SetInertButtons,The length of the statement  "            m_buttonClose.BorderColor = m_buttonScrollRight.BorderColor	= m_buttonScrollLeft.BorderColor = SystemColors.ControlDarkDark; " is 124.
Magic Number,WeifenLuo.WinFormsUI.ThemeVS2003,InertButton,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\InertButton.cs,DrawImage,The following statement contains a magic number: if (m_monochrom)              {                  imageAttr = new ImageAttributes();                    // transform the monochrom image                  // white -> BackColor                  // black -> ForeColor                  ColorMap[] colorMap = new ColorMap[2];                  colorMap[0] = new ColorMap();                  colorMap[0].OldColor = Color.White;                  colorMap[0].NewColor = this.BackColor;                  colorMap[1] = new ColorMap();                  colorMap[1].OldColor = Color.Black;                  colorMap[1].NewColor = this.ForeColor;                  imageAttr.SetRemapTable(colorMap);              }
Magic Number,WeifenLuo.WinFormsUI.ThemeVS2003,InertButton,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\InertButton.cs,DrawImage,The following statement contains a magic number: if ((!Enabled) && (null == ImageDisabled))              {                  using (Bitmap bitmapMono = new Bitmap(image' ClientRectangle.Size))                  {                      if (imageAttr != null)                      {                          using (Graphics gMono = Graphics.FromImage(bitmapMono))                          {                              gMono.DrawImage(image' new Point[3] { new Point(0' 0)' new Point(image.Width - 1' 0)' new Point(0' image.Height - 1) }' rect' GraphicsUnit.Pixel' imageAttr);                          }                      }                      ControlPaint.DrawImageDisabled(g' bitmapMono' 0' 0' this.BackColor);                  }              }              else              {                  // Three points provided are upper-left' upper-right and                   // lower-left of the destination parallelogram.                   Point[] pts = new Point[3];                  pts[0].X = (Enabled && m_mouseOver && m_mouseCapture) ? 1 : 0;                  pts[0].Y = (Enabled && m_mouseOver && m_mouseCapture) ? 1 : 0;                  pts[1].X = pts[0].X + ClientRectangle.Width;                  pts[1].Y = pts[0].Y;                  pts[2].X = pts[0].X;                  pts[2].Y = pts[1].Y + ClientRectangle.Height;                    if (imageAttr == null)                      g.DrawImage(image' pts' rect' GraphicsUnit.Pixel);                  else                      g.DrawImage(image' pts' rect' GraphicsUnit.Pixel' imageAttr);              }
Magic Number,WeifenLuo.WinFormsUI.ThemeVS2003,InertButton,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\InertButton.cs,DrawImage,The following statement contains a magic number: if ((!Enabled) && (null == ImageDisabled))              {                  using (Bitmap bitmapMono = new Bitmap(image' ClientRectangle.Size))                  {                      if (imageAttr != null)                      {                          using (Graphics gMono = Graphics.FromImage(bitmapMono))                          {                              gMono.DrawImage(image' new Point[3] { new Point(0' 0)' new Point(image.Width - 1' 0)' new Point(0' image.Height - 1) }' rect' GraphicsUnit.Pixel' imageAttr);                          }                      }                      ControlPaint.DrawImageDisabled(g' bitmapMono' 0' 0' this.BackColor);                  }              }              else              {                  // Three points provided are upper-left' upper-right and                   // lower-left of the destination parallelogram.                   Point[] pts = new Point[3];                  pts[0].X = (Enabled && m_mouseOver && m_mouseCapture) ? 1 : 0;                  pts[0].Y = (Enabled && m_mouseOver && m_mouseCapture) ? 1 : 0;                  pts[1].X = pts[0].X + ClientRectangle.Width;                  pts[1].Y = pts[0].Y;                  pts[2].X = pts[0].X;                  pts[2].Y = pts[1].Y + ClientRectangle.Height;                    if (imageAttr == null)                      g.DrawImage(image' pts' rect' GraphicsUnit.Pixel);                  else                      g.DrawImage(image' pts' rect' GraphicsUnit.Pixel' imageAttr);              }
Magic Number,WeifenLuo.WinFormsUI.ThemeVS2003,InertButton,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\InertButton.cs,DrawImage,The following statement contains a magic number: if ((!Enabled) && (null == ImageDisabled))              {                  using (Bitmap bitmapMono = new Bitmap(image' ClientRectangle.Size))                  {                      if (imageAttr != null)                      {                          using (Graphics gMono = Graphics.FromImage(bitmapMono))                          {                              gMono.DrawImage(image' new Point[3] { new Point(0' 0)' new Point(image.Width - 1' 0)' new Point(0' image.Height - 1) }' rect' GraphicsUnit.Pixel' imageAttr);                          }                      }                      ControlPaint.DrawImageDisabled(g' bitmapMono' 0' 0' this.BackColor);                  }              }              else              {                  // Three points provided are upper-left' upper-right and                   // lower-left of the destination parallelogram.                   Point[] pts = new Point[3];                  pts[0].X = (Enabled && m_mouseOver && m_mouseCapture) ? 1 : 0;                  pts[0].Y = (Enabled && m_mouseOver && m_mouseCapture) ? 1 : 0;                  pts[1].X = pts[0].X + ClientRectangle.Width;                  pts[1].Y = pts[0].Y;                  pts[2].X = pts[0].X;                  pts[2].Y = pts[1].Y + ClientRectangle.Height;                    if (imageAttr == null)                      g.DrawImage(image' pts' rect' GraphicsUnit.Pixel);                  else                      g.DrawImage(image' pts' rect' GraphicsUnit.Pixel' imageAttr);              }
Magic Number,WeifenLuo.WinFormsUI.ThemeVS2003,InertButton,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\InertButton.cs,DrawImage,The following statement contains a magic number: if ((!Enabled) && (null == ImageDisabled))              {                  using (Bitmap bitmapMono = new Bitmap(image' ClientRectangle.Size))                  {                      if (imageAttr != null)                      {                          using (Graphics gMono = Graphics.FromImage(bitmapMono))                          {                              gMono.DrawImage(image' new Point[3] { new Point(0' 0)' new Point(image.Width - 1' 0)' new Point(0' image.Height - 1) }' rect' GraphicsUnit.Pixel' imageAttr);                          }                      }                      ControlPaint.DrawImageDisabled(g' bitmapMono' 0' 0' this.BackColor);                  }              }              else              {                  // Three points provided are upper-left' upper-right and                   // lower-left of the destination parallelogram.                   Point[] pts = new Point[3];                  pts[0].X = (Enabled && m_mouseOver && m_mouseCapture) ? 1 : 0;                  pts[0].Y = (Enabled && m_mouseOver && m_mouseCapture) ? 1 : 0;                  pts[1].X = pts[0].X + ClientRectangle.Width;                  pts[1].Y = pts[0].Y;                  pts[2].X = pts[0].X;                  pts[2].Y = pts[1].Y + ClientRectangle.Height;                    if (imageAttr == null)                      g.DrawImage(image' pts' rect' GraphicsUnit.Pixel);                  else                      g.DrawImage(image' pts' rect' GraphicsUnit.Pixel' imageAttr);              }
Magic Number,WeifenLuo.WinFormsUI.ThemeVS2003,InertButton,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\InertButton.cs,DrawText,The following statement contains a magic number: rect.Width -= 2 * BorderWidth;
Magic Number,WeifenLuo.WinFormsUI.ThemeVS2003,InertButton,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\InertButton.cs,DrawText,The following statement contains a magic number: rect.Height -= 2 * BorderWidth;
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003AutoHideStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003AutoHideStrip.cs,VS2003AutoHideStrip,The following statement contains a magic number: _dockStates = new DockState[4];
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003AutoHideStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003AutoHideStrip.cs,VS2003AutoHideStrip,The following statement contains a magic number: _dockStates[2] = DockState.DockTopAutoHide;
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003AutoHideStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003AutoHideStrip.cs,VS2003AutoHideStrip,The following statement contains a magic number: _dockStates[3] = DockState.DockBottomAutoHide;
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003AutoHideStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003AutoHideStrip.cs,DrawTabStrip,The following statement contains a magic number: if (dockState == DockState.DockLeftAutoHide || dockState == DockState.DockRightAutoHide)              {                  Matrix matrixRotated = new Matrix();                  matrixRotated.RotateAt(90' new PointF((float)rectTabStrip.X + (float)rectTabStrip.Height / 2'                      (float)rectTabStrip.Y + (float)rectTabStrip.Height / 2));                  g.Transform = matrixRotated;              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003AutoHideStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003AutoHideStrip.cs,DrawTabStrip,The following statement contains a magic number: if (dockState == DockState.DockLeftAutoHide || dockState == DockState.DockRightAutoHide)              {                  Matrix matrixRotated = new Matrix();                  matrixRotated.RotateAt(90' new PointF((float)rectTabStrip.X + (float)rectTabStrip.Height / 2'                      (float)rectTabStrip.Y + (float)rectTabStrip.Height / 2));                  g.Transform = matrixRotated;              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003AutoHideStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003AutoHideStrip.cs,DrawTabStrip,The following statement contains a magic number: if (dockState == DockState.DockLeftAutoHide || dockState == DockState.DockRightAutoHide)              {                  Matrix matrixRotated = new Matrix();                  matrixRotated.RotateAt(90' new PointF((float)rectTabStrip.X + (float)rectTabStrip.Height / 2'                      (float)rectTabStrip.Y + (float)rectTabStrip.Height / 2));                  g.Transform = matrixRotated;              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003AutoHideStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003AutoHideStrip.cs,GetTransformedRectangle,The following statement contains a magic number: pts[0].X = (float)rect.X + (float)rect.Width / 2;
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003AutoHideStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003AutoHideStrip.cs,GetTransformedRectangle,The following statement contains a magic number: pts[0].Y = (float)rect.Y + (float)rect.Height / 2;
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003AutoHideStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003AutoHideStrip.cs,GetTransformedRectangle,The following statement contains a magic number: using (Matrix matrix = new Matrix())              {                  matrix.RotateAt(90' new PointF((float)rectTabStrip.X + (float)rectTabStrip.Height / 2'                                                 (float)rectTabStrip.Y + (float)rectTabStrip.Height / 2));                  matrix.TransformPoints(pts);              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003AutoHideStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003AutoHideStrip.cs,GetTransformedRectangle,The following statement contains a magic number: using (Matrix matrix = new Matrix())              {                  matrix.RotateAt(90' new PointF((float)rectTabStrip.X + (float)rectTabStrip.Height / 2'                                                 (float)rectTabStrip.Y + (float)rectTabStrip.Height / 2));                  matrix.TransformPoints(pts);              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003AutoHideStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003AutoHideStrip.cs,GetTransformedRectangle,The following statement contains a magic number: using (Matrix matrix = new Matrix())              {                  matrix.RotateAt(90' new PointF((float)rectTabStrip.X + (float)rectTabStrip.Height / 2'                                                 (float)rectTabStrip.Y + (float)rectTabStrip.Height / 2));                  matrix.TransformPoints(pts);              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003AutoHideStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003AutoHideStrip.cs,GetTransformedRectangle,The following statement contains a magic number: return new Rectangle((int)(pts[0].X - (float)rect.Height / 2 + .5F)'                  (int)(pts[0].Y - (float)rect.Width / 2 + .5F)'                  rect.Height' rect.Width);
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003AutoHideStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003AutoHideStrip.cs,GetTransformedRectangle,The following statement contains a magic number: return new Rectangle((int)(pts[0].X - (float)rect.Height / 2 + .5F)'                  (int)(pts[0].Y - (float)rect.Width / 2 + .5F)'                  rect.Height' rect.Width);
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneCaption,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneCaption.cs,DrawCaption,The following statement contains a magic number: if (!DockPane.IsActivated)              {                  using (Pen pen = new Pen(InactiveBorderColor))                  {                      g.DrawLine(pen' rectCaption.X + 1' rectCaption.Y' rectCaption.X + rectCaption.Width - 2' rectCaption.Y);                      g.DrawLine(pen' rectCaption.X + 1' rectCaption.Y + rectCaption.Height - 1' rectCaption.X + rectCaption.Width - 2' rectCaption.Y + rectCaption.Height - 1);                      g.DrawLine(pen' rectCaption.X' rectCaption.Y + 1' rectCaption.X' rectCaption.Y + rectCaption.Height - 2);                      g.DrawLine(pen' rectCaption.X + rectCaption.Width - 1' rectCaption.Y + 1' rectCaption.X + rectCaption.Width - 1' rectCaption.Y + rectCaption.Height - 2);                  }              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneCaption,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneCaption.cs,DrawCaption,The following statement contains a magic number: if (!DockPane.IsActivated)              {                  using (Pen pen = new Pen(InactiveBorderColor))                  {                      g.DrawLine(pen' rectCaption.X + 1' rectCaption.Y' rectCaption.X + rectCaption.Width - 2' rectCaption.Y);                      g.DrawLine(pen' rectCaption.X + 1' rectCaption.Y + rectCaption.Height - 1' rectCaption.X + rectCaption.Width - 2' rectCaption.Y + rectCaption.Height - 1);                      g.DrawLine(pen' rectCaption.X' rectCaption.Y + 1' rectCaption.X' rectCaption.Y + rectCaption.Height - 2);                      g.DrawLine(pen' rectCaption.X + rectCaption.Width - 1' rectCaption.Y + 1' rectCaption.X + rectCaption.Width - 1' rectCaption.Y + rectCaption.Height - 2);                  }              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneCaption,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneCaption.cs,DrawCaption,The following statement contains a magic number: if (!DockPane.IsActivated)              {                  using (Pen pen = new Pen(InactiveBorderColor))                  {                      g.DrawLine(pen' rectCaption.X + 1' rectCaption.Y' rectCaption.X + rectCaption.Width - 2' rectCaption.Y);                      g.DrawLine(pen' rectCaption.X + 1' rectCaption.Y + rectCaption.Height - 1' rectCaption.X + rectCaption.Width - 2' rectCaption.Y + rectCaption.Height - 1);                      g.DrawLine(pen' rectCaption.X' rectCaption.Y + 1' rectCaption.X' rectCaption.Y + rectCaption.Height - 2);                      g.DrawLine(pen' rectCaption.X + rectCaption.Width - 1' rectCaption.Y + 1' rectCaption.X + rectCaption.Width - 1' rectCaption.Y + rectCaption.Height - 2);                  }              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneCaption,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneCaption.cs,DrawCaption,The following statement contains a magic number: if (!DockPane.IsActivated)              {                  using (Pen pen = new Pen(InactiveBorderColor))                  {                      g.DrawLine(pen' rectCaption.X + 1' rectCaption.Y' rectCaption.X + rectCaption.Width - 2' rectCaption.Y);                      g.DrawLine(pen' rectCaption.X + 1' rectCaption.Y + rectCaption.Height - 1' rectCaption.X + rectCaption.Width - 2' rectCaption.Y + rectCaption.Height - 1);                      g.DrawLine(pen' rectCaption.X' rectCaption.Y + 1' rectCaption.X' rectCaption.Y + rectCaption.Height - 2);                      g.DrawLine(pen' rectCaption.X + rectCaption.Width - 1' rectCaption.Y + 1' rectCaption.X + rectCaption.Width - 1' rectCaption.Y + rectCaption.Height - 2);                  }              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,GetOutline,The following statement contains a magic number: Point[] pts = new Point[8];
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,GetOutline,The following statement contains a magic number: if (Appearance == DockPane.AppearanceStyle.Document)              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Bottom))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));                  pts[1] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[2] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[6] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Bottom));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Bottom));              }              else              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Top))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Top));                  pts[1] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Top));                  pts[2] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[6] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,GetOutline,The following statement contains a magic number: if (Appearance == DockPane.AppearanceStyle.Document)              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Bottom))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));                  pts[1] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[2] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[6] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Bottom));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Bottom));              }              else              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Top))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Top));                  pts[1] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Top));                  pts[2] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[6] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,GetOutline,The following statement contains a magic number: if (Appearance == DockPane.AppearanceStyle.Document)              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Bottom))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));                  pts[1] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[2] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[6] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Bottom));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Bottom));              }              else              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Top))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Top));                  pts[1] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Top));                  pts[2] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[6] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,GetOutline,The following statement contains a magic number: if (Appearance == DockPane.AppearanceStyle.Document)              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Bottom))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));                  pts[1] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[2] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[6] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Bottom));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Bottom));              }              else              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Top))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Top));                  pts[1] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Top));                  pts[2] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[6] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,GetOutline,The following statement contains a magic number: if (Appearance == DockPane.AppearanceStyle.Document)              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Bottom))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));                  pts[1] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[2] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[6] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Bottom));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Bottom));              }              else              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Top))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Top));                  pts[1] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Top));                  pts[2] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[6] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,GetOutline,The following statement contains a magic number: if (Appearance == DockPane.AppearanceStyle.Document)              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Bottom))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));                  pts[1] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[2] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[6] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Bottom));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Bottom));              }              else              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Top))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Top));                  pts[1] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Top));                  pts[2] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[6] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,GetOutline,The following statement contains a magic number: if (Appearance == DockPane.AppearanceStyle.Document)              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Bottom))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));                  pts[1] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[2] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[6] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Bottom));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Bottom));              }              else              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Top))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Top));                  pts[1] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Top));                  pts[2] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[6] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,GetOutline,The following statement contains a magic number: if (Appearance == DockPane.AppearanceStyle.Document)              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Bottom))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));                  pts[1] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[2] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[6] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Bottom));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Bottom));              }              else              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Top))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Top));                  pts[1] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Top));                  pts[2] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[6] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,GetOutline,The following statement contains a magic number: if (Appearance == DockPane.AppearanceStyle.Document)              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Bottom))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));                  pts[1] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[2] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[6] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Bottom));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Bottom));              }              else              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Top))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Top));                  pts[1] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Top));                  pts[2] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[6] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,GetOutline,The following statement contains a magic number: if (Appearance == DockPane.AppearanceStyle.Document)              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Bottom))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));                  pts[1] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[2] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[6] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Bottom));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Bottom));              }              else              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Top))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Top));                  pts[1] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Top));                  pts[2] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[6] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,GetOutline,The following statement contains a magic number: if (Appearance == DockPane.AppearanceStyle.Document)              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Bottom))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));                  pts[1] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[2] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[6] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Bottom));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Bottom));              }              else              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Top))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Top));                  pts[1] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Top));                  pts[2] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[6] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,GetOutline,The following statement contains a magic number: if (Appearance == DockPane.AppearanceStyle.Document)              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Bottom))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));                  pts[1] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[2] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[6] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Bottom));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Bottom));              }              else              {                  Rectangle rectTab = Tabs[index].Rectangle.Value;                  rectTab.Intersect(TabsRectangle);                  int y = DockPane.PointToClient(PointToScreen(new Point(0' rectTab.Top))).Y;                  Rectangle rectPaneClient = DockPane.ClientRectangle;                  pts[0] = DockPane.PointToScreen(new Point(rectPaneClient.Left' rectPaneClient.Top));                  pts[1] = DockPane.PointToScreen(new Point(rectPaneClient.Right' rectPaneClient.Top));                  pts[2] = DockPane.PointToScreen(new Point(rectPaneClient.Right' y));                  pts[3] = PointToScreen(new Point(rectTab.Right' rectTab.Top));                  pts[4] = PointToScreen(new Point(rectTab.Right' rectTab.Bottom));                  pts[5] = PointToScreen(new Point(rectTab.Left' rectTab.Bottom));                  pts[6] = PointToScreen(new Point(rectTab.Left' rectTab.Top));                  pts[7] = DockPane.PointToScreen(new Point(rectPaneClient.Left' y));              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,DrawTab_Document,The following statement contains a magic number: if (DockPane.ActiveContent == tab.Content)              {                  g.FillRectangle(ActiveBackBrush' rect);                  g.DrawLine(OutlineOuterPen' rect.X' rect.Y' rect.X' rect.Y + rect.Height);                  g.DrawLine(OutlineOuterPen' rect.X' rect.Y' rect.X + rect.Width - 1' rect.Y);                  g.DrawLine(OutlineInnerPen'                      rect.X + rect.Width - 1' rect.Y'                      rect.X + rect.Width - 1' rect.Y + rect.Height - 1);                    if (DockPane.DockPanel.ShowDocumentIcon)                  {                      Icon icon = (tab.Content as Form).Icon;                      Rectangle rectIcon = new Rectangle(                          rect.X + DocumentIconGapLeft'                          rect.Y + (rect.Height - DocumentIconHeight) / 2'                          DocumentIconWidth' DocumentIconHeight);                        g.DrawIcon(tab.ContentForm.Icon' rectIcon);                  }                    if (DockPane.IsActiveDocumentPane)                  {                      using (Font boldFont = new Font(this.Font' FontStyle.Bold))                      {                          TextRenderer.DrawText(g' tab.Content.DockHandler.TabText' boldFont' rectText' ActiveTextColor' DocumentTextFormat);                      }                  }                  else                      TextRenderer.DrawText(g' tab.Content.DockHandler.TabText' Font' rectText' InactiveTextColor' DocumentTextFormat);              }              else              {                  if (Tabs.IndexOf(DockPane.ActiveContent) != Tabs.IndexOf(tab) + 1)                      g.DrawLine(TabSeperatorPen'                          rect.X + rect.Width - 1' rect.Y'                          rect.X + rect.Width - 1' rect.Y + rect.Height - 1 - DocumentTabGapTop);                    if (DockPane.DockPanel.ShowDocumentIcon)                  {                      Icon icon = tab.ContentForm.Icon;                      Rectangle rectIcon = new Rectangle(                          rect.X + DocumentIconGapLeft'                          rect.Y + (rect.Height - DocumentIconHeight) / 2'                          DocumentIconWidth' DocumentIconHeight);                        g.DrawIcon(tab.ContentForm.Icon' rectIcon);                  }                    TextRenderer.DrawText(g' tab.Content.DockHandler.TabText' Font' rectText' InactiveTextColor' DocumentTextFormat);              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003DockPaneStrip,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003DockPaneStrip.cs,DrawTab_Document,The following statement contains a magic number: if (DockPane.ActiveContent == tab.Content)              {                  g.FillRectangle(ActiveBackBrush' rect);                  g.DrawLine(OutlineOuterPen' rect.X' rect.Y' rect.X' rect.Y + rect.Height);                  g.DrawLine(OutlineOuterPen' rect.X' rect.Y' rect.X + rect.Width - 1' rect.Y);                  g.DrawLine(OutlineInnerPen'                      rect.X + rect.Width - 1' rect.Y'                      rect.X + rect.Width - 1' rect.Y + rect.Height - 1);                    if (DockPane.DockPanel.ShowDocumentIcon)                  {                      Icon icon = (tab.Content as Form).Icon;                      Rectangle rectIcon = new Rectangle(                          rect.X + DocumentIconGapLeft'                          rect.Y + (rect.Height - DocumentIconHeight) / 2'                          DocumentIconWidth' DocumentIconHeight);                        g.DrawIcon(tab.ContentForm.Icon' rectIcon);                  }                    if (DockPane.IsActiveDocumentPane)                  {                      using (Font boldFont = new Font(this.Font' FontStyle.Bold))                      {                          TextRenderer.DrawText(g' tab.Content.DockHandler.TabText' boldFont' rectText' ActiveTextColor' DocumentTextFormat);                      }                  }                  else                      TextRenderer.DrawText(g' tab.Content.DockHandler.TabText' Font' rectText' InactiveTextColor' DocumentTextFormat);              }              else              {                  if (Tabs.IndexOf(DockPane.ActiveContent) != Tabs.IndexOf(tab) + 1)                      g.DrawLine(TabSeperatorPen'                          rect.X + rect.Width - 1' rect.Y'                          rect.X + rect.Width - 1' rect.Y + rect.Height - 1 - DocumentTabGapTop);                    if (DockPane.DockPanel.ShowDocumentIcon)                  {                      Icon icon = tab.ContentForm.Icon;                      Rectangle rectIcon = new Rectangle(                          rect.X + DocumentIconGapLeft'                          rect.Y + (rect.Height - DocumentIconHeight) / 2'                          DocumentIconWidth' DocumentIconHeight);                        g.DrawIcon(tab.ContentForm.Icon' rectIcon);                  }                    TextRenderer.DrawText(g' tab.Content.DockHandler.TabText' Font' rectText' InactiveTextColor' DocumentTextFormat);              }
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2003Theme,C:\repos\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2003\VS2003Theme.cs,VS2003Theme,The following statement contains a magic number: Measures.SplitterSize = 4;
