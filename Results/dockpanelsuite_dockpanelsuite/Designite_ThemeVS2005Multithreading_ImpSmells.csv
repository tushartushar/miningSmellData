Implementation smell,Namespace,Class,File,Method,Description
Long Method,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The method has 112 lines of code.
Complex Method,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,DrawTab,Cyclomatic complexity of the method is 8
Complex Method,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneCaption,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneCaption.cs,DrawCaption,Cyclomatic complexity of the method is 9
Complex Method,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,CalculateTabs_ToolWindow,Cyclomatic complexity of the method is 12
Complex Method,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,CalculateTabs_Document,Cyclomatic complexity of the method is 14
Complex Method,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,Cyclomatic complexity of the method is 20
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,DrawTabStrip,The length of the statement  "		matrixRotated.RotateAt (90' new PointF ((float)rectTabStrip.X + (float)rectTabStrip.Height / 2' (float)rectTabStrip.Y + (float)rectTabStrip.Height / 2)); " is 153.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,CalculateTabs,The length of the statement  "			int width = imageWidth + ImageGapLeft + ImageGapRight + TextRenderer.MeasureText (tab.Content.DockHandler.TabText' TextFont).Width + TextGapLeft + TextGapRight; " is 160.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,GetTabRectangle,The length of the statement  "	int y = rectTabStrip.Y + (dockState == DockState.DockTopAutoHide || dockState == DockState.DockRightAutoHide ? 0 : TabGapTop); " is 126.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,GetTransformedRectangle,The length of the statement  "		matrix.RotateAt (90' new PointF ((float)rectTabStrip.X + (float)rectTabStrip.Height / 2' (float)rectTabStrip.Y + (float)rectTabStrip.Height / 2)); " is 146.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,GetTransformedRectangle,The length of the statement  "	return new Rectangle ((int)(pts [0].X - (float)rect.Height / 2 + .5F)' (int)(pts [0].Y - (float)rect.Width / 2 + .5F)' rect.Height' rect.Width); " is 144.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneCaption,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneCaption.cs,DrawCaption,The length of the statement  "		LinearGradientMode gradientMode = DockPane.DockPanel.Theme.Skin.DockPaneStripSkin.ToolWindowGradient.ActiveCaptionGradient.LinearGradientMode; " is 142.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneCaption,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneCaption.cs,DrawCaption,The length of the statement  "		Color startColor = DockPane.DockPanel.Theme.Skin.DockPaneStripSkin.ToolWindowGradient.InactiveCaptionGradient.StartColor; " is 121.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneCaption,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneCaption.cs,DrawCaption,The length of the statement  "		LinearGradientMode gradientMode = DockPane.DockPanel.Theme.Skin.DockPaneStripSkin.ToolWindowGradient.InactiveCaptionGradient.LinearGradientMode; " is 144.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneCaption,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneCaption.cs,DrawCaption,The length of the statement  "	TextRenderer.DrawText (g' DockPane.CaptionText' TextFont' DrawHelper.RtlTransform (this' rectCaptionText)' colorText' TextFormat); " is 130.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,MeasureHeight_ToolWindow,The length of the statement  "	int height = Math.Max (TextFont.Height + (PatchController.EnableHighDpi == true ? DocumentIconGapBottom : 0)' ToolWindowImageHeight + ToolWindowImageGapTop + ToolWindowImageGapBottom) + ToolWindowStripGapTop + ToolWindowStripGapBottom; " is 235.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,MeasureHeight_Document,The length of the statement  "	int height = Math.Max (TextFont.Height + DocumentTabGapTop + (PatchController.EnableHighDpi == true ? DocumentIconGapBottom : 0)' ButtonClose.Height + DocumentButtonGapTop + DocumentButtonGapBottom) + DocumentStripGapBottom + DocumentStripGapTop; " is 246.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,OnPaint,The length of the statement  "		rect.Width += DocumentTabGapLeft + DocumentTabGapRight + DocumentButtonGapRight + ButtonClose.Width + ButtonWindowList.Width; " is 125.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetMaxTabWidth_ToolWindow,The length of the statement  "	return ToolWindowImageWidth + sizeString.Width + ToolWindowImageGapLeft + ToolWindowImageGapRight + ToolWindowTextGapRight; " is 123.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetMaxTabWidth_Document,The length of the statement  "	Size sizeText = TextRenderer.MeasureText (content.DockHandler.TabText' BoldFont' new Size (DocumentTabMaxWidth' height)' DocumentTextFormat); " is 141.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,DrawTabStrip_Document,The length of the statement  "		g.DrawLine (PenDocumentTabActiveBorder' rectTabStrip.Left' rectTabStrip.Top + 1' rectTabStrip.Right' rectTabStrip.Top + 1); " is 123.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,DrawTabStrip_Document,The length of the statement  "		g.DrawLine (PenDocumentTabActiveBorder' rectTabStrip.Left' rectTabStrip.Bottom - 1' rectTabStrip.Right' rectTabStrip.Bottom - 1); " is 129.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The length of the statement  "				GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2); " is 137.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The length of the statement  "				GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2); " is 137.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The length of the statement  "				GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2); " is 135.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The length of the statement  "				GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2); " is 135.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The length of the statement  "				GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2); " is 137.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The length of the statement  "				GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2); " is 137.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The length of the statement  "				GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2); " is 135.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The length of the statement  "				GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2); " is 135.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The length of the statement  "			GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom); " is 121.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The length of the statement  "			GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom); " is 121.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The length of the statement  "	if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) { " is 163.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,DrawTab_ToolWindow,The length of the statement  "	Rectangle rectIcon = new Rectangle (rect.X + ToolWindowImageGapLeft' rect.Y + rect.Height - 1 - ToolWindowImageGapBottom - ToolWindowImageHeight' ToolWindowImageWidth' ToolWindowImageHeight); " is 191.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,DrawTab_ToolWindow,The length of the statement  "	Rectangle rectText = PatchController.EnableHighDpi == true ? new Rectangle (rect.X + ToolWindowImageGapLeft' rect.Y - 1 + rect.Height - ToolWindowImageGapBottom - TextFont.Height' ToolWindowImageWidth' TextFont.Height) : rectIcon; " is 230.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,DrawTab_ToolWindow,The length of the statement  "	rectText.Width = rect.Width - rectIcon.Width - ToolWindowImageGapLeft - ToolWindowImageGapRight - ToolWindowTextGapRight; " is 121.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,DrawTab_ToolWindow,The length of the statement  "		LinearGradientMode gradientMode = DockPane.DockPanel.Theme.Skin.DockPaneStripSkin.ToolWindowGradient.ActiveTabGradient.LinearGradientMode; " is 138.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,DrawTab_ToolWindow,The length of the statement  "		LinearGradientMode gradientMode = DockPane.DockPanel.Theme.Skin.DockPaneStripSkin.ToolWindowGradient.InactiveTabGradient.LinearGradientMode; " is 140.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,DrawTab_Document,The length of the statement  "	Rectangle rectIcon = new Rectangle (rect.X + DocumentIconGapLeft' rect.Y + rect.Height - 1 - DocumentIconGapBottom - DocumentIconHeight' DocumentIconWidth' DocumentIconHeight); " is 176.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,DrawTab_Document,The length of the statement  "	Rectangle rectText = PatchController.EnableHighDpi == true ? new Rectangle (rect.X + DocumentIconGapLeft' rect.Y + rect.Height - DocumentIconGapBottom - TextFont.Height' DocumentIconWidth' TextFont.Height) : rectIcon; " is 217.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,DrawTab_Document,The length of the statement  "		LinearGradientMode gradientMode = DockPane.DockPanel.Theme.Skin.DockPaneStripSkin.DocumentGradient.ActiveTabGradient.LinearGradientMode; " is 136.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,DrawTab_Document,The length of the statement  "		LinearGradientMode gradientMode = DockPane.DockPanel.Theme.Skin.DockPaneStripSkin.DocumentGradient.InactiveTabGradient.LinearGradientMode; " is 138.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,WindowList_Click,The length of the statement  "	var workingArea = Screen.GetWorkingArea (ButtonWindowList.PointToScreen (new Point (ButtonWindowList.Width / 2' ButtonWindowList.Height / 2))); " is 143.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,WindowList_Click,The length of the statement  "	var menu = new Rectangle (ButtonWindowList.PointToScreen (new Point (0' ButtonWindowList.Location.Y + ButtonWindowList.Height))' SelectMenu.Size); " is 146.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,WindowList_Click,The length of the statement  "	var menuMargined = new Rectangle (menu.X - SelectMenuMargin' menu.Y - SelectMenuMargin' menu.Width + SelectMenuMargin' menu.Height + SelectMenuMargin); " is 151.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,WindowList_Click,The length of the statement  "		newPoint.Y = DrawHelper.Balance (SelectMenu.Size.Height' SelectMenuMargin' newPoint.Y' workingArea.Top' workingArea.Bottom); " is 124.
Long Statement,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingPaneIndicator,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingPaneIndicator.cs,HitTest,The length of the statement  "		if (_bitmapPaneDiamondHotSpot.GetPixel (pt.X' pt.Y) == _bitmapPaneDiamondHotSpotIndex.GetPixel (_hotSpots [i].X' _hotSpots [i].Y)) " is 130.
Complex Conditional,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The conditional expression  "Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full"  is complex.
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,DrawTabStrip,The following statement contains a magic number: if (dockState == DockState.DockLeftAutoHide || dockState == DockState.DockRightAutoHide) {  	Matrix matrixRotated = new Matrix ();  	matrixRotated.RotateAt (90' new PointF ((float)rectTabStrip.X + (float)rectTabStrip.Height / 2' (float)rectTabStrip.Y + (float)rectTabStrip.Height / 2));  	g.Transform = matrixRotated;  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,DrawTabStrip,The following statement contains a magic number: if (dockState == DockState.DockLeftAutoHide || dockState == DockState.DockRightAutoHide) {  	Matrix matrixRotated = new Matrix ();  	matrixRotated.RotateAt (90' new PointF ((float)rectTabStrip.X + (float)rectTabStrip.Height / 2' (float)rectTabStrip.Y + (float)rectTabStrip.Height / 2));  	g.Transform = matrixRotated;  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,DrawTabStrip,The following statement contains a magic number: if (dockState == DockState.DockLeftAutoHide || dockState == DockState.DockRightAutoHide) {  	Matrix matrixRotated = new Matrix ();  	matrixRotated.RotateAt (90' new PointF ((float)rectTabStrip.X + (float)rectTabStrip.Height / 2' (float)rectTabStrip.Y + (float)rectTabStrip.Height / 2));  	g.Transform = matrixRotated;  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,DrawTabStrip,The following statement contains a magic number: matrixRotated.RotateAt (90' new PointF ((float)rectTabStrip.X + (float)rectTabStrip.Height / 2' (float)rectTabStrip.Y + (float)rectTabStrip.Height / 2));  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,DrawTabStrip,The following statement contains a magic number: matrixRotated.RotateAt (90' new PointF ((float)rectTabStrip.X + (float)rectTabStrip.Height / 2' (float)rectTabStrip.Y + (float)rectTabStrip.Height / 2));  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,DrawTabStrip,The following statement contains a magic number: matrixRotated.RotateAt (90' new PointF ((float)rectTabStrip.X + (float)rectTabStrip.Height / 2' (float)rectTabStrip.Y + (float)rectTabStrip.Height / 2));  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,DrawTab,The following statement contains a magic number: using (Matrix matrixRotate = g.Transform) {  	g.Transform = MatrixIdentity;  	// Draw the icon  	Rectangle rectImage = rectTabOrigin;  	rectImage.X += ImageGapLeft;  	rectImage.Y += ImageGapTop;  	int imageHeight = rectTabOrigin.Height - ImageGapTop - ImageGapBottom;  	int imageWidth = ImageWidth;  	if (imageHeight > ImageHeight)  		imageWidth = ImageWidth * (imageHeight / ImageHeight);  	rectImage.Height = imageHeight;  	rectImage.Width = imageWidth;  	rectImage = GetTransformedRectangle (dockState' rectImage);  	if (dockState == DockState.DockLeftAutoHide || dockState == DockState.DockRightAutoHide) {  		// The DockState is DockLeftAutoHide or DockRightAutoHide' so rotate the image 90 degrees to the right.   		Rectangle rectTransform = RtlTransform (rectImage' dockState);  		Point[] rotationPoints =  {  			new Point (rectTransform.X + rectTransform.Width' rectTransform.Y)'  			new Point (rectTransform.X + rectTransform.Width' rectTransform.Y + rectTransform.Height)'  			new Point (rectTransform.X' rectTransform.Y)  		};  		using (Icon rotatedIcon = new Icon (((Form)content).Icon' 16' 16)) {  			g.DrawImage (rotatedIcon.ToBitmap ()' rotationPoints);  		}  	} else {  		// Draw the icon normally without any rotation.  		g.DrawIcon (((Form)content).Icon' RtlTransform (rectImage' dockState));  	}  	// Draw the text  	Rectangle rectText = rectTabOrigin;  	rectText.X += ImageGapLeft + imageWidth + ImageGapRight + TextGapLeft;  	rectText.Width -= ImageGapLeft + imageWidth + ImageGapRight + TextGapLeft;  	rectText = RtlTransform (GetTransformedRectangle (dockState' rectText)' dockState);  	Color textColor = DockPanel.Theme.Skin.AutoHideStripSkin.TabGradient.TextColor;  	if (dockState == DockState.DockLeftAutoHide || dockState == DockState.DockRightAutoHide)  		g.DrawString (content.DockHandler.TabText' TextFont' new SolidBrush (textColor)' rectText' StringFormatTabVertical);  	else  		g.DrawString (content.DockHandler.TabText' TextFont' new SolidBrush (textColor)' rectText' StringFormatTabHorizontal);  	// Set rotate back  	g.Transform = matrixRotate;  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,DrawTab,The following statement contains a magic number: using (Matrix matrixRotate = g.Transform) {  	g.Transform = MatrixIdentity;  	// Draw the icon  	Rectangle rectImage = rectTabOrigin;  	rectImage.X += ImageGapLeft;  	rectImage.Y += ImageGapTop;  	int imageHeight = rectTabOrigin.Height - ImageGapTop - ImageGapBottom;  	int imageWidth = ImageWidth;  	if (imageHeight > ImageHeight)  		imageWidth = ImageWidth * (imageHeight / ImageHeight);  	rectImage.Height = imageHeight;  	rectImage.Width = imageWidth;  	rectImage = GetTransformedRectangle (dockState' rectImage);  	if (dockState == DockState.DockLeftAutoHide || dockState == DockState.DockRightAutoHide) {  		// The DockState is DockLeftAutoHide or DockRightAutoHide' so rotate the image 90 degrees to the right.   		Rectangle rectTransform = RtlTransform (rectImage' dockState);  		Point[] rotationPoints =  {  			new Point (rectTransform.X + rectTransform.Width' rectTransform.Y)'  			new Point (rectTransform.X + rectTransform.Width' rectTransform.Y + rectTransform.Height)'  			new Point (rectTransform.X' rectTransform.Y)  		};  		using (Icon rotatedIcon = new Icon (((Form)content).Icon' 16' 16)) {  			g.DrawImage (rotatedIcon.ToBitmap ()' rotationPoints);  		}  	} else {  		// Draw the icon normally without any rotation.  		g.DrawIcon (((Form)content).Icon' RtlTransform (rectImage' dockState));  	}  	// Draw the text  	Rectangle rectText = rectTabOrigin;  	rectText.X += ImageGapLeft + imageWidth + ImageGapRight + TextGapLeft;  	rectText.Width -= ImageGapLeft + imageWidth + ImageGapRight + TextGapLeft;  	rectText = RtlTransform (GetTransformedRectangle (dockState' rectText)' dockState);  	Color textColor = DockPanel.Theme.Skin.AutoHideStripSkin.TabGradient.TextColor;  	if (dockState == DockState.DockLeftAutoHide || dockState == DockState.DockRightAutoHide)  		g.DrawString (content.DockHandler.TabText' TextFont' new SolidBrush (textColor)' rectText' StringFormatTabVertical);  	else  		g.DrawString (content.DockHandler.TabText' TextFont' new SolidBrush (textColor)' rectText' StringFormatTabHorizontal);  	// Set rotate back  	g.Transform = matrixRotate;  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,DrawTab,The following statement contains a magic number: if (dockState == DockState.DockLeftAutoHide || dockState == DockState.DockRightAutoHide) {  	// The DockState is DockLeftAutoHide or DockRightAutoHide' so rotate the image 90 degrees to the right.   	Rectangle rectTransform = RtlTransform (rectImage' dockState);  	Point[] rotationPoints =  {  		new Point (rectTransform.X + rectTransform.Width' rectTransform.Y)'  		new Point (rectTransform.X + rectTransform.Width' rectTransform.Y + rectTransform.Height)'  		new Point (rectTransform.X' rectTransform.Y)  	};  	using (Icon rotatedIcon = new Icon (((Form)content).Icon' 16' 16)) {  		g.DrawImage (rotatedIcon.ToBitmap ()' rotationPoints);  	}  } else {  	// Draw the icon normally without any rotation.  	g.DrawIcon (((Form)content).Icon' RtlTransform (rectImage' dockState));  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,DrawTab,The following statement contains a magic number: if (dockState == DockState.DockLeftAutoHide || dockState == DockState.DockRightAutoHide) {  	// The DockState is DockLeftAutoHide or DockRightAutoHide' so rotate the image 90 degrees to the right.   	Rectangle rectTransform = RtlTransform (rectImage' dockState);  	Point[] rotationPoints =  {  		new Point (rectTransform.X + rectTransform.Width' rectTransform.Y)'  		new Point (rectTransform.X + rectTransform.Width' rectTransform.Y + rectTransform.Height)'  		new Point (rectTransform.X' rectTransform.Y)  	};  	using (Icon rotatedIcon = new Icon (((Form)content).Icon' 16' 16)) {  		g.DrawImage (rotatedIcon.ToBitmap ()' rotationPoints);  	}  } else {  	// Draw the icon normally without any rotation.  	g.DrawIcon (((Form)content).Icon' RtlTransform (rectImage' dockState));  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,DrawTab,The following statement contains a magic number: using (Icon rotatedIcon = new Icon (((Form)content).Icon' 16' 16)) {  	g.DrawImage (rotatedIcon.ToBitmap ()' rotationPoints);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,DrawTab,The following statement contains a magic number: using (Icon rotatedIcon = new Icon (((Form)content).Icon' 16' 16)) {  	g.DrawImage (rotatedIcon.ToBitmap ()' rotationPoints);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,GetTransformedRectangle,The following statement contains a magic number: pts [0].X = (float)rect.X + (float)rect.Width / 2;  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,GetTransformedRectangle,The following statement contains a magic number: pts [0].Y = (float)rect.Y + (float)rect.Height / 2;  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,GetTransformedRectangle,The following statement contains a magic number: using (var matrix = new Matrix ()) {  	matrix.RotateAt (90' new PointF ((float)rectTabStrip.X + (float)rectTabStrip.Height / 2' (float)rectTabStrip.Y + (float)rectTabStrip.Height / 2));  	matrix.TransformPoints (pts);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,GetTransformedRectangle,The following statement contains a magic number: using (var matrix = new Matrix ()) {  	matrix.RotateAt (90' new PointF ((float)rectTabStrip.X + (float)rectTabStrip.Height / 2' (float)rectTabStrip.Y + (float)rectTabStrip.Height / 2));  	matrix.TransformPoints (pts);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,GetTransformedRectangle,The following statement contains a magic number: using (var matrix = new Matrix ()) {  	matrix.RotateAt (90' new PointF ((float)rectTabStrip.X + (float)rectTabStrip.Height / 2' (float)rectTabStrip.Y + (float)rectTabStrip.Height / 2));  	matrix.TransformPoints (pts);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,GetTransformedRectangle,The following statement contains a magic number: matrix.RotateAt (90' new PointF ((float)rectTabStrip.X + (float)rectTabStrip.Height / 2' (float)rectTabStrip.Y + (float)rectTabStrip.Height / 2));  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,GetTransformedRectangle,The following statement contains a magic number: matrix.RotateAt (90' new PointF ((float)rectTabStrip.X + (float)rectTabStrip.Height / 2' (float)rectTabStrip.Y + (float)rectTabStrip.Height / 2));  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,GetTransformedRectangle,The following statement contains a magic number: matrix.RotateAt (90' new PointF ((float)rectTabStrip.X + (float)rectTabStrip.Height / 2' (float)rectTabStrip.Y + (float)rectTabStrip.Height / 2));  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,GetTransformedRectangle,The following statement contains a magic number: return new Rectangle ((int)(pts [0].X - (float)rect.Height / 2 + .5F)' (int)(pts [0].Y - (float)rect.Width / 2 + .5F)' rect.Height' rect.Width);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingAutoHideStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingAutoHideStrip.cs,GetTransformedRectangle,The following statement contains a magic number: return new Rectangle ((int)(pts [0].X - (float)rect.Height / 2 + .5F)' (int)(pts [0].Y - (float)rect.Width / 2 + .5F)' rect.Height' rect.Width);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneCaption,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneCaption.cs,VS2005MultithreadingDockPaneCaption,The following statement contains a magic number: _activeBackColorGradientBlend = new Blend (2) {  	Factors = new float[] {  		0.5F'  		1.0F  	}'  	Positions = new float[] {  		0.0F'  		1.0F  	}'  };  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetOutline_Document,The following statement contains a magic number: rectTab.X -= rectTab.Height / 2;  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,CalculateTabs_Document,The following statement contains a magic number: if (!overflow) {  	m_startDisplayingTab = 0;  	FirstDisplayingTab = 0;  	x = rectTabStrip.X + rectTabStrip.Height / 2;  	foreach (TabVS2005 tab in Tabs) {  		tab.TabX = x;  		x += tab.TabWidth;  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,CalculateTabs_Document,The following statement contains a magic number: x = rectTabStrip.X + rectTabStrip.Height / 2;  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (tab.Content == DockPane.ActiveContent || full || Tabs.IndexOf (tab) == FirstDisplayingTab) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  			// It is not needed so it has been commented out.  			//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  			GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  } // Draws the partial angle for non-active content  else {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  		}  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  		// It is not needed so it has been commented out.  		//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  		GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  	// It is not needed so it has been commented out.  	//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  	// It is not needed so it has been commented out.  	//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  	// It is not needed so it has been commented out.  	//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  	// It is not needed so it has been commented out.  	//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  	// It is not needed so it has been commented out.  	//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  	// It is not needed so it has been commented out.  	//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  	// It is not needed so it has been commented out.  	//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  	// It is not needed so it has been commented out.  	//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  	// It is not needed so it has been commented out.  	//GraphicsPath.AddLine(rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Top' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right + rect.Height / 2' rect.Bottom);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right + rect.Height / 2' rect.Bottom' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  	// It is not needed so it has been commented out.  	//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  	GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  	// It is not needed so it has been commented out.  	//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  	GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  	// It is not needed so it has been commented out.  	//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  	GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  	// It is not needed so it has been commented out.  	//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  	GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  	// It is not needed so it has been commented out.  	//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  	GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  	// It is not needed so it has been commented out.  	//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  	GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  	// It is not needed so it has been commented out.  	//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  	GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  	// It is not needed so it has been commented out.  	//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  	GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// For some reason the next line draws a line that is not hidden like it is when drawing the tab strip on top.  	// It is not needed so it has been commented out.  	//GraphicsPath.AddLine(rect.Left' rect.Top' rect.Left - rect.Height / 2' rect.Top);  	GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  	GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Top' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left - rect.Height / 2' rect.Bottom);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left - rect.Height / 2' rect.Bottom' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Top' rect.Right' rect.Top + rect.Height / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Bottom - curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Bottom' rect.Right' rect.Bottom - rect.Height / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2 + curveSize / 2' rect.Top + curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Top' rect.Left' rect.Top + rect.Height / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Bottom - curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Bottom' rect.Left' rect.Bottom - rect.Height / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2 - curveSize / 2' rect.Top + curveSize / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	} else {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  		GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  	} else {  		// Draws the top horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  		// Draws the rounded corner oppposite the angled side  		GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	} else {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  		GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  	} else {  		// Draws the top horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  		// Draws the rounded corner oppposite the angled side  		GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	} else {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  		GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  	} else {  		// Draws the top horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  		// Draws the rounded corner oppposite the angled side  		GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	} else {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  		GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  	} else {  		// Draws the top horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  		// Draws the rounded corner oppposite the angled side  		GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	} else {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  		GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  	} else {  		// Draws the top horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  		// Draws the rounded corner oppposite the angled side  		GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	} else {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  		GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  	} else {  		// Draws the top horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  		// Draws the rounded corner oppposite the angled side  		GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	} else {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  		GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  	} else {  		// Draws the top horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  		// Draws the rounded corner oppposite the angled side  		GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	} else {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  		GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  	} else {  		// Draws the top horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  		// Draws the rounded corner oppposite the angled side  		GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	} else {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  		GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  	} else {  		// Draws the top horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  		// Draws the rounded corner oppposite the angled side  		GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	} else {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  		GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  	} else {  		// Draws the top horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  		// Draws the rounded corner oppposite the angled side  		GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	} else {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  		GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  	} else {  		// Draws the top horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  		// Draws the rounded corner oppposite the angled side  		GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	} else {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  		GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  	} else {  		// Draws the top horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  		// Draws the rounded corner oppposite the angled side  		GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	} else {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  		GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  	} else {  		// Draws the top horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  		// Draws the rounded corner oppposite the angled side  		GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	} else {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  		GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  	} else {  		// Draws the top horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  		// Draws the rounded corner oppposite the angled side  		GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	} else {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  		GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  	} else {  		// Draws the top horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  		// Draws the rounded corner oppposite the angled side  		GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	} else {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  		GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		// Draws the bottom horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  		// Drawing the rounded corner is not necessary. The path is automatically connected  		//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  	} else {  		// Draws the top horizontal line (short side)  		GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  		// Draws the rounded corner oppposite the angled side  		GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  	// Drawing the rounded corner is not necessary. The path is automatically connected  	//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  } else {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  	GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  	// Drawing the rounded corner is not necessary. The path is automatically connected  	//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  } else {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  	GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  	// Drawing the rounded corner is not necessary. The path is automatically connected  	//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  } else {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  	GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  	// Drawing the rounded corner is not necessary. The path is automatically connected  	//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  } else {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  	GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  	// Drawing the rounded corner is not necessary. The path is automatically connected  	//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  } else {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  	GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  	// Drawing the rounded corner is not necessary. The path is automatically connected  	//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  } else {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  	GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  	// Drawing the rounded corner is not necessary. The path is automatically connected  	//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  } else {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  	GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  	// Drawing the rounded corner is not necessary. The path is automatically connected  	//GraphicsPath.AddArc(new Rectangle(rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  } else {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  	GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Bottom' rect.Left + curveSize / 2' rect.Bottom);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right - rect.Height / 2 - curveSize / 2' rect.Top' rect.Left + curveSize / 2' rect.Top);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddArc (new Rectangle (rect.Left' rect.Top' curveSize' curveSize)' 180' 90);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  	// Drawing the rounded corner is not necessary. The path is automatically connected  	//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  } else {  	// Draws the top horizontal line (short side)  	GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  	// Draws the rounded corner oppposite the angled side  	GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  	// Drawing the rounded corner is not necessary. The path is automatically connected  	//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  } else {  	// Draws the top horizontal line (short side)  	GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  	// Draws the rounded corner oppposite the angled side  	GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  	// Drawing the rounded corner is not necessary. The path is automatically connected  	//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  } else {  	// Draws the top horizontal line (short side)  	GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  	// Draws the rounded corner oppposite the angled side  	GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  	// Drawing the rounded corner is not necessary. The path is automatically connected  	//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  } else {  	// Draws the top horizontal line (short side)  	GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  	// Draws the rounded corner oppposite the angled side  	GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  	// Drawing the rounded corner is not necessary. The path is automatically connected  	//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  } else {  	// Draws the top horizontal line (short side)  	GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  	// Draws the rounded corner oppposite the angled side  	GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  	// Drawing the rounded corner is not necessary. The path is automatically connected  	//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  } else {  	// Draws the top horizontal line (short side)  	GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  	// Draws the rounded corner oppposite the angled side  	GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  	// Drawing the rounded corner is not necessary. The path is automatically connected  	//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  } else {  	// Draws the top horizontal line (short side)  	GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  	// Draws the rounded corner oppposite the angled side  	GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	// Draws the bottom horizontal line (short side)  	GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  	// Drawing the rounded corner is not necessary. The path is automatically connected  	//GraphicsPath.AddArc(new Rectangle(rect.Right - curveSize' rect.Bottom' curveSize' curveSize)' 90' -90);  } else {  	// Draws the top horizontal line (short side)  	GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  	// Draws the rounded corner oppposite the angled side  	GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Bottom' rect.Right - curveSize / 2' rect.Bottom);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left + rect.Height / 2 + curveSize / 2' rect.Top' rect.Right - curveSize / 2' rect.Top);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddArc (new Rectangle (rect.Right - curveSize' rect.Top' curveSize' curveSize)' -90' 90);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  		}  	}  } else {  	// Draw the vertical line opposite the angled side  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  		else  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  		else  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  		}  	}  } else {  	// Draw the vertical line opposite the angled side  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  		else  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  		else  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  		}  	}  } else {  	// Draw the vertical line opposite the angled side  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  		else  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  		else  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  		}  	}  } else {  	// Draw the vertical line opposite the angled side  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  		else  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  		else  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  		}  	}  } else {  	// Draw the vertical line opposite the angled side  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  		else  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  		else  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  		}  	}  } else {  	// Draw the vertical line opposite the angled side  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  		else  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  		else  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  		}  	}  } else {  	// Draw the vertical line opposite the angled side  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  		else  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  		else  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  		}  	}  } else {  	// Draw the vertical line opposite the angled side  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  		else  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  		else  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  		}  	}  } else {  	// Draw the vertical line opposite the angled side  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  		else  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  		else  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  		}  	}  } else {  	// Draw the vertical line opposite the angled side  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  		else  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  		else  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  		}  	}  } else {  	// Draw the vertical line opposite the angled side  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  		else  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  		else  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  		}  	}  } else {  	// Draw the vertical line opposite the angled side  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  		else  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  		else  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  		}  	}  } else {  	// Draw the vertical line opposite the angled side  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  		else  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  		else  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  		}  	}  } else {  	// Draw the vertical line opposite the angled side  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  		else  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  		else  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  		}  	}  } else {  	// Draw the vertical line opposite the angled side  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  		else  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  		else  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  		}  	}  } else {  	// Draw the vertical line opposite the angled side  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  		else  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  		else  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  		}  	}  } else {  	// Draw the vertical line opposite the angled side  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  		else  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  		else  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  		}  	}  } else {  	// Draw the vertical line opposite the angled side  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  		else  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  		else  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  		}  	}  } else {  	// Draw the vertical line opposite the angled side  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  		else  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  		else  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (Tabs.IndexOf (tab) != EndDisplayingTab && (Tabs.IndexOf (tab) != Tabs.Count - 1 && Tabs [Tabs.IndexOf (tab) + 1].Content == DockPane.ActiveContent) && !full) {  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  		}  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  		} else {  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  			GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  		}  	}  } else {  	// Draw the vertical line opposite the angled side  	if (RightToLeft == RightToLeft.Yes) {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  		else  			GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  	} else {  		if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  			GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  		else  			GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  	}  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  		GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  	} else {  		GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  		GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  	}  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  } else {  	GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Bottom - rect.Height / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Bottom - rect.Height / 2' rect.Left + rect.Height / 2' rect.Top);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Top + rect.Height / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Top + rect.Height / 2' rect.Left + rect.Height / 2' rect.Bottom);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom) {  	GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  } else {  	GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  	GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Bottom - rect.Height / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Bottom - rect.Height / 2' rect.Right - rect.Height / 2' rect.Top);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Top + rect.Height / 2);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Top + rect.Height / 2' rect.Right - rect.Height / 2' rect.Bottom);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  		GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  	else  		GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  		GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  	else  		GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  		GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  	else  		GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  		GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  	else  		GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  		GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  	else  		GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  		GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  	else  		GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (RightToLeft == RightToLeft.Yes) {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  		GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  	else  		GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  } else {  	if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  		GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  	else  		GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  }  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  	GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  else  	GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  	GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  else  	GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Bottom - curveSize / 2' rect.Left' rect.Top);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Left' rect.Top + curveSize / 2' rect.Left' rect.Bottom);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  	GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  else  	GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: if (DockPane.DockPanel.DocumentTabStripLocation == DocumentTabStripLocation.Bottom)  	GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  else  	GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Bottom - curveSize / 2' rect.Right' rect.Top);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingDockPaneStrip,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingDockPaneStrip.cs,GetTabOutline_Document,The following statement contains a magic number: GraphicsPath.AddLine (rect.Right' rect.Top + curveSize / 2' rect.Right' rect.Bottom);  
Magic Number,WeifenLuo.WinFormsUI.Docking,VS2005MultithreadingTheme,F:\newReposMay17\dockpanelsuite_dockpanelsuite\WinFormsUI\ThemeVS2005Multithreading\VS2005MultithreadingTheme.cs,VS2005MultithreadingTheme,The following statement contains a magic number: Measures.SplitterSize = 4;  
