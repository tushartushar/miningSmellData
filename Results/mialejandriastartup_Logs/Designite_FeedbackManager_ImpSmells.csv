Implementation smell,Namespace,Class,File,Method,Description
Complex Method,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,Cyclomatic complexity of the method is 8
Long Parameter List,FeedBackManager,Accion,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Accion.cs,Accion,The method has 5 parameters.
Long Statement,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,DatosOrdenador,The length of the statement  "	XElement e = new XElement ("DatosPC"' new XElement ("Dominio"' Environment.UserDomainName.ToString ())' new XElement ("NombreMaquina"' Environment.MachineName.ToString ())' new XElement ("Usuario"' Environment.UserName.ToString ())' new XElement ("SistemaOperativo"' GetOSVersion ())' new XElement ("Plataforma"' Environment.OSVersion.Platform.ToString ())' new XElement ("ServicePack"' Environment.OSVersion.ServicePack.ToString ())' new XElement ("VersionOS"' Environment.OSVersion.VersionString.ToString ())' new XElement ("SistemaDe64bits"' Environment.Is64BitOperatingSystem.ToString ())); " is 594.
Long Statement,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,WriteError,The length of the statement  "                */XElement innerException = new XElement ("InnerException"' new XElement ("Source"' ex.InnerException.Source)' new XElement ("InnerText"' ex.InnerException.Message)); " is 166.
Empty Catch Block,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,DatosOrdenador,The method has an empty catch block.
Empty Catch Block,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,RevisarLogsAntiguosParaEnviar,The method has an empty catch block.
Empty Catch Block,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GuardarAccion,The method has an empty catch block.
Empty Catch Block,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,Guardar,The method has an empty catch block.
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Platform) {  case PlatformID.Win32S:  	return "Win 3.1";  case PlatformID.Win32Windows:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Win95";  	case 10:  		return "Win98";  	case 90:  		return "WinME";  	}  	break;  case PlatformID.Win32NT:  	switch (Environment.OSVersion.Version.Major) {  	case 3:  		return "NT 3.51";  	case 4:  		return "NT 4.0";  	case 5:  		switch (Environment.OSVersion.Version.Minor) {  		case 0:  			return "Windows 2000";  		case 1:  			return "Windows XP";  		case 2:  			return "Windows Server 2003";  		}  		break;  	case 6:  		switch (Environment.OSVersion.Version.Minor) {  		case 0:  			return "Windows Vista";  		case 1:  			return "Windows 7";  		case 2:  			return "Windows 8";  		case 3:  			return "Windows 8.1";  		}  		break;  	}  	break;  case PlatformID.WinCE:  	return "Win CE";  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Platform) {  case PlatformID.Win32S:  	return "Win 3.1";  case PlatformID.Win32Windows:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Win95";  	case 10:  		return "Win98";  	case 90:  		return "WinME";  	}  	break;  case PlatformID.Win32NT:  	switch (Environment.OSVersion.Version.Major) {  	case 3:  		return "NT 3.51";  	case 4:  		return "NT 4.0";  	case 5:  		switch (Environment.OSVersion.Version.Minor) {  		case 0:  			return "Windows 2000";  		case 1:  			return "Windows XP";  		case 2:  			return "Windows Server 2003";  		}  		break;  	case 6:  		switch (Environment.OSVersion.Version.Minor) {  		case 0:  			return "Windows Vista";  		case 1:  			return "Windows 7";  		case 2:  			return "Windows 8";  		case 3:  			return "Windows 8.1";  		}  		break;  	}  	break;  case PlatformID.WinCE:  	return "Win CE";  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Platform) {  case PlatformID.Win32S:  	return "Win 3.1";  case PlatformID.Win32Windows:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Win95";  	case 10:  		return "Win98";  	case 90:  		return "WinME";  	}  	break;  case PlatformID.Win32NT:  	switch (Environment.OSVersion.Version.Major) {  	case 3:  		return "NT 3.51";  	case 4:  		return "NT 4.0";  	case 5:  		switch (Environment.OSVersion.Version.Minor) {  		case 0:  			return "Windows 2000";  		case 1:  			return "Windows XP";  		case 2:  			return "Windows Server 2003";  		}  		break;  	case 6:  		switch (Environment.OSVersion.Version.Minor) {  		case 0:  			return "Windows Vista";  		case 1:  			return "Windows 7";  		case 2:  			return "Windows 8";  		case 3:  			return "Windows 8.1";  		}  		break;  	}  	break;  case PlatformID.WinCE:  	return "Win CE";  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Platform) {  case PlatformID.Win32S:  	return "Win 3.1";  case PlatformID.Win32Windows:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Win95";  	case 10:  		return "Win98";  	case 90:  		return "WinME";  	}  	break;  case PlatformID.Win32NT:  	switch (Environment.OSVersion.Version.Major) {  	case 3:  		return "NT 3.51";  	case 4:  		return "NT 4.0";  	case 5:  		switch (Environment.OSVersion.Version.Minor) {  		case 0:  			return "Windows 2000";  		case 1:  			return "Windows XP";  		case 2:  			return "Windows Server 2003";  		}  		break;  	case 6:  		switch (Environment.OSVersion.Version.Minor) {  		case 0:  			return "Windows Vista";  		case 1:  			return "Windows 7";  		case 2:  			return "Windows 8";  		case 3:  			return "Windows 8.1";  		}  		break;  	}  	break;  case PlatformID.WinCE:  	return "Win CE";  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Platform) {  case PlatformID.Win32S:  	return "Win 3.1";  case PlatformID.Win32Windows:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Win95";  	case 10:  		return "Win98";  	case 90:  		return "WinME";  	}  	break;  case PlatformID.Win32NT:  	switch (Environment.OSVersion.Version.Major) {  	case 3:  		return "NT 3.51";  	case 4:  		return "NT 4.0";  	case 5:  		switch (Environment.OSVersion.Version.Minor) {  		case 0:  			return "Windows 2000";  		case 1:  			return "Windows XP";  		case 2:  			return "Windows Server 2003";  		}  		break;  	case 6:  		switch (Environment.OSVersion.Version.Minor) {  		case 0:  			return "Windows Vista";  		case 1:  			return "Windows 7";  		case 2:  			return "Windows 8";  		case 3:  			return "Windows 8.1";  		}  		break;  	}  	break;  case PlatformID.WinCE:  	return "Win CE";  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Platform) {  case PlatformID.Win32S:  	return "Win 3.1";  case PlatformID.Win32Windows:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Win95";  	case 10:  		return "Win98";  	case 90:  		return "WinME";  	}  	break;  case PlatformID.Win32NT:  	switch (Environment.OSVersion.Version.Major) {  	case 3:  		return "NT 3.51";  	case 4:  		return "NT 4.0";  	case 5:  		switch (Environment.OSVersion.Version.Minor) {  		case 0:  			return "Windows 2000";  		case 1:  			return "Windows XP";  		case 2:  			return "Windows Server 2003";  		}  		break;  	case 6:  		switch (Environment.OSVersion.Version.Minor) {  		case 0:  			return "Windows Vista";  		case 1:  			return "Windows 7";  		case 2:  			return "Windows 8";  		case 3:  			return "Windows 8.1";  		}  		break;  	}  	break;  case PlatformID.WinCE:  	return "Win CE";  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Platform) {  case PlatformID.Win32S:  	return "Win 3.1";  case PlatformID.Win32Windows:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Win95";  	case 10:  		return "Win98";  	case 90:  		return "WinME";  	}  	break;  case PlatformID.Win32NT:  	switch (Environment.OSVersion.Version.Major) {  	case 3:  		return "NT 3.51";  	case 4:  		return "NT 4.0";  	case 5:  		switch (Environment.OSVersion.Version.Minor) {  		case 0:  			return "Windows 2000";  		case 1:  			return "Windows XP";  		case 2:  			return "Windows Server 2003";  		}  		break;  	case 6:  		switch (Environment.OSVersion.Version.Minor) {  		case 0:  			return "Windows Vista";  		case 1:  			return "Windows 7";  		case 2:  			return "Windows 8";  		case 3:  			return "Windows 8.1";  		}  		break;  	}  	break;  case PlatformID.WinCE:  	return "Win CE";  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Platform) {  case PlatformID.Win32S:  	return "Win 3.1";  case PlatformID.Win32Windows:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Win95";  	case 10:  		return "Win98";  	case 90:  		return "WinME";  	}  	break;  case PlatformID.Win32NT:  	switch (Environment.OSVersion.Version.Major) {  	case 3:  		return "NT 3.51";  	case 4:  		return "NT 4.0";  	case 5:  		switch (Environment.OSVersion.Version.Minor) {  		case 0:  			return "Windows 2000";  		case 1:  			return "Windows XP";  		case 2:  			return "Windows Server 2003";  		}  		break;  	case 6:  		switch (Environment.OSVersion.Version.Minor) {  		case 0:  			return "Windows Vista";  		case 1:  			return "Windows 7";  		case 2:  			return "Windows 8";  		case 3:  			return "Windows 8.1";  		}  		break;  	}  	break;  case PlatformID.WinCE:  	return "Win CE";  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Platform) {  case PlatformID.Win32S:  	return "Win 3.1";  case PlatformID.Win32Windows:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Win95";  	case 10:  		return "Win98";  	case 90:  		return "WinME";  	}  	break;  case PlatformID.Win32NT:  	switch (Environment.OSVersion.Version.Major) {  	case 3:  		return "NT 3.51";  	case 4:  		return "NT 4.0";  	case 5:  		switch (Environment.OSVersion.Version.Minor) {  		case 0:  			return "Windows 2000";  		case 1:  			return "Windows XP";  		case 2:  			return "Windows Server 2003";  		}  		break;  	case 6:  		switch (Environment.OSVersion.Version.Minor) {  		case 0:  			return "Windows Vista";  		case 1:  			return "Windows 7";  		case 2:  			return "Windows 8";  		case 3:  			return "Windows 8.1";  		}  		break;  	}  	break;  case PlatformID.WinCE:  	return "Win CE";  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Version.Minor) {  case 0:  	return "Win95";  case 10:  	return "Win98";  case 90:  	return "WinME";  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Version.Minor) {  case 0:  	return "Win95";  case 10:  	return "Win98";  case 90:  	return "WinME";  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Version.Major) {  case 3:  	return "NT 3.51";  case 4:  	return "NT 4.0";  case 5:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Windows 2000";  	case 1:  		return "Windows XP";  	case 2:  		return "Windows Server 2003";  	}  	break;  case 6:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Windows Vista";  	case 1:  		return "Windows 7";  	case 2:  		return "Windows 8";  	case 3:  		return "Windows 8.1";  	}  	break;  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Version.Major) {  case 3:  	return "NT 3.51";  case 4:  	return "NT 4.0";  case 5:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Windows 2000";  	case 1:  		return "Windows XP";  	case 2:  		return "Windows Server 2003";  	}  	break;  case 6:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Windows Vista";  	case 1:  		return "Windows 7";  	case 2:  		return "Windows 8";  	case 3:  		return "Windows 8.1";  	}  	break;  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Version.Major) {  case 3:  	return "NT 3.51";  case 4:  	return "NT 4.0";  case 5:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Windows 2000";  	case 1:  		return "Windows XP";  	case 2:  		return "Windows Server 2003";  	}  	break;  case 6:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Windows Vista";  	case 1:  		return "Windows 7";  	case 2:  		return "Windows 8";  	case 3:  		return "Windows 8.1";  	}  	break;  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Version.Major) {  case 3:  	return "NT 3.51";  case 4:  	return "NT 4.0";  case 5:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Windows 2000";  	case 1:  		return "Windows XP";  	case 2:  		return "Windows Server 2003";  	}  	break;  case 6:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Windows Vista";  	case 1:  		return "Windows 7";  	case 2:  		return "Windows 8";  	case 3:  		return "Windows 8.1";  	}  	break;  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Version.Major) {  case 3:  	return "NT 3.51";  case 4:  	return "NT 4.0";  case 5:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Windows 2000";  	case 1:  		return "Windows XP";  	case 2:  		return "Windows Server 2003";  	}  	break;  case 6:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Windows Vista";  	case 1:  		return "Windows 7";  	case 2:  		return "Windows 8";  	case 3:  		return "Windows 8.1";  	}  	break;  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Version.Major) {  case 3:  	return "NT 3.51";  case 4:  	return "NT 4.0";  case 5:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Windows 2000";  	case 1:  		return "Windows XP";  	case 2:  		return "Windows Server 2003";  	}  	break;  case 6:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Windows Vista";  	case 1:  		return "Windows 7";  	case 2:  		return "Windows 8";  	case 3:  		return "Windows 8.1";  	}  	break;  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Version.Major) {  case 3:  	return "NT 3.51";  case 4:  	return "NT 4.0";  case 5:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Windows 2000";  	case 1:  		return "Windows XP";  	case 2:  		return "Windows Server 2003";  	}  	break;  case 6:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Windows Vista";  	case 1:  		return "Windows 7";  	case 2:  		return "Windows 8";  	case 3:  		return "Windows 8.1";  	}  	break;  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Version.Minor) {  case 0:  	return "Windows 2000";  case 1:  	return "Windows XP";  case 2:  	return "Windows Server 2003";  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Version.Minor) {  case 0:  	return "Windows Vista";  case 1:  	return "Windows 7";  case 2:  	return "Windows 8";  case 3:  	return "Windows 8.1";  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following statement contains a magic number: switch (Environment.OSVersion.Version.Minor) {  case 0:  	return "Windows Vista";  case 1:  	return "Windows 7";  case 2:  	return "Windows 8";  case 3:  	return "Windows 8.1";  }  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,dailyLogName,The following statement contains a magic number: if (dia < 10)  	strDia = "0" + dia.ToString ();  else  	strDia = dia.ToString ();  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,dailyLogName,The following statement contains a magic number: if (mes < 10)  	strMes = "0" + mes.ToString ();  else  	strMes = mes.ToString ();  
Magic Number,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,dailyLogName,The following statement contains a magic number: if (anyo < 10)  	strAnyo = "0" + anyo.ToString ();  else  	strAnyo = anyo.ToString ();  
Missing Default,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following switch statement is missing a default case: switch (Environment.OSVersion.Platform) {  case PlatformID.Win32S:  	return "Win 3.1";  case PlatformID.Win32Windows:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Win95";  	case 10:  		return "Win98";  	case 90:  		return "WinME";  	}  	break;  case PlatformID.Win32NT:  	switch (Environment.OSVersion.Version.Major) {  	case 3:  		return "NT 3.51";  	case 4:  		return "NT 4.0";  	case 5:  		switch (Environment.OSVersion.Version.Minor) {  		case 0:  			return "Windows 2000";  		case 1:  			return "Windows XP";  		case 2:  			return "Windows Server 2003";  		}  		break;  	case 6:  		switch (Environment.OSVersion.Version.Minor) {  		case 0:  			return "Windows Vista";  		case 1:  			return "Windows 7";  		case 2:  			return "Windows 8";  		case 3:  			return "Windows 8.1";  		}  		break;  	}  	break;  case PlatformID.WinCE:  	return "Win CE";  }  
Missing Default,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following switch statement is missing a default case: switch (Environment.OSVersion.Version.Minor) {  case 0:  	return "Win95";  case 10:  	return "Win98";  case 90:  	return "WinME";  }  
Missing Default,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following switch statement is missing a default case: switch (Environment.OSVersion.Version.Major) {  case 3:  	return "NT 3.51";  case 4:  	return "NT 4.0";  case 5:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Windows 2000";  	case 1:  		return "Windows XP";  	case 2:  		return "Windows Server 2003";  	}  	break;  case 6:  	switch (Environment.OSVersion.Version.Minor) {  	case 0:  		return "Windows Vista";  	case 1:  		return "Windows 7";  	case 2:  		return "Windows 8";  	case 3:  		return "Windows 8.1";  	}  	break;  }  
Missing Default,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following switch statement is missing a default case: switch (Environment.OSVersion.Version.Minor) {  case 0:  	return "Windows 2000";  case 1:  	return "Windows XP";  case 2:  	return "Windows Server 2003";  }  
Missing Default,FeedBackManager,Logs,C:\repos\mialejandriastartup_Logs\miAlejandria.Logs\FeedbackManager\Logs.cs,GetOSVersion,The following switch statement is missing a default case: switch (Environment.OSVersion.Version.Minor) {  case 0:  	return "Windows Vista";  case 1:  	return "Windows 7";  case 2:  	return "Windows 8";  case 3:  	return "Windows 8.1";  }  
