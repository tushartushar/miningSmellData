Implementation smell,Namespace,Class,File,Method,Description
Complex Method,IN.Chat.Web.Hubs,ChatHub,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\ChatHub.cs,SendMessage,Cyclomatic complexity of the method is 10
Complex Method,IN.Chat.Web.Hubs.CommandProcessor,CICommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\JenkinsCommandProcessor.cs,ConvertColorToStatus,Cyclomatic complexity of the method is 10
Complex Method,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,ResolveInternal,Cyclomatic complexity of the method is 13
Long Parameter List,IN.Chat.Web.Bootstrapper,Bootstrapper,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Bootstrapper\Bootstrapper.cs,GetIoCContainer,The method has 8 parameters.
Long Parameter List,IN.Chat.Web.Controllers,AccountController,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Controllers\AccountController.cs,TryCreateAccount,The method has 5 parameters.
Long Parameter List,IN.Chat.Web.Hubs,ChatHub,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\ChatHub.cs,ChatHub,The method has 9 parameters.
Long Parameter List,TinyIoC,TypeExtensions,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,GetGenericMethod,The method has 12 parameters.
Long Parameter List,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,TryResolve,The method has 5 parameters.
Long Parameter List,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,AutoRegisterInternal,The method has 5 parameters.
Long Parameter List,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,IsIgnoredAssembly,The method has 8 parameters.
Long Parameter List,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,IsIgnoredType,The method has 7 parameters.
Long Identifier,IN.Chat.Web.Bootstrapper,Bootstrapper,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Bootstrapper\Bootstrapper.cs,GetIoCContainer,The length of the parameter commandProcessorCompositionContainer is 36.
Long Identifier,IN.Chat.Web.Bootstrapper,Bootstrapper,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Bootstrapper\Bootstrapper.cs,GetIoCContainer,The length of the parameter contentProviderCompositionContainer is 35.
Long Identifier,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,AutoRegister,The length of the parameter ignoreDuplicateImplementations is 30.
Long Identifier,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,AutoRegister,The length of the parameter ignoreDuplicateImplementations is 30.
Long Identifier,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,AutoRegister,The length of the parameter ignoreDuplicateImplementations is 30.
Long Identifier,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,AutoRegister,The length of the parameter ignoreDuplicateImplementations is 30.
Long Identifier,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,AutoRegisterInternal,The length of the parameter ignoreDuplicateImplementations is 30.
Long Statement,IN.Chat.Web.Bootstrapper,Bootstrapper,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Bootstrapper\Bootstrapper.cs,GetIoCContainer,The length of the statement  "	var commandProcessorCompositionContainer = new CompositionContainer (new AssemblyCatalog (typeof(ICommandProcessor).Assembly)); " is 127.
Long Statement,IN.Chat.Web.Bootstrapper,Bootstrapper,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Bootstrapper\Bootstrapper.cs,GetIoCContainer,The length of the statement  "	var contentProviderCompositionContainer = new CompositionContainer (new AssemblyCatalog (typeof(IContentProvider).Assembly)); " is 125.
Long Statement,IN.Chat.Web.Bootstrapper.Tasks,RegisterErrorHandling,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Bootstrapper\Tasks\RegisterErrorHandling.cs,Execute,The length of the statement  "	TaskScheduler.UnobservedTaskException += new EventHandler<UnobservedTaskExceptionEventArgs> (TaskScheduler_UnobservedTaskException); " is 132.
Long Statement,IN.Chat.Web.Controllers,LoginController,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Controllers\LoginController.cs,Login,The length of the statement  "		if (TryGetAccessToken (INAUTHURL' INAPIKEY' model' out accessToken) && TryGetUserName (INUSERSMEURL' INAPIKEY' accessToken' out username)) { " is 140.
Long Statement,IN.Chat.Web.Hubs.CommandProcessor,BaconCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\BaconCommandProcessor.cs,CanProcess,The length of the statement  "	return message.ProcessedContent.Equals ("/bacon"' StringComparison.OrdinalIgnoreCase) || REGEX.IsMatch (message.ProcessedContent); " is 130.
Long Statement,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetItem,The length of the statement  "	httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue ("Basic"' Convert.ToBase64String (Encoding.ASCII.GetBytes (Username + ":" + Password))); " is 167.
Long Statement,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetDefect,The length of the statement  "		builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Title"' deisredLabelLength)' item.QueryResult.Results [0].Name)); " is 125.
Long Statement,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetDefect,The length of the statement  "		builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Owner"' deisredLabelLength)' item.QueryResult.Results [0].Owner == null ? "No Owner" : item.QueryResult.Results [0].Owner._refObjectName)); " is 199.
Long Statement,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetDefect,The length of the statement  "		builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Project"' deisredLabelLength)' item.QueryResult.Results [0].Project == null ? "No Project" : item.QueryResult.Results [0].Project._refObjectName)); " is 207.
Long Statement,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetDefect,The length of the statement  "		builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Severity"' deisredLabelLength)' item.QueryResult.Results [0].Severity)); " is 132.
Long Statement,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetDefect,The length of the statement  "		builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("State"' deisredLabelLength)' item.QueryResult.Results [0].State)); " is 126.
Long Statement,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetDefect,The length of the statement  "		builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Link"' deisredLabelLength)' GetLinkToItem (item.QueryResult.Results [0]' "defect"))); " is 145.
Long Statement,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetTask,The length of the statement  "		builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Title"' deisredLabelLength)' item.QueryResult.Results [0].Name)); " is 125.
Long Statement,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetTask,The length of the statement  "		builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Owner"' deisredLabelLength)' item.QueryResult.Results [0].Owner == null ? "No Owner" : item.QueryResult.Results [0].Owner._refObjectName)); " is 199.
Long Statement,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetTask,The length of the statement  "		builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Project"' deisredLabelLength)' item.QueryResult.Results [0].Project == null ? "No Project" : item.QueryResult.Results [0].Project._refObjectName)); " is 207.
Long Statement,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetTask,The length of the statement  "		builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("State"' deisredLabelLength)' item.QueryResult.Results [0].State)); " is 126.
Long Statement,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetTask,The length of the statement  "		builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Feature"' deisredLabelLength)' item.QueryResult.Results [0].Feature == null ? "Not associated with any feature" : item.QueryResult.Results [0].Feature._refObjectName)); " is 228.
Long Statement,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetTask,The length of the statement  "		builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Link"' deisredLabelLength)' GetLinkToItem (item.QueryResult.Results [0]' "task"))); " is 143.
Long Statement,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetStory,The length of the statement  "		builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Title"' deisredLabelLength)' item.QueryResult.Results [0].Name)); " is 125.
Long Statement,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetStory,The length of the statement  "		builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Owner"' deisredLabelLength)' item.QueryResult.Results [0].Owner == null ? "No Owner" : item.QueryResult.Results [0].Owner._refObjectName)); " is 199.
Long Statement,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetStory,The length of the statement  "		builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Project"' deisredLabelLength)' item.QueryResult.Results [0].Project == null ? "No Project" : item.QueryResult.Results [0].Project._refObjectName)); " is 207.
Long Statement,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetStory,The length of the statement  "		builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("State"' deisredLabelLength)' item.QueryResult.Results [0].ScheduleState)); " is 134.
Long Statement,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetStory,The length of the statement  "		builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Link"' deisredLabelLength)' GetLinkToItem (item.QueryResult.Results [0]' "userstory"))); " is 148.
Long Statement,IN.Chat.Web.Hubs.robotProcessor,FaceMeCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\FaceMeCommandProcessor.cs,Process,The length of the statement  "			message.ProcessedContent = String.Format ("http://faceup.me/img.jpg?overlay={0}&src={1}"' accessory' Uri.EscapeDataString (url)); " is 129.
Long Statement,IN.Chat.Web.Hubs.ContentProvider.Core,YouTubeContentProvider,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\ContentProvider\YouTubeContentProvider.cs,ContainsContent,The length of the statement  "	return urls.Any (u => u.Authority.Equals ("www.youtube.com"' StringComparison.OrdinalIgnoreCase) || u.Authority.Equals ("youtu.be"' StringComparison.OrdinalIgnoreCase)); " is 169.
Long Statement,IN.Chat.Web.Hubs.ContentProvider.Core,YouTubeContentProvider,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\ContentProvider\YouTubeContentProvider.cs,ExtractContent,The length of the statement  "	const string extractedContentFormat = @"<object width=""425"" height=""344""><param name=""WMode"" value=""transparent""></param><param name=""movie"" value=""http://www.youtube.com/v/{0}fs=1""></param><param name=""allowFullScreen"" value=""true""></param><param name=""allowScriptAccess"" value=""always""></param><embed src=""http://www.youtube.com/v/{0}?fs=1"" wmode=""transparent"" type=""application/x-shockwave-flash"" allowfullscreen=""true"" allowscriptaccess=""always"" width=""425"" height=""344B""></embed></object>"; " is 529.
Long Statement,IN.Chat.Web.Hubs.ContentProvider.Core,ImageContentProvider,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\ContentProvider\ImageContentProvider.cs,IsImageUrl,The length of the statement  "	return url.AbsoluteUri.ToLower ().EndsWith (".png") || url.AbsoluteUri.ToLower ().EndsWith (".bmp") || url.AbsoluteUri.ToLower ().EndsWith (".jpg") || url.AbsoluteUri.ToLower ().EndsWith (".jpeg") || url.AbsoluteUri.ToLower ().EndsWith (".gif"); " is 245.
Long Statement,IN.Chat.Web.Hubs.MessageStore,RedisMessageStore,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\MessageStore\RedisMessageStore.cs,Read,The length of the statement  "			messages = connection.Lists.RangeString (Db' REDISMESSAGESKEY' 0' lastIndex).Result.Select (m => JsonConvert.DeserializeObject<Message> (m)); " is 141.
Long Statement,IN.Chat.Web.Hubs.Services,TextTransformer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\Services\TextTransformer.cs,TransformAndExtractUrls,The length of the statement  "	const string urlPattern = @"(?i)(?<s>(?:https?|ftp)://|www\.)?(?:\S+(?::\S*)?@)?(?:(?:[\w\p{S}][\w\p{S}@-]*[.:])+\w+)(?(s)/?|/)(?:(?:[^\s()<>.'\u0022'”]+|[.'\u0022'”][^\s()<>'\u0022]|\((?:[^\s()<>]+|(?:\([^\s()<>]+\)))*\))*)"; " is 226.
Long Statement,IN.Chat.Web.Hubs.Services,TextTransformer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\Services\TextTransformer.cs,TransformAndExtractUrls,The length of the statement  "			return String.Format (CultureInfo.InvariantCulture' "<a rel=\"nofollow external\" target=\"_blank\" href=\"{0}\" title=\"{1}\">{1}</a>"' url' m.Value); " is 151.
Long Statement,TinyIoC,TypeExtensions,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,GetGenericMethod,The length of the statement  "	var methods = sourceType.GetMethods (bindingFlags).Where (mi => string.Equals (methodName' mi.Name' StringComparison.InvariantCulture)).Where (mi => mi.ContainsGenericParameters).Where (mi => mi.GetGenericArguments ().Length == genericTypes.Length).Where (mi => mi.GetParameters ().Length == parameterTypes.Length).Select (mi => mi.MakeGenericMethod (genericTypes)).Where (mi => mi.GetParameters ().Select (pi => pi.ParameterType).SequenceEqual (parameterTypes)).ToList (); " is 473.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,AutoRegister,The length of the statement  "	AutoRegisterInternal (AppDomain.CurrentDomain.GetAssemblies ().Where (a => !IsIgnoredAssembly (a))' true' registrationPredicate); " is 129.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,AutoRegister,The length of the statement  "	AutoRegisterInternal (AppDomain.CurrentDomain.GetAssemblies ().Where (a => !IsIgnoredAssembly (a))' ignoreDuplicateImplementations' null); " is 138.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,AutoRegister,The length of the statement  "	AutoRegisterInternal (AppDomain.CurrentDomain.GetAssemblies ().Where (a => !IsIgnoredAssembly (a))' ignoreDuplicateImplementations' registrationPredicate); " is 155.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,AutoRegister,The length of the statement  "	            AutoRegisterInternal(new Assembly[] { this.GetType().Assembly }' ignoreDuplicateImplementations' registrationPredicate);" is 120.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,Register,The length of the statement  "	return RegisterInternal (typeof(RegisterType)' string.Empty' GetDefaultObjectFactory<RegisterType' RegisterImplementation> ()); " is 127.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,Register,The length of the statement  "	return RegisterInternal (typeof(RegisterType)' string.Empty' new InstanceFactory<RegisterType' RegisterType> (instance)); " is 121.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,Register,The length of the statement  "	return RegisterInternal (typeof(RegisterType)' string.Empty' new InstanceFactory<RegisterType' RegisterImplementation> (instance)); " is 131.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,Register,The length of the statement  "	return RegisterInternal (typeof(RegisterType)' name' new InstanceFactory<RegisterType' RegisterImplementation> (instance)); " is 123.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,RegisterMultiple,The length of the statement  "			throw new ArgumentException (String.Format ("types: The type {0} is not assignable from {1}"' registrationType.FullName' type.FullName)); " is 137.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,Resolve,The length of the statement  "	return ResolveInternal (new TypeRegistration (resolveType' name)' NamedParameterOverloads.Default' ResolveOptions.Default); " is 123.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,CanResolve,The length of the statement  "	return CanResolveInternal (new TypeRegistration (resolveType)' NamedParameterOverloads.Default' ResolveOptions.Default); " is 120.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,CanResolve,The length of the statement  "	return CanResolveInternal (new TypeRegistration (resolveType' name)' NamedParameterOverloads.Default' ResolveOptions.Default); " is 126.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,AutoRegisterInternal,The length of the statement  "		var defaultFactoryMethod = this.GetType ().GetMethod ("GetDefaultObjectFactory"' BindingFlags.NonPublic | BindingFlags.Instance); " is 129.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,AutoRegisterInternal,The length of the statement  "		var types = assemblies.SelectMany (a => a.SafeGetTypes ()).Where (t => !IsIgnoredType (t' registrationPredicate)).ToList (); " is 124.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,AutoRegisterInternal,The length of the statement  "		where (type.IsClass == true) && (type.IsAbstract == false) && (type != this.GetType () && (type.DeclaringType != this.GetType ()) && (!type.IsGenericTypeDefinition)) " is 165.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,AutoRegisterInternal,The length of the statement  "		where ((type.IsInterface == true || type.IsAbstract == true) && (type.DeclaringType != this.GetType ()) && (!type.IsGenericTypeDefinition)) " is 139.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,CanResolveInternal,The length of the statement  "	if (!String.IsNullOrEmpty (name) && options.NamedResolutionFailureAction == NamedResolutionFailureActions.AttemptUnnamedResolution) { " is 133.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,CanResolveInternal,The length of the statement  "	if ((options.UnregisteredResolutionAction == UnregisteredResolutionActions.AttemptResolve) || (checkType.IsGenericType && options.UnregisteredResolutionAction == UnregisteredResolutionActions.GenericsOnly)) " is 206.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,CanResolveInternal,The length of the statement  "		return (GetBestConstructor (checkType' parameters' options) != null) ? true : (_Parent != null) ? _Parent.CanResolveInternal (registration' parameters' options) : false; " is 169.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,IsAutomaticLazyFactoryRequest,The length of the statement  "	if ((genericType == typeof(Func<' ' >) && type.GetGenericArguments () [0] == typeof(string) && type.GetGenericArguments () [1] == typeof(IDictionary<String' object>))) " is 167.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,ResolveInternal,The length of the statement  "	if (!String.IsNullOrEmpty (registration.Name) && options.NamedResolutionFailureAction == NamedResolutionFailureActions.Fail) " is 124.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,ResolveInternal,The length of the statement  "	if (!String.IsNullOrEmpty (registration.Name) && options.NamedResolutionFailureAction == NamedResolutionFailureActions.AttemptUnnamedResolution) { " is 146.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,ResolveInternal,The length of the statement  "	if ((options.UnregisteredResolutionAction == UnregisteredResolutionActions.AttemptResolve) || (registration.Type.IsGenericType && options.UnregisteredResolutionAction == UnregisteredResolutionActions.GenericsOnly)) { " is 216.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,GetLazyAutomaticFactoryRequest,The length of the statement  "	if ((genericType == typeof(Func<' ' >) && type.GetGenericArguments () [0] == typeof(string) && type.GetGenericArguments () [1] == typeof(IDictionary<string' object>))) { " is 169.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,GetLazyAutomaticFactoryRequest,The length of the statement  "		var resolveCall = Expression.Call (Expression.Constant (this)' resolveMethod' name' Expression.Call (typeof(NamedParameterOverloads)' "FromIDictionary"' null' parameters)); " is 172.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,GetIEnumerableRequest,The length of the statement  "	var genericResolveAllMethod = this.GetType ().GetGenericMethod (BindingFlags.Public | BindingFlags.Instance' "ResolveAll"' type.GetGenericArguments ()' new[] { " is 159.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,CanConstruct,The length of the statement  "		if (!isParameterOverload && !CanResolveInternal (new TypeRegistration (parameter.ParameterType)' NamedParameterOverloads.Default' options)) " is 139.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,ConstructType,The length of the statement  "			args [parameterIndex] = parameters.ContainsKey (currentParam.Name) ? parameters [currentParam.Name] : ResolveInternal (new TypeRegistration (currentParam.ParameterType)' NamedParameterOverloads.Default' options); " is 212.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,BuildUpInternal,The length of the statement  "				property.SetValue (input' ResolveInternal (new TypeRegistration (property.PropertyType)' NamedParameterOverloads.Default' resolveOptions)' null); " is 145.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,ResolveAllInternal,The length of the statement  "	var registrations = _RegisteredTypes.Keys.Where (tr => tr.Type == resolveType).Concat (GetParentRegistrationsForType (resolveType)); " is 132.
Long Statement,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,ExecuteGenericRegister,The length of the statement  "		var method = this.GetType ().GetGenericMethod (BindingFlags.Instance | BindingFlags.Public' "Register"' genericParameterTypes' methodParameterTypes); " is 149.
Empty Catch Block,IN.Chat.Web.Hubs.Services,TextTransformer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\Services\TextTransformer.cs,TransformAndExtractUrls,The method has an empty catch block.
Empty Catch Block,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,AutoRegisterInternal,The method has an empty catch block.
Empty Catch Block,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,AutoRegisterInternal,The method has an empty catch block.
Empty Catch Block,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,BuildUpInternal,The method has an empty catch block.
Magic Number,IN.Chat.Web.Bootstrapper.Tasks,RegisterErrorHandling,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Bootstrapper\Tasks\RegisterErrorHandling.cs,context_Error,The following statement contains a magic number: if (sender is HttpApplication) {  	var context = sender as HttpApplication;  	var exception = context.Server.GetLastError ().GetBaseException ();  	var code = (exception is HttpException) ? (exception as HttpException).GetHttpCode () : 500;  	if (!code.Equals (404)) {  		var message = exception.Message;  		Logger.ErrorException ("An unhandled http application exception occured."' exception);  	}  	context.Server.ClearError ();  }  
Magic Number,IN.Chat.Web.Bootstrapper.Tasks,RegisterErrorHandling,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Bootstrapper\Tasks\RegisterErrorHandling.cs,context_Error,The following statement contains a magic number: if (sender is HttpApplication) {  	var context = sender as HttpApplication;  	var exception = context.Server.GetLastError ().GetBaseException ();  	var code = (exception is HttpException) ? (exception as HttpException).GetHttpCode () : 500;  	if (!code.Equals (404)) {  		var message = exception.Message;  		Logger.ErrorException ("An unhandled http application exception occured."' exception);  	}  	context.Server.ClearError ();  }  
Magic Number,IN.Chat.Web.Bootstrapper.Tasks,RegisterErrorHandling,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Bootstrapper\Tasks\RegisterErrorHandling.cs,context_Error,The following statement contains a magic number: if (!code.Equals (404)) {  	var message = exception.Message;  	Logger.ErrorException ("An unhandled http application exception occured."' exception);  }  
Magic Number,IN.Chat.Web.Hubs,ChatHub,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\ChatHub.cs,ParseMessage,The following statement contains a magic number: try {  	if (privateMessageRegex.IsMatch (message)) {  		var match = privateMessageRegex.Match (message);  		var username = match.Groups [2].Value;  		var privateMessage = match.Groups [4].Value;  		parsedMessage.ProcessedContent = privateMessage;  		parsedMessage.Type = MessageType.Private;  		parsedMessage.To = username;  	}  	else {  		parsedMessage.ProcessedContent = message;  		parsedMessage.Type = MessageType.Public;  	}  }  catch (Exception ex) {  	Logger.ErrorException ("An exception occured while parsing a message."' ex);  }  
Magic Number,IN.Chat.Web.Hubs,ChatHub,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\ChatHub.cs,ParseMessage,The following statement contains a magic number: try {  	if (privateMessageRegex.IsMatch (message)) {  		var match = privateMessageRegex.Match (message);  		var username = match.Groups [2].Value;  		var privateMessage = match.Groups [4].Value;  		parsedMessage.ProcessedContent = privateMessage;  		parsedMessage.Type = MessageType.Private;  		parsedMessage.To = username;  	}  	else {  		parsedMessage.ProcessedContent = message;  		parsedMessage.Type = MessageType.Public;  	}  }  catch (Exception ex) {  	Logger.ErrorException ("An exception occured while parsing a message."' ex);  }  
Magic Number,IN.Chat.Web.Hubs,ChatHub,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\ChatHub.cs,ParseMessage,The following statement contains a magic number: if (privateMessageRegex.IsMatch (message)) {  	var match = privateMessageRegex.Match (message);  	var username = match.Groups [2].Value;  	var privateMessage = match.Groups [4].Value;  	parsedMessage.ProcessedContent = privateMessage;  	parsedMessage.Type = MessageType.Private;  	parsedMessage.To = username;  }  else {  	parsedMessage.ProcessedContent = message;  	parsedMessage.Type = MessageType.Public;  }  
Magic Number,IN.Chat.Web.Hubs,ChatHub,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\ChatHub.cs,ParseMessage,The following statement contains a magic number: if (privateMessageRegex.IsMatch (message)) {  	var match = privateMessageRegex.Match (message);  	var username = match.Groups [2].Value;  	var privateMessage = match.Groups [4].Value;  	parsedMessage.ProcessedContent = privateMessage;  	parsedMessage.Type = MessageType.Private;  	parsedMessage.To = username;  }  else {  	parsedMessage.ProcessedContent = message;  	parsedMessage.Type = MessageType.Public;  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,BaconCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\BaconCommandProcessor.cs,Process,The following statement contains a magic number: if (CanProcess (message)) {  	if (message.ProcessedContent.Equals ("/bacon"' StringComparison.OrdinalIgnoreCase)) {  		message.ProcessedContent = URLS.RandomElement ();  	}  	else if (REGEX.IsMatch (message.ProcessedContent)) {  		var url = REGEX.Match (message.ProcessedContent).Groups [3].Value;  		message.ProcessedContent = string.Format ("http://bacolicio.us/{0}"' url);  	}  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,BaconCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\BaconCommandProcessor.cs,Process,The following statement contains a magic number: if (message.ProcessedContent.Equals ("/bacon"' StringComparison.OrdinalIgnoreCase)) {  	message.ProcessedContent = URLS.RandomElement ();  }  else if (REGEX.IsMatch (message.ProcessedContent)) {  	var url = REGEX.Match (message.ProcessedContent).Groups [3].Value;  	message.ProcessedContent = string.Format ("http://bacolicio.us/{0}"' url);  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,BaconCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\BaconCommandProcessor.cs,Process,The following statement contains a magic number: if (REGEX.IsMatch (message.ProcessedContent)) {  	var url = REGEX.Match (message.ProcessedContent).Groups [3].Value;  	message.ProcessedContent = string.Format ("http://bacolicio.us/{0}"' url);  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,CICommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\JenkinsCommandProcessor.cs,GetCIInformation,The following statement contains a magic number: if (jobs.Any ()) {  	stringBuilder.AppendLine ("Jobs");  	stringBuilder.AppendLine ("===");  	foreach (var job in jobs.OrderByDescending (j => j.Status)) {  		var maxLength = Enum.GetNames (typeof(JobStatus)).AsEnumerable<string> ().Select (s => s.Length).Max ();  		var jobStatus = string.Format ("[{0}]"' job.Status).PadRight (maxLength + 2' ' ');  		stringBuilder.AppendLine (string.Format ("{0} {1}"' jobStatus' job.Name));  		stringBuilder.AppendLine (job.Url);  	}  }  else {  	stringBuilder.AppendLine ("none");  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,CICommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\JenkinsCommandProcessor.cs,GetCIInformation,The following statement contains a magic number: foreach (var job in jobs.OrderByDescending (j => j.Status)) {  	var maxLength = Enum.GetNames (typeof(JobStatus)).AsEnumerable<string> ().Select (s => s.Length).Max ();  	var jobStatus = string.Format ("[{0}]"' job.Status).PadRight (maxLength + 2' ' ');  	stringBuilder.AppendLine (string.Format ("{0} {1}"' jobStatus' job.Name));  	stringBuilder.AppendLine (job.Url);  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,StockCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\StockCommandProcessor.cs,Process,The following statement contains a magic number: if (CanProcess (message)) {  	var symbol = REGEX.Match (message.ProcessedContent).Groups [3].Value;  	message.ProcessedContent = GetStockInformation (symbol);  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,Process,The following statement contains a magic number: if (CanProcess (message)) {  	var regex = REGEXES.First (r => r.IsMatch (message.RawContent));  	var type = regex.Match (message.RawContent).Groups [3].Value;  	var number = regex.Match (message.RawContent).Groups [4].Value;  	if (type.Equals ("de"' StringComparison.OrdinalIgnoreCase)) {  		message.ProcessedContent = GetDefect (number);  	}  	else if (type.Equals ("ta"' StringComparison.OrdinalIgnoreCase)) {  		message.ProcessedContent = GetTask (number);  	}  	else if (type.Equals ("us"' StringComparison.OrdinalIgnoreCase)) {  		message.ProcessedContent = GetStory (number);  	}  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,Process,The following statement contains a magic number: if (CanProcess (message)) {  	var regex = REGEXES.First (r => r.IsMatch (message.RawContent));  	var type = regex.Match (message.RawContent).Groups [3].Value;  	var number = regex.Match (message.RawContent).Groups [4].Value;  	if (type.Equals ("de"' StringComparison.OrdinalIgnoreCase)) {  		message.ProcessedContent = GetDefect (number);  	}  	else if (type.Equals ("ta"' StringComparison.OrdinalIgnoreCase)) {  		message.ProcessedContent = GetTask (number);  	}  	else if (type.Equals ("us"' StringComparison.OrdinalIgnoreCase)) {  		message.ProcessedContent = GetStory (number);  	}  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetDefect,The following statement contains a magic number: if (item != null && item.QueryResult.TotalResultCount > 0) {  	int deisredLabelLength = 8;  	builder.AppendLine (string.Format ("{0}"' item.QueryResult.Results [0].FormattedID));  	builder.AppendLine ("===");  	builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Title"' deisredLabelLength)' item.QueryResult.Results [0].Name));  	builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Owner"' deisredLabelLength)' item.QueryResult.Results [0].Owner == null ? "No Owner" : item.QueryResult.Results [0].Owner._refObjectName));  	builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Project"' deisredLabelLength)' item.QueryResult.Results [0].Project == null ? "No Project" : item.QueryResult.Results [0].Project._refObjectName));  	builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Severity"' deisredLabelLength)' item.QueryResult.Results [0].Severity));  	builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("State"' deisredLabelLength)' item.QueryResult.Results [0].State));  	builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Link"' deisredLabelLength)' GetLinkToItem (item.QueryResult.Results [0]' "defect")));  	builder.AppendLine ();  	builder.AppendLine (FormatDescription (item.QueryResult.Results [0].Description.Value));  }  else {  	builder.Append (string.Format ("Sorry' I could'nt find de{0}"' number));  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetTask,The following statement contains a magic number: if (item != null && item.QueryResult.TotalResultCount > 0) {  	int deisredLabelLength = 7;  	builder.AppendLine (string.Format ("{0}"' item.QueryResult.Results [0].FormattedID));  	builder.AppendLine ("===");  	builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Title"' deisredLabelLength)' item.QueryResult.Results [0].Name));  	builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Owner"' deisredLabelLength)' item.QueryResult.Results [0].Owner == null ? "No Owner" : item.QueryResult.Results [0].Owner._refObjectName));  	builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Project"' deisredLabelLength)' item.QueryResult.Results [0].Project == null ? "No Project" : item.QueryResult.Results [0].Project._refObjectName));  	builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("State"' deisredLabelLength)' item.QueryResult.Results [0].State));  	builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Feature"' deisredLabelLength)' item.QueryResult.Results [0].Feature == null ? "Not associated with any feature" : item.QueryResult.Results [0].Feature._refObjectName));  	builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Link"' deisredLabelLength)' GetLinkToItem (item.QueryResult.Results [0]' "task")));  }  else {  	builder.Append (string.Format ("Sorry' I could'nt find ta{0}"' number));  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetStory,The following statement contains a magic number: if (item != null && item.QueryResult.TotalResultCount > 0) {  	int deisredLabelLength = 7;  	builder.AppendLine (string.Format ("{0}"' item.QueryResult.Results [0].FormattedID));  	builder.AppendLine ("===");  	builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Title"' deisredLabelLength)' item.QueryResult.Results [0].Name));  	builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Owner"' deisredLabelLength)' item.QueryResult.Results [0].Owner == null ? "No Owner" : item.QueryResult.Results [0].Owner._refObjectName));  	builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Project"' deisredLabelLength)' item.QueryResult.Results [0].Project == null ? "No Project" : item.QueryResult.Results [0].Project._refObjectName));  	builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("State"' deisredLabelLength)' item.QueryResult.Results [0].ScheduleState));  	builder.AppendLine (string.Format ("{0} {1}"' FormatLabel ("Link"' deisredLabelLength)' GetLinkToItem (item.QueryResult.Results [0]' "userstory")));  	builder.AppendLine ();  	builder.AppendLine (FormatDescription (item.QueryResult.Results [0].Description.Value));  }  else {  	builder.Append (string.Format ("Sorry' I could'nt find us{0}"' number));  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,FormatLabel,The following statement contains a magic number: return string.Format ("[{0}]"' label).PadRight (desiredLength + 2);  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetLinkToItem,The following statement contains a magic number: if (@object != null) {  	var objectId = @object.ObjectID.Value;  	string project = @object.Project._ref.Value;  	var projectId = project.Substring (project.LastIndexOf ("/"));  	projectId = projectId.Substring (1' projectId.Length - 4);  	link = string.Format ("https://rally1.rallydev.com/slm/rally.sp#/{0}/detail/{1}/{2}"' projectId' type' objectId);  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,RallyCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\RallyCommandProcessor.cs,GetLinkToItem,The following statement contains a magic number: projectId = projectId.Substring (1' projectId.Length - 4);  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,WeatherCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\WeatherCommandProcessor.cs,Process,The following statement contains a magic number: if (CanProcess (message)) {  	var location = REGEX.Match (message.ProcessedContent).Groups [3].Value;  	message.ProcessedContent = GetWeather (location);  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,WeatherCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\WeatherCommandProcessor.cs,GetWeather,The following statement contains a magic number: try {  	var client = new HttpClient ();  	client.DefaultRequestHeaders.AcceptLanguage.Add (new StringWithQualityHeaderValue ("en-us"));  	client.DefaultRequestHeaders.AcceptCharset.Add (new StringWithQualityHeaderValue ("utf-8"));  	var result = client.GetAsync (String.Format (url' Uri.EscapeDataString (location))).Result;  	var content = result.Content.ReadAsStringAsync ().Result;  	if (!result.IsSuccessStatusCode) {  		formattedInformation = "Sorry' weather is unavaliable at the moment.";  	}  	else {  		dynamic json = JsonConvert.DeserializeObject (content);  		var city = json.list [0];  		var name = (string)city.name;  		var temp_current = (double)city.main.temp;  		var temp_min = (double)city.main.temp_min;  		var temp_max = (double)city.main.temp_max;  		var humidity = (double)city.main.humidity;  		var date = (DateTime)city.date;  		var wind_speed = (double)city.wind.speed;  		var wind_degrees = (double)city.wind.deg;  		var description = (string)city.weather [0].description;  		var temp_current_C = temp_current - 273.15;  		var temp_current_F = 9.0 / 5.0 * temp_current_C + 32;  		var stringBuilder = new StringBuilder ();  		stringBuilder.AppendLine (name);  		stringBuilder.AppendLine ("---");  		stringBuilder.AppendLine (description);  		stringBuilder.AppendLine (string.Format ("{0:F0}°F {1:F0}°C"' temp_current_F' temp_current_C));  		stringBuilder.AppendLine (string.Format ("{0:F0}% humidity"' humidity));  		formattedInformation = stringBuilder.ToString ();  	}  }  catch {  	formattedInformation = "Sorry' weather is unavaliable at the moment.";  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,WeatherCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\WeatherCommandProcessor.cs,GetWeather,The following statement contains a magic number: try {  	var client = new HttpClient ();  	client.DefaultRequestHeaders.AcceptLanguage.Add (new StringWithQualityHeaderValue ("en-us"));  	client.DefaultRequestHeaders.AcceptCharset.Add (new StringWithQualityHeaderValue ("utf-8"));  	var result = client.GetAsync (String.Format (url' Uri.EscapeDataString (location))).Result;  	var content = result.Content.ReadAsStringAsync ().Result;  	if (!result.IsSuccessStatusCode) {  		formattedInformation = "Sorry' weather is unavaliable at the moment.";  	}  	else {  		dynamic json = JsonConvert.DeserializeObject (content);  		var city = json.list [0];  		var name = (string)city.name;  		var temp_current = (double)city.main.temp;  		var temp_min = (double)city.main.temp_min;  		var temp_max = (double)city.main.temp_max;  		var humidity = (double)city.main.humidity;  		var date = (DateTime)city.date;  		var wind_speed = (double)city.wind.speed;  		var wind_degrees = (double)city.wind.deg;  		var description = (string)city.weather [0].description;  		var temp_current_C = temp_current - 273.15;  		var temp_current_F = 9.0 / 5.0 * temp_current_C + 32;  		var stringBuilder = new StringBuilder ();  		stringBuilder.AppendLine (name);  		stringBuilder.AppendLine ("---");  		stringBuilder.AppendLine (description);  		stringBuilder.AppendLine (string.Format ("{0:F0}°F {1:F0}°C"' temp_current_F' temp_current_C));  		stringBuilder.AppendLine (string.Format ("{0:F0}% humidity"' humidity));  		formattedInformation = stringBuilder.ToString ();  	}  }  catch {  	formattedInformation = "Sorry' weather is unavaliable at the moment.";  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,WeatherCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\WeatherCommandProcessor.cs,GetWeather,The following statement contains a magic number: try {  	var client = new HttpClient ();  	client.DefaultRequestHeaders.AcceptLanguage.Add (new StringWithQualityHeaderValue ("en-us"));  	client.DefaultRequestHeaders.AcceptCharset.Add (new StringWithQualityHeaderValue ("utf-8"));  	var result = client.GetAsync (String.Format (url' Uri.EscapeDataString (location))).Result;  	var content = result.Content.ReadAsStringAsync ().Result;  	if (!result.IsSuccessStatusCode) {  		formattedInformation = "Sorry' weather is unavaliable at the moment.";  	}  	else {  		dynamic json = JsonConvert.DeserializeObject (content);  		var city = json.list [0];  		var name = (string)city.name;  		var temp_current = (double)city.main.temp;  		var temp_min = (double)city.main.temp_min;  		var temp_max = (double)city.main.temp_max;  		var humidity = (double)city.main.humidity;  		var date = (DateTime)city.date;  		var wind_speed = (double)city.wind.speed;  		var wind_degrees = (double)city.wind.deg;  		var description = (string)city.weather [0].description;  		var temp_current_C = temp_current - 273.15;  		var temp_current_F = 9.0 / 5.0 * temp_current_C + 32;  		var stringBuilder = new StringBuilder ();  		stringBuilder.AppendLine (name);  		stringBuilder.AppendLine ("---");  		stringBuilder.AppendLine (description);  		stringBuilder.AppendLine (string.Format ("{0:F0}°F {1:F0}°C"' temp_current_F' temp_current_C));  		stringBuilder.AppendLine (string.Format ("{0:F0}% humidity"' humidity));  		formattedInformation = stringBuilder.ToString ();  	}  }  catch {  	formattedInformation = "Sorry' weather is unavaliable at the moment.";  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,WeatherCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\WeatherCommandProcessor.cs,GetWeather,The following statement contains a magic number: try {  	var client = new HttpClient ();  	client.DefaultRequestHeaders.AcceptLanguage.Add (new StringWithQualityHeaderValue ("en-us"));  	client.DefaultRequestHeaders.AcceptCharset.Add (new StringWithQualityHeaderValue ("utf-8"));  	var result = client.GetAsync (String.Format (url' Uri.EscapeDataString (location))).Result;  	var content = result.Content.ReadAsStringAsync ().Result;  	if (!result.IsSuccessStatusCode) {  		formattedInformation = "Sorry' weather is unavaliable at the moment.";  	}  	else {  		dynamic json = JsonConvert.DeserializeObject (content);  		var city = json.list [0];  		var name = (string)city.name;  		var temp_current = (double)city.main.temp;  		var temp_min = (double)city.main.temp_min;  		var temp_max = (double)city.main.temp_max;  		var humidity = (double)city.main.humidity;  		var date = (DateTime)city.date;  		var wind_speed = (double)city.wind.speed;  		var wind_degrees = (double)city.wind.deg;  		var description = (string)city.weather [0].description;  		var temp_current_C = temp_current - 273.15;  		var temp_current_F = 9.0 / 5.0 * temp_current_C + 32;  		var stringBuilder = new StringBuilder ();  		stringBuilder.AppendLine (name);  		stringBuilder.AppendLine ("---");  		stringBuilder.AppendLine (description);  		stringBuilder.AppendLine (string.Format ("{0:F0}°F {1:F0}°C"' temp_current_F' temp_current_C));  		stringBuilder.AppendLine (string.Format ("{0:F0}% humidity"' humidity));  		formattedInformation = stringBuilder.ToString ();  	}  }  catch {  	formattedInformation = "Sorry' weather is unavaliable at the moment.";  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,WeatherCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\WeatherCommandProcessor.cs,GetWeather,The following statement contains a magic number: if (!result.IsSuccessStatusCode) {  	formattedInformation = "Sorry' weather is unavaliable at the moment.";  }  else {  	dynamic json = JsonConvert.DeserializeObject (content);  	var city = json.list [0];  	var name = (string)city.name;  	var temp_current = (double)city.main.temp;  	var temp_min = (double)city.main.temp_min;  	var temp_max = (double)city.main.temp_max;  	var humidity = (double)city.main.humidity;  	var date = (DateTime)city.date;  	var wind_speed = (double)city.wind.speed;  	var wind_degrees = (double)city.wind.deg;  	var description = (string)city.weather [0].description;  	var temp_current_C = temp_current - 273.15;  	var temp_current_F = 9.0 / 5.0 * temp_current_C + 32;  	var stringBuilder = new StringBuilder ();  	stringBuilder.AppendLine (name);  	stringBuilder.AppendLine ("---");  	stringBuilder.AppendLine (description);  	stringBuilder.AppendLine (string.Format ("{0:F0}°F {1:F0}°C"' temp_current_F' temp_current_C));  	stringBuilder.AppendLine (string.Format ("{0:F0}% humidity"' humidity));  	formattedInformation = stringBuilder.ToString ();  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,WeatherCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\WeatherCommandProcessor.cs,GetWeather,The following statement contains a magic number: if (!result.IsSuccessStatusCode) {  	formattedInformation = "Sorry' weather is unavaliable at the moment.";  }  else {  	dynamic json = JsonConvert.DeserializeObject (content);  	var city = json.list [0];  	var name = (string)city.name;  	var temp_current = (double)city.main.temp;  	var temp_min = (double)city.main.temp_min;  	var temp_max = (double)city.main.temp_max;  	var humidity = (double)city.main.humidity;  	var date = (DateTime)city.date;  	var wind_speed = (double)city.wind.speed;  	var wind_degrees = (double)city.wind.deg;  	var description = (string)city.weather [0].description;  	var temp_current_C = temp_current - 273.15;  	var temp_current_F = 9.0 / 5.0 * temp_current_C + 32;  	var stringBuilder = new StringBuilder ();  	stringBuilder.AppendLine (name);  	stringBuilder.AppendLine ("---");  	stringBuilder.AppendLine (description);  	stringBuilder.AppendLine (string.Format ("{0:F0}°F {1:F0}°C"' temp_current_F' temp_current_C));  	stringBuilder.AppendLine (string.Format ("{0:F0}% humidity"' humidity));  	formattedInformation = stringBuilder.ToString ();  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,WeatherCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\WeatherCommandProcessor.cs,GetWeather,The following statement contains a magic number: if (!result.IsSuccessStatusCode) {  	formattedInformation = "Sorry' weather is unavaliable at the moment.";  }  else {  	dynamic json = JsonConvert.DeserializeObject (content);  	var city = json.list [0];  	var name = (string)city.name;  	var temp_current = (double)city.main.temp;  	var temp_min = (double)city.main.temp_min;  	var temp_max = (double)city.main.temp_max;  	var humidity = (double)city.main.humidity;  	var date = (DateTime)city.date;  	var wind_speed = (double)city.wind.speed;  	var wind_degrees = (double)city.wind.deg;  	var description = (string)city.weather [0].description;  	var temp_current_C = temp_current - 273.15;  	var temp_current_F = 9.0 / 5.0 * temp_current_C + 32;  	var stringBuilder = new StringBuilder ();  	stringBuilder.AppendLine (name);  	stringBuilder.AppendLine ("---");  	stringBuilder.AppendLine (description);  	stringBuilder.AppendLine (string.Format ("{0:F0}°F {1:F0}°C"' temp_current_F' temp_current_C));  	stringBuilder.AppendLine (string.Format ("{0:F0}% humidity"' humidity));  	formattedInformation = stringBuilder.ToString ();  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,WeatherCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\WeatherCommandProcessor.cs,GetWeather,The following statement contains a magic number: if (!result.IsSuccessStatusCode) {  	formattedInformation = "Sorry' weather is unavaliable at the moment.";  }  else {  	dynamic json = JsonConvert.DeserializeObject (content);  	var city = json.list [0];  	var name = (string)city.name;  	var temp_current = (double)city.main.temp;  	var temp_min = (double)city.main.temp_min;  	var temp_max = (double)city.main.temp_max;  	var humidity = (double)city.main.humidity;  	var date = (DateTime)city.date;  	var wind_speed = (double)city.wind.speed;  	var wind_degrees = (double)city.wind.deg;  	var description = (string)city.weather [0].description;  	var temp_current_C = temp_current - 273.15;  	var temp_current_F = 9.0 / 5.0 * temp_current_C + 32;  	var stringBuilder = new StringBuilder ();  	stringBuilder.AppendLine (name);  	stringBuilder.AppendLine ("---");  	stringBuilder.AppendLine (description);  	stringBuilder.AppendLine (string.Format ("{0:F0}°F {1:F0}°C"' temp_current_F' temp_current_C));  	stringBuilder.AppendLine (string.Format ("{0:F0}% humidity"' humidity));  	formattedInformation = stringBuilder.ToString ();  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,PingCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\PingCommandProcessor.cs,Process,The following statement contains a magic number: if (CanProcess (message)) {  	if (message.ProcessedContent.Equals ("/ping"' StringComparison.OrdinalIgnoreCase)) {  		message.ProcessedContent = "pong";  		message.From = ChatHubConfiguration.BotName;  		message.Type = MessageType.Private;  	}  	else if (message.ProcessedContent.StartsWith ("/echo "' StringComparison.OrdinalIgnoreCase)) {  		message.ProcessedContent = message.ProcessedContent.Substring (6);  		message.From = ChatHubConfiguration.BotName;  		message.Type = MessageType.Private;  	}  	else if (message.ProcessedContent.Equals ("/time"' StringComparison.OrdinalIgnoreCase)) {  		message.ProcessedContent = string.Format ("{0:F} UTC"' DateTime.UtcNow);  		message.From = ChatHubConfiguration.BotName;  		message.Type = MessageType.Private;  	}  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,PingCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\PingCommandProcessor.cs,Process,The following statement contains a magic number: if (message.ProcessedContent.Equals ("/ping"' StringComparison.OrdinalIgnoreCase)) {  	message.ProcessedContent = "pong";  	message.From = ChatHubConfiguration.BotName;  	message.Type = MessageType.Private;  }  else if (message.ProcessedContent.StartsWith ("/echo "' StringComparison.OrdinalIgnoreCase)) {  	message.ProcessedContent = message.ProcessedContent.Substring (6);  	message.From = ChatHubConfiguration.BotName;  	message.Type = MessageType.Private;  }  else if (message.ProcessedContent.Equals ("/time"' StringComparison.OrdinalIgnoreCase)) {  	message.ProcessedContent = string.Format ("{0:F} UTC"' DateTime.UtcNow);  	message.From = ChatHubConfiguration.BotName;  	message.Type = MessageType.Private;  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,PingCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\PingCommandProcessor.cs,Process,The following statement contains a magic number: if (message.ProcessedContent.StartsWith ("/echo "' StringComparison.OrdinalIgnoreCase)) {  	message.ProcessedContent = message.ProcessedContent.Substring (6);  	message.From = ChatHubConfiguration.BotName;  	message.Type = MessageType.Private;  }  else if (message.ProcessedContent.Equals ("/time"' StringComparison.OrdinalIgnoreCase)) {  	message.ProcessedContent = string.Format ("{0:F} UTC"' DateTime.UtcNow);  	message.From = ChatHubConfiguration.BotName;  	message.Type = MessageType.Private;  }  
Magic Number,IN.Chat.Web.Hubs.CommandProcessor,PingCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\PingCommandProcessor.cs,Process,The following statement contains a magic number: message.ProcessedContent = message.ProcessedContent.Substring (6);  
Magic Number,IN.Chat.Web.Hubs.robotProcessor,FaceMeCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\FaceMeCommandProcessor.cs,Process,The following statement contains a magic number: if (CanProcess (message)) {  	var index = Regexes.FindIndex (r => r.IsMatch (message.ProcessedContent));  	var matches = Regexes.ElementAt (index).Matches (message.ProcessedContent);  	var accessory = index == 0 ? Accessories.RandomElement () : Accessories [index - 1];  	var urls = new List<string> ();  	foreach (Match match in matches) {  		urls.Add (match.Groups [3].Value);  	}  	urls = urls.Distinct ().ToList ();  	foreach (var url in urls) {  		message.ProcessedContent = String.Format ("http://faceup.me/img.jpg?overlay={0}&src={1}"' accessory' Uri.EscapeDataString (url));  	}  }  
Magic Number,IN.Chat.Web.Hubs.robotProcessor,FaceMeCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\FaceMeCommandProcessor.cs,Process,The following statement contains a magic number: foreach (Match match in matches) {  	urls.Add (match.Groups [3].Value);  }  
Magic Number,IN.Chat.Web.Hubs.robotProcessor,FaceMeCommandProcessor,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\CommandProcessor\FaceMeCommandProcessor.cs,Process,The following statement contains a magic number: urls.Add (match.Groups [3].Value);  
Magic Number,IN.Chat.Web.Hubs.ContentProvider.Core,YouTubeContentProvider,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\ContentProvider\YouTubeContentProvider.cs,ExtractContent,The following statement contains a magic number: foreach (var url in urls.Distinct ()) {  	Match match = YoutubeRegex.Match (url.ToString ());  	if (match.Groups.Count < 2 || String.IsNullOrEmpty (match.Groups [1].Value)) {  	}  	else {  		string videoId = match.Groups [1].Value;  		string extractedContent = string.Format (extractedContentFormat' videoId);  		message.ProcessedContent += string.Format (base.EmbeddedContentMarkUpFormat' url' extractedContent);  	}  }  
Magic Number,IN.Chat.Web.Hubs.ContentProvider.Core,YouTubeContentProvider,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\Hubs\ContentProvider\YouTubeContentProvider.cs,ExtractContent,The following statement contains a magic number: if (match.Groups.Count < 2 || String.IsNullOrEmpty (match.Groups [1].Value)) {  }  else {  	string videoId = match.Groups [1].Value;  	string extractedContent = string.Format (extractedContentFormat' videoId);  	message.ProcessedContent += string.Format (base.EmbeddedContentMarkUpFormat' url' extractedContent);  }  
Magic Number,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,GetLazyAutomaticFactoryRequest,The following statement contains a magic number: if ((genericType == typeof(Func<' ' >) && type.GetGenericArguments () [0] == typeof(string) && type.GetGenericArguments () [1] == typeof(IDictionary<string' object>))) {  	Type returnType = genericArguments [2];  	var name = Expression.Parameter (typeof(string)' "name");  	var parameters = Expression.Parameter (typeof(IDictionary<string' object>)' "parameters");  	MethodInfo resolveMethod = typeof(TinyIoCContainer).GetMethod ("Resolve"' new Type[] {  		typeof(String)'  		typeof(NamedParameterOverloads)  	});  	resolveMethod = resolveMethod.MakeGenericMethod (returnType);  	var resolveCall = Expression.Call (Expression.Constant (this)' resolveMethod' name' Expression.Call (typeof(NamedParameterOverloads)' "FromIDictionary"' null' parameters));  	var resolveLambda = Expression.Lambda (resolveCall' name' parameters).Compile ();  	return resolveLambda;  }  
Magic Number,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,ExecuteGenericRegister,The following statement contains a magic number: try {  	var method = this.GetType ().GetGenericMethod (BindingFlags.Instance | BindingFlags.Public' "Register"' genericParameterTypes' methodParameterTypes);  	return (RegisterOptions)method.Invoke (this' methodParameters);  }  catch (ArgumentException ex) {  	var registrationType = genericParameterTypes [0];  	var implementationType = genericParameterTypes [1];  	if (genericParameterTypes.Length == 2)  		implementationType = genericParameterTypes [2];  	throw new TinyIoCRegistrationException (registrationType' implementationType' ex);  }  
Magic Number,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,ExecuteGenericRegister,The following statement contains a magic number: try {  	var method = this.GetType ().GetGenericMethod (BindingFlags.Instance | BindingFlags.Public' "Register"' genericParameterTypes' methodParameterTypes);  	return (RegisterOptions)method.Invoke (this' methodParameters);  }  catch (ArgumentException ex) {  	var registrationType = genericParameterTypes [0];  	var implementationType = genericParameterTypes [1];  	if (genericParameterTypes.Length == 2)  		implementationType = genericParameterTypes [2];  	throw new TinyIoCRegistrationException (registrationType' implementationType' ex);  }  
Magic Number,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,ExecuteGenericRegister,The following statement contains a magic number: if (genericParameterTypes.Length == 2)  	implementationType = genericParameterTypes [2];  
Magic Number,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,ExecuteGenericRegister,The following statement contains a magic number: if (genericParameterTypes.Length == 2)  	implementationType = genericParameterTypes [2];  
Magic Number,TinyIoC,TinyIoCContainer,D:\SecondaryReposToAnalyze\IngageNetworks_IN.Chat\IN.Chat.Web\TinyIoC.cs,ExecuteGenericRegister,The following statement contains a magic number: implementationType = genericParameterTypes [2];  
