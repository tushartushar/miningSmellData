Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Rant.Tools.Commands,PackCommand,C:\repos\TheBerkin_Rant\Rant.Tools\Commands\PackCommand.cs,TryGetRelativePath,Cyclomatic complexity of the method is 8
Complex Method,Rant.Tools,Command,C:\repos\TheBerkin_Rant\Rant.Tools\Command.cs,Run,Cyclomatic complexity of the method is 9
Long Statement,Rant.Tools.Commands,DicDocsCommand,C:\repos\TheBerkin_Rant\Rant.Tools\Commands\DicDocsCommand.cs,OnRun,The length of the statement  "						writer.WriteLine($"**Hidden classes:** {table.HiddenClasses.Select(cl => $"`{cl}`").Aggregate((c' n) => $"{c}' {n}")}\n"); " is 122.
Long Statement,Rant.Tools.Commands,FuncDocsCommand,C:\repos\TheBerkin_Rant\Rant.Tools\Commands\FuncDocsCommand.cs,OnRun,The length of the statement  "									writer.Write($"|{p.Name + (p.IsParams ? "..." : "")}|{p.RantType}|{(String.IsNullOrEmpty(p.Description) ? sb.ToString() : p.Description + "<br/><br/>" + sb.ToString())}|\n"); " is 174.
Long Statement,Rant.Tools.Commands,FuncDocsCommand,C:\repos\TheBerkin_Rant\Rant.Tools\Commands\FuncDocsCommand.cs,OnRun,The length of the statement  "									writer.Write($"|{p.Name + (p.IsParams ? "..." : "")}|{p.RantType}|{(String.IsNullOrEmpty(p.Description) ? "*No description*" : p.Description)}|\n"); " is 148.
Long Statement,Rant.Tools.Commands,PackCommand,C:\repos\TheBerkin_Rant\Rant.Tools\Commands\PackCommand.cs,OnRun,The length of the statement  "            pkg.Version = RantPackageVersion.Parse(!string.IsNullOrWhiteSpace(CmdLine.Property("version")) ? CmdLine.Property("version") : info.Version); " is 141.
Long Statement,Rant.Tools,Command,C:\repos\TheBerkin_Rant\Rant.Tools\Command.cs,Run,The length of the statement  "                throw new ArgumentException($"The command '{cmd.Name}' is missing the following required properties: {missing.Aggregate(missing[0].Name' (c' n) => c + "' " + n.Name)}"); " is 169.
Magic Number,Rant.Tools,Command,C:\repos\TheBerkin_Rant\Rant.Tools\Command.cs,Run,The following statement contains a magic number: if (String.IsNullOrWhiteSpace(cmdname))              {                  Console.WriteLine($"\nRant Command Line Tools for Rant {typeof(RantEngine).Assembly.GetName().Version.ToString(3)}\n");                  Console.WriteLine($"Usage: {Program.Name} <command> [args]\n");                  Console.WriteLine("Use the --help option on any command to display its help text.\n");                  Console.WriteLine("Available commands: ");                  foreach (var c in _cmdMap.Values.OrderBy(c => c.Name))                  {                      Console.WriteLine($"  {c.Name}\t\t{c.Description}");                  }                  Console.WriteLine();                  return;              }
