Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Flurl.Test,ReflectionHelper,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\ReflectionHelper.cs,AreSameMethodSignatures,Cyclomatic complexity of the method is 13
Complex Method,Flurl.Test,ReflectionHelper,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\ReflectionHelper.cs,AreSameType,Cyclomatic complexity of the method is 10
Long Parameter List,Flurl.Test.UrlBuilder,UrlParsingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlParsingTests.cs,can_parse_url_parts,The method has 9 parameters. Parameters: url' scheme' authority' userInfo' host' port' path' query' fragment
Long Statement,Flurl.Test.Http,RealHttpTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\RealHttpTests.cs,can_download_file,The length of the statement  "			var folder = Path.Combine(Path.GetTempPath()' $"flurl-test-{Guid.NewGuid()}"); // random so parallel tests don't trip over each other " is 133.
Long Statement,Flurl.Test.Http,RealHttpTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\RealHttpTests.cs,can_download_file,The length of the statement  "				var path = await url.SetQueryParam("Content-Disposition"' contentDisposition).DownloadFileAsync(folder' suppliedFilename); " is 122.
Long Statement,Flurl.Test.Http,SettingsTestsBase,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsTests.cs,can_set_error_callback,The length of the statement  "					Assert.IsTrue(markExceptionHandled' "ExceptionHandled was marked false in callback' but exception was not propagated."); " is 120.
Long Statement,Flurl.Test.Http,SettingsTestsBase,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsTests.cs,explicit_content_type_header_is_not_overridden,The length of the statement  "				// PostJsonAsync will normally set Content-Type to application/json' but it shouldn't touch it if it was set explicitly. " is 120.
Long Statement,Flurl.Test.Http,GlobalSettingsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsTests.cs,settings_propagate_correctly,The length of the statement  "			Assert.AreEqual("5xx"' req.Settings.AllowedHttpStatusRange' "request should inherit client settings when not set at request level"); " is 132.
Long Statement,Flurl.Test.Http,GlobalSettingsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsTests.cs,settings_propagate_correctly,The length of the statement  "			Assert.AreEqual("4xx"' req.Settings.AllowedHttpStatusRange' "request should inherit global settings when not set at request or client level"); " is 142.
Long Statement,Flurl.Test.Http,GlobalSettingsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsTests.cs,settings_propagate_correctly,The length of the statement  "			Assert.AreEqual("3xx"' req.Settings.AllowedHttpStatusRange' "request should inherit client sttings when not set at request level"); " is 131.
Long Statement,Flurl.Test.Http,GlobalSettingsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsTests.cs,settings_propagate_correctly,The length of the statement  "			Assert.AreEqual("3xx"' req.Settings.AllowedHttpStatusRange' "request should inherit client sttings when cleared request level"); " is 128.
Long Statement,Flurl.Test.Http,GlobalSettingsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsTests.cs,settings_propagate_correctly,The length of the statement  "			Assert.IsFalse(req.Settings.CookiesEnabled' "request should inherit global settings when cleared at request and client level"); " is 127.
Long Statement,Flurl.Test.Http,GlobalSettingsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsTests.cs,settings_propagate_correctly,The length of the statement  "			Assert.AreEqual("4xx"' req.Settings.AllowedHttpStatusRange' "request should inherit global settings when cleared at request and client level"); " is 143.
Long Statement,Flurl.Test.Http,GlobalSettingsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsTests.cs,can_configure_client_from_FlurlHttp_object,The length of the statement  "			Assert.IsTrue(new FlurlRequest("https://host1.com/bar").Client.Settings.CookiesEnabled); // different URL but same host' so should use same client " is 146.
Long Statement,Flurl.Test.Http,RequestSettingsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsTests.cs,request_default_settings_change_when_client_changes,The length of the statement  "			Assert.IsTrue(req.Settings.CookiesEnabled' "entirely new settings object should still inherit current client settings"); " is 120.
Long Statement,Flurl.Test.Http,RequestSettingsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsTests.cs,request_default_settings_change_when_client_changes,The length of the statement  "			Assert.AreNotSame(cli1' req.Client' "client was explicitly set on request' so it shouldn't change even if the URL changes"); " is 124.
Long Statement,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The length of the statement  "			Assert.AreEqual("2017-12-01T02:34:56.7890000"' new DateTime(2017' 12' 1' 2' 34' 56' 789' DateTimeKind.Unspecified).ToInvariantString()); " is 136.
Long Statement,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The length of the statement  "			Assert.AreEqual("2017-12-01T02:34:56.7890000Z"' new DateTime(2017' 12' 1' 2' 34' 56' 789' DateTimeKind.Utc).ToInvariantString()); " is 129.
Long Statement,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The length of the statement  "			Assert.AreEqual("2017-12-01T02:34:56.7890000-06:00"' new DateTimeOffset(2017' 12' 1' 2' 34' 56' 789' TimeSpan.FromHours(-6)).ToInvariantString()); " is 146.
Long Statement,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,extension_methods_consistently_supported,The length of the statement  "			var urlMethods = typeof(Url).GetMethods(BindingFlags.Instance | BindingFlags.Public | BindingFlags.DeclaredOnly).Where(m => !m.IsSpecialName); " is 142.
Long Statement,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,extension_methods_consistently_supported,The length of the statement  "			var whitelist = new[] { "ToString"' "IsValid"' "ToUri"' "Equals"' "GetHashCode"' "Clone"' "Reset" }; // cases where string extension of the same name was excluded intentionally " is 176.
Long Statement,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_control_null_value_behavior_in_query_params,The length of the statement  "			return "http://www.mysite.com?y=2".SetQueryParams(new { x = 1' y = (string)null' z = "foo" }' nullValueHandling).ToString(); " is 124.
Magic Number,Flurl.Test.Http,DefaultUrlEncodedSerializerTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\DefaultUrlEncodedSerializerTests.cs,can_serialize_object,The following statement contains a magic number: var vals = new {  			    a = "foo"'  			    b = 333'  			    c = (string)null' // exlude  			    d = ""  		    };
Magic Number,Flurl.Test.Http,FlurlClientFactoryTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\FlurlClientFactoryTests.cs,ConfigureClient_is_thread_safe,The following statement contains a magic number: var task1 = Task.Run(() => fac.ConfigureClient("http://api.com"' c => {  			    sequence.Add(1);  				Thread.Sleep(5000);  			    sequence.Add(3);  		    }));
Magic Number,Flurl.Test.Http,FlurlClientFactoryTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\FlurlClientFactoryTests.cs,ConfigureClient_is_thread_safe,The following statement contains a magic number: var task1 = Task.Run(() => fac.ConfigureClient("http://api.com"' c => {  			    sequence.Add(1);  				Thread.Sleep(5000);  			    sequence.Add(3);  		    }));
Magic Number,Flurl.Test.Http,FlurlClientFactoryTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\FlurlClientFactoryTests.cs,ConfigureClient_is_thread_safe,The following statement contains a magic number: await Task.Delay(200);
Magic Number,Flurl.Test.Http,FlurlClientFactoryTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\FlurlClientFactoryTests.cs,ConfigureClient_is_thread_safe,The following statement contains a magic number: var task2 = Task.Run(() => fac.ConfigureClient("http://api.com"' c => {  			    sequence.Add(4);  		    }));
Magic Number,Flurl.Test.Http,FlurlClientFactoryTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\FlurlClientFactoryTests.cs,ConfigureClient_is_thread_safe,The following statement contains a magic number: await Task.Delay(200);
Magic Number,Flurl.Test.Http,FlurlClientFactoryTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\FlurlClientFactoryTests.cs,ConfigureClient_is_thread_safe,The following statement contains a magic number: var task3 = Task.Run(() => fac.ConfigureClient("http://api2.com"' c => {  				sequence.Add(2);  			}));
Magic Number,Flurl.Test.Http,FlurlClientTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\FlurlClientTests.cs,extension_methods_consistently_supported,The following statement contains a magic number: Assert.That(frExts.Count > 20' $"IFlurlRequest only has {frExts.Count} extension methods? Something's wrong here.");
Magic Number,Flurl.Test.Http,FlurlClientTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\FlurlClientTests.cs,can_create_FlurlClient_with_existing_HttpClient,The following statement contains a magic number: var hc = new HttpClient {  				BaseAddress = new Uri("http://api.com/")'  				Timeout = TimeSpan.FromSeconds(123)  			};
Magic Number,Flurl.Test.Http,FlurlClientTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\FlurlClientTests.cs,can_create_FlurlClient_with_existing_HttpClient,The following statement contains a magic number: Assert.AreEqual(123' cli.HttpClient.Timeout.TotalSeconds);
Magic Number,Flurl.Test.Http,FlurlHttpExceptionTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\FlurlHttpExceptionTests.cs,exception_message_is_nice,The following statement contains a magic number: HttpTest.RespondWithJson(new { message = "bad data!" }' 400);
Magic Number,Flurl.Test.Http,FlurlHttpExceptionTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\FlurlHttpExceptionTests.cs,exception_message_excludes_request_response_labels_when_body_empty,The following statement contains a magic number: HttpTest.RespondWith(""' 400);
Magic Number,Flurl.Test.Http,GetTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\GetTests.cs,can_get_response_then_deserialize,The following statement contains a magic number: HttpTest.RespondWithJson(new TestData { id = 1' name = "Frank" }' 234' new { my_header = "hi" }' null' true);
Magic Number,Flurl.Test.Http,GetTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\GetTests.cs,can_get_response_then_deserialize,The following statement contains a magic number: Assert.AreEqual(234' resp.StatusCode);
Magic Number,Flurl.Test.Http,GetTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\GetTests.cs,can_get_json_dynamic_list,The following statement contains a magic number: HttpTest.RespondWithJson(new[] {  				new { id = 1' name = "Frank" }'  				new { id = 2' name = "Claire" }  			});
Magic Number,Flurl.Test.Http,GetTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\GetTests.cs,can_get_json_dynamic_list,The following statement contains a magic number: Assert.AreEqual(2' data[1].id);
Magic Number,Flurl.Test.Http,GetTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\GetTests.cs,failure_throws_detailed_exception,The following statement contains a magic number: HttpTest.RespondWith("bad job"' status: 500);
Magic Number,Flurl.Test.Http,GetTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\GetTests.cs,can_get_error_json_typed,The following statement contains a magic number: HttpTest.RespondWithJson(new { code = 999' message = "our server crashed" }' 500);
Magic Number,Flurl.Test.Http,GetTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\GetTests.cs,can_get_error_json_typed,The following statement contains a magic number: HttpTest.RespondWithJson(new { code = 999' message = "our server crashed" }' 500);
Magic Number,Flurl.Test.Http,GetTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\GetTests.cs,can_get_error_json_untyped,The following statement contains a magic number: HttpTest.RespondWithJson(new { code = 999' message = "our server crashed" }' 500);
Magic Number,Flurl.Test.Http,GetTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\GetTests.cs,can_get_error_json_untyped,The following statement contains a magic number: HttpTest.RespondWithJson(new { code = 999' message = "our server crashed" }' 500);
Magic Number,Flurl.Test.Http,HttpMethodTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\HttpMethodTests.cs,can_call_on_FlurlClient,The following statement contains a magic number: Assert.AreEqual(200' resp.StatusCode);
Magic Number,Flurl.Test.Http,HttpMethodTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\HttpMethodTests.cs,can_call_on_string,The following statement contains a magic number: Assert.AreEqual(200' resp.StatusCode);
Magic Number,Flurl.Test.Http,HttpMethodTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\HttpMethodTests.cs,can_call_on_url,The following statement contains a magic number: Assert.AreEqual(200' resp.StatusCode);
Magic Number,Flurl.Test.Http,HttpStatusRangeParserTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\HttpStatusRangeParserTests.cs,parser_throws_on_invalid_pattern,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => HttpStatusRangeParser.IsMatch(pattern' 100));
Magic Number,Flurl.Test.Http,MultipartTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\MultipartTests.cs,can_build_multipart_content,The following statement contains a magic number: var content = new CapturedMultipartContent()  				.AddString("string"' "foo")  				.AddStringParts(new { part1 = 1' part2 = 2' part3 = (string)null }) // part3 should be excluded  				.AddFile("file1"' Path.Combine("path"' "to"' "image1.jpg")' "image/jpeg")  				.AddFile("file2"' Path.Combine("path"' "to"' "image2.jpg")' "image/jpeg"' fileName: "new-name.jpg")  				.AddJson("json"' new { foo = "bar" })  				.AddUrlEncoded("urlEnc"' new { fizz = "buzz" });
Magic Number,Flurl.Test.Http,MultipartTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\MultipartTests.cs,can_build_multipart_content,The following statement contains a magic number: Assert.AreEqual(7' content.Parts.Length);
Magic Number,Flurl.Test.Http,MultipartTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\MultipartTests.cs,can_build_multipart_content,The following statement contains a magic number: AssertStringPart<CapturedStringContent>(content.Parts[2]' "part2"' "2");
Magic Number,Flurl.Test.Http,MultipartTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\MultipartTests.cs,can_build_multipart_content,The following statement contains a magic number: AssertFilePart(content.Parts[3]' "file1"' "image1.jpg"' "image/jpeg");
Magic Number,Flurl.Test.Http,MultipartTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\MultipartTests.cs,can_build_multipart_content,The following statement contains a magic number: AssertFilePart(content.Parts[4]' "file2"' "new-name.jpg"' "image/jpeg");
Magic Number,Flurl.Test.Http,MultipartTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\MultipartTests.cs,can_build_multipart_content,The following statement contains a magic number: AssertStringPart<CapturedJsonContent>(content.Parts[5]' "json"' "{\"foo\":\"bar\"}");
Magic Number,Flurl.Test.Http,MultipartTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\MultipartTests.cs,can_build_multipart_content,The following statement contains a magic number: AssertStringPart<CapturedUrlEncodedContent>(content.Parts[6]' "urlEnc"' "fizz=buzz");
Magic Number,Flurl.Test.Http,PostTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\PostTests.cs,can_post_object_as_json,The following statement contains a magic number: var body = new {a = 1' b = 2};
Magic Number,Flurl.Test.Http,PostTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\PostTests.cs,can_post_url_encoded,The following statement contains a magic number: var body = new { a = 1' b = 2' c = "hi there"' d = new[] { 1' 2' 3 } };
Magic Number,Flurl.Test.Http,PostTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\PostTests.cs,can_post_url_encoded,The following statement contains a magic number: var body = new { a = 1' b = 2' c = "hi there"' d = new[] { 1' 2' 3 } };
Magic Number,Flurl.Test.Http,PostTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\PostTests.cs,can_post_url_encoded,The following statement contains a magic number: var body = new { a = 1' b = 2' c = "hi there"' d = new[] { 1' 2' 3 } };
Magic Number,Flurl.Test.Http,PostTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\PostTests.cs,can_receive_json,The following statement contains a magic number: var data = await "http://some-api.com".PostJsonAsync(new { a = 1' b = 2 }).ReceiveJson<TestData>();
Magic Number,Flurl.Test.Http,PostTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\PostTests.cs,can_receive_json_dynamic,The following statement contains a magic number: var data = await "http://some-api.com".PostJsonAsync(new { a = 1' b = 2 }).ReceiveJson();
Magic Number,Flurl.Test.Http,PostTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\PostTests.cs,can_receive_json_dynamic_list,The following statement contains a magic number: HttpTest.RespondWithJson(new[] {  				new { id = 1' name = "Frank" }'  				new { id = 2' name = "Claire" }  			});
Magic Number,Flurl.Test.Http,PostTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\PostTests.cs,can_receive_json_dynamic_list,The following statement contains a magic number: var data = await "http://some-api.com".PostJsonAsync(new { a = 1' b = 2 }).ReceiveJsonList();
Magic Number,Flurl.Test.Http,PostTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\PostTests.cs,can_receive_json_dynamic_list,The following statement contains a magic number: Assert.AreEqual(2' data[1].id);
Magic Number,Flurl.Test.Http,PostTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\PostTests.cs,can_receive_string,The following statement contains a magic number: var data = await "http://some-api.com".PostJsonAsync(new { a = 1' b = 2 }).ReceiveString();
Magic Number,Flurl.Test.Http,RealHttpTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\RealHttpTests.cs,can_set_request_cookies,The following statement contains a magic number: var resp = await cli.Request("https://httpbin.org/cookies").WithCookies(new { x = 1' y = 2 }).GetJsonAsync();
Magic Number,Flurl.Test.Http,RealHttpTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\RealHttpTests.cs,can_persist_cookies,The following statement contains a magic number: var req = cli.Request().WithCookie("z"' 999);
Magic Number,Flurl.Test.Http,RealHttpTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\RealHttpTests.cs,can_post_and_receive_json,The following statement contains a magic number: var result = await "https://httpbin.org/post".PostJsonAsync(new { a = 1' b = 2 }).ReceiveJson();
Magic Number,Flurl.Test.Http,RealHttpTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\RealHttpTests.cs,can_post_and_receive_json,The following statement contains a magic number: Assert.AreEqual(result.json.b' 2);
Magic Number,Flurl.Test.Http,RealHttpTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\RealHttpTests.cs,can_allow_non_success_status,The following statement contains a magic number: Assert.AreEqual(418' resp.StatusCode);
Magic Number,Flurl.Test.Http,RealHttpTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\RealHttpTests.cs,can_post_multipart,The following statement contains a magic number: var resp = await "https://httpbin.org/post"  						.PostMultipartAsync(content => {  							content  								.AddStringParts(new { a = 1' b = 2 })  								.AddString("DataField"' "hello!")  								.AddFile("File1"' path1)  								.AddFile("File2"' stream' "foo.txt");    							// hack to deal with #179. appears to be fixed on httpbin now.  							// content.Headers.ContentLength = 735;  						})  						//.ReceiveString();  						.ReceiveJson();
Magic Number,Flurl.Test.Http,RealHttpTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\RealHttpTests.cs,can_set_timeout,The following statement contains a magic number: var ex = Assert.ThrowsAsync<FlurlHttpTimeoutException>(async () => {  				await "https://httpbin.org/delay/5"  					.WithTimeout(TimeSpan.FromMilliseconds(50))  					.HeadAsync();  			});
Magic Number,Flurl.Test.Http,RealHttpTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\RealHttpTests.cs,can_set_timeout_and_cancellation_token,The following statement contains a magic number: var ex = Assert.ThrowsAsync<FlurlHttpException>(async () => {  				var task = "https://httpbin.org/delay/5"  					.WithTimeout(TimeSpan.FromMilliseconds(50))  					.GetAsync(cts.Token);  				cts.Cancel();  				await task;  			});
Magic Number,Flurl.Test.Http,RealHttpTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\RealHttpTests.cs,can_set_timeout_and_cancellation_token,The following statement contains a magic number: ex = Assert.ThrowsAsync<FlurlHttpTimeoutException>(async () => {  				await "https://httpbin.org/delay/5"  					.WithTimeout(TimeSpan.FromMilliseconds(50))  					.GetAsync(cts.Token);  			});
Magic Number,Flurl.Test.Http,RealHttpTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\RealHttpTests.cs,can_set_request_cookies_with_a_delegating_handler,The following statement contains a magic number: var resp = await new FlurlClient("http://httpbin.org")  				.Configure(settings => settings.HttpClientFactory = new DelegatingHandlerHttpClientFactory())  				.Request("cookies")  				.WithCookies(new { x = 1' y = 2 })  				.GetJsonAsync();
Magic Number,Flurl.Test.Http,RealHttpTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\RealHttpTests.cs,connection_lease_timeout_doesnt_disrupt_calls,The following statement contains a magic number: cli.Settings.ConnectionLeaseTimeout = TimeSpan.FromMilliseconds(1000);
Magic Number,Flurl.Test.Http,RealHttpTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\RealHttpTests.cs,connection_lease_timeout_doesnt_disrupt_calls,The following statement contains a magic number: await Task.Delay(25);
Magic Number,Flurl.Test.Http,RealHttpTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\RealHttpTests.cs,connection_lease_timeout_doesnt_disrupt_calls,The following statement contains a magic number: i < 100
Magic Number,Flurl.Test.Http,SettingsExtensionsTests<T>,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsExtensionsTests.cs,can_set_timeout,The following statement contains a magic number: var sc = GetSettingsContainer().WithTimeout(TimeSpan.FromSeconds(15));
Magic Number,Flurl.Test.Http,SettingsExtensionsTests<T>,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsExtensionsTests.cs,can_set_timeout,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(15)' sc.Settings.Timeout);
Magic Number,Flurl.Test.Http,SettingsExtensionsTests<T>,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsExtensionsTests.cs,can_set_timeout_in_seconds,The following statement contains a magic number: var sc = GetSettingsContainer().WithTimeout(15);
Magic Number,Flurl.Test.Http,SettingsExtensionsTests<T>,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsExtensionsTests.cs,can_set_timeout_in_seconds,The following statement contains a magic number: Assert.AreEqual(sc.Settings.Timeout' TimeSpan.FromSeconds(15));
Magic Number,Flurl.Test.Http,SettingsExtensionsTests<T>,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsExtensionsTests.cs,can_set_headers_from_anon_object,The following statement contains a magic number: var sc = GetSettingsContainer().WithHeaders(new { a = "b"' one = 2' three = (object)null });
Magic Number,Flurl.Test.Http,SettingsExtensionsTests<T>,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsExtensionsTests.cs,can_set_headers_from_anon_object,The following statement contains a magic number: Assert.AreEqual(2' sc.Headers.Count);
Magic Number,Flurl.Test.Http,SettingsExtensionsTests<T>,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsExtensionsTests.cs,can_set_headers_from_anon_object,The following statement contains a magic number: Assert.AreEqual(2' sc.Headers["one"]);
Magic Number,Flurl.Test.Http,SettingsExtensionsTests<T>,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsExtensionsTests.cs,can_remove_header_by_setting_null,The following statement contains a magic number: var sc = GetSettingsContainer().WithHeaders(new { a = 1' b = 2 });
Magic Number,Flurl.Test.Http,SettingsExtensionsTests<T>,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsExtensionsTests.cs,can_remove_header_by_setting_null,The following statement contains a magic number: Assert.AreEqual(2' sc.Headers.Count);
Magic Number,Flurl.Test.Http,SettingsExtensionsTests<T>,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsExtensionsTests.cs,can_set_headers_from_dictionary,The following statement contains a magic number: var sc = GetSettingsContainer().WithHeaders(new Dictionary<string' object> { { "a"' "b" }' { "one"' 2 } });
Magic Number,Flurl.Test.Http,SettingsExtensionsTests<T>,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsExtensionsTests.cs,can_set_headers_from_dictionary,The following statement contains a magic number: Assert.AreEqual(2' sc.Headers.Count);
Magic Number,Flurl.Test.Http,SettingsExtensionsTests<T>,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsExtensionsTests.cs,can_set_headers_from_dictionary,The following statement contains a magic number: Assert.AreEqual(2' sc.Headers["one"]);
Magic Number,Flurl.Test.Http,SettingsExtensionsTests<T>,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsExtensionsTests.cs,can_allow_specific_http_status,The following statement contains a magic number: test.RespondWith("Nothing to see here"' 404);
Magic Number,Flurl.Test.Http,SettingsExtensionsTests<T>,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsExtensionsTests.cs,can_clear_non_success_status,The following statement contains a magic number: test.RespondWith("I'm a teapot"' 418);
Magic Number,Flurl.Test.Http,SettingsExtensionsTests<T>,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsExtensionsTests.cs,can_allow_any_http_status,The following statement contains a magic number: test.RespondWith("epic fail"' 500);
Magic Number,Flurl.Test.Http,SettingsExtensionsTests<T>,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsExtensionsTests.cs,can_allow_any_http_status,The following statement contains a magic number: Assert.AreEqual(500' result.StatusCode);
Magic Number,Flurl.Test.Http,ClientSettingsExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsExtensionsTests.cs,can_override_settings_fluently,The following statement contains a magic number: test.RespondWith("epic fail"' 500);
Magic Number,Flurl.Test.Http,SettingsTestsBase,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsTests.cs,can_allow_non_success_status,The following statement contains a magic number: test.RespondWith("I'm a teapot"' 418);
Magic Number,Flurl.Test.Http,SettingsTestsBase,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsTests.cs,can_allow_non_success_status,The following statement contains a magic number: Assert.AreEqual(418' result.StatusCode);
Magic Number,Flurl.Test.Http,SettingsTestsBase,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsTests.cs,can_set_error_callback,The following statement contains a magic number: test.RespondWith("server error"' 500);
Magic Number,Flurl.Test.Http,SettingsTestsBase,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsTests.cs,can_disable_exception_behavior,The following statement contains a magic number: test.RespondWith("server error"' 500);
Magic Number,Flurl.Test.Http,SettingsTestsBase,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsTests.cs,can_disable_exception_behavior,The following statement contains a magic number: Assert.AreEqual(500' result.StatusCode);
Magic Number,Flurl.Test.Http,SettingsTestsBase,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsTests.cs,explicit_content_type_header_is_not_overridden,The following statement contains a magic number: await "https://api.com"  					.WithHeader("content-type"' "application/json-patch+json; utf-8")  					.WithHeader("CONTENT-LENGTH"' 10) // header names are case-insensitive  					.PostJsonAsync(new { foo = "bar" });
Magic Number,Flurl.Test.Http,ClientSettingsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsTests.cs,connection_lease_timeout_creates_new_HttpClient,The following statement contains a magic number: cli.Settings.ConnectionLeaseTimeout = TimeSpan.FromMilliseconds(50);
Magic Number,Flurl.Test.Http,ClientSettingsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsTests.cs,connection_lease_timeout_creates_new_HttpClient,The following statement contains a magic number: await Task.Delay(25);
Magic Number,Flurl.Test.Http,ClientSettingsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\SettingsTests.cs,connection_lease_timeout_creates_new_HttpClient,The following statement contains a magic number: await Task.Delay(25);
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,fake_post_works,The following statement contains a magic number: await "http://www.api.com".PostJsonAsync(new { x = 5 });
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_setup_multiple_responses,The following statement contains a magic number: Assert.AreEqual(3' calls.Count);
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_setup_multiple_responses,The following statement contains a magic number: Assert.AreEqual("three"' await calls[2].Response.Content.ReadAsStringAsync());
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_setup_multiple_responses,The following statement contains a magic number: HttpTest.ShouldHaveCalled("http://www.api.com/*").WithVerb(HttpMethod.Get).Times(3);
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_json_request,The following statement contains a magic number: var body = new { a = 1' b = 2 };
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_url_encoded_request,The following statement contains a magic number: var body = new { a = 1' b = 2' c = "hi there"' d = new[] { 1' 2' 3 } };
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_url_encoded_request,The following statement contains a magic number: var body = new { a = 1' b = 2' c = "hi there"' d = new[] { 1' 2' 3 } };
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_url_encoded_request,The following statement contains a magic number: var body = new { a = 1' b = 2' c = "hi there"' d = new[] { 1' 2' 3 } };
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_query_params,The following statement contains a magic number: HttpTest.ShouldHaveMadeACall().WithQueryParamValue("y"' 222);
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_query_params,The following statement contains a magic number: HttpTest.ShouldHaveMadeACall().WithQueryParamValues(new { z = 333' y = 222 });
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_query_params,The following statement contains a magic number: HttpTest.ShouldHaveMadeACall().WithQueryParamValues(new { z = 333' y = 222 });
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_query_params,The following statement contains a magic number: HttpTest.ShouldHaveCalled("http://www.api.com*").WithoutQueryParamValue("x"' 112);
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_query_params,The following statement contains a magic number: HttpTest.ShouldHaveMadeACall().WithoutQueryParamValues(new { x = 112' y = 223' z = 666 });
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_query_params,The following statement contains a magic number: HttpTest.ShouldHaveMadeACall().WithoutQueryParamValues(new { x = 112' y = 223' z = 666 });
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_query_params,The following statement contains a magic number: HttpTest.ShouldHaveMadeACall().WithoutQueryParamValues(new { x = 112' y = 223' z = 666 });
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_query_params,The following statement contains a magic number: Assert.Throws<HttpCallAssertException>(() =>  				HttpTest.ShouldHaveMadeACall().WithQueryParamValue("y"' 223));
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_query_params,The following statement contains a magic number: Assert.Throws<HttpCallAssertException>(() =>  				HttpTest.ShouldHaveMadeACall().WithQueryParamValues(new { x = 111' y = 666 }));
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_query_params,The following statement contains a magic number: Assert.Throws<HttpCallAssertException>(() =>  				HttpTest.ShouldHaveMadeACall().WithQueryParamValues(new { x = 111' y = 666 }));
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_query_params,The following statement contains a magic number: Assert.Throws<HttpCallAssertException>(() =>  				HttpTest.ShouldHaveMadeACall().WithoutQueryParamValue("y"' 222));
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_query_params,The following statement contains a magic number: Assert.Throws<HttpCallAssertException>(() =>  				HttpTest.ShouldHaveMadeACall().WithoutQueryParamValues(new { z = 333' y = 222 }));
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_query_params,The following statement contains a magic number: Assert.Throws<HttpCallAssertException>(() =>  				HttpTest.ShouldHaveMadeACall().WithoutQueryParamValues(new { z = 333' y = 222 }));
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_multiple_occurances_of_query_param,The following statement contains a magic number: var url = buildFluently ?  				"http://www.api.com".SetQueryParam("x"' new[] { 1' 2' 3 }).SetQueryParam("y"' 4).SetFragment("abcd") :  				new Url("http://www.api.com?x=1&x=2&x=3&y=4#abcd");
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_multiple_occurances_of_query_param,The following statement contains a magic number: var url = buildFluently ?  				"http://www.api.com".SetQueryParam("x"' new[] { 1' 2' 3 }).SetQueryParam("y"' 4).SetFragment("abcd") :  				new Url("http://www.api.com?x=1&x=2&x=3&y=4#abcd");
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_multiple_occurances_of_query_param,The following statement contains a magic number: var url = buildFluently ?  				"http://www.api.com".SetQueryParam("x"' new[] { 1' 2' 3 }).SetQueryParam("y"' 4).SetFragment("abcd") :  				new Url("http://www.api.com?x=1&x=2&x=3&y=4#abcd");
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_multiple_occurances_of_query_param,The following statement contains a magic number: HttpTest.ShouldHaveMadeACall().WithQueryParamValue("x"' new[] { 2' 1 });
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_multiple_occurances_of_query_param,The following statement contains a magic number: HttpTest.ShouldHaveMadeACall().WithQueryParamValues(new { x = new[] { 3' 2' 1 } });
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_multiple_occurances_of_query_param,The following statement contains a magic number: HttpTest.ShouldHaveMadeACall().WithQueryParamValues(new { x = new[] { 3' 2' 1 } });
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_multiple_occurances_of_query_param,The following statement contains a magic number: Assert.Throws<HttpCallAssertException>(() =>  				HttpTest.ShouldHaveMadeACall().WithQueryParamValue("x"' new[] { 1' 2' 4 }));
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_multiple_occurances_of_query_param,The following statement contains a magic number: Assert.Throws<HttpCallAssertException>(() =>  				HttpTest.ShouldHaveMadeACall().WithQueryParamValue("x"' new[] { 1' 2' 4 }));
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_multiple_occurances_of_query_param,The following statement contains a magic number: Assert.Throws<HttpCallAssertException>(() =>  				HttpTest.ShouldHaveMadeACall().WithQueryParamValues(new { x = new[] { 1' 2' 4 } }));
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_assert_multiple_occurances_of_query_param,The following statement contains a magic number: Assert.Throws<HttpCallAssertException>(() =>  				HttpTest.ShouldHaveMadeACall().WithQueryParamValues(new { x = new[] { 1' 2' 4 } }));
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_test_in_parallel,The following statement contains a magic number: await Task.Delay(100);
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_test_in_parallel,The following statement contains a magic number: await Task.WhenAll(  				CallAndAssertCountAsync(7)'  				CallAndAssertCountAsync(5)'  				CallAndAssertCountAsync(3)'  				CallAndAssertCountAsync(4)'  				CallAndAssertCountAsync(6));
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_test_in_parallel,The following statement contains a magic number: await Task.WhenAll(  				CallAndAssertCountAsync(7)'  				CallAndAssertCountAsync(5)'  				CallAndAssertCountAsync(3)'  				CallAndAssertCountAsync(4)'  				CallAndAssertCountAsync(6));
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_test_in_parallel,The following statement contains a magic number: await Task.WhenAll(  				CallAndAssertCountAsync(7)'  				CallAndAssertCountAsync(5)'  				CallAndAssertCountAsync(3)'  				CallAndAssertCountAsync(4)'  				CallAndAssertCountAsync(6));
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_test_in_parallel,The following statement contains a magic number: await Task.WhenAll(  				CallAndAssertCountAsync(7)'  				CallAndAssertCountAsync(5)'  				CallAndAssertCountAsync(3)'  				CallAndAssertCountAsync(4)'  				CallAndAssertCountAsync(6));
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_test_in_parallel,The following statement contains a magic number: await Task.WhenAll(  				CallAndAssertCountAsync(7)'  				CallAndAssertCountAsync(5)'  				CallAndAssertCountAsync(3)'  				CallAndAssertCountAsync(4)'  				CallAndAssertCountAsync(6));
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_fake_content_headers,The following statement contains a magic number: HttpTest.RespondWith("<xml></xml>"' 200' new { Content_Type = "text/xml" });
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_use_response_queue_in_parallel,The following statement contains a magic number: cli.Settings.BeforeCallAsync = call => Task.Delay(500);
Magic Number,Flurl.Test.Http,TestingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\Http\TestingTests.cs,can_use_response_queue_in_parallel,The following statement contains a magic number: i < 100
Magic Number,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,can_parse_collection_of_conventional_objects_to_kv,The following statement contains a magic number: var kv = new object[] {  				new { Key = "one"' Value = 1 }'  				new { key = "two"' value = "foo" }' // lower-case should work too  				new { Key = (string)null' Value = 3 }' // null keys should get skipped  				new { Name = "three"' Value = (string)null }'  				new { name = "four"' value = "bar" } // lower-case should work too  			}.ToKeyValuePairs().ToList();
Magic Number,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The following statement contains a magic number: Assert.AreEqual("2017-12-01T02:34:56.7890000"' new DateTime(2017' 12' 1' 2' 34' 56' 789' DateTimeKind.Unspecified).ToInvariantString());
Magic Number,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The following statement contains a magic number: Assert.AreEqual("2017-12-01T02:34:56.7890000"' new DateTime(2017' 12' 1' 2' 34' 56' 789' DateTimeKind.Unspecified).ToInvariantString());
Magic Number,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The following statement contains a magic number: Assert.AreEqual("2017-12-01T02:34:56.7890000"' new DateTime(2017' 12' 1' 2' 34' 56' 789' DateTimeKind.Unspecified).ToInvariantString());
Magic Number,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The following statement contains a magic number: Assert.AreEqual("2017-12-01T02:34:56.7890000"' new DateTime(2017' 12' 1' 2' 34' 56' 789' DateTimeKind.Unspecified).ToInvariantString());
Magic Number,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The following statement contains a magic number: Assert.AreEqual("2017-12-01T02:34:56.7890000"' new DateTime(2017' 12' 1' 2' 34' 56' 789' DateTimeKind.Unspecified).ToInvariantString());
Magic Number,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The following statement contains a magic number: Assert.AreEqual("2017-12-01T02:34:56.7890000"' new DateTime(2017' 12' 1' 2' 34' 56' 789' DateTimeKind.Unspecified).ToInvariantString());
Magic Number,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The following statement contains a magic number: Assert.AreEqual("2017-12-01T02:34:56.7890000Z"' new DateTime(2017' 12' 1' 2' 34' 56' 789' DateTimeKind.Utc).ToInvariantString());
Magic Number,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The following statement contains a magic number: Assert.AreEqual("2017-12-01T02:34:56.7890000Z"' new DateTime(2017' 12' 1' 2' 34' 56' 789' DateTimeKind.Utc).ToInvariantString());
Magic Number,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The following statement contains a magic number: Assert.AreEqual("2017-12-01T02:34:56.7890000Z"' new DateTime(2017' 12' 1' 2' 34' 56' 789' DateTimeKind.Utc).ToInvariantString());
Magic Number,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The following statement contains a magic number: Assert.AreEqual("2017-12-01T02:34:56.7890000Z"' new DateTime(2017' 12' 1' 2' 34' 56' 789' DateTimeKind.Utc).ToInvariantString());
Magic Number,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The following statement contains a magic number: Assert.AreEqual("2017-12-01T02:34:56.7890000Z"' new DateTime(2017' 12' 1' 2' 34' 56' 789' DateTimeKind.Utc).ToInvariantString());
Magic Number,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The following statement contains a magic number: Assert.AreEqual("2017-12-01T02:34:56.7890000Z"' new DateTime(2017' 12' 1' 2' 34' 56' 789' DateTimeKind.Utc).ToInvariantString());
Magic Number,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The following statement contains a magic number: Assert.AreEqual("2017-12-01T02:34:56.7890000-06:00"' new DateTimeOffset(2017' 12' 1' 2' 34' 56' 789' TimeSpan.FromHours(-6)).ToInvariantString());
Magic Number,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The following statement contains a magic number: Assert.AreEqual("2017-12-01T02:34:56.7890000-06:00"' new DateTimeOffset(2017' 12' 1' 2' 34' 56' 789' TimeSpan.FromHours(-6)).ToInvariantString());
Magic Number,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The following statement contains a magic number: Assert.AreEqual("2017-12-01T02:34:56.7890000-06:00"' new DateTimeOffset(2017' 12' 1' 2' 34' 56' 789' TimeSpan.FromHours(-6)).ToInvariantString());
Magic Number,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The following statement contains a magic number: Assert.AreEqual("2017-12-01T02:34:56.7890000-06:00"' new DateTimeOffset(2017' 12' 1' 2' 34' 56' 789' TimeSpan.FromHours(-6)).ToInvariantString());
Magic Number,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The following statement contains a magic number: Assert.AreEqual("2017-12-01T02:34:56.7890000-06:00"' new DateTimeOffset(2017' 12' 1' 2' 34' 56' 789' TimeSpan.FromHours(-6)).ToInvariantString());
Magic Number,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The following statement contains a magic number: Assert.AreEqual("2017-12-01T02:34:56.7890000-06:00"' new DateTimeOffset(2017' 12' 1' 2' 34' 56' 789' TimeSpan.FromHours(-6)).ToInvariantString());
Magic Number,Flurl.Test.UrlBuilder,CommonExtensionsTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\CommonExtensionsTests.cs,ToInvariantString_serializes_dates_to_iso,The following statement contains a magic number: Assert.AreEqual("2017-12-01T02:34:56.7890000-06:00"' new DateTimeOffset(2017' 12' 1' 2' 34' 56' 789' TimeSpan.FromHours(-6)).ToInvariantString());
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_set_query_params,The following statement contains a magic number: var url = "http://www.mysite.com/more"  				.SetQueryParam("x"' 1)  				.SetQueryParam("y"' new[] { "2"' "4"' "6" })  				.SetQueryParam("z"' 3)  				.SetQueryParam("abc")  				.SetQueryParam("xyz")  				.SetQueryParam("foo"' "")  				.SetQueryParam(""' "bar");
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,setting_query_param_array_creates_multiple,The following statement contains a magic number: var q = "http://www.mysite.com".SetQueryParam("x"' new[] { 1' 2' 3 }).QueryParams;
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,setting_query_param_array_creates_multiple,The following statement contains a magic number: var q = "http://www.mysite.com".SetQueryParam("x"' new[] { 1' 2' 3 }).QueryParams;
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,setting_query_param_array_creates_multiple,The following statement contains a magic number: Assert.AreEqual(3' q.Count);
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,setting_query_param_array_creates_multiple,The following statement contains a magic number: Assert.AreEqual(new[] { 1' 2' 3 }' q.Select(p => p.Value));
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,setting_query_param_array_creates_multiple,The following statement contains a magic number: Assert.AreEqual(new[] { 1' 2' 3 }' q.Select(p => p.Value));
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_change_query_param,The following statement contains a magic number: var url = "http://www.mysite.com?x=1".SetQueryParam("x"' 2);
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_set_multiple_query_params_from_anon_object,The following statement contains a magic number: var url = "http://www.mysite.com".SetQueryParams(new {  				x = 1'  				y = 2'  				z = new[] { 3' 4 }'  				exclude_me = (string)null  			});
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_set_multiple_query_params_from_anon_object,The following statement contains a magic number: var url = "http://www.mysite.com".SetQueryParams(new {  				x = 1'  				y = 2'  				z = new[] { 3' 4 }'  				exclude_me = (string)null  			});
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_set_multiple_query_params_from_anon_object,The following statement contains a magic number: var url = "http://www.mysite.com".SetQueryParams(new {  				x = 1'  				y = 2'  				z = new[] { 3' 4 }'  				exclude_me = (string)null  			});
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_replace_query_params_from_anon_object,The following statement contains a magic number: var url = "http://www.mysite.com?x=1&y=2&z=3".SetQueryParams(new {  				x = 8'  				y = new[] { "a"' "b" }'  				z = (int?)null  			});
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_set_query_params_from_dictionary,The following statement contains a magic number: var url = "http://www.mysite.com".SetQueryParams(new Dictionary<int' string> { { 1' "x" }' { 2' "y" } });
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_set_query_params_from_kv_pairs,The following statement contains a magic number: var url = "http://foo.com".SetQueryParams(new[] {  				new { key = "x"' value = 1 }'  				new { key = "y"' value = 2 }'  				new { key = "x"' value = 3 } // this should append' not overwrite (#370)  			});
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_set_query_params_from_kv_pairs,The following statement contains a magic number: var url = "http://foo.com".SetQueryParams(new[] {  				new { key = "x"' value = 1 }'  				new { key = "y"' value = 2 }'  				new { key = "x"' value = 3 } // this should append' not overwrite (#370)  			});
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,url_ToString_uses_invariant_culture,The following statement contains a magic number: var url = "http://www.mysite.com".SetQueryParam("x"' 1.1);
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_reset,The following statement contains a magic number: url.Port = 1234;
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_do_crazy_long_fluent_expression,The following statement contains a magic number: var url = "http://www.mysite.com"  				.SetQueryParams(new { a = 1' b = 2' c = 999 })  				.SetFragment("fooey")  				.AppendPathSegment("category")  				.RemoveQueryParam("c")  				.SetQueryParam("z"' 55)  				.RemoveQueryParams("a"' "z")  				.SetQueryParams(new { n = "hi"' m = "bye" })  				.AppendPathSegment("endpoint");
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_do_crazy_long_fluent_expression,The following statement contains a magic number: var url = "http://www.mysite.com"  				.SetQueryParams(new { a = 1' b = 2' c = 999 })  				.SetFragment("fooey")  				.AppendPathSegment("category")  				.RemoveQueryParam("c")  				.SetQueryParam("z"' 55)  				.RemoveQueryParams("a"' "z")  				.SetQueryParams(new { n = "hi"' m = "bye" })  				.AppendPathSegment("endpoint");
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_do_crazy_long_fluent_expression,The following statement contains a magic number: var url = "http://www.mysite.com"  				.SetQueryParams(new { a = 1' b = 2' c = 999 })  				.SetFragment("fooey")  				.AppendPathSegment("category")  				.RemoveQueryParam("c")  				.SetQueryParam("z"' 55)  				.RemoveQueryParams("a"' "z")  				.SetQueryParams(new { n = "hi"' m = "bye" })  				.AppendPathSegment("endpoint");
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,has_fragment_after_SetQueryParam,The following statement contains a magic number: var url = new Url(expected)  				.SetQueryParam("x"' 3)  				.SetQueryParam("y"' 4);
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,has_fragment_after_SetQueryParam,The following statement contains a magic number: var url = new Url(expected)  				.SetQueryParam("x"' 3)  				.SetQueryParam("y"' 4);
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,clone_creates_copy,The following statement contains a magic number: var url2 = url1.Clone().AppendPathSegment("foo").SetQueryParam("y"' 2);
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,clone_creates_copy,The following statement contains a magic number: url1.SetQueryParam("z"' 3);
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_write_port,The following statement contains a magic number: url.Port = 1234;
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_manipulate_query_params,The following statement contains a magic number: url.QueryParams["z"] = new[] { 8' 9' 10 };
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_manipulate_query_params,The following statement contains a magic number: url.QueryParams["z"] = new[] { 8' 9' 10 };
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_manipulate_query_params,The following statement contains a magic number: url.QueryParams["z"] = new[] { 8' 9' 10 };
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_manipulate_query_params,The following statement contains a magic number: url.QueryParams.RemoveAt(2);
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_modify_query_param_array,The following statement contains a magic number: url.QueryParams["x"] = new[] { 8' 9' 10 };
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_modify_query_param_array,The following statement contains a magic number: url.QueryParams["x"] = new[] { 8' 9' 10 };
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_modify_query_param_array,The following statement contains a magic number: url.QueryParams["x"] = new[] { 8' 9' 10 };
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_modify_query_param_array,The following statement contains a magic number: url.QueryParams["x"] = new[] { 101' 102 };
Magic Number,Flurl.Test.UrlBuilder,UrlBuildingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlBuildingTests.cs,can_modify_query_param_array,The following statement contains a magic number: url.QueryParams["x"] = new[] { 101' 102 };
Magic Number,Flurl.Test.UrlBuilder,UrlParsingTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UrlParsingTests.cs,can_parse_query_params,The following statement contains a magic number: Assert.AreEqual(9' q.Count);
Magic Number,Flurl.Test.UrlBuilder,UtilityMethodTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UtilityMethodTests.cs,can_encode_and_decode_very_long_value,The following statement contains a magic number: var len = 500000;
Magic Number,Flurl.Test.UrlBuilder,UtilityMethodTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UtilityMethodTests.cs,can_encode_and_decode_very_long_value,The following statement contains a magic number: var s = string.Concat(Enumerable.Repeat("xxxxxxxxx "' len / 10));
Magic Number,Flurl.Test.UrlBuilder,UtilityMethodTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UtilityMethodTests.cs,can_encode_and_decode_very_long_value,The following statement contains a magic number: Assert.AreEqual(len + (2 * len / 10)' encoded.Length);
Magic Number,Flurl.Test.UrlBuilder,UtilityMethodTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UtilityMethodTests.cs,can_encode_and_decode_very_long_value,The following statement contains a magic number: Assert.AreEqual(len + (2 * len / 10)' encoded.Length);
Magic Number,Flurl.Test.UrlBuilder,UtilityMethodTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UtilityMethodTests.cs,can_encode_and_decode_very_long_value,The following statement contains a magic number: var expected = string.Concat(Enumerable.Repeat("xxxxxxxxx%20"' len / 10));
Magic Number,Flurl.Test.UrlBuilder,UtilityMethodTests,D:\research\architectureSmells\repos1\tmenier_Flurl\Test\Flurl.Test\UrlBuilder\UtilityMethodTests.cs,can_encode_and_decode_very_long_value,The following statement contains a magic number: expected = string.Concat(Enumerable.Repeat("xxxxxxxxx+"' len / 10));
