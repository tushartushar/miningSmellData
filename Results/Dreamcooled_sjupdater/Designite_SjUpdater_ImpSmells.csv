Implementation smell,Namespace,Class,File,Method,Description
Long Method,SjUpdater,SjInfo,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\SjInfo.cs,ParseSite,The method has 148 lines of code.
Long Method,SjUpdater.Model,FavShowData,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Model\FavShowData.cs,ApplyFilter,The method has 180 lines of code.
Long Method,SjUpdater.XML,CustomXmlDeserializer,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\XML\CustomXmlDeserializer.cs,DeserializeCore,The method has 170 lines of code.
Complex Method,SjUpdater,MultiDownloadSelectionGrid,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MultiDownloadSelectionGrid.xaml.cs,UpdateAll,Cyclomatic complexity of the method is 11
Complex Method,SjUpdater,Settings,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Settings.cs,Import,Cyclomatic complexity of the method is 10
Complex Method,SjUpdater,SjInfo,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\SjInfo.cs,ParseSite,Cyclomatic complexity of the method is 35
Complex Method,SjUpdater.Model,FavShowData,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Model\FavShowData.cs,Fetch,Cyclomatic complexity of the method is 8
Complex Method,SjUpdater.Model,FavShowData,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Model\FavShowData.cs,ApplyFilter,Cyclomatic complexity of the method is 42
Complex Method,SjUpdater.Updater,Updater,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Updater\Updater.cs,CheckForUpdates,Cyclomatic complexity of the method is 15
Complex Method,SjUpdater.Updater,UpdaterViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Updater\UpdaterViewModel.cs,updater_PropertyChanged,Cyclomatic complexity of the method is 30
Complex Method,SjUpdater.Utils,CachedImage,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\CachedImage.cs,LoadBitmap,Cyclomatic complexity of the method is 12
Complex Method,SjUpdater.Utils,TreeViewExtensions,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\TreeViewExtensions.cs,KeyDown,Cyclomatic complexity of the method is 19
Complex Method,SjUpdater.Utils,TreeViewExtensions,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\TreeViewExtensions.cs,MakeAnchorSelection,Cyclomatic complexity of the method is 8
Complex Method,SjUpdater.ViewModel,MainWindowViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\MainWindowViewModel.cs,update_source,Cyclomatic complexity of the method is 11
Complex Method,SjUpdater.ViewModel,MainWindowViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\MainWindowViewModel.cs,UpdateCategoriesForShow,Cyclomatic complexity of the method is 8
Complex Method,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,_show_PropertyChanged,Cyclomatic complexity of the method is 17
Complex Method,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,Cyclomatic complexity of the method is 13
Complex Method,SjUpdater.XML,CustomXmlDeserializer,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\XML\CustomXmlDeserializer.cs,DeserializeCore,Cyclomatic complexity of the method is 37
Complex Method,SjUpdater.XML,CustomXmlSerializer,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\XML\CustomXmlSerializer.cs,SerializeCore,Cyclomatic complexity of the method is 12
Complex Method,SjUpdater.XML,CustomXmlSerializerBase,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\XML\CustomXmlSerializerBase.cs,GetTypePropertyInfo,Cyclomatic complexity of the method is 9
Long Parameter List,SjUpdater,SjInfo,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\SjInfo.cs,ParseSite,The method has 5 parameters.
Long Parameter List,SjUpdater.Utils,Crc64,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\Crc64.cs,CalculateHash,The method has 5 parameters.
Long Parameter List,SjUpdater.Utils,ThreadPool,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\ThreadPool.cs,QueueWorkItem,The method has 5 parameters.
Long Identifier,SjUpdater,MultiDownloadSelectionGrid,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MultiDownloadSelectionGrid.xaml.cs,EpisodesChanged,The length of the parameter dependencyPropertyChangedEventArgs is 34.
Long Identifier,SjUpdater.Utils,GridViewColumnVisibilityManager,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\GridViewColumnVisibilityManager.cs,OnVisibleChanged,The length of the parameter dependencyPropertyChangedEventArgs is 34.
Long Statement,SjUpdater,MultiDownloadSelectionGrid,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MultiDownloadSelectionGrid.xaml.cs,UpdateAll,The length of the statement  "	//Idea: In the following Loop we create 1 Header instance for ALL Uploads (regardless of the season) which have the same String-Representation " is 142.
Long Statement,SjUpdater,MultiDownloadSelectionGrid,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MultiDownloadSelectionGrid.xaml.cs,UpdateAll,The length of the statement  "			newHeader.Hosters = episodesSorted.SelectMany (e => e.Downloads).Where (d => d.Upload == upload).SelectMany (d => d.Links.Keys).Distinct ().ToList (); " is 150.
Long Statement,SjUpdater,MultiDownloadSelectionGrid,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MultiDownloadSelectionGrid.xaml.cs,UpdateAll,The length of the statement  "			existingHeader.Hosters = episodesSorted.SelectMany (e => e.Downloads).Where (d => d.Upload == upload).SelectMany (d => d.Links.Keys).Union (existingHeader.Hosters).Distinct ().ToList (); " is 186.
Long Statement,SjUpdater,MultiDownloadSelectionGrid,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MultiDownloadSelectionGrid.xaml.cs,UpdateAll,The length of the statement  "		bool singleUpload = (episode.Downloads.Select (d => d.Upload).Distinct ().Select (BuildUploadTitle).Distinct ().Count () == 1); " is 127.
Long Statement,SjUpdater,MultiDownloadSelectionGrid,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MultiDownloadSelectionGrid.xaml.cs,ToggleColumn,The length of the statement  "		bool allChecked = affectedCells.Select (c => c.Entries.ElementAt (entryind)).Where (e => e.Enabled).All (e => e.Checked); " is 121.
Long Statement,SjUpdater,MultiDownloadSelectionGrid,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MultiDownloadSelectionGrid.xaml.cs,ToggleColumn,The length of the statement  "		affectedCells.ForEach (c => c.Entries.ForEach (e => e.Checked = e.Enabled && ((c.Entries.IndexOf (e) == entryind) ^ allChecked))); " is 130.
Long Statement,SjUpdater,MultiDownloadSelectionGrid,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MultiDownloadSelectionGrid.xaml.cs,ToggleColumn,The length of the statement  "		_cells.Where (c => c.Header != header).SelectMany (c => c.Entries).ToList ().ForEach (e => e.Checked = e.Enabled && allChecked); " is 128.
Long Statement,SjUpdater,MultiDownloadSelectionGrid,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MultiDownloadSelectionGrid.xaml.cs,ToggleColumn,The length of the statement  "		var entries = _cells.Where (c => c.Header == header).Select (c => c.Entries.ElementAt (entryind)).Where (ce => ce.Enabled).ToList (); " is 133.
Long Statement,SjUpdater,MultiDownloadSelectionGrid,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MultiDownloadSelectionGrid.xaml.cs,ToggleFullColumn,The length of the statement  "		_cells.Where (c => c.Header != header).SelectMany (c => c.Entries).ToList ().ForEach (e => e.Checked = e.Enabled && allChecked); " is 128.
Long Statement,SjUpdater,MultiDownloadSelectionGrid,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MultiDownloadSelectionGrid.xaml.cs,ToggleRow,The length of the statement  "		_cells.Where (c => !row.Cells.Contains (c)).SelectMany (c => c.Entries).Where (ce => ce.Enabled).ToList ().ForEach (e => e.Checked = allChecked); " is 145.
Long Statement,SjUpdater,MultiDownloadSelectionGrid,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MultiDownloadSelectionGrid.xaml.cs,DownloadButtonClick,The length of the statement  "	_cells.Where (c => c.Entries.Any (e => e.Checked)).Select (c => c.Episode).Distinct ().ToList ().ForEach (e => e.Downloaded = true); " is 132.
Long Statement,SjUpdater,SjInfo,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\SjInfo.cs,CleanText,The length of the statement  "	return new Regex (@"[ ]{2'}"' RegexOptions.None).Replace (stringBuilder.ToString ().Normalize (NormalizationForm.FormC)' @" ").Trim (); " is 135.
Long Statement,SjUpdater,SjInfo,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\SjInfo.cs,SearchSjOrg,The length of the statement  "			resultList.Add (new KeyValuePair<string' string> (WebUtility.HtmlDecode (matches [i].Groups [2].Value)' "http://serienjunkies.org/?cat=" + matches [i].Groups [1].Value)); " is 170.
Long Statement,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,Update,The length of the statement  "					NotifyIcon.ShowCustomBalloon (n' PopupAnimation.Slide' _setti.NotificationTimeout <= 0 ? (int?)null : _setti.NotificationTimeout); " is 130.
Long Statement,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,SearchTextBox_TextChanged,The length of the statement  "		_currentWorkItem = StaticInstance.ThreadPool.QueueWorkItem (UpdateShowSearch' searchString' true' WorkItemPriority.Highest); " is 124.
Long Statement,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,UpdateShowSearch,The length of the statement  "		_currentWorkItem = StaticInstance.ThreadPool.QueueWorkItem (UpdateShowSearch' _nextSearchString' true' WorkItemPriority.Highest); " is 129.
Long Statement,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,ShowDelete,The length of the statement  "	var res = await this.ShowMessageAsync ("Remove Show?"' "Do you really want to remove this show from your favorites?"' MessageDialogStyle.AffirmativeAndNegative' new MetroDialogSettings { " is 186.
Long Statement,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,AddShowViaLink,The length of the statement  "			await this.ShowMessageAsync ("Add show via link"' "Correct link:\nhttp://serienjunkies.org/serie/game-of-thrones/\n\nWrong link:\nhttp://serienjunkies.org/game-of-thrones/game-of-thrones-staffel-5-hdtv-sd720p1080p/\n\n\nYou can find the correct link at the bottom of the page of a season"' MessageDialogStyle.Affirmative' new MetroDialogSettings { " is 347.
Long Statement,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,StatsInfoButtonClicked,The length of the statement  "	this.ShowMessageAsync ("Info about Stats"' Stats.GetInfoForUser ()' MessageDialogStyle.Affirmative' new MetroDialogSettings { " is 125.
Long Statement,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,restartButton_Click,The length of the statement  "	var command = "/C @echo off & for /l %a in (0) do TaskList /FI \"IMAGENAME eq " + exectuable + "\" 2>NUL | Find \"" + exectuable + "\" >NUL || " + //Waits on app termination " is 173.
Long Statement,SjUpdater.Model,FavShowData,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Model\FavShowData.cs,ApplyFilter,The length of the statement  "			currentFavSeason = newSeasons.FirstOrDefault (favSeasonData => favSeasonData.Number == seasonNr) ?? new FavSeasonData () { " is 122.
Long Statement,SjUpdater.Model,FavShowData,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Model\FavShowData.cs,ApplyFilter,The length of the statement  "		if (mts.Count == 1 && mts_ep.Count == 1)//if there is exactly one match for "S<xx>E<yy>" and there is no second "E<zz>" (e.g. S01E01-E12)  " is 137.
Long Statement,SjUpdater.Model,FavShowData,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Model\FavShowData.cs,ApplyFilter,The length of the statement  "					//currentFavEpisode.ReviewInfoReview = SjInfo.ParseSjDeSite(InfoUrl' currentFavEpisode.Season.Number' currentFavEpisode.Number); " is 128.
Long Statement,SjUpdater.Model,FavShowData,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Model\FavShowData.cs,ApplyFilter,The length of the statement  "					currentFavEpisode.EpisodeInformation = ProviderManager.GetProvider ().GetEpisodeInformation (ProviderData' currentFavEpisode.Season.Number' currentFavEpisode.Number); " is 166.
Long Statement,SjUpdater.Model,FavShowData,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Model\FavShowData.cs,ApplyFilter,The length of the statement  "				if (notifications && (oldEpisode == null || (!oldEpisode.NewEpisode && oldEpisode.Downloads.All (d => d.Title != download.Title)))) { " is 133.
Long Statement,SjUpdater.Model,ShowCategory,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Model\ShowCategory.cs,Show_PropertyChanged,The length of the statement  "	if (args.PropertyName == nameof (FavShowData.NextEpisodeDate) || args.PropertyName == nameof (FavShowData.PreviousEpisodeDate)) { " is 129.
Long Statement,SjUpdater.Model,UploadData,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Model\UploadData.cs,Equals,The length of the statement  "	return Uploader == u2.Uploader && Format == u2.Format && Size == u2.Size && Runtime == u2.Runtime && Language == u2.Language && (Season == u2.Season || (Season != null && u2.Season != null && Season.Url == u2.Season.Url)); " is 222.
Long Statement,SjUpdater.Model,UploadData,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Model\UploadData.cs,GetHashCode,The length of the statement  "	return Uploader.GetHashCode () ^ Format.GetHashCode () ^ Size.GetHashCode () ^ Runtime.GetHashCode () ^ Language.GetHashCode () ^ ((Season == null) ? 0 : Season.Url.GetHashCode ()); " is 181.
Long Statement,SjUpdater.Provider,TMDb,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Provider\TMDb.cs,GetShowInformation,The length of the statement  "		Backdrop = String.IsNullOrWhiteSpace (showinfo.BackdropPath) ? null : client.GetImageUrl ("original"' showinfo.BackdropPath).AbsoluteUri' " is 137.
Long Statement,SjUpdater.Provider,TMDb,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Provider\TMDb.cs,GetShowInformation,The length of the statement  "		Poster = String.IsNullOrWhiteSpace (showinfo.PosterPath) ? null : client.GetImageUrl ("original"' showinfo.PosterPath).AbsoluteUri' " is 131.
Long Statement,SjUpdater.Provider,TMDb,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Provider\TMDb.cs,GetSeasonInformation,The length of the statement  "	var seasoninfo = client.GetTvSeason ((int)show' season' withImages ? TvSeasonMethods.Images : TvSeasonMethods.Undefined); " is 121.
Long Statement,SjUpdater.Provider,TMDb,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Provider\TMDb.cs,GetSeasonInformation,The length of the statement  "		Poster = String.IsNullOrWhiteSpace (seasoninfo.PosterPath) ? null : client.GetImageUrl ("original"' seasoninfo.PosterPath).AbsoluteUri' " is 135.
Long Statement,SjUpdater.Provider,TMDb,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Provider\TMDb.cs,GetEpisodeInformation,The length of the statement  "	var episodeinfo = client.GetTvEpisode ((int)show' season' episode' withImages ? TvEpisodeMethods.Images : TvEpisodeMethods.Undefined); " is 134.
Long Statement,SjUpdater.Provider,TMDb,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Provider\TMDb.cs,GetEpisodeInformation,The length of the statement  "		Image = String.IsNullOrWhiteSpace (episodeinfo.StillPath) ? null : client.GetImageUrl ("w600"' episodeinfo.StillPath).AbsoluteUri' " is 130.
Long Statement,SjUpdater.Updater,Updater,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Updater\Updater.cs,DoUpdate,The length of the statement  "			using (FileStream fs = new FileStream (Path.Combine (tempdir' _updatefiles [i].name)' FileMode.Create' FileAccess.Write)) { " is 123.
Long Statement,SjUpdater.Updater,Updater,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Updater\Updater.cs,DoUpdate,The length of the statement  "		string command = "/C @echo off & for /l %a in (0) do TaskList /FI \"IMAGENAME eq " + exectuable + "\" 2>NUL | Find \"" + exectuable + "\" >NUL || " + //Waits on app termination " is 176.
Long Statement,SjUpdater.Updater,Updater,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Updater\Updater.cs,DoUpdate,The length of the statement  "		"(move /Y " + Path.Combine (tempdir' "*.*") + " . && rd /s /q " + tempdir + (restart ? (" && start " + exectuable + " " + parameter) : "") + " & EXIT)"; " is 152.
Long Statement,SjUpdater.Utils,FavIcon,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\FavIcon.cs,GetFromLetters,The length of the statement  "	g.DrawString ("" + value.ToUpper ().First ()' new Font ("Tahoma"' 40' FontStyle.Bold' GraphicsUnit.Pixel)' new SolidBrush (System.Drawing.Color.FromArgb (c.A' c.R' c.G' c.B))' rectf' format); " is 191.
Long Statement,SjUpdater.Utils,FavIcon,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\FavIcon.cs,FindUrl,The length of the statement  "		if (new Regex ("rel\\s*=\\s*['\"][a-z0-9_\\- ]*(icon|shortcut)[a-z0-9_\\- ]*['\"]"' RegexOptions.IgnoreCase).Match (m).Success) { " is 129.
Long Statement,SjUpdater.Utils,FavIcon,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\FavIcon.cs,GetFromUrl,The length of the statement  "	var f = new FileStream (Path.Combine (cachePath' key + url.Substring (url.LastIndexOf ('.')))' FileMode.Create' FileAccess.Write); " is 130.
Long Statement,SjUpdater.Utils,GlobalMutex,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\GlobalMutex.cs,TryGetMutex,The length of the statement  "	string appGuid = ((GuidAttribute)Assembly.GetExecutingAssembly ().GetCustomAttributes (typeof(GuidAttribute)' false).GetValue (0)).Value.ToString (); " is 149.
Long Statement,SjUpdater.Utils,GlobalMutex,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\GlobalMutex.cs,TryGetMutex,The length of the statement  "	var allowEveryoneRule = new MutexAccessRule (new SecurityIdentifier (WellKnownSidType.WorldSid' null)' MutexRights.FullControl' AccessControlType.Allow); " is 153.
Long Statement,SjUpdater.Utils,Stats,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\Stats.cs,getUniqueID,The length of the statement  "	var path = Path.Combine (Environment.GetFolderPath (Environment.SpecialFolder.ApplicationData)' "SjUpdater"' "uid.uid"); " is 120.
Long Statement,SjUpdater.Utils,Stats,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\Stats.cs,GetInfoForUser,The length of the statement  "            sample.Remove(sample.Length - 1' 1);*/sample.Append ("\n\nWe are collecting this data because it's interesting for us seeing how many people we reach and how many have updated to latest version.\n\n" + /*"Even though we collect which shows you have added' we don't analyze that (as it is kind of uselss) and probably remove it next release.\n\n" +*/"Using a ID which is completely randomly generated' it's impossible for us to identify you. We need it to count unique users."); " is 477.
Long Statement,SjUpdater.Utils,ThreadPool,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\ThreadPool.cs,getPool,The length of the statement  "	var pool = _threadPools.FirstOrDefault (p => p.STPStartInfo.ThreadPriority == priority && p.STPStartInfo.WorkItemPriority == itemPriority && p.STPStartInfo.AreThreadsBackground == background); " is 192.
Long Statement,SjUpdater.Utils,TreeViewExtensions,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\TreeViewExtensions.cs,ItemClicked,The length of the statement  "				if((mouseButton == MouseButton.Right) && ((Keyboard.Modifiers & (ModifierKeys.Shift | ModifierKeys.Control)) == ModifierKeys.None))" is 131.
Long Statement,SjUpdater.Utils,TreeViewExtensions,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\TreeViewExtensions.cs,ItemClicked,The length of the statement  "				if((mouseButton == MouseButton.Right) && ((Keyboard.Modifiers & (ModifierKeys.Shift | ModifierKeys.Control)) == ModifierKeys.None))" is 131.
Long Statement,SjUpdater.Utils,TreeViewExtensions,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\TreeViewExtensions.cs,ItemClicked,The length of the statement  "			}*/if ((Keyboard.Modifiers & (ModifierKeys.Shift | ModifierKeys.Control)) != (ModifierKeys.Shift | ModifierKeys.Control)) { " is 123.
Long Statement,SjUpdater.ViewModel,EpisodeViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\EpisodeViewModel.cs,favEpisodeData_PropertyChanged,The length of the statement  "			Photo = (_favEpisodeData.EpisodeInformation == null || string.IsNullOrWhiteSpace (_favEpisodeData.EpisodeInformation.Image)) ? null : new CachedImage (_favEpisodeData.EpisodeInformation.Image); " is 193.
Long Statement,SjUpdater.ViewModel,EpisodeViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\EpisodeViewModel.cs,favEpisodeData_PropertyChanged,The length of the statement  "	} else if (e.PropertyName == nameof (FavEpisodeData.NewEpisode) | e.PropertyName == nameof (FavEpisodeData.NewUpdate)) { " is 120.
Long Statement,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,_show_PropertyChanged,The length of the statement  "		if (String.IsNullOrEmpty (e.PropertyName) || e.PropertyName == nameof (FavShowData.Status) || e.PropertyName.StartsWith ("NextEpisode") || e.PropertyName.StartsWith ("PreviousEpisode") || e.PropertyName == nameof (FavShowData.NewEpisodes) || e.PropertyName == nameof (FavShowData.NewUpdates)) { " is 294.
Long Statement,SjUpdater.XML,CustomXmlDeserializer,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\XML\CustomXmlDeserializer.cs,DeserializeCore,The length of the statement  "				if (objType == typeof(DictionaryEntry) || (objType.IsGenericType && objType.GetGenericTypeDefinition () == typeof(KeyValuePair<' >))) { " is 135.
Long Statement,SjUpdater.XML,CustomXmlSerializerBase,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\XML\CustomXmlSerializerBase.cs,GetTypePropertyInfo,The length of the statement  "		PropertyInfo[] propertyInfos = objType.GetProperties (BindingFlags.Public | BindingFlags.DeclaredOnly | BindingFlags.Instance); " is 127.
Long Statement,SjUpdater.XML,XmlSerialization,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\XML\XmlSerialization.cs,LoadFromXml,The length of the statement  "		T obj = (T)CustomXmlDeserializer.Deserialize (XmlFileReader.ReadXmlFile (filename).OuterXml' maxversion' out actualversion); " is 124.
Complex Conditional,SjUpdater.Model,FavShowData,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Model\FavShowData.cs,ApplyFilter,The conditional expression  "notifications && (oldEpisode == null || (!oldEpisode.NewEpisode && oldEpisode.Downloads.All (d => d.Title != download.Title)))"  is complex.
Complex Conditional,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,_show_PropertyChanged,The conditional expression  "String.IsNullOrEmpty (e.PropertyName) || e.PropertyName == nameof (FavShowData.Status) || e.PropertyName.StartsWith ("NextEpisode") || e.PropertyName.StartsWith ("PreviousEpisode") || e.PropertyName == nameof (FavShowData.NewEpisodes) || e.PropertyName == nameof (FavShowData.NewUpdates)"  is complex.
Complex Conditional,SjUpdater.XML,CustomXmlSerializer,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\XML\CustomXmlSerializer.cs,SerializeCore,The conditional expression  "objType.IsPrimitive || objType == typeof(string) || objType == typeof(DateTime) || objType == typeof(decimal)"  is complex.
Empty Catch Block,SjUpdater,MultiDownloadSelectionGrid,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MultiDownloadSelectionGrid.xaml.cs,DownloadButtonClick,The method has an empty catch block.
Empty Catch Block,SjUpdater.Provider,TMDb,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Provider\TMDb.cs,TMDb,The method has an empty catch block.
Empty Catch Block,SjUpdater.Utils,FavIcon,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\FavIcon.cs,BitmapImageFromStream,The method has an empty catch block.
Empty Catch Block,SjUpdater.Utils,CachedImage,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\CachedImage.cs,LoadBitmap,The method has an empty catch block.
Empty Catch Block,SjUpdater.Utils,CachedImage,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\CachedImage.cs,LoadBitmap,The method has an empty catch block.
Empty Catch Block,SjUpdater.Utils,Stats,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\Stats.cs,TrackAction,The method has an empty catch block.
Empty Catch Block,SjUpdater.Utils,Stats,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\Stats.cs,TrackCustomVariable,The method has an empty catch block.
Empty Catch Block,SjUpdater.Utils,TreeViewExtensions,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\TreeViewExtensions.cs,RealSelectedChanged,The method has an empty catch block.
Empty Catch Block,SjUpdater.ViewModel,EpisodeViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\EpisodeViewModel.cs,EpisodeViewModel,The method has an empty catch block.
Empty Catch Block,SjUpdater.ViewModel,SeasonViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\SeasonViewModel.cs,SeasonViewModel,The method has an empty catch block.
Empty Catch Block,SjUpdater.ViewModel,ShowViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowViewModel.cs,ShowViewModel,The method has an empty catch block.
Magic Number,SjUpdater,MultiDownloadSelectionGrid,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MultiDownloadSelectionGrid.xaml.cs,DownloadButtonClick,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	try {  		Clipboard.SetText (linkstring);  		Clipboard.Flush ();  		return;  	} catch {  		//nah  	}  	Thread.Sleep (10);  }  
Magic Number,SjUpdater,MultiDownloadSelectionGrid,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MultiDownloadSelectionGrid.xaml.cs,DownloadButtonClick,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	try {  		Clipboard.SetText (linkstring);  		Clipboard.Flush ();  		return;  	} catch {  		//nah  	}  	Thread.Sleep (10);  }  
Magic Number,SjUpdater,MultiDownloadSelectionGrid,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MultiDownloadSelectionGrid.xaml.cs,DownloadButtonClick,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,SjUpdater,Settings,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Settings.cs,Settings,The following statement contains a magic number: NumFetchThreads = 5;  
Magic Number,SjUpdater,Settings,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Settings.cs,Settings,The following statement contains a magic number: UpdateTime = 1000 * 60 * 15;  
Magic Number,SjUpdater,Settings,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Settings.cs,Settings,The following statement contains a magic number: UpdateTime = 1000 * 60 * 15;  
Magic Number,SjUpdater,Settings,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Settings.cs,Settings,The following statement contains a magic number: UpdateTime = 1000 * 60 * 15;  
Magic Number,SjUpdater,Settings,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Settings.cs,Settings,The following statement contains a magic number: NotificationTimeout = 10000;  
Magic Number,SjUpdater,SjInfo,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\SjInfo.cs,SearchSjOrg,The following statement contains a magic number: try {  	var data = Encoding.UTF8.GetBytes ("string=" + WebUtility.UrlEncode (title));  	var request = WebRequest.CreateHttp ("http://serienjunkies.org/media/ajax/search/search.php");  	request.AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate;  	request.Method = "POST";  	request.ContentType = "application/x-www-form-urlencoded";  	request.ContentLength = data.Length;  	var requestStream = request.GetRequestStream ();  	requestStream.Write (data' 0' data.Length);  	requestStream.Close ();  	var response = request.GetResponse () as HttpWebResponse;  	var responseReader = new StreamReader (response.GetResponseStream ());  	var responseContent = responseReader.ReadToEnd ();  	responseReader.Close ();  	response.Close ();  	var regex = new Regex (@"\[(\d+)'""(.*?)""\]");  	var matches = regex.Matches (responseContent);  	var resultList = new List<KeyValuePair<string' string>> ();  	for (var i = 0; i < matches.Count; i++) {  		resultList.Add (new KeyValuePair<string' string> (WebUtility.HtmlDecode (matches [i].Groups [2].Value)' "http://serienjunkies.org/?cat=" + matches [i].Groups [1].Value));  	}  	return resultList;  } catch (Exception ex) {  	Console.WriteLine ("Show Search Request failed. No internet connection?\n" + ex.ToString ());  	return new List<KeyValuePair<string' string>> ();  }  
Magic Number,SjUpdater,SjInfo,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\SjInfo.cs,SearchSjOrg,The following statement contains a magic number: for (var i = 0; i < matches.Count; i++) {  	resultList.Add (new KeyValuePair<string' string> (WebUtility.HtmlDecode (matches [i].Groups [2].Value)' "http://serienjunkies.org/?cat=" + matches [i].Groups [1].Value));  }  
Magic Number,SjUpdater,SjInfo,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\SjInfo.cs,SearchSjOrg,The following statement contains a magic number: resultList.Add (new KeyValuePair<string' string> (WebUtility.HtmlDecode (matches [i].Groups [2].Value)' "http://serienjunkies.org/?cat=" + matches [i].Groups [1].Value));  
Magic Number,SjUpdater,SjInfo,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\SjInfo.cs,ParseSite,The following statement contains a magic number: for (int i = 0; i <= 7; i++) {  	try {  		HttpWebRequest req = WebRequest.CreateHttp (url);  		req.AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate;  		req.KeepAlive = false;  		resp = req.GetResponse ();  		break;  	} catch (WebException ex) {  		if (ex.Status != WebExceptionStatus.Timeout)  			throw;  	}  }  
Magic Number,SjUpdater,SjInfo,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\SjInfo.cs,ParseSite,The following statement contains a magic number: foreach (var post in posts) {  	//--------------Season Title-----------------------------------  	var title = post.SelectSingleNode ("h2/a[@href]");  	if (title == null) {  		Console.WriteLine ("SjInfo Parser: No Title");  		continue;  	}  	var seasonData = new SeasonData ();  	seasonData.Show = showData;  	seasonData.Url = title.GetAttributeValue ("href"' null);  	seasonData.Title = WebUtility.HtmlDecode (title.InnerText);  	var postContent = post.SelectSingleNode ("div[@class='post-content']");  	if (postContent == null) {  		Console.WriteLine ("SjInfo Parser: No Post content");  		continue;  	}  	//----------------Season Cover------------------------------------------------  	var cover = postContent.SelectSingleNode (".//p/img[@src]");  	if (cover != null) {  		seasonData.CoverUrl = cover.GetAttributeValue ("src"' null);  		if (String.IsNullOrEmpty (firstcover)) {  			firstcover = seasonData.CoverUrl;  		}  	}  	//----------------Season description-----------------------------------------  	var desc = postContent.SelectSingleNode (".//p[count(node())=1][not(@class='post-info-co')]/text()");  	if (desc != null) {  		seasonData.Description = WebUtility.HtmlDecode (desc.InnerText);  	}  	UploadData uploadData = null;  	var ps = postContent.SelectNodes (".//node()[self::p|self::div][count(strong)>=2]");  	if (ps == null) {  		Console.WriteLine ("SjInfo Parser: no uploads/headers");  		continue;  	}  	foreach (var p in ps) {  		//--------------- Upload Header ------------------------------  		if (p.SelectSingleNode ("self::node()[not(./a[@target])]") != null) {  			uploadData = new UploadData ();  			uploadData.Season = seasonData;  			String c = WebUtility.HtmlDecode (p.InnerHtml);  			MatchCollection mc = new Regex ("<strong>\\s*(.+?)\\s*</strong>\\s*(.+?)\\s*(?:\\||$)").Matches (c);  			foreach (Match match in mc) {  				String key = match.Groups [1].Value.ToLower ();  				String value = match.Groups [2].Value;  				if (key.Contains ("dauer") || key.Contains ("runtime") || key.Contains ("duration")) {  					uploadData.Runtime = value;  				} else if (key.Contains ("grösse") || key.Contains ("größe") || key.Contains ("size")) {  					uploadData.Size = value;  				} else if (key.Contains ("uploader")) {  					uploadData.Uploader = value;  				} else if (key.Contains ("format")) {  					uploadData.Format = value;  				} else if (key.Contains ("sprache") || key.Contains ("language")) {  					value = value.ToLower ();  					if (value.Contains ("deutsch") || value.Contains ("german")) {  						uploadData.Language |= UploadLanguage.German;  					}  					if (value.Contains ("englisch") || value.Contains ("english")) {  						uploadData.Language |= UploadLanguage.English;  					}  					if (value.Contains ("subbed")) {  						uploadData.Subbed = true;  					}  				}  			}  		} else if (uploadData != null) {  			// ------------------ Links -------------------------  			var ulTitle = p.SelectSingleNode ("strong[position()=1][count(node())=1]/text()");  			if (ulTitle == null) {  				Console.WriteLine ("SjInfo Parser: No title for link? " + p.InnerHtml);  				continue;  			}  			string titleStr = WebUtility.HtmlDecode (ulTitle.InnerText).Trim ();  			var links = p.SelectNodes ("a[@href][following-sibling::text()]");  			if (links == null)  				continue;  			var downloads = new Dictionary<string' string> ();  			foreach (var link in links) {  				string ur = link.GetAttributeValue ("href"' null);  				string keyOrg = WebUtility.HtmlDecode (link.NextSibling.InnerText.Trim ());  				if (keyOrg.StartsWith ("|"))  					keyOrg = keyOrg.Substring (1).Trim ();  				String key = keyOrg;  				int i = 1;  				while (downloads.ContainsKey (key)) {  					key = keyOrg + "(" + i++ + ")";  				}  				downloads.Add (key' ur);  			}  			if (titleStr.Contains ("720p")) {  				uploadData.Format = "720p";  			} else if (titleStr.Contains ("1080p")) {  				uploadData.Format = "1080p";  			} else if (titleStr.Contains ("720i")) {  				uploadData.Format = "720i";  			} else if (titleStr.Contains ("1080i")) {  				uploadData.Format = "1080i";  			}  			DownloadData dd = new DownloadData ();  			dd.Upload = uploadCache == null ? uploadData : uploadCache.GetUniqueUploadData (uploadData);  			dd.Title = titleStr;  			if (titleStr.ToLower ().Contains ("subbed")) {  				dd.Upload.Subbed = true;  			}  			foreach (var download in downloads) {  				dd.Links.Add (download.Key' download.Value);  			}  			list.Add (dd);  		} else {  			Console.WriteLine ("SjInfo Parser: UploadData was null");  		}  	}  }  
Magic Number,SjUpdater,SjInfo,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\SjInfo.cs,ParseSite,The following statement contains a magic number: foreach (var p in ps) {  	//--------------- Upload Header ------------------------------  	if (p.SelectSingleNode ("self::node()[not(./a[@target])]") != null) {  		uploadData = new UploadData ();  		uploadData.Season = seasonData;  		String c = WebUtility.HtmlDecode (p.InnerHtml);  		MatchCollection mc = new Regex ("<strong>\\s*(.+?)\\s*</strong>\\s*(.+?)\\s*(?:\\||$)").Matches (c);  		foreach (Match match in mc) {  			String key = match.Groups [1].Value.ToLower ();  			String value = match.Groups [2].Value;  			if (key.Contains ("dauer") || key.Contains ("runtime") || key.Contains ("duration")) {  				uploadData.Runtime = value;  			} else if (key.Contains ("grösse") || key.Contains ("größe") || key.Contains ("size")) {  				uploadData.Size = value;  			} else if (key.Contains ("uploader")) {  				uploadData.Uploader = value;  			} else if (key.Contains ("format")) {  				uploadData.Format = value;  			} else if (key.Contains ("sprache") || key.Contains ("language")) {  				value = value.ToLower ();  				if (value.Contains ("deutsch") || value.Contains ("german")) {  					uploadData.Language |= UploadLanguage.German;  				}  				if (value.Contains ("englisch") || value.Contains ("english")) {  					uploadData.Language |= UploadLanguage.English;  				}  				if (value.Contains ("subbed")) {  					uploadData.Subbed = true;  				}  			}  		}  	} else if (uploadData != null) {  		// ------------------ Links -------------------------  		var ulTitle = p.SelectSingleNode ("strong[position()=1][count(node())=1]/text()");  		if (ulTitle == null) {  			Console.WriteLine ("SjInfo Parser: No title for link? " + p.InnerHtml);  			continue;  		}  		string titleStr = WebUtility.HtmlDecode (ulTitle.InnerText).Trim ();  		var links = p.SelectNodes ("a[@href][following-sibling::text()]");  		if (links == null)  			continue;  		var downloads = new Dictionary<string' string> ();  		foreach (var link in links) {  			string ur = link.GetAttributeValue ("href"' null);  			string keyOrg = WebUtility.HtmlDecode (link.NextSibling.InnerText.Trim ());  			if (keyOrg.StartsWith ("|"))  				keyOrg = keyOrg.Substring (1).Trim ();  			String key = keyOrg;  			int i = 1;  			while (downloads.ContainsKey (key)) {  				key = keyOrg + "(" + i++ + ")";  			}  			downloads.Add (key' ur);  		}  		if (titleStr.Contains ("720p")) {  			uploadData.Format = "720p";  		} else if (titleStr.Contains ("1080p")) {  			uploadData.Format = "1080p";  		} else if (titleStr.Contains ("720i")) {  			uploadData.Format = "720i";  		} else if (titleStr.Contains ("1080i")) {  			uploadData.Format = "1080i";  		}  		DownloadData dd = new DownloadData ();  		dd.Upload = uploadCache == null ? uploadData : uploadCache.GetUniqueUploadData (uploadData);  		dd.Title = titleStr;  		if (titleStr.ToLower ().Contains ("subbed")) {  			dd.Upload.Subbed = true;  		}  		foreach (var download in downloads) {  			dd.Links.Add (download.Key' download.Value);  		}  		list.Add (dd);  	} else {  		Console.WriteLine ("SjInfo Parser: UploadData was null");  	}  }  
Magic Number,SjUpdater,SjInfo,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\SjInfo.cs,ParseSite,The following statement contains a magic number: if (p.SelectSingleNode ("self::node()[not(./a[@target])]") != null) {  	uploadData = new UploadData ();  	uploadData.Season = seasonData;  	String c = WebUtility.HtmlDecode (p.InnerHtml);  	MatchCollection mc = new Regex ("<strong>\\s*(.+?)\\s*</strong>\\s*(.+?)\\s*(?:\\||$)").Matches (c);  	foreach (Match match in mc) {  		String key = match.Groups [1].Value.ToLower ();  		String value = match.Groups [2].Value;  		if (key.Contains ("dauer") || key.Contains ("runtime") || key.Contains ("duration")) {  			uploadData.Runtime = value;  		} else if (key.Contains ("grösse") || key.Contains ("größe") || key.Contains ("size")) {  			uploadData.Size = value;  		} else if (key.Contains ("uploader")) {  			uploadData.Uploader = value;  		} else if (key.Contains ("format")) {  			uploadData.Format = value;  		} else if (key.Contains ("sprache") || key.Contains ("language")) {  			value = value.ToLower ();  			if (value.Contains ("deutsch") || value.Contains ("german")) {  				uploadData.Language |= UploadLanguage.German;  			}  			if (value.Contains ("englisch") || value.Contains ("english")) {  				uploadData.Language |= UploadLanguage.English;  			}  			if (value.Contains ("subbed")) {  				uploadData.Subbed = true;  			}  		}  	}  } else if (uploadData != null) {  	// ------------------ Links -------------------------  	var ulTitle = p.SelectSingleNode ("strong[position()=1][count(node())=1]/text()");  	if (ulTitle == null) {  		Console.WriteLine ("SjInfo Parser: No title for link? " + p.InnerHtml);  		continue;  	}  	string titleStr = WebUtility.HtmlDecode (ulTitle.InnerText).Trim ();  	var links = p.SelectNodes ("a[@href][following-sibling::text()]");  	if (links == null)  		continue;  	var downloads = new Dictionary<string' string> ();  	foreach (var link in links) {  		string ur = link.GetAttributeValue ("href"' null);  		string keyOrg = WebUtility.HtmlDecode (link.NextSibling.InnerText.Trim ());  		if (keyOrg.StartsWith ("|"))  			keyOrg = keyOrg.Substring (1).Trim ();  		String key = keyOrg;  		int i = 1;  		while (downloads.ContainsKey (key)) {  			key = keyOrg + "(" + i++ + ")";  		}  		downloads.Add (key' ur);  	}  	if (titleStr.Contains ("720p")) {  		uploadData.Format = "720p";  	} else if (titleStr.Contains ("1080p")) {  		uploadData.Format = "1080p";  	} else if (titleStr.Contains ("720i")) {  		uploadData.Format = "720i";  	} else if (titleStr.Contains ("1080i")) {  		uploadData.Format = "1080i";  	}  	DownloadData dd = new DownloadData ();  	dd.Upload = uploadCache == null ? uploadData : uploadCache.GetUniqueUploadData (uploadData);  	dd.Title = titleStr;  	if (titleStr.ToLower ().Contains ("subbed")) {  		dd.Upload.Subbed = true;  	}  	foreach (var download in downloads) {  		dd.Links.Add (download.Key' download.Value);  	}  	list.Add (dd);  } else {  	Console.WriteLine ("SjInfo Parser: UploadData was null");  }  
Magic Number,SjUpdater,SjInfo,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\SjInfo.cs,ParseSite,The following statement contains a magic number: foreach (Match match in mc) {  	String key = match.Groups [1].Value.ToLower ();  	String value = match.Groups [2].Value;  	if (key.Contains ("dauer") || key.Contains ("runtime") || key.Contains ("duration")) {  		uploadData.Runtime = value;  	} else if (key.Contains ("grösse") || key.Contains ("größe") || key.Contains ("size")) {  		uploadData.Size = value;  	} else if (key.Contains ("uploader")) {  		uploadData.Uploader = value;  	} else if (key.Contains ("format")) {  		uploadData.Format = value;  	} else if (key.Contains ("sprache") || key.Contains ("language")) {  		value = value.ToLower ();  		if (value.Contains ("deutsch") || value.Contains ("german")) {  			uploadData.Language |= UploadLanguage.German;  		}  		if (value.Contains ("englisch") || value.Contains ("english")) {  			uploadData.Language |= UploadLanguage.English;  		}  		if (value.Contains ("subbed")) {  			uploadData.Subbed = true;  		}  	}  }  
Magic Number,SjUpdater,App,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\App.xaml.cs,OnStartup,The following statement contains a magic number: ServicePointManager.DefaultConnectionLimit = 25;  
Magic Number,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: if (_setti.CheckForUpdates) {  	_updater.Show (false' true);  	_updateTimer = new Timer (1000 * 60 * 30);  	// 30 minutes  	_updateTimer.Elapsed += (o' args) => Dispatcher.Invoke (() => _updater.Show (false' true));  	_updateTimer.Start ();  }  
Magic Number,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: if (_setti.CheckForUpdates) {  	_updater.Show (false' true);  	_updateTimer = new Timer (1000 * 60 * 30);  	// 30 minutes  	_updateTimer.Elapsed += (o' args) => Dispatcher.Invoke (() => _updater.Show (false' true));  	_updateTimer.Start ();  }  
Magic Number,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: if (_setti.CheckForUpdates) {  	_updater.Show (false' true);  	_updateTimer = new Timer (1000 * 60 * 30);  	// 30 minutes  	_updateTimer.Elapsed += (o' args) => Dispatcher.Invoke (() => _updater.Show (false' true));  	_updateTimer.Start ();  }  
Magic Number,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: _updateTimer = new Timer (1000 * 60 * 30);  
Magic Number,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: _updateTimer = new Timer (1000 * 60 * 30);  
Magic Number,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: _updateTimer = new Timer (1000 * 60 * 30);  
Magic Number,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,Update,The following statement contains a magic number: if (!_sema.WaitOne (10))  	return;  
Magic Number,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,SettingsClicked,The following statement contains a magic number: if (CurrentPage () == 2) {  	SwitchPage (_lastpage);  	return;  }  
Magic Number,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,SettingsClicked,The following statement contains a magic number: SwitchPage (2);  
Magic Number,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,_selectedEpisodeTreeItems_CollectionChanged,The following statement contains a magic number: if (_selectedEpisodeTreeItems.Count == 1 && first is SeasonViewModel) {  	EpisodeTabControl_Season.DataContext = first;  	EpisodeTabControl.SelectedIndex = 1;  } else if (_selectedEpisodeTreeItems.Count == 1 && first is EpisodeViewModel) {  	var vm = (first as EpisodeViewModel);  	vm.Episode.NewEpisode = false;  	vm.Episode.NewUpdate = false;  	EpisodeTabControl_Episode.DataContext = first;  	EpisodeTabControl.SelectedIndex = 2;  } else if (!_selectedEpisodeTreeItems.Any ()) {  	EpisodeTabControl_Episode.DataContext = _selectedEpisodeTreeItems;  	EpisodeTabControl.SelectedIndex = 0;  } else {  	var selectedEpisodes = _selectedEpisodeTreeItems.OfType<EpisodeViewModel> ().Select (ev => ev.Episode).ToList ();  	_multiSelectionViewModel.SelectedEpisodes = selectedEpisodes;  	EpisodeTabControl_Multi.DataContext = _multiSelectionViewModel;  	EpisodeTabControl.SelectedIndex = 3;  }  
Magic Number,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,_selectedEpisodeTreeItems_CollectionChanged,The following statement contains a magic number: if (_selectedEpisodeTreeItems.Count == 1 && first is SeasonViewModel) {  	EpisodeTabControl_Season.DataContext = first;  	EpisodeTabControl.SelectedIndex = 1;  } else if (_selectedEpisodeTreeItems.Count == 1 && first is EpisodeViewModel) {  	var vm = (first as EpisodeViewModel);  	vm.Episode.NewEpisode = false;  	vm.Episode.NewUpdate = false;  	EpisodeTabControl_Episode.DataContext = first;  	EpisodeTabControl.SelectedIndex = 2;  } else if (!_selectedEpisodeTreeItems.Any ()) {  	EpisodeTabControl_Episode.DataContext = _selectedEpisodeTreeItems;  	EpisodeTabControl.SelectedIndex = 0;  } else {  	var selectedEpisodes = _selectedEpisodeTreeItems.OfType<EpisodeViewModel> ().Select (ev => ev.Episode).ToList ();  	_multiSelectionViewModel.SelectedEpisodes = selectedEpisodes;  	EpisodeTabControl_Multi.DataContext = _multiSelectionViewModel;  	EpisodeTabControl.SelectedIndex = 3;  }  
Magic Number,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,_selectedEpisodeTreeItems_CollectionChanged,The following statement contains a magic number: if (_selectedEpisodeTreeItems.Count == 1 && first is EpisodeViewModel) {  	var vm = (first as EpisodeViewModel);  	vm.Episode.NewEpisode = false;  	vm.Episode.NewUpdate = false;  	EpisodeTabControl_Episode.DataContext = first;  	EpisodeTabControl.SelectedIndex = 2;  } else if (!_selectedEpisodeTreeItems.Any ()) {  	EpisodeTabControl_Episode.DataContext = _selectedEpisodeTreeItems;  	EpisodeTabControl.SelectedIndex = 0;  } else {  	var selectedEpisodes = _selectedEpisodeTreeItems.OfType<EpisodeViewModel> ().Select (ev => ev.Episode).ToList ();  	_multiSelectionViewModel.SelectedEpisodes = selectedEpisodes;  	EpisodeTabControl_Multi.DataContext = _multiSelectionViewModel;  	EpisodeTabControl.SelectedIndex = 3;  }  
Magic Number,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,_selectedEpisodeTreeItems_CollectionChanged,The following statement contains a magic number: if (_selectedEpisodeTreeItems.Count == 1 && first is EpisodeViewModel) {  	var vm = (first as EpisodeViewModel);  	vm.Episode.NewEpisode = false;  	vm.Episode.NewUpdate = false;  	EpisodeTabControl_Episode.DataContext = first;  	EpisodeTabControl.SelectedIndex = 2;  } else if (!_selectedEpisodeTreeItems.Any ()) {  	EpisodeTabControl_Episode.DataContext = _selectedEpisodeTreeItems;  	EpisodeTabControl.SelectedIndex = 0;  } else {  	var selectedEpisodes = _selectedEpisodeTreeItems.OfType<EpisodeViewModel> ().Select (ev => ev.Episode).ToList ();  	_multiSelectionViewModel.SelectedEpisodes = selectedEpisodes;  	EpisodeTabControl_Multi.DataContext = _multiSelectionViewModel;  	EpisodeTabControl.SelectedIndex = 3;  }  
Magic Number,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,_selectedEpisodeTreeItems_CollectionChanged,The following statement contains a magic number: EpisodeTabControl.SelectedIndex = 2;  
Magic Number,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,_selectedEpisodeTreeItems_CollectionChanged,The following statement contains a magic number: if (!_selectedEpisodeTreeItems.Any ()) {  	EpisodeTabControl_Episode.DataContext = _selectedEpisodeTreeItems;  	EpisodeTabControl.SelectedIndex = 0;  } else {  	var selectedEpisodes = _selectedEpisodeTreeItems.OfType<EpisodeViewModel> ().Select (ev => ev.Episode).ToList ();  	_multiSelectionViewModel.SelectedEpisodes = selectedEpisodes;  	EpisodeTabControl_Multi.DataContext = _multiSelectionViewModel;  	EpisodeTabControl.SelectedIndex = 3;  }  
Magic Number,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,_selectedEpisodeTreeItems_CollectionChanged,The following statement contains a magic number: EpisodeTabControl.SelectedIndex = 3;  
Magic Number,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,NavBack,The following statement contains a magic number: switch (CurrentPage ()) {  case 1:  	EpisodesBack (this' new RoutedEventArgs ());  	break;  case 2:  	SwitchPage (_lastpage);  	break;  }  
Magic Number,SjUpdater.Updater,Updater,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Updater\Updater.cs,DoUpdate,The following statement contains a magic number: try {  	if (_updatefiles.Length == 0)  		return;  	string tempdir = (Path.GetRandomFileName () + Path.GetRandomFileName ()).Replace ("."' "");  	Directory.CreateDirectory (tempdir);  	NumFiles = _updatefiles.Length;  	int lengthsum = 0;  	for (int i = 0; i < _updatefiles.Length; i++) {  		lengthsum += _updatefiles [i].length;  	}  	TotalBytes = lengthsum;  	int bytesCounter = 0;  	for (int i = 0; i < _updatefiles.Length; i++) {  		CurrentFileNum = i + 1;  		CurrentFilename = _updatefiles [i].name;  		using (FileStream fs = new FileStream (Path.Combine (tempdir' _updatefiles [i].name)' FileMode.Create' FileAccess.Write)) {  			HttpWebRequest request = WebRequest.CreateHttp (_baseurl + _updatefiles [i].name);  			request.AllowAutoRedirect = true;  			HttpWebResponse response = await request.GetResponseAsync () as HttpWebResponse;  			Stream responseStream = response.GetResponseStream ();  			CurrentFileBytes = (int)response.ContentLength;  			var buffer = new byte[1024];  			var bytesread = 0;  			while (fs.Position < response.ContentLength) {  				bytesread = await responseStream.ReadAsync (buffer' 0' buffer.Length);  				await fs.WriteAsync (buffer' 0' bytesread);  				CurrentFileBytesDownloaded = (int)fs.Position;  				TotalBytesDownloaded = bytesCounter + CurrentFileBytesDownloaded;  			}  		}  		bytesCounter += CurrentFileBytes;  	}  	string command = "/C @echo off & for /l %a in (0) do TaskList /FI \"IMAGENAME eq " + exectuable + "\" 2>NUL | Find \"" + exectuable + "\" >NUL || " + //Waits on app termination  	"(move /Y " + Path.Combine (tempdir' "*.*") + " . && rd /s /q " + tempdir + (restart ? (" && start " + exectuable + " " + parameter) : "") + " & EXIT)";  	//actual update  	ProcessStartInfo psi = new ProcessStartInfo ("cmd.exe"' command);  	psi.CreateNoWindow = true;  	psi.UseShellExecute = false;  	psi.WorkingDirectory = Path.GetDirectoryName (Assembly.GetExecutingAssembly ().Location);  	Process cmd = new Process ();  	cmd.StartInfo = psi;  	cmd.Start ();  	Environment.Exit (0);  } catch (Exception e) {  	if (errorEvent != null)  		errorEvent (this' new ErrorEventArgs (e));  }  
Magic Number,SjUpdater.Updater,Updater,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Updater\Updater.cs,DoUpdate,The following statement contains a magic number: for (int i = 0; i < _updatefiles.Length; i++) {  	CurrentFileNum = i + 1;  	CurrentFilename = _updatefiles [i].name;  	using (FileStream fs = new FileStream (Path.Combine (tempdir' _updatefiles [i].name)' FileMode.Create' FileAccess.Write)) {  		HttpWebRequest request = WebRequest.CreateHttp (_baseurl + _updatefiles [i].name);  		request.AllowAutoRedirect = true;  		HttpWebResponse response = await request.GetResponseAsync () as HttpWebResponse;  		Stream responseStream = response.GetResponseStream ();  		CurrentFileBytes = (int)response.ContentLength;  		var buffer = new byte[1024];  		var bytesread = 0;  		while (fs.Position < response.ContentLength) {  			bytesread = await responseStream.ReadAsync (buffer' 0' buffer.Length);  			await fs.WriteAsync (buffer' 0' bytesread);  			CurrentFileBytesDownloaded = (int)fs.Position;  			TotalBytesDownloaded = bytesCounter + CurrentFileBytesDownloaded;  		}  	}  	bytesCounter += CurrentFileBytes;  }  
Magic Number,SjUpdater.Updater,Updater,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Updater\Updater.cs,DoUpdate,The following statement contains a magic number: using (FileStream fs = new FileStream (Path.Combine (tempdir' _updatefiles [i].name)' FileMode.Create' FileAccess.Write)) {  	HttpWebRequest request = WebRequest.CreateHttp (_baseurl + _updatefiles [i].name);  	request.AllowAutoRedirect = true;  	HttpWebResponse response = await request.GetResponseAsync () as HttpWebResponse;  	Stream responseStream = response.GetResponseStream ();  	CurrentFileBytes = (int)response.ContentLength;  	var buffer = new byte[1024];  	var bytesread = 0;  	while (fs.Position < response.ContentLength) {  		bytesread = await responseStream.ReadAsync (buffer' 0' buffer.Length);  		await fs.WriteAsync (buffer' 0' bytesread);  		CurrentFileBytesDownloaded = (int)fs.Position;  		TotalBytesDownloaded = bytesCounter + CurrentFileBytesDownloaded;  	}  }  
Magic Number,SjUpdater.Updater,UpdaterViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Updater\UpdaterViewModel.cs,ReadableFileSize,The following statement contains a magic number: while (size >= 1000) {  	size /= 1000;  	++unit;  }  
Magic Number,SjUpdater.Updater,UpdaterViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Updater\UpdaterViewModel.cs,ReadableFileSize,The following statement contains a magic number: while (size >= 1000) {  	size /= 1000;  	++unit;  }  
Magic Number,SjUpdater.Updater,UpdaterViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Updater\UpdaterViewModel.cs,ReadableFileSize,The following statement contains a magic number: size /= 1000;  
Magic Number,SjUpdater.Utils,Crc64,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\Crc64.cs,CalculateHash,The following statement contains a magic number: for (var i = start; i < size; i++)  	unchecked {  		crc = (crc >> 8) ^ table [(buffer [i] ^ crc) & 0xff];  	}  
Magic Number,SjUpdater.Utils,Crc64,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\Crc64.cs,CalculateHash,The following statement contains a magic number: unchecked {  	crc = (crc >> 8) ^ table [(buffer [i] ^ crc) & 0xff];  }  
Magic Number,SjUpdater.Utils,Crc64,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\Crc64.cs,CalculateHash,The following statement contains a magic number: crc = (crc >> 8) ^ table [(buffer [i] ^ crc) & 0xff];  
Magic Number,SjUpdater.Utils,Crc64,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\Crc64.cs,CreateTable,The following statement contains a magic number: for (var i = 0; i < 256; ++i) {  	var entry = (ulong)i;  	for (var j = 0; j < 8; ++j)  		if ((entry & 1) == 1)  			entry = (entry >> 1) ^ polynomial;  		else  			entry = entry >> 1;  	createTable [i] = entry;  }  
Magic Number,SjUpdater.Utils,Crc64,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\Crc64.cs,CreateTable,The following statement contains a magic number: for (var i = 0; i < 256; ++i) {  	var entry = (ulong)i;  	for (var j = 0; j < 8; ++j)  		if ((entry & 1) == 1)  			entry = (entry >> 1) ^ polynomial;  		else  			entry = entry >> 1;  	createTable [i] = entry;  }  
Magic Number,SjUpdater.Utils,Crc64,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\Crc64.cs,CreateTable,The following statement contains a magic number: for (var j = 0; j < 8; ++j)  	if ((entry & 1) == 1)  		entry = (entry >> 1) ^ polynomial;  	else  		entry = entry >> 1;  
Magic Number,SjUpdater.Utils,FavIcon,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\FavIcon.cs,GetFromLetters,The following statement contains a magic number: g.DrawString ("" + value.ToUpper ().First ()' new Font ("Tahoma"' 40' FontStyle.Bold' GraphicsUnit.Pixel)' new SolidBrush (System.Drawing.Color.FromArgb (c.A' c.R' c.G' c.B))' rectf' format);  
Magic Number,SjUpdater.Utils,GlobalMutex,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\GlobalMutex.cs,TryGetMutex,The following statement contains a magic number: try {  	try {  		// note' you may want to time out here instead of waiting forever  		// edited by acidzombie24  		// mutex.WaitOne(Timeout.Infinite' false);  		hasHandle = mutex.WaitOne (5000' false);  		if (hasHandle == false)  			throw new TimeoutException ("Timeout waiting for exclusive access");  	} catch (AbandonedMutexException) {  		// Log the fact the mutex was abandoned in another process' it will still get aquired  		hasHandle = true;  	}  	return true;  } catch {  	return false;  }  
Magic Number,SjUpdater.Utils,GlobalMutex,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\GlobalMutex.cs,TryGetMutex,The following statement contains a magic number: try {  	// note' you may want to time out here instead of waiting forever  	// edited by acidzombie24  	// mutex.WaitOne(Timeout.Infinite' false);  	hasHandle = mutex.WaitOne (5000' false);  	if (hasHandle == false)  		throw new TimeoutException ("Timeout waiting for exclusive access");  } catch (AbandonedMutexException) {  	// Log the fact the mutex was abandoned in another process' it will still get aquired  	hasHandle = true;  }  
Magic Number,SjUpdater.Utils,GlobalMutex,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\GlobalMutex.cs,TryGetMutex,The following statement contains a magic number: hasHandle = mutex.WaitOne (5000' false);  
Magic Number,SjUpdater.Utils,Stats,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\Stats.cs,getUniqueID,The following statement contains a magic number: if (!File.Exists (path) || File.ReadAllText (path).Length != 16) {  	var random = new RNGCryptoServiceProvider ();  	var data = new byte[8];  	random.GetBytes (data);  	var uid = BitConverter.ToString (data).ToLower ().Replace ("-"' "");  	File.WriteAllText (path' uid);  }  
Magic Number,SjUpdater.Utils,Stats,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\Stats.cs,getUniqueID,The following statement contains a magic number: if (!File.Exists (path) || File.ReadAllText (path).Length != 16) {  	var random = new RNGCryptoServiceProvider ();  	var data = new byte[8];  	random.GetBytes (data);  	var uid = BitConverter.ToString (data).ToLower ().Replace ("-"' "");  	File.WriteAllText (path' uid);  }  
Magic Number,SjUpdater.Utils,TreeViewExtensions,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\TreeViewExtensions.cs,MakeAnchorSelection,The following statement contains a magic number: if (GetAnchorItem (tree) == null) {  	var selectedItems = GetSelectedTreeViewItems (tree);  	if (selectedItems.Count > 0) {  		SetAnchorItem (tree' selectedItems [selectedItems.Count - 1]);  	} else {  		SetAnchorItem (tree' GetTreeViewItems (tree).Skip (3).FirstOrDefault ());  	}  	if (GetAnchorItem (tree) == null) {  		return;  	}  }  
Magic Number,SjUpdater.Utils,TreeViewExtensions,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\TreeViewExtensions.cs,MakeAnchorSelection,The following statement contains a magic number: if (selectedItems.Count > 0) {  	SetAnchorItem (tree' selectedItems [selectedItems.Count - 1]);  } else {  	SetAnchorItem (tree' GetTreeViewItems (tree).Skip (3).FirstOrDefault ());  }  
Magic Number,SjUpdater.Utils,TreeViewExtensions,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\TreeViewExtensions.cs,MakeAnchorSelection,The following statement contains a magic number: SetAnchorItem (tree' GetTreeViewItems (tree).Skip (3).FirstOrDefault ());  
Magic Number,SjUpdater.ViewModel,EpisodeViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\EpisodeViewModel.cs,EpisodeViewModel,The following statement contains a magic number: DownloadCommand = new SimpleCommand<object' String> (s => {  	_favEpisodeData.Downloaded = true;  	for (int i = 0; i < 10; i++) {  		try {  			Clipboard.SetText (s);  			Clipboard.Flush ();  			return;  		} catch {  			//nah  		}  		Thread.Sleep (10);  	}  	MessageBox.Show ("Couldn't Copy link to clipboard.\n" + s);  });  
Magic Number,SjUpdater.ViewModel,EpisodeViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\EpisodeViewModel.cs,EpisodeViewModel,The following statement contains a magic number: DownloadCommand = new SimpleCommand<object' String> (s => {  	_favEpisodeData.Downloaded = true;  	for (int i = 0; i < 10; i++) {  		try {  			Clipboard.SetText (s);  			Clipboard.Flush ();  			return;  		} catch {  			//nah  		}  		Thread.Sleep (10);  	}  	MessageBox.Show ("Couldn't Copy link to clipboard.\n" + s);  });  
Magic Number,SjUpdater.ViewModel,EpisodeViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\EpisodeViewModel.cs,EpisodeViewModel,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	try {  		Clipboard.SetText (s);  		Clipboard.Flush ();  		return;  	} catch {  		//nah  	}  	Thread.Sleep (10);  }  
Magic Number,SjUpdater.ViewModel,EpisodeViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\EpisodeViewModel.cs,EpisodeViewModel,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	try {  		Clipboard.SetText (s);  		Clipboard.Flush ();  		return;  	} catch {  		//nah  	}  	Thread.Sleep (10);  }  
Magic Number,SjUpdater.ViewModel,EpisodeViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\EpisodeViewModel.cs,EpisodeViewModel,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,SjUpdater.ViewModel,SeasonViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\SeasonViewModel.cs,SeasonViewModel,The following statement contains a magic number: DownloadCommand = new SimpleCommand<object' String> (s => {  	for (int i = 0; i < 10; i++) {  		try {  			Clipboard.SetText (s);  			Clipboard.Flush ();  			return;  		} catch {  			//nah  		}  		Thread.Sleep (10);  	}  	MessageBox.Show ("Couldn't Copy link to clipboard.\n" + s);  });  
Magic Number,SjUpdater.ViewModel,SeasonViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\SeasonViewModel.cs,SeasonViewModel,The following statement contains a magic number: DownloadCommand = new SimpleCommand<object' String> (s => {  	for (int i = 0; i < 10; i++) {  		try {  			Clipboard.SetText (s);  			Clipboard.Flush ();  			return;  		} catch {  			//nah  		}  		Thread.Sleep (10);  	}  	MessageBox.Show ("Couldn't Copy link to clipboard.\n" + s);  });  
Magic Number,SjUpdater.ViewModel,SeasonViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\SeasonViewModel.cs,SeasonViewModel,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	try {  		Clipboard.SetText (s);  		Clipboard.Flush ();  		return;  	} catch {  		//nah  	}  	Thread.Sleep (10);  }  
Magic Number,SjUpdater.ViewModel,SeasonViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\SeasonViewModel.cs,SeasonViewModel,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	try {  		Clipboard.SetText (s);  		Clipboard.Flush ();  		return;  	} catch {  		//nah  	}  	Thread.Sleep (10);  }  
Magic Number,SjUpdater.ViewModel,SeasonViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\SeasonViewModel.cs,SeasonViewModel,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,SjUpdater.ViewModel,SeasonViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\SeasonViewModel.cs,update_source,The following statement contains a magic number: _dispatcher.Invoke (delegate {  	switch (e.Action) {  	case NotifyCollectionChangedAction.Add:  		foreach (var newItem in e.NewItems) {  			var favEpisodeData = newItem as FavEpisodeData;  			_lisEpisodes.Add (new EpisodeViewModel (favEpisodeData));  		}  		break;  	case NotifyCollectionChangedAction.Remove:  		foreach (var oldItem in e.OldItems) {  			var o = oldItem as FavShowData;  			for (int i = _lisEpisodes.Count - 2; i >= 0; i--) {  				if (_lisEpisodes [i].Episode == oldItem) {  					_lisEpisodes.RemoveAt (i);  				}  			}  		}  		break;  	default:  		throw new InvalidOperationException (e.Action.ToString ());  	}  	_lisEpisodes.Sort (EpisodeComparer);  });  
Magic Number,SjUpdater.ViewModel,SeasonViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\SeasonViewModel.cs,update_source,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	foreach (var newItem in e.NewItems) {  		var favEpisodeData = newItem as FavEpisodeData;  		_lisEpisodes.Add (new EpisodeViewModel (favEpisodeData));  	}  	break;  case NotifyCollectionChangedAction.Remove:  	foreach (var oldItem in e.OldItems) {  		var o = oldItem as FavShowData;  		for (int i = _lisEpisodes.Count - 2; i >= 0; i--) {  			if (_lisEpisodes [i].Episode == oldItem) {  				_lisEpisodes.RemoveAt (i);  			}  		}  	}  	break;  default:  	throw new InvalidOperationException (e.Action.ToString ());  }  
Magic Number,SjUpdater.ViewModel,SeasonViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\SeasonViewModel.cs,update_source,The following statement contains a magic number: foreach (var oldItem in e.OldItems) {  	var o = oldItem as FavShowData;  	for (int i = _lisEpisodes.Count - 2; i >= 0; i--) {  		if (_lisEpisodes [i].Episode == oldItem) {  			_lisEpisodes.RemoveAt (i);  		}  	}  }  
Magic Number,SjUpdater.ViewModel,SeasonViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\SeasonViewModel.cs,update_source,The following statement contains a magic number: for (int i = _lisEpisodes.Count - 2; i >= 0; i--) {  	if (_lisEpisodes [i].Episode == oldItem) {  		_lisEpisodes.RemoveAt (i);  	}  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: if (_show.NewEpisodes) {  	var eps = _show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewEpisode)).ToList ();  	if (eps.Any ()) {  		bottomText = "New:" + FormatEpisodes (eps' Show.NewUpdates ? 4 : 10);  		bottomVis = Visibility.Visible;  		newsText = "New:" + FormatEpisodes (eps' 10);  		if (Show.NewUpdates) {  			bottomText += " +Updates";  			newsText += "\r\nUpdated:";  			newsText += FormatEpisodes (_show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewUpdate)).ToList ()' 10);  		}  	}  } else if (_show.NewUpdates) {  	var eps = _show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewUpdate)).ToList ();  	if (eps.Any ()) {  		bottomText = "Updated:" + FormatEpisodes (eps' 10);  		newsText += "Updated:" + FormatEpisodes (eps' 10);  		bottomVis = Visibility.Visible;  	}  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: if (_show.NewEpisodes) {  	var eps = _show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewEpisode)).ToList ();  	if (eps.Any ()) {  		bottomText = "New:" + FormatEpisodes (eps' Show.NewUpdates ? 4 : 10);  		bottomVis = Visibility.Visible;  		newsText = "New:" + FormatEpisodes (eps' 10);  		if (Show.NewUpdates) {  			bottomText += " +Updates";  			newsText += "\r\nUpdated:";  			newsText += FormatEpisodes (_show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewUpdate)).ToList ()' 10);  		}  	}  } else if (_show.NewUpdates) {  	var eps = _show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewUpdate)).ToList ();  	if (eps.Any ()) {  		bottomText = "Updated:" + FormatEpisodes (eps' 10);  		newsText += "Updated:" + FormatEpisodes (eps' 10);  		bottomVis = Visibility.Visible;  	}  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: if (_show.NewEpisodes) {  	var eps = _show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewEpisode)).ToList ();  	if (eps.Any ()) {  		bottomText = "New:" + FormatEpisodes (eps' Show.NewUpdates ? 4 : 10);  		bottomVis = Visibility.Visible;  		newsText = "New:" + FormatEpisodes (eps' 10);  		if (Show.NewUpdates) {  			bottomText += " +Updates";  			newsText += "\r\nUpdated:";  			newsText += FormatEpisodes (_show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewUpdate)).ToList ()' 10);  		}  	}  } else if (_show.NewUpdates) {  	var eps = _show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewUpdate)).ToList ();  	if (eps.Any ()) {  		bottomText = "Updated:" + FormatEpisodes (eps' 10);  		newsText += "Updated:" + FormatEpisodes (eps' 10);  		bottomVis = Visibility.Visible;  	}  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: if (_show.NewEpisodes) {  	var eps = _show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewEpisode)).ToList ();  	if (eps.Any ()) {  		bottomText = "New:" + FormatEpisodes (eps' Show.NewUpdates ? 4 : 10);  		bottomVis = Visibility.Visible;  		newsText = "New:" + FormatEpisodes (eps' 10);  		if (Show.NewUpdates) {  			bottomText += " +Updates";  			newsText += "\r\nUpdated:";  			newsText += FormatEpisodes (_show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewUpdate)).ToList ()' 10);  		}  	}  } else if (_show.NewUpdates) {  	var eps = _show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewUpdate)).ToList ();  	if (eps.Any ()) {  		bottomText = "Updated:" + FormatEpisodes (eps' 10);  		newsText += "Updated:" + FormatEpisodes (eps' 10);  		bottomVis = Visibility.Visible;  	}  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: if (_show.NewEpisodes) {  	var eps = _show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewEpisode)).ToList ();  	if (eps.Any ()) {  		bottomText = "New:" + FormatEpisodes (eps' Show.NewUpdates ? 4 : 10);  		bottomVis = Visibility.Visible;  		newsText = "New:" + FormatEpisodes (eps' 10);  		if (Show.NewUpdates) {  			bottomText += " +Updates";  			newsText += "\r\nUpdated:";  			newsText += FormatEpisodes (_show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewUpdate)).ToList ()' 10);  		}  	}  } else if (_show.NewUpdates) {  	var eps = _show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewUpdate)).ToList ();  	if (eps.Any ()) {  		bottomText = "Updated:" + FormatEpisodes (eps' 10);  		newsText += "Updated:" + FormatEpisodes (eps' 10);  		bottomVis = Visibility.Visible;  	}  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: if (_show.NewEpisodes) {  	var eps = _show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewEpisode)).ToList ();  	if (eps.Any ()) {  		bottomText = "New:" + FormatEpisodes (eps' Show.NewUpdates ? 4 : 10);  		bottomVis = Visibility.Visible;  		newsText = "New:" + FormatEpisodes (eps' 10);  		if (Show.NewUpdates) {  			bottomText += " +Updates";  			newsText += "\r\nUpdated:";  			newsText += FormatEpisodes (_show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewUpdate)).ToList ()' 10);  		}  	}  } else if (_show.NewUpdates) {  	var eps = _show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewUpdate)).ToList ();  	if (eps.Any ()) {  		bottomText = "Updated:" + FormatEpisodes (eps' 10);  		newsText += "Updated:" + FormatEpisodes (eps' 10);  		bottomVis = Visibility.Visible;  	}  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: if (eps.Any ()) {  	bottomText = "New:" + FormatEpisodes (eps' Show.NewUpdates ? 4 : 10);  	bottomVis = Visibility.Visible;  	newsText = "New:" + FormatEpisodes (eps' 10);  	if (Show.NewUpdates) {  		bottomText += " +Updates";  		newsText += "\r\nUpdated:";  		newsText += FormatEpisodes (_show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewUpdate)).ToList ()' 10);  	}  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: if (eps.Any ()) {  	bottomText = "New:" + FormatEpisodes (eps' Show.NewUpdates ? 4 : 10);  	bottomVis = Visibility.Visible;  	newsText = "New:" + FormatEpisodes (eps' 10);  	if (Show.NewUpdates) {  		bottomText += " +Updates";  		newsText += "\r\nUpdated:";  		newsText += FormatEpisodes (_show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewUpdate)).ToList ()' 10);  	}  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: if (eps.Any ()) {  	bottomText = "New:" + FormatEpisodes (eps' Show.NewUpdates ? 4 : 10);  	bottomVis = Visibility.Visible;  	newsText = "New:" + FormatEpisodes (eps' 10);  	if (Show.NewUpdates) {  		bottomText += " +Updates";  		newsText += "\r\nUpdated:";  		newsText += FormatEpisodes (_show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewUpdate)).ToList ()' 10);  	}  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: if (eps.Any ()) {  	bottomText = "New:" + FormatEpisodes (eps' Show.NewUpdates ? 4 : 10);  	bottomVis = Visibility.Visible;  	newsText = "New:" + FormatEpisodes (eps' 10);  	if (Show.NewUpdates) {  		bottomText += " +Updates";  		newsText += "\r\nUpdated:";  		newsText += FormatEpisodes (_show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewUpdate)).ToList ()' 10);  	}  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: bottomText = "New:" + FormatEpisodes (eps' Show.NewUpdates ? 4 : 10);  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: bottomText = "New:" + FormatEpisodes (eps' Show.NewUpdates ? 4 : 10);  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: newsText = "New:" + FormatEpisodes (eps' 10);  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: if (Show.NewUpdates) {  	bottomText += " +Updates";  	newsText += "\r\nUpdated:";  	newsText += FormatEpisodes (_show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewUpdate)).ToList ()' 10);  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: newsText += FormatEpisodes (_show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewUpdate)).ToList ()' 10);  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: if (_show.NewUpdates) {  	var eps = _show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewUpdate)).ToList ();  	if (eps.Any ()) {  		bottomText = "Updated:" + FormatEpisodes (eps' 10);  		newsText += "Updated:" + FormatEpisodes (eps' 10);  		bottomVis = Visibility.Visible;  	}  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: if (_show.NewUpdates) {  	var eps = _show.Seasons.SelectMany (s => s.Episodes.Where (e => e.NewUpdate)).ToList ();  	if (eps.Any ()) {  		bottomText = "Updated:" + FormatEpisodes (eps' 10);  		newsText += "Updated:" + FormatEpisodes (eps' 10);  		bottomVis = Visibility.Visible;  	}  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: if (eps.Any ()) {  	bottomText = "Updated:" + FormatEpisodes (eps' 10);  	newsText += "Updated:" + FormatEpisodes (eps' 10);  	bottomVis = Visibility.Visible;  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: if (eps.Any ()) {  	bottomText = "Updated:" + FormatEpisodes (eps' 10);  	newsText += "Updated:" + FormatEpisodes (eps' 10);  	bottomVis = Visibility.Visible;  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: bottomText = "Updated:" + FormatEpisodes (eps' 10);  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,RecalcNextPrevEpText,The following statement contains a magic number: newsText += "Updated:" + FormatEpisodes (eps' 10);  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,FormatDate,The following statement contains a magic number: if (days < 30) {  	text += days + " days";  } else if (days < 360) {  	int months = days / 30;  	text += months + " month";  	if (months > 1)  		text += "s";  } else {  	int years = days / 360;  	text += years + " year";  	if (years > 1)  		text += "s";  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,FormatDate,The following statement contains a magic number: if (days < 30) {  	text += days + " days";  } else if (days < 360) {  	int months = days / 30;  	text += months + " month";  	if (months > 1)  		text += "s";  } else {  	int years = days / 360;  	text += years + " year";  	if (years > 1)  		text += "s";  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,FormatDate,The following statement contains a magic number: if (days < 30) {  	text += days + " days";  } else if (days < 360) {  	int months = days / 30;  	text += months + " month";  	if (months > 1)  		text += "s";  } else {  	int years = days / 360;  	text += years + " year";  	if (years > 1)  		text += "s";  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,FormatDate,The following statement contains a magic number: if (days < 30) {  	text += days + " days";  } else if (days < 360) {  	int months = days / 30;  	text += months + " month";  	if (months > 1)  		text += "s";  } else {  	int years = days / 360;  	text += years + " year";  	if (years > 1)  		text += "s";  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,FormatDate,The following statement contains a magic number: if (days < 360) {  	int months = days / 30;  	text += months + " month";  	if (months > 1)  		text += "s";  } else {  	int years = days / 360;  	text += years + " year";  	if (years > 1)  		text += "s";  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,FormatDate,The following statement contains a magic number: if (days < 360) {  	int months = days / 30;  	text += months + " month";  	if (months > 1)  		text += "s";  } else {  	int years = days / 360;  	text += years + " year";  	if (years > 1)  		text += "s";  }  
Magic Number,SjUpdater.ViewModel,ShowTileViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowTileViewModel.cs,FormatDate,The following statement contains a magic number: if (days < 360) {  	int months = days / 30;  	text += months + " month";  	if (months > 1)  		text += "s";  } else {  	int years = days / 360;  	text += years + " year";  	if (years > 1)  		text += "s";  }  
Magic Number,SjUpdater.ViewModel,ShowViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowViewModel.cs,ShowViewModel,The following statement contains a magic number: DownloadCommand = new SimpleCommand<object' String> (s => {  	for (int i = 0; i < 10; i++) {  		try {  			Clipboard.SetText (s);  			Clipboard.Flush ();  			return;  		} catch {  			//nah  		}  		Thread.Sleep (10);  	}  	MessageBox.Show ("Couldn't Copy link to clipboard.\n" + s);  });  
Magic Number,SjUpdater.ViewModel,ShowViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowViewModel.cs,ShowViewModel,The following statement contains a magic number: DownloadCommand = new SimpleCommand<object' String> (s => {  	for (int i = 0; i < 10; i++) {  		try {  			Clipboard.SetText (s);  			Clipboard.Flush ();  			return;  		} catch {  			//nah  		}  		Thread.Sleep (10);  	}  	MessageBox.Show ("Couldn't Copy link to clipboard.\n" + s);  });  
Magic Number,SjUpdater.ViewModel,ShowViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowViewModel.cs,ShowViewModel,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	try {  		Clipboard.SetText (s);  		Clipboard.Flush ();  		return;  	} catch {  		//nah  	}  	Thread.Sleep (10);  }  
Magic Number,SjUpdater.ViewModel,ShowViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowViewModel.cs,ShowViewModel,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	try {  		Clipboard.SetText (s);  		Clipboard.Flush ();  		return;  	} catch {  		//nah  	}  	Thread.Sleep (10);  }  
Magic Number,SjUpdater.ViewModel,ShowViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\ViewModel\ShowViewModel.cs,ShowViewModel,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,SjUpdater.XML,XmlSerialization,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\XML\XmlSerialization.cs,SaveToXml,The following statement contains a magic number: try {  	XmlDocument doc = CustomXmlSerializer.Serialize (o' version' "AMS_FILE");  	if (!encrypt)  		doc.Save (filename);  	else {  		FileStream fileStream = new FileStream (filename' FileMode.Create);  		fileStream.Write (XmlFileReader.EncHeader' 0' 10);  		GZipStream compressStream = new GZipStream (fileStream' CompressionMode.Compress);  		doc.Save (compressStream);  		compressStream.Close ();  		fileStream.Close ();  	}  } catch (Exception ex) {  	throw new Exception ("Fehler beim Schreiben zu Xml Datei"' ex);  }  
Magic Number,SjUpdater.XML,XmlSerialization,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\XML\XmlSerialization.cs,SaveToXml,The following statement contains a magic number: if (!encrypt)  	doc.Save (filename);  else {  	FileStream fileStream = new FileStream (filename' FileMode.Create);  	fileStream.Write (XmlFileReader.EncHeader' 0' 10);  	GZipStream compressStream = new GZipStream (fileStream' CompressionMode.Compress);  	doc.Save (compressStream);  	compressStream.Close ();  	fileStream.Close ();  }  
Magic Number,SjUpdater.XML,XmlSerialization,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\XML\XmlSerialization.cs,SaveToXml,The following statement contains a magic number: fileStream.Write (XmlFileReader.EncHeader' 0' 10);  
Magic Number,SjUpdater.XML,XmlFileReader,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\XML\XmlSerialization.cs,ReadXmlFile,The following statement contains a magic number: inputstream.Read (data' 0' 10);  
Magic Number,SjUpdater.XML,XmlFileReader,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\XML\XmlSerialization.cs,ReadXmlFile,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	if (data [i] != EncHeader [i]) {  		isEncrypted = false;  		break;  	}  }  
Missing Default,SjUpdater,Settings,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Settings.cs,Import,The following switch statement is missing a default case: switch (actualVersion) {  case 1:  	foreach (var favShow in actualSettings.TvShows) {  		for (int i = favShow.Seasons.Count - 1; i >= 0; i--) {  			var favSeason = favShow.Seasons [i];  			if (favSeason.Number == -1) {  				foreach (var downloadData in favSeason.Episodes.SelectMany (favEpisode => favEpisode.Downloads)) {  					favShow.NonSeasons.Add (downloadData);  				}  				favShow.Seasons.RemoveAt (i);  			} else {  				var nonEpisode = favSeason.Episodes.FirstOrDefault (favEpisode => favEpisode.Number == -1);  				if (nonEpisode != null) {  					foreach (var downloadData in nonEpisode.Downloads) {  						favSeason.NonEpisodes.Add (downloadData);  					}  					favSeason.Episodes.Remove (nonEpisode);  				}  			}  		}  		favShow.SetResetOnRefresh ();  	}  	break;  }  
Missing Default,SjUpdater,MainWindow,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\MainWindow.xaml.cs,NavBack,The following switch statement is missing a default case: switch (CurrentPage ()) {  case 1:  	EpisodesBack (this' new RoutedEventArgs ());  	break;  case 2:  	SwitchPage (_lastpage);  	break;  }  
Missing Default,SjUpdater.Updater,UpdaterViewModel,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Updater\UpdaterViewModel.cs,updater_PropertyChanged,The following switch statement is missing a default case: switch (e.PropertyName) {  case "CurrentFileNum":  case "NumFiles":  	NotifyPropertyChanged ("FileNumProgress");  	break;  case "TotalBytesDownloaded":  case "TotalBytes":  	NotifyPropertyChanged ("TotalDownloadProgressBytes");  	NotifyPropertyChanged ("TotalDownloadProgressPercentageString");  	NotifyPropertyChanged ("TotalDownloadProgressPercentageFloat");  	break;  case "CurrentFileBytesDownloaded":  case "CurrentFileBytes":  	NotifyPropertyChanged ("CurrentDownloadProgressBytes");  	NotifyPropertyChanged ("CurrentDownloadProgressPercentageString");  	NotifyPropertyChanged ("CurrentDownloadProgressPercentageFloat");  	break;  case "CurrentFilename":  	NotifyPropertyChanged ("CurrentFilename");  	break;  case "UpdateAvailable":  case "IsChecking":  case "IsGettingChangelog":  	NotifyPropertyChanged ("IsButtonEnabled");  	NotifyPropertyChanged ("UpdateButtonContent");  	NotifyPropertyChanged ("IsWorking");  	NotifyPropertyChanged ("ProgressbarVisibility");  	break;  case "Changelog":  	NotifyPropertyChanged ("Changelog");  	break;  }  
Missing Default,SjUpdater.Utils,TreeViewExtensions,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\Utils\TreeViewExtensions.cs,KeyDown,The following switch statement is missing a default case: switch (e.Key) {  case Key.Space:  	if (selectedItems.Count == 1) {  		selectedItems.First ().IsExpanded ^= true;  	}  	break;  case Key.Up:  	int ind = items.IndexOf (selectedItems.First ());  	if (ind > 0) {  		MakeSingleSelection (tree' items [ind - 1]);  	} else {  		MakeSingleSelection (tree' items.First ());  	}  	NotifySelectionChangedListeners (tree);  	break;  case Key.Down:  	int ind2 = items.IndexOf (selectedItems.Last ());  	if (ind2 < items.Count - 1) {  		MakeSingleSelection (tree' items [ind2 + 1]);  	} else {  		MakeSingleSelection (tree' items.Last ());  	}  	NotifySelectionChangedListeners (tree);  	break;  }  
Missing Default,SjUpdater.XML,CustomXmlDeserializer,F:\newReposMay17\Dreamcooled_sjupdater\SjUpdater\XML\CustomXmlDeserializer.cs,DeserializeCore,The following switch statement is missing a default case: switch (Type.GetTypeCode (objType)) {  case TypeCode.Boolean:  	return Convert.ToBoolean (value' cult);  case TypeCode.Byte:  	return Convert.ToByte (value' cult);  case TypeCode.Char:  	return Convert.ToChar (value' cult);  case TypeCode.DBNull:  	return DBNull.Value;  case TypeCode.DateTime:  	return Convert.ToDateTime (value' cult);  case TypeCode.Decimal:  	return Convert.ToDecimal (value' cult);  case TypeCode.Double:  	return Convert.ToDouble (value' cult);  case TypeCode.Int16:  	return Convert.ToInt16 (value' cult);  case TypeCode.Int32:  	return Convert.ToInt32 (value' cult);  case TypeCode.Int64:  	return Convert.ToInt64 (value' cult);  case TypeCode.SByte:  	return Convert.ToSByte (value' cult);  case TypeCode.Single:  	return Convert.ToSingle (value' cult);  case TypeCode.String:  	return value;  case TypeCode.UInt16:  	return Convert.ToUInt16 (value' cult);  case TypeCode.UInt32:  	return Convert.ToUInt32 (value' cult);  case TypeCode.UInt64:  	return Convert.ToUInt64 (value' cult);  }  
