Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading,ParentTask,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\Tasks\ParentTask.cs,Do,The length of the statement  "		//this is supposed to be executed when the parent task is finished but with a thread sleep we can see it's not the case ^o) " is 123.
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading.Parallel_Class,BasicParallel,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\Parallel Class\BasicParallel.cs,Do,The following statement contains a magic number: elapsed += 1000;  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading.Parallel_Class,BasicParallel,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\Parallel Class\BasicParallel.cs,Do,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading,SharedVariable,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\SharedVariable.cs,Do,The following statement contains a magic number: while (!stopped) {  	Console.WriteLine ("running");  	Thread.Sleep (1000);  }  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading,SharedVariable,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\SharedVariable.cs,Do,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading,SimpleThread,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\SimpleThread.cs,ThreatMethod,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	Console.WriteLine ("ThreatMethod: {0}"' i);  }  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading,SimpleThread,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\SimpleThread.cs,Do,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	Console.WriteLine ("Main thread: {0}"' i);  	Thread.Sleep (1);  }  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading,ContinousTask,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\Tasks\ContinousTask.cs,Do,The following statement contains a magic number: Thread.Sleep (5000);  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading,ParentTask,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\Tasks\ParentTask.cs,Do,The following statement contains a magic number: new Task (() =>  {  	Thread.Sleep (1000);  	result [2] = 2;  }' TaskCreationOptions.AttachedToParent).Start ();  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading,ParentTask,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\Tasks\ParentTask.cs,Do,The following statement contains a magic number: new Task (() =>  {  	Thread.Sleep (1000);  	result [2] = 2;  }' TaskCreationOptions.AttachedToParent).Start ();  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading,ParentTask,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\Tasks\ParentTask.cs,Do,The following statement contains a magic number: new Task (() =>  {  	Thread.Sleep (1000);  	result [2] = 2;  }' TaskCreationOptions.AttachedToParent).Start ();  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading,ParentTask,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\Tasks\ParentTask.cs,Do,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading,ParentTask,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\Tasks\ParentTask.cs,Do,The following statement contains a magic number: result [2] = 2;  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading,ParentTask,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\Tasks\ParentTask.cs,Do,The following statement contains a magic number: result [2] = 2;  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading,SimpleContinousTask,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\Tasks\SimpleContinousTask.cs,Do,The following statement contains a magic number: Thread.Sleep (3000);  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading,SimpleContinousTask,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\Tasks\SimpleContinousTask.cs,Do,The following statement contains a magic number: return 10;  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading,TaskParentFactory,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\Tasks\TaskParentFactory.cs,Do,The following statement contains a magic number: tf.StartNew (() =>  {  	Thread.Sleep (3000);  	result [2] = 2;  });  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading,TaskParentFactory,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\Tasks\TaskParentFactory.cs,Do,The following statement contains a magic number: tf.StartNew (() =>  {  	Thread.Sleep (3000);  	result [2] = 2;  });  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading,TaskParentFactory,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\Tasks\TaskParentFactory.cs,Do,The following statement contains a magic number: tf.StartNew (() =>  {  	Thread.Sleep (3000);  	result [2] = 2;  });  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading,TaskParentFactory,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\Tasks\TaskParentFactory.cs,Do,The following statement contains a magic number: Thread.Sleep (3000);  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading,TaskParentFactory,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\Tasks\TaskParentFactory.cs,Do,The following statement contains a magic number: result [2] = 2;  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Implement_multithreading,TaskParentFactory,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Ancu\Tasks\TaskParentFactory.cs,Do,The following statement contains a magic number: result [2] = 2;  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Joba,AsynchronusThreading,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Joba\AsynchronusThreading.cs,Do,The following statement contains a magic number: Thread.Sleep (5000);  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Joba,BackgroundThread,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Joba\BackgroundThread.cs,ThreadMethod,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	Console.WriteLine ("ThreadProc: {0}"' i);  	Thread.Sleep (1000);  }  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Joba,BackgroundThread,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Joba\BackgroundThread.cs,ThreadMethod,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	Console.WriteLine ("ThreadProc: {0}"' i);  	Thread.Sleep (1000);  }  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Joba,BackgroundThread,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Joba\BackgroundThread.cs,ThreadMethod,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Joba,BackgroundThread,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Joba\BackgroundThread.cs,Do2,The following statement contains a magic number: for (int i = 0; i < 10000; i++) {  	if (i == 5)  		fore.Abort ();  	//Abort Foreground thread  	Console.WriteLine (Thread.CurrentThread.Name);  }  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Joba,BackgroundThread,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Joba\BackgroundThread.cs,Do2,The following statement contains a magic number: for (int i = 0; i < 10000; i++) {  	if (i == 5)  		fore.Abort ();  	//Abort Foreground thread  	Console.WriteLine (Thread.CurrentThread.Name);  }  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Joba,BackgroundThread,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Joba\BackgroundThread.cs,Do2,The following statement contains a magic number: if (i == 5)  	fore.Abort ();  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Joba,BackgroundThread,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Joba\BackgroundThread.cs,ChildThreadA,The following statement contains a magic number: for (int i = 0; i < 10000; i++) {  	Console.WriteLine ("Child thread A:");  }  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Joba,BackgroundThread,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Joba\BackgroundThread.cs,ChildThreadB,The following statement contains a magic number: for (int i = 0; i < 10000; i++) {  	Console.WriteLine ("Child thread B:");  }  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Joba,ParameterizedThread,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Joba\ParameterizedThread.cs,Do,The following statement contains a magic number: t.Start (5);  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Joba,SimpleThread,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Joba\SimpleThread.cs,ThreatMethod,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	Console.WriteLine ("ThreatMethod: {0}"' i);  	// Why Thread.Sleep(0) - It is used to signal to Windows that this thread is finished.   	//Instead of waiting for the whole time-slice of the thread to finish' it will immediately switch to another thread.  	Thread.Sleep (0);  }  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Joba,SimpleThread,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Joba\SimpleThread.cs,Do,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	Console.WriteLine ("Main thread: {0}"' i);  	Thread.Sleep (0);  }  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Joba,StopThread,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Joba\StopThread.cs,Do,The following statement contains a magic number: while (!stopped) {  	Console.WriteLine ("Running...");  	Thread.Sleep (1000);  }  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Joba,StopThread,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Joba\StopThread.cs,Do,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,Microsoft.Exam70_483.Ch1.Threads.Joba.Other,SupressingFlow,C:\repos\JobiJoba_70-483\Microsoft.Exam70-483.Ch1.Threads\Implement multithreading\Joba\Other\SupressingFlow.cs,Do,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	Console.WriteLine ("i " + i);  	Thread.Sleep (0);  }  
