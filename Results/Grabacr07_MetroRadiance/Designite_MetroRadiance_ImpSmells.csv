Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,MetroRadiance.UI.Controls,CaptionIcon,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\UI\Controls\CaptionIcon.cs,WndProc,The method has 5 parameters. Parameters: hwnd' msg' wParam' lParam' handled
Long Parameter List,MetroRadiance.UI.Controls,MetroWindow,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\UI\Controls\MetroWindow.cs,WndProc,The method has 5 parameters. Parameters: hwnd' msg' wParam' lParam' handled
Long Parameter List,MetroRadiance.UI.Controls,ResizeGrip,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\UI\Controls\ResizeGrip.cs,WndProc,The method has 5 parameters. Parameters: hwnd' msg' wParam' lParam' handled
Long Identifier,MetroRadiance.UI.Controls,MetroWindow,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\UI\Controls\MetroWindow.cs,,The length of the parameter IsRestoringWindowPlacementProperty is 34.
Long Statement,MetroRadiance.UI.Controls,CaptionIcon,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\UI\Controls\CaptionIcon.cs,OnMouseDown,The length of the statement  "						SystemCommands.ShowSystemMenu(window' new Point(point.X / window.CurrentDpi.ScaleX' point.Y / window.CurrentDpi.ScaleY)); " is 121.
Long Statement,MetroRadiance.UI.Controls,CaptionIcon,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\UI\Controls\CaptionIcon.cs,OnMouseRightButtonUp,The length of the statement  "			SystemCommands.ShowSystemMenu(window' new Point(point.X / window.CurrentDpi.ScaleX' point.Y / window.CurrentDpi.ScaleY)); " is 121.
Long Statement,MetroRadiance.UI.Controls,MetroWindow,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\UI\Controls\MetroWindow.cs,OnSourceInitialized,The length of the statement  "					placement.showCmd = placement.showCmd == ShowWindowFlags.SW_SHOWMINIMIZED ? ShowWindowFlags.SW_SHOWNORMAL : placement.showCmd; " is 126.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Magic Number,MetroRadiance.UI,Accent,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\UI\Accent.cs,GetHashCode,The following statement contains a magic number: unchecked  			{  				// ReSharper disable NonReadonlyMemberInGetHashCode  				return (this.Specified.GetHashCode() * 397) ^ this.Color.GetHashCode();  				// ReSharper restore NonReadonlyMemberInGetHashCode  			}
Magic Number,MetroRadiance.UI,ThemeService,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\UI\ThemeService.cs,GetAccentResource,The following statement contains a magic number: color.A = 255;
Magic Number,MetroRadiance.UI,ThemeService,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\UI\ThemeService.cs,GetAccentResource,The following statement contains a magic number: dark.V *= 0.8;
Magic Number,MetroRadiance.UI,ThemeService,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\UI\ThemeService.cs,GetAccentResource,The following statement contains a magic number: light.S *= 0.6;
Magic Number,MetroRadiance.UI,ThemeService,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\UI\ThemeService.cs,GetAccentResource,The following statement contains a magic number: var foreground = luminocity < 128 ? Colors.White : Colors.Black;
Magic Number,MetroRadiance.UI.Controls,BlurWindow,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\UI\Controls\BlurWindow.cs,ToHighContrast,The following statement contains a magic number: this.ChangeProperties(  				ImmersiveColor.GetColorByTypeName(ImmersiveColorNames.ApplicationBackground)'  				ImmersiveColor.GetColorByTypeName(ImmersiveColorNames.SystemText)'  				SystemColors.WindowFrameColor'  				new Thickness(2));
Magic Number,MetroRadiance.UI.Controls,BlurWindow,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\UI\Controls\BlurWindow.cs,ToBlur,The following statement contains a magic number: if (transparency) background.A = (byte)(background.A * 0.8);
Magic Number,MetroRadiance.UI.Controls,Badge,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\UI\Controls\Badge.cs,SetCount,The following statement contains a magic number: if (count.HasValue)  			{  				if (this.block != null)  				{  					this.block.Text = count.Value.ToString(CultureInfo.InvariantCulture);  					this.block.FontSize = count.Value >= 10 ? this.initialSize - 1 : this.initialSize;  				}  				this.Visibility = Visibility.Visible;  			}  			else  			{  				this.Visibility = Visibility.Hidden;  			}
Magic Number,MetroRadiance.UI.Controls,CaptionIcon,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\UI\Controls\CaptionIcon.cs,OnMouseDown,The following statement contains a magic number: if (e.ChangedButton == MouseButton.Left)  			{  				if (e.ClickCount == 1)  				{  					if (!this.isSystemMenuOpened)  					{  						this.isSystemMenuOpened = true;  						var point = this.PointToScreen(new Point(0' this.ActualHeight));  						SystemCommands.ShowSystemMenu(window' new Point(point.X / window.CurrentDpi.ScaleX' point.Y / window.CurrentDpi.ScaleY));  					}  					else  					{  						this.isSystemMenuOpened = false;  					}  				}  				else if (e.ClickCount == 2)  				{  					window.Close();  				}  			}
Magic Number,MetroRadiance.UI.Controls,MetroWindow,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\UI\Controls\MetroWindow.cs,OnDeactivated,The following statement contains a magic number: if (this.captionBar != null) this.captionBar.Opacity = 0.5;
Missing Default,MetroRadiance.UI,ThemeService,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\UI\ThemeService.cs,ChangeThemeCore,The following switch statement is missing a default case: switch (theme)  			{  				case Platform.Theme.Dark:  					this.ChangeThemeCore(Theme.Dark);  					break;  				case Platform.Theme.Light:  					this.ChangeThemeCore(Theme.Light);  					break;  			}
Missing Default,MetroRadiance.UI.Controls,CaptionButton,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\UI\Controls\CaptionButton.cs,ChangeVisibility,The following switch statement is missing a default case: switch (this.WindowAction)  			{  				case WindowAction.Maximize:  					this.Visibility = this.owner.WindowState != WindowState.Maximized ? Visibility.Visible : Visibility.Collapsed;  					break;  				case WindowAction.Minimize:  					this.Visibility = this.owner.WindowState != WindowState.Minimized ? Visibility.Visible : Visibility.Collapsed;  					break;  				case WindowAction.Normalize:  					this.Visibility = this.owner.WindowState != WindowState.Normal ? Visibility.Visible : Visibility.Collapsed;  					break;  			}
Missing Default,MetroRadiance.Utilities,InternalExtensions,C:\repos\Grabacr07_MetroRadiance\source\MetroRadiance\Utilities\InternalExtensions.cs,Invoke,The following switch statement is missing a default case: switch (action)  			{  				case WindowAction.Active:  					window.Activate();  					break;  				case WindowAction.Close:  					window.Close();  					break;  				case WindowAction.Maximize:  					window.WindowState = WindowState.Maximized;  					break;  				case WindowAction.Minimize:  					window.WindowState = WindowState.Minimized;  					break;  				case WindowAction.Normalize:  					window.WindowState = WindowState.Normal;  					break;  				case WindowAction.OpenSystemMenu:  					var point = source.PointToScreen(new Point(0' source.ActualHeight));  					SystemCommands.ShowSystemMenu(window' point);  					break;  			}
