Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MetroRadiance.Chrome.Internal,GlowWindow,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance.Chrome\Internal\GlowWindow.cs,WndProc,Cyclomatic complexity of the method is 8
Long Parameter List,MetroRadiance.Controls,CaptionIcon,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance\Controls\CaptionIcon.cs,WndProc,The method has 5 parameters. Parameters: hwnd' msg' wParam' lParam' handled
Long Parameter List,MetroRadiance.Controls,MetroWindow,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance\Controls\MetroWindow.cs,WndProc,The method has 5 parameters. Parameters: hwnd' msg' wParam' lParam' handled
Long Parameter List,MetroRadiance.Controls,ResizeGrip,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance\Controls\ResizeGrip.cs,WndProc,The method has 5 parameters. Parameters: hwnd' msg' wParam' lParam' handled
Long Parameter List,MetroRadiance.Chrome.Internal,GlowWindow,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance.Chrome\Internal\GlowWindow.cs,WndProc,The method has 5 parameters. Parameters: hwnd' msg' wParam' lParam' handled
Long Parameter List,MetroRadiance.Core.Win32,NativeMethods,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance.Core\Win32\NativeMethods.cs,SetWindowPos,The method has 7 parameters. Parameters: hWnd' hWndInsertAfter' x' y' cx' cy' flags
Long Identifier,MetroRadiance.Controls,MetroWindow,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance\Controls\MetroWindow.cs,,The length of the parameter IsRestoringWindowPlacementProperty is 34.
Long Statement,MetroRadiance.Controls,CaptionIcon,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance\Controls\CaptionIcon.cs,OnMouseDown,The length of the statement  "						SystemCommands.ShowSystemMenu(window' new Point(point.X / window.currentDpi.ScaleX' point.Y / window.currentDpi.ScaleY)); " is 121.
Long Statement,MetroRadiance.Controls,CaptionIcon,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance\Controls\CaptionIcon.cs,OnMouseRightButtonUp,The length of the statement  "			SystemCommands.ShowSystemMenu(window' new Point(point.X / window.currentDpi.ScaleX' point.Y / window.currentDpi.ScaleY)); " is 121.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Virtual Method Call from Constructor,MetroRadiance.Chrome.Internal,GlowWindow,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance.Chrome\Internal\GlowWindow.cs,GlowWindow,The constructor "GlowWindow" calls a virtual method "GetLeft".
Virtual Method Call from Constructor,MetroRadiance.Chrome.Internal,GlowWindow,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance.Chrome\Internal\GlowWindow.cs,GlowWindow,The constructor "GlowWindow" calls a virtual method "GetTop".
Virtual Method Call from Constructor,MetroRadiance.Chrome.Internal,GlowWindow,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance.Chrome\Internal\GlowWindow.cs,GlowWindow,The constructor "GlowWindow" calls a virtual method "GetWidth".
Virtual Method Call from Constructor,MetroRadiance.Chrome.Internal,GlowWindow,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance.Chrome\Internal\GlowWindow.cs,GlowWindow,The constructor "GlowWindow" calls a virtual method "GetHeight".
Magic Number,MetroRadiance.Controls,Badge,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance\Controls\Badge.cs,SetCount,The following statement contains a magic number: if (count.HasValue) 			{ 				if (this.block != null) 				{ 					this.block.Text = count.Value.ToString(CultureInfo.InvariantCulture); 					this.block.FontSize = count.Value >= 10 ? this.initialSize - 1 : this.initialSize; 				} 				this.Visibility = Visibility.Visible; 			} 			else 			{ 				this.Visibility = Visibility.Hidden; 			}
Magic Number,MetroRadiance.Controls,CaptionIcon,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance\Controls\CaptionIcon.cs,OnMouseDown,The following statement contains a magic number: if (e.ChangedButton == MouseButton.Left)  			{  				if (e.ClickCount == 1)  				{  					if (!this.isSystemMenuOpened)  					{  						this.isSystemMenuOpened = true;  						var point = this.PointToScreen(new Point(0' this.ActualHeight));  						SystemCommands.ShowSystemMenu(window' new Point(point.X / window.currentDpi.ScaleX' point.Y / window.currentDpi.ScaleY));  					}  					else  					{  						this.isSystemMenuOpened = false;  					}  				}  				else if (e.ClickCount == 2)  				{  					window.Close();  				}  			}
Magic Number,MetroRadiance.Controls,MetroWindow,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance\Controls\MetroWindow.cs,OnDeactivated,The following statement contains a magic number: if (this.captionBar != null) this.captionBar.Opacity = 0.5;
Magic Number,MetroRadiance.Chrome.Internal,GlowWindow,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance.Chrome\Internal\GlowWindow.cs,Update,The following statement contains a magic number: if (this.owner.Visibility == Visibility.Hidden)  			{  				this.Visibility = Visibility.Hidden;  				this.UpdateCore();  			}  			else if (this.owner.WindowState == WindowState.Normal)  			{  				if (this.ownerState == WindowState.Minimized  					&& SystemParameters.MinimizeAnimation)  				{  					// 最小化から復帰 && 最小化アニメーションが有効の場合  					// アニメーションが完了しウィンドウが表示されるまで遅延させる (それがだいたい 250 ミリ秒くらい)  					await Task.Delay(250);  				}    				this.Visibility = Visibility.Visible;  				this.UpdateCore();  			}  			else  			{  				this.Visibility = Visibility.Collapsed;  			}
Magic Number,MetroRadiance.Chrome.Internal,GlowWindow,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance.Chrome\Internal\GlowWindow.cs,WndProc,The following statement contains a magic number: if (msg == (int)WM.MOUSEACTIVATE)  			{  				handled = true;  				return new IntPtr(3);  			}
Magic Number,MetroRadiance.Chrome.Internal,GlowWindowProcessor,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance.Chrome\Internal\GlowWindowProcessor.cs,GlowWindowProcessor,The following statement contains a magic number: GlowSize = 9.0;
Magic Number,MetroRadiance.Chrome.Internal,GlowWindowProcessor,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance.Chrome\Internal\GlowWindowProcessor.cs,GlowWindowProcessor,The following statement contains a magic number: EdgeSize = 20.0;
Magic Number,MetroRadiance.Chrome.Internal,GlowWindowProcessorLeft,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance.Chrome\Internal\GlowWindowProcessorLeft.cs,GetHeight,The following statement contains a magic number: return ownerHeight + GlowSize * 2;
Magic Number,MetroRadiance.Chrome.Internal,GlowWindowProcessorRight,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance.Chrome\Internal\GlowWindowProcessorRight.cs,GetHeight,The following statement contains a magic number: return ownerHeight + GlowSize * 2;
Magic Number,MetroRadiance.Core,Dpi,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance.Core\Dpi.cs,GetHashCode,The following statement contains a magic number: unchecked  			{  				return ((int)this.X * 397) ^ (int)this.Y;  			}
Magic Number,MetroRadiance.Core.Win32,NativeExtensions,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance.Core\Win32\NativeExtensions.cs,ToHiWord,The following statement contains a magic number: return (ushort)((uint)dword >> 16);
Magic Number,MetroRadiance.Core.Win32,NativeExtensions,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance.Core\Win32\NativeExtensions.cs,ToPoint,The following statement contains a magic number: return new Point((short)((uint)dword & 0xffff)' (short)((uint)dword >> 16));
Magic Number,MetroRadiance.Core.Win32,NativeMethods,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance.Core\Win32\NativeMethods.cs,GetClassLong,The following statement contains a magic number: if (IntPtr.Size == 8)  			{  				return (ClassStyles)GetClassLong64(hwnd' flags);  			}
Magic Number,MetroRadiance.Core.Win32,NativeMethods,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance.Core\Win32\NativeMethods.cs,SetClassLong,The following statement contains a magic number: if (IntPtr.Size == 8)  			{  				return (ClassStyles)SetClassLong64(hwnd' flags' (IntPtr)dwLong);  			}
Missing Default,MetroRadiance.Controls,CaptionButton,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance\Controls\CaptionButton.cs,ChangeVisibility,The following switch statement is missing a default case: switch (this.WindowAction)  			{  				case WindowAction.Maximize:  					this.Visibility = this.owner.WindowState != WindowState.Maximized ? Visibility.Visible : Visibility.Collapsed;  					break;  				case WindowAction.Minimize:  					this.Visibility = this.owner.WindowState != WindowState.Minimized ? Visibility.Visible : Visibility.Collapsed;  					break;  				case WindowAction.Normalize:  					this.Visibility = this.owner.WindowState != WindowState.Normal ? Visibility.Visible : Visibility.Collapsed;  					break;  			}
Missing Default,MetroRadiance.Internal,InternalExtensions,C:\repos\Grabacr07_MetroRadiance\source\RetroRadiance\MetroRadiance\Internal\InternalExtensions.cs,Invoke,The following switch statement is missing a default case: switch (action)  			{  				case WindowAction.Active:  					window.Activate();  					break;  				case WindowAction.Close:  					window.Close();  					break;  				case WindowAction.Maximize:  					window.WindowState = WindowState.Maximized;  					break;  				case WindowAction.Minimize:  					window.WindowState = WindowState.Minimized;  					break;  				case WindowAction.Normalize:  					window.WindowState = WindowState.Normal;  					break;  				case WindowAction.OpenSystemMenu:  					var point = source.PointToScreen(new Point(0' source.ActualHeight));  					SystemCommands.ShowSystemMenu(window' point);  					break;  			}
