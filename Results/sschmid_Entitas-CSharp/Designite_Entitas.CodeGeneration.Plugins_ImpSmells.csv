Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Entitas.CodeGeneration.Plugins,ComponentLookupGenerator,D:\research\architectureSmells\repos1\sschmid_Entitas-CSharp\Addons\Entitas.CodeGeneration.Plugins\Entitas.CodeGeneration.Plugins\Component\CodeGenerators\ComponentLookupGenerator.cs,,The length of the parameter TOTAL_COMPONENTS_CONSTANT_TEMPLATE is 34.
Long Identifier,Entitas.CodeGeneration.Plugins,ComponentDataProvider,D:\research\architectureSmells\repos1\sschmid_Entitas-CSharp\Addons\Entitas.CodeGeneration.Plugins\Entitas.CodeGeneration.Plugins\Component\DataProviders\ComponentDataProvider.cs,,The length of the parameter _contextsComponentDataProvider is 30.
Long Identifier,Entitas.CodeGeneration.Plugins,EntityIndexDataProvider,D:\research\architectureSmells\repos1\sschmid_Entitas-CSharp\Addons\Entitas.CodeGeneration.Plugins\Entitas.CodeGeneration.Plugins\EntityIndex\DataProviders\EntityIndexDataProvider.cs,,The length of the parameter _contextsComponentDataProvider is 30.
Long Statement,Entitas.CodeGeneration.Plugins,ComponentDataProvider,D:\research\architectureSmells\repos1\sschmid_Entitas-CSharp\Addons\Entitas.CodeGeneration.Plugins\Entitas.CodeGeneration.Plugins\Component\DataProviders\ComponentDataProvider.cs,Diagnose,The length of the statement  "                        typeName + " loads and reflects " + string.Join("' "' _assembliesConfig.assemblies) + " and therefore doesn't support server mode!"' " is 132.
Long Statement,Entitas.CodeGeneration.Plugins,EntityIndexDataProvider,D:\research\architectureSmells\repos1\sschmid_Entitas-CSharp\Addons\Entitas.CodeGeneration.Plugins\Entitas.CodeGeneration.Plugins\EntityIndex\DataProviders\EntityIndexDataProvider.cs,createEntityIndexData,The length of the statement  "            var hasMultiple = infos.Count(i => i.attributes.Count(attr => attr.attribute is AbstractEntityIndexAttribute) == 1) > 1; " is 120.
Long Statement,Entitas.CodeGeneration.Plugins,EntityIndexDataProvider,D:\research\architectureSmells\repos1\sschmid_Entitas-CSharp\Addons\Entitas.CodeGeneration.Plugins\Entitas.CodeGeneration.Plugins\EntityIndex\DataProviders\EntityIndexDataProvider.cs,createEntityIndexData,The length of the statement  "                    var attribute = (AbstractEntityIndexAttribute)info.attributes.Single(attr => attr.attribute is AbstractEntityIndexAttribute).attribute; " is 135.
Long Statement,Entitas.CodeGeneration.Plugins,EntityIndexDataProvider,D:\research\architectureSmells\repos1\sschmid_Entitas-CSharp\Addons\Entitas.CodeGeneration.Plugins\Entitas.CodeGeneration.Plugins\EntityIndex\DataProviders\EntityIndexDataProvider.cs,Diagnose,The length of the statement  "                        typeName + " loads and reflects " + string.Join("' "' _assembliesConfig.assemblies) + " and therefore doesn't support server mode!"' " is 132.
Long Statement,Entitas.CodeGeneration.Plugins,EventSystemsGenerator,D:\research\architectureSmells\repos1\sschmid_Entitas-CSharp\Addons\Entitas.CodeGeneration.Plugins\Entitas.CodeGeneration.Plugins\Events\CodeGenerators\EventSystemsGenerator.cs,generate,The length of the statement  "                    .SelectMany(d => d.GetEventData().Select(eventData => new DataTuple { componentData = d' eventData = eventData }).ToArray()) " is 124.
Missing Default,Entitas.CodeGeneration.Plugins,EventSystemGenerator,D:\research\architectureSmells\repos1\sschmid_Entitas-CSharp\Addons\Entitas.CodeGeneration.Plugins\Entitas.CodeGeneration.Plugins\Events\CodeGenerators\EventSystemGenerator.cs,getFilter,The following switch statement is missing a default case: switch (eventData.eventType) {                      case EventType.Added:                          filter = "entity." + data.PrefixedComponentName();                          break;                      case EventType.Removed:                          filter = "!entity." + data.PrefixedComponentName();                          break;                  }
Missing Default,Entitas.CodeGeneration.Plugins,EventSystemGenerator,D:\research\architectureSmells\repos1\sschmid_Entitas-CSharp\Addons\Entitas.CodeGeneration.Plugins\Entitas.CodeGeneration.Plugins\Events\CodeGenerators\EventSystemGenerator.cs,getFilter,The following switch statement is missing a default case: switch (eventData.eventType) {                      case EventType.Added:                          filter = "entity.has" + data.ComponentName();                          break;                      case EventType.Removed:                          filter = "!entity.has" + data.ComponentName();                          break;                  }
