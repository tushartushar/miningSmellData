Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NHibernate.JetDriver,JetDbCommand,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDbCommand.cs,CheckParameters,Cyclomatic complexity of the method is 16
Complex Method,NHibernate.JetDriver,JetDriver,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDriver.cs,TransformJoinBlock,Cyclomatic complexity of the method is 9
Long Parameter List,NHibernate.JetDriver,JetJoinFragment,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetJoinFragment.cs,AddJoin,The method has 5 parameters.
Magic Number,NHibernate.JetDriver,JetDialect,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDialect.cs,JetDialect,The following statement contains a magic number: RegisterColumnType (DbType.AnsiStringFixedLength' 255' "CHAR($l)");  
Magic Number,NHibernate.JetDriver,JetDialect,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDialect.cs,JetDialect,The following statement contains a magic number: RegisterColumnType (DbType.AnsiString' 255' "TEXT($l)");  
Magic Number,NHibernate.JetDriver,JetDialect,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDialect.cs,JetDialect,The following statement contains a magic number: RegisterColumnType (DbType.AnsiString' 1073741823' "MEMO");  
Magic Number,NHibernate.JetDriver,JetDialect,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDialect.cs,JetDialect,The following statement contains a magic number: RegisterColumnType (DbType.Binary' 2147483647' "IMAGE");  
Magic Number,NHibernate.JetDriver,JetDialect,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDialect.cs,JetDialect,The following statement contains a magic number: RegisterColumnType (DbType.Decimal' 19' "DECIMAL(19' $l)");  
Magic Number,NHibernate.JetDriver,JetDialect,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDialect.cs,JetDialect,The following statement contains a magic number: RegisterColumnType (DbType.StringFixedLength' 255' "CHAR($l)");  
Magic Number,NHibernate.JetDriver,JetDialect,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDialect.cs,JetDialect,The following statement contains a magic number: RegisterColumnType (DbType.StringFixedLength' 1073741823' "MEMO");  
Magic Number,NHibernate.JetDriver,JetDialect,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDialect.cs,JetDialect,The following statement contains a magic number: RegisterColumnType (DbType.String' 255' "TEXT($l)");  
Magic Number,NHibernate.JetDriver,JetDialect,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDialect.cs,JetDialect,The following statement contains a magic number: RegisterColumnType (DbType.String' 1073741823' "MEMO");  
Magic Number,NHibernate.JetDriver,JetDialect,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDialect.cs,Quote,The following statement contains a magic number: return OpenQuote + name.Replace (CloseQuote.ToString ()' new string (CloseQuote' 2)) + CloseQuote;  
Magic Number,NHibernate.JetDriver,JetDialect,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDialect.cs,UnQuote,The following statement contains a magic number: if (IsQuoted (quoted)) {  	quoted = quoted.Substring (1' quoted.Length - 2);  }  
Magic Number,NHibernate.JetDriver,JetDialect,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDialect.cs,UnQuote,The following statement contains a magic number: quoted = quoted.Substring (1' quoted.Length - 2);  
Magic Number,NHibernate.JetDriver,JetDialect,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDialect.cs,UnQuote,The following statement contains a magic number: return quoted.Replace (new string (CloseQuote' 2)' CloseQuote.ToString ());  
Magic Number,NHibernate.JetDriver,JetDriver,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDriver.cs,TransformJoinBlock,The following statement contains a magic number: if (blockParts.Length > 1) {  	for (int i = 1; i < blockParts.Length; i++) {  		string part = blockParts [i];  		int parenthesisIndex = -1;  		if (part.EndsWith (" inner")) {  			parenthesisIndex = part.Length - 6;  		}  		else if (part.EndsWith (" left outer")) {  			parenthesisIndex = part.Length - 11;  		}  		else if (part.EndsWith (" right outer")) {  			parenthesisIndex = part.Length - 12;  		}  		if (parenthesisIndex == -1) {  			if (i < blockParts.Length - 1) {  				logger.Error ("Invalid join syntax. Could not parenthesize the join block properly.");  				throw new QueryException ("Invalid join syntax. Could not parenthesize the join block properly.");  			}  			//everything went ok. I'm processing the last block part and I've got no parenthesis to add.  			var b = new StringBuilder (" ");  			for (int j = 0; j < parenthesisCount; j++) {  				b.Append ("(");  			}  			b.Append (string.Join (" join"' blockParts));  			return b.ToString ();  		}  		else {  			parenthesisCount++;  			blockParts [i] = part.Insert (parenthesisIndex' ")");  		}  	}  	//the last block part contained the join. This should not happen.  	logger.Error ("Invalid join syntax. Could not parenthesize the join block properly.");  	throw new QueryException ("Invalid join syntax. Could not parenthesize the join block properly.");  }  else {  	return blockParts [0];  }  
Magic Number,NHibernate.JetDriver,JetDriver,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDriver.cs,TransformJoinBlock,The following statement contains a magic number: if (blockParts.Length > 1) {  	for (int i = 1; i < blockParts.Length; i++) {  		string part = blockParts [i];  		int parenthesisIndex = -1;  		if (part.EndsWith (" inner")) {  			parenthesisIndex = part.Length - 6;  		}  		else if (part.EndsWith (" left outer")) {  			parenthesisIndex = part.Length - 11;  		}  		else if (part.EndsWith (" right outer")) {  			parenthesisIndex = part.Length - 12;  		}  		if (parenthesisIndex == -1) {  			if (i < blockParts.Length - 1) {  				logger.Error ("Invalid join syntax. Could not parenthesize the join block properly.");  				throw new QueryException ("Invalid join syntax. Could not parenthesize the join block properly.");  			}  			//everything went ok. I'm processing the last block part and I've got no parenthesis to add.  			var b = new StringBuilder (" ");  			for (int j = 0; j < parenthesisCount; j++) {  				b.Append ("(");  			}  			b.Append (string.Join (" join"' blockParts));  			return b.ToString ();  		}  		else {  			parenthesisCount++;  			blockParts [i] = part.Insert (parenthesisIndex' ")");  		}  	}  	//the last block part contained the join. This should not happen.  	logger.Error ("Invalid join syntax. Could not parenthesize the join block properly.");  	throw new QueryException ("Invalid join syntax. Could not parenthesize the join block properly.");  }  else {  	return blockParts [0];  }  
Magic Number,NHibernate.JetDriver,JetDriver,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDriver.cs,TransformJoinBlock,The following statement contains a magic number: if (blockParts.Length > 1) {  	for (int i = 1; i < blockParts.Length; i++) {  		string part = blockParts [i];  		int parenthesisIndex = -1;  		if (part.EndsWith (" inner")) {  			parenthesisIndex = part.Length - 6;  		}  		else if (part.EndsWith (" left outer")) {  			parenthesisIndex = part.Length - 11;  		}  		else if (part.EndsWith (" right outer")) {  			parenthesisIndex = part.Length - 12;  		}  		if (parenthesisIndex == -1) {  			if (i < blockParts.Length - 1) {  				logger.Error ("Invalid join syntax. Could not parenthesize the join block properly.");  				throw new QueryException ("Invalid join syntax. Could not parenthesize the join block properly.");  			}  			//everything went ok. I'm processing the last block part and I've got no parenthesis to add.  			var b = new StringBuilder (" ");  			for (int j = 0; j < parenthesisCount; j++) {  				b.Append ("(");  			}  			b.Append (string.Join (" join"' blockParts));  			return b.ToString ();  		}  		else {  			parenthesisCount++;  			blockParts [i] = part.Insert (parenthesisIndex' ")");  		}  	}  	//the last block part contained the join. This should not happen.  	logger.Error ("Invalid join syntax. Could not parenthesize the join block properly.");  	throw new QueryException ("Invalid join syntax. Could not parenthesize the join block properly.");  }  else {  	return blockParts [0];  }  
Magic Number,NHibernate.JetDriver,JetDriver,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDriver.cs,TransformJoinBlock,The following statement contains a magic number: for (int i = 1; i < blockParts.Length; i++) {  	string part = blockParts [i];  	int parenthesisIndex = -1;  	if (part.EndsWith (" inner")) {  		parenthesisIndex = part.Length - 6;  	}  	else if (part.EndsWith (" left outer")) {  		parenthesisIndex = part.Length - 11;  	}  	else if (part.EndsWith (" right outer")) {  		parenthesisIndex = part.Length - 12;  	}  	if (parenthesisIndex == -1) {  		if (i < blockParts.Length - 1) {  			logger.Error ("Invalid join syntax. Could not parenthesize the join block properly.");  			throw new QueryException ("Invalid join syntax. Could not parenthesize the join block properly.");  		}  		//everything went ok. I'm processing the last block part and I've got no parenthesis to add.  		var b = new StringBuilder (" ");  		for (int j = 0; j < parenthesisCount; j++) {  			b.Append ("(");  		}  		b.Append (string.Join (" join"' blockParts));  		return b.ToString ();  	}  	else {  		parenthesisCount++;  		blockParts [i] = part.Insert (parenthesisIndex' ")");  	}  }  
Magic Number,NHibernate.JetDriver,JetDriver,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDriver.cs,TransformJoinBlock,The following statement contains a magic number: for (int i = 1; i < blockParts.Length; i++) {  	string part = blockParts [i];  	int parenthesisIndex = -1;  	if (part.EndsWith (" inner")) {  		parenthesisIndex = part.Length - 6;  	}  	else if (part.EndsWith (" left outer")) {  		parenthesisIndex = part.Length - 11;  	}  	else if (part.EndsWith (" right outer")) {  		parenthesisIndex = part.Length - 12;  	}  	if (parenthesisIndex == -1) {  		if (i < blockParts.Length - 1) {  			logger.Error ("Invalid join syntax. Could not parenthesize the join block properly.");  			throw new QueryException ("Invalid join syntax. Could not parenthesize the join block properly.");  		}  		//everything went ok. I'm processing the last block part and I've got no parenthesis to add.  		var b = new StringBuilder (" ");  		for (int j = 0; j < parenthesisCount; j++) {  			b.Append ("(");  		}  		b.Append (string.Join (" join"' blockParts));  		return b.ToString ();  	}  	else {  		parenthesisCount++;  		blockParts [i] = part.Insert (parenthesisIndex' ")");  	}  }  
Magic Number,NHibernate.JetDriver,JetDriver,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDriver.cs,TransformJoinBlock,The following statement contains a magic number: for (int i = 1; i < blockParts.Length; i++) {  	string part = blockParts [i];  	int parenthesisIndex = -1;  	if (part.EndsWith (" inner")) {  		parenthesisIndex = part.Length - 6;  	}  	else if (part.EndsWith (" left outer")) {  		parenthesisIndex = part.Length - 11;  	}  	else if (part.EndsWith (" right outer")) {  		parenthesisIndex = part.Length - 12;  	}  	if (parenthesisIndex == -1) {  		if (i < blockParts.Length - 1) {  			logger.Error ("Invalid join syntax. Could not parenthesize the join block properly.");  			throw new QueryException ("Invalid join syntax. Could not parenthesize the join block properly.");  		}  		//everything went ok. I'm processing the last block part and I've got no parenthesis to add.  		var b = new StringBuilder (" ");  		for (int j = 0; j < parenthesisCount; j++) {  			b.Append ("(");  		}  		b.Append (string.Join (" join"' blockParts));  		return b.ToString ();  	}  	else {  		parenthesisCount++;  		blockParts [i] = part.Insert (parenthesisIndex' ")");  	}  }  
Magic Number,NHibernate.JetDriver,JetDriver,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDriver.cs,TransformJoinBlock,The following statement contains a magic number: if (part.EndsWith (" inner")) {  	parenthesisIndex = part.Length - 6;  }  else if (part.EndsWith (" left outer")) {  	parenthesisIndex = part.Length - 11;  }  else if (part.EndsWith (" right outer")) {  	parenthesisIndex = part.Length - 12;  }  
Magic Number,NHibernate.JetDriver,JetDriver,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDriver.cs,TransformJoinBlock,The following statement contains a magic number: if (part.EndsWith (" inner")) {  	parenthesisIndex = part.Length - 6;  }  else if (part.EndsWith (" left outer")) {  	parenthesisIndex = part.Length - 11;  }  else if (part.EndsWith (" right outer")) {  	parenthesisIndex = part.Length - 12;  }  
Magic Number,NHibernate.JetDriver,JetDriver,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDriver.cs,TransformJoinBlock,The following statement contains a magic number: if (part.EndsWith (" inner")) {  	parenthesisIndex = part.Length - 6;  }  else if (part.EndsWith (" left outer")) {  	parenthesisIndex = part.Length - 11;  }  else if (part.EndsWith (" right outer")) {  	parenthesisIndex = part.Length - 12;  }  
Magic Number,NHibernate.JetDriver,JetDriver,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDriver.cs,TransformJoinBlock,The following statement contains a magic number: parenthesisIndex = part.Length - 6;  
Magic Number,NHibernate.JetDriver,JetDriver,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDriver.cs,TransformJoinBlock,The following statement contains a magic number: if (part.EndsWith (" left outer")) {  	parenthesisIndex = part.Length - 11;  }  else if (part.EndsWith (" right outer")) {  	parenthesisIndex = part.Length - 12;  }  
Magic Number,NHibernate.JetDriver,JetDriver,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDriver.cs,TransformJoinBlock,The following statement contains a magic number: if (part.EndsWith (" left outer")) {  	parenthesisIndex = part.Length - 11;  }  else if (part.EndsWith (" right outer")) {  	parenthesisIndex = part.Length - 12;  }  
Magic Number,NHibernate.JetDriver,JetDriver,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDriver.cs,TransformJoinBlock,The following statement contains a magic number: parenthesisIndex = part.Length - 11;  
Magic Number,NHibernate.JetDriver,JetDriver,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDriver.cs,TransformJoinBlock,The following statement contains a magic number: if (part.EndsWith (" right outer")) {  	parenthesisIndex = part.Length - 12;  }  
Magic Number,NHibernate.JetDriver,JetDriver,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDriver.cs,TransformJoinBlock,The following statement contains a magic number: parenthesisIndex = part.Length - 12;  
Missing Default,NHibernate.JetDriver,JetDbCommand,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.JetDriver\src\NHibernate.JetDriver\JetDbCommand.cs,CheckParameters,The following switch statement is missing a default case: switch (p.DbType) {  case DbType.DateTime:  case DbType.Time:  case DbType.Date:  	FixDateTimeValue (p);  	break;  case DbType.String:  	FixStringValue (p);  	break;  case DbType.Int64:  	FixLongValue (p);  	break;  case DbType.Decimal:  	FixDecimalValue (p);  	break;  }  
