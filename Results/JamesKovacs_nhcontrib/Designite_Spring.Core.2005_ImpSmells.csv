Implementation smell,Namespace,Class,File,Method,Description
Long Method,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,nextToken,The method has 242 lines of code.
Long Method,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mID,The method has 169 lines of code.
Long Method,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mNUMERIC_LITERAL,The method has 369 lines of code.
Long Method,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mHEX_DIGIT,The method has 104 lines of code.
Long Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,relationalOperator,The method has 111 lines of code.
Long Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The method has 172 lines of code.
Complex Method,Spring.Collections,PriorityQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Collections\PriorityQueue.cs,fixDown,Cyclomatic complexity of the method is 8
Complex Method,Spring.Context.Support,AbstractApplicationContext,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\AbstractApplicationContext.cs,InitMessageSource,Cyclomatic complexity of the method is 10
Complex Method,Spring.Core,MethodArgumentsCriteria,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\MethodArgumentsCriteria.cs,IsSatisfied,Cyclomatic complexity of the method is 14
Complex Method,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CreateRelative,Cyclomatic complexity of the method is 9
Complex Method,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CalculateResourcePath,Cyclomatic complexity of the method is 11
Complex Method,Spring.Core.TypeConversion,TypeConversionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\TypeConversionUtils.cs,ConvertValueIfNecessary,Cyclomatic complexity of the method is 16
Complex Method,Spring.Core.TypeConversion,CustomNumberConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\CustomNumberConverter.cs,ConvertFrom,Cyclomatic complexity of the method is 11
Complex Method,Spring.Core.TypeConversion,RegistryKeyConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\RegistryKeyConverter.cs,GetRootKey,Cyclomatic complexity of the method is 9
Complex Method,Spring.Core.TypeConversion,ResourceManagerConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\ResourceManagerConverter.cs,ConvertFrom,Cyclomatic complexity of the method is 8
Complex Method,Spring.Core.TypeResolution,GenericTypeResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeResolution\GenericTypeResolver.cs,Resolve,Cyclomatic complexity of the method is 8
Complex Method,Spring.Expressions,SelectionNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\SelectionNode.cs,Get,Cyclomatic complexity of the method is 8
Complex Method,Spring.Expressions,IndexerNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\IndexerNode.cs,Get,Cyclomatic complexity of the method is 12
Complex Method,Spring.Expressions,IndexerNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\IndexerNode.cs,Set,Cyclomatic complexity of the method is 11
Complex Method,Spring.Expressions,OpADD,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\OpADD.cs,Get,Cyclomatic complexity of the method is 10
Complex Method,Spring.Expressions,OpMULTIPLY,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\OpMULTIPLY.cs,Get,Cyclomatic complexity of the method is 9
Complex Method,Spring.Expressions,OpSUBTRACT,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\OpSUBTRACT.cs,Get,Cyclomatic complexity of the method is 13
Complex Method,Spring.Expressions,PropertyOrFieldNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\PropertyOrFieldNode.cs,InitializeNode,Cyclomatic complexity of the method is 10
Complex Method,Spring.Expressions,PropertyOrFieldNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\PropertyOrFieldNode.cs,SetPropertyOrFieldValue,Cyclomatic complexity of the method is 12
Complex Method,Spring.Expressions,PropertyOrFieldNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\PropertyOrFieldNode.cs,AddToCollections,Cyclomatic complexity of the method is 10
Complex Method,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,EqualsList,Cyclomatic complexity of the method is 8
Complex Method,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,Cyclomatic complexity of the method is 8
Complex Method,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,encode,Cyclomatic complexity of the method is 13
Complex Method,Spring.Expressions.Parser.antlr,DumpASTVisitor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\DumpASTVisitor.cs,visit,Cyclomatic complexity of the method is 9
Complex Method,Spring.Expressions.Parser.antlr,MismatchedCharException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\MismatchedCharException.cs,appendCharName,Cyclomatic complexity of the method is 17
Complex Method,Spring.Expressions.Parser.antlr,TokenStreamRewriteEngine,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\TokenStreamRewriteEngine.cs,ToString,Cyclomatic complexity of the method is 8
Complex Method,Spring.Expressions.Parser.antlr.collections.impl,BitSet,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\collections\impl\BitSet.cs,Equals,Cyclomatic complexity of the method is 10
Complex Method,Spring.Expressions.Parser.antlr.debug,InputBufferEventSupport,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\debug\InputBufferEventSupport.cs,fireEvent,Cyclomatic complexity of the method is 14
Complex Method,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,nextToken,Cyclomatic complexity of the method is 73
Complex Method,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mWS,Cyclomatic complexity of the method is 13
Complex Method,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mID,Cyclomatic complexity of the method is 130
Complex Method,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mNUMERIC_LITERAL,Cyclomatic complexity of the method is 78
Complex Method,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mEXPONENT_PART,Cyclomatic complexity of the method is 21
Complex Method,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mREAL_TYPE_SUFFIX,Cyclomatic complexity of the method is 15
Complex Method,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mINTEGER_TYPE_SUFFIX,Cyclomatic complexity of the method is 15
Complex Method,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mHEXADECIMAL_INTEGER_LITERAL,Cyclomatic complexity of the method is 8
Complex Method,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mHEX_DIGIT,Cyclomatic complexity of the method is 47
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,GetRelationalOperatorNodeType,Cyclomatic complexity of the method is 13
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,expression,Cyclomatic complexity of the method is 26
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,exprList,Cyclomatic complexity of the method is 10
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,relationalExpression,Cyclomatic complexity of the method is 10
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,sumExpr,Cyclomatic complexity of the method is 10
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,relationalOperator,Cyclomatic complexity of the method is 25
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,prodExpr,Cyclomatic complexity of the method is 15
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,unaryExpression,Cyclomatic complexity of the method is 14
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,primaryExpression,Cyclomatic complexity of the method is 9
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,unaryOperator,Cyclomatic complexity of the method is 9
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,Cyclomatic complexity of the method is 64
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,node,Cyclomatic complexity of the method is 30
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,methodOrProperty,Cyclomatic complexity of the method is 9
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,functionOrVar,Cyclomatic complexity of the method is 9
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,localFunctionOrVar,Cyclomatic complexity of the method is 9
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,reference,Cyclomatic complexity of the method is 14
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,literal,Cyclomatic complexity of the method is 17
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,constructor,Cyclomatic complexity of the method is 12
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,lambda,Cyclomatic complexity of the method is 9
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,attribute,Cyclomatic complexity of the method is 9
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,methodArgs,Cyclomatic complexity of the method is 10
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,ctorArgs,Cyclomatic complexity of the method is 10
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,argList,Cyclomatic complexity of the method is 8
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,arrayConstructor,Cyclomatic complexity of the method is 10
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,arrayRank,Cyclomatic complexity of the method is 10
Complex Method,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,namedArgument,Cyclomatic complexity of the method is 9
Complex Method,Spring.Expressions.Processors,OrderByProcessor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Processors\OrderByProcessor.cs,Process,Cyclomatic complexity of the method is 8
Complex Method,Spring.Globalization.Localizers,ResourceSetLocalizer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Globalization\Localizers\ResourceSetLocalizer.cs,LoadResources,Cyclomatic complexity of the method is 8
Complex Method,Spring.Objects.Factory.Config,ManagedDictionary,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ManagedDictionary.cs,Resolve,Cyclomatic complexity of the method is 9
Complex Method,Spring.Objects.Factory.Config,ObjectDefinitionVisitor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ObjectDefinitionVisitor.cs,ResolveValue,Cyclomatic complexity of the method is 13
Complex Method,Spring.Objects.Factory.Config,ObjectDefinitionVisitor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ObjectDefinitionVisitor.cs,VisitManagedDictionary,Cyclomatic complexity of the method is 8
Complex Method,Spring.Objects.Factory.Config,ConfigurationReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ConfigurationReader.cs,GetSectionFromXmlDocument,Cyclomatic complexity of the method is 10
Complex Method,Spring.Objects.Factory.Config,ConstructorArgumentValues,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ConstructorArgumentValues.cs,GetGenericArgumentValue,Cyclomatic complexity of the method is 8
Complex Method,Spring.Objects.Factory.Config,FieldRetrievingFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\FieldRetrievingFactoryObject.cs,AfterPropertiesSet,Cyclomatic complexity of the method is 8
Complex Method,Spring.Objects.Factory.Config,PropertyResourceConfigurer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\PropertyResourceConfigurer.cs,LoadProperties,Cyclomatic complexity of the method is 10
Complex Method,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,AutowireConstructor,Cyclomatic complexity of the method is 13
Complex Method,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,InstantiateUsingFactoryMethod,Cyclomatic complexity of the method is 11
Complex Method,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,CreateArgumentArray,Cyclomatic complexity of the method is 10
Complex Method,Spring.Objects.Factory.Support,ObjectDefinitionValueResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ObjectDefinitionValueResolver.cs,ResolvePropertyValue,Cyclomatic complexity of the method is 15
Complex Method,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,GetTypeForFactoryMethod,Cyclomatic complexity of the method is 8
Complex Method,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,PopulateObject,Cyclomatic complexity of the method is 17
Complex Method,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,InstantiateObject,Cyclomatic complexity of the method is 13
Complex Method,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,InvokeInitMethods,Cyclomatic complexity of the method is 8
Complex Method,Spring.Objects.Factory.Support,AbstractObjectDefinition,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectDefinition.cs,OverrideFrom,Cyclomatic complexity of the method is 10
Complex Method,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,GetObjectForInstance,Cyclomatic complexity of the method is 14
Complex Method,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,GetObjectFromFactoryObject,Cyclomatic complexity of the method is 9
Complex Method,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,IsTypeMatch,Cyclomatic complexity of the method is 8
Complex Method,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,IsSingleton,Cyclomatic complexity of the method is 8
Complex Method,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,GetObjectInternal,Cyclomatic complexity of the method is 14
Complex Method,Spring.Objects.Factory.Support,AutowireUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AutowireUtils.cs,GetTypeDifferenceWeight,Cyclomatic complexity of the method is 8
Complex Method,Spring.Objects.Factory.Support,DefaultListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs,PreInstantiateSingletons,Cyclomatic complexity of the method is 8
Complex Method,Spring.Objects.Factory.Support,DefaultListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs,DoGetObjectNamesForType,Cyclomatic complexity of the method is 13
Complex Method,Spring.Objects.Factory.Support,DefaultListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs,ResolveDependency,Cyclomatic complexity of the method is 11
Complex Method,Spring.Objects.Factory.Support,ObjectDefinitionReaderUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ObjectDefinitionReaderUtils.cs,GenerateObjectName,Cyclomatic complexity of the method is 8
Complex Method,Spring.Objects.Factory.Support,PropertiesObjectDefinitionReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\PropertiesObjectDefinitionReader.cs,RegisterObjectDefinitions,Cyclomatic complexity of the method is 8
Complex Method,Spring.Objects.Factory.Support,PropertiesObjectDefinitionReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\PropertiesObjectDefinitionReader.cs,RegisterObjectDefinition,Cyclomatic complexity of the method is 15
Complex Method,Spring.Objects.Factory.Xml,ObjectDefinitionParserHelper,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectDefinitionParserHelper.cs,ParseObjectDefinitionElement,Cyclomatic complexity of the method is 11
Complex Method,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseEventListenerDefinition,Cyclomatic complexity of the method is 9
Complex Method,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseObjectDefinitionElement,Cyclomatic complexity of the method is 16
Complex Method,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseConstructorArgElement,Cyclomatic complexity of the method is 10
Complex Method,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParsePropertyValue,Cyclomatic complexity of the method is 8
Complex Method,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParsePropertySubElement,Cyclomatic complexity of the method is 23
Complex Method,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseDictionaryElement,Cyclomatic complexity of the method is 13
Complex Method,Spring.Objects.Factory.Xml,NamespaceParserRegistry,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\NamespaceParserRegistry.cs,RegisterParser,Cyclomatic complexity of the method is 8
Complex Method,Spring.Objects,ObjectWrapper,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\ObjectWrapper.cs,SetPropertyValues,Cyclomatic complexity of the method is 8
Complex Method,Spring.Objects.Support,MethodInvoker,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Support\MethodInvoker.cs,FindTheMethodToInvoke,Cyclomatic complexity of the method is 8
Complex Method,Spring.Proxy,AbstractProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Proxy\AbstractProxyTypeBuilder.cs,GetMethodAttributes,Cyclomatic complexity of the method is 9
Complex Method,Spring.Reflection.Dynamic,DynamicReflectionManager,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Reflection\Dynamic\DynamicReflectionManager.cs,EmitConstant,Cyclomatic complexity of the method is 14
Complex Method,Spring.Util,ArrayUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ArrayUtils.cs,AreEqual,Cyclomatic complexity of the method is 8
Complex Method,Spring.Util,CollectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\CollectionUtils.cs,RemoveAll,Cyclomatic complexity of the method is 8
Complex Method,Spring.Util,PathMatcher,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\PathMatcher.cs,BuildRegex,Cyclomatic complexity of the method is 11
Complex Method,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,GetMethodBaseByArgumentValues,Cyclomatic complexity of the method is 12
Complex Method,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,CreateCustomAttribute,Cyclomatic complexity of the method is 14
Complex Method,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,CreateCustomAttribute,Cyclomatic complexity of the method is 11
Complex Method,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,Split,Cyclomatic complexity of the method is 12
Complex Method,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,MakeDelimiterPositionList,Cyclomatic complexity of the method is 10
Complex Method,Spring.Validation.Config,ValidationNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Config\ValidationNamespaceParser.cs,ParseValidator,Cyclomatic complexity of the method is 23
Long Parameter List,Spring.Context.Support,ContextHandler,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\ContextHandler.cs,InstantiateContext,The method has 6 parameters.
Long Parameter List,Spring.Context.Support,XmlApplicationContext,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\XmlApplicationContext.cs,XmlApplicationContext,The method has 5 parameters.
Long Parameter List,Spring.Expressions.Parser.antlr,MismatchedCharException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\MismatchedCharException.cs,MismatchedCharException,The method has 5 parameters.
Long Parameter List,Spring.Expressions.Parser.antlr,MismatchedTokenException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\MismatchedTokenException.cs,MismatchedTokenException,The method has 5 parameters.
Long Parameter List,Spring.Expressions.Parser.antlr,MismatchedTokenException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\MismatchedTokenException.cs,MismatchedTokenException,The method has 6 parameters.
Long Parameter List,Spring.Expressions.Parser.antlr,MismatchedTokenException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\MismatchedTokenException.cs,MismatchedTokenException,The method has 5 parameters.
Long Parameter List,Spring.Expressions.Parser.antlr,MismatchedTokenException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\MismatchedTokenException.cs,MismatchedTokenException,The method has 5 parameters.
Long Parameter List,Spring.Expressions.Parser.antlr.debug,MatchEventArgs,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\debug\ParserMatchEventArgs.cs,MatchEventArgs,The method has 7 parameters.
Long Parameter List,Spring.Expressions.Parser.antlr.debug,MatchEventArgs,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\debug\ParserMatchEventArgs.cs,setValues,The method has 7 parameters.
Long Parameter List,Spring.Objects.Factory.Config,ICustomValueReferenceHolder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ICustomValueReferenceHolder.cs,Resolve,The method has 5 parameters.
Long Parameter List,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,CreateArgumentArray,The method has 8 parameters.
Long Parameter List,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,ResolveConstructorArguments,The method has 5 parameters.
Long Parameter List,Spring.Objects.Factory.Support,ObjectDefinitionValueResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ObjectDefinitionValueResolver.cs,ResolveInnerObjectDefinition,The method has 5 parameters.
Long Parameter List,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,InstantiateObject,The method has 5 parameters.
Long Parameter List,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,InstantiateObject,The method has 5 parameters.
Long Parameter List,Spring.Objects.Factory.Support,IInstantiationStrategy,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\IInstantiationStrategy.cs,Instantiate,The method has 5 parameters.
Long Parameter List,Spring.Objects.Factory.Support,IInstantiationStrategy,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\IInstantiationStrategy.cs,Instantiate,The method has 5 parameters.
Long Parameter List,Spring.Objects.Factory.Support,MethodInjectingInstantiationStrategy,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\MethodInjectingInstantiationStrategy.cs,InstantiateWithMethodInjection,The method has 5 parameters.
Long Parameter List,Spring.Objects.Factory.Support,MethodInjectingInstantiationStrategy,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\MethodInjectingInstantiationStrategy.cs,DoInstantiate,The method has 5 parameters.
Long Parameter List,Spring.Objects.Factory.Support,SimpleInstantiationStrategy,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\SimpleInstantiationStrategy.cs,Instantiate,The method has 5 parameters.
Long Parameter List,Spring.Objects.Factory.Support,SimpleInstantiationStrategy,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\SimpleInstantiationStrategy.cs,Instantiate,The method has 5 parameters.
Long Parameter List,Spring.Objects.Factory.Support,SimpleInstantiationStrategy,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\SimpleInstantiationStrategy.cs,InstantiateWithMethodInjection,The method has 5 parameters.
Long Parameter List,Spring.Objects.Factory,ObjectCreationException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\ObjectCreationException.cs,GetObjectCreationException,The method has 5 parameters.
Long Parameter List,Spring.Objects.Factory,UnsatisfiedDependencyException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\UnsatisfiedDependencyException.cs,UnsatisfiedDependencyException,The method has 5 parameters.
Long Parameter List,Spring.Proxy,AbstractProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Proxy\AbstractProxyTypeBuilder.cs,ImplementInterface,The method has 5 parameters.
Long Parameter List,Spring.Reflection.Dynamic,DynamicReflectionManager,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Reflection\Dynamic\DynamicReflectionManager.cs,CreateDynamicMethod,The method has 5 parameters.
Long Parameter List,Spring.Reflection.Dynamic,DynamicReflectionManager,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Reflection\Dynamic\DynamicReflectionManager.cs,CreateDynamicMethodInternal,The method has 5 parameters.
Long Parameter List,Spring.Util,ConfigXmlAttribute,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ConfigXmlAttribute.cs,ConfigXmlAttribute,The method has 5 parameters.
Long Parameter List,Spring.Util,ConfigXmlElement,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ConfigXmlElement.cs,ConfigXmlElement,The method has 5 parameters.
Long Parameter List,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,Split,The method has 5 parameters.
Long Identifier,Spring.Context.Support,AbstractApplicationContext,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\AbstractApplicationContext.cs,InvokeObjectFactoryPostProcessors,The length of the parameter nonOrderedFactoryProcessorNames is 31.
Long Identifier,Spring.Context.Support,AbstractApplicationContext,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\AbstractApplicationContext.cs,RefreshObjectPostProcessorChecker,The length of the parameter registeredObjectPostProcessorCount is 34.
Long Identifier,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,AutowireConstructor,The length of the parameter unsatisfiedDependencyExceptionData is 34.
Long Identifier,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,InstantiateUsingFactoryMethod,The length of the parameter unsatisfiedDependencyExceptionData is 34.
Long Identifier,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,CreateArgumentArray,The length of the parameter unsatisfiedDependencyExceptionData is 34.
Long Identifier,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,PopulateObject,The length of the parameter continueWithPropertyPopulation is 30.
Long Identifier,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,PopulateObject,The length of the parameter instantiationAwareObjectPostProcessor is 37.
Long Identifier,Spring.Objects.Events.Support,EventManipulationUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Events\Support\EventManipulationUtils.cs,GetHandlerDelegate,The length of the parameter targetSubscriberDelegateMethod is 30.
Long Identifier,Spring.Util,ConfigXmlAttribute,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ConfigXmlAttribute.cs,ConfigXmlAttribute,The length of the parameter currentTextPositionPositionInfo is 31.
Long Identifier,Spring.Util,ConfigXmlElement,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ConfigXmlElement.cs,ConfigXmlElement,The length of the parameter currentTextPositionPositionInfo is 31.
Long Statement,Spring.Collections,PriorityQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Collections\PriorityQueue.cs,grow,The length of the statement  "		throw new InvalidOperationException ("Cannot grow queue to accomdate index " + index + ".  Doing so would result in a memory overflow."); " is 137.
Long Statement,Spring.Context.Support,AbstractApplicationContext,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\AbstractApplicationContext.cs,OnContextEvent,The length of the statement  "		throw new ApplicationContextException (string.Format ("An unhandled exception occured during processing application event {0} in handler {1}"' e.GetType ()' target.Method)' exception); " is 184.
Long Statement,Spring.Context.Support,AbstractApplicationContext,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\AbstractApplicationContext.cs,InvokeObjectFactoryPostProcessors,The length of the statement  "		log.Debug (string.Format (CultureInfo.InvariantCulture' "processed {0} IFactoryObjectPostProcessors defined in application context [{1}]."' factoryProcessorNames.Length' Name)); " is 177.
Long Statement,Spring.Context.Support,AbstractApplicationContext,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\AbstractApplicationContext.cs,RegisterObjectPostProcessors,The length of the statement  "		log.Debug (string.Format (CultureInfo.InvariantCulture' "processed {0} IObjectPostProcessors defined in application context [{1}]."' objectProcessors.Count' Name)); " is 164.
Long Statement,Spring.Context.Support,AbstractApplicationContext,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\AbstractApplicationContext.cs,InitEventRegistry,The length of the statement  "				log.Warn (string.Format ("Found object in context named '{0}' : this name " + "is typically reserved for IEventRegistry objects. " + "Falling back to default '{1}'."' EventRegistryObjectName' EventRegistry)); " is 208.
Long Statement,Spring.Context.Support,AbstractApplicationContext,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\AbstractApplicationContext.cs,InitEventRegistry,The length of the statement  "			log.Debug (string.Format ("No IEventRegistry found with name '{0}' : using default '{1}'."' EventRegistryObjectName' EventRegistry)); " is 133.
Long Statement,Spring.Context.Support,AbstractApplicationContext,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\AbstractApplicationContext.cs,InitMessageSource,The length of the statement  "				log.Warn (string.Format ("Found object in context named '{0}' : this name " + "is typically reserved for IMessageSource objects. " + "Falling back to default '{1}'."' MessageSourceObjectName' MessageSource)); " is 208.
Long Statement,Spring.Context.Support,AbstractApplicationContext,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\AbstractApplicationContext.cs,InitMessageSource,The length of the statement  "			log.Debug (string.Format ("No message source found in the current context: using parent context's message source '{0}'."' MessageSource)); " is 138.
Long Statement,Spring.Context.Support,AbstractApplicationContext,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\AbstractApplicationContext.cs,InitMessageSource,The length of the statement  "			log.Debug (string.Format ("No IMessageSource found with name '{0}' : using default '{1}'."' MessageSourceObjectName' MessageSource)); " is 133.
Long Statement,Spring.Context.Support,AbstractApplicationContext,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\AbstractApplicationContext.cs,Refresh,The length of the statement  "			log.Debug (string.Format ("ApplicationContext Refresh: Post processing object factory using pre-registered processors")); " is 121.
Long Statement,Spring.Context.Support,AbstractApplicationContext,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\AbstractApplicationContext.cs,Refresh,The length of the statement  "			log.Debug (string.Format (CultureInfo.InvariantCulture' "{0} objects defined in application context [{1}]."' ObjectDefinitionCount == 0 ? "No" : ObjectDefinitionCount.ToString ()' Name)); " is 187.
Long Statement,Spring.Context.Support,AbstractXmlApplicationContext,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\AbstractXmlApplicationContext.cs,RefreshObjectFactory,The length of the statement  "		throw new ApplicationContextException (string.Format ("I/O error parsing XML resource for application context '{0}'."' Name)' ex); " is 130.
Long Statement,Spring.Context.Support,AbstractXmlApplicationContext,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\AbstractXmlApplicationContext.cs,RefreshObjectFactory,The length of the statement  "		throw new ApplicationContextException (string.Format ("Error parsing resource locations [{0}] for application context '{1}'."' StringUtils.ArrayToCommaDelimitedString (ConfigurationLocations)' Name)' ex); " is 204.
Long Statement,Spring.Context.Support,ContextHandler,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\ContextHandler.cs,Create,The length of the statement  "		throw ConfigurationUtils.CreateConfigurationException (String.Format ("Parent context must be of type IApplicationContext' but was '{0}'"' parent.GetType ().FullName)); " is 168.
Long Statement,Spring.Context.Support,ContextHandler,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\ContextHandler.cs,Create,The length of the statement  "			throw ConfigurationUtils.CreateConfigurationException (String.Format ("Error creating context '{0}': {1}"' contextName' ReflectionUtils.GetExplicitBaseException (ex).Message)' ex); " is 180.
Long Statement,Spring.Context.Support,ContextRegistry,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\ContextRegistry.cs,RegisterContext,The length of the statement  "			throw new ApplicationContextException (string.Format ("Existing context '{0}' already registered under name '{1}'."' ctx' context.Name)); " is 137.
Long Statement,Spring.Context.Support,ContextRegistry,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\ContextRegistry.cs,GetContext,The length of the statement  "			throw new ApplicationContextException ("No context registered. Use the 'RegisterContext' method or the 'spring/context' section from your configuration file."); " is 160.
Long Statement,Spring.Context.Support,ContextRegistry,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\ContextRegistry.cs,GetContext,The length of the statement  "				throw new ApplicationContextException (String.Format ("No context registered under name '{0}'. Use the 'RegisterContext' method or the 'spring/context' section from your configuration file."' name)); " is 199.
Long Statement,Spring.Context.Support,ContextRegistry,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\ContextRegistry.cs,Clear,The length of the statement  "				log.Warn (String.Format ("Not all contexts were removed from registry during cleanup - did you forget to call base.Dispose() when overriding AbstractApplicationContext.Dispose()?")); " is 182.
Long Statement,Spring.Context.Support,ContextRegistry,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\ContextRegistry.cs,InitializeContextIfNeeded,The length of the statement  "			throw new InvalidOperationException ("root context is currently in creation. You must not call ContextRegistry.GetContext() from e.g. constructors of your singleton objects"); " is 175.
Long Statement,Spring.Context.Support,NamespaceParsersSectionHandler,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\NamespaceParsersSectionHandler.cs,GetRequiredAttributeValue,The length of the statement  "		string errorMessage = string.Format (CultureInfo.InvariantCulture' "The '{0}' attribute is required for the <parser/> element."' requiredAttributeName); " is 152.
Long Statement,Spring.Context.Support,GenericApplicationContext,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\GenericApplicationContext.cs,RefreshObjectFactory,The length of the statement  "		throw new InvalidOperationException ("GenericApplicationContext does not support multiple refresh attempts: just call 'refresh' once"); " is 135.
Long Statement,Spring.Context.Support,TypeConvertersSectionHandler,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\TypeConvertersSectionHandler.cs,GetRequiredAttributeValue,The length of the statement  "		string errorMessage = string.Format (CultureInfo.InvariantCulture' "The '{0}' attribute is required for the <converter> element."' requiredAttributeName); " is 154.
Long Statement,Spring.Context.Support,ResourceSetMessageSource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\ResourceSetMessageSource.cs,AfterPropertiesSet,The length of the statement  "			throw new ArgumentException ("Only Types of string and ResourceManager are allowed.  Type " + o.GetType () + " was set instead."); " is 130.
Long Statement,Spring.Context.Support,ResourceHandlersSectionHandler,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\ResourceHandlersSectionHandler.cs,GetRequiredAttributeValue,The length of the statement  "		string errorMessage = string.Format (CultureInfo.InvariantCulture' "The '{0}' attribute is required for the resource handler definition."' requiredAttributeName); " is 162.
Long Statement,Spring.Context.Support,StaticApplicationContext,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\StaticApplicationContext.cs,RegisterPrototype,The length of the statement  "	DefaultListableObjectFactory.RegisterObjectDefinition (name' new RootObjectDefinition (classType' propertyValues' false)); " is 122.
Long Statement,Spring.Context.Support,TypeAliasesSectionHandler,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\TypeAliasesSectionHandler.cs,GetRequiredAttributeValue,The length of the statement  "		string errorMessage = string.Format (CultureInfo.InvariantCulture' "The '{0}' attribute is required for the (type) <alias/> element."' requiredAttributeName); " is 158.
Long Statement,Spring.Context.Support,ReferenceNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\ReferenceNode.cs,Get,The length of the statement  "		IObjectFactory currentObjectFactory = (evalContext.Variables != null) ? (IObjectFactory)evalContext.Variables [Expression.ReservedVariableNames.CurrentObjectFactory] : null; " is 173.
Long Statement,Spring.Core,MethodParameter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\MethodParameter.cs,ForMethodOrConstructor,The length of the statement  "		throw new ArgumentException ("Given object [" + methodOrConstructorInfo + "] is nieth a MethodInfo nor a ConstructorInfo"); " is 123.
Long Statement,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CreateRelative,The length of the statement  "		throw new NotSupportedException (GetType ().Name + " does not support relative resources. Please use fully qualified resource name."); " is 134.
Long Statement,Spring.Core.IO,AssemblyResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AssemblyResource.cs,IsRelativeResource,The length of the statement  "	return (resourceName.StartsWith ("./") || resourceName.StartsWith ("/") || resourceName.StartsWith ("../") || resourceName.Split ('/').Length != 3); " is 148.
Long Statement,Spring.Core.IO,FileSystemResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\FileSystemResource.cs,ResolveRootLocation,The length of the statement  "	if (root.Length > 0 && (root.EndsWith (Path.DirectorySeparatorChar.ToString ()) || root.EndsWith (Path.AltDirectorySeparatorChar.ToString ()))) { " is 145.
Long Statement,Spring.Core.IO,ResourceConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\ResourceConverter.cs,ResolvePath,The length of the statement  "				_log.Warn (string.Format (CultureInfo.InvariantCulture' "Could not resolve placeholder '{0}' in resource path " + "'{1}' as an environment variable."' expression' path)); " is 170.
Long Statement,Spring.Core.IO,ResourceHandlerRegistry,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\ResourceHandlerRegistry.cs,RegisterResourceHandler,The length of the statement  "		throw new ArgumentException (string.Format ("[{0}] does not implement [{1}] interface (it must)."' handlerType.FullName' typeof(IResource).FullName)); " is 150.
Long Statement,Spring.Core.IO,ResourceHandlerRegistry,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\ResourceHandlerRegistry.cs,GetResourceConstructor,The length of the statement  "		throw new ArgumentException (string.Format ("[{0}] does not have a constructor that takes a single string as an argument (it must)."' handlerType.FullName)); " is 157.
Long Statement,Spring.Core.TypeConversion,TypeConversionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\TypeConversionUtils.cs,ConvertValueIfNecessary,The length of the statement  "		if (newValue == null && (requiredType == null || !Type.GetType ("System.Nullable`1").Equals (requiredType.GetGenericTypeDefinition ()))) " is 136.
Long Statement,Spring.Core.TypeConversion,ResourceManagerConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\ResourceManagerConverter.cs,ConvertFrom,The length of the statement  "			throw new ArgumentException ("The string to specify a ResourceManager must be a comma delimited list of length two.  i.e. resourcename' assembly parial name."); " is 160.
Long Statement,Spring.Core.TypeConversion,ResourceManagerConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\ResourceManagerConverter.cs,ConvertFrom,The length of the statement  "				PropertyInfo resourceManagerProperty = globalResourcesType.GetProperty ("ResourceManager"' BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Static); " is 159.
Long Statement,Spring.Core.TypeConversion,TypeConverterRegistry,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\TypeConverterRegistry.cs,RegisterConverter,The length of the statement  "			throw new ArgumentException ("Type specified as a 'converterTypeName' does not inherit from System.ComponentModel.TypeConverter"); " is 130.
Long Statement,Spring.Core.TypeConversion,UniqueKeyConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\UniqueKeyConverter.cs,ConvertFrom,The length of the statement  "		throw new NotSupportedException (string.Format ("Conversion from value of type '{0}' is not supported"' value.GetType ().FullName)); " is 132.
Long Statement,Spring.Core.TypeConversion,UniqueKeyConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\UniqueKeyConverter.cs,ConvertFrom,The length of the statement  "	throw new NotSupportedException (string.Format ("Cannot convert from value of type '{0}' to '{1}'"' value.GetType ().FullName' typeof(UniqueKey).FullName)); " is 156.
Long Statement,Spring.Core.TypeConversion,UniqueKeyConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\UniqueKeyConverter.cs,ConvertTo,The length of the statement  "		throw new NotSupportedException (string.Format ("conversion to destinationType '{0}' is not supported."' destinationType.FullName)); " is 132.
Long Statement,Spring.Core.TypeConversion,UniqueKeyConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\UniqueKeyConverter.cs,ConvertTo,The length of the statement  "	throw new NotSupportedException (string.Format ("destinationType must be '{0}' but was '{1}'"' typeof(string).FullName' destinationType)); " is 138.
Long Statement,Spring.Core.TypeResolution,TypeAssemblyHolder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeResolution\TypeAssemblyHolder.cs,SplitTypeAndAssemblyNames,The length of the statement  "	// Spring.Objects.TestGenericObject`2[[System.Int32' mscorlib' Version=2.0.0.0' Culture=neutral' PublicKeyToken=b77a5c561934e089]'[System.String' mscorlib' Version=2.0.0.0' Culture=neutral' PublicKeyToken=b77a5c561934e089]][] ' Spring.Core.Tests' Version=0.0.0.0' Culture=neutral' PublicKeyToken=null " is 300.
Long Statement,Spring.Core.TypeResolution,TypeResolutionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeResolution\TypeResolutionUtils.cs,ResolveInterfaceArray,The length of the statement  "			throw new ArgumentException (string.Format (CultureInfo.InvariantCulture' "[{0}] is a class."' resolvedInterface.FullName)); " is 124.
Long Statement,Spring.Core.TypeResolution,TypeResolutionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeResolution\TypeResolutionUtils.cs,MethodMatch,The length of the statement  "		string[] paramTypes = (parameters.Length == 0) ? new string[0] : StringUtils.DelimitedListToStringArray (parameters' "'"); " is 122.
Long Statement,Spring.Core.TypeResolution,TypeResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeResolution\TypeResolver.cs,Resolve,The length of the statement  "		type = (typeInfo.IsAssemblyQualified) ? LoadTypeDirectlyFromAssembly (typeInfo) : LoadTypeByIteratingOverAllLoadedAssemblies (typeInfo); " is 136.
Long Statement,Spring.DataBinding,AbstractSimpleBinding,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\DataBinding\AbstractSimpleBinding.cs,BindSourceToTarget,The length of the statement  "	if (this.IsValid (validationErrors) && (this.Direction == BindingDirection.Bidirectional || this.Direction == BindingDirection.SourceToTarget)) { " is 145.
Long Statement,Spring.DataBinding,AbstractSimpleBinding,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\DataBinding\AbstractSimpleBinding.cs,BindTargetToSource,The length of the statement  "	if (this.IsValid (validationErrors) && (this.Direction == BindingDirection.Bidirectional || this.Direction == BindingDirection.TargetToSource)) { " is 145.
Long Statement,Spring.Expressions,BaseNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\BaseNode.cs,Set,The length of the statement  "	throw new NotSupportedException ("You cannot set the value for the node of this type: [" + this.GetType ().Name + "]."); " is 120.
Long Statement,Spring.Expressions,ConstructorNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\ConstructorNode.cs,Get,The length of the statement  "	object[] paramValues = (isParamArray ? ReflectionUtils.PackageParamArray (argValues' argumentCount' paramArrayType) : argValues); " is 129.
Long Statement,Spring.Expressions,ConstructorNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\ConstructorNode.cs,InitializeNode,The length of the statement  "		throw new ArgumentException (String.Format ("Constructor for the type [{0}] with a specified " + "number and types of arguments does not exist."' objectType.FullName)); " is 168.
Long Statement,Spring.Expressions,LambdaExpressionNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\LambdaExpressionNode.cs,Get,The length of the statement  "		throw new ArgumentMismatchException (string.Format ("Invalid number of arguments - expected {0} arguments' but was called with {1}"' argNames.Length' argValues.Length)); " is 169.
Long Statement,Spring.Expressions,SelectionNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\SelectionNode.cs,Get,The length of the statement  "	int minIndex = (int)((minIndexExpression == null) ? Int32.MinValue : GetValue (minIndexExpression' context' evalContext)); " is 122.
Long Statement,Spring.Expressions,SelectionNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\SelectionNode.cs,Get,The length of the statement  "	int maxIndex = (int)((maxIndexExpression == null) ? Int32.MaxValue : GetValue (maxIndexExpression' context' evalContext)); " is 122.
Long Statement,Spring.Expressions,Expression,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Expression.cs,Set,The length of the statement  "				throw new NotWritablePropertyException ("Cannot read the value of '" + node.getText () + "' property in the expression."' e); " is 125.
Long Statement,Spring.Expressions,Expression,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Expression.cs,GetPropertyInfo,The length of the statement  "			throw new FatalReflectionException ("Cannot obtain PropertyInfo from an expression that does not resolve to a property or an indexer."); " is 136.
Long Statement,Spring.Expressions,IndexerNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\IndexerNode.cs,Get,The length of the statement  "		throw new NullValueInNestedPathException ("Cannot retrieve the value of the indexer because the context for its resolution is null."); " is 134.
Long Statement,Spring.Expressions,IndexerNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\IndexerNode.cs,Get,The length of the statement  "		throw new InvalidPropertyException (evalContext.RootContextType' this.ToString ()' "Getter for indexer threw an exception."' e); " is 128.
Long Statement,Spring.Expressions,IndexerNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\IndexerNode.cs,Get,The length of the statement  "		throw new InvalidPropertyException (evalContext.RootContextType' this.ToString ()' "Illegal attempt to get value for the indexer."' e); " is 135.
Long Statement,Spring.Expressions,IndexerNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\IndexerNode.cs,Set,The length of the statement  "		throw new NullValueInNestedPathException ("Cannot set the value of the indexer because the context for its resolution is null."); " is 129.
Long Statement,Spring.Expressions,IndexerNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\IndexerNode.cs,Set,The length of the statement  "		throw new InvalidPropertyException (evalContext.RootContextType' this.ToString ()' "Setter for indexer threw an exception."' e); " is 128.
Long Statement,Spring.Expressions,IndexerNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\IndexerNode.cs,Set,The length of the statement  "		throw new InvalidPropertyException (evalContext.RootContextType' this.ToString ()' "Illegal attempt to set value for the indexer."' e); " is 135.
Long Statement,Spring.Expressions,MethodNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\MethodNode.cs,Get,The length of the statement  "				object[] paramValues = (cachedIsParamArray) ? ReflectionUtils.PackageParamArray (argValues' argumentCount' paramArrayType) : argValues; " is 135.
Long Statement,Spring.Expressions,MethodNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\MethodNode.cs,Get,The length of the statement  "	throw new ArgumentException (string.Format ("Method '{0}' with the specified number and types of arguments does not exist."' methodName)); " is 138.
Long Statement,Spring.Expressions,NodeWithArguments,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\NodeWithArguments.cs,AssertArgumentCount,The length of the statement  "		throw new ArgumentException ("This expression node requires exactly " + requiredCount + " argument(s) and " + args.Length + " were specified."); " is 144.
Long Statement,Spring.Expressions,OpADD,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\OpADD.cs,Get,The length of the statement  "		throw new ArgumentException ("Cannot add instances of '" + left.GetType ().FullName + "' and '" + right.GetType ().FullName + "'."); " is 132.
Long Statement,Spring.Expressions,OpDIVIDE,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\OpDIVIDE.cs,Get,The length of the statement  "		throw new ArgumentException ("Cannot divide instances of '" + left.GetType ().FullName + "' and '" + right.GetType ().FullName + "'."); " is 135.
Long Statement,Spring.Expressions,OpMODULUS,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\OpMODULUS.cs,Get,The length of the statement  "		throw new ArgumentException ("Cannot calculate modulus for instances of '" + leftVal.GetType ().FullName + "' and '" + rightVal.GetType ().FullName + "'."); " is 156.
Long Statement,Spring.Expressions,OpMULTIPLY,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\OpMULTIPLY.cs,Get,The length of the statement  "			throw new ArgumentException ("Cannot subtract instances of '" + left.GetType ().FullName + "' and '" + right.GetType ().FullName + "'."); " is 137.
Long Statement,Spring.Expressions,OpMULTIPLY,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\OpMULTIPLY.cs,Get,The length of the statement  "			throw new ArgumentException ("Cannot subtract instances of '" + left.GetType ().FullName + "' and '" + right.GetType ().FullName + "'."); " is 137.
Long Statement,Spring.Expressions,OpMULTIPLY,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\OpMULTIPLY.cs,Get,The length of the statement  "		throw new ArgumentException ("Cannot multiply instances of '" + left.GetType ().FullName + "' and '" + right.GetType ().FullName + "'."); " is 137.
Long Statement,Spring.Expressions,OpPOWER,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\OpPOWER.cs,Get,The length of the statement  "		throw new ArgumentException ("Cannot calculate exponent for the instances of '" + left.GetType ().FullName + "' and '" + right.GetType ().FullName + "'."); " is 155.
Long Statement,Spring.Expressions,OpSUBTRACT,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\OpSUBTRACT.cs,Get,The length of the statement  "			throw new ArgumentException ("Cannot subtract instances of '" + left.GetType ().FullName + "' and '" + right.GetType ().FullName + "'."); " is 137.
Long Statement,Spring.Expressions,OpSUBTRACT,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\OpSUBTRACT.cs,Get,The length of the statement  "			throw new ArgumentException ("Cannot subtract instances of '" + left.GetType ().FullName + "' and '" + right.GetType ().FullName + "'."); " is 137.
Long Statement,Spring.Expressions,OpSUBTRACT,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\OpSUBTRACT.cs,Get,The length of the statement  "		throw new ArgumentException ("Cannot subtract instances of '" + left.GetType ().FullName + "' and '" + right.GetType ().FullName + "'."); " is 137.
Long Statement,Spring.Expressions,PropertyOrFieldNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\PropertyOrFieldNode.cs,InitializeNode,The length of the statement  "					throw new NullValueInNestedPathException ("Cannot initialize property or field node '" + memberName + "' because the specified context is null."); " is 146.
Long Statement,Spring.Expressions,PropertyOrFieldNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\PropertyOrFieldNode.cs,InitializeNode,The length of the statement  "					throw new InvalidPropertyException (contextType' memberName' "'" + memberName + "' node cannot be resolved for the specified context [" + context + "]."); " is 154.
Long Statement,Spring.Expressions,PropertyOrFieldNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\PropertyOrFieldNode.cs,Get,The length of the statement  "			throw new NullValueInNestedPathException ("Cannot retrieve the value of a field or property '" + this.memberName + "'' because context for its resolution is null."); " is 165.
Long Statement,Spring.Expressions,PropertyOrFieldNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\PropertyOrFieldNode.cs,Set,The length of the statement  "			throw new NullValueInNestedPathException ("Cannot set the value of a field or property '" + this.memberName + "'' because context for its resolution is null."); " is 160.
Long Statement,Spring.Expressions,PropertyOrFieldNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\PropertyOrFieldNode.cs,GetPropertyOrFieldValue,The length of the statement  "		throw new InvalidPropertyException (evalContext.RootContextType' this.memberName' "Getter for property '" + this.memberName + "' threw an exception."' e); " is 154.
Long Statement,Spring.Expressions,PropertyOrFieldNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\PropertyOrFieldNode.cs,GetPropertyOrFieldValue,The length of the statement  "		throw new InvalidPropertyException (evalContext.RootContextType' this.memberName' "Illegal attempt to get value for the property '" + this.memberName + "'."' e); " is 161.
Long Statement,Spring.Expressions,PropertyOrFieldNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\PropertyOrFieldNode.cs,SetPropertyOrFieldValue,The length of the statement  "				throw new NotWritablePropertyException ("Can't change the value of the read-only property or field '" + this.memberName + "'."); " is 128.
Long Statement,Spring.Expressions,PropertyOrFieldNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\PropertyOrFieldNode.cs,SetPropertyOrFieldValue,The length of the statement  "			throw new ArgumentException ("Invalid value [" + newValue + "] for property or field '" + this.memberName + "' of primitive type [" + targetType + "]"); " is 152.
Long Statement,Spring.Expressions,PropertyOrFieldNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\PropertyOrFieldNode.cs,SetPropertyOrFieldValue,The length of the statement  "		else if (newValue == null || ObjectUtils.IsAssignable (targetType' newValue))// targetType.IsAssignableFrom(newValue.GetType()) " is 127.
Long Statement,Spring.Expressions,PropertyOrFieldNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\PropertyOrFieldNode.cs,SetPropertyOrFieldValue,The length of the statement  "		else if (!RemotingServices.IsTransparentProxy (newValue) && (newValue is IList || newValue is IDictionary || newValue is ISet)) { " is 129.
Long Statement,Spring.Expressions,VariableNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\VariableNode.cs,Set,The length of the statement  "		throw new InvalidOperationException ("You need to provide variables dictionary to expression evaluation engine in order to be able to set variable values."); " is 157.
Long Statement,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,EqualsListPartial,The length of the statement  "	for (sibling = this; sibling != null && sub != null; sibling = sibling.getNextSibling ()' sub = sub.getNextSibling ()) { " is 120.
Long Statement,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,ToString,The length of the statement  "	if (verboseStringConversion && (0 != String.Compare (getText ()' (tokenNames [Type])' true)) && (0 != String.Compare (getText ()' StringUtils.stripFrontBack (tokenNames [Type]' @""""' @"""")' true))) { " is 201.
Long Statement,Spring.Expressions.Parser.antlr,Parser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\Parser.cs,traceIn,The length of the statement  "	Console.Out.WriteLine ("> " + rname + "; LA(1)==" + LT (1).getText () + ((inputState.guessing > 0) ? " [guessing]" : "")); " is 122.
Long Statement,Spring.Expressions.Parser.antlr,Parser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\Parser.cs,traceOut,The length of the statement  "	Console.Out.WriteLine ("< " + rname + "; LA(1)==" + LT (1).getText () + ((inputState.guessing > 0) ? " [guessing]" : "")); " is 122.
Long Statement,Spring.Expressions.Parser.antlr,TreeParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\TreeParser.cs,traceIn,The length of the statement  "	Console.Out.WriteLine ("> " + rname + "(" + ((t != null) ? t.ToString () : "null") + ")" + ((inputState.guessing > 0) ? " [guessing]" : "")); " is 141.
Long Statement,Spring.Expressions.Parser.antlr,TreeParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\TreeParser.cs,traceOut,The length of the statement  "	Console.Out.WriteLine ("< " + rname + "(" + ((t != null) ? t.ToString () : "null") + ")" + ((inputState.guessing > 0) ? " [guessing]" : "")); " is 141.
Long Statement,Spring.Expressions.Parser.antlr.debug,ParserEventSupport,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\debug\ParserEventSupport.cs,fireSemanticPredicateEvaluated,The length of the statement  "	SemanticPredicateEventHandler eventDelegate = (SemanticPredicateEventHandler)((Parser)source).Events [Parser.SemPredEvaluatedEventKey]; " is 135.
Long Statement,Spring.Expressions.Parser.antlr.debug,ParserEventSupport,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\debug\ParserEventSupport.cs,fireSyntacticPredicateFailed,The length of the statement  "	SyntacticPredicateEventHandler eventDelegate = (SyntacticPredicateEventHandler)((Parser)source).Events [Parser.SynPredFailedEventKey]; " is 134.
Long Statement,Spring.Expressions.Parser.antlr.debug,ParserEventSupport,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\debug\ParserEventSupport.cs,fireSyntacticPredicateStarted,The length of the statement  "	SyntacticPredicateEventHandler eventDelegate = (SyntacticPredicateEventHandler)((Parser)source).Events [Parser.SynPredStartedEventKey]; " is 135.
Long Statement,Spring.Expressions.Parser.antlr.debug,ParserEventSupport,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\debug\ParserEventSupport.cs,fireSyntacticPredicateSucceeded,The length of the statement  "	SyntacticPredicateEventHandler eventDelegate = (SyntacticPredicateEventHandler)((Parser)source).Events [Parser.SynPredSucceededEventKey]; " is 137.
Long Statement,Spring.Expressions.Parser.antlr.debug,MatchEventArgs,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\debug\ParserMatchEventArgs.cs,ToString,The length of the statement  "	return "ParserMatchEvent [" + (isMatched () ? "ok'" : "bad'") + (isInverse () ? "NOT " : "") + (Type == TOKEN ? "token'" : "bitset'") + Value + "'" + Target + "'" + Guessing + "]"; " is 180.
Long Statement,Spring.Expressions.Parser.antlr.debug,ScannerEventSupport,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\debug\ScannerEventSupport.cs,fireSemanticPredicateEvaluated,The length of the statement  "	SemanticPredicateEventHandler eventDelegate = (SemanticPredicateEventHandler)((CharScanner)source).Events [Parser.SemPredEvaluatedEventKey]; " is 140.
Long Statement,Spring.Expressions.Parser.antlr.debug,ScannerEventSupport,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\debug\ScannerEventSupport.cs,fireSyntacticPredicateFailed,The length of the statement  "	SyntacticPredicateEventHandler eventDelegate = (SyntacticPredicateEventHandler)((CharScanner)source).Events [Parser.SynPredFailedEventKey]; " is 139.
Long Statement,Spring.Expressions.Parser.antlr.debug,ScannerEventSupport,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\debug\ScannerEventSupport.cs,fireSyntacticPredicateStarted,The length of the statement  "	SyntacticPredicateEventHandler eventDelegate = (SyntacticPredicateEventHandler)((CharScanner)source).Events [Parser.SynPredStartedEventKey]; " is 140.
Long Statement,Spring.Expressions.Parser.antlr.debug,ScannerEventSupport,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\debug\ScannerEventSupport.cs,fireSyntacticPredicateSucceeded,The length of the statement  "	SyntacticPredicateEventHandler eventDelegate = (SyntacticPredicateEventHandler)((CharScanner)source).Events [Parser.SynPredSucceededEventKey]; " is 142.
Long Statement,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,exprList,The length of the statement  "			exprList_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' "expressionList"' "Spring.Expressions.ExpressionListNode")' (AST)exprList_AST); " is 201.
Long Statement,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,relationalExpression,The length of the statement  "					relationalExpression_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' op_AST.getText ()' GetRelationalOperatorNodeType (op_AST.getText ()))' (AST)relationalExpression_AST); " is 236.
Long Statement,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,primaryExpression,The length of the statement  "			primaryExpression_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' "expression"' "Spring.Expressions.Expression")' (AST)primaryExpression_AST); " is 207.
Long Statement,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,reference,The length of the statement  "				reference_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' "ref"' "Spring.Context.Support.ReferenceNode")' (AST)cn_AST' (AST)id_AST); " is 197.
Long Statement,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,reference,The length of the statement  "				reference_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' "ref"' "Spring.Context.Support.ReferenceNode")' (AST)null' (AST)localid_AST); " is 200.
Long Statement,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,type,The length of the statement  "			type_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' tn_AST.getText ()' "Spring.Expressions.TypeNode")' (AST)type_AST); " is 184.
Long Statement,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,constructor,The length of the statement  "				constructor_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' type_AST.getText ()' "Spring.Expressions.ConstructorNode")' (AST)constructor_AST); " is 207.
Long Statement,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,listInitializer,The length of the statement  "		tmp66_AST = (Spring.Expressions.ListInitializerNode)astFactory.create (LT (1)' "Spring.Expressions.ListInitializerNode"); " is 121.
Long Statement,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,lambda,The length of the statement  "			lambda_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' "lambda"' "Spring.Expressions.LambdaExpressionNode")' (AST)lambda_AST); " is 191.
Long Statement,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,attribute,The length of the statement  "			attribute_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' tn_AST.getText ()' "Spring.Expressions.AttributeNode")' (AST)attribute_AST); " is 199.
Long Statement,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,property,The length of the statement  "		tmp90_AST = (Spring.Expressions.PropertyOrFieldNode)astFactory.create (LT (1)' "Spring.Expressions.PropertyOrFieldNode"); " is 121.
Long Statement,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,quotableName,The length of the statement  "			tmp91_AST = (Spring.Expressions.QualifiedIdentifier)astFactory.create (LT (1)' "Spring.Expressions.QualifiedIdentifier"); " is 121.
Long Statement,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,name,The length of the statement  "		tmp92_AST = (Spring.Expressions.QualifiedIdentifier)astFactory.create (LT (1)' "Spring.Expressions.QualifiedIdentifier"); " is 121.
Long Statement,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,qualifiedId,The length of the statement  "		tmp94_AST = (Spring.Expressions.QualifiedIdentifier)astFactory.create (LT (1)' "Spring.Expressions.QualifiedIdentifier"); " is 121.
Long Statement,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,argList,The length of the statement  "			argList_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' "args")' (AST)argList_AST); " is 148.
Long Statement,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,arrayConstructor,The length of the statement  "			arrayConstructor_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' type_AST.getText ()' "Spring.Expressions.ArrayConstructorNode")' (AST)arrayConstructor_AST); " is 222.
Long Statement,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,mapEntry,The length of the statement  "			mapEntry_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' "entry"' "Spring.Expressions.MapEntryNode")' (AST)mapEntry_AST); " is 186.
Long Statement,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,boolLiteral,The length of the statement  "			tmp110_AST = (Spring.Expressions.BooleanLiteralNode)astFactory.create (LT (1)' "Spring.Expressions.BooleanLiteralNode"); " is 120.
Long Statement,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,boolLiteral,The length of the statement  "			tmp111_AST = (Spring.Expressions.BooleanLiteralNode)astFactory.create (LT (1)' "Spring.Expressions.BooleanLiteralNode"); " is 120.
Long Statement,Spring.Expressions.Processors,OrderByProcessor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Processors\OrderByProcessor.cs,Process,The length of the statement  "	AssertUtils.ArgumentNotNull (comparer' "comparer"' "orderBy(comparer) argument 'comparer' does not evaluate to a supported type"); " is 130.
Long Statement,Spring.Objects.Factory.Attributes,RequiredAttributeObjectPostProcessor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Attributes\RequiredAttributeObjectPostProcessor.cs,PostProcessPropertyValues,The length of the statement  "			throw new ObjectInitializationException (BuildExceptionMessage ((string[])invalidProperties.ToArray (typeof(string))' objectName)); " is 131.
Long Statement,Spring.Objects.Factory.Config,AbstractConfigurer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\AbstractConfigurer.cs,ResolveRequiredType,The length of the statement  "				throw new ObjectInitializationException (string.Format ("Could not load required type [{0}] for {1}."' typeName' errorContext)' ex); " is 132.
Long Statement,Spring.Objects.Factory.Config,AbstractConfigurer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\AbstractConfigurer.cs,ResolveRequiredType,The length of the statement  "			throw new ObjectInitializationException (string.Format ("Invalid value '{0}' for {1} - " + "must be a System.String or System.Type."' value' errorContext)); " is 156.
Long Statement,Spring.Objects.Factory.Config,ConnectionStringsVariableSource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ConnectionStringsVariableSource.cs,InitVariables,The length of the statement  "		variables.Add (setting.Name + ".providerName"' StringUtils.HasText (providerName) ? providerName : "System.Data.SqlClient"); " is 124.
Long Statement,Spring.Objects.Factory.Config,ManagedDictionary,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ManagedDictionary.cs,Resolve,The length of the statement  "				throw new TypeMismatchException (String.Format ("Unable to convert managed dictionary key '{0}' from [{1}] into [{2}] during initialization" + " of property '{3}' for object '{4}'. Do you have an appropriate type converter registered?"' resolvedKey' resolvedKey.GetType ()' keyType' propertyName' objectName)); " is 310.
Long Statement,Spring.Objects.Factory.Config,ManagedDictionary,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ManagedDictionary.cs,Resolve,The length of the statement  "				resolvedValue = TypeConversionUtils.ConvertValueIfNecessary (valueType' resolvedValue' propertyName + "[" + resolvedKey + "]"); " is 127.
Long Statement,Spring.Objects.Factory.Config,ManagedDictionary,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ManagedDictionary.cs,Resolve,The length of the statement  "				throw new TypeMismatchException (String.Format ("Unable to convert managed dictionary value '{0}' from [{1}] into [{2}] during initialization" + " of property '{3}' for object '{4}'. Do you have an appropriate type converter registered?"' resolvedValue' resolvedValue.GetType ()' valueType' propertyName' objectName)); " is 318.
Long Statement,Spring.Objects.Factory.Config,ManagedList,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ManagedList.cs,Resolve,The length of the statement  "		object resolvedElement = resolver (objectName' definition' String.Format (CultureInfo.InvariantCulture' "{0}[{1}]"' propertyName' i)' element); " is 143.
Long Statement,Spring.Objects.Factory.Config,ManagedList,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ManagedList.cs,Resolve,The length of the statement  "				resolvedElement = TypeConversionUtils.ConvertValueIfNecessary (elementType' resolvedElement' propertyName + "[" + i + "]"); " is 123.
Long Statement,Spring.Objects.Factory.Config,ManagedList,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ManagedList.cs,Resolve,The length of the statement  "				throw new TypeMismatchException (String.Format ("Unable to convert managed list element '{0}' from [{1}] into [{2}] during initialization" + " of property '{3}' for object '{4}'. Do you have an appropriate type converter registered?"' resolvedElement' resolvedElement.GetType ()' elementType' propertyName' objectName)); " is 320.
Long Statement,Spring.Objects.Factory.Config,ManagedSet,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ManagedSet.cs,Resolve,The length of the statement  "				throw new TypeMismatchException (String.Format ("Unable to convert managed set element '{0}' from [{1}] into [{2}] during initialization" + " of property '{3}' for object '{4}'. Do you have an appropriate type converter registered?"' resolvedElement' resolvedElement.GetType ()' elementType' propertyName' objectName)); " is 319.
Long Statement,Spring.Objects.Factory.Config,ObjectDefinitionVisitor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ObjectDefinitionVisitor.cs,ResolveStringValue,The length of the statement  "		throw new InvalidOperationException ("No resolveHandler specified - pass an instance " + "into the constructor or override the 'ResolveStringValue' method"); " is 157.
Long Statement,Spring.Objects.Factory.Config,SpecialFolderVariableSource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\SpecialFolderVariableSource.cs,ResolveVariable,The length of the statement  "		Environment.SpecialFolder folder = (Environment.SpecialFolder)Enum.Parse (typeof(Environment.SpecialFolder)' name' true); " is 121.
Long Statement,Spring.Objects.Factory.Config,VariablePlaceholderConfigurer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\VariablePlaceholderConfigurer.cs,ProcessProperties,The length of the statement  "	ObjectDefinitionVisitor visitor = new ObjectDefinitionVisitor (new ObjectDefinitionVisitor.ResolveHandler (tp.ParseAndResolveVariables)); " is 137.
Long Statement,Spring.Objects.Factory.Config,ConfigurationReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ConfigurationReader.cs,GetSection,The length of the statement  "			throw new ArgumentException (string.Format ("evaluating configuration sectoin {0} does not result in an instance of type {1}"' configSectionName' typeof(TResult))); " is 164.
Long Statement,Spring.Objects.Factory.Config,ConfigurationReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ConfigurationReader.cs,GetSectionFromXmlDocument,The length of the statement  "		throw new ArgumentException (string.Format ("evaluating configuration sectoin {0} does not result in an instance of type {1}"' configSectionName' typeof(TResult))); " is 164.
Long Statement,Spring.Objects.Factory.Config,ConfigurationReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ConfigurationReader.cs,GetSectionFromXmlDocument,The length of the statement  "			sectionHandlerPath = string.Format ("{0}/{1}[@{2}='{3}']"' sectionHandlerPath' ConfigSectionGroupElement' ConfigSectionNameAttribute' sectionNameParts [i]); " is 156.
Long Statement,Spring.Objects.Factory.Config,ConfigurationReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ConfigurationReader.cs,GetSectionFromXmlDocument,The length of the statement  "	sectionHandlerPath = string.Format ("{0}/{1}[@{2}='{3}']"' sectionHandlerPath' ConfigSectionElement' ConfigSectionNameAttribute' sectionNameParts [sectionNameParts.Length - 1]); " is 177.
Long Statement,Spring.Objects.Factory.Config,ConfigurationReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ConfigurationReader.cs,GetSectionFromXmlDocument,The length of the statement  "		throw new ConfigurationException (string.Format ("missing 'type' attribute on section definition for '{0}'"' configSectionName)); " is 129.
Long Statement,Spring.Objects.Factory.Config,ConfigurationReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ConfigurationReader.cs,GetSectionFromXmlDocument,The length of the statement  "	XmlNode sectionContent = document.SelectSingleNode (string.Format ("//{0}/{1}"' ConfigurationElement' configSectionName)); " is 122.
Long Statement,Spring.Objects.Factory.Config,ConfigurationReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ConfigurationReader.cs,GetSectionFromXmlDocument,The length of the statement  "		throw ConfigurationUtils.CreateConfigurationException ("Cannot read properties; config section '" + configSectionName + "' not found."); " is 136.
Long Statement,Spring.Objects.Factory.Config,ConfigurationReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ConfigurationReader.cs,GetSectionFromXmlDocument,The length of the statement  "	throw ConfigurationUtils.CreateConfigurationException ("Configuration section '" + configSectionName + "' is neither of type IConfigurationSectionHandler nor ConfigurationSection."); " is 182.
Long Statement,Spring.Objects.Factory.Config,ConstructorArgumentValues,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ConstructorArgumentValues.cs,GetIndexedArgumentValue,The length of the statement  "		if (valueHolder.Type == null || requiredType.FullName.Equals (valueHolder.Type) || requiredType.AssemblyQualifiedName.Equals (valueHolder.Type)) { " is 146.
Long Statement,Spring.Objects.Factory.Config,ConstructorArgumentValues,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ConstructorArgumentValues.cs,GetGenericArgumentValue,The length of the statement  "				else if (requiredType.IsInstanceOfType (valueHolder.Value) || (requiredType.IsArray && typeof(IList).IsInstanceOfType (valueHolder.Value))) { " is 141.
Long Statement,Spring.Objects.Factory.Config,CustomConverterConfigurer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\CustomConverterConfigurer.cs,ResolveConverter,The length of the statement  "		throw new ObjectInitializationException ("Mapped value for custom converter is not a " + "[System.ComponentModel.TypeConverter] instance."); " is 140.
Long Statement,Spring.Objects.Factory.Config,DelegateFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\DelegateFactoryObject.cs,AfterPropertiesSet,The length of the statement  "		throw new ArgumentException ("Exactly one of either the 'TargetType' or 'TargetObject' properties is required (not both)."); " is 124.
Long Statement,Spring.Objects.Factory.Config,FieldRetrievingFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\FieldRetrievingFactoryObject.cs,AfterPropertiesSet,The length of the statement  "			throw new ArgumentException ("Specify the TargetType or TargetObject property in combination with the TargetField property."); " is 126.
Long Statement,Spring.Objects.Factory.Config,FieldRetrievingFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\FieldRetrievingFactoryObject.cs,AfterPropertiesSet,The length of the statement  "		throw new ObjectDefinitionStoreException (string.Format (CultureInfo.InvariantCulture' "No such field '{0}' on [{1}]."' TargetField' TargetObject == null ? TargetType : TargetObject)); " is 184.
Long Statement,Spring.Objects.Factory.Config,FieldRetrievingFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\FieldRetrievingFactoryObject.cs,ParseAndSetFromStaticFieldValue,The length of the statement  "		throw new ArgumentException ("The value passed to the StaticField property must be a fully " + "qualified Type plus field name: " + "e.g. 'Example.MyExampleClass.MyField' MyAssembly'"); " is 185.
Long Statement,Spring.Objects.Factory.Config,PropertyOverrideConfigurer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\PropertyOverrideConfigurer.cs,ProcessKey,The length of the statement  "		throw new FatalObjectException (string.Format (CultureInfo.InvariantCulture' "Invalid key '{0}': expected 'objectName.property' form."' key)); " is 142.
Long Statement,Spring.Objects.Factory.Config,PropertyOverrideConfigurer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\PropertyOverrideConfigurer.cs,ProcessKey,The length of the statement  "			_logger.Warn (string.Format (CultureInfo.InvariantCulture' "Cannot find object '{0}' when overriding properties; check configuration."' name)); " is 143.
Long Statement,Spring.Objects.Factory.Config,PropertyPathFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\PropertyPathFactoryObject.cs,GetObject,The length of the statement  "		throw new FatalObjectException ("PropertyPathFactoryObject is not allowed to return null' " + "but property value for path '" + this.propertyPath + "' is null."); " is 162.
Long Statement,Spring.Objects.Factory.Config,PropertyPlaceholderConfigurer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\PropertyPlaceholderConfigurer.cs,ProcessProperties,The length of the statement  "	ObjectDefinitionVisitor visitor = new ObjectDefinitionVisitor (new ObjectDefinitionVisitor.ResolveHandler (resolveAdapter.ParseAndResolveVariables)); " is 149.
Long Statement,Spring.Objects.Factory.Config,PropertyPlaceholderConfigurer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\PropertyPlaceholderConfigurer.cs,ParseString,The length of the statement  "				throw new ObjectDefinitionStoreException (string.Format (CultureInfo.InvariantCulture' "Circular placeholder reference '{0}' detected " + "in property definitions [{1}]."' placeholder' properties)); " is 198.
Long Statement,Spring.Objects.Factory.Config,PropertyPlaceholderConfigurer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\PropertyPlaceholderConfigurer.cs,ParseString,The length of the statement  "					logger.Debug (string.Format (CultureInfo.InvariantCulture' "Resolving placeholder '{0}' to '{1}'."' placeholder' resolvedValue)); " is 129.
Long Statement,Spring.Objects.Factory.Config,PropertyPlaceholderConfigurer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\PropertyPlaceholderConfigurer.cs,ParseString,The length of the statement  "				throw new ObjectDefinitionStoreException (string.Format (CultureInfo.InvariantCulture' "Could not resolve placeholder '{0}'."' placeholder)); " is 141.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,AutowireConstructor,The length of the statement  "			throw new ObjectCreationException (rod.ResourceDescription' objectName' string.Format (CultureInfo.InvariantCulture' "'{0}' constructor arguments specified but no matching constructor found " + "in object '{1}' (hint: specify argument indexes' names' or " + "types to avoid ambiguities)."' minNrOfArgs' objectName)); " is 316.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,AutowireConstructor,The length of the statement  "			args = CreateArgumentArray (objectName' rod' resolvedValues' wrapper' paramTypes' candidate' autowiring' out unsatisfiedDependencyExceptionData); " is 145.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,AutowireConstructor,The length of the statement  "					throw new UnsatisfiedDependencyException (rod.ResourceDescription' objectName' unsatisfiedDependencyExceptionData.ParameterIndex' unsatisfiedDependencyExceptionData.ParameterType' unsatisfiedDependencyExceptionData.ErrorMessage); " is 229.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,AutowireConstructor,The length of the statement  "	wrapper.WrappedInstance = instantiationStrategy.Instantiate (rod' objectName' this.objectFactory' constructorToUse' argsToUse); " is 127.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,AutowireConstructor,The length of the statement  "		log.Debug (string.Format (CultureInfo.InvariantCulture' "Object '{0}' instantiated via constructor [{1}]."' objectName' constructorToUse)); " is 139.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,InstantiateUsingFactoryMethod,The length of the statement  "	MethodInfo[] factoryMethodCandidates = FindMethods (genericArgsInfo.GenericMethodName' expectedArgCount' isStatic' factoryClass); " is 129.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,InstantiateUsingFactoryMethod,The length of the statement  "	            MethodInfo[] factoryMethodCandidates = FindMethods(definition.FactoryMethodName' expectedArgCount' isStatic' factoryClass);" is 123.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,InstantiateUsingFactoryMethod,The length of the statement  "			ArgumentsHolder args = CreateArgumentArray (name' definition' resolvedValues' wrapper' paramTypes' factoryMethodCandidate' autowiring' out unsatisfiedDependencyExceptionData); " is 175.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,InstantiateUsingFactoryMethod,The length of the statement  "		object objectInstance = instantiationStrategy.Instantiate (definition' name' objectFactory' factoryMethodCandidate' arguments); " is 127.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,InstantiateUsingFactoryMethod,The length of the statement  "			log.Debug (string.Format (CultureInfo.InvariantCulture' "Object '{0}' instantiated via factory method [{1}]."' name' factoryMethodCandidate)); " is 142.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,InstantiateUsingFactoryMethod,The length of the statement  "	throw new ObjectDefinitionStoreException (string.Format (CultureInfo.InvariantCulture' "Cannot find matching factory method '{0} on Type [{1}]."' definition.FactoryMethodName' factoryClass)); " is 191.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,CreateArgumentArray,The length of the statement  "				string errorMessage = String.Format (CultureInfo.InvariantCulture' "Could not convert {0} argument value [{1}] to required type [{2}] : {3}"' methodType' valueHolder.Value' paramType' ex.Message); " is 196.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,CreateArgumentArray,The length of the statement  "				string errorMessage = String.Format (CultureInfo.InvariantCulture' "Ambiguous {0} argument types - " + "Did you specify the correct object references as {0} arguments?"' methodType); " is 182.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,CreateArgumentArray,The length of the statement  "			log.Debug ("Autowiring by type from object name '" + objectName + "' via " + methodType + " to object named '" + autowiredObjectName + "'"); " is 140.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,ResolveAutoWiredArgument,The length of the statement  "	return this.autowireFactory.ResolveDependency (new DependencyDescriptor (methodParameter' true)' objectName' autowiredObjectNames); " is 131.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,ResolveConstructorArguments,The length of the statement  "			throw new ObjectCreationException (definition.ResourceDescription' objectName' "Invalid constructor agrument index: " + index); " is 127.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,ResolveConstructorArguments,The length of the statement  "		resolvedValues.AddIndexedArgumentValue (index' resolvedValue' StringUtils.HasText (valueHolder.Type) ? TypeResolutionUtils.ResolveType (valueHolder.Type).AssemblyQualifiedName : null); " is 184.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,ResolveConstructorArguments,The length of the statement  "	foreach (ConstructorArgumentValues.ValueHolder valueHolder in definition.ConstructorArgumentValues.GenericArgumentValues) { " is 123.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,ResolveConstructorArguments,The length of the statement  "		resolvedValues.AddGenericArgumentValue (resolvedValue' StringUtils.HasText (valueHolder.Type) ? TypeResolutionUtils.ResolveType (valueHolder.Type).AssemblyQualifiedName : null); " is 177.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,ResolveConstructorArguments,The length of the statement  "		object resolvedValue = valueResolver.ResolveValueIfNecessary (objectName' definition' syntheticArgumentName' valueHolder.Value); " is 128.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,FindMethods,The length of the statement  "	BindingFlags methodFlags = BindingFlags.Public | BindingFlags.IgnoreCase | (isStatic ? BindingFlags.Static : BindingFlags.Instance); " is 132.
Long Statement,Spring.Objects.Factory.Support,ConstructorResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ConstructorResolver.cs,FindMethods,The length of the statement  "	MemberInfo[] methods = searchType.FindMembers (MemberTypes.Method' methodFlags' new MemberFilter (new CriteriaMemberFilter ().FilterMemberByCriteria)' methodCriteria); " is 167.
Long Statement,Spring.Objects.Factory.Support,DefaultObjectNameGenerator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultObjectNameGenerator.cs,GenerateObjectName,The length of the statement  "		throw new ArgumentException ("DefaultObjectNameGenerator is only able to handle IConfigurableObjectDefinition subclasses: " + definition); " is 138.
Long Statement,Spring.Objects.Factory.Support,ObjectDefinitionBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ObjectDefinitionBuilder.cs,RootObjectDefinition,The length of the statement  "	builder.objectDefinition = objectDefinitionFactory.CreateObjectDefinition (objectType.FullName' null' AppDomain.CurrentDomain); " is 127.
Long Statement,Spring.Objects.Factory.Support,ObjectDefinitionBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ObjectDefinitionBuilder.cs,ChildObjectDefinition,The length of the statement  "	builder.objectDefinition = objectDefinitionFactory.CreateObjectDefinition (null' parentObjectName' AppDomain.CurrentDomain); " is 124.
Long Statement,Spring.Objects.Factory.Support,ObjectDefinitionValueResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ObjectDefinitionValueResolver.cs,ResolvePropertyValue,The length of the statement  "		resolvedValue = ((ICustomValueReferenceHolder)argumentValue).Resolve (objectFactory' name' definition' argumentName' argumentValue); " is 132.
Long Statement,Spring.Objects.Factory.Support,ObjectDefinitionValueResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ObjectDefinitionValueResolver.cs,ResolvePropertyValue,The length of the statement  "		resolvedValue = ResolveInnerObjectDefinition (name' holder.ObjectName' argumentName' holder.ObjectDefinition' definition.IsSingleton); " is 134.
Long Statement,Spring.Objects.Factory.Support,ObjectDefinitionValueResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ObjectDefinitionValueResolver.cs,ResolvePropertyValue,The length of the statement  "			context = contextProperty == null ? null : ResolveValueIfNecessary (name' definition' "Context"' contextProperty.Value); " is 120.
Long Statement,Spring.Objects.Factory.Support,ObjectDefinitionValueResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ObjectDefinitionValueResolver.cs,ResolvePropertyValue,The length of the statement  "			object vars = (variablesProperty == null ? null : ResolveValueIfNecessary (name' definition' "Variables"' variablesProperty.Value)); " is 132.
Long Statement,Spring.Objects.Factory.Support,ObjectDefinitionValueResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ObjectDefinitionValueResolver.cs,ResolvePropertyValue,The length of the statement  "		resolvedValue = ((IManagedCollection)argumentValue).Resolve (name' definition' argumentName' new ManagedCollectionElementResolver (ResolveValueIfNecessary)); " is 157.
Long Statement,Spring.Objects.Factory.Support,ObjectDefinitionValueResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ObjectDefinitionValueResolver.cs,ResolvePropertyValue,The length of the statement  "			throw new ObjectCreationException (definition.ResourceDescription' name' "Error converted typed String value for " + argumentName' ex); " is 135.
Long Statement,Spring.Objects.Factory.Support,ObjectDefinitionValueResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ObjectDefinitionValueResolver.cs,ResolveInnerObjectDefinition,The length of the statement  "		throw ObjectCreationException.GetObjectCreationException (ex' name' argumentName' definition.ResourceDescription' innerObjectName); " is 131.
Long Statement,Spring.Objects.Factory.Support,ObjectDefinitionValueResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ObjectDefinitionValueResolver.cs,ResolveReference,The length of the statement  "		log.Debug (string.Format (CultureInfo.InvariantCulture' "Resolving reference from property '{0}' in object '{1}' to object '{2}'."' argumentName' name' reference.ObjectName)); " is 175.
Long Statement,Spring.Objects.Factory.Support,ObjectDefinitionValueResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ObjectDefinitionValueResolver.cs,ResolveReference,The length of the statement  "				throw new ObjectCreationException (definition.ResourceDescription' name' string.Format ("Can't resolve reference to '{0}' in parent factory: " + "no parent factory available."' reference.ObjectName)); " is 200.
Long Statement,Spring.Objects.Factory.Support,ObjectDefinitionValueResolver,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ObjectDefinitionValueResolver.cs,ResolveReference,The length of the statement  "		throw ObjectCreationException.GetObjectCreationException (ex' name' argumentName' definition.ResourceDescription' reference.ObjectName); " is 136.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,GetTypeForFactoryMethod,The length of the statement  "		if (factoryMethod.IsStatic == isStatic && factoryMethod.Name.Equals (genericArgsInfo.GenericMethodName) && ReflectionUtils.GetParameterTypes (factoryMethod).Length >= minNrOfArgs && factoryMethod.GetGenericArguments ().Length == genericArgsInfo.GetGenericArguments ().Length) { " is 277.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,ApplyObjectPropertyValues,The length of the statement  "	ApplyPropertyValues (name' new RootObjectDefinition (definition)' new ObjectWrapper (instance)' definition.PropertyValues); " is 123.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,ApplyObjectPostProcessorsBeforeInstantiation,The length of the statement  "		log.Debug (string.Format ("Invoking IInstantiationAwareObjectPostProcessors before " + "the instantiation of '{0}'."' objectName)); " is 131.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,ApplyPropertyValues,The length of the statement  "		throw new ObjectCreationException (definition.ResourceDescription' name' "Error setting property values: " + ex.Message' ex); " is 125.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,UnsatisfiedNonSimpleProperties,The length of the statement  "		if (property.CanWrite && !IsExcludedFromDependencyCheck (property) && !pvs.Contains (name) && !ObjectUtils.IsSimpleProperty (property.PropertyType)) { " is 150.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,PopulateObject,The length of the statement  "			throw new ObjectCreationException (definition.ResourceDescription' name' "Cannot apply property values to null instance."); " is 123.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,PopulateObject,The length of the statement  "	if (definition.ResolvedAutowireMode == AutoWiringMode.ByName || definition.ResolvedAutowireMode == AutoWiringMode.ByType) { " is 123.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,PopulateObject,The length of the statement  "				IInstantiationAwareObjectPostProcessor instantiationAwareObjectPostProcessor = processor as IInstantiationAwareObjectPostProcessor; " is 131.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,PopulateObject,The length of the statement  "					properties = instantiationAwareObjectPostProcessor.PostProcessPropertyValues (properties' filteredPropInfo' wrapper.WrappedInstance' name); " is 139.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,WireEvents,The length of the statement  "				throw new FatalObjectException ("Currently' only references to other objects and Types are " + "supported as event sources."); " is 126.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,AutowireByName,The length of the statement  "				log.Debug (string.Format (CultureInfo.InvariantCulture' "Added autowiring by name from object name '{0}' via " + "property '{1}' to object named '{1}'."' name' propertyName)); " is 175.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,AutowireByName,The length of the statement  "				log.Debug (string.Format (CultureInfo.InvariantCulture' "Not autowiring property '{0}' of object '{1}' by name: " + "no matching object found."' propertyName' name)); " is 166.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,AutowireByType,The length of the statement  "				log.Debug (string.Format (CultureInfo.InvariantCulture' "Autowiring by type from object name '{0}' via property " + "'{1}' to object named '{2}'."' name' propertyName' ObjectUtils.EnumerateFirstElement (matchingObjects.Keys))); " is 227.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,AutowireByType,The length of the statement  "			throw new UnsatisfiedDependencyException (string.Empty' name' propertyName' string.Format (CultureInfo.InvariantCulture' "There are {0} objects of Type [{1}] for autowire by " + "type' when there should have been just 1 to be able to " + "autowire property '{2}' of object '{3}'."' matchingObjects.Count' requiredType' propertyName' name)); " is 340.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,AutowireByType,The length of the statement  "				log.Debug (string.Format (CultureInfo.InvariantCulture' "Not autowiring property '{0}' of object '{1}': no matching object found."' propertyName' name)); " is 153.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,InstantiateObject,The length of the statement  "		log.Debug (string.Format (CultureInfo.InvariantCulture' "Creating instance of Object '{0}' with merged definition [{1}]."' name' definition)); " is 142.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,InstantiateObject,The length of the statement  "		throw new ObjectDefinitionStoreException (definition.ResourceDescription' name' "Validation of method overrides failed.  " + ex.Message' ex); " is 141.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,InstantiateObject,The length of the statement  "		throw new ObjectCreationException (definition.ResourceDescription' name' "Initialization of object failed : " + ex.Message' ex); " is 128.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,CreateObjectInstance,The length of the statement  "	if (ctors != null || objectDefinition.ResolvedAutowireMode == AutoWiringMode.Constructor || objectDefinition.HasConstructorArgumentValues || !ObjectUtils.IsEmpty (arguments)) { " is 176.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,InstantiateUsingFactoryMethod,The length of the statement  "	ConstructorResolver constructorResolver = new ConstructorResolver (this' this' InstantiationStrategy' CreateValueResolver ()); " is 126.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,AutowireConstructor,The length of the statement  "	ConstructorResolver constructorResolver = new ConstructorResolver (this' this' InstantiationStrategy' CreateValueResolver ()); " is 126.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,CheckDependencies,The length of the statement  "	PropertyInfo[] unsatisfiedDependencies = AutowireUtils.GetUnsatisfiedDependencies (filteredPropInfo' properties' dependencyCheck); " is 130.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,CheckDependencies,The length of the statement  "		throw new UnsatisfiedDependencyException (definition.ResourceDescription' name' unsatisfiedDependencies [0].Name' "Set this property value or disable dependency checking for this object."); " is 189.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,InvokeInitMethods,The length of the statement  "			log.Debug (string.Format (CultureInfo.InvariantCulture' "Calling AfterPropertiesSet() on object with name '{0}'."' name)); " is 122.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,InvokeInitMethods,The length of the statement  "			log.Debug (string.Format (CultureInfo.InvariantCulture' "Calling custom init method '{0} on object with name '{1}'."' definition.InitMethodName' name)); " is 152.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,InvokeInitMethods,The length of the statement  "			MethodInfo targetMethod = target.GetType ().GetMethod (definition.InitMethodName' MethodResolutionFlags' null' Type.EmptyTypes' null); " is 134.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,InvokeInitMethods,The length of the statement  "				throw new ObjectCreationException (definition.ResourceDescription' name' "Could not find the named initialization method '" + definition.InitMethodName + "'."); " is 160.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,InvokeInitMethods,The length of the statement  "			throw new ObjectCreationException (definition.ResourceDescription' name' "Initialization method '" + definition.InitMethodName + "' threw exception"' ex.GetBaseException ()); " is 174.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,InvokeInitMethods,The length of the statement  "			throw new ObjectCreationException (definition.ResourceDescription' name' "Invocation of initialization method '" + definition.InitMethodName + "' failed"' ex); " is 159.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,InvokeCustomDestroyMethod,The length of the statement  "	MethodInfo targetMethod = target.GetType ().GetMethod (destroyMethodName' MethodResolutionFlags' null' Type.EmptyTypes' null); " is 126.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,InvokeCustomDestroyMethod,The length of the statement  "			log.Error ("Couldn't invoke destroy method '" + destroyMethodName + "' of object with name '" + name + "'"' ex.GetBaseException ()); " is 132.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,LogExceptionRaisedByCustomDestroyMethodInvocation,The length of the statement  "	log.Error (string.Format (CultureInfo.InvariantCulture' "Couldn't invoke destroy method '{0}' of object with name '{1}'."' destroyMethodName' name)' ex); " is 153.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,DestroyObject,The length of the statement  "			log.Debug ("Calling custom destroy method '" + rootDefinition.DestroyMethodName + "' on object with name '" + name + "'."); " is 123.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,ResolveReference,The length of the statement  "		log.Debug (string.Format (CultureInfo.InvariantCulture' "Resolving reference from property '{0}' in object '{1}' to object '{2}'."' argumentName' name' reference.ObjectName)); " is 175.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,ResolveReference,The length of the statement  "				throw new ObjectCreationException (definition.ResourceDescription' name' string.Format ("Can't resolve reference to '{0}' in parent factory: " + "no parent factory available."' reference.ObjectName)); " is 200.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,ResolveReference,The length of the statement  "		throw ObjectCreationException.GetObjectCreationException (ex' name' argumentName' definition.ResourceDescription' reference.ObjectName); " is 136.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,ConfigureObject,The length of the statement  "			log.Debug (string.Format (CultureInfo.InvariantCulture' "Setting the name property on the IObjectNameAware object '{0}'."' name)); " is 130.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,ConfigureObject,The length of the statement  "			log.Debug (string.Format (CultureInfo.InvariantCulture' "Setting the ObjectFactory property on the IObjectFactoryAware object '{0}'."' name)); " is 142.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,ApplyObjectPostProcessorsBeforeInitialization,The length of the statement  "			throw new ObjectCreationException (name' string.Format (CultureInfo.InvariantCulture' "PostProcessBeforeInitialization method of IObjectPostProcessor [{0}] " + " returned null for object [{1}] with name '{2}'."' objectProcessor' instance' name)); " is 246.
Long Statement,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,ApplyObjectPostProcessorsAfterInitialization,The length of the statement  "			throw new ObjectCreationException (name' string.Format (CultureInfo.InvariantCulture' "PostProcessAfterInitialization method of IObjectPostProcessor [{0}] " + " returned null for object [{1}] with name [{2}]."' objectProcessor' instance' name)); " is 245.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectDefinition,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectDefinition.cs,Validate,The length of the statement  "		throw new ObjectDefinitionValidationException ("Cannot combine static factory method with method overrides: " + "the static factory method must create the instance."); " is 167.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectDefinition,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectDefinition.cs,PrepareMethodOverride,The length of the statement  "		throw new ObjectDefinitionValidationException (string.Format (CultureInfo.InvariantCulture' "Invalid method override: no method with name '{0}' on class [{1}]."' methodOverride.MethodName' ObjectTypeName)); " is 206.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectDefinitionReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectDefinitionReader.cs,LoadObjectDefinitions,The length of the statement  "		throw new ObjectDefinitionStoreException ("Cannot import object definitions from location [" + location + "]:" + " no ResourceLoader available"); " is 145.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,GetMergedObjectDefinition,The length of the statement  "			throw new NoSuchObjectDefinitionException (od.ParentName' string.Format ("Parent name '{0}' is equal to object name '{1}' - " + "cannot be resolved without an AbstractObjectFactory parent."' od.ParentName' name)); " is 213.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,GetTypeForFactoryObject,The length of the statement  "		log.Warn ("FactoryObject threw exception from ObjectType' despite the contract saying " + "that it should return null if the type of its object cannot be determined yet"' ex); " is 175.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,GetObjectForInstance,The length of the statement  "			log.Debug (string.Format ("Calling code asked for IFactoryObject instance for name '{0}'."' TransformedObjectName (name))); " is 123.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,GetObjectForInstance,The length of the statement  "			throw new FactoryObjectNotInitializedException (canonicalName' "Factory object returned null object - " + "possible cause: not fully initialized due to " + "circular object reference."); " is 186.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,GetObjectFromFactoryObject,The length of the statement  "		throw new ObjectCreationException (rod.ResourceDescription' objectName' "FactoryObject threw exception on object creation."' ex); " is 129.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,GetObjectFromFactoryObject,The length of the statement  "		throw new ObjectCurrentlyInCreationException (rod.ResourceDescription' objectName' "FactoryObject which is currently in creation returned null from GetObject."); " is 161.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,GetObjectFromFactoryObject,The length of the statement  "			throw new ObjectCreationException (rod.ResourceDescription' objectName' "Post-processing of the FactoryObject's object failed."' ex); " is 133.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,CheckMergedObjectDefinition,The length of the statement  "		if (requiredType != null && StringUtils.IsNullOrEmpty (mergedObjectDefinition.FactoryMethodName) && !typeof(IFactoryObject).IsAssignableFrom (objectType) && !requiredType.IsAssignableFrom (objectType)) { " is 203.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,CheckMergedObjectDefinition,The length of the statement  "			throw new ObjectDefinitionStoreException ("Cannot specify arguments in the GetObject () method when " + "referring to a singleton object definition."); " is 151.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,CheckMergedObjectDefinition,The length of the statement  "		if (mergedObjectDefinition.HasObjectType && typeof(IFactoryObject).IsAssignableFrom (mergedObjectDefinition.ObjectType)) { " is 122.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,CheckMergedObjectDefinition,The length of the statement  "			throw new ObjectDefinitionStoreException ("Cannot specify arguments in the GetObject () method when " + "referring to a factory object definition."); " is 149.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,ContainsLocalObject,The length of the statement  "	return ((ContainsSingleton (objectName) || ContainsObjectDefinition (objectName)) && (!ObjectFactoryUtils.IsFactoryDereference (name) || IsFactoryObject (objectName))); " is 168.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,GetObjectInternal,The length of the statement  "			log.Debug (string.Format ("{2}GetObjectInternal: obtaining instance for name {0} => canonical name {1}"' name' objectName' new String (' '' nestingCount * INDENT))); " is 165.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,GetObjectInternal,The length of the statement  "						log.Debug ("Returning eagerly cached instance of singleton object '" + objectName + "' that is not fully initialized yet - a consequence of a circular reference"); " is 163.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,GetObjectInternal,The length of the statement  "			log.Error (string.Format ("{1}GetObjectInternal: error obtaining object {0}"' name' new String (' '' nestingCount * INDENT))); " is 126.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,GetObjectInternal,The length of the statement  "				log.Debug (string.Format ("{1}GetObjectInternal: returning instance for objectname {0}"' name' new String (' '' nestingCount * INDENT))); " is 137.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,RegisterAlias,The length of the statement  "			throw new ObjectDefinitionStoreException (string.Format ("Cannot register alias '{0}' for object with name '{1}': it's already registered for object name '{2}'."' alias' name' registeredName)); " is 193.
Long Statement,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,RegisterSingleton,The length of the statement  "			throw new ObjectDefinitionStoreException (string.Format ("Could not register object [{0}] under object name '{1}': there's already object [{2}] bound."' singletonObject' name' oldObject)); " is 188.
Long Statement,Spring.Objects.Factory.Support,AutowireUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AutowireUtils.cs,GetConstructors,The length of the statement  "	const BindingFlags flags = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly; " is 124.
Long Statement,Spring.Objects.Factory.Support,AutowireUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AutowireUtils.cs,GetConstructors,The length of the statement  "		MemberInfo[] ctors = definition.ObjectType.FindMembers (MemberTypes.Constructor' flags' new MemberFilter (new CriteriaMemberFilter ().FilterMemberByCriteria)' new MinimumArgumentCountCriteria (minimumArgumentCount)); " is 216.
Long Statement,Spring.Objects.Factory.Support,AutowireUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AutowireUtils.cs,GetTypeDifferenceWeightOld,The length of the statement  "		throw new ArgumentException ("Cannot calculate the type difference weight for argument types and arguments with differing lengths."); " is 133.
Long Statement,Spring.Objects.Factory.Support,AutowireUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AutowireUtils.cs,IsSetterDefinedInInterface,The length of the statement  "			if (interfaceType.IsAssignableFrom (targetType) && ReflectionUtils.GetMethod (interfaceType' setter.Name' ReflectionUtils.GetParameterTypes (setter)) != null) { " is 160.
Long Statement,Spring.Objects.Factory.Support,AutowireUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AutowireUtils.cs,GetUnsatisfiedDependencies,The length of the statement  "			bool unsatisfied = (dependencyCheck == DependencyCheckingMode.All) || (isSimple && dependencyCheck == DependencyCheckingMode.Simple) || (!isSimple && dependencyCheck == DependencyCheckingMode.Objects); " is 201.
Long Statement,Spring.Objects.Factory.Support,DefaultListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs,GetDependingObjectNames,The length of the statement  "						log.Debug (string.Format (CultureInfo.InvariantCulture' "Found depending object '{0}' for object '{1}'."' name' objectName)); " is 125.
Long Statement,Spring.Objects.Factory.Support,DefaultListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs,RegisterObjectDefinition,The length of the statement  "			throw new ObjectDefinitionStoreException (objectDefinition.ResourceDescription' name' "Validation of object definition failed."' ex); " is 133.
Long Statement,Spring.Objects.Factory.Support,DefaultListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs,RegisterObjectDefinition,The length of the statement  "			throw new ObjectDefinitionStoreException (string.Format ("Cannot register object definition [{0}] for object '{1}': there's already [{2}] bound."' objectDefinition' name' oldObjectDefinition)); " is 193.
Long Statement,Spring.Objects.Factory.Support,DefaultListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs,RegisterObjectDefinition,The length of the statement  "				log.Debug (string.Format ("Overriding object definition for object '{0}': replacing [{1}] with [{2}]."' name' oldObjectDefinition' objectDefinition)); " is 150.
Long Statement,Spring.Objects.Factory.Support,DefaultListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs,RegisterResolvableDependency,The length of the statement  "		AssertUtils.IsTrue ((autowiredValue is IObjectFactory) || dependencyType.IsInstanceOfType (autowiredValue)' "Value [" + autowiredValue + "] does not implement specified type [" + dependencyType.Name + "]"); " is 206.
Long Statement,Spring.Objects.Factory.Support,DefaultListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs,GetObjectsOfType,The length of the statement  "			if (ex.InnerException != null && ex.GetBaseException ().GetType ().Equals (typeof(ObjectCurrentlyInCreationException))) { " is 121.
Long Statement,Spring.Objects.Factory.Support,DefaultListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs,GetObjectsOfType,The length of the statement  "					log.Debug (string.Format (CultureInfo.InvariantCulture' "Ignoring match to currently created object '{0}'."' objectName)' ex); " is 126.
Long Statement,Spring.Objects.Factory.Support,DefaultListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs,DoGetObjectNamesForType,The length of the statement  "				if (!mod.IsAbstract && (allowEagerInit || (mod.HasObjectType || !mod.IsLazyInit/*|| this.AllowEagerTypeLoading*/) && !RequiresEagerInitForType (mod.FactoryObjectName))) { " is 170.
Long Statement,Spring.Objects.Factory.Support,DefaultListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs,DoGetObjectNamesForType,The length of the statement  "					bool matchFound = (allowEagerInit || !isFactoryObject || ContainsSingleton (objectName)) && (includeNonSingletons || IsSingleton (objectName)) && IsTypeMatch (objectName' type); " is 177.
Long Statement,Spring.Objects.Factory.Support,DefaultListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs,ResolveDependency,The length of the statement  "				throw new NoSuchObjectDefinitionException (type' "Unsatisfied dependency of type [" + type + "]: expected at least 1 matching object to wire the [" + descriptor.MethodParameter.ParameterName () + "] parameter on the " + methodType + " of object [" + objectName + "]"); " is 268.
Long Statement,Spring.Objects.Factory.Support,DefaultListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs,ResolveDependency,The length of the statement  "			throw new NoSuchObjectDefinitionException (type' "expected single matching object but found " + matchingObjects.Count + ": " + matchingObjects); " is 144.
Long Statement,Spring.Objects.Factory.Support,DefaultListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs,RaiseNoSuchObjectDefinitionException,The length of the statement  "	throw new NoSuchObjectDefinitionException (type' dependencyDescription' "expected at least 1 object which qualifies as autowire candidate for this dependency. "); " is 162.
Long Statement,Spring.Objects.Factory.Support,DefaultListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs,FindAutowireCandidates,The length of the statement  "	string[] candidateNames = ObjectFactoryUtils.ObjectNamesForTypeIncludingAncestors (this' requiredType' true' descriptor.Eager); " is 127.
Long Statement,Spring.Objects.Factory.Support,DefaultListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs,IsAutowireCandidate,The length of the statement  "	bool isFactoryObject = (descriptor != null && descriptor.DependencyType != null && typeof(IFactoryObject).IsAssignableFrom (descriptor.DependencyType)); " is 152.
Long Statement,Spring.Objects.Factory.Support,DefaultListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs,IsAutowireCandidate,The length of the statement  "	return AutowireCandidateResolver.IsAutowireCandidate (new ObjectDefinitionHolder (rod' objectName' GetAliases (objectName))' descriptor); " is 137.
Long Statement,Spring.Objects.Factory.Support,LookupMethodOverride,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\LookupMethodOverride.cs,ToString,The length of the statement  "	return new StringBuilder (GetType ().Name).Append (" for method '").Append (MethodName).Append ("'; will return object '").Append (this.objectName).Append ("'.").ToString (); " is 174.
Long Statement,Spring.Objects.Factory.Support,MethodInjectingInstantiationStrategy,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\MethodInjectingInstantiationStrategy.cs,DoInstantiate,The length of the statement  "	wrapper.SetPropertyValue (MethodInjectingTypeBuilder.MethodReplacementPropertyName' new DelegatingMethodReplacer (definition' factory)); " is 136.
Long Statement,Spring.Objects.Factory.Support,MethodInjectingInstantiationStrategy,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\MethodInjectingInstantiationStrategy.cs,DoInstantiate,The length of the statement  "	wrapper.SetPropertyValue (MethodInjectingTypeBuilder.MethodLookupPropertyName' new LookupMethodReplacer (definition' factory)); " is 127.
Long Statement,Spring.Objects.Factory.Support,MethodInjectingInstantiationStrategy,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\MethodInjectingInstantiationStrategy.cs,GetGeneratedType,The length of the statement  "				log.Debug (string.Format (CultureInfo.InvariantCulture' "Generating a subclass of the [{0}] class for the '{1}' " + "object definition for the purposes of method injection."' definition.ObjectType' objectName)); " is 211.
Long Statement,Spring.Objects.Factory.Support,ObjectDefinitionReaderUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\ObjectDefinitionReaderUtils.cs,GenerateObjectName,The length of the statement  "			throw new ObjectDefinitionStoreException (objectDefinition.ResourceDescription' String.Empty' "Unnamed object definition specifies neither 'Type' nor 'Parent' " + "nor 'FactoryObject' property values so a unique name cannot be generated."); " is 240.
Long Statement,Spring.Objects.Factory.Support,PropertiesObjectDefinitionReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\PropertiesObjectDefinitionReader.cs,RegisterObjectDefinition,The length of the statement  "		IConfigurableObjectDefinition objectDefinition = ObjectDefinitionFactory.CreateObjectDefinition (typeName' parent' Domain); " is 123.
Long Statement,Spring.Objects.Factory.Support,ReplacedMethodOverride,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ReplacedMethodOverride.cs,ToString,The length of the statement  "	return new StringBuilder (GetType ().Name).Append (" for method '").Append (MethodName).Append ("'; will call object '").Append (this.methodReplacerObjectName).Append ("'.").ToString (); " is 186.
Long Statement,Spring.Objects.Factory.Support,RootObjectDefinition,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\RootObjectDefinition.cs,Validate,The length of the statement  "			throw new ObjectDefinitionValidationException ("IFactoryObject must be defined as a singleton - " + "IFactoryObjects themselves are not allowed to be prototypes."); " is 164.
Long Statement,Spring.Objects.Factory.Support,SimpleInstantiationStrategy,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\SimpleInstantiationStrategy.cs,Instantiate,The length of the statement  "		Type objectType = definition.HasObjectType ? definition.ObjectType : TypeResolutionUtils.ResolveType (definition.ObjectTypeName); " is 129.
Long Statement,Spring.Objects.Factory.Support,SimpleInstantiationStrategy,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\SimpleInstantiationStrategy.cs,GetZeroArgConstructorInfo,The length of the statement  "	const BindingFlags flags = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly; " is 124.
Long Statement,Spring.Objects.Factory.Support,SimpleInstantiationStrategy,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\SimpleInstantiationStrategy.cs,GetZeroArgConstructorInfo,The length of the statement  "		throw new FatalReflectionException (string.Format (CultureInfo.InvariantCulture' "Cannot instantiate a class that does not have a no-argument constructor [{0}]."' type)); " is 170.
Long Statement,Spring.Objects.Factory.Support,SimpleInstantiationStrategy,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\SimpleInstantiationStrategy.cs,Instantiate,The length of the statement  "		throw new ObjectDefinitionStoreException (string.Format (CultureInfo.InvariantCulture' "Factory method '{0}' threw an Exception."' factoryMethod)' ex); " is 151.
Long Statement,Spring.Objects.Factory.Support,StaticListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\StaticListableObjectFactory.cs,GetObjectsOfType,The length of the statement  "			if ((objectType == null && factory.IsSingleton) || ((factory.IsSingleton || includePrototypes) && objectType != null && type.IsAssignableFrom (objectType))) { " is 158.
Long Statement,Spring.Objects.Factory.Xml,AbstractObjectDefinitionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\AbstractObjectDefinitionParser.cs,ParseElement,The length of the statement  "				parserContext.ReaderContext.ReportException (element' "null"' "Id is required for element '" + element.LocalName + "' when used as a top-level tag"' null); " is 155.
Long Statement,Spring.Objects.Factory.Xml,NamespaceParserSupport,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\NamespaceParserSupport.cs,FindParserForElement,The length of the statement  "		parserContext.ReaderContext.ReportException (element' "unknown object name"' "Cannot locate IObjectDefinitionParser for element [" + element.LocalName + "]"); " is 158.
Long Statement,Spring.Objects.Factory.Xml,ObjectDefinitionParserHelper,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectDefinitionParserHelper.cs,ParseObjectDefinitionElement,The length of the statement  "				log.Debug (string.Format ("No XML 'id' specified using '{0}' as object name and '{1}' as aliases"' objectName' string.Join ("'"' (string[])aliases.ToArray (typeof(string))))); " is 175.
Long Statement,Spring.Objects.Factory.Xml,ObjectDefinitionParserHelper,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectDefinitionParserHelper.cs,ParseObjectDefinitionElement,The length of the statement  "	IConfigurableObjectDefinition definition = objectsNamespaceParser.ParseObjectDefinitionElement (element' objectName' parserContext); " is 132.
Long Statement,Spring.Objects.Factory.Xml,ObjectDefinitionParserHelper,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectDefinitionParserHelper.cs,ParseObjectDefinitionElement,The length of the statement  "				if (objectTypeName != null && objectName.StartsWith (objectTypeName) && objectName.Length > objectTypeName.Length && !readerContext.Registry.IsObjectNameInUse (objectTypeName)) { " is 178.
Long Statement,Spring.Objects.Factory.Xml,ObjectDefinitionParserHelper,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectDefinitionParserHelper.cs,ParseObjectDefinitionElement,The length of the statement  "				log.Debug (string.Format ("Neither XML '{0}' nor '{1}' specified - using generated object name [{2}]"' ObjectDefinitionConstants.IdAttribute' ObjectDefinitionConstants.NameAttribute' objectName)); " is 196.
Long Statement,Spring.Objects.Factory.Xml,XmlReaderContext,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\XmlReaderContext.cs,ReportException,The length of the statement  "	throw new ObjectDefinitionStoreException (resourceDescription' name' message + Environment.NewLine + xmlFragment' cause); " is 121.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ImportObjectDefinitionResource,The length of the statement  "			log.Debug (string.Format (CultureInfo.InvariantCulture' "Attempting to import object definitions from '{0}'."' location)); " is 122.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ImportObjectDefinitionResource,The length of the statement  "		parserContext.ReaderContext.ReportException (resource' null' string.Format (CultureInfo.InvariantCulture' "Invalid relative resource location '{0}' to import object definitions from."' location)' ex); " is 200.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseEventListenerDefinition,The length of the statement  "	IEventHandlerValue myHandler = ObjectDefinitionReaderUtils.CreateEventHandlerValue (GetAttributeValue (element' ObjectDefinitionConstants.ListenerMethodAttribute)' GetAttributeValue (element' ObjectDefinitionConstants.ListenerEventAttribute)); " is 243.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseEventListenerDefinition,The length of the statement  "		parserContext.ReaderContext.ReportFatalException (sourceElement' string.Format (CultureInfo.InvariantCulture' "The single attribute of the <{0}/> element cannot be empty. Specify the " + "object id (alias) or the full' assembly qualified Type name that is the " + "source of the event."' ObjectDefinitionConstants.RefElement)); " is 327.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseEventListenerDefinition,The length of the statement  "		myHandler.Source = parserContext.ReaderContext.Reader.Domain == null ? (object)sourceAtt.Value : (object)TypeResolutionUtils.ResolveType (sourceAtt.Value); " is 155.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseObjectDefinition,The length of the statement  "		//throw new ObjectDefinitionStoreException(string.Format("Failed parsing object definition '{0}'"' element.OuterXml)' ex); " is 122.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseObjectDefinition,The length of the statement  "		log.Debug (string.Format (CultureInfo.InvariantCulture' "Registering object definition with id '{0}'."' holder.ObjectName)); " is 124.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseObjectDefinitionElement,The length of the statement  "				throw new ObjectDefinitionStoreException (parserContext.ReaderContext.Resource' id' "The 'type' attribute does not need to be present' but if it is it must not be empty: got '" + typeName + "'."); " is 196.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseObjectDefinitionElement,The length of the statement  "		AbstractObjectDefinition od = parserContext.ReaderContext.ObjectDefinitionFactory.CreateObjectDefinition (typeName' parent' parserContext.ReaderContext.Reader.Domain); " is 167.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseObjectDefinitionElement,The length of the statement  "			od.IsSingleton = IsTrueStringValue (GetAttributeValue (element' ObjectDefinitionConstants.SingletonAttribute' string.Empty).ToLower (CultureInfo.CurrentCulture)); " is 162.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseObjectDefinitionElement,The length of the statement  "		parserContext.ReaderContext.ReportException (element' id' string.Format ("Object class [{0}] not found."' typeName)' ex); " is 121.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseLookupMethodElement,The length of the statement  "		throw new ObjectDefinitionStoreException (parserContext.ReaderContext.Resource' name' string.Format ("The '{0}' attribute is required for the '{1}' element."' ObjectDefinitionConstants.LookupMethodNameAttribute' ObjectDefinitionConstants.LookupMethodElement)); " is 260.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseLookupMethodElement,The length of the statement  "		throw new ObjectDefinitionStoreException (parserContext.ReaderContext.Resource' name' string.Format ("The '{0}' attribute is required for the '{1}' element."' ObjectDefinitionConstants.LookupMethodObjectNameAttribute' ObjectDefinitionConstants.LookupMethodElement)); " is 266.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseReplacedMethodElement,The length of the statement  "	string targetReplacerObjectName = GetAttributeValue (element' ObjectDefinitionConstants.ReplacedMethodReplacerNameAttribute); " is 125.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseReplacedMethodElement,The length of the statement  "		throw new ObjectDefinitionStoreException (parserContext.ReaderContext.Resource' name' string.Format ("The '{0}' attribute is required for the '{1}' element."' ObjectDefinitionConstants.ReplacedMethodNameAttribute' ObjectDefinitionConstants.ReplacedMethodElement)); " is 264.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseReplacedMethodElement,The length of the statement  "		throw new ObjectDefinitionStoreException (parserContext.ReaderContext.Resource' name' string.Format ("The '{0}' attribute is required for the '{1}' element."' ObjectDefinitionConstants.ReplacedMethodReplacerNameAttribute' ObjectDefinitionConstants.ReplacedMethodElement)); " is 272.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseReplacedMethodElement,The length of the statement  "			throw new ObjectDefinitionStoreException (parserContext.ReaderContext.Resource' name' string.Format ("The '{0}' attribute is required for the '{1}' element."' ObjectDefinitionConstants.ReplacedMethodArgumentTypeMatchAttribute' ObjectDefinitionConstants.ReplacedMethodArgumentTypeElement)); " is 289.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseConstructorArgElement,The length of the statement  "		throw new ObjectDefinitionStoreException (parserContext.ReaderContext.Resource' name' "Only one of the 'index' or 'name' attributes can be present per constructor argument."); " is 175.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseConstructorArgElement,The length of the statement  "				throw new ObjectDefinitionStoreException (parserContext.ReaderContext.Resource' name' "'index' cannot be lower than 0"); " is 120.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseConstructorArgElement,The length of the statement  "			throw new ObjectDefinitionStoreException (parserContext.ReaderContext.Resource' name' "Attribute 'index' of tag 'constructor-arg' must be an integer value."); " is 158.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseConstructorArgElement,The length of the statement  "				log.Warn ("The 'type' attribute is redundant when the 'name' attribute has been used on a constructor argument element."); " is 122.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParsePropertyElement,The length of the statement  "		throw new ObjectDefinitionStoreException (parserContext.ReaderContext.Resource' name' "The 'property' element must have a 'name' attribute"); " is 141.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParsePropertyValue,The length of the statement  "		throw new ObjectDefinitionStoreException (parserContext.ReaderContext.Resource' name' "The '<property/>' element must have a subelement such as 'value' or 'ref'."); " is 164.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParsePropertySubElement,The length of the statement  "			throw new ObjectDefinitionStoreException (parserContext.ReaderContext.Resource' name' "Unknown subelement of <property>: <" + element.Name + ">"); " is 146.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseIdReference,The length of the statement  "			throw new ObjectDefinitionStoreException (parserHelper.ReaderContext.Resource' name' "Either 'object' or 'local' is required for an idref"); " is 140.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseReference,The length of the statement  "				throw new ObjectDefinitionStoreException (parserHelper.ReaderContext.Resource' name' "Either 'object' or 'local' is required for a reference"); " is 143.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseDictionaryElement,The length of the statement  "					throw new ObjectDefinitionStoreException (parserContext.ReaderContext.Resource' name' string.Format ("One of either the '{0}' element' or the the '{1}' or '{2}' attributes " + "is required for the <{3}/> element."' ObjectDefinitionConstants.KeyElement' ObjectDefinitionConstants.KeyAttribute' ObjectDefinitionConstants.DictionaryKeyRefShortcutAttribute' ObjectDefinitionConstants.EntryElement)); " is 395.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseDictionaryElement,The length of the statement  "					throw new ObjectDefinitionStoreException (parserContext.ReaderContext.Resource' name' string.Format ("Malformed <{0}/> element... the value of the key must be " + "specified as a child value-style element."' ObjectDefinitionConstants.KeyElement)); " is 247.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseDictionaryElement,The length of the statement  "				throw new ObjectDefinitionStoreException (parserContext.ReaderContext.Resource' name' string.Format ("One of either the '{0}' or '{1}' attributes' or a value-style element " + "is required for the <{2}/> element."' ObjectDefinitionConstants.ValueAttribute' ObjectDefinitionConstants.DictionaryValueRefShortcutAttribute' ObjectDefinitionConstants.EntryElement)); " is 361.
Long Statement,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseTextValueElement,The length of the statement  "	bool preserveWhitespace = 0 == string.Compare ("preserve"' element.GetAttribute ("space"' "http://www.w3.org/XML/1998/namespace")' true); " is 137.
Long Statement,Spring.Objects.Factory.Xml,XmlObjectDefinitionReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\XmlObjectDefinitionReader.cs,DoLoadObjectDefinitions,The length of the statement  "		throw new ObjectDefinitionStoreException (resource.Description' "Line " + ex.LineNumber + " in XML document from " + resource + " is not well formed.  " + ex.Message' ex); " is 171.
Long Statement,Spring.Objects.Factory.Xml,XmlObjectDefinitionReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\XmlObjectDefinitionReader.cs,DoLoadObjectDefinitions,The length of the statement  "		throw new ObjectDefinitionStoreException (resource.Description' "Line " + ex.LineNumber + " in XML document from " + resource + " violates the schema.  " + ex.Message' ex); " is 172.
Long Statement,Spring.Objects.Factory.Xml,XmlObjectDefinitionReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\XmlObjectDefinitionReader.cs,DoLoadObjectDefinitions,The length of the statement  "		throw new ObjectDefinitionStoreException ("Unexpected exception parsing XML document from " + resource.Description + "Inner exception message= " + ex.Message' ex); " is 163.
Long Statement,Spring.Objects.Factory.Xml,NamespaceParserRegistry,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\NamespaceParserRegistry.cs,RegisterParser,The length of the statement  "				throw new ArgumentNullException ("Either default or an explicit namespace value must be specified for a configuration parser."); " is 128.
Long Statement,Spring.Objects.Factory.Xml,NamespaceParserRegistry,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\NamespaceParserRegistry.cs,RegisterParser,The length of the statement  "		throw new ArgumentException (string.Format ("The [{0}] Type must implement the INamespaceParser interface."' parserType.Name)' "parserType"); " is 141.
Long Statement,Spring.Objects.Factory.Xml,NamespaceParserRegistry,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\NamespaceParserRegistry.cs,RegisterParser,The length of the statement  "			throw new ArgumentNullException ("Either default or an explicit namespace value must be specified for a configuration parser."); " is 128.
Long Statement,Spring.Objects.Factory.Xml,DefaultObjectDefinitionDocumentReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\DefaultObjectDefinitionDocumentReader.cs,RegisterObjectDefinitions,The length of the statement  "		log.Debug (string.Format ("Found {0} <{1}> elements defining objects."' readerContext.Registry.ObjectDefinitionCount' ObjectDefinitionConstants.ObjectElement)); " is 160.
Long Statement,Spring.Objects.Factory.Xml,DefaultObjectDefinitionDocumentReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\DefaultObjectDefinitionDocumentReader.cs,ProcessObjectDefinition,The length of the statement  "			log.Debug (string.Format (CultureInfo.InvariantCulture' "Registering object definition with id '{0}'."' bdHolder.ObjectName)); " is 126.
Long Statement,Spring.Objects.Factory.Xml,DefaultObjectDefinitionDocumentReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\DefaultObjectDefinitionDocumentReader.cs,ProcessObjectDefinition,The length of the statement  "		throw new ObjectDefinitionStoreException (string.Format ("Failed parsing object definition '{0}'"' element.OuterXml)' ex); " is 122.
Long Statement,Spring.Objects.Factory.Xml,DefaultObjectDefinitionDocumentReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\DefaultObjectDefinitionDocumentReader.cs,ImportObjectDefinitionResource,The length of the statement  "			log.Debug (string.Format (CultureInfo.InvariantCulture' "Attempting to import object definitions from '{0}'."' location)); " is 122.
Long Statement,Spring.Objects.Factory.Xml,DefaultObjectDefinitionDocumentReader,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\DefaultObjectDefinitionDocumentReader.cs,ImportObjectDefinitionResource,The length of the statement  "		ReaderContext.ReportException (resource' null' string.Format (CultureInfo.InvariantCulture' "Invalid relative resource location '{0}' to import object definitions from."' location)' ex); " is 186.
Long Statement,Spring.Objects,ObjectWrapper,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\ObjectWrapper.cs,SetPropertyValues,The length of the statement  "			Log.Error (string.Format ("Failed setting property '{0}' on instance of type '{1}'"' pv.Name' this.WrappedType.FullName)' ex); " is 126.
Long Statement,Spring.Objects,ObjectWrapper,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\ObjectWrapper.cs,SetPropertyValues,The length of the statement  "		throw new PropertyAccessExceptionsException (this' (PropertyAccessException[])propertyAccessExceptions.ToArray (typeof(PropertyAccessException))); " is 146.
Long Statement,Spring.Objects,PropertyValue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\PropertyValue.cs,ToString,The length of the statement  "	return string.Format (CultureInfo.InvariantCulture' "PropertyValue: name='{0}'; value=[{1}]."' propertyName' propertyValue); " is 124.
Long Statement,Spring.Objects,PropertyValue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\PropertyValue.cs,Equals,The length of the statement  "	return (propertyName.Equals (otherPv.propertyName) && ((propertyValue == null && otherPv.propertyValue == null) || propertyValue.Equals (otherPv.propertyValue))); " is 162.
Long Statement,Spring.Objects.Events.Support,EventManipulationUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Events\Support\EventManipulationUtils.cs,GetMethodInfoMatchingSignature,The length of the statement  "	MemberInfo[] methods = subscriberType.FindMembers (MemberTypes.Method' ReflectionUtils.AllMembersCaseInsensitiveFlags' new MemberFilter (new CriteriaMemberFilter ().FilterMemberByCriteria)' criteria); " is 200.
Long Statement,Spring.Objects.Events.Support,EventRegistry,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Events\Support\EventRegistry.cs,WireOrUnwireSubscriberToPublisher,The length of the statement  "				currentEvent.AddEventHandler (currentPublisher' EventManipulationUtils.GetHandlerDelegate (eventHandlerType' subscriber' eventHandler)); " is 136.
Long Statement,Spring.Objects.Events.Support,EventRegistry,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Events\Support\EventRegistry.cs,WireOrUnwireSubscriberToPublisher,The length of the statement  "				currentEvent.RemoveEventHandler (currentPublisher' EventManipulationUtils.GetHandlerDelegate (eventHandlerType' subscriber' eventHandler)); " is 139.
Long Statement,Spring.Objects.Factory,ObjectCreationException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\ObjectCreationException.cs,FormatMessage,The length of the statement  "		return StringUtils.IsNullOrEmpty (resourceDescription) ? string.Format ("Error creating object with name '{0}' : {1}"' objectName' message) : string.Format ("Error creating object with name '{0}' defined in '{1}' : {2}"' objectName' resourceDescription' message); " is 263.
Long Statement,Spring.Objects.Factory,ObjectCreationException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\ObjectCreationException.cs,FormatMessage,The length of the statement  "		return StringUtils.IsNullOrEmpty (resourceDescription) ? string.Format ("Error thrown by a dependency of object '{0}' : {1}{2}"' objectName' message' callStack) : string.Format ("Error thrown by a dependency of object '{0}' defined in '{1}' : {2}{3}"' objectName' resourceDescription' message' callStack); " is 305.
Long Statement,Spring.Objects.Factory,ObjectCreationException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\ObjectCreationException.cs,GetObjectCreationException,The length of the statement  "		return new ObjectCreationException (resourceDescription' objectName' string.Format (CultureInfo.InvariantCulture' "Invalid type for property '{0}' of object '{1}' in '{2}'."' propertyName' objectName' resourceDescription)' ex); " is 227.
Long Statement,Spring.Objects.Factory,ObjectCreationException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\ObjectCreationException.cs,GetObjectCreationException,The length of the statement  "	return new ObjectCreationException (resourceDescription' objectName' string.Format (CultureInfo.InvariantCulture' "Can't resolve reference to object '{0}' while setting '{1}'."' referenceName' propertyName)' ex); " is 212.
Long Statement,Spring.Objects.Factory,ObjectFactoryUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\ObjectFactoryUtils.cs,IsFactoryDereference,The length of the statement  "	return name != null && name.Length > ObjectFactoryUtils.FactoryObjectPrefix.Length && name [0] == ObjectFactoryUtils.FactoryObjectPrefix [0] && name.StartsWith (ObjectFactoryUtils.FactoryObjectPrefix); " is 201.
Long Statement,Spring.Objects.Support,AbstractEventHandlerValue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Support\AbstractEventHandlerValue.cs,ToString,The length of the statement  "	return string.Format (CultureInfo.InvariantCulture' "{0} [Source = '{1}'' Method = '{2}']"' GetType ().FullName' Source' MethodName); " is 133.
Long Statement,Spring.Objects.Support,AbstractWiringEventHandlerValue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Support\AbstractWiringEventHandlerValue.cs,ResolveHandlerMethod,The length of the statement  "	MethodInfo method = handlerType.GetMethod (MethodName' flags' Type.DefaultBinder' CallingConventions.Standard' // cache this? for EventHandler types' we're always gonna get the same parameters " is 192.
Long Statement,Spring.Objects.Support,AbstractWiringEventHandlerValue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Support\AbstractWiringEventHandlerValue.cs,ResolveHandlerMethod,The length of the statement  "		throw new FatalObjectException (string.Format (CultureInfo.InvariantCulture' "The '{0}' method could not be found on this object [{1}]"' MethodName' handlerType)); " is 163.
Long Statement,Spring.Objects.Support,InstanceEventHandlerValue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Support\InstanceEventHandlerValue.cs,GetHandler,The length of the statement  "	MethodInfo methodMeta = ResolveHandlerMethod (ReflectionUtils.TypeOfOrType (instance)' info.EventHandlerType' InstanceEventHandlerValue.InstanceMethodFlags); " is 157.
Long Statement,Spring.Objects.Support,MethodInvoker,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Support\MethodInvoker.cs,Prepare,The length of the statement  "		throw new ArgumentException ("The target method cannot be an instance method without a corresponding target instance on which to invoke it."); " is 142.
Long Statement,Spring.Objects.Support,MethodInvoker,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Support\MethodInvoker.cs,PrepareArguments,The length of the statement  "				throw new ArgumentException (string.Format (CultureInfo.InvariantCulture' "The named argument '{0}' could not be found on the '{1}' method of class [{2}]."' argumentName' _methodObject.Name' _methodObject.DeclaringType.FullName)); " is 230.
Long Statement,Spring.Objects.Support,MethodInvoker,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Support\MethodInvoker.cs,FindTheMethodToInvoke,The length of the statement  "		MemberInfo[] matchingMethods = targetType.FindMembers (MemberTypes.Method' MethodSearchingFlags' new MemberFilter (new CriteriaMemberFilter ().FilterMemberByCriteria)' searchCriteria); " is 184.
Long Statement,Spring.Objects.Support,MethodInvoker,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Support\MethodInvoker.cs,FindTheMethodToInvoke,The length of the statement  "		MemberInfo[] matchingMethods = targetType.FindMembers (MemberTypes.Method' MethodSearchingFlags' new MemberFilter (new CriteriaMemberFilter ().FilterMemberByCriteria)' searchCriteria); " is 184.
Long Statement,Spring.Objects.Support,MethodInvoker,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Support\MethodInvoker.cs,FindTheMethodToInvoke,The length of the statement  "			throw new ArgumentException (string.Format (CultureInfo.InvariantCulture' "Unable to determine which exact method to call; found '{0}' matches."' matchingMethods.Length)); " is 171.
Long Statement,Spring.Objects.Support,MethodInvoker,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Support\MethodInvoker.cs,Invoke,The length of the statement  "		throw new MethodInvocationException (string.Format (CultureInfo.InvariantCulture' "At least one of the arguments passed to this {0} was " + "incompatible with the signature of the invoked method."' GetType ().Name)' ex); " is 220.
Long Statement,Spring.Objects.Support,StaticEventHandlerValue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Support\StaticEventHandlerValue.cs,GetHandler,The length of the statement  "		throw new FatalObjectException (string.Format (CultureInfo.InvariantCulture' "Only 'System.Type' instances can be wired by instances of " + "the StaticEventHandlerValue class; got '{0}'"' instance)); " is 199.
Long Statement,Spring.Proxy,AbstractProxyMethodBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Proxy\AbstractProxyMethodBuilder.cs,DefineMethod,The length of the statement  "		attributes = MethodAttributes.Public | MethodAttributes.ReuseSlot | MethodAttributes.HideBySig | MethodAttributes.Virtual; " is 122.
Long Statement,Spring.Proxy,AbstractProxyMethodBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Proxy\AbstractProxyMethodBuilder.cs,DefineMethod,The length of the statement  "	methodBuilder = typeBuilder.DefineMethod (name' attributes' method.CallingConvention' method.ReturnType' ReflectionUtils.GetParameterTypes (method.GetParameters ())); " is 166.
Long Statement,Spring.Proxy,AbstractProxyMethodBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Proxy\AbstractProxyMethodBuilder.cs,DefineGenericParameters,The length of the statement  "		GenericTypeParameterBuilder[] gtpBuilders = methodBuilder.DefineGenericParameters (ReflectionUtils.GetGenericParameterNames (genericArguments)); " is 144.
Long Statement,Spring.Proxy,AbstractProxyMethodBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Proxy\AbstractProxyMethodBuilder.cs,CallAssertUnderstands,The length of the statement  "	//            il.Emit(OpCodes.Ldstr' string.Format("Interface method '{0}.{1}()' was not handled by any interceptor and the target does not implement this method."' method.DeclaringType.FullName' method.Name)); " is 210.
Long Statement,Spring.Proxy,AbstractProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Proxy\AbstractProxyTypeBuilder.cs,ApplyMethodParameterAttributes,The length of the statement  "		ParameterBuilder parameterBuilder = methodBuilder.DefineParameter ((paramInfo.Position + 1)' paramInfo.Attributes' paramInfo.Name); " is 131.
Long Statement,Spring.Proxy,AbstractProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Proxy\AbstractProxyTypeBuilder.cs,GetMethodReturnTypeAttributes,The length of the statement  "			System.Collections.Generic.IList<CustomAttributeData> attrsData = CustomAttributeData.GetCustomAttributes (method.ReturnParameter); " is 131.
Long Statement,Spring.Proxy,AbstractProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Proxy\AbstractProxyTypeBuilder.cs,ImplementConstructors,The length of the statement  "	ConstructorInfo[] constructors = TargetType.GetConstructors (BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance); " is 131.
Long Statement,Spring.Proxy,AbstractProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Proxy\AbstractProxyTypeBuilder.cs,ImplementConstructors,The length of the statement  "			ConstructorBuilder cb = typeBuilder.DefineConstructor (constructor.Attributes' constructor.CallingConvention' DefineConstructorParameters (constructor)); " is 153.
Long Statement,Spring.Proxy,AbstractProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Proxy\AbstractProxyTypeBuilder.cs,ImplementInterface,The length of the statement  "		if (!proxyVirtualMethods && !mapping.TargetMethods [i].DeclaringType.IsInterface && mapping.TargetMethods [i].IsVirtual && !mapping.TargetMethods [i].IsFinal) " is 158.
Long Statement,Spring.Proxy,AbstractProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Proxy\AbstractProxyTypeBuilder.cs,ImplementInterface,The length of the statement  "		MethodBuilder methodBuilder = proxyMethodBuilder.BuildProxyMethod (mapping.TargetMethods [i]' mapping.InterfaceMethods [i]); " is 124.
Long Statement,Spring.Proxy,AbstractProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Proxy\AbstractProxyTypeBuilder.cs,InheritType,The length of the statement  "		if (method.IsVirtual && !method.IsFinal && !method.Name.Equals ("Finalize") && (memberAccess == MethodAttributes.Public || memberAccess == MethodAttributes.Family || memberAccess == MethodAttributes.FamORAssem)) { " is 213.
Long Statement,Spring.Proxy,AbstractProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Proxy\AbstractProxyTypeBuilder.cs,ImplementProperty,The length of the statement  "		string propertyName = (type.IsInterface && ((getMethod != null && getMethod.IsPrivate) || (setMethod != null && setMethod.IsPrivate))) ? type.FullName + "." + property.Name : property.Name; " is 189.
Long Statement,Spring.Proxy,AbstractProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Proxy\AbstractProxyTypeBuilder.cs,ImplementProperty,The length of the statement  "		PropertyBuilder pb = typeBuilder.DefineProperty (propertyName' PropertyAttributes.None' property.PropertyType' Type.EmptyTypes); " is 128.
Long Statement,Spring.Proxy,AbstractProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Proxy\AbstractProxyTypeBuilder.cs,GetProxiableInterfaces,The length of the statement  "		if (!Attribute.IsDefined (intf' typeof(ProxyIgnoreAttribute)' false) && !IsSpecialInterface (intf) && ReflectionUtils.IsTypeVisible (intf' DynamicProxyManager.ASSEMBLY_NAME)) { " is 176.
Long Statement,Spring.Reflection.Dynamic,SafeField,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Reflection\Dynamic\DynamicField.cs,GetOrCreateDynamicField,The length of the statement  "		fieldInfo = new DynamicFieldCacheEntry (DynamicReflectionManager.CreateFieldGetter (field)' DynamicReflectionManager.CreateFieldSetter (field)); " is 144.
Long Statement,Spring.Reflection.Dynamic,SafeMethod,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Reflection\Dynamic\DynamicMethod.cs,Invoke,The length of the statement  "	// special case - when calling Invoke(null'null) it is undecidible if the second null is an argument or the argument array " is 122.
Long Statement,Spring.Reflection.Dynamic,SafeMethod,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Reflection\Dynamic\DynamicMethod.cs,Invoke,The length of the statement  "		throw new ArgumentException (string.Format ("Invalid number of arguments passed into method {0} - expected {1}' but was {2}"' methodInfo.Name' nullArguments.Length' arglen)); " is 174.
Long Statement,Spring.Reflection.Dynamic,SafeProperty,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Reflection\Dynamic\DynamicProperty.cs,GetOrCreateDynamicProperty,The length of the statement  "		propertyInfo = new DynamicPropertyCacheEntry (DynamicReflectionManager.CreatePropertyGetter (property)' DynamicReflectionManager.CreatePropertySetter (property)); " is 162.
Long Statement,Spring.Reflection.Dynamic,DynamicReflectionManager,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Reflection\Dynamic\DynamicReflectionManager.cs,CreateFieldGetter,The length of the statement  "	System.Reflection.Emit.DynamicMethod dmGetter = CreateDynamicMethod ("get_" + fieldInfo.Name' typeof(object)' argumentTypes' fieldInfo' skipVisibility); " is 152.
Long Statement,Spring.Reflection.Dynamic,DynamicReflectionManager,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Reflection\Dynamic\DynamicReflectionManager.cs,CreatePropertySetter,The length of the statement  "	NetDynamicMethod dm = CreateDynamicMethod ("set_" + propertyInfo.Name' null' argumentTypes' propertyInfo' skipVisibility); " is 122.
Long Statement,Spring.Reflection.Dynamic,DynamicReflectionManager,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Reflection\Dynamic\DynamicReflectionManager.cs,EmitFieldSetter,The length of the statement  "		EmitThrowInvalidOperationException (il' string.Format ("Cannot write to read-only field '{0}.{1}'"' fieldInfo.DeclaringType.FullName' fieldInfo.Name)); " is 151.
Long Statement,Spring.Reflection.Dynamic,DynamicReflectionManager,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Reflection\Dynamic\DynamicReflectionManager.cs,EmitPropertyGetter,The length of the statement  "		EmitThrowInvalidOperationException (il' string.Format ("Cannot read from write-only property '{0}.{1}'"' propertyInfo.DeclaringType.FullName' propertyInfo.Name)); " is 162.
Long Statement,Spring.Reflection.Dynamic,DynamicReflectionManager,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Reflection\Dynamic\DynamicReflectionManager.cs,EmitPropertySetter,The length of the statement  "		EmitThrowInvalidOperationException (il' string.Format ("Cannot write to read-only property '{0}.{1}'"' propertyInfo.DeclaringType.FullName' propertyInfo.Name)); " is 160.
Long Statement,Spring.Reflection.Dynamic,DynamicReflectionManager,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Reflection\Dynamic\DynamicReflectionManager.cs,ConvertValueTypeArgumentIfNecessary,The length of the statement  "		throw new InvalidCastException (string.Format ("Cannot convert NULL at position {0} to argument type {1}"' argIndex' targetType.FullName)); " is 139.
Long Statement,Spring.Reflection.Dynamic,DynamicReflectionManager,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Reflection\Dynamic\DynamicReflectionManager.cs,ConvertValueTypeArgumentIfNecessary,The length of the statement  "		throw new InvalidCastException (string.Format ("Cannot convert value '{0}' of type {1} at position {2} to argument type {3}"' value' valueType.FullName' argIndex' targetType.FullName)); " is 185.
Long Statement,Spring.Reflection.Dynamic,DynamicReflectionManager,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Reflection\Dynamic\DynamicReflectionManager.cs,ConvertValueTypeArgumentIfNecessary,The length of the statement  "		throw new InvalidCastException (string.Format ("Cannot convert value '{0}' of type {1} at position {2} to argument type {3}"' value' valueType.FullName' argIndex' targetType.FullName)' ex); " is 189.
Long Statement,Spring.Threading,Utils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Threading\Utils.cs,ToTimeMillis,The length of the statement  "	// see http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dv_jlca/html/vberrjavalangsystemcurrenttimemillis.asp " is 125.
Long Statement,Spring.Util,ArrayUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ArrayUtils.cs,Concat,The length of the statement  "		throw new ArgumentException (string.Format ("Array element types '{0}' and '{1}' are not compatible"' firstElementType' secondElementType)); " is 140.
Long Statement,Spring.Util,AssertUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\AssertUtils.cs,Understands,The length of the statement  "		throw new NotSupportedException (string.Format (CultureInfo.InvariantCulture' "Target '{0}' is null and target method '{1}.{2}' is not static."' targetName' method.DeclaringType.FullName' method.Name)); " is 202.
Long Statement,Spring.Util,AssertUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\AssertUtils.cs,Understands,The length of the statement  "			throw new NotSupportedException (string.Format (CultureInfo.InvariantCulture' "Target '{0}' is a transparent proxy that does not support methods of '{1}'."' targetName' requiredType.FullName)); " is 193.
Long Statement,Spring.Util,AssertUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\AssertUtils.cs,Understands,The length of the statement  "		throw new NotSupportedException (string.Format (CultureInfo.InvariantCulture' "Target '{0}' of type '{1}' does not support methods of '{2}'."' targetName' targetType' requiredType.FullName)); " is 191.
Long Statement,Spring.Util,AssertUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\AssertUtils.cs,ArgumentNotNull,The length of the statement  "		throw new ArgumentNullException (name' string.Format (CultureInfo.InvariantCulture' "Argument '{0}' cannot be null."' name)); " is 125.
Long Statement,Spring.Util,AssertUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\AssertUtils.cs,ArgumentHasText,The length of the statement  "		throw new ArgumentNullException (name' string.Format (CultureInfo.InvariantCulture' "Argument '{0}' cannot be null or resolve to an empty string : '{1}'."' name' argument)); " is 173.
Long Statement,Spring.Util,AssertUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\AssertUtils.cs,ArgumentHasLength,The length of the statement  "		throw new ArgumentNullException (name' string.Format (CultureInfo.InvariantCulture' "Argument '{0}' cannot be null or resolve to an empty array"' name)); " is 153.
Long Statement,Spring.Util,AssertUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\AssertUtils.cs,ArgumentHasElements,The length of the statement  "		throw new ArgumentException (name' string.Format (CultureInfo.InvariantCulture' "Argument '{0}' must not be null or resolve to an empty collection and must contain non-null elements"' name)); " is 191.
Long Statement,Spring.Util,CollectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\CollectionUtils.cs,Contains,The length of the statement  "	MethodInfo method = collection.GetType ().GetMethod ("contains"' BindingFlags.IgnoreCase | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public); " is 158.
Long Statement,Spring.Util,CollectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\CollectionUtils.cs,Add,The length of the statement  "	method = enumerable.GetType ().GetMethod ("add"' BindingFlags.IgnoreCase | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public); " is 142.
Long Statement,Spring.Util,CollectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\CollectionUtils.cs,Add,The length of the statement  "		throw new InvalidOperationException ("Enumerable type " + enumerable.GetType () + " does not implement a Add() method."); " is 121.
Long Statement,Spring.Util,CollectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\CollectionUtils.cs,ContainsAll,The length of the statement  "	method = targetCollection.GetType ().GetMethod ("containsAll"' BindingFlags.IgnoreCase | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public); " is 156.
Long Statement,Spring.Util,CollectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\CollectionUtils.cs,ContainsAll,The length of the statement  "		method = targetCollection.GetType ().GetMethod ("Contains"' BindingFlags.IgnoreCase | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public); " is 153.
Long Statement,Spring.Util,CollectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\CollectionUtils.cs,RemoveAll,The length of the statement  "	method = targetCollection.GetType ().GetMethod ("removeAll"' BindingFlags.IgnoreCase | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public); " is 154.
Long Statement,Spring.Util,CollectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\CollectionUtils.cs,RemoveAll,The length of the statement  "		method = targetCollection.GetType ().GetMethod ("Remove"' BindingFlags.IgnoreCase | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public' null' new Type[1] { " is 170.
Long Statement,Spring.Util,CollectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\CollectionUtils.cs,RemoveAll,The length of the statement  "		MethodInfo methodContains = targetCollection.GetType ().GetMethod ("Contains"' BindingFlags.IgnoreCase | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public); " is 172.
Long Statement,Spring.Util,CompareUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\CompareUtils.cs,Compare,The length of the statement  "			throw new ArgumentException ("Cannot compare instances of [" + first.GetType ().FullName + "] and [" + second.GetType ().FullName + "] because they cannot be coerced to the same type."); " is 186.
Long Statement,Spring.Util,CompareUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\CompareUtils.cs,Compare,The length of the statement  "		throw new ArgumentException ("Cannot compare instances of the type [" + first.GetType ().FullName + "] because it doesn't implement IComparable"); " is 146.
Long Statement,Spring.Util,ConfigurationUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ConfigurationUtils.cs,SetConfigurationSystem,The length of the statement  "	FieldInfo s_configSystem = typeof(ConfigurationManager).GetField ("s_configSystem"' BindingFlags.Static | BindingFlags.NonPublic); " is 130.
Long Statement,Spring.Util,ConfigurationUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ConfigurationUtils.cs,SetConfigurationSystem,The length of the statement  "	System.Configuration.Internal.IInternalConfigSystem innerConfigSystem = (System.Configuration.Internal.IInternalConfigSystem)s_configSystem.GetValue (null); " is 156.
Long Statement,Spring.Util,ConfigurationUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ConfigurationUtils.cs,SetConfigurationSystem,The length of the statement  "		MethodInfo mi = typeof(ConfigurationManager).GetMethod ("SetConfigurationSystem"' BindingFlags.Static | BindingFlags.NonPublic); " is 128.
Long Statement,Spring.Util,ConfigurationUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ConfigurationUtils.cs,SetConfigurationSystem,The length of the statement  "			mi = typeof(ConfigurationManager).GetMethod ("ChangeConfigurationSystem"' BindingFlags.Static | BindingFlags.NonPublic); " is 120.
Long Statement,Spring.Util,ConfigurationUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ConfigurationUtils.cs,ResetConfigurationSystem,The length of the statement  "	FieldInfo initStateRef = typeof(ConfigurationManager).GetField ("s_initState"' BindingFlags.NonPublic | BindingFlags.Static); " is 125.
Long Statement,Spring.Util,ConfigurationUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ConfigurationUtils.cs,ResetConfigurationSystem,The length of the statement  "	            FieldInfo initStateRef = typeof(ConfigurationSettings).GetField("_initState"'BindingFlags.NonPublic|BindingFlags.Static);" is 121.
Long Statement,Spring.Util,ConfigurationUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ConfigurationUtils.cs,ResetConfigurationSystem,The length of the statement  "	            FieldInfo initStateRef = typeof(ConfigurationSettings).GetField("_configurationInitialized"'BindingFlags.NonPublic|BindingFlags.Static);" is 136.
Long Statement,Spring.Util,ConfigurationUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ConfigurationUtils.cs,ResetConfigurationSystem,The length of the statement  "            FieldInfo configSystemRef = typeof(ConfigurationSettings).GetField("_configSystem"'BindingFlags.NonPublic|BindingFlags.Static);" is 127.
Long Statement,Spring.Util,ObjectUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ObjectUtils.cs,InstantiateType,The length of the statement  "		throw new FatalReflectionException (string.Format (CultureInfo.InvariantCulture' "Cannot load type named [{0}] from assembly [{1}]."' typeName' assembly)); " is 155.
Long Statement,Spring.Util,ObjectUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ObjectUtils.cs,GetZeroArgConstructorInfo,The length of the statement  "		throw new FatalReflectionException (string.Format (CultureInfo.InvariantCulture' "Cannot instantiate a class that does not have a public no-argument constructor [{0}]."' type)); " is 177.
Long Statement,Spring.Util,ObjectUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ObjectUtils.cs,IsInstantiable,The length of the statement  "		throw new FatalReflectionException (string.Format (CultureInfo.InvariantCulture' "Cannot instantiate an interface [{0}]."' type)); " is 130.
Long Statement,Spring.Util,ObjectUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ObjectUtils.cs,IsInstantiable,The length of the statement  "		throw new FatalReflectionException (string.Format (CultureInfo.InvariantCulture' "Cannot instantiate an abstract class [{0}]."' type)); " is 135.
Long Statement,Spring.Util,ObjectUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ObjectUtils.cs,IsInstantiable,The length of the statement  "		throw new FatalReflectionException (string.Format (CultureInfo.InvariantCulture' "Cannot instantiate an open generic type [{0}]."' type)); " is 138.
Long Statement,Spring.Util,ObjectUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ObjectUtils.cs,InstantiateType,The length of the statement  "		throw new FatalReflectionException (string.Format (CultureInfo.InvariantCulture' "Cannot instantiate an interface [{0}]."' constructor.DeclaringType)); " is 151.
Long Statement,Spring.Util,ObjectUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ObjectUtils.cs,InstantiateType,The length of the statement  "		throw new FatalReflectionException (string.Format (CultureInfo.InvariantCulture' "Cannot instantiate an abstract class [{0}]."' constructor.DeclaringType)); " is 156.
Long Statement,Spring.Util,ObjectUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ObjectUtils.cs,InstantiateType,The length of the statement  "		throw new FatalReflectionException (string.Format (CultureInfo.InvariantCulture' "Cannot instantiate an open generic type [{0}]."' constructor.DeclaringType)); " is 159.
Long Statement,Spring.Util,ObjectUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ObjectUtils.cs,InstantiateType,The length of the statement  "		throw new FatalReflectionException (string.Format (CultureInfo.InvariantCulture' "Cannot instantiate Type [{0}] using ctor [{1}] : '{2}'"' constructor.DeclaringType' constructor' ex.Message)' ex); " is 196.
Long Statement,Spring.Util,ObjectUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ObjectUtils.cs,IsAssignable,The length of the statement  "	return (type.IsInstanceOfType (obj) || (type.Equals (typeof(bool)) && obj is Boolean) || (type.Equals (typeof(byte)) && obj is Byte) || (type.Equals (typeof(char)) && obj is Char) || (type.Equals (typeof(sbyte)) && obj is SByte) || (type.Equals (typeof(int)) && obj is Int32) || (type.Equals (typeof(short)) && obj is Int16) || (type.Equals (typeof(long)) && obj is Int64) || (type.Equals (typeof(float)) && obj is Single) || (type.Equals (typeof(double)) && obj is Double)); " is 475.
Long Statement,Spring.Util,ObjectUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ObjectUtils.cs,IsSimpleProperty,The length of the statement  "	return type.IsPrimitive || type.Equals (typeof(string)) || type.Equals (typeof(string[])) || IsPrimitiveArray (type) || type.Equals (typeof(Type)) || type.Equals (typeof(Type[])); " is 179.
Long Statement,Spring.Util,ObjectUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ObjectUtils.cs,IsPrimitiveArray,The length of the statement  "	return typeof(bool[]).Equals (type) || typeof(sbyte[]).Equals (type) || typeof(char[]).Equals (type) || typeof(short[]).Equals (type) || typeof(int[]).Equals (type) || typeof(long[]).Equals (type) || typeof(float[]).Equals (type) || typeof(double[]).Equals (type); " is 264.
Long Statement,Spring.Util,DynamicCodeManager,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\DynamicCodeManager.cs,GetModuleBuilder,The length of the statement  "			assembly = AppDomain.CurrentDomain.DefineDynamicAssembly (an' AssemblyBuilderAccess.RunAndSave' null' null' null' null' null' true); " is 132.
Long Statement,Spring.Util,DynamicCodeManager,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\DynamicCodeManager.cs,GetModuleBuilder,The length of the statement  "                    assembly = AppDomain.CurrentDomain.DefineDynamicAssembly(an' AssemblyBuilderAccess.Run' null' null' null' null'null' true );" is 124.
Long Statement,Spring.Util,DynamicCodeManager,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\DynamicCodeManager.cs,SaveAssembly,The length of the statement  "		throw new ArgumentException (string.Format ("'{0}' is not a valid dynamic assembly name"' assemblyName)' "assemblyName"); " is 121.
Long Statement,Spring.Util,PatternMatchUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\PatternMatchUtils.cs,SimpleMatch,The length of the statement  "	if (pattern.StartsWith ("*") && pattern.EndsWith ("*") && str.IndexOf (pattern.Substring (1' (pattern.Length - 1) - (1))) != -1) { " is 130.
Long Statement,Spring.Util,NumberUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\NumberUtils.cs,IsInteger,The length of the statement  "	return (number is Int32 || number is Int16 || number is Int64 || number is UInt32 || number is UInt16 || number is UInt64 || number is Byte || number is SByte); " is 160.
Long Statement,Spring.Util,NumberUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\NumberUtils.cs,CanConvertToInteger,The length of the statement  "	return (converter.CanConvertTo (typeof(Int32)) || converter.CanConvertTo (typeof(Int16)) || converter.CanConvertTo (typeof(Int64)) || converter.CanConvertTo (typeof(UInt16)) || converter.CanConvertTo (typeof(UInt64)) || converter.CanConvertTo (typeof(Byte)) || converter.CanConvertTo (typeof(SByte))); " is 301.
Long Statement,Spring.Util,NumberUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\NumberUtils.cs,CanConvertToDecimal,The length of the statement  "	return (converter.CanConvertTo (typeof(Single)) || converter.CanConvertTo (typeof(Double)) || converter.CanConvertTo (typeof(Decimal))); " is 136.
Long Statement,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,GetMethod,The length of the statement  "	MethodInfo retMethod = targetType.GetMethod (method' ReflectionUtils.AllMembersCaseInsensitiveFlags' null' argumentTypes == null ? Type.EmptyTypes : argumentTypes' null); " is 170.
Long Statement,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,MapInterfaceMethodToImplementationIfNecessary,The length of the statement  "	AssertUtils.IsTrue (methodInfo.DeclaringType.IsAssignableFrom (implementingType)' "methodInfo and implementingType are unrelated"); " is 131.
Long Statement,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,GetMethodBaseByArgumentValues,The length of the statement  "					if ((paramValue == null && paramType.IsValueType) || (paramValue != null && !paramType.IsAssignableFrom (paramValue.GetType ()))) { " is 131.
Long Statement,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,GetMethodBaseByArgumentValues,The length of the statement  "				throw new AmbiguousMatchException (string.Format ("Ambiguous match for {0} '{1}' for the specified number and types of arguments."' methodTypeName' m.Name)); " is 157.
Long Statement,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,PropertyIsIndexer,The length of the statement  "	DefaultMemberAttribute[] attribs = (DefaultMemberAttribute[])type.GetCustomAttributes (typeof(DefaultMemberAttribute)' true); " is 125.
Long Statement,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,MethodIsOnOneOfTheseInterfaces,The length of the statement  "			MethodInfo mi = interfaceType.GetMethod (method.Name' BindingFlags.Instance | BindingFlags.Public | BindingFlags.DeclaredOnly' null' paramTypes' null); " is 151.
Long Statement,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,MethodCountForName,The length of the statement  "	MemberInfo[] methods = type.FindMembers (MemberTypes.Method' ReflectionUtils.AllMembersCaseInsensitiveFlags' new MemberFilter (ReflectionUtils.MethodNameFilter)' name); " is 168.
Long Statement,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,CreateCustomAttribute,The length of the statement  "		throw new ArgumentException (string.Format ("[{0}] does not derive from the [System.Attribute] class."' type.FullName)); " is 120.
Long Statement,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,CreateCustomAttribute,The length of the statement  "						throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "A property or public field with name {0} can't be found in the " + "type {1}' but is present as a named property " + "on the attributeData {2}"' namedArgument.MemberInfo.Name' attributeType.FullName' attributeData)); " is 299.
Long Statement,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,CreateCustomAttribute,The length of the statement  "		return new CustomAttributeBuilder (constructor' parameterValues' namedProperties' propertyValues' namedFields' fieldValues); " is 124.
Long Statement,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,ConvertValueIfNecessary,The length of the statement  "	ReadOnlyCollection<CustomAttributeTypedArgument> sourceArray = value as ReadOnlyCollection<CustomAttributeTypedArgument>; " is 121.
Long Statement,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,ConvertValueIfNecessary,The length of the statement  "			throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Types for the same named parameter of array type are expected to be same")); " is 159.
Long Statement,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,GetMatchingMethods,The length of the statement  "			throw new Exception (string.Format ("Method '{0}' could not be matched in the target class [{1}]."' method.Name' type.FullName)); " is 129.
Long Statement,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,IsTypeVisible,The length of the statement  "		if (friendlyAssemblyName != null && friendlyAssemblyName.Length > 0 && (!type.IsNested || type.IsNestedPublic || (!type.IsNestedPrivate && (type.IsNestedAssembly || type.IsNestedFamORAssem)))) { " is 194.
Long Statement,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,GetAntExpressions,The length of the statement  "					throw new FormatException (string.Format ("Empty {0}{1} value found in text : '{2}'."' AntExpressionPrefix' AntExpressionSuffix' text)); " is 136.
Long Statement,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,SetAntExpression,The length of the statement  "	return text.Replace (StringUtils.Surround (AntExpressionPrefix' expression' AntExpressionSuffix)' expValue.ToString ()); " is 120.
Long Statement,Spring.Util.Generic,CollectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\Generic\CollectionUtils.cs,Contains,The length of the statement  "	method = collection.GetType ().GetMethod ("contains"' BindingFlags.IgnoreCase | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public); " is 147.
Long Statement,Spring.Util.Generic,CollectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\Generic\CollectionUtils.cs,Contains,The length of the statement  "		throw new InvalidOperationException ("Collection type " + collection.GetType () + " does not implement a Contains() method."); " is 126.
Long Statement,Spring.Util.Generic,CollectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\Generic\CollectionUtils.cs,ContainsAll,The length of the statement  "	method = targetCollection.GetType ().GetMethod ("containsAll"' BindingFlags.IgnoreCase | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public); " is 156.
Long Statement,Spring.Util.Generic,CollectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\Generic\CollectionUtils.cs,ContainsAll,The length of the statement  "		method = targetCollection.GetType ().GetMethod ("Contains"' BindingFlags.IgnoreCase | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public); " is 153.
Long Statement,Spring.Validation,CollectionValidator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\CollectionValidator.cs,ValidateGroup,The length of the statement  "	IEnumerable collectionToValidate = (validationContext is IDictionary ? ((IDictionary)validationContext).Values : (IEnumerable)validationContext); " is 145.
Long Statement,Spring.Validation,RequiredValidator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\RequiredValidator.cs,Validate,The length of the statement  "	else if (objectToValidate is DateTime && (((DateTime)objectToValidate) == DateTime.MinValue || ((DateTime)objectToValidate) == DateTime.MaxValue)) { " is 148.
Long Statement,Spring.Validation,RequiredValidator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\RequiredValidator.cs,Validate,The length of the statement  "	else if (objectToValidate is Char && (((char)objectToValidate) == Char.MinValue || Char.IsWhiteSpace ((char)objectToValidate))) { " is 129.
Long Statement,Spring.Validation.Config,ValidationNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Config\ValidationNamespaceParser.cs,ParseElement,The length of the statement  "		throw new ObjectDefinitionStoreException (parserContext.ReaderContext.Resource' "validator"' "Top-level validator element must have an 'id' attribute defined."); " is 161.
Long Statement,Spring.Validation.Config,ValidationNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Config\ValidationNamespaceParser.cs,ParseValidator,The length of the statement  "	IConfigurableObjectDefinition od = parserContext.ReaderContext.ObjectDefinitionFactory.CreateObjectDefinition (typeName' parent' parserContext.ReaderContext.Reader.Domain); " is 172.
Long Statement,Spring.Validation.Config,ValidationNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Config\ValidationNamespaceParser.cs,ParseValidator,The length of the statement  "	ParseAttributeIntoProperty (element' ValidatorDefinitionConstants.GroupFastValidateAttribute' properties' "FastValidate"); " is 122.
Long Statement,Spring.Validation.Config,ValidationNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Config\ValidationNamespaceParser.cs,ParseValidator,The length of the statement  "	ParseAttributeIntoProperty (element' ValidatorDefinitionConstants.CollectionValidateAllAttribute' properties' "ValidateAll"); " is 125.
Long Statement,Spring.Validation.Config,ValidationNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Config\ValidationNamespaceParser.cs,ParseValidator,The length of the statement  "	ParseAttributeIntoProperty (element' ValidatorDefinitionConstants.CollectionIncludeElementsErrors' properties' "IncludeElementErrors"); " is 135.
Long Statement,Spring.Validation.Config,ValidationNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Config\ValidationNamespaceParser.cs,ParseErrorMessageAction,The length of the statement  "	IConfigurableObjectDefinition action = parserContext.ReaderContext.ObjectDefinitionFactory.CreateObjectDefinition (typeName' null' parserContext.ReaderContext.Reader.Domain); " is 174.
Long Statement,Spring.Validation.Config,ValidationNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Config\ValidationNamespaceParser.cs,ParseExceptionAction,The length of the statement  "	IConfigurableObjectDefinition action = parserContext.ReaderContext.ObjectDefinitionFactory.CreateObjectDefinition (typeName' null' parserContext.ReaderContext.Reader.Domain); " is 174.
Long Statement,Spring.Validation.Config,ValidationNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Config\ValidationNamespaceParser.cs,ParseGenericAction,The length of the statement  "	IConfigurableObjectDefinition action = parserContext.ReaderContext.ObjectDefinitionFactory.CreateObjectDefinition (typeName' null' parserContext.ReaderContext.Reader.Domain); " is 174.
Long Statement,Spring.Validation.Config,ValidationNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Config\ValidationNamespaceParser.cs,ParseValidatorReference,The length of the statement  "	IConfigurableObjectDefinition reference = parserContext.ReaderContext.ObjectDefinitionFactory.CreateObjectDefinition (typeName' null' parserContext.ReaderContext.Reader.Domain); " is 177.
Complex Conditional,Spring.Core.TypeConversion,TypeConversionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\TypeConversionUtils.cs,ConvertValueIfNecessary,The conditional expression  "requiredType != null && requiredType.IsEnum && (!(newValue is float) && (!(newValue is double)))"  is complex.
Complex Conditional,Spring.Expressions,OpADD,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\OpADD.cs,Get,The conditional expression  "left is DateTime && (right is TimeSpan || right is string || NumberUtils.IsNumber (right))"  is complex.
Complex Conditional,Spring.Expressions,OpADD,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\OpADD.cs,Get,The conditional expression  "(left is IList || left is ISet) && (right is IList || right is ISet)"  is complex.
Complex Conditional,Spring.Expressions,OpSUBTRACT,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\OpSUBTRACT.cs,Get,The conditional expression  "left is DateTime && (right is TimeSpan || right is string || NumberUtils.IsNumber (right))"  is complex.
Complex Conditional,Spring.Expressions,PropertyOrFieldNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\PropertyOrFieldNode.cs,SetPropertyOrFieldValue,The conditional expression  "!RemotingServices.IsTransparentProxy (newValue) && (newValue is IList || newValue is IDictionary || newValue is ISet)"  is complex.
Complex Conditional,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,doWorkForFindAll,The conditional expression  "(partialMatch && sibling.EqualsTreePartial (target)) || (!partialMatch && sibling.EqualsTree (target))"  is complex.
Complex Conditional,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The conditional expression  "c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';'"  is complex.
Complex Conditional,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The conditional expression  "c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';'"  is complex.
Complex Conditional,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The conditional expression  "c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';'"  is complex.
Complex Conditional,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,GetTypeForFactoryMethod,The conditional expression  "factoryMethod.IsStatic == isStatic && factoryMethod.Name.Equals (genericArgsInfo.GenericMethodName) && ReflectionUtils.GetParameterTypes (factoryMethod).Length >= minNrOfArgs && factoryMethod.GetGenericArguments ().Length == genericArgsInfo.GetGenericArguments ().Length"  is complex.
Complex Conditional,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,UnsatisfiedNonSimpleProperties,The conditional expression  "property.CanWrite && !IsExcludedFromDependencyCheck (property) && !pvs.Contains (name) && !ObjectUtils.IsSimpleProperty (property.PropertyType)"  is complex.
Complex Conditional,Spring.Objects.Factory.Support,AbstractAutowireCapableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs,CreateObjectInstance,The conditional expression  "ctors != null || objectDefinition.ResolvedAutowireMode == AutoWiringMode.Constructor || objectDefinition.HasConstructorArgumentValues || !ObjectUtils.IsEmpty (arguments)"  is complex.
Complex Conditional,Spring.Objects.Factory.Support,AbstractObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs,CheckMergedObjectDefinition,The conditional expression  "requiredType != null && StringUtils.IsNullOrEmpty (mergedObjectDefinition.FactoryMethodName) && !typeof(IFactoryObject).IsAssignableFrom (objectType) && !requiredType.IsAssignableFrom (objectType)"  is complex.
Complex Conditional,Spring.Objects.Factory.Support,DefaultListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs,DoGetObjectNamesForType,The conditional expression  "!mod.IsAbstract && (allowEagerInit || (mod.HasObjectType || !mod.IsLazyInit/*|| this.AllowEagerTypeLoading*/) && !RequiresEagerInitForType (mod.FactoryObjectName))"  is complex.
Complex Conditional,Spring.Objects.Factory.Support,StaticListableObjectFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\StaticListableObjectFactory.cs,GetObjectsOfType,The conditional expression  "(objectType == null && factory.IsSingleton) || ((factory.IsSingleton || includePrototypes) && objectType != null && type.IsAssignableFrom (objectType))"  is complex.
Complex Conditional,Spring.Objects.Factory.Xml,ObjectDefinitionParserHelper,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectDefinitionParserHelper.cs,ParseObjectDefinitionElement,The conditional expression  "objectTypeName != null && objectName.StartsWith (objectTypeName) && objectName.Length > objectTypeName.Length && !readerContext.Registry.IsObjectNameInUse (objectTypeName)"  is complex.
Complex Conditional,Spring.Proxy,AbstractProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Proxy\AbstractProxyTypeBuilder.cs,ImplementInterface,The conditional expression  "!proxyVirtualMethods && !mapping.TargetMethods [i].DeclaringType.IsInterface && mapping.TargetMethods [i].IsVirtual && !mapping.TargetMethods [i].IsFinal"  is complex.
Complex Conditional,Spring.Proxy,AbstractProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Proxy\AbstractProxyTypeBuilder.cs,InheritType,The conditional expression  "method.IsVirtual && !method.IsFinal && !method.Name.Equals ("Finalize") && (memberAccess == MethodAttributes.Public || memberAccess == MethodAttributes.Family || memberAccess == MethodAttributes.FamORAssem)"  is complex.
Complex Conditional,Spring.Reflection.Dynamic,DynamicReflectionManager,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Reflection\Dynamic\DynamicReflectionManager.cs,EmitFieldSetter,The conditional expression  "!fieldInfo.IsLiteral && !fieldInfo.IsInitOnly && !(fieldInfo.DeclaringType.IsValueType && !fieldInfo.IsStatic)"  is complex.
Complex Conditional,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,GetMethodBaseByArgumentValues,The conditional expression  "(paramValue == null && paramType.IsValueType) || (paramValue != null && !paramType.IsAssignableFrom (paramValue.GetType ()))"  is complex.
Complex Conditional,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,CreateCustomAttribute,The conditional expression  "(propValue == null && defaultValue == null) || (propValue != null && propValue.Equals (defaultValue))"  is complex.
Complex Conditional,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,IsTypeVisible,The conditional expression  "friendlyAssemblyName != null && friendlyAssemblyName.Length > 0 && (!type.IsNested || type.IsNestedPublic || (!type.IsNestedPrivate && (type.IsNestedAssembly || type.IsNestedFamORAssem)))"  is complex.
Virtual Method Call from Constructor,Spring.Collections,PriorityQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Collections\PriorityQueue.cs,PriorityQueue,The constructor "PriorityQueue" calls a virtual method "Comparator".
Virtual Method Call from Constructor,Spring.Context.Support,AbstractApplicationContext,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Context\Support\AbstractApplicationContext.cs,AbstractApplicationContext,The constructor "AbstractApplicationContext" calls a virtual method "CreateEventRaiser".
Virtual Method Call from Constructor,Spring.Expressions.Parser.antlr,CharQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharQueue.cs,CharQueue,The constructor "CharQueue" calls a virtual method "init".
Virtual Method Call from Constructor,Spring.Expressions.Parser.antlr,CharQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharQueue.cs,CharQueue,The constructor "CharQueue" calls a virtual method "init".
Virtual Method Call from Constructor,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,CharScanner,The constructor "CharScanner" calls a virtual method "setTokenCreator".
Virtual Method Call from Constructor,Spring.Expressions.Parser.antlr,MismatchedCharException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\MismatchedCharException.cs,MismatchedCharException,The constructor "MismatchedCharException" calls a virtual method "getFilename".
Virtual Method Call from Constructor,Spring.Expressions.Parser.antlr,MismatchedCharException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\MismatchedCharException.cs,MismatchedCharException,The constructor "MismatchedCharException" calls a virtual method "getLine".
Virtual Method Call from Constructor,Spring.Expressions.Parser.antlr,MismatchedCharException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\MismatchedCharException.cs,MismatchedCharException,The constructor "MismatchedCharException" calls a virtual method "getColumn".
Virtual Method Call from Constructor,Spring.Expressions.Parser.antlr,MismatchedCharException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\MismatchedCharException.cs,MismatchedCharException,The constructor "MismatchedCharException" calls a virtual method "getFilename".
Virtual Method Call from Constructor,Spring.Expressions.Parser.antlr,MismatchedCharException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\MismatchedCharException.cs,MismatchedCharException,The constructor "MismatchedCharException" calls a virtual method "getLine".
Virtual Method Call from Constructor,Spring.Expressions.Parser.antlr,MismatchedCharException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\MismatchedCharException.cs,MismatchedCharException,The constructor "MismatchedCharException" calls a virtual method "getColumn".
Virtual Method Call from Constructor,Spring.Expressions.Parser.antlr,MismatchedCharException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\MismatchedCharException.cs,MismatchedCharException,The constructor "MismatchedCharException" calls a virtual method "getFilename".
Virtual Method Call from Constructor,Spring.Expressions.Parser.antlr,MismatchedCharException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\MismatchedCharException.cs,MismatchedCharException,The constructor "MismatchedCharException" calls a virtual method "getLine".
Virtual Method Call from Constructor,Spring.Expressions.Parser.antlr,MismatchedCharException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\MismatchedCharException.cs,MismatchedCharException,The constructor "MismatchedCharException" calls a virtual method "getColumn".
Virtual Method Call from Constructor,Spring.Expressions.Parser.antlr,NoViableAltForCharException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\NoViableAltForCharException.cs,NoViableAltForCharException,The constructor "NoViableAltForCharException" calls a virtual method "getFilename".
Virtual Method Call from Constructor,Spring.Expressions.Parser.antlr,NoViableAltForCharException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\NoViableAltForCharException.cs,NoViableAltForCharException,The constructor "NoViableAltForCharException" calls a virtual method "getLine".
Virtual Method Call from Constructor,Spring.Expressions.Parser.antlr,NoViableAltForCharException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\NoViableAltForCharException.cs,NoViableAltForCharException,The constructor "NoViableAltForCharException" calls a virtual method "getColumn".
Virtual Method Call from Constructor,Spring.Expressions.Parser.antlr,Token,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\Token.cs,Token,The constructor "Token" calls a virtual method "setText".
Empty Catch Block,Spring.Core.TypeConversion,TimeSpanConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\TimeSpanConverter.cs,ConvertFrom,The method has an empty catch block.
Empty Catch Block,Spring.Expressions,PropertyOrFieldNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\PropertyOrFieldNode.cs,InitializeNode,The method has an empty catch block.
Empty Catch Block,Spring.Expressions.Parser.antlr,TokenStreamSelector,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\TokenStreamSelector.cs,nextToken,The method has an empty catch block.
Empty Catch Block,Spring.Expressions.Parser.antlr.debug,DebuggingCharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\debug\DebuggingCharScanner.cs,consume,The method has an empty catch block.
Empty Catch Block,Spring.Expressions.Parser.antlr.debug,DebuggingCharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\debug\DebuggingCharScanner.cs,goToSleep,The method has an empty catch block.
Empty Catch Block,Spring.Expressions.Parser.antlr.debug,DebuggingCharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\debug\DebuggingCharScanner.cs,match,The method has an empty catch block.
Empty Catch Block,Spring.Expressions.Parser.antlr.debug,DebuggingInputBuffer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\debug\DebuggingInputBuffer.cs,consume,The method has an empty catch block.
Empty Catch Block,Spring.Expressions.Parser.antlr.debug,LLkDebuggingParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\debug\LLkDebuggingParser.cs,goToSleep,The method has an empty catch block.
Empty Catch Block,Spring.Objects.Factory.Support,DefaultObjectDefinitionFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\DefaultObjectDefinitionFactory.cs,CreateObjectDefinition,The method has an empty catch block.
Empty Catch Block,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,MethodIsOnOneOfTheseInterfaces,The method has an empty catch block.
Empty Catch Block,Spring.Util,ReflectionUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ReflectionUtils.cs,CreateCustomAttribute,The method has an empty catch block.
Magic Number,Spring.Collections,PriorityQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Collections\PriorityQueue.cs,urShift,The following statement contains a magic number: if (number >= 0)  	return number >> bits;  else  	return (number >> bits) + (2 << ~bits);  
Magic Number,Spring.Collections,PriorityQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Collections\PriorityQueue.cs,urShift,The following statement contains a magic number: return (number >> bits) + (2 << ~bits);  
Magic Number,Spring.Collections,PriorityQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Collections\PriorityQueue.cs,heapify,The following statement contains a magic number: for (int i = _priorityQueueSize / 2; i >= 1; i--)  	fixDown (i);  
Magic Number,Spring.Collections,PriorityQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Collections\PriorityQueue.cs,getQueueSizeBasedOnPercentage,The following statement contains a magic number: return (int)Math.Min ((size * percentage) / 100' Int32.MaxValue - 1);  
Magic Number,Spring.Collections,PriorityQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Collections\PriorityQueue.cs,grow,The following statement contains a magic number: while (newLength <= index) {  	if (newLength >= Int32.MaxValue / 2) {  		newLength = Int32.MaxValue;  	}  	else {  		newLength <<= 2;  	}  }  
Magic Number,Spring.Collections,PriorityQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Collections\PriorityQueue.cs,grow,The following statement contains a magic number: while (newLength <= index) {  	if (newLength >= Int32.MaxValue / 2) {  		newLength = Int32.MaxValue;  	}  	else {  		newLength <<= 2;  	}  }  
Magic Number,Spring.Collections,PriorityQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Collections\PriorityQueue.cs,grow,The following statement contains a magic number: if (newLength >= Int32.MaxValue / 2) {  	newLength = Int32.MaxValue;  }  else {  	newLength <<= 2;  }  
Magic Number,Spring.Collections,PriorityQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Collections\PriorityQueue.cs,grow,The following statement contains a magic number: if (newLength >= Int32.MaxValue / 2) {  	newLength = Int32.MaxValue;  }  else {  	newLength <<= 2;  }  
Magic Number,Spring.Collections,PriorityQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Collections\PriorityQueue.cs,grow,The following statement contains a magic number: newLength <<= 2;  
Magic Number,Spring.Context.Support,ReferenceNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\ReferenceNode.cs,Get,The following statement contains a magic number: if (this.getNumberOfChildren () == 2) {  	string contextName = this.getFirstChild ().getText ();  	objectName = this.getFirstChild ().getNextSibling ().getText ();  	ctx = ContextRegistry.GetContext (contextName);  	if (ctx == null) {  		throw new ArgumentException (string.Format ("Context '{0}' is not registered."' contextName));  	}  }  else {  	objectName = this.getFirstChild ().getText ();  	IObjectFactory currentObjectFactory = (evalContext.Variables != null) ? (IObjectFactory)evalContext.Variables [Expression.ReservedVariableNames.CurrentObjectFactory] : null;  	// this is a local reference within an object factory  	if (currentObjectFactory != null) {  		return currentObjectFactory.GetObject (objectName);  	}  	// else lookup in default context  	ctx = ContextRegistry.GetContext ();  	if (ctx == null) {  		throw new ArgumentException ("No context registered.");  	}  }  
Magic Number,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CalculateResourcePath,The following statement contains a magic number: if (relativePath.StartsWith (".."))// back level navigation   {  	string[] pathElements = ResourcePath.Split (PathSeparatorChars);  	int upWalks = UpWalks (relativePath);  	if (upWalks > pathElements.Length) {  		throw new UriFormatException ("Too many back levels.");  	}  	char separator = PathSeparatorChars [0];  	for (int i = 0; i < pathElements.Length - upWalks; i++) {  		path.Append (pathElements [i]).Append (separator);  	}  	string[] relativeParts = relativePath.Split ('/'' '\\');  	for (int i = upWalks; i < relativeParts.Length - 1; i++) {  		path.Append (relativeParts [i]).Append (separator);  	}  	if (path.Length > 0) {  		path.Length -= 1;  	}  	return path.ToString ();  }  else if (relativePath.StartsWith ("/"))// relative to root    {  	if (relativePath.Length > 1) {  		return relativePath.Substring (1' relativePath.Length - 2);  	}  	else {  		return null;  	}  }  else// relative to current namespace...   {  	if (ResourcePath != null && ResourcePath != String.Empty) {  		path.Append (ResourcePath.TrimEnd (PathSeparatorChars)).Append (PathSeparatorChars [0]);  	}  	if (relativePath.StartsWith ("./")) {  		if (relativePath.Length > 2) {  			path.Append (relativePath.Substring (2' relativePath.Length - 3));  		}  	}  	else {  		path.Append (relativePath.Substring (0' relativePath.Length - 1));  	}  	return path.ToString ();  }  
Magic Number,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CalculateResourcePath,The following statement contains a magic number: if (relativePath.StartsWith (".."))// back level navigation   {  	string[] pathElements = ResourcePath.Split (PathSeparatorChars);  	int upWalks = UpWalks (relativePath);  	if (upWalks > pathElements.Length) {  		throw new UriFormatException ("Too many back levels.");  	}  	char separator = PathSeparatorChars [0];  	for (int i = 0; i < pathElements.Length - upWalks; i++) {  		path.Append (pathElements [i]).Append (separator);  	}  	string[] relativeParts = relativePath.Split ('/'' '\\');  	for (int i = upWalks; i < relativeParts.Length - 1; i++) {  		path.Append (relativeParts [i]).Append (separator);  	}  	if (path.Length > 0) {  		path.Length -= 1;  	}  	return path.ToString ();  }  else if (relativePath.StartsWith ("/"))// relative to root    {  	if (relativePath.Length > 1) {  		return relativePath.Substring (1' relativePath.Length - 2);  	}  	else {  		return null;  	}  }  else// relative to current namespace...   {  	if (ResourcePath != null && ResourcePath != String.Empty) {  		path.Append (ResourcePath.TrimEnd (PathSeparatorChars)).Append (PathSeparatorChars [0]);  	}  	if (relativePath.StartsWith ("./")) {  		if (relativePath.Length > 2) {  			path.Append (relativePath.Substring (2' relativePath.Length - 3));  		}  	}  	else {  		path.Append (relativePath.Substring (0' relativePath.Length - 1));  	}  	return path.ToString ();  }  
Magic Number,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CalculateResourcePath,The following statement contains a magic number: if (relativePath.StartsWith (".."))// back level navigation   {  	string[] pathElements = ResourcePath.Split (PathSeparatorChars);  	int upWalks = UpWalks (relativePath);  	if (upWalks > pathElements.Length) {  		throw new UriFormatException ("Too many back levels.");  	}  	char separator = PathSeparatorChars [0];  	for (int i = 0; i < pathElements.Length - upWalks; i++) {  		path.Append (pathElements [i]).Append (separator);  	}  	string[] relativeParts = relativePath.Split ('/'' '\\');  	for (int i = upWalks; i < relativeParts.Length - 1; i++) {  		path.Append (relativeParts [i]).Append (separator);  	}  	if (path.Length > 0) {  		path.Length -= 1;  	}  	return path.ToString ();  }  else if (relativePath.StartsWith ("/"))// relative to root    {  	if (relativePath.Length > 1) {  		return relativePath.Substring (1' relativePath.Length - 2);  	}  	else {  		return null;  	}  }  else// relative to current namespace...   {  	if (ResourcePath != null && ResourcePath != String.Empty) {  		path.Append (ResourcePath.TrimEnd (PathSeparatorChars)).Append (PathSeparatorChars [0]);  	}  	if (relativePath.StartsWith ("./")) {  		if (relativePath.Length > 2) {  			path.Append (relativePath.Substring (2' relativePath.Length - 3));  		}  	}  	else {  		path.Append (relativePath.Substring (0' relativePath.Length - 1));  	}  	return path.ToString ();  }  
Magic Number,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CalculateResourcePath,The following statement contains a magic number: if (relativePath.StartsWith (".."))// back level navigation   {  	string[] pathElements = ResourcePath.Split (PathSeparatorChars);  	int upWalks = UpWalks (relativePath);  	if (upWalks > pathElements.Length) {  		throw new UriFormatException ("Too many back levels.");  	}  	char separator = PathSeparatorChars [0];  	for (int i = 0; i < pathElements.Length - upWalks; i++) {  		path.Append (pathElements [i]).Append (separator);  	}  	string[] relativeParts = relativePath.Split ('/'' '\\');  	for (int i = upWalks; i < relativeParts.Length - 1; i++) {  		path.Append (relativeParts [i]).Append (separator);  	}  	if (path.Length > 0) {  		path.Length -= 1;  	}  	return path.ToString ();  }  else if (relativePath.StartsWith ("/"))// relative to root    {  	if (relativePath.Length > 1) {  		return relativePath.Substring (1' relativePath.Length - 2);  	}  	else {  		return null;  	}  }  else// relative to current namespace...   {  	if (ResourcePath != null && ResourcePath != String.Empty) {  		path.Append (ResourcePath.TrimEnd (PathSeparatorChars)).Append (PathSeparatorChars [0]);  	}  	if (relativePath.StartsWith ("./")) {  		if (relativePath.Length > 2) {  			path.Append (relativePath.Substring (2' relativePath.Length - 3));  		}  	}  	else {  		path.Append (relativePath.Substring (0' relativePath.Length - 1));  	}  	return path.ToString ();  }  
Magic Number,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CalculateResourcePath,The following statement contains a magic number: if (relativePath.StartsWith ("/"))// relative to root    {  	if (relativePath.Length > 1) {  		return relativePath.Substring (1' relativePath.Length - 2);  	}  	else {  		return null;  	}  }  else// relative to current namespace...   {  	if (ResourcePath != null && ResourcePath != String.Empty) {  		path.Append (ResourcePath.TrimEnd (PathSeparatorChars)).Append (PathSeparatorChars [0]);  	}  	if (relativePath.StartsWith ("./")) {  		if (relativePath.Length > 2) {  			path.Append (relativePath.Substring (2' relativePath.Length - 3));  		}  	}  	else {  		path.Append (relativePath.Substring (0' relativePath.Length - 1));  	}  	return path.ToString ();  }  
Magic Number,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CalculateResourcePath,The following statement contains a magic number: if (relativePath.StartsWith ("/"))// relative to root    {  	if (relativePath.Length > 1) {  		return relativePath.Substring (1' relativePath.Length - 2);  	}  	else {  		return null;  	}  }  else// relative to current namespace...   {  	if (ResourcePath != null && ResourcePath != String.Empty) {  		path.Append (ResourcePath.TrimEnd (PathSeparatorChars)).Append (PathSeparatorChars [0]);  	}  	if (relativePath.StartsWith ("./")) {  		if (relativePath.Length > 2) {  			path.Append (relativePath.Substring (2' relativePath.Length - 3));  		}  	}  	else {  		path.Append (relativePath.Substring (0' relativePath.Length - 1));  	}  	return path.ToString ();  }  
Magic Number,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CalculateResourcePath,The following statement contains a magic number: if (relativePath.StartsWith ("/"))// relative to root    {  	if (relativePath.Length > 1) {  		return relativePath.Substring (1' relativePath.Length - 2);  	}  	else {  		return null;  	}  }  else// relative to current namespace...   {  	if (ResourcePath != null && ResourcePath != String.Empty) {  		path.Append (ResourcePath.TrimEnd (PathSeparatorChars)).Append (PathSeparatorChars [0]);  	}  	if (relativePath.StartsWith ("./")) {  		if (relativePath.Length > 2) {  			path.Append (relativePath.Substring (2' relativePath.Length - 3));  		}  	}  	else {  		path.Append (relativePath.Substring (0' relativePath.Length - 1));  	}  	return path.ToString ();  }  
Magic Number,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CalculateResourcePath,The following statement contains a magic number: if (relativePath.StartsWith ("/"))// relative to root    {  	if (relativePath.Length > 1) {  		return relativePath.Substring (1' relativePath.Length - 2);  	}  	else {  		return null;  	}  }  else// relative to current namespace...   {  	if (ResourcePath != null && ResourcePath != String.Empty) {  		path.Append (ResourcePath.TrimEnd (PathSeparatorChars)).Append (PathSeparatorChars [0]);  	}  	if (relativePath.StartsWith ("./")) {  		if (relativePath.Length > 2) {  			path.Append (relativePath.Substring (2' relativePath.Length - 3));  		}  	}  	else {  		path.Append (relativePath.Substring (0' relativePath.Length - 1));  	}  	return path.ToString ();  }  
Magic Number,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CalculateResourcePath,The following statement contains a magic number: if (relativePath.Length > 1) {  	return relativePath.Substring (1' relativePath.Length - 2);  }  else {  	return null;  }  
Magic Number,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CalculateResourcePath,The following statement contains a magic number: return relativePath.Substring (1' relativePath.Length - 2);  
Magic Number,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CalculateResourcePath,The following statement contains a magic number: if (relativePath.StartsWith ("./")) {  	if (relativePath.Length > 2) {  		path.Append (relativePath.Substring (2' relativePath.Length - 3));  	}  }  else {  	path.Append (relativePath.Substring (0' relativePath.Length - 1));  }  
Magic Number,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CalculateResourcePath,The following statement contains a magic number: if (relativePath.StartsWith ("./")) {  	if (relativePath.Length > 2) {  		path.Append (relativePath.Substring (2' relativePath.Length - 3));  	}  }  else {  	path.Append (relativePath.Substring (0' relativePath.Length - 1));  }  
Magic Number,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CalculateResourcePath,The following statement contains a magic number: if (relativePath.StartsWith ("./")) {  	if (relativePath.Length > 2) {  		path.Append (relativePath.Substring (2' relativePath.Length - 3));  	}  }  else {  	path.Append (relativePath.Substring (0' relativePath.Length - 1));  }  
Magic Number,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CalculateResourcePath,The following statement contains a magic number: if (relativePath.Length > 2) {  	path.Append (relativePath.Substring (2' relativePath.Length - 3));  }  
Magic Number,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CalculateResourcePath,The following statement contains a magic number: if (relativePath.Length > 2) {  	path.Append (relativePath.Substring (2' relativePath.Length - 3));  }  
Magic Number,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CalculateResourcePath,The following statement contains a magic number: if (relativePath.Length > 2) {  	path.Append (relativePath.Substring (2' relativePath.Length - 3));  }  
Magic Number,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CalculateResourcePath,The following statement contains a magic number: path.Append (relativePath.Substring (2' relativePath.Length - 3));  
Magic Number,Spring.Core.IO,AbstractResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AbstractResource.cs,CalculateResourcePath,The following statement contains a magic number: path.Append (relativePath.Substring (2' relativePath.Length - 3));  
Magic Number,Spring.Core.IO,AssemblyResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AssemblyResource.cs,AssemblyResource,The following statement contains a magic number: if (info.Length != 3) {  	throw new UriFormatException (string.Format ("Invalid resource name. Name has to be in 'assembly:<assemblyName>/<namespace>/<resourceName>' format:{0}"' resourceName));  }  
Magic Number,Spring.Core.IO,AssemblyResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AssemblyResource.cs,AssemblyResource,The following statement contains a magic number: this._resourceName = String.Format ("{0}.{1}"' info [1]' info [2]);  
Magic Number,Spring.Core.IO,AssemblyResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\AssemblyResource.cs,IsRelativeResource,The following statement contains a magic number: return (resourceName.StartsWith ("./") || resourceName.StartsWith ("/") || resourceName.StartsWith ("../") || resourceName.Split ('/').Length != 3);  
Magic Number,Spring.Core.IO,FileSystemResource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\IO\FileSystemResource.cs,ResolveBasePathPlaceHolder,The following statement contains a magic number: if (resourceName [0] == '/' && resourceName [2] == ':') {  	resourceName = resourceName.Substring (1);  }  
Magic Number,Spring.Core.TypeConversion,ResourceManagerConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\ResourceManagerConverter.cs,ConvertFrom,The following statement contains a magic number: if (value is string) {  	// convert incoming string into ResourceManager...  	string[] resourceManagerDescription = StringUtils.DelimitedListToStringArray ((string)value' "'");  	if (resourceManagerDescription.Length != 2) {  		throw new ArgumentException ("The string to specify a ResourceManager must be a comma delimited list of length two.  i.e. resourcename' assembly parial name.");  	}  	string resourceName = resourceManagerDescription [0].Trim ();  	if (resourceName != null && resourceName.Length == 0) {  		throw new ArgumentException ("Empty value set for the resource name in ResourceManager string.");  	}  	string assemblyName = resourceManagerDescription [1].Trim ();  	if (assemblyName != null && assemblyName.Length == 0) {  		throw new ArgumentException ("Empty value set for the assembly name in ResourceManager string.");  	}  	#if NET_2_0  	if (assemblyName == APP_GLOBALRESOURCES_ASSEMBLYNAME) {  		try {  			Type globalResourcesType = TypeResolutionUtils.ResolveType (resourceName);  			// look both' NonPublic and Public properties (SPRNET-861)  			PropertyInfo resourceManagerProperty = globalResourcesType.GetProperty ("ResourceManager"' BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Static);  			return (ResourceManager)resourceManagerProperty.GetValue (globalResourcesType' null);  		}  		catch (TypeLoadException ex) {  			throw new ArgumentException ("Could not load resources '{0}'"' resourceName' ex);  		}  	}  	Assembly ass = Assembly.LoadWithPartialName (assemblyName);  	#else  	                Assembly ass = Assembly.LoadWithPartialName(assemblyName); #endif  	if (ass == null) {  		throw new ArgumentException ("Could not find assembly with name = '" + assemblyName + "'.");  	}  	return new ResourceManager (resourceName' ass);  }  
Magic Number,Spring.Core.TypeConversion,ResourceManagerConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\ResourceManagerConverter.cs,ConvertFrom,The following statement contains a magic number: if (resourceManagerDescription.Length != 2) {  	throw new ArgumentException ("The string to specify a ResourceManager must be a comma delimited list of length two.  i.e. resourcename' assembly parial name.");  }  
Magic Number,Spring.Core.TypeConversion,RGBColorConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\RGBColorConverter.cs,ConvertFrom,The following statement contains a magic number: if (StringUtils.HasText (input)) {  	if (input.IndexOf (ArgbSeparator) > -1) {  		string[] colorSplit = input.Split (ArgbSeparator);  		if (colorSplit.Length == 3) {  			return FromRgb (colorSplit);  		}  		else if (colorSplit.Length == 4) {  			return FromArgb (colorSplit);  		}  		else {  			throw new FormatException ("Input string is not in the correct format : '" + input + "'.");  		}  	}  	return FromName (input);  }  
Magic Number,Spring.Core.TypeConversion,RGBColorConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\RGBColorConverter.cs,ConvertFrom,The following statement contains a magic number: if (StringUtils.HasText (input)) {  	if (input.IndexOf (ArgbSeparator) > -1) {  		string[] colorSplit = input.Split (ArgbSeparator);  		if (colorSplit.Length == 3) {  			return FromRgb (colorSplit);  		}  		else if (colorSplit.Length == 4) {  			return FromArgb (colorSplit);  		}  		else {  			throw new FormatException ("Input string is not in the correct format : '" + input + "'.");  		}  	}  	return FromName (input);  }  
Magic Number,Spring.Core.TypeConversion,RGBColorConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\RGBColorConverter.cs,ConvertFrom,The following statement contains a magic number: if (input.IndexOf (ArgbSeparator) > -1) {  	string[] colorSplit = input.Split (ArgbSeparator);  	if (colorSplit.Length == 3) {  		return FromRgb (colorSplit);  	}  	else if (colorSplit.Length == 4) {  		return FromArgb (colorSplit);  	}  	else {  		throw new FormatException ("Input string is not in the correct format : '" + input + "'.");  	}  }  
Magic Number,Spring.Core.TypeConversion,RGBColorConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\RGBColorConverter.cs,ConvertFrom,The following statement contains a magic number: if (input.IndexOf (ArgbSeparator) > -1) {  	string[] colorSplit = input.Split (ArgbSeparator);  	if (colorSplit.Length == 3) {  		return FromRgb (colorSplit);  	}  	else if (colorSplit.Length == 4) {  		return FromArgb (colorSplit);  	}  	else {  		throw new FormatException ("Input string is not in the correct format : '" + input + "'.");  	}  }  
Magic Number,Spring.Core.TypeConversion,RGBColorConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\RGBColorConverter.cs,ConvertFrom,The following statement contains a magic number: if (colorSplit.Length == 3) {  	return FromRgb (colorSplit);  }  else if (colorSplit.Length == 4) {  	return FromArgb (colorSplit);  }  else {  	throw new FormatException ("Input string is not in the correct format : '" + input + "'.");  }  
Magic Number,Spring.Core.TypeConversion,RGBColorConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\RGBColorConverter.cs,ConvertFrom,The following statement contains a magic number: if (colorSplit.Length == 3) {  	return FromRgb (colorSplit);  }  else if (colorSplit.Length == 4) {  	return FromArgb (colorSplit);  }  else {  	throw new FormatException ("Input string is not in the correct format : '" + input + "'.");  }  
Magic Number,Spring.Core.TypeConversion,RGBColorConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\RGBColorConverter.cs,ConvertFrom,The following statement contains a magic number: if (colorSplit.Length == 4) {  	return FromArgb (colorSplit);  }  else {  	throw new FormatException ("Input string is not in the correct format : '" + input + "'.");  }  
Magic Number,Spring.Core.TypeConversion,RGBColorConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\RGBColorConverter.cs,FromRgb,The following statement contains a magic number: return GetColorFrom (DefaultAlpha' rgb [0]' rgb [1]' rgb [2]);  
Magic Number,Spring.Core.TypeConversion,RGBColorConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\RGBColorConverter.cs,FromArgb,The following statement contains a magic number: return GetColorFrom (argb [0]' argb [1]' argb [2]' argb [3]);  
Magic Number,Spring.Core.TypeConversion,RGBColorConverter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeConversion\RGBColorConverter.cs,FromArgb,The following statement contains a magic number: return GetColorFrom (argb [0]' argb [1]' argb [2]' argb [3]);  
Magic Number,Spring.Core.TypeResolution,GenericArgumentsHolder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeResolution\GenericArgumentsHolder.cs,ParseGenericArgumentList,The following statement contains a magic number: for (int i = 0; i < args.Length; i++) {  	string arg = args [i];  	if (arg.Length > 1 && arg [0] == '[') {  		args [i] = arg.Substring (1' arg.Length - 2);  	}  }  
Magic Number,Spring.Core.TypeResolution,GenericArgumentsHolder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeResolution\GenericArgumentsHolder.cs,ParseGenericArgumentList,The following statement contains a magic number: if (arg.Length > 1 && arg [0] == '[') {  	args [i] = arg.Substring (1' arg.Length - 2);  }  
Magic Number,Spring.Core.TypeResolution,GenericArgumentsHolder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Core\TypeResolution\GenericArgumentsHolder.cs,ParseGenericArgumentList,The following statement contains a magic number: args [i] = arg.Substring (1' arg.Length - 2);  
Magic Number,Spring.DataBinding,BindingErrorMessage,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\DataBinding\BindingErrorMessage.cs,GetHashCode,The following statement contains a magic number: return base.GetHashCode () + 31 * this.BindingId.GetHashCode ();  
Magic Number,Spring.Expressions,OpBetween,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\OpBetween.cs,Get,The following statement contains a magic number: if (range == null || range.Count != 2) {  	throw new ArgumentException ("Right operand for the 'between' operator has to be a two-element list.");  }  
Magic Number,Spring.Expressions,HexLiteralNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\HexLiteralNode.cs,Get,The following statement contains a magic number: if (nodeValue == null) {  	lock (this) {  		if (nodeValue == null) {  			string n = this.getText ();  			try {  				nodeValue = Int32.Parse (n.Substring (2)' NumberStyles.HexNumber);  			}  			catch (OverflowException) {  				nodeValue = Int64.Parse (n.Substring (2)' NumberStyles.HexNumber);  			}  		}  	}  }  
Magic Number,Spring.Expressions,HexLiteralNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\HexLiteralNode.cs,Get,The following statement contains a magic number: if (nodeValue == null) {  	lock (this) {  		if (nodeValue == null) {  			string n = this.getText ();  			try {  				nodeValue = Int32.Parse (n.Substring (2)' NumberStyles.HexNumber);  			}  			catch (OverflowException) {  				nodeValue = Int64.Parse (n.Substring (2)' NumberStyles.HexNumber);  			}  		}  	}  }  
Magic Number,Spring.Expressions,HexLiteralNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\HexLiteralNode.cs,Get,The following statement contains a magic number: lock (this) {  	if (nodeValue == null) {  		string n = this.getText ();  		try {  			nodeValue = Int32.Parse (n.Substring (2)' NumberStyles.HexNumber);  		}  		catch (OverflowException) {  			nodeValue = Int64.Parse (n.Substring (2)' NumberStyles.HexNumber);  		}  	}  }  
Magic Number,Spring.Expressions,HexLiteralNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\HexLiteralNode.cs,Get,The following statement contains a magic number: lock (this) {  	if (nodeValue == null) {  		string n = this.getText ();  		try {  			nodeValue = Int32.Parse (n.Substring (2)' NumberStyles.HexNumber);  		}  		catch (OverflowException) {  			nodeValue = Int64.Parse (n.Substring (2)' NumberStyles.HexNumber);  		}  	}  }  
Magic Number,Spring.Expressions,HexLiteralNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\HexLiteralNode.cs,Get,The following statement contains a magic number: if (nodeValue == null) {  	string n = this.getText ();  	try {  		nodeValue = Int32.Parse (n.Substring (2)' NumberStyles.HexNumber);  	}  	catch (OverflowException) {  		nodeValue = Int64.Parse (n.Substring (2)' NumberStyles.HexNumber);  	}  }  
Magic Number,Spring.Expressions,HexLiteralNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\HexLiteralNode.cs,Get,The following statement contains a magic number: if (nodeValue == null) {  	string n = this.getText ();  	try {  		nodeValue = Int32.Parse (n.Substring (2)' NumberStyles.HexNumber);  	}  	catch (OverflowException) {  		nodeValue = Int64.Parse (n.Substring (2)' NumberStyles.HexNumber);  	}  }  
Magic Number,Spring.Expressions,HexLiteralNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\HexLiteralNode.cs,Get,The following statement contains a magic number: try {  	nodeValue = Int32.Parse (n.Substring (2)' NumberStyles.HexNumber);  }  catch (OverflowException) {  	nodeValue = Int64.Parse (n.Substring (2)' NumberStyles.HexNumber);  }  
Magic Number,Spring.Expressions,HexLiteralNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\HexLiteralNode.cs,Get,The following statement contains a magic number: try {  	nodeValue = Int32.Parse (n.Substring (2)' NumberStyles.HexNumber);  }  catch (OverflowException) {  	nodeValue = Int64.Parse (n.Substring (2)' NumberStyles.HexNumber);  }  
Magic Number,Spring.Expressions,HexLiteralNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\HexLiteralNode.cs,Get,The following statement contains a magic number: nodeValue = Int32.Parse (n.Substring (2)' NumberStyles.HexNumber);  
Magic Number,Spring.Expressions,HexLiteralNode,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\HexLiteralNode.cs,Get,The following statement contains a magic number: nodeValue = Int64.Parse (n.Substring (2)' NumberStyles.HexNumber);  
Magic Number,Spring.Expressions.Parser.antlr,ASTFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\ASTFactory.cs,ASTFactory,The following statement contains a magic number: typename2creator_ = new Hashtable (32' (float)0.3);  
Magic Number,Spring.Expressions.Parser.antlr,ASTFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\ASTFactory.cs,ASTFactory,The following statement contains a magic number: typename2creator_ = new Hashtable (32' (float)0.3);  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	c = text [i];  	if (c == '&') {  		c1 = text [i + 1];  		c2 = text [i + 2];  		c3 = text [i + 3];  		c4 = text [i + 4];  		c5 = text [i + 5];  		if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  			n.Append ("&");  			i += 5;  		}  		else if (c1 == 'l' && c2 == 't' && c3 == ';') {  			n.Append ("<");  			i += 4;  		}  		else if (c1 == 'g' && c2 == 't' && c3 == ';') {  			n.Append (">");  			i += 4;  		}  		else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  			n.Append ("\"");  			i += 6;  		}  		else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  			n.Append ("'");  			i += 6;  		}  		else  			n.Append ("&");  	}  	else  		n.Append (c);  }  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	c = text [i];  	if (c == '&') {  		c1 = text [i + 1];  		c2 = text [i + 2];  		c3 = text [i + 3];  		c4 = text [i + 4];  		c5 = text [i + 5];  		if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  			n.Append ("&");  			i += 5;  		}  		else if (c1 == 'l' && c2 == 't' && c3 == ';') {  			n.Append ("<");  			i += 4;  		}  		else if (c1 == 'g' && c2 == 't' && c3 == ';') {  			n.Append (">");  			i += 4;  		}  		else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  			n.Append ("\"");  			i += 6;  		}  		else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  			n.Append ("'");  			i += 6;  		}  		else  			n.Append ("&");  	}  	else  		n.Append (c);  }  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	c = text [i];  	if (c == '&') {  		c1 = text [i + 1];  		c2 = text [i + 2];  		c3 = text [i + 3];  		c4 = text [i + 4];  		c5 = text [i + 5];  		if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  			n.Append ("&");  			i += 5;  		}  		else if (c1 == 'l' && c2 == 't' && c3 == ';') {  			n.Append ("<");  			i += 4;  		}  		else if (c1 == 'g' && c2 == 't' && c3 == ';') {  			n.Append (">");  			i += 4;  		}  		else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  			n.Append ("\"");  			i += 6;  		}  		else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  			n.Append ("'");  			i += 6;  		}  		else  			n.Append ("&");  	}  	else  		n.Append (c);  }  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	c = text [i];  	if (c == '&') {  		c1 = text [i + 1];  		c2 = text [i + 2];  		c3 = text [i + 3];  		c4 = text [i + 4];  		c5 = text [i + 5];  		if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  			n.Append ("&");  			i += 5;  		}  		else if (c1 == 'l' && c2 == 't' && c3 == ';') {  			n.Append ("<");  			i += 4;  		}  		else if (c1 == 'g' && c2 == 't' && c3 == ';') {  			n.Append (">");  			i += 4;  		}  		else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  			n.Append ("\"");  			i += 6;  		}  		else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  			n.Append ("'");  			i += 6;  		}  		else  			n.Append ("&");  	}  	else  		n.Append (c);  }  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	c = text [i];  	if (c == '&') {  		c1 = text [i + 1];  		c2 = text [i + 2];  		c3 = text [i + 3];  		c4 = text [i + 4];  		c5 = text [i + 5];  		if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  			n.Append ("&");  			i += 5;  		}  		else if (c1 == 'l' && c2 == 't' && c3 == ';') {  			n.Append ("<");  			i += 4;  		}  		else if (c1 == 'g' && c2 == 't' && c3 == ';') {  			n.Append (">");  			i += 4;  		}  		else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  			n.Append ("\"");  			i += 6;  		}  		else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  			n.Append ("'");  			i += 6;  		}  		else  			n.Append ("&");  	}  	else  		n.Append (c);  }  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	c = text [i];  	if (c == '&') {  		c1 = text [i + 1];  		c2 = text [i + 2];  		c3 = text [i + 3];  		c4 = text [i + 4];  		c5 = text [i + 5];  		if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  			n.Append ("&");  			i += 5;  		}  		else if (c1 == 'l' && c2 == 't' && c3 == ';') {  			n.Append ("<");  			i += 4;  		}  		else if (c1 == 'g' && c2 == 't' && c3 == ';') {  			n.Append (">");  			i += 4;  		}  		else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  			n.Append ("\"");  			i += 6;  		}  		else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  			n.Append ("'");  			i += 6;  		}  		else  			n.Append ("&");  	}  	else  		n.Append (c);  }  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	c = text [i];  	if (c == '&') {  		c1 = text [i + 1];  		c2 = text [i + 2];  		c3 = text [i + 3];  		c4 = text [i + 4];  		c5 = text [i + 5];  		if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  			n.Append ("&");  			i += 5;  		}  		else if (c1 == 'l' && c2 == 't' && c3 == ';') {  			n.Append ("<");  			i += 4;  		}  		else if (c1 == 'g' && c2 == 't' && c3 == ';') {  			n.Append (">");  			i += 4;  		}  		else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  			n.Append ("\"");  			i += 6;  		}  		else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  			n.Append ("'");  			i += 6;  		}  		else  			n.Append ("&");  	}  	else  		n.Append (c);  }  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	c = text [i];  	if (c == '&') {  		c1 = text [i + 1];  		c2 = text [i + 2];  		c3 = text [i + 3];  		c4 = text [i + 4];  		c5 = text [i + 5];  		if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  			n.Append ("&");  			i += 5;  		}  		else if (c1 == 'l' && c2 == 't' && c3 == ';') {  			n.Append ("<");  			i += 4;  		}  		else if (c1 == 'g' && c2 == 't' && c3 == ';') {  			n.Append (">");  			i += 4;  		}  		else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  			n.Append ("\"");  			i += 6;  		}  		else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  			n.Append ("'");  			i += 6;  		}  		else  			n.Append ("&");  	}  	else  		n.Append (c);  }  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	c = text [i];  	if (c == '&') {  		c1 = text [i + 1];  		c2 = text [i + 2];  		c3 = text [i + 3];  		c4 = text [i + 4];  		c5 = text [i + 5];  		if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  			n.Append ("&");  			i += 5;  		}  		else if (c1 == 'l' && c2 == 't' && c3 == ';') {  			n.Append ("<");  			i += 4;  		}  		else if (c1 == 'g' && c2 == 't' && c3 == ';') {  			n.Append (">");  			i += 4;  		}  		else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  			n.Append ("\"");  			i += 6;  		}  		else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  			n.Append ("'");  			i += 6;  		}  		else  			n.Append ("&");  	}  	else  		n.Append (c);  }  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c == '&') {  	c1 = text [i + 1];  	c2 = text [i + 2];  	c3 = text [i + 3];  	c4 = text [i + 4];  	c5 = text [i + 5];  	if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  		n.Append ("&");  		i += 5;  	}  	else if (c1 == 'l' && c2 == 't' && c3 == ';') {  		n.Append ("<");  		i += 4;  	}  	else if (c1 == 'g' && c2 == 't' && c3 == ';') {  		n.Append (">");  		i += 4;  	}  	else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  		n.Append ("\"");  		i += 6;  	}  	else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  		n.Append ("'");  		i += 6;  	}  	else  		n.Append ("&");  }  else  	n.Append (c);  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c == '&') {  	c1 = text [i + 1];  	c2 = text [i + 2];  	c3 = text [i + 3];  	c4 = text [i + 4];  	c5 = text [i + 5];  	if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  		n.Append ("&");  		i += 5;  	}  	else if (c1 == 'l' && c2 == 't' && c3 == ';') {  		n.Append ("<");  		i += 4;  	}  	else if (c1 == 'g' && c2 == 't' && c3 == ';') {  		n.Append (">");  		i += 4;  	}  	else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  		n.Append ("\"");  		i += 6;  	}  	else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  		n.Append ("'");  		i += 6;  	}  	else  		n.Append ("&");  }  else  	n.Append (c);  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c == '&') {  	c1 = text [i + 1];  	c2 = text [i + 2];  	c3 = text [i + 3];  	c4 = text [i + 4];  	c5 = text [i + 5];  	if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  		n.Append ("&");  		i += 5;  	}  	else if (c1 == 'l' && c2 == 't' && c3 == ';') {  		n.Append ("<");  		i += 4;  	}  	else if (c1 == 'g' && c2 == 't' && c3 == ';') {  		n.Append (">");  		i += 4;  	}  	else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  		n.Append ("\"");  		i += 6;  	}  	else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  		n.Append ("'");  		i += 6;  	}  	else  		n.Append ("&");  }  else  	n.Append (c);  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c == '&') {  	c1 = text [i + 1];  	c2 = text [i + 2];  	c3 = text [i + 3];  	c4 = text [i + 4];  	c5 = text [i + 5];  	if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  		n.Append ("&");  		i += 5;  	}  	else if (c1 == 'l' && c2 == 't' && c3 == ';') {  		n.Append ("<");  		i += 4;  	}  	else if (c1 == 'g' && c2 == 't' && c3 == ';') {  		n.Append (">");  		i += 4;  	}  	else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  		n.Append ("\"");  		i += 6;  	}  	else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  		n.Append ("'");  		i += 6;  	}  	else  		n.Append ("&");  }  else  	n.Append (c);  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c == '&') {  	c1 = text [i + 1];  	c2 = text [i + 2];  	c3 = text [i + 3];  	c4 = text [i + 4];  	c5 = text [i + 5];  	if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  		n.Append ("&");  		i += 5;  	}  	else if (c1 == 'l' && c2 == 't' && c3 == ';') {  		n.Append ("<");  		i += 4;  	}  	else if (c1 == 'g' && c2 == 't' && c3 == ';') {  		n.Append (">");  		i += 4;  	}  	else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  		n.Append ("\"");  		i += 6;  	}  	else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  		n.Append ("'");  		i += 6;  	}  	else  		n.Append ("&");  }  else  	n.Append (c);  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c == '&') {  	c1 = text [i + 1];  	c2 = text [i + 2];  	c3 = text [i + 3];  	c4 = text [i + 4];  	c5 = text [i + 5];  	if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  		n.Append ("&");  		i += 5;  	}  	else if (c1 == 'l' && c2 == 't' && c3 == ';') {  		n.Append ("<");  		i += 4;  	}  	else if (c1 == 'g' && c2 == 't' && c3 == ';') {  		n.Append (">");  		i += 4;  	}  	else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  		n.Append ("\"");  		i += 6;  	}  	else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  		n.Append ("'");  		i += 6;  	}  	else  		n.Append ("&");  }  else  	n.Append (c);  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c == '&') {  	c1 = text [i + 1];  	c2 = text [i + 2];  	c3 = text [i + 3];  	c4 = text [i + 4];  	c5 = text [i + 5];  	if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  		n.Append ("&");  		i += 5;  	}  	else if (c1 == 'l' && c2 == 't' && c3 == ';') {  		n.Append ("<");  		i += 4;  	}  	else if (c1 == 'g' && c2 == 't' && c3 == ';') {  		n.Append (">");  		i += 4;  	}  	else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  		n.Append ("\"");  		i += 6;  	}  	else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  		n.Append ("'");  		i += 6;  	}  	else  		n.Append ("&");  }  else  	n.Append (c);  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c == '&') {  	c1 = text [i + 1];  	c2 = text [i + 2];  	c3 = text [i + 3];  	c4 = text [i + 4];  	c5 = text [i + 5];  	if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  		n.Append ("&");  		i += 5;  	}  	else if (c1 == 'l' && c2 == 't' && c3 == ';') {  		n.Append ("<");  		i += 4;  	}  	else if (c1 == 'g' && c2 == 't' && c3 == ';') {  		n.Append (">");  		i += 4;  	}  	else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  		n.Append ("\"");  		i += 6;  	}  	else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  		n.Append ("'");  		i += 6;  	}  	else  		n.Append ("&");  }  else  	n.Append (c);  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c == '&') {  	c1 = text [i + 1];  	c2 = text [i + 2];  	c3 = text [i + 3];  	c4 = text [i + 4];  	c5 = text [i + 5];  	if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  		n.Append ("&");  		i += 5;  	}  	else if (c1 == 'l' && c2 == 't' && c3 == ';') {  		n.Append ("<");  		i += 4;  	}  	else if (c1 == 'g' && c2 == 't' && c3 == ';') {  		n.Append (">");  		i += 4;  	}  	else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  		n.Append ("\"");  		i += 6;  	}  	else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  		n.Append ("'");  		i += 6;  	}  	else  		n.Append ("&");  }  else  	n.Append (c);  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: c2 = text [i + 2];  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: c3 = text [i + 3];  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: c4 = text [i + 4];  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: c5 = text [i + 5];  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  	n.Append ("&");  	i += 5;  }  else if (c1 == 'l' && c2 == 't' && c3 == ';') {  	n.Append ("<");  	i += 4;  }  else if (c1 == 'g' && c2 == 't' && c3 == ';') {  	n.Append (">");  	i += 4;  }  else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  	n.Append ("\"");  	i += 6;  }  else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  	n.Append ("'");  	i += 6;  }  else  	n.Append ("&");  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  	n.Append ("&");  	i += 5;  }  else if (c1 == 'l' && c2 == 't' && c3 == ';') {  	n.Append ("<");  	i += 4;  }  else if (c1 == 'g' && c2 == 't' && c3 == ';') {  	n.Append (">");  	i += 4;  }  else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  	n.Append ("\"");  	i += 6;  }  else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  	n.Append ("'");  	i += 6;  }  else  	n.Append ("&");  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  	n.Append ("&");  	i += 5;  }  else if (c1 == 'l' && c2 == 't' && c3 == ';') {  	n.Append ("<");  	i += 4;  }  else if (c1 == 'g' && c2 == 't' && c3 == ';') {  	n.Append (">");  	i += 4;  }  else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  	n.Append ("\"");  	i += 6;  }  else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  	n.Append ("'");  	i += 6;  }  else  	n.Append ("&");  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  	n.Append ("&");  	i += 5;  }  else if (c1 == 'l' && c2 == 't' && c3 == ';') {  	n.Append ("<");  	i += 4;  }  else if (c1 == 'g' && c2 == 't' && c3 == ';') {  	n.Append (">");  	i += 4;  }  else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  	n.Append ("\"");  	i += 6;  }  else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  	n.Append ("'");  	i += 6;  }  else  	n.Append ("&");  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c1 == 'a' && c2 == 'm' && c3 == 'p' && c4 == ';') {  	n.Append ("&");  	i += 5;  }  else if (c1 == 'l' && c2 == 't' && c3 == ';') {  	n.Append ("<");  	i += 4;  }  else if (c1 == 'g' && c2 == 't' && c3 == ';') {  	n.Append (">");  	i += 4;  }  else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  	n.Append ("\"");  	i += 6;  }  else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  	n.Append ("'");  	i += 6;  }  else  	n.Append ("&");  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: i += 5;  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c1 == 'l' && c2 == 't' && c3 == ';') {  	n.Append ("<");  	i += 4;  }  else if (c1 == 'g' && c2 == 't' && c3 == ';') {  	n.Append (">");  	i += 4;  }  else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  	n.Append ("\"");  	i += 6;  }  else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  	n.Append ("'");  	i += 6;  }  else  	n.Append ("&");  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c1 == 'l' && c2 == 't' && c3 == ';') {  	n.Append ("<");  	i += 4;  }  else if (c1 == 'g' && c2 == 't' && c3 == ';') {  	n.Append (">");  	i += 4;  }  else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  	n.Append ("\"");  	i += 6;  }  else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  	n.Append ("'");  	i += 6;  }  else  	n.Append ("&");  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c1 == 'l' && c2 == 't' && c3 == ';') {  	n.Append ("<");  	i += 4;  }  else if (c1 == 'g' && c2 == 't' && c3 == ';') {  	n.Append (">");  	i += 4;  }  else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  	n.Append ("\"");  	i += 6;  }  else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  	n.Append ("'");  	i += 6;  }  else  	n.Append ("&");  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c1 == 'l' && c2 == 't' && c3 == ';') {  	n.Append ("<");  	i += 4;  }  else if (c1 == 'g' && c2 == 't' && c3 == ';') {  	n.Append (">");  	i += 4;  }  else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  	n.Append ("\"");  	i += 6;  }  else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  	n.Append ("'");  	i += 6;  }  else  	n.Append ("&");  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: i += 4;  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c1 == 'g' && c2 == 't' && c3 == ';') {  	n.Append (">");  	i += 4;  }  else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  	n.Append ("\"");  	i += 6;  }  else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  	n.Append ("'");  	i += 6;  }  else  	n.Append ("&");  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c1 == 'g' && c2 == 't' && c3 == ';') {  	n.Append (">");  	i += 4;  }  else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  	n.Append ("\"");  	i += 6;  }  else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  	n.Append ("'");  	i += 6;  }  else  	n.Append ("&");  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c1 == 'g' && c2 == 't' && c3 == ';') {  	n.Append (">");  	i += 4;  }  else if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  	n.Append ("\"");  	i += 6;  }  else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  	n.Append ("'");  	i += 6;  }  else  	n.Append ("&");  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: i += 4;  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  	n.Append ("\"");  	i += 6;  }  else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  	n.Append ("'");  	i += 6;  }  else  	n.Append ("&");  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c1 == 'q' && c2 == 'u' && c3 == 'o' && c4 == 't' && c5 == ';') {  	n.Append ("\"");  	i += 6;  }  else if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  	n.Append ("'");  	i += 6;  }  else  	n.Append ("&");  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: i += 6;  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: if (c1 == 'a' && c2 == 'p' && c3 == 'o' && c4 == 's' && c5 == ';') {  	n.Append ("'");  	i += 6;  }  else  	n.Append ("&");  
Magic Number,Spring.Expressions.Parser.antlr,BaseAST,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\BaseAST.cs,decode,The following statement contains a magic number: i += 6;  
Magic Number,Spring.Expressions.Parser.antlr,CharQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharQueue.cs,CharQueue,The following statement contains a magic number: if (minSize < 0) {  	init (16);  	// pick some value for them  	return;  }  
Magic Number,Spring.Expressions.Parser.antlr,CharQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharQueue.cs,CharQueue,The following statement contains a magic number: init (16);  
Magic Number,Spring.Expressions.Parser.antlr,CharQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharQueue.cs,CharQueue,The following statement contains a magic number: if (minSize >= (Int32.MaxValue / 2)) {  	init (Int32.MaxValue);  	// wow that's big.  	return;  }  
Magic Number,Spring.Expressions.Parser.antlr,CharQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharQueue.cs,CharQueue,The following statement contains a magic number: for (size = 2; size < minSize; size *= 2) {  	;  }  
Magic Number,Spring.Expressions.Parser.antlr,CharQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharQueue.cs,CharQueue,The following statement contains a magic number: for (size = 2; size < minSize; size *= 2) {  	;  }  
Magic Number,Spring.Expressions.Parser.antlr,CharQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharQueue.cs,CharQueue,The following statement contains a magic number: size = 2
Magic Number,Spring.Expressions.Parser.antlr,CharQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharQueue.cs,CharQueue,The following statement contains a magic number: size *= 2
Magic Number,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,CharScanner,The following statement contains a magic number: cached_LA2 = inputState.input.LA (2);  
Magic Number,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,CharScanner,The following statement contains a magic number: if (inputState != null) {  	cached_LA2 = inputState.input.LA (2);  	cached_LA1 = inputState.input.LA (1);  }  
Magic Number,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,CharScanner,The following statement contains a magic number: cached_LA2 = inputState.input.LA (2);  
Magic Number,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,consume,The following statement contains a magic number: if (caseSensitive) {  	cached_LA1 = inputState.input.consume ();  	cached_LA2 = inputState.input.LA (2);  }  else {  	cached_LA1 = toLower (inputState.input.consume ());  	cached_LA2 = toLower (inputState.input.LA (2));  }  
Magic Number,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,consume,The following statement contains a magic number: if (caseSensitive) {  	cached_LA1 = inputState.input.consume ();  	cached_LA2 = inputState.input.LA (2);  }  else {  	cached_LA1 = toLower (inputState.input.consume ());  	cached_LA2 = toLower (inputState.input.LA (2));  }  
Magic Number,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,consume,The following statement contains a magic number: cached_LA2 = inputState.input.LA (2);  
Magic Number,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,consume,The following statement contains a magic number: cached_LA2 = toLower (inputState.input.LA (2));  
Magic Number,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,LA,The following statement contains a magic number: if (i == 2) {  	return cached_LA2;  }  
Magic Number,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,refresh,The following statement contains a magic number: if (caseSensitive) {  	cached_LA2 = inputState.input.LA (2);  	cached_LA1 = inputState.input.LA (1);  }  else {  	cached_LA2 = toLower (inputState.input.LA (2));  	cached_LA1 = toLower (inputState.input.LA (1));  }  
Magic Number,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,refresh,The following statement contains a magic number: if (caseSensitive) {  	cached_LA2 = inputState.input.LA (2);  	cached_LA1 = inputState.input.LA (1);  }  else {  	cached_LA2 = toLower (inputState.input.LA (2));  	cached_LA1 = toLower (inputState.input.LA (1));  }  
Magic Number,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,refresh,The following statement contains a magic number: cached_LA2 = inputState.input.LA (2);  
Magic Number,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,refresh,The following statement contains a magic number: cached_LA2 = toLower (inputState.input.LA (2));  
Magic Number,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,rewind,The following statement contains a magic number: if (caseSensitive) {  	cached_LA2 = inputState.input.LA (2);  	cached_LA1 = inputState.input.LA (1);  }  else {  	cached_LA2 = toLower (inputState.input.LA (2));  	cached_LA1 = toLower (inputState.input.LA (1));  }  
Magic Number,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,rewind,The following statement contains a magic number: if (caseSensitive) {  	cached_LA2 = inputState.input.LA (2);  	cached_LA1 = inputState.input.LA (1);  }  else {  	cached_LA2 = toLower (inputState.input.LA (2));  	cached_LA1 = toLower (inputState.input.LA (1));  }  
Magic Number,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,rewind,The following statement contains a magic number: cached_LA2 = inputState.input.LA (2);  
Magic Number,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,rewind,The following statement contains a magic number: cached_LA2 = toLower (inputState.input.LA (2));  
Magic Number,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,setCaseSensitive,The following statement contains a magic number: if (caseSensitive) {  	cached_LA2 = inputState.input.LA (2);  	cached_LA1 = inputState.input.LA (1);  }  else {  	cached_LA2 = toLower (inputState.input.LA (2));  	cached_LA1 = toLower (inputState.input.LA (1));  }  
Magic Number,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,setCaseSensitive,The following statement contains a magic number: if (caseSensitive) {  	cached_LA2 = inputState.input.LA (2);  	cached_LA1 = inputState.input.LA (1);  }  else {  	cached_LA2 = toLower (inputState.input.LA (2));  	cached_LA1 = toLower (inputState.input.LA (1));  }  
Magic Number,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,setCaseSensitive,The following statement contains a magic number: cached_LA2 = inputState.input.LA (2);  
Magic Number,Spring.Expressions.Parser.antlr,CharScanner,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\CharScanner.cs,setCaseSensitive,The following statement contains a magic number: cached_LA2 = toLower (inputState.input.LA (2));  
Magic Number,Spring.Expressions.Parser.antlr,MismatchedCharException,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\MismatchedCharException.cs,appendCharName,The following statement contains a magic number: switch (c) {  case 65535:  	// 65535 = (char) -1 = EOF  	sb.Append ("'<EOF>'");  	break;  case '\n':  	sb.Append (@"'\n'");  	break;  case '\r':  	sb.Append (@"'\r'");  	break;  case '\t':  	sb.Append (@"'\t'");  	break;  default:  	sb.Append ('\'');  	sb.Append ((char)c);  	sb.Append ('\'');  	break;  }  
Magic Number,Spring.Expressions.Parser.antlr,SupportClass,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\SupportClass.cs,URShift,The following statement contains a magic number: if (number >= 0)  	return number >> bits;  else  	return (number >> bits) + (2 << ~bits);  
Magic Number,Spring.Expressions.Parser.antlr,SupportClass,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\SupportClass.cs,URShift,The following statement contains a magic number: return (number >> bits) + (2 << ~bits);  
Magic Number,Spring.Expressions.Parser.antlr,TokenQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\TokenQueue.cs,TokenQueue,The following statement contains a magic number: if (minSize < 0) {  	init (16);  	// pick some value for them  	return;  }  
Magic Number,Spring.Expressions.Parser.antlr,TokenQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\TokenQueue.cs,TokenQueue,The following statement contains a magic number: init (16);  
Magic Number,Spring.Expressions.Parser.antlr,TokenQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\TokenQueue.cs,TokenQueue,The following statement contains a magic number: if (minSize >= (int.MaxValue / 2)) {  	init (int.MaxValue);  	// wow that's big.  	return;  }  
Magic Number,Spring.Expressions.Parser.antlr,TokenQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\TokenQueue.cs,TokenQueue,The following statement contains a magic number: for (size = 2; size < minSize; size *= 2) {  	;  }  
Magic Number,Spring.Expressions.Parser.antlr,TokenQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\TokenQueue.cs,TokenQueue,The following statement contains a magic number: for (size = 2; size < minSize; size *= 2) {  	;  }  
Magic Number,Spring.Expressions.Parser.antlr,TokenQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\TokenQueue.cs,TokenQueue,The following statement contains a magic number: size = 2
Magic Number,Spring.Expressions.Parser.antlr,TokenQueue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\TokenQueue.cs,TokenQueue,The following statement contains a magic number: size *= 2
Magic Number,Spring.Expressions.Parser.antlr.collections.impl,BitSet,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\collections\impl\BitSet.cs,toStringOfHalfWords,The following statement contains a magic number: for (int i = 0; i < dataBits.Length; i++) {  	if (i != 0)  		s += "' ";  	long tmp = dataBits [i];  	tmp &= 0xFFFFFFFFL;  	s += (tmp + "UL");  	s += "' ";  	tmp = SupportClass.URShift (dataBits [i]' 32);  	tmp &= 0xFFFFFFFFL;  	s += (tmp + "UL");  }  
Magic Number,Spring.Expressions.Parser.antlr.collections.impl,BitSet,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\collections\impl\BitSet.cs,toStringOfHalfWords,The following statement contains a magic number: tmp = SupportClass.URShift (dataBits [i]' 32);  
Magic Number,Spring.Expressions.Parser.antlr.debug,Tracer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\debug\Tracer.cs,dedent,The following statement contains a magic number: if (indentString.Length < 2)  	indentString = "";  else  	indentString = indentString.Substring (2);  
Magic Number,Spring.Expressions.Parser.antlr.debug,Tracer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\debug\Tracer.cs,dedent,The following statement contains a magic number: if (indentString.Length < 2)  	indentString = "";  else  	indentString = indentString.Substring (2);  
Magic Number,Spring.Expressions.Parser.antlr.debug,Tracer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\antlr\debug\Tracer.cs,dedent,The following statement contains a magic number: indentString = indentString.Substring (2);  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,initialize,The following statement contains a magic number: literals = new Hashtable (100' (float)0.4' null' Comparer.Default);  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,initialize,The following statement contains a magic number: literals = new Hashtable (100' (float)0.4' null' Comparer.Default);  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,initialize,The following statement contains a magic number: literals.Add ("true"' 7);  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,initialize,The following statement contains a magic number: literals.Add ("and"' 8);  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,initialize,The following statement contains a magic number: literals.Add ("matches"' 15);  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,initialize,The following statement contains a magic number: literals.Add ("in"' 11);  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,initialize,The following statement contains a magic number: literals.Add ("xor"' 10);  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,initialize,The following statement contains a magic number: literals.Add ("null"' 16);  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,initialize,The following statement contains a magic number: literals.Add ("between"' 13);  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,initialize,The following statement contains a magic number: literals.Add ("or"' 9);  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,initialize,The following statement contains a magic number: literals.Add ("is"' 12);  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,initialize,The following statement contains a magic number: literals.Add ("like"' 14);  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,initialize,The following statement contains a magic number: literals.Add ("new"' 49);  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,initialize,The following statement contains a magic number: literals.Add ("false"' 6);  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mk_tokenSet_0_,The following statement contains a magic number: for (int i = 2; i <= 1024; i++) {  	data [i] = 0L;  }  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mk_tokenSet_0_,The following statement contains a magic number: for (int i = 2; i <= 1024; i++) {  	data [i] = 0L;  }  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mk_tokenSet_1_,The following statement contains a magic number: for (int i = 1; i <= 1024; i++) {  	data [i] = 0L;  }  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mk_tokenSet_2_,The following statement contains a magic number: for (int i = 1; i <= 1022; i++) {  	data [i] = -1L;  }  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mk_tokenSet_2_,The following statement contains a magic number: data [1023] = 9223372036854775807L;  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mk_tokenSet_2_,The following statement contains a magic number: for (int i = 1024; i <= 2047; i++) {  	data [i] = 0L;  }  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mk_tokenSet_2_,The following statement contains a magic number: for (int i = 1024; i <= 2047; i++) {  	data [i] = 0L;  }  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mk_tokenSet_3_,The following statement contains a magic number: for (int i = 2; i <= 1024; i++) {  	data [i] = 0L;  }  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mk_tokenSet_3_,The following statement contains a magic number: for (int i = 2; i <= 1024; i++) {  	data [i] = 0L;  }  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mk_tokenSet_4_,The following statement contains a magic number: for (int i = 2; i <= 1024; i++) {  	data [i] = 0L;  }  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mk_tokenSet_4_,The following statement contains a magic number: for (int i = 2; i <= 1024; i++) {  	data [i] = 0L;  }  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mk_tokenSet_5_,The following statement contains a magic number: for (int i = 2; i <= 1024; i++) {  	data [i] = 0L;  }  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mk_tokenSet_5_,The following statement contains a magic number: for (int i = 2; i <= 1024; i++) {  	data [i] = 0L;  }  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mk_tokenSet_6_,The following statement contains a magic number: for (int i = 2; i <= 1024; i++) {  	data [i] = 0L;  }  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mk_tokenSet_6_,The following statement contains a magic number: for (int i = 2; i <= 1024; i++) {  	data [i] = 0L;  }  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mk_tokenSet_7_,The following statement contains a magic number: for (int i = 2; i <= 1024; i++) {  	data [i] = 0L;  }  
Magic Number,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mk_tokenSet_7_,The following statement contains a magic number: for (int i = 2; i <= 1024; i++) {  	data [i] = 0L;  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: try {  	// for error handling  	{  		switch (LA (1)) {  		case ID: {  			methodOrProperty ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case DOLLAR: {  			localFunctionOrVar ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LBRACKET: {  			indexer ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case FALSE:  		case TRUE:  		case NULL_LITERAL:  		case STRING_LITERAL:  		case INTEGER_LITERAL:  		case HEXADECIMAL_INTEGER_LITERAL:  		case REAL_LITERAL: {  			literal ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case TYPE: {  			type ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LITERAL_new: {  			constructor ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case PROJECT: {  			projection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case SELECT: {  			selection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case SELECT_FIRST: {  			firstSelection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case SELECT_LAST: {  			lastSelection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LCURLY: {  			listInitializer ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LAMBDA: {  			lambda ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		default:  			bool synPredMatched40 = false;  			if (((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2))))) {  				int _m40 = mark ();  				synPredMatched40 = true;  				inputState.guessing++;  				try {  					{  						match (LPAREN);  						expression ();  						match (SEMI);  					}  				}  				catch (RecognitionException) {  					synPredMatched40 = false;  				}  				rewind (_m40);  				inputState.guessing--;  			}  			if (synPredMatched40) {  				exprList ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  				parenExpr ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == POUND) && (LA (2) == ID)) {  				functionOrVar ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  				reference ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  				mapInitializer ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  				attribute ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else {  				throw new NoViableAltException (LT (1)' getFilename ());  			}  			break;  		}  	}  	startNode_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  catch (RecognitionException ex) {  	if (0 == inputState.guessing) {  		reportError (ex);  		recover (ex' tokenSet_2_);  	}  	else {  		throw ex;  	}  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: try {  	// for error handling  	{  		switch (LA (1)) {  		case ID: {  			methodOrProperty ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case DOLLAR: {  			localFunctionOrVar ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LBRACKET: {  			indexer ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case FALSE:  		case TRUE:  		case NULL_LITERAL:  		case STRING_LITERAL:  		case INTEGER_LITERAL:  		case HEXADECIMAL_INTEGER_LITERAL:  		case REAL_LITERAL: {  			literal ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case TYPE: {  			type ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LITERAL_new: {  			constructor ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case PROJECT: {  			projection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case SELECT: {  			selection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case SELECT_FIRST: {  			firstSelection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case SELECT_LAST: {  			lastSelection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LCURLY: {  			listInitializer ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LAMBDA: {  			lambda ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		default:  			bool synPredMatched40 = false;  			if (((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2))))) {  				int _m40 = mark ();  				synPredMatched40 = true;  				inputState.guessing++;  				try {  					{  						match (LPAREN);  						expression ();  						match (SEMI);  					}  				}  				catch (RecognitionException) {  					synPredMatched40 = false;  				}  				rewind (_m40);  				inputState.guessing--;  			}  			if (synPredMatched40) {  				exprList ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  				parenExpr ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == POUND) && (LA (2) == ID)) {  				functionOrVar ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  				reference ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  				mapInitializer ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  				attribute ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else {  				throw new NoViableAltException (LT (1)' getFilename ());  			}  			break;  		}  	}  	startNode_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  catch (RecognitionException ex) {  	if (0 == inputState.guessing) {  		reportError (ex);  		recover (ex' tokenSet_2_);  	}  	else {  		throw ex;  	}  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: try {  	// for error handling  	{  		switch (LA (1)) {  		case ID: {  			methodOrProperty ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case DOLLAR: {  			localFunctionOrVar ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LBRACKET: {  			indexer ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case FALSE:  		case TRUE:  		case NULL_LITERAL:  		case STRING_LITERAL:  		case INTEGER_LITERAL:  		case HEXADECIMAL_INTEGER_LITERAL:  		case REAL_LITERAL: {  			literal ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case TYPE: {  			type ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LITERAL_new: {  			constructor ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case PROJECT: {  			projection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case SELECT: {  			selection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case SELECT_FIRST: {  			firstSelection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case SELECT_LAST: {  			lastSelection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LCURLY: {  			listInitializer ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LAMBDA: {  			lambda ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		default:  			bool synPredMatched40 = false;  			if (((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2))))) {  				int _m40 = mark ();  				synPredMatched40 = true;  				inputState.guessing++;  				try {  					{  						match (LPAREN);  						expression ();  						match (SEMI);  					}  				}  				catch (RecognitionException) {  					synPredMatched40 = false;  				}  				rewind (_m40);  				inputState.guessing--;  			}  			if (synPredMatched40) {  				exprList ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  				parenExpr ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == POUND) && (LA (2) == ID)) {  				functionOrVar ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  				reference ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  				mapInitializer ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  				attribute ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else {  				throw new NoViableAltException (LT (1)' getFilename ());  			}  			break;  		}  	}  	startNode_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  catch (RecognitionException ex) {  	if (0 == inputState.guessing) {  		reportError (ex);  		recover (ex' tokenSet_2_);  	}  	else {  		throw ex;  	}  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: try {  	// for error handling  	{  		switch (LA (1)) {  		case ID: {  			methodOrProperty ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case DOLLAR: {  			localFunctionOrVar ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LBRACKET: {  			indexer ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case FALSE:  		case TRUE:  		case NULL_LITERAL:  		case STRING_LITERAL:  		case INTEGER_LITERAL:  		case HEXADECIMAL_INTEGER_LITERAL:  		case REAL_LITERAL: {  			literal ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case TYPE: {  			type ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LITERAL_new: {  			constructor ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case PROJECT: {  			projection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case SELECT: {  			selection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case SELECT_FIRST: {  			firstSelection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case SELECT_LAST: {  			lastSelection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LCURLY: {  			listInitializer ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LAMBDA: {  			lambda ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		default:  			bool synPredMatched40 = false;  			if (((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2))))) {  				int _m40 = mark ();  				synPredMatched40 = true;  				inputState.guessing++;  				try {  					{  						match (LPAREN);  						expression ();  						match (SEMI);  					}  				}  				catch (RecognitionException) {  					synPredMatched40 = false;  				}  				rewind (_m40);  				inputState.guessing--;  			}  			if (synPredMatched40) {  				exprList ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  				parenExpr ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == POUND) && (LA (2) == ID)) {  				functionOrVar ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  				reference ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  				mapInitializer ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  				attribute ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else {  				throw new NoViableAltException (LT (1)' getFilename ());  			}  			break;  		}  	}  	startNode_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  catch (RecognitionException ex) {  	if (0 == inputState.guessing) {  		reportError (ex);  		recover (ex' tokenSet_2_);  	}  	else {  		throw ex;  	}  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: try {  	// for error handling  	{  		switch (LA (1)) {  		case ID: {  			methodOrProperty ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case DOLLAR: {  			localFunctionOrVar ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LBRACKET: {  			indexer ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case FALSE:  		case TRUE:  		case NULL_LITERAL:  		case STRING_LITERAL:  		case INTEGER_LITERAL:  		case HEXADECIMAL_INTEGER_LITERAL:  		case REAL_LITERAL: {  			literal ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case TYPE: {  			type ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LITERAL_new: {  			constructor ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case PROJECT: {  			projection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case SELECT: {  			selection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case SELECT_FIRST: {  			firstSelection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case SELECT_LAST: {  			lastSelection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LCURLY: {  			listInitializer ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LAMBDA: {  			lambda ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		default:  			bool synPredMatched40 = false;  			if (((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2))))) {  				int _m40 = mark ();  				synPredMatched40 = true;  				inputState.guessing++;  				try {  					{  						match (LPAREN);  						expression ();  						match (SEMI);  					}  				}  				catch (RecognitionException) {  					synPredMatched40 = false;  				}  				rewind (_m40);  				inputState.guessing--;  			}  			if (synPredMatched40) {  				exprList ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  				parenExpr ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == POUND) && (LA (2) == ID)) {  				functionOrVar ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  				reference ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  				mapInitializer ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  				attribute ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else {  				throw new NoViableAltException (LT (1)' getFilename ());  			}  			break;  		}  	}  	startNode_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  catch (RecognitionException ex) {  	if (0 == inputState.guessing) {  		reportError (ex);  		recover (ex' tokenSet_2_);  	}  	else {  		throw ex;  	}  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: try {  	// for error handling  	{  		switch (LA (1)) {  		case ID: {  			methodOrProperty ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case DOLLAR: {  			localFunctionOrVar ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LBRACKET: {  			indexer ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case FALSE:  		case TRUE:  		case NULL_LITERAL:  		case STRING_LITERAL:  		case INTEGER_LITERAL:  		case HEXADECIMAL_INTEGER_LITERAL:  		case REAL_LITERAL: {  			literal ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case TYPE: {  			type ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LITERAL_new: {  			constructor ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case PROJECT: {  			projection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case SELECT: {  			selection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case SELECT_FIRST: {  			firstSelection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case SELECT_LAST: {  			lastSelection ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LCURLY: {  			listInitializer ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		case LAMBDA: {  			lambda ();  			if (0 == inputState.guessing) {  				astFactory.addASTChild (ref currentAST' (AST)returnAST);  			}  			break;  		}  		default:  			bool synPredMatched40 = false;  			if (((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2))))) {  				int _m40 = mark ();  				synPredMatched40 = true;  				inputState.guessing++;  				try {  					{  						match (LPAREN);  						expression ();  						match (SEMI);  					}  				}  				catch (RecognitionException) {  					synPredMatched40 = false;  				}  				rewind (_m40);  				inputState.guessing--;  			}  			if (synPredMatched40) {  				exprList ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  				parenExpr ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == POUND) && (LA (2) == ID)) {  				functionOrVar ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  				reference ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  				mapInitializer ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  				attribute ();  				if (0 == inputState.guessing) {  					astFactory.addASTChild (ref currentAST' (AST)returnAST);  				}  			}  			else {  				throw new NoViableAltException (LT (1)' getFilename ());  			}  			break;  		}  	}  	startNode_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  catch (RecognitionException ex) {  	if (0 == inputState.guessing) {  		reportError (ex);  		recover (ex' tokenSet_2_);  	}  	else {  		throw ex;  	}  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: switch (LA (1)) {  case ID: {  	methodOrProperty ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case DOLLAR: {  	localFunctionOrVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LBRACKET: {  	indexer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case FALSE:  case TRUE:  case NULL_LITERAL:  case STRING_LITERAL:  case INTEGER_LITERAL:  case HEXADECIMAL_INTEGER_LITERAL:  case REAL_LITERAL: {  	literal ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case TYPE: {  	type ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LITERAL_new: {  	constructor ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case PROJECT: {  	projection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case SELECT: {  	selection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case SELECT_FIRST: {  	firstSelection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case SELECT_LAST: {  	lastSelection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LCURLY: {  	listInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LAMBDA: {  	lambda ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  default:  	bool synPredMatched40 = false;  	if (((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2))))) {  		int _m40 = mark ();  		synPredMatched40 = true;  		inputState.guessing++;  		try {  			{  				match (LPAREN);  				expression ();  				match (SEMI);  			}  		}  		catch (RecognitionException) {  			synPredMatched40 = false;  		}  		rewind (_m40);  		inputState.guessing--;  	}  	if (synPredMatched40) {  		exprList ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  		parenExpr ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == POUND) && (LA (2) == ID)) {  		functionOrVar ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  		reference ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  		mapInitializer ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  		attribute ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else {  		throw new NoViableAltException (LT (1)' getFilename ());  	}  	break;  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: switch (LA (1)) {  case ID: {  	methodOrProperty ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case DOLLAR: {  	localFunctionOrVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LBRACKET: {  	indexer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case FALSE:  case TRUE:  case NULL_LITERAL:  case STRING_LITERAL:  case INTEGER_LITERAL:  case HEXADECIMAL_INTEGER_LITERAL:  case REAL_LITERAL: {  	literal ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case TYPE: {  	type ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LITERAL_new: {  	constructor ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case PROJECT: {  	projection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case SELECT: {  	selection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case SELECT_FIRST: {  	firstSelection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case SELECT_LAST: {  	lastSelection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LCURLY: {  	listInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LAMBDA: {  	lambda ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  default:  	bool synPredMatched40 = false;  	if (((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2))))) {  		int _m40 = mark ();  		synPredMatched40 = true;  		inputState.guessing++;  		try {  			{  				match (LPAREN);  				expression ();  				match (SEMI);  			}  		}  		catch (RecognitionException) {  			synPredMatched40 = false;  		}  		rewind (_m40);  		inputState.guessing--;  	}  	if (synPredMatched40) {  		exprList ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  		parenExpr ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == POUND) && (LA (2) == ID)) {  		functionOrVar ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  		reference ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  		mapInitializer ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  		attribute ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else {  		throw new NoViableAltException (LT (1)' getFilename ());  	}  	break;  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: switch (LA (1)) {  case ID: {  	methodOrProperty ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case DOLLAR: {  	localFunctionOrVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LBRACKET: {  	indexer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case FALSE:  case TRUE:  case NULL_LITERAL:  case STRING_LITERAL:  case INTEGER_LITERAL:  case HEXADECIMAL_INTEGER_LITERAL:  case REAL_LITERAL: {  	literal ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case TYPE: {  	type ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LITERAL_new: {  	constructor ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case PROJECT: {  	projection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case SELECT: {  	selection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case SELECT_FIRST: {  	firstSelection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case SELECT_LAST: {  	lastSelection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LCURLY: {  	listInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LAMBDA: {  	lambda ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  default:  	bool synPredMatched40 = false;  	if (((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2))))) {  		int _m40 = mark ();  		synPredMatched40 = true;  		inputState.guessing++;  		try {  			{  				match (LPAREN);  				expression ();  				match (SEMI);  			}  		}  		catch (RecognitionException) {  			synPredMatched40 = false;  		}  		rewind (_m40);  		inputState.guessing--;  	}  	if (synPredMatched40) {  		exprList ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  		parenExpr ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == POUND) && (LA (2) == ID)) {  		functionOrVar ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  		reference ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  		mapInitializer ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  		attribute ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else {  		throw new NoViableAltException (LT (1)' getFilename ());  	}  	break;  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: switch (LA (1)) {  case ID: {  	methodOrProperty ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case DOLLAR: {  	localFunctionOrVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LBRACKET: {  	indexer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case FALSE:  case TRUE:  case NULL_LITERAL:  case STRING_LITERAL:  case INTEGER_LITERAL:  case HEXADECIMAL_INTEGER_LITERAL:  case REAL_LITERAL: {  	literal ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case TYPE: {  	type ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LITERAL_new: {  	constructor ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case PROJECT: {  	projection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case SELECT: {  	selection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case SELECT_FIRST: {  	firstSelection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case SELECT_LAST: {  	lastSelection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LCURLY: {  	listInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LAMBDA: {  	lambda ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  default:  	bool synPredMatched40 = false;  	if (((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2))))) {  		int _m40 = mark ();  		synPredMatched40 = true;  		inputState.guessing++;  		try {  			{  				match (LPAREN);  				expression ();  				match (SEMI);  			}  		}  		catch (RecognitionException) {  			synPredMatched40 = false;  		}  		rewind (_m40);  		inputState.guessing--;  	}  	if (synPredMatched40) {  		exprList ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  		parenExpr ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == POUND) && (LA (2) == ID)) {  		functionOrVar ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  		reference ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  		mapInitializer ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  		attribute ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else {  		throw new NoViableAltException (LT (1)' getFilename ());  	}  	break;  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: switch (LA (1)) {  case ID: {  	methodOrProperty ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case DOLLAR: {  	localFunctionOrVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LBRACKET: {  	indexer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case FALSE:  case TRUE:  case NULL_LITERAL:  case STRING_LITERAL:  case INTEGER_LITERAL:  case HEXADECIMAL_INTEGER_LITERAL:  case REAL_LITERAL: {  	literal ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case TYPE: {  	type ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LITERAL_new: {  	constructor ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case PROJECT: {  	projection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case SELECT: {  	selection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case SELECT_FIRST: {  	firstSelection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case SELECT_LAST: {  	lastSelection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LCURLY: {  	listInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LAMBDA: {  	lambda ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  default:  	bool synPredMatched40 = false;  	if (((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2))))) {  		int _m40 = mark ();  		synPredMatched40 = true;  		inputState.guessing++;  		try {  			{  				match (LPAREN);  				expression ();  				match (SEMI);  			}  		}  		catch (RecognitionException) {  			synPredMatched40 = false;  		}  		rewind (_m40);  		inputState.guessing--;  	}  	if (synPredMatched40) {  		exprList ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  		parenExpr ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == POUND) && (LA (2) == ID)) {  		functionOrVar ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  		reference ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  		mapInitializer ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  		attribute ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else {  		throw new NoViableAltException (LT (1)' getFilename ());  	}  	break;  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: switch (LA (1)) {  case ID: {  	methodOrProperty ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case DOLLAR: {  	localFunctionOrVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LBRACKET: {  	indexer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case FALSE:  case TRUE:  case NULL_LITERAL:  case STRING_LITERAL:  case INTEGER_LITERAL:  case HEXADECIMAL_INTEGER_LITERAL:  case REAL_LITERAL: {  	literal ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case TYPE: {  	type ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LITERAL_new: {  	constructor ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case PROJECT: {  	projection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case SELECT: {  	selection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case SELECT_FIRST: {  	firstSelection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case SELECT_LAST: {  	lastSelection ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LCURLY: {  	listInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  case LAMBDA: {  	lambda ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	break;  }  default:  	bool synPredMatched40 = false;  	if (((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2))))) {  		int _m40 = mark ();  		synPredMatched40 = true;  		inputState.guessing++;  		try {  			{  				match (LPAREN);  				expression ();  				match (SEMI);  			}  		}  		catch (RecognitionException) {  			synPredMatched40 = false;  		}  		rewind (_m40);  		inputState.guessing--;  	}  	if (synPredMatched40) {  		exprList ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  		parenExpr ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == POUND) && (LA (2) == ID)) {  		functionOrVar ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  		reference ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  		mapInitializer ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  		attribute ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  	}  	else {  		throw new NoViableAltException (LT (1)' getFilename ());  	}  	break;  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if (((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2))))) {  	int _m40 = mark ();  	synPredMatched40 = true;  	inputState.guessing++;  	try {  		{  			match (LPAREN);  			expression ();  			match (SEMI);  		}  	}  	catch (RecognitionException) {  		synPredMatched40 = false;  	}  	rewind (_m40);  	inputState.guessing--;  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if (synPredMatched40) {  	exprList ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  	parenExpr ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == ID)) {  	functionOrVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  	reference ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  	mapInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  	attribute ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if (synPredMatched40) {  	exprList ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  	parenExpr ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == ID)) {  	functionOrVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  	reference ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  	mapInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  	attribute ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if (synPredMatched40) {  	exprList ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  	parenExpr ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == ID)) {  	functionOrVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  	reference ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  	mapInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  	attribute ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if (synPredMatched40) {  	exprList ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  	parenExpr ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == ID)) {  	functionOrVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  	reference ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  	mapInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  	attribute ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if (synPredMatched40) {  	exprList ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  	parenExpr ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == ID)) {  	functionOrVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  	reference ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  	mapInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  	attribute ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  	parenExpr ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == ID)) {  	functionOrVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  	reference ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  	mapInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  	attribute ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  	parenExpr ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == ID)) {  	functionOrVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  	reference ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  	mapInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  	attribute ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  	parenExpr ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == ID)) {  	functionOrVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  	reference ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  	mapInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  	attribute ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  	parenExpr ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == ID)) {  	functionOrVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  	reference ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  	mapInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  	attribute ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if ((LA (1) == LPAREN) && (tokenSet_9_.member (LA (2)))) {  	parenExpr ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == ID)) {  	functionOrVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  	reference ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  	mapInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  	attribute ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if ((LA (1) == POUND) && (LA (2) == ID)) {  	functionOrVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  	reference ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  	mapInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  	attribute ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if ((LA (1) == POUND) && (LA (2) == ID)) {  	functionOrVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  	reference ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  	mapInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  	attribute ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if ((LA (1) == POUND) && (LA (2) == ID)) {  	functionOrVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  	reference ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  	mapInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  	attribute ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if ((LA (1) == POUND) && (LA (2) == ID)) {  	functionOrVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  	reference ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  	mapInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  	attribute ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if ((LA (1) == AT) && (LA (2) == LPAREN)) {  	reference ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  	mapInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  	attribute ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if ((LA (1) == AT) && (LA (2) == LPAREN)) {  	reference ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  	mapInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  	attribute ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if ((LA (1) == AT) && (LA (2) == LPAREN)) {  	reference ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  	mapInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  	attribute ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  	mapInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  	attribute ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if ((LA (1) == POUND) && (LA (2) == LCURLY)) {  	mapInitializer ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  	attribute ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,startNode,The following statement contains a magic number: if ((LA (1) == AT) && (LA (2) == LBRACKET)) {  	attribute ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,methodOrProperty,The following statement contains a magic number: try {  	// for error handling  	bool synPredMatched56 = false;  	if (((LA (1) == ID) && (LA (2) == LPAREN))) {  		int _m56 = mark ();  		synPredMatched56 = true;  		inputState.guessing++;  		try {  			{  				match (ID);  				match (LPAREN);  			}  		}  		catch (RecognitionException) {  			synPredMatched56 = false;  		}  		rewind (_m56);  		inputState.guessing--;  	}  	if (synPredMatched56) {  		Spring.Expressions.MethodNode tmp38_AST = null;  		tmp38_AST = (Spring.Expressions.MethodNode)astFactory.create (LT (1)' "Spring.Expressions.MethodNode");  		astFactory.makeASTRoot (ref currentAST' (AST)tmp38_AST);  		match (ID);  		methodArgs ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  		methodOrProperty_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else if ((LA (1) == ID) && (tokenSet_2_.member (LA (2)))) {  		property ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  		methodOrProperty_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else {  		throw new NoViableAltException (LT (1)' getFilename ());  	}  }  catch (RecognitionException ex) {  	if (0 == inputState.guessing) {  		reportError (ex);  		recover (ex' tokenSet_2_);  	}  	else {  		throw ex;  	}  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,methodOrProperty,The following statement contains a magic number: try {  	// for error handling  	bool synPredMatched56 = false;  	if (((LA (1) == ID) && (LA (2) == LPAREN))) {  		int _m56 = mark ();  		synPredMatched56 = true;  		inputState.guessing++;  		try {  			{  				match (ID);  				match (LPAREN);  			}  		}  		catch (RecognitionException) {  			synPredMatched56 = false;  		}  		rewind (_m56);  		inputState.guessing--;  	}  	if (synPredMatched56) {  		Spring.Expressions.MethodNode tmp38_AST = null;  		tmp38_AST = (Spring.Expressions.MethodNode)astFactory.create (LT (1)' "Spring.Expressions.MethodNode");  		astFactory.makeASTRoot (ref currentAST' (AST)tmp38_AST);  		match (ID);  		methodArgs ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  		methodOrProperty_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else if ((LA (1) == ID) && (tokenSet_2_.member (LA (2)))) {  		property ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  		methodOrProperty_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else {  		throw new NoViableAltException (LT (1)' getFilename ());  	}  }  catch (RecognitionException ex) {  	if (0 == inputState.guessing) {  		reportError (ex);  		recover (ex' tokenSet_2_);  	}  	else {  		throw ex;  	}  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,methodOrProperty,The following statement contains a magic number: if (((LA (1) == ID) && (LA (2) == LPAREN))) {  	int _m56 = mark ();  	synPredMatched56 = true;  	inputState.guessing++;  	try {  		{  			match (ID);  			match (LPAREN);  		}  	}  	catch (RecognitionException) {  		synPredMatched56 = false;  	}  	rewind (_m56);  	inputState.guessing--;  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,methodOrProperty,The following statement contains a magic number: if (synPredMatched56) {  	Spring.Expressions.MethodNode tmp38_AST = null;  	tmp38_AST = (Spring.Expressions.MethodNode)astFactory.create (LT (1)' "Spring.Expressions.MethodNode");  	astFactory.makeASTRoot (ref currentAST' (AST)tmp38_AST);  	match (ID);  	methodArgs ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	methodOrProperty_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  else if ((LA (1) == ID) && (tokenSet_2_.member (LA (2)))) {  	property ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	methodOrProperty_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,methodOrProperty,The following statement contains a magic number: if ((LA (1) == ID) && (tokenSet_2_.member (LA (2)))) {  	property ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	methodOrProperty_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,functionOrVar,The following statement contains a magic number: try {  	// for error handling  	bool synPredMatched46 = false;  	if (((LA (1) == POUND) && (LA (2) == ID))) {  		int _m46 = mark ();  		synPredMatched46 = true;  		inputState.guessing++;  		try {  			{  				match (POUND);  				match (ID);  				match (LPAREN);  			}  		}  		catch (RecognitionException) {  			synPredMatched46 = false;  		}  		rewind (_m46);  		inputState.guessing--;  	}  	if (synPredMatched46) {  		function ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  		functionOrVar_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else if ((LA (1) == POUND) && (LA (2) == ID)) {  		var ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  		functionOrVar_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else {  		throw new NoViableAltException (LT (1)' getFilename ());  	}  }  catch (RecognitionException ex) {  	if (0 == inputState.guessing) {  		reportError (ex);  		recover (ex' tokenSet_2_);  	}  	else {  		throw ex;  	}  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,functionOrVar,The following statement contains a magic number: try {  	// for error handling  	bool synPredMatched46 = false;  	if (((LA (1) == POUND) && (LA (2) == ID))) {  		int _m46 = mark ();  		synPredMatched46 = true;  		inputState.guessing++;  		try {  			{  				match (POUND);  				match (ID);  				match (LPAREN);  			}  		}  		catch (RecognitionException) {  			synPredMatched46 = false;  		}  		rewind (_m46);  		inputState.guessing--;  	}  	if (synPredMatched46) {  		function ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  		functionOrVar_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else if ((LA (1) == POUND) && (LA (2) == ID)) {  		var ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  		functionOrVar_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else {  		throw new NoViableAltException (LT (1)' getFilename ());  	}  }  catch (RecognitionException ex) {  	if (0 == inputState.guessing) {  		reportError (ex);  		recover (ex' tokenSet_2_);  	}  	else {  		throw ex;  	}  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,functionOrVar,The following statement contains a magic number: if (((LA (1) == POUND) && (LA (2) == ID))) {  	int _m46 = mark ();  	synPredMatched46 = true;  	inputState.guessing++;  	try {  		{  			match (POUND);  			match (ID);  			match (LPAREN);  		}  	}  	catch (RecognitionException) {  		synPredMatched46 = false;  	}  	rewind (_m46);  	inputState.guessing--;  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,functionOrVar,The following statement contains a magic number: if (synPredMatched46) {  	function ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	functionOrVar_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  else if ((LA (1) == POUND) && (LA (2) == ID)) {  	var ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	functionOrVar_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,functionOrVar,The following statement contains a magic number: if ((LA (1) == POUND) && (LA (2) == ID)) {  	var ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	functionOrVar_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,localFunctionOrVar,The following statement contains a magic number: try {  	// for error handling  	bool synPredMatched51 = false;  	if (((LA (1) == DOLLAR) && (LA (2) == ID))) {  		int _m51 = mark ();  		synPredMatched51 = true;  		inputState.guessing++;  		try {  			{  				match (DOLLAR);  				match (ID);  				match (LPAREN);  			}  		}  		catch (RecognitionException) {  			synPredMatched51 = false;  		}  		rewind (_m51);  		inputState.guessing--;  	}  	if (synPredMatched51) {  		localFunction ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  		localFunctionOrVar_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else if ((LA (1) == DOLLAR) && (LA (2) == ID)) {  		localVar ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  		localFunctionOrVar_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else {  		throw new NoViableAltException (LT (1)' getFilename ());  	}  }  catch (RecognitionException ex) {  	if (0 == inputState.guessing) {  		reportError (ex);  		recover (ex' tokenSet_2_);  	}  	else {  		throw ex;  	}  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,localFunctionOrVar,The following statement contains a magic number: try {  	// for error handling  	bool synPredMatched51 = false;  	if (((LA (1) == DOLLAR) && (LA (2) == ID))) {  		int _m51 = mark ();  		synPredMatched51 = true;  		inputState.guessing++;  		try {  			{  				match (DOLLAR);  				match (ID);  				match (LPAREN);  			}  		}  		catch (RecognitionException) {  			synPredMatched51 = false;  		}  		rewind (_m51);  		inputState.guessing--;  	}  	if (synPredMatched51) {  		localFunction ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  		localFunctionOrVar_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else if ((LA (1) == DOLLAR) && (LA (2) == ID)) {  		localVar ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  		localFunctionOrVar_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else {  		throw new NoViableAltException (LT (1)' getFilename ());  	}  }  catch (RecognitionException ex) {  	if (0 == inputState.guessing) {  		reportError (ex);  		recover (ex' tokenSet_2_);  	}  	else {  		throw ex;  	}  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,localFunctionOrVar,The following statement contains a magic number: if (((LA (1) == DOLLAR) && (LA (2) == ID))) {  	int _m51 = mark ();  	synPredMatched51 = true;  	inputState.guessing++;  	try {  		{  			match (DOLLAR);  			match (ID);  			match (LPAREN);  		}  	}  	catch (RecognitionException) {  		synPredMatched51 = false;  	}  	rewind (_m51);  	inputState.guessing--;  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,localFunctionOrVar,The following statement contains a magic number: if (synPredMatched51) {  	localFunction ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	localFunctionOrVar_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  else if ((LA (1) == DOLLAR) && (LA (2) == ID)) {  	localVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	localFunctionOrVar_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,localFunctionOrVar,The following statement contains a magic number: if ((LA (1) == DOLLAR) && (LA (2) == ID)) {  	localVar ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	localFunctionOrVar_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,reference,The following statement contains a magic number: try {  	// for error handling  	bool synPredMatched64 = false;  	if (((LA (1) == AT) && (LA (2) == LPAREN))) {  		int _m64 = mark ();  		synPredMatched64 = true;  		inputState.guessing++;  		try {  			{  				match (AT);  				match (LPAREN);  				quotableName ();  				match (COLON);  			}  		}  		catch (RecognitionException) {  			synPredMatched64 = false;  		}  		rewind (_m64);  		inputState.guessing--;  	}  	if (synPredMatched64) {  		match (AT);  		match (LPAREN);  		quotableName ();  		if (0 == inputState.guessing) {  			cn_AST = (Spring.Expressions.SpringAST)returnAST;  		}  		match (COLON);  		quotableName ();  		if (0 == inputState.guessing) {  			id_AST = (Spring.Expressions.SpringAST)returnAST;  		}  		match (RPAREN);  		if (0 == inputState.guessing) {  			reference_AST = (Spring.Expressions.SpringAST)currentAST.root;  			reference_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' "ref"' "Spring.Context.Support.ReferenceNode")' (AST)cn_AST' (AST)id_AST);  			currentAST.root = reference_AST;  			if ((null != reference_AST) && (null != reference_AST.getFirstChild ()))  				currentAST.child = reference_AST.getFirstChild ();  			else  				currentAST.child = reference_AST;  			currentAST.advanceChildToEnd ();  		}  		reference_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  		match (AT);  		match (LPAREN);  		quotableName ();  		if (0 == inputState.guessing) {  			localid_AST = (Spring.Expressions.SpringAST)returnAST;  		}  		match (RPAREN);  		if (0 == inputState.guessing) {  			reference_AST = (Spring.Expressions.SpringAST)currentAST.root;  			reference_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' "ref"' "Spring.Context.Support.ReferenceNode")' (AST)null' (AST)localid_AST);  			currentAST.root = reference_AST;  			if ((null != reference_AST) && (null != reference_AST.getFirstChild ()))  				currentAST.child = reference_AST.getFirstChild ();  			else  				currentAST.child = reference_AST;  			currentAST.advanceChildToEnd ();  		}  		reference_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else {  		throw new NoViableAltException (LT (1)' getFilename ());  	}  }  catch (RecognitionException ex) {  	if (0 == inputState.guessing) {  		reportError (ex);  		recover (ex' tokenSet_2_);  	}  	else {  		throw ex;  	}  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,reference,The following statement contains a magic number: try {  	// for error handling  	bool synPredMatched64 = false;  	if (((LA (1) == AT) && (LA (2) == LPAREN))) {  		int _m64 = mark ();  		synPredMatched64 = true;  		inputState.guessing++;  		try {  			{  				match (AT);  				match (LPAREN);  				quotableName ();  				match (COLON);  			}  		}  		catch (RecognitionException) {  			synPredMatched64 = false;  		}  		rewind (_m64);  		inputState.guessing--;  	}  	if (synPredMatched64) {  		match (AT);  		match (LPAREN);  		quotableName ();  		if (0 == inputState.guessing) {  			cn_AST = (Spring.Expressions.SpringAST)returnAST;  		}  		match (COLON);  		quotableName ();  		if (0 == inputState.guessing) {  			id_AST = (Spring.Expressions.SpringAST)returnAST;  		}  		match (RPAREN);  		if (0 == inputState.guessing) {  			reference_AST = (Spring.Expressions.SpringAST)currentAST.root;  			reference_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' "ref"' "Spring.Context.Support.ReferenceNode")' (AST)cn_AST' (AST)id_AST);  			currentAST.root = reference_AST;  			if ((null != reference_AST) && (null != reference_AST.getFirstChild ()))  				currentAST.child = reference_AST.getFirstChild ();  			else  				currentAST.child = reference_AST;  			currentAST.advanceChildToEnd ();  		}  		reference_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  		match (AT);  		match (LPAREN);  		quotableName ();  		if (0 == inputState.guessing) {  			localid_AST = (Spring.Expressions.SpringAST)returnAST;  		}  		match (RPAREN);  		if (0 == inputState.guessing) {  			reference_AST = (Spring.Expressions.SpringAST)currentAST.root;  			reference_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' "ref"' "Spring.Context.Support.ReferenceNode")' (AST)null' (AST)localid_AST);  			currentAST.root = reference_AST;  			if ((null != reference_AST) && (null != reference_AST.getFirstChild ()))  				currentAST.child = reference_AST.getFirstChild ();  			else  				currentAST.child = reference_AST;  			currentAST.advanceChildToEnd ();  		}  		reference_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else {  		throw new NoViableAltException (LT (1)' getFilename ());  	}  }  catch (RecognitionException ex) {  	if (0 == inputState.guessing) {  		reportError (ex);  		recover (ex' tokenSet_2_);  	}  	else {  		throw ex;  	}  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,reference,The following statement contains a magic number: if (((LA (1) == AT) && (LA (2) == LPAREN))) {  	int _m64 = mark ();  	synPredMatched64 = true;  	inputState.guessing++;  	try {  		{  			match (AT);  			match (LPAREN);  			quotableName ();  			match (COLON);  		}  	}  	catch (RecognitionException) {  		synPredMatched64 = false;  	}  	rewind (_m64);  	inputState.guessing--;  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,reference,The following statement contains a magic number: if (synPredMatched64) {  	match (AT);  	match (LPAREN);  	quotableName ();  	if (0 == inputState.guessing) {  		cn_AST = (Spring.Expressions.SpringAST)returnAST;  	}  	match (COLON);  	quotableName ();  	if (0 == inputState.guessing) {  		id_AST = (Spring.Expressions.SpringAST)returnAST;  	}  	match (RPAREN);  	if (0 == inputState.guessing) {  		reference_AST = (Spring.Expressions.SpringAST)currentAST.root;  		reference_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' "ref"' "Spring.Context.Support.ReferenceNode")' (AST)cn_AST' (AST)id_AST);  		currentAST.root = reference_AST;  		if ((null != reference_AST) && (null != reference_AST.getFirstChild ()))  			currentAST.child = reference_AST.getFirstChild ();  		else  			currentAST.child = reference_AST;  		currentAST.advanceChildToEnd ();  	}  	reference_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  else if ((LA (1) == AT) && (LA (2) == LPAREN)) {  	match (AT);  	match (LPAREN);  	quotableName ();  	if (0 == inputState.guessing) {  		localid_AST = (Spring.Expressions.SpringAST)returnAST;  	}  	match (RPAREN);  	if (0 == inputState.guessing) {  		reference_AST = (Spring.Expressions.SpringAST)currentAST.root;  		reference_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' "ref"' "Spring.Context.Support.ReferenceNode")' (AST)null' (AST)localid_AST);  		currentAST.root = reference_AST;  		if ((null != reference_AST) && (null != reference_AST.getFirstChild ()))  			currentAST.child = reference_AST.getFirstChild ();  		else  			currentAST.child = reference_AST;  		currentAST.advanceChildToEnd ();  	}  	reference_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,reference,The following statement contains a magic number: if ((LA (1) == AT) && (LA (2) == LPAREN)) {  	match (AT);  	match (LPAREN);  	quotableName ();  	if (0 == inputState.guessing) {  		localid_AST = (Spring.Expressions.SpringAST)returnAST;  	}  	match (RPAREN);  	if (0 == inputState.guessing) {  		reference_AST = (Spring.Expressions.SpringAST)currentAST.root;  		reference_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' "ref"' "Spring.Context.Support.ReferenceNode")' (AST)null' (AST)localid_AST);  		currentAST.root = reference_AST;  		if ((null != reference_AST) && (null != reference_AST.getFirstChild ()))  			currentAST.child = reference_AST.getFirstChild ();  		else  			currentAST.child = reference_AST;  		currentAST.advanceChildToEnd ();  	}  	reference_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,constructor,The following statement contains a magic number: try {  	// for error handling  	bool synPredMatched90 = false;  	if (((LA (1) == LITERAL_new) && (LA (2) == ID))) {  		int _m90 = mark ();  		synPredMatched90 = true;  		inputState.guessing++;  		try {  			{  				match (LITERAL_new);  				qualifiedId ();  				match (LPAREN);  			}  		}  		catch (RecognitionException) {  			synPredMatched90 = false;  		}  		rewind (_m90);  		inputState.guessing--;  	}  	if (synPredMatched90) {  		match (LITERAL_new);  		qualifiedId ();  		if (0 == inputState.guessing) {  			type_AST = (Spring.Expressions.SpringAST)returnAST;  		}  		ctorArgs ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  		if (0 == inputState.guessing) {  			constructor_AST = (Spring.Expressions.SpringAST)currentAST.root;  			constructor_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' type_AST.getText ()' "Spring.Expressions.ConstructorNode")' (AST)constructor_AST);  			currentAST.root = constructor_AST;  			if ((null != constructor_AST) && (null != constructor_AST.getFirstChild ()))  				currentAST.child = constructor_AST.getFirstChild ();  			else  				currentAST.child = constructor_AST;  			currentAST.advanceChildToEnd ();  		}  		constructor_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else if ((LA (1) == LITERAL_new) && (LA (2) == ID)) {  		arrayConstructor ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  		constructor_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else {  		throw new NoViableAltException (LT (1)' getFilename ());  	}  }  catch (RecognitionException ex) {  	if (0 == inputState.guessing) {  		reportError (ex);  		recover (ex' tokenSet_2_);  	}  	else {  		throw ex;  	}  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,constructor,The following statement contains a magic number: try {  	// for error handling  	bool synPredMatched90 = false;  	if (((LA (1) == LITERAL_new) && (LA (2) == ID))) {  		int _m90 = mark ();  		synPredMatched90 = true;  		inputState.guessing++;  		try {  			{  				match (LITERAL_new);  				qualifiedId ();  				match (LPAREN);  			}  		}  		catch (RecognitionException) {  			synPredMatched90 = false;  		}  		rewind (_m90);  		inputState.guessing--;  	}  	if (synPredMatched90) {  		match (LITERAL_new);  		qualifiedId ();  		if (0 == inputState.guessing) {  			type_AST = (Spring.Expressions.SpringAST)returnAST;  		}  		ctorArgs ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  		if (0 == inputState.guessing) {  			constructor_AST = (Spring.Expressions.SpringAST)currentAST.root;  			constructor_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' type_AST.getText ()' "Spring.Expressions.ConstructorNode")' (AST)constructor_AST);  			currentAST.root = constructor_AST;  			if ((null != constructor_AST) && (null != constructor_AST.getFirstChild ()))  				currentAST.child = constructor_AST.getFirstChild ();  			else  				currentAST.child = constructor_AST;  			currentAST.advanceChildToEnd ();  		}  		constructor_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else if ((LA (1) == LITERAL_new) && (LA (2) == ID)) {  		arrayConstructor ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  		constructor_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else {  		throw new NoViableAltException (LT (1)' getFilename ());  	}  }  catch (RecognitionException ex) {  	if (0 == inputState.guessing) {  		reportError (ex);  		recover (ex' tokenSet_2_);  	}  	else {  		throw ex;  	}  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,constructor,The following statement contains a magic number: if (((LA (1) == LITERAL_new) && (LA (2) == ID))) {  	int _m90 = mark ();  	synPredMatched90 = true;  	inputState.guessing++;  	try {  		{  			match (LITERAL_new);  			qualifiedId ();  			match (LPAREN);  		}  	}  	catch (RecognitionException) {  		synPredMatched90 = false;  	}  	rewind (_m90);  	inputState.guessing--;  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,constructor,The following statement contains a magic number: if (synPredMatched90) {  	match (LITERAL_new);  	qualifiedId ();  	if (0 == inputState.guessing) {  		type_AST = (Spring.Expressions.SpringAST)returnAST;  	}  	ctorArgs ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	if (0 == inputState.guessing) {  		constructor_AST = (Spring.Expressions.SpringAST)currentAST.root;  		constructor_AST = (Spring.Expressions.SpringAST)astFactory.make ((AST)(Spring.Expressions.SpringAST)astFactory.create (EXPR' type_AST.getText ()' "Spring.Expressions.ConstructorNode")' (AST)constructor_AST);  		currentAST.root = constructor_AST;  		if ((null != constructor_AST) && (null != constructor_AST.getFirstChild ()))  			currentAST.child = constructor_AST.getFirstChild ();  		else  			currentAST.child = constructor_AST;  		currentAST.advanceChildToEnd ();  	}  	constructor_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  else if ((LA (1) == LITERAL_new) && (LA (2) == ID)) {  	arrayConstructor ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	constructor_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,constructor,The following statement contains a magic number: if ((LA (1) == LITERAL_new) && (LA (2) == ID)) {  	arrayConstructor ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	constructor_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,namedArgument,The following statement contains a magic number: try {  	// for error handling  	bool synPredMatched111 = false;  	if (((LA (1) == ID) && (LA (2) == ASSIGN))) {  		int _m111 = mark ();  		synPredMatched111 = true;  		inputState.guessing++;  		try {  			{  				match (ID);  				match (ASSIGN);  			}  		}  		catch (RecognitionException) {  			synPredMatched111 = false;  		}  		rewind (_m111);  		inputState.guessing--;  	}  	if (synPredMatched111) {  		Spring.Expressions.NamedArgumentNode tmp108_AST = null;  		tmp108_AST = (Spring.Expressions.NamedArgumentNode)astFactory.create (LT (1)' "Spring.Expressions.NamedArgumentNode");  		astFactory.makeASTRoot (ref currentAST' (AST)tmp108_AST);  		match (ID);  		match (ASSIGN);  		expression ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  		namedArgument_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else if ((tokenSet_9_.member (LA (1))) && (tokenSet_22_.member (LA (2)))) {  		argument ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  		namedArgument_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else {  		throw new NoViableAltException (LT (1)' getFilename ());  	}  }  catch (RecognitionException ex) {  	if (0 == inputState.guessing) {  		reportError (ex);  		recover (ex' tokenSet_23_);  	}  	else {  		throw ex;  	}  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,namedArgument,The following statement contains a magic number: try {  	// for error handling  	bool synPredMatched111 = false;  	if (((LA (1) == ID) && (LA (2) == ASSIGN))) {  		int _m111 = mark ();  		synPredMatched111 = true;  		inputState.guessing++;  		try {  			{  				match (ID);  				match (ASSIGN);  			}  		}  		catch (RecognitionException) {  			synPredMatched111 = false;  		}  		rewind (_m111);  		inputState.guessing--;  	}  	if (synPredMatched111) {  		Spring.Expressions.NamedArgumentNode tmp108_AST = null;  		tmp108_AST = (Spring.Expressions.NamedArgumentNode)astFactory.create (LT (1)' "Spring.Expressions.NamedArgumentNode");  		astFactory.makeASTRoot (ref currentAST' (AST)tmp108_AST);  		match (ID);  		match (ASSIGN);  		expression ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  		namedArgument_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else if ((tokenSet_9_.member (LA (1))) && (tokenSet_22_.member (LA (2)))) {  		argument ();  		if (0 == inputState.guessing) {  			astFactory.addASTChild (ref currentAST' (AST)returnAST);  		}  		namedArgument_AST = (Spring.Expressions.SpringAST)currentAST.root;  	}  	else {  		throw new NoViableAltException (LT (1)' getFilename ());  	}  }  catch (RecognitionException ex) {  	if (0 == inputState.guessing) {  		reportError (ex);  		recover (ex' tokenSet_23_);  	}  	else {  		throw ex;  	}  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,namedArgument,The following statement contains a magic number: if (((LA (1) == ID) && (LA (2) == ASSIGN))) {  	int _m111 = mark ();  	synPredMatched111 = true;  	inputState.guessing++;  	try {  		{  			match (ID);  			match (ASSIGN);  		}  	}  	catch (RecognitionException) {  		synPredMatched111 = false;  	}  	rewind (_m111);  	inputState.guessing--;  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,namedArgument,The following statement contains a magic number: if (synPredMatched111) {  	Spring.Expressions.NamedArgumentNode tmp108_AST = null;  	tmp108_AST = (Spring.Expressions.NamedArgumentNode)astFactory.create (LT (1)' "Spring.Expressions.NamedArgumentNode");  	astFactory.makeASTRoot (ref currentAST' (AST)tmp108_AST);  	match (ID);  	match (ASSIGN);  	expression ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	namedArgument_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  else if ((tokenSet_9_.member (LA (1))) && (tokenSet_22_.member (LA (2)))) {  	argument ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	namedArgument_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,namedArgument,The following statement contains a magic number: if ((tokenSet_9_.member (LA (1))) && (tokenSet_22_.member (LA (2)))) {  	argument ();  	if (0 == inputState.guessing) {  		astFactory.addASTChild (ref currentAST' (AST)returnAST);  	}  	namedArgument_AST = (Spring.Expressions.SpringAST)currentAST.root;  }  else {  	throw new NoViableAltException (LT (1)' getFilename ());  }  
Magic Number,Spring.Expressions.Parser,ExpressionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionParser.cs,initializeASTFactory,The following statement contains a magic number: factory.setMaxNodeType (71);  
Magic Number,Spring.Expressions.Processors,OrderByProcessor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Processors\OrderByProcessor.cs,Process,The following statement contains a magic number: if (arg is string) {  	IExpression expCompare = Expression.Parse ((string)arg);  	comparer = new SimpleExpressionComparer (expCompare);  }  else if (arg is IComparer) {  	comparer = (IComparer)arg;  }  else if (arg is LambdaExpressionNode) {  	LambdaExpressionNode fnCompare = (LambdaExpressionNode)arg;  	if (fnCompare.ArgumentNames.Length != 2) {  		throw new ArgumentException ("compare function must accept 2 arguments");  	}  	comparer = new LambdaComparer (fnCompare);  }  else if (arg is Delegate) {  	comparer = new DelegateComparer ((Delegate)arg);  }  
Magic Number,Spring.Expressions.Processors,OrderByProcessor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Processors\OrderByProcessor.cs,Process,The following statement contains a magic number: if (arg is IComparer) {  	comparer = (IComparer)arg;  }  else if (arg is LambdaExpressionNode) {  	LambdaExpressionNode fnCompare = (LambdaExpressionNode)arg;  	if (fnCompare.ArgumentNames.Length != 2) {  		throw new ArgumentException ("compare function must accept 2 arguments");  	}  	comparer = new LambdaComparer (fnCompare);  }  else if (arg is Delegate) {  	comparer = new DelegateComparer ((Delegate)arg);  }  
Magic Number,Spring.Expressions.Processors,OrderByProcessor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Processors\OrderByProcessor.cs,Process,The following statement contains a magic number: if (arg is LambdaExpressionNode) {  	LambdaExpressionNode fnCompare = (LambdaExpressionNode)arg;  	if (fnCompare.ArgumentNames.Length != 2) {  		throw new ArgumentException ("compare function must accept 2 arguments");  	}  	comparer = new LambdaComparer (fnCompare);  }  else if (arg is Delegate) {  	comparer = new DelegateComparer ((Delegate)arg);  }  
Magic Number,Spring.Expressions.Processors,OrderByProcessor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Processors\OrderByProcessor.cs,Process,The following statement contains a magic number: if (fnCompare.ArgumentNames.Length != 2) {  	throw new ArgumentException ("compare function must accept 2 arguments");  }  
Magic Number,Spring.Expressions.Processors,DateConversionProcessor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Processors\DateConversionProcessor.cs,Process,The following statement contains a magic number: switch (argc) {  case 1:  	return DateTime.Parse ((string)args [0]);  case 2:  	return DateTime.ParseExact ((string)args [0]' (string)args [1]' CultureInfo.InvariantCulture);  default:  	throw new ArgumentException ("date(<date> ['<format>]) expects 1 or 2 arguments");  }  
Magic Number,Spring.Globalization.Formatters,PercentFormatter,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Globalization\Formatters\PercentFormatter.cs,Parse,The following statement contains a magic number: return Double.Parse (value' NumberStyles.Currency' fi) / 100;  
Magic Number,Spring.Globalization.Localizers,ResourceSetLocalizer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Globalization\Localizers\ResourceSetLocalizer.cs,LoadResources,The following statement contains a magic number: if (messageSource is ResourceSetMessageSource) {  	for (int i = 0; i < ((ResourceSetMessageSource)messageSource).ResourceManagers.Count; i++) {  		ResourceManager rm = ((ResourceSetMessageSource)messageSource).ResourceManagers [i] as ResourceManager;  		ResourceSet invariantResources = null;  		try {  			invariantResources = rm.GetResourceSet (CultureInfo.InvariantCulture' true' true);  		}  		catch (MissingManifestResourceException mmrex) {  			// ignore but log missing ResourceSet  			log.Debug ("No ResourceSet available for invariant culture"' mmrex);  		}  		if (invariantResources != null) {  			foreach (DictionaryEntry resource in invariantResources) {  				string resourceName = (string)resource.Key;  				if (resourceName.StartsWith ("$this") && !ignoreList.Contains (resourceName)) {  					// redirect resource resolution if necessary  					object resourceValue = rm.GetObject (resourceName' culture);  					if (resourceValue is String && ((String)resourceValue).StartsWith ("$messageSource")) {  						resourceValue = messageSource.GetResourceObject (((String)resourceValue).Substring (15)' culture);  					}  					resources.Add (new Resource (Expression.ParsePrimary (resourceName.Substring (6))' resourceValue));  				}  			}  		}  	}  }  
Magic Number,Spring.Globalization.Localizers,ResourceSetLocalizer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Globalization\Localizers\ResourceSetLocalizer.cs,LoadResources,The following statement contains a magic number: if (messageSource is ResourceSetMessageSource) {  	for (int i = 0; i < ((ResourceSetMessageSource)messageSource).ResourceManagers.Count; i++) {  		ResourceManager rm = ((ResourceSetMessageSource)messageSource).ResourceManagers [i] as ResourceManager;  		ResourceSet invariantResources = null;  		try {  			invariantResources = rm.GetResourceSet (CultureInfo.InvariantCulture' true' true);  		}  		catch (MissingManifestResourceException mmrex) {  			// ignore but log missing ResourceSet  			log.Debug ("No ResourceSet available for invariant culture"' mmrex);  		}  		if (invariantResources != null) {  			foreach (DictionaryEntry resource in invariantResources) {  				string resourceName = (string)resource.Key;  				if (resourceName.StartsWith ("$this") && !ignoreList.Contains (resourceName)) {  					// redirect resource resolution if necessary  					object resourceValue = rm.GetObject (resourceName' culture);  					if (resourceValue is String && ((String)resourceValue).StartsWith ("$messageSource")) {  						resourceValue = messageSource.GetResourceObject (((String)resourceValue).Substring (15)' culture);  					}  					resources.Add (new Resource (Expression.ParsePrimary (resourceName.Substring (6))' resourceValue));  				}  			}  		}  	}  }  
Magic Number,Spring.Globalization.Localizers,ResourceSetLocalizer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Globalization\Localizers\ResourceSetLocalizer.cs,LoadResources,The following statement contains a magic number: for (int i = 0; i < ((ResourceSetMessageSource)messageSource).ResourceManagers.Count; i++) {  	ResourceManager rm = ((ResourceSetMessageSource)messageSource).ResourceManagers [i] as ResourceManager;  	ResourceSet invariantResources = null;  	try {  		invariantResources = rm.GetResourceSet (CultureInfo.InvariantCulture' true' true);  	}  	catch (MissingManifestResourceException mmrex) {  		// ignore but log missing ResourceSet  		log.Debug ("No ResourceSet available for invariant culture"' mmrex);  	}  	if (invariantResources != null) {  		foreach (DictionaryEntry resource in invariantResources) {  			string resourceName = (string)resource.Key;  			if (resourceName.StartsWith ("$this") && !ignoreList.Contains (resourceName)) {  				// redirect resource resolution if necessary  				object resourceValue = rm.GetObject (resourceName' culture);  				if (resourceValue is String && ((String)resourceValue).StartsWith ("$messageSource")) {  					resourceValue = messageSource.GetResourceObject (((String)resourceValue).Substring (15)' culture);  				}  				resources.Add (new Resource (Expression.ParsePrimary (resourceName.Substring (6))' resourceValue));  			}  		}  	}  }  
Magic Number,Spring.Globalization.Localizers,ResourceSetLocalizer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Globalization\Localizers\ResourceSetLocalizer.cs,LoadResources,The following statement contains a magic number: for (int i = 0; i < ((ResourceSetMessageSource)messageSource).ResourceManagers.Count; i++) {  	ResourceManager rm = ((ResourceSetMessageSource)messageSource).ResourceManagers [i] as ResourceManager;  	ResourceSet invariantResources = null;  	try {  		invariantResources = rm.GetResourceSet (CultureInfo.InvariantCulture' true' true);  	}  	catch (MissingManifestResourceException mmrex) {  		// ignore but log missing ResourceSet  		log.Debug ("No ResourceSet available for invariant culture"' mmrex);  	}  	if (invariantResources != null) {  		foreach (DictionaryEntry resource in invariantResources) {  			string resourceName = (string)resource.Key;  			if (resourceName.StartsWith ("$this") && !ignoreList.Contains (resourceName)) {  				// redirect resource resolution if necessary  				object resourceValue = rm.GetObject (resourceName' culture);  				if (resourceValue is String && ((String)resourceValue).StartsWith ("$messageSource")) {  					resourceValue = messageSource.GetResourceObject (((String)resourceValue).Substring (15)' culture);  				}  				resources.Add (new Resource (Expression.ParsePrimary (resourceName.Substring (6))' resourceValue));  			}  		}  	}  }  
Magic Number,Spring.Globalization.Localizers,ResourceSetLocalizer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Globalization\Localizers\ResourceSetLocalizer.cs,LoadResources,The following statement contains a magic number: if (invariantResources != null) {  	foreach (DictionaryEntry resource in invariantResources) {  		string resourceName = (string)resource.Key;  		if (resourceName.StartsWith ("$this") && !ignoreList.Contains (resourceName)) {  			// redirect resource resolution if necessary  			object resourceValue = rm.GetObject (resourceName' culture);  			if (resourceValue is String && ((String)resourceValue).StartsWith ("$messageSource")) {  				resourceValue = messageSource.GetResourceObject (((String)resourceValue).Substring (15)' culture);  			}  			resources.Add (new Resource (Expression.ParsePrimary (resourceName.Substring (6))' resourceValue));  		}  	}  }  
Magic Number,Spring.Globalization.Localizers,ResourceSetLocalizer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Globalization\Localizers\ResourceSetLocalizer.cs,LoadResources,The following statement contains a magic number: if (invariantResources != null) {  	foreach (DictionaryEntry resource in invariantResources) {  		string resourceName = (string)resource.Key;  		if (resourceName.StartsWith ("$this") && !ignoreList.Contains (resourceName)) {  			// redirect resource resolution if necessary  			object resourceValue = rm.GetObject (resourceName' culture);  			if (resourceValue is String && ((String)resourceValue).StartsWith ("$messageSource")) {  				resourceValue = messageSource.GetResourceObject (((String)resourceValue).Substring (15)' culture);  			}  			resources.Add (new Resource (Expression.ParsePrimary (resourceName.Substring (6))' resourceValue));  		}  	}  }  
Magic Number,Spring.Globalization.Localizers,ResourceSetLocalizer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Globalization\Localizers\ResourceSetLocalizer.cs,LoadResources,The following statement contains a magic number: foreach (DictionaryEntry resource in invariantResources) {  	string resourceName = (string)resource.Key;  	if (resourceName.StartsWith ("$this") && !ignoreList.Contains (resourceName)) {  		// redirect resource resolution if necessary  		object resourceValue = rm.GetObject (resourceName' culture);  		if (resourceValue is String && ((String)resourceValue).StartsWith ("$messageSource")) {  			resourceValue = messageSource.GetResourceObject (((String)resourceValue).Substring (15)' culture);  		}  		resources.Add (new Resource (Expression.ParsePrimary (resourceName.Substring (6))' resourceValue));  	}  }  
Magic Number,Spring.Globalization.Localizers,ResourceSetLocalizer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Globalization\Localizers\ResourceSetLocalizer.cs,LoadResources,The following statement contains a magic number: foreach (DictionaryEntry resource in invariantResources) {  	string resourceName = (string)resource.Key;  	if (resourceName.StartsWith ("$this") && !ignoreList.Contains (resourceName)) {  		// redirect resource resolution if necessary  		object resourceValue = rm.GetObject (resourceName' culture);  		if (resourceValue is String && ((String)resourceValue).StartsWith ("$messageSource")) {  			resourceValue = messageSource.GetResourceObject (((String)resourceValue).Substring (15)' culture);  		}  		resources.Add (new Resource (Expression.ParsePrimary (resourceName.Substring (6))' resourceValue));  	}  }  
Magic Number,Spring.Globalization.Localizers,ResourceSetLocalizer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Globalization\Localizers\ResourceSetLocalizer.cs,LoadResources,The following statement contains a magic number: if (resourceName.StartsWith ("$this") && !ignoreList.Contains (resourceName)) {  	// redirect resource resolution if necessary  	object resourceValue = rm.GetObject (resourceName' culture);  	if (resourceValue is String && ((String)resourceValue).StartsWith ("$messageSource")) {  		resourceValue = messageSource.GetResourceObject (((String)resourceValue).Substring (15)' culture);  	}  	resources.Add (new Resource (Expression.ParsePrimary (resourceName.Substring (6))' resourceValue));  }  
Magic Number,Spring.Globalization.Localizers,ResourceSetLocalizer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Globalization\Localizers\ResourceSetLocalizer.cs,LoadResources,The following statement contains a magic number: if (resourceName.StartsWith ("$this") && !ignoreList.Contains (resourceName)) {  	// redirect resource resolution if necessary  	object resourceValue = rm.GetObject (resourceName' culture);  	if (resourceValue is String && ((String)resourceValue).StartsWith ("$messageSource")) {  		resourceValue = messageSource.GetResourceObject (((String)resourceValue).Substring (15)' culture);  	}  	resources.Add (new Resource (Expression.ParsePrimary (resourceName.Substring (6))' resourceValue));  }  
Magic Number,Spring.Globalization.Localizers,ResourceSetLocalizer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Globalization\Localizers\ResourceSetLocalizer.cs,LoadResources,The following statement contains a magic number: if (resourceValue is String && ((String)resourceValue).StartsWith ("$messageSource")) {  	resourceValue = messageSource.GetResourceObject (((String)resourceValue).Substring (15)' culture);  }  
Magic Number,Spring.Globalization.Localizers,ResourceSetLocalizer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Globalization\Localizers\ResourceSetLocalizer.cs,LoadResources,The following statement contains a magic number: resourceValue = messageSource.GetResourceObject (((String)resourceValue).Substring (15)' culture);  
Magic Number,Spring.Globalization.Localizers,ResourceSetLocalizer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Globalization\Localizers\ResourceSetLocalizer.cs,LoadResources,The following statement contains a magic number: resources.Add (new Resource (Expression.ParsePrimary (resourceName.Substring (6))' resourceValue));  
Magic Number,Spring.Objects.Factory.Config,DictionaryVariableSource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\DictionaryVariableSource.cs,DictionaryVariableSource,The following statement contains a magic number: if (args != null) {  	for (int i = 0; i < args.Length; i += 2) {  		Add (args [i]' args [i + 1]);  	}  }  
Magic Number,Spring.Objects.Factory.Config,DictionaryVariableSource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\DictionaryVariableSource.cs,DictionaryVariableSource,The following statement contains a magic number: for (int i = 0; i < args.Length; i += 2) {  	Add (args [i]' args [i + 1]);  }  
Magic Number,Spring.Objects.Factory.Config,DictionaryVariableSource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\DictionaryVariableSource.cs,DictionaryVariableSource,The following statement contains a magic number: i += 2
Magic Number,Spring.Objects.Factory.Config,ManagedDictionary,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Config\ManagedDictionary.cs,Resolve,The following statement contains a magic number: if ((keyType == null) && (valueType == null)) {  	dictionary = new HybridDictionary ();  }  else {  	Type type = typeof(Dictionary<' >);  	Type[] genericArgs = new Type[2] {  		(keyType == null) ? typeof(object) : keyType'  		(valueType == null) ? typeof(object) : valueType  	};  	type = type.MakeGenericType (genericArgs);  	dictionary = (IDictionary)ObjectUtils.InstantiateType (type);  }  
Magic Number,Spring.Objects.Factory.Support,AutowireUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AutowireUtils.cs,GetTypeDifferenceWeight,The following statement contains a magic number: for (int i = 0; i < paramTypes.Length; i++) {  	if (!ObjectUtils.IsAssignable (paramTypes [i]' args [i])) {  		return Int32.MaxValue;  	}  	if (args [i] != null) {  		Type paramType = paramTypes [i];  		Type superType = args [i].GetType ().BaseType;  		while (superType != null) {  			if (paramType.Equals (superType)) {  				result = result + 2;  				superType = null;  			}  			if (paramType.IsAssignableFrom (superType)) {  				result = result + 2;  				superType = superType.BaseType;  			}  			else {  				superType = null;  			}  		}  		if (paramType.IsInterface) {  			result = result + 1;  		}  	}  }  
Magic Number,Spring.Objects.Factory.Support,AutowireUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AutowireUtils.cs,GetTypeDifferenceWeight,The following statement contains a magic number: for (int i = 0; i < paramTypes.Length; i++) {  	if (!ObjectUtils.IsAssignable (paramTypes [i]' args [i])) {  		return Int32.MaxValue;  	}  	if (args [i] != null) {  		Type paramType = paramTypes [i];  		Type superType = args [i].GetType ().BaseType;  		while (superType != null) {  			if (paramType.Equals (superType)) {  				result = result + 2;  				superType = null;  			}  			if (paramType.IsAssignableFrom (superType)) {  				result = result + 2;  				superType = superType.BaseType;  			}  			else {  				superType = null;  			}  		}  		if (paramType.IsInterface) {  			result = result + 1;  		}  	}  }  
Magic Number,Spring.Objects.Factory.Support,AutowireUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AutowireUtils.cs,GetTypeDifferenceWeight,The following statement contains a magic number: if (args [i] != null) {  	Type paramType = paramTypes [i];  	Type superType = args [i].GetType ().BaseType;  	while (superType != null) {  		if (paramType.Equals (superType)) {  			result = result + 2;  			superType = null;  		}  		if (paramType.IsAssignableFrom (superType)) {  			result = result + 2;  			superType = superType.BaseType;  		}  		else {  			superType = null;  		}  	}  	if (paramType.IsInterface) {  		result = result + 1;  	}  }  
Magic Number,Spring.Objects.Factory.Support,AutowireUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AutowireUtils.cs,GetTypeDifferenceWeight,The following statement contains a magic number: if (args [i] != null) {  	Type paramType = paramTypes [i];  	Type superType = args [i].GetType ().BaseType;  	while (superType != null) {  		if (paramType.Equals (superType)) {  			result = result + 2;  			superType = null;  		}  		if (paramType.IsAssignableFrom (superType)) {  			result = result + 2;  			superType = superType.BaseType;  		}  		else {  			superType = null;  		}  	}  	if (paramType.IsInterface) {  		result = result + 1;  	}  }  
Magic Number,Spring.Objects.Factory.Support,AutowireUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AutowireUtils.cs,GetTypeDifferenceWeight,The following statement contains a magic number: while (superType != null) {  	if (paramType.Equals (superType)) {  		result = result + 2;  		superType = null;  	}  	if (paramType.IsAssignableFrom (superType)) {  		result = result + 2;  		superType = superType.BaseType;  	}  	else {  		superType = null;  	}  }  
Magic Number,Spring.Objects.Factory.Support,AutowireUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AutowireUtils.cs,GetTypeDifferenceWeight,The following statement contains a magic number: while (superType != null) {  	if (paramType.Equals (superType)) {  		result = result + 2;  		superType = null;  	}  	if (paramType.IsAssignableFrom (superType)) {  		result = result + 2;  		superType = superType.BaseType;  	}  	else {  		superType = null;  	}  }  
Magic Number,Spring.Objects.Factory.Support,AutowireUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AutowireUtils.cs,GetTypeDifferenceWeight,The following statement contains a magic number: if (paramType.Equals (superType)) {  	result = result + 2;  	superType = null;  }  
Magic Number,Spring.Objects.Factory.Support,AutowireUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AutowireUtils.cs,GetTypeDifferenceWeight,The following statement contains a magic number: result = result + 2;  
Magic Number,Spring.Objects.Factory.Support,AutowireUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AutowireUtils.cs,GetTypeDifferenceWeight,The following statement contains a magic number: if (paramType.IsAssignableFrom (superType)) {  	result = result + 2;  	superType = superType.BaseType;  }  else {  	superType = null;  }  
Magic Number,Spring.Objects.Factory.Support,AutowireUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Support\AutowireUtils.cs,GetTypeDifferenceWeight,The following statement contains a magic number: result = result + 2;  
Magic Number,Spring.Objects,PropertyValue,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\PropertyValue.cs,GetHashCode,The following statement contains a magic number: return propertyName.GetHashCode () * 29 + (propertyValue != null ? propertyValue.GetHashCode () : 0);  
Magic Number,Spring.Objects.Support,MethodInvoker,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Support\MethodInvoker.cs,PrepareArguments,The following statement contains a magic number: if (NamedArguments.Count > 0) {  	// lets slot in all of the named arguments first...  	ParameterInfo[] parameters = _methodObject.GetParameters ();  	// lets figure out the index og each of the method parameters...  	IDictionary argumentNamesToIndexes = new Hashtable ();  	for (int i = 0; i < parameters.Length; ++i) {  		ParameterInfo parameter = parameters [i];  		argumentNamesToIndexes [parameter.Name.ToLower (CultureInfo.InvariantCulture)] = i;  	}  	int THE_ARGUMENT_IS_PREPARED = -12;  	foreach (DictionaryEntry namedArgument in NamedArguments) {  		string argumentName = ((string)namedArgument.Key).ToLower (CultureInfo.InvariantCulture);  		object argumentValue = namedArgument.Value;  		if (!argumentNamesToIndexes.Contains (argumentName)) {  			// whoa (Nelly); the named argument does not exist on the method...  			throw new ArgumentException (string.Format (CultureInfo.InvariantCulture' "The named argument '{0}' could not be found on the '{1}' method of class [{2}]."' argumentName' _methodObject.Name' _methodObject.DeclaringType.FullName));  		}  		// look up the index of where in the prepared args array we're gonna stick the named argument value  		int namedArgumentsIndex = (int)argumentNamesToIndexes [argumentName];  		PreparedArguments [namedArgumentsIndex] = argumentValue;  		// we've prepped this index position' so mark it as so...  		argumentNamesToIndexes [argumentName] = THE_ARGUMENT_IS_PREPARED;  	}  	// and then fill in any remaining blanks with the plain vanilla arguments...  	int plainVanillaIndex = 0;  	int[] sortedIndexes = (int[])new ArrayList (argumentNamesToIndexes.Values).ToArray (typeof(int));  	Array.Sort (sortedIndexes);  	foreach (int argumentIndex in sortedIndexes) {  		// have we previously prepped a named argument at this index position?  		if (argumentIndex == THE_ARGUMENT_IS_PREPARED) {  			continue;  		}  		// lets stick a plain vanilla argument in at this index position (in the order that they have been supplied)...  		PreparedArguments [argumentIndex] = Arguments [plainVanillaIndex++];  	}  }  else {  	PreparedArguments = Arguments;  }  
Magic Number,Spring.Objects.Support,MutableSortDefinition,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Support\MutableSortDefinition.cs,GetHashCode,The following statement contains a magic number: result = 29 * result + (this.IgnoreCase ? 1 : 0);  
Magic Number,Spring.Objects.Support,MutableSortDefinition,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Support\MutableSortDefinition.cs,GetHashCode,The following statement contains a magic number: result = 29 * result + (this.Ascending ? 1 : 0);  
Magic Number,Spring.Reflection.Dynamic,DynamicReflectionManager,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Reflection\Dynamic\DynamicReflectionManager.cs,EmitPropertySetter,The following statement contains a magic number: if (propertyInfo.CanWrite && !(propertyInfo.DeclaringType.IsValueType && !method.IsStatic)) {  	// Note: last arg is property value!  	// property set method signature:  	// void set_MyOtherProperty( [indexArg1' indexArg2' ...]' string value)  	const int paramsArrayPosition = 2;  	IDictionary outArgs = new Hashtable ();  	ParameterInfo[] args = propertyInfo.GetIndexParameters ();  	// get indexParameters here!  	for (int i = 0; i < args.Length; i++) {  		SetupOutputArgument (il' paramsArrayPosition' args [i]' outArgs);  	}  	// load target  	if (!method.IsStatic) {  		EmitTarget (il' method.DeclaringType' isInstanceMethod);  	}  	// load indexer arguments  	for (int i = 0; i < args.Length; i++) {  		SetupMethodArgument (il' paramsArrayPosition' args [i]' outArgs);  	}  	// load value  	il.Emit (OpCodes.Ldarg_1);  	if (propertyInfo.PropertyType.IsValueType) {  		EmitUnbox (il' propertyInfo.PropertyType);  	}  	else {  		il.Emit (OpCodes.Castclass' propertyInfo.PropertyType);  	}  	// call setter  	EmitCall (il' method);  	for (int i = 0; i < args.Length; i++) {  		ProcessOutputArgument (il' paramsArrayPosition' args [i]' outArgs);  	}  	il.Emit (OpCodes.Ret);  }  else {  	EmitThrowInvalidOperationException (il' string.Format ("Cannot write to read-only property '{0}.{1}'"' propertyInfo.DeclaringType.FullName' propertyInfo.Name));  }  
Magic Number,Spring.Threading,Utils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Threading\Utils.cs,ToTimeMillis,The following statement contains a magic number: return (date.Ticks - 621355968000000000) / 10000;  
Magic Number,Spring.Threading,Utils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Threading\Utils.cs,ToTimeMillis,The following statement contains a magic number: return (date.Ticks - 621355968000000000) / 10000;  
Magic Number,Spring.Threading,Utils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Threading\Utils.cs,DeltaTimeMillis,The following statement contains a magic number: return (one.Ticks - another.Ticks) / 10000;  
Magic Number,Spring.Threading,Utils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Threading\Utils.cs,CurrentNanoSeconds,The following statement contains a magic number: return (DateTime.Now.Ticks - 621355968000000000) / 10000 * 1000000;  
Magic Number,Spring.Threading,Utils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Threading\Utils.cs,CurrentNanoSeconds,The following statement contains a magic number: return (DateTime.Now.Ticks - 621355968000000000) / 10000 * 1000000;  
Magic Number,Spring.Threading,Utils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Threading\Utils.cs,CurrentNanoSeconds,The following statement contains a magic number: return (DateTime.Now.Ticks - 621355968000000000) / 10000 * 1000000;  
Magic Number,Spring.Threading,Utils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Threading\Utils.cs,TimeSpanNanoSeconds,The following statement contains a magic number: return (timeSpan.Ticks - 621355968000000000) / 10000 * 1000000;  
Magic Number,Spring.Threading,Utils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Threading\Utils.cs,TimeSpanNanoSeconds,The following statement contains a magic number: return (timeSpan.Ticks - 621355968000000000) / 10000 * 1000000;  
Magic Number,Spring.Threading,Utils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Threading\Utils.cs,TimeSpanNanoSeconds,The following statement contains a magic number: return (timeSpan.Ticks - 621355968000000000) / 10000 * 1000000;  
Magic Number,Spring.Util,ArrayUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ArrayUtils.cs,GetHashCode,The following statement contains a magic number: if (array != null) {  	for (int i = 0; i < array.Length; i++) {  		object el = array.GetValue (i);  		if (el != null) {  			if (el is Array) {  				hashCode += 17 * GetHashCode (el as Array);  			}  			else {  				hashCode += 13 * el.GetHashCode ();  			}  		}  	}  }  
Magic Number,Spring.Util,ArrayUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ArrayUtils.cs,GetHashCode,The following statement contains a magic number: if (array != null) {  	for (int i = 0; i < array.Length; i++) {  		object el = array.GetValue (i);  		if (el != null) {  			if (el is Array) {  				hashCode += 17 * GetHashCode (el as Array);  			}  			else {  				hashCode += 13 * el.GetHashCode ();  			}  		}  	}  }  
Magic Number,Spring.Util,ArrayUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ArrayUtils.cs,GetHashCode,The following statement contains a magic number: for (int i = 0; i < array.Length; i++) {  	object el = array.GetValue (i);  	if (el != null) {  		if (el is Array) {  			hashCode += 17 * GetHashCode (el as Array);  		}  		else {  			hashCode += 13 * el.GetHashCode ();  		}  	}  }  
Magic Number,Spring.Util,ArrayUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ArrayUtils.cs,GetHashCode,The following statement contains a magic number: for (int i = 0; i < array.Length; i++) {  	object el = array.GetValue (i);  	if (el != null) {  		if (el is Array) {  			hashCode += 17 * GetHashCode (el as Array);  		}  		else {  			hashCode += 13 * el.GetHashCode ();  		}  	}  }  
Magic Number,Spring.Util,ArrayUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ArrayUtils.cs,GetHashCode,The following statement contains a magic number: if (el != null) {  	if (el is Array) {  		hashCode += 17 * GetHashCode (el as Array);  	}  	else {  		hashCode += 13 * el.GetHashCode ();  	}  }  
Magic Number,Spring.Util,ArrayUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ArrayUtils.cs,GetHashCode,The following statement contains a magic number: if (el != null) {  	if (el is Array) {  		hashCode += 17 * GetHashCode (el as Array);  	}  	else {  		hashCode += 13 * el.GetHashCode ();  	}  }  
Magic Number,Spring.Util,ArrayUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ArrayUtils.cs,GetHashCode,The following statement contains a magic number: if (el is Array) {  	hashCode += 17 * GetHashCode (el as Array);  }  else {  	hashCode += 13 * el.GetHashCode ();  }  
Magic Number,Spring.Util,ArrayUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ArrayUtils.cs,GetHashCode,The following statement contains a magic number: if (el is Array) {  	hashCode += 17 * GetHashCode (el as Array);  }  else {  	hashCode += 13 * el.GetHashCode ();  }  
Magic Number,Spring.Util,ArrayUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ArrayUtils.cs,GetHashCode,The following statement contains a magic number: hashCode += 17 * GetHashCode (el as Array);  
Magic Number,Spring.Util,ArrayUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\ArrayUtils.cs,GetHashCode,The following statement contains a magic number: hashCode += 13 * el.GetHashCode ();  
Magic Number,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,Split,The following statement contains a magic number: AssertUtils.IsTrue (quoteChars.Length % 2 == 0' "the number of quote characters must be even");  
Magic Number,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,MakeDelimiterPositionList,The following statement contains a magic number: for (int ixCurChar = 0; ixCurChar < s.Length; ixCurChar++) {  	char curChar = s [ixCurChar];  	for (int ixCurDelim = 0; ixCurDelim < delimiters.Length; ixCurDelim++) {  		if (delimiters [ixCurDelim] == curChar) {  			if (quoteNestingDepth == 0) {  				delimiterPositions [count] = ixCurChar;  				count++;  				break;  			}  		}  		if (quoteNestingDepth == 0) {  			// check' if we're facing an opening char  			for (int ixCurQuoteChar = 0; ixCurQuoteChar < quoteChars.Length; ixCurQuoteChar += 2) {  				if (quoteChars [ixCurQuoteChar] == curChar) {  					quoteNestingDepth++;  					expectedQuoteOpenChar = curChar;  					expectedQuoteCloseChar = quoteChars [ixCurQuoteChar + 1];  					break;  				}  			}  		}  		else {  			// check if we're facing an expected open or close char  			if (curChar == expectedQuoteOpenChar) {  				quoteNestingDepth++;  			}  			else if (curChar == expectedQuoteCloseChar) {  				quoteNestingDepth--;  			}  		}  	}  }  
Magic Number,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,MakeDelimiterPositionList,The following statement contains a magic number: for (int ixCurDelim = 0; ixCurDelim < delimiters.Length; ixCurDelim++) {  	if (delimiters [ixCurDelim] == curChar) {  		if (quoteNestingDepth == 0) {  			delimiterPositions [count] = ixCurChar;  			count++;  			break;  		}  	}  	if (quoteNestingDepth == 0) {  		// check' if we're facing an opening char  		for (int ixCurQuoteChar = 0; ixCurQuoteChar < quoteChars.Length; ixCurQuoteChar += 2) {  			if (quoteChars [ixCurQuoteChar] == curChar) {  				quoteNestingDepth++;  				expectedQuoteOpenChar = curChar;  				expectedQuoteCloseChar = quoteChars [ixCurQuoteChar + 1];  				break;  			}  		}  	}  	else {  		// check if we're facing an expected open or close char  		if (curChar == expectedQuoteOpenChar) {  			quoteNestingDepth++;  		}  		else if (curChar == expectedQuoteCloseChar) {  			quoteNestingDepth--;  		}  	}  }  
Magic Number,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,MakeDelimiterPositionList,The following statement contains a magic number: if (quoteNestingDepth == 0) {  	// check' if we're facing an opening char  	for (int ixCurQuoteChar = 0; ixCurQuoteChar < quoteChars.Length; ixCurQuoteChar += 2) {  		if (quoteChars [ixCurQuoteChar] == curChar) {  			quoteNestingDepth++;  			expectedQuoteOpenChar = curChar;  			expectedQuoteCloseChar = quoteChars [ixCurQuoteChar + 1];  			break;  		}  	}  }  else {  	// check if we're facing an expected open or close char  	if (curChar == expectedQuoteOpenChar) {  		quoteNestingDepth++;  	}  	else if (curChar == expectedQuoteCloseChar) {  		quoteNestingDepth--;  	}  }  
Magic Number,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,MakeDelimiterPositionList,The following statement contains a magic number: for (int ixCurQuoteChar = 0; ixCurQuoteChar < quoteChars.Length; ixCurQuoteChar += 2) {  	if (quoteChars [ixCurQuoteChar] == curChar) {  		quoteNestingDepth++;  		expectedQuoteOpenChar = curChar;  		expectedQuoteCloseChar = quoteChars [ixCurQuoteChar + 1];  		break;  	}  }  
Magic Number,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,MakeDelimiterPositionList,The following statement contains a magic number: ixCurQuoteChar += 2
Magic Number,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,StripFirstAndLastCharacter,The following statement contains a magic number: if (text != null && text.Length > 2) {  	return text.Substring (1' text.Length - 2);  }  else {  	return String.Empty;  }  
Magic Number,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,StripFirstAndLastCharacter,The following statement contains a magic number: if (text != null && text.Length > 2) {  	return text.Substring (1' text.Length - 2);  }  else {  	return String.Empty;  }  
Magic Number,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,StripFirstAndLastCharacter,The following statement contains a magic number: return text.Substring (1' text.Length - 2);  
Magic Number,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,GetAntExpressions,The following statement contains a magic number: if (StringUtils.HasText (text)) {  	int start = text.IndexOf (AntExpressionPrefix);  	while (start >= 0) {  		int end = text.IndexOf (AntExpressionSuffix' start + 2);  		if (end == -1) {  			// terminator character not found' so let's quit...  			start = -1;  		}  		else {  			string exp = text.Substring (start + 2' end - start - 2);  			if (StringUtils.IsNullOrEmpty (exp)) {  				throw new FormatException (string.Format ("Empty {0}{1} value found in text : '{2}'."' AntExpressionPrefix' AntExpressionSuffix' text));  			}  			if (expressions.IndexOf (exp) < 0) {  				expressions.Add (exp);  			}  			start = text.IndexOf (AntExpressionPrefix' end);  		}  	}  }  
Magic Number,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,GetAntExpressions,The following statement contains a magic number: if (StringUtils.HasText (text)) {  	int start = text.IndexOf (AntExpressionPrefix);  	while (start >= 0) {  		int end = text.IndexOf (AntExpressionSuffix' start + 2);  		if (end == -1) {  			// terminator character not found' so let's quit...  			start = -1;  		}  		else {  			string exp = text.Substring (start + 2' end - start - 2);  			if (StringUtils.IsNullOrEmpty (exp)) {  				throw new FormatException (string.Format ("Empty {0}{1} value found in text : '{2}'."' AntExpressionPrefix' AntExpressionSuffix' text));  			}  			if (expressions.IndexOf (exp) < 0) {  				expressions.Add (exp);  			}  			start = text.IndexOf (AntExpressionPrefix' end);  		}  	}  }  
Magic Number,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,GetAntExpressions,The following statement contains a magic number: if (StringUtils.HasText (text)) {  	int start = text.IndexOf (AntExpressionPrefix);  	while (start >= 0) {  		int end = text.IndexOf (AntExpressionSuffix' start + 2);  		if (end == -1) {  			// terminator character not found' so let's quit...  			start = -1;  		}  		else {  			string exp = text.Substring (start + 2' end - start - 2);  			if (StringUtils.IsNullOrEmpty (exp)) {  				throw new FormatException (string.Format ("Empty {0}{1} value found in text : '{2}'."' AntExpressionPrefix' AntExpressionSuffix' text));  			}  			if (expressions.IndexOf (exp) < 0) {  				expressions.Add (exp);  			}  			start = text.IndexOf (AntExpressionPrefix' end);  		}  	}  }  
Magic Number,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,GetAntExpressions,The following statement contains a magic number: while (start >= 0) {  	int end = text.IndexOf (AntExpressionSuffix' start + 2);  	if (end == -1) {  		// terminator character not found' so let's quit...  		start = -1;  	}  	else {  		string exp = text.Substring (start + 2' end - start - 2);  		if (StringUtils.IsNullOrEmpty (exp)) {  			throw new FormatException (string.Format ("Empty {0}{1} value found in text : '{2}'."' AntExpressionPrefix' AntExpressionSuffix' text));  		}  		if (expressions.IndexOf (exp) < 0) {  			expressions.Add (exp);  		}  		start = text.IndexOf (AntExpressionPrefix' end);  	}  }  
Magic Number,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,GetAntExpressions,The following statement contains a magic number: while (start >= 0) {  	int end = text.IndexOf (AntExpressionSuffix' start + 2);  	if (end == -1) {  		// terminator character not found' so let's quit...  		start = -1;  	}  	else {  		string exp = text.Substring (start + 2' end - start - 2);  		if (StringUtils.IsNullOrEmpty (exp)) {  			throw new FormatException (string.Format ("Empty {0}{1} value found in text : '{2}'."' AntExpressionPrefix' AntExpressionSuffix' text));  		}  		if (expressions.IndexOf (exp) < 0) {  			expressions.Add (exp);  		}  		start = text.IndexOf (AntExpressionPrefix' end);  	}  }  
Magic Number,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,GetAntExpressions,The following statement contains a magic number: while (start >= 0) {  	int end = text.IndexOf (AntExpressionSuffix' start + 2);  	if (end == -1) {  		// terminator character not found' so let's quit...  		start = -1;  	}  	else {  		string exp = text.Substring (start + 2' end - start - 2);  		if (StringUtils.IsNullOrEmpty (exp)) {  			throw new FormatException (string.Format ("Empty {0}{1} value found in text : '{2}'."' AntExpressionPrefix' AntExpressionSuffix' text));  		}  		if (expressions.IndexOf (exp) < 0) {  			expressions.Add (exp);  		}  		start = text.IndexOf (AntExpressionPrefix' end);  	}  }  
Magic Number,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,GetAntExpressions,The following statement contains a magic number: if (end == -1) {  	// terminator character not found' so let's quit...  	start = -1;  }  else {  	string exp = text.Substring (start + 2' end - start - 2);  	if (StringUtils.IsNullOrEmpty (exp)) {  		throw new FormatException (string.Format ("Empty {0}{1} value found in text : '{2}'."' AntExpressionPrefix' AntExpressionSuffix' text));  	}  	if (expressions.IndexOf (exp) < 0) {  		expressions.Add (exp);  	}  	start = text.IndexOf (AntExpressionPrefix' end);  }  
Magic Number,Spring.Util,StringUtils,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Util\StringUtils.cs,GetAntExpressions,The following statement contains a magic number: if (end == -1) {  	// terminator character not found' so let's quit...  	start = -1;  }  else {  	string exp = text.Substring (start + 2' end - start - 2);  	if (StringUtils.IsNullOrEmpty (exp)) {  		throw new FormatException (string.Format ("Empty {0}{1} value found in text : '{2}'."' AntExpressionPrefix' AntExpressionSuffix' text));  	}  	if (expressions.IndexOf (exp) < 0) {  		expressions.Add (exp);  	}  	start = text.IndexOf (AntExpressionPrefix' end);  }  
Magic Number,Spring.Validation.Validators,CreditCardValidator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\CreditCardValidator.cs,IsValid,The following statement contains a magic number: if ((card == null) || (card.Length < 13) || (card.Length > 19)) {  	return false;  }  
Magic Number,Spring.Validation.Validators,CreditCardValidator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\CreditCardValidator.cs,IsValid,The following statement contains a magic number: if ((card == null) || (card.Length < 13) || (card.Length > 19)) {  	return false;  }  
Magic Number,Spring.Validation.Validators,CreditCardValidator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\CreditCardValidator.cs,LuhnCheck,The following statement contains a magic number: for (int count = 0; count < digits; count++) {  	int digit;  	try {  		digit = Int32.Parse (cardNumber [count] + "");  	}  	catch (FormatException) {  		return false;  	}  	if (((count & 1) ^ oddOrEven) == 0) {  		// not  		digit *= 2;  		if (digit > 9) {  			digit -= 9;  		}  	}  	sum += digit;  }  
Magic Number,Spring.Validation.Validators,CreditCardValidator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\CreditCardValidator.cs,LuhnCheck,The following statement contains a magic number: for (int count = 0; count < digits; count++) {  	int digit;  	try {  		digit = Int32.Parse (cardNumber [count] + "");  	}  	catch (FormatException) {  		return false;  	}  	if (((count & 1) ^ oddOrEven) == 0) {  		// not  		digit *= 2;  		if (digit > 9) {  			digit -= 9;  		}  	}  	sum += digit;  }  
Magic Number,Spring.Validation.Validators,CreditCardValidator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\CreditCardValidator.cs,LuhnCheck,The following statement contains a magic number: for (int count = 0; count < digits; count++) {  	int digit;  	try {  		digit = Int32.Parse (cardNumber [count] + "");  	}  	catch (FormatException) {  		return false;  	}  	if (((count & 1) ^ oddOrEven) == 0) {  		// not  		digit *= 2;  		if (digit > 9) {  			digit -= 9;  		}  	}  	sum += digit;  }  
Magic Number,Spring.Validation.Validators,CreditCardValidator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\CreditCardValidator.cs,LuhnCheck,The following statement contains a magic number: if (((count & 1) ^ oddOrEven) == 0) {  	// not  	digit *= 2;  	if (digit > 9) {  		digit -= 9;  	}  }  
Magic Number,Spring.Validation.Validators,CreditCardValidator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\CreditCardValidator.cs,LuhnCheck,The following statement contains a magic number: if (((count & 1) ^ oddOrEven) == 0) {  	// not  	digit *= 2;  	if (digit > 9) {  		digit -= 9;  	}  }  
Magic Number,Spring.Validation.Validators,CreditCardValidator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\CreditCardValidator.cs,LuhnCheck,The following statement contains a magic number: if (((count & 1) ^ oddOrEven) == 0) {  	// not  	digit *= 2;  	if (digit > 9) {  		digit -= 9;  	}  }  
Magic Number,Spring.Validation.Validators,CreditCardValidator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\CreditCardValidator.cs,LuhnCheck,The following statement contains a magic number: digit *= 2;  
Magic Number,Spring.Validation.Validators,CreditCardValidator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\CreditCardValidator.cs,LuhnCheck,The following statement contains a magic number: if (digit > 9) {  	digit -= 9;  }  
Magic Number,Spring.Validation.Validators,CreditCardValidator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\CreditCardValidator.cs,LuhnCheck,The following statement contains a magic number: if (digit > 9) {  	digit -= 9;  }  
Magic Number,Spring.Validation.Validators,CreditCardValidator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\CreditCardValidator.cs,LuhnCheck,The following statement contains a magic number: digit -= 9;  
Magic Number,Spring.Validation.Validators,CreditCardValidator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\CreditCardValidator.cs,LuhnCheck,The following statement contains a magic number: return (sum == 0) ? false : (sum % 10 == 0);  
Magic Number,Spring.Validation.Validators,Visa,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\CreditCardValidator.cs,Matches,The following statement contains a magic number: return (card.Substring (0' 1).Equals (PREFIX) && (card.Length == 13 || card.Length == 16));  
Magic Number,Spring.Validation.Validators,Visa,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\CreditCardValidator.cs,Matches,The following statement contains a magic number: return (card.Substring (0' 1).Equals (PREFIX) && (card.Length == 13 || card.Length == 16));  
Magic Number,Spring.Validation.Validators,Amex,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\CreditCardValidator.cs,Matches,The following statement contains a magic number: return ((PREFIX.IndexOf (prefix2) != -1) && (card.Length == 15));  
Magic Number,Spring.Validation.Validators,Discover,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\CreditCardValidator.cs,Matches,The following statement contains a magic number: return (card.Substring (0' 4).Equals (PREFIX) && (card.Length == 16));  
Magic Number,Spring.Validation.Validators,Discover,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\CreditCardValidator.cs,Matches,The following statement contains a magic number: return (card.Substring (0' 4).Equals (PREFIX) && (card.Length == 16));  
Magic Number,Spring.Validation.Validators,Mastercard,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\CreditCardValidator.cs,Matches,The following statement contains a magic number: return ((PREFIX.IndexOf (prefix2) != -1) && (card.Length == 16));  
Magic Number,Spring.Validation.Validators,ISBNValidator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\ISBNValidator.cs,IsValid,The following statement contains a magic number: if ((code == null) || (code.Length < 10 || code.Length > 13)) {  	return false;  }  
Magic Number,Spring.Validation.Validators,ISBNValidator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\ISBNValidator.cs,IsValid,The following statement contains a magic number: if ((code == null) || (code.Length < 10 || code.Length > 13)) {  	return false;  }  
Magic Number,Spring.Validation.Validators,ISBNValidator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Validation\Validators\ISBNValidator.cs,IsValid,The following statement contains a magic number: if (code.Length == 10) {  	pattern = ISBN10_PATTERN;  }  else {  	pattern = ISBN13_PATTERN;  }  
Duplicate Code,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mID,The method contains a code clone-set at the following line numbers (starting from the method definition): ((7' 69)' (79' 141))
Duplicate Code,Spring.Expressions.Parser,ExpressionLexer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Expressions\Parser\ExpressionLexer.cs,mNUMERIC_LITERAL,The method contains a code clone-set at the following line numbers (starting from the method definition): ((46' 65)' (150' 169))
Missing Default,Spring.Objects.Factory.Xml,ObjectsNamespaceParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Core\Objects\Factory\Xml\ObjectsNamespaceParser.cs,ParseEventListenerDefinition,The following switch statement is missing a default case: switch (sourceAtt.LocalName) {  case ObjectDefinitionConstants.LocalRefAttribute:  case ObjectDefinitionConstants.ObjectRefAttribute:  	// we're wiring up to an event exposed on another managed object (instance)  	RuntimeObjectReference ror = new RuntimeObjectReference (sourceAtt.Value);  	myHandler.Source = ror;  	break;  case ObjectDefinitionConstants.TypeAttribute:  	// we're wiring up to a static event exposed on a Type (class)  	myHandler.Source = parserContext.ReaderContext.Reader.Domain == null ? (object)sourceAtt.Value : (object)TypeResolutionUtils.ResolveType (sourceAtt.Value);  	break;  }  
