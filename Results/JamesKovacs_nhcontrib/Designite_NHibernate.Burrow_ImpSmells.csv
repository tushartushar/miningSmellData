Implementation smell,Namespace,Class,File,Method,Description
Long Statement,NHibernate.Burrow.Configuration,Util,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.Burrow\src\NHibernate.Burrow\Configuration\Util.cs,CheckCanChangeCfg,The length of the statement  "		throw new ChangeConfigWhenRunningException ("Configuration Setting can only be changed on the fly when the environment is shut down"); " is 134.
Long Statement,NHibernate.Burrow,ConversationalData,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.Burrow\src\NHibernate.Burrow\ConversationalData.cs,ConversationUnvailableException,The length of the statement  "	string msg = new BurrowFramework ().CurrentConversation == null ? "ConversationalData can not be accessed outside conversation. " + "Make sure Conversation is intialized before visiting conversational data." + " It might be caused by missing <add name=\"WebUtilHTTPModule\" type=\"NHibernate.Burrow.WebUtil.WebUtilHTTPModule\" /> in the Web.Config file" : "Conversation may have changed' if you don't need to keep data after conversation changed' please use OutOfConversationSafe Mode on."; " is 490.
Long Statement,NHibernate.Burrow.Impl,TransactionImpl,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.Burrow\src\NHibernate.Burrow\Impl\TransactionImpl.cs,CheckInTransaction,The length of the statement  "		throw new Exceptions.IncorrectTransactionStatusException ("It's not in transaction. Either you haven't started it or it's already close"); " is 138.
Long Statement,NHibernate.Burrow.Impl,AbstractConversation,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.Burrow\src\NHibernate.Burrow\Impl\AbstractConversation.cs,StopSpanning,The length of the statement  "	if (spanStrategy != SpanStrategy.DoNotSpan)//I use field here because the property alwasy return  SpanStrategy.DoNotSpan when not in pool' the field is more indicative on what the strategy was set as. " is 200.
Long Statement,NHibernate.Burrow.Impl,ConversationPool,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.Burrow\src\NHibernate.Burrow\Impl\ConversationPool.cs,Clear,The length of the statement  "	for (IEnumerator<ConversationPoolItem> en = pool.Values.GetEnumerator (); en.MoveNext (); en = pool.Values.GetEnumerator ()) { " is 126.
Long Statement,NHibernate.Burrow.Impl,WorkSpace,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.Burrow\src\NHibernate.Burrow\Impl\WorkSpace.cs,Create,The length of the statement  "		AbstractConversation c = new BurrowFramework ().BurrowEnvironment.Configuration.ManualTransactionManagement ? (AbstractConversation)new ConversationWithManualTransactionImpl () : new ConversationWithManagedTransactionImpl (); " is 225.
Long Statement,NHibernate.Burrow.Impl,PersistenceUnitRepo,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.Burrow\src\NHibernate.Burrow\Impl\PersistenceUnitRepo.cs,GetOnlyPU,The length of the statement  "		throw new UnableToGetPersistenceUnitException ("Unable to get persistence unit without an entity type when there are more than one session factories."); " is 152.
Long Statement,NHibernate.Burrow.Impl,SessionAndTransactionManager,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.Burrow\src\NHibernate.Burrow\Impl\SessionAndTransactionManager.cs,CommitAndClose,The length of the statement  "		throw new GeneralException ("The session was closed by something other than the SessionManger. Do not close session directly. It should be managed by Burrow"); " is 159.
Long Statement,NHibernate.Burrow.Util,InstanceLoader,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.Burrow\src\NHibernate.Burrow\Util\InstanceLoader.cs,Load,The length of the statement  "		throw new Exceptions.PropertyNotFoundException ("The type " + t.Name + " must have either a static property named \"Instance\" or a public non-parameter constructor"); " is 167.
Empty Catch Block,NHibernate.Burrow.Impl,TransactionImpl,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.Burrow\src\NHibernate.Burrow\Impl\TransactionImpl.cs,Rollback,The method has an empty catch block.
Empty Catch Block,NHibernate.Burrow.Util,EntityLoader,C:\repos\JamesKovacs_nhcontrib\src\NHibernate.Burrow\src\NHibernate.Burrow\Util\EntityLoader.cs,GetId,The method has an empty catch block.
