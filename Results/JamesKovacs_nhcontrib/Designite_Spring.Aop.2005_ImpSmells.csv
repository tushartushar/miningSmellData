Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,InitializeAdvisorChain,Cyclomatic complexity of the method is 10
Complex Method,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,AddGlobalAdvisor,Cyclomatic complexity of the method is 11
Complex Method,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,InitializeIntroductionChain,Cyclomatic complexity of the method is 8
Complex Method,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,AddGlobalIntroduction,Cyclomatic complexity of the method is 12
Complex Method,Spring.Aop.Framework.AutoProxy,AbstractAdvisorAutoProxyCreator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\AutoProxy\AbstractAdvisorAutoProxyCreator.cs,FindAdvisorsThatCanApply,Cyclomatic complexity of the method is 10
Complex Method,Spring.Aop.Framework.AutoProxy,AbstractAutoProxyCreator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\AutoProxy\AbstractAutoProxyCreator.cs,PostProcessAfterInitialization,Cyclomatic complexity of the method is 8
Complex Method,Spring.Aop.Framework.AutoProxy,AbstractAutoProxyCreator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\AutoProxy\AbstractAutoProxyCreator.cs,PostProcessBeforeInstantiation,Cyclomatic complexity of the method is 8
Complex Method,Spring.Aop.Framework.DynamicProxy,AbstractAopProxyMethodBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\AbstractAopProxyMethodBuilder.cs,EmitLoadValueIndirect,Cyclomatic complexity of the method is 11
Complex Method,Spring.Aop.Framework.DynamicProxy,AbstractAopProxyMethodBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\AbstractAopProxyMethodBuilder.cs,EmitStoreValueIndirect,Cyclomatic complexity of the method is 10
Complex Method,Spring.Aop.Framework.DynamicProxy,BaseCompositionAopProxy,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\BaseCompositionAopProxy.cs,Equals,Cyclomatic complexity of the method is 9
Complex Method,Spring.Aspects.Cache,InvalidateCacheAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\Cache\InvalidateCacheAdvice.cs,AfterReturning,Cyclomatic complexity of the method is 9
Complex Method,Spring.Aspects.Exceptions,ExceptionHandlerAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\Exceptions\ExceptionHandlerAdvice.cs,CreateExceptionHandler,Cyclomatic complexity of the method is 15
Complex Method,Spring.Aspects.Logging,SimpleLoggingAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\Logging\SimpleLoggingAdvice.cs,IsLogEnabled,Cyclomatic complexity of the method is 28
Complex Method,Spring.Aspects.Logging,SimpleLoggingAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\Logging\SimpleLoggingAdvice.cs,WriteToLog,Cyclomatic complexity of the method is 34
Long Parameter List,Spring.Aop.Framework,DynamicMethodInvocation,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicMethodInvocation.cs,DynamicMethodInvocation,The method has 7 parameters.
Long Parameter List,Spring.Aop.Framework,AbstractMethodInvocation,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\AbstractMethodInvocation.cs,AbstractMethodInvocation,The method has 6 parameters.
Long Parameter List,Spring.Aop.Framework,ReflectiveMethodInvocation,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ReflectiveMethodInvocation.cs,ReflectiveMethodInvocation,The method has 7 parameters.
Long Parameter List,Spring.Aop.Framework.DynamicProxy,AbstractAopProxyMethodBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\AbstractAopProxyMethodBuilder.cs,AbstractAopProxyMethodBuilder,The method has 5 parameters.
Long Parameter List,Spring.Aop.Framework.DynamicProxy,AdvisedProxy,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\AdvisedProxy.cs,Invoke,The method has 7 parameters.
Long Statement,Spring.Aop.Config,ConfigObjectDefinitionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Config\ConfigObjectDefinitionParser.cs,ParseElement,The length of the statement  "	//XmlNodeList advisorNodes = element.SelectNodes("*[local-name()='advisor' and namespace-uri()='" + element.NamespaceURI + "']"); " is 129.
Long Statement,Spring.Aop.Config,ConfigObjectDefinitionParser,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Config\ConfigObjectDefinitionParser.cs,CreateAdvisorObjectDefinition,The length of the statement  "	ObjectDefinitionBuilder advisorDefinitionBuilder = parserContext.ParserHelper.CreateRootObjectDefinitionBuilder (typeof(DefaultObjectFactoryPointcutAdvisor)); " is 158.
Long Statement,Spring.Aop.Framework,DynamicMethodInvocation,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicMethodInvocation.cs,PrepareMethodInvocationForProceed,The length of the statement  "	DynamicMethodInvocation rmi = new DynamicMethodInvocation (this.proxy' this.target' this.method' this.proxyMethod' this.arguments' this.targetType' this.interceptors); " is 167.
Long Statement,Spring.Aop.Framework,AbstractMethodInvocation,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\AbstractMethodInvocation.cs,Proceed,The length of the statement  "		if (dynamicMatcher.MethodMatcher.Matches (nextInvocation.Method' nextInvocation.TargetType' nextInvocation.Arguments)) { " is 120.
Long Statement,Spring.Aop.Framework,AbstractMethodInvocation,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\AbstractMethodInvocation.cs,AssertJoinpoint,The length of the statement  "	//                throw new NotSupportedException(string.Format("Interface method '{0}.{1}()' was not handled by any interceptor and the underlying target type '{2}' does not implement this method."' method.DeclaringType.FullName' method.Name' target.GetType().FullName)); " is 272.
Long Statement,Spring.Aop.Framework,AdvisedSupport,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\AdvisedSupport.cs,RemoveIntroduction,The length of the statement  "			throw new AopConfigException ("Introduction index " + index + " is out of bounds: Only have " + _introductions.Count + " introductions."); " is 138.
Long Statement,Spring.Aop.Framework,AdvisedSupport,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\AdvisedSupport.cs,ReplaceIntroduction,The length of the statement  "			throw new AopConfigException ("Introduction index " + index + " is out of bounds:" + " there are currently " + _introductions.Count + " introductions."); " is 153.
Long Statement,Spring.Aop.Framework,AdvisedSupport,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\AdvisedSupport.cs,RemoveAdvisorInternal,The length of the statement  "		throw new AopConfigException ("Advisor index " + index + " is out of bounds: Only have " + this._advisors.Count + " advisors"); " is 127.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,GetObject,The length of the statement  "			logger.Warn ("Using non-singleton proxies with singleton targets is often undesirable. " + "Enable prototype proxies by setting the 'targetName' property."); " is 157.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,Initialize,The length of the statement  "		logger.Debug (string.Format ("Initialize: begin configure target' interceptors and introductions for {0}[{1}]"' this.GetType ().Name' this.GetHashCode ())); " is 156.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,Initialize,The length of the statement  "		logger.Debug (string.Format ("Initialize: completed configuration for {0}[{1}]: {2}"' this.GetType ().Name' this.GetHashCode ()' this.ToProxyConfigString ())); " is 159.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,InitializeAdvisorChain,The length of the statement  "	if (this.interceptorNames [this.interceptorNames.Length - 1] != null && this.interceptorNames [this.interceptorNames.Length - 1].EndsWith (GlobalInterceptorSuffix) && this.targetName == null && this.TargetSource == EmptyTargetSource.Empty) { " is 241.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,InitializeAdvisorChain,The length of the statement  "			throw new AopConfigException ("Found null interceptor name value in the InterceptorNames list; check your configuration."); " is 123.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,InitializeAdvisorChain,The length of the statement  "				throw new AopConfigException ("Can only use global advisors or interceptors in conjunction with an IListableObjectFactory."); " is 125.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,IsNamedObjectAnAdvisorOrAdvice,The length of the statement  "		return typeof(IAdvisors).IsAssignableFrom (namedObjectType) || typeof(IAdvisor).IsAssignableFrom (namedObjectType) || typeof(IAdvice).IsAssignableFrom (namedObjectType); " is 169.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,AddGlobalAdvisor,The length of the statement  "	string[] globalAspectNames = ObjectFactoryUtils.ObjectNamesForTypeIncludingAncestors (objectFactory' typeof(IAdvisors)); " is 120.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,AddGlobalAdvisor,The length of the statement  "	string[] globalAdvisorNames = ObjectFactoryUtils.ObjectNamesForTypeIncludingAncestors (objectFactory' typeof(IAdvisor)); " is 120.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,AddGlobalAdvisor,The length of the statement  "	string[] globalInterceptorNames = ObjectFactoryUtils.ObjectNamesForTypeIncludingAncestors (objectFactory' typeof(IInterceptor)); " is 128.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,InitializeIntroductionChain,The length of the statement  "			throw new AopConfigException ("Found null interceptor name value in the InterceptorNames list; check your configuration."); " is 123.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,InitializeIntroductionChain,The length of the statement  "			AddGlobalIntroduction ((IListableObjectFactory)this.objectFactory' name.Substring (0' (name.Length - GlobalInterceptorSuffix.Length))); " is 135.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,AddGlobalIntroduction,The length of the statement  "	string[] globalAspectNames = ObjectFactoryUtils.ObjectNamesForTypeIncludingAncestors (objectFactory' typeof(IAdvisors)); " is 120.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,AddGlobalIntroduction,The length of the statement  "	string[] globalAdvisorNames = ObjectFactoryUtils.ObjectNamesForTypeIncludingAncestors (objectFactory' typeof(IAdvisor)); " is 120.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,AddGlobalIntroduction,The length of the statement  "	string[] globalIntroductionNames = ObjectFactoryUtils.ObjectNamesForTypeIncludingAncestors (objectFactory' typeof(IAdvice)); " is 124.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,NamedObjectToAdvisor,The length of the statement  "		throw new AopConfigException (string.Format ("Unknown advisor type '{0}'; Can only include Advisor or Advice type beans in interceptorNames chain except for last entry'which may also be target or TargetSource"' next.GetType ().FullName)' ex); " is 242.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,CheckInterceptorNames,The length of the statement  "					logger.Debug (string.Format ("Object with name '{0}' concluding interceptor chain is not an advisor class: treating it as a target or TargetSource"' finalName)); " is 161.
Long Statement,Spring.Aop.Framework,ReflectiveMethodInvocation,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ReflectiveMethodInvocation.cs,PrepareMethodInvocationForProceed,The length of the statement  "	ReflectiveMethodInvocation rmi = new ReflectiveMethodInvocation (this.proxy' this.target' this.method' this.proxyMethod' this.arguments' this.targetType' this.interceptors); " is 173.
Long Statement,Spring.Aop.Framework.AutoProxy,InheritanceBasedAopConfigurer,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\AutoProxy\InheritanceBasedAopConfigurer.cs,IsInfrastructureType,The length of the statement  "	return typeof(IAdvisor).IsAssignableFrom (type) || typeof(IAdvice).IsAssignableFrom (type) || typeof(IAdvisors).IsAssignableFrom (type) || typeof(AbstractAutoProxyCreator).IsAssignableFrom (type) || typeof(InheritanceBasedAopConfigurer).IsAssignableFrom (type); " is 261.
Long Statement,Spring.Aop.Framework.AutoProxy,ObjectFactoryAdvisorRetrievalHelper,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\AutoProxy\ObjectFactoryAdvisorRetrievalHelper.cs,AddAdvisorCandidate,The length of the statement  "		throw new InvalidOperationException ("expected type IAdvisor or IAdvisors but was " + advisorCandidate.GetType ().FullName); " is 124.
Long Statement,Spring.Aop.Framework.AutoProxy,ObjectFactoryAdvisorRetrievalHelper,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\AutoProxy\ObjectFactoryAdvisorRetrievalHelper.cs,GetAdvisorCandidateNames,The length of the statement  "				string[] advisorCandidateNames = ObjectFactoryUtils.ObjectNamesForTypeIncludingAncestors (_objectFactory' typeof(IAdvisor)' true' false); " is 137.
Long Statement,Spring.Aop.Framework.AutoProxy,ObjectFactoryAdvisorRetrievalHelper,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\AutoProxy\ObjectFactoryAdvisorRetrievalHelper.cs,GetAdvisorCandidateNames,The length of the statement  "				string[] advisorsCandidateNames = ObjectFactoryUtils.ObjectNamesForTypeIncludingAncestors (_objectFactory' typeof(IAdvisors)' true' false); " is 139.
Long Statement,Spring.Aop.Framework.AutoProxy,AbstractAutoProxyCreator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\AutoProxy\AbstractAutoProxyCreator.cs,IsInfrastructureType,The length of the statement  "	return typeof(IAdvisor).IsAssignableFrom (type) || typeof(IAdvice).IsAssignableFrom (type) || typeof(IAdvisors).IsAssignableFrom (type) || typeof(AbstractAutoProxyCreator).IsAssignableFrom (type); " is 196.
Long Statement,Spring.Aop.Framework.AutoProxy,AbstractAutoProxyCreator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\AutoProxy\AbstractAutoProxyCreator.cs,GetCustomTargetSource,The length of the statement  "					logger.Info (string.Format ("TargetSourceCreator [{0} found custom TargetSource for object with objectName '{1}'"' tsc' name)); " is 127.
Long Statement,Spring.Aop.Framework.AutoProxy,AbstractAutoProxyCreator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\AutoProxy\AbstractAutoProxyCreator.cs,BuildAdvisors,The length of the statement  "		logger.Info (string.Format ("Creating implicit proxy for object '{0}' with {1} common interceptors and {2} specific interceptors"' targetName' nrOfCommonInterceptors' nrOfSpecificInterceptors)); " is 194.
Long Statement,Spring.Aop.Framework.AutoProxy,DefaultAdvisorAutoProxyCreator,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\AutoProxy\DefaultAdvisorAutoProxyCreator.cs,IsEligibleAdvisorObject,The length of the statement  "	return (!usePrefix || advisorName.StartsWith (advisorObjectNamePrefix)) && base.IsEligibleAdvisorObject (advisorName' targetType' targetName); " is 142.
Long Statement,Spring.Aop.Framework.DynamicProxy,AbstractAopProxyFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\AbstractAopProxyFactory.cs,EliminateDuplicateAdvisors,The length of the statement  "				if (ReferenceEquals (thisAdvisor' innerAdvisor) || (thisAdvisor.GetType () == typeof(DefaultPointcutAdvisor) && ((DefaultPointcutAdvisor)thisAdvisor).Equals (innerAdvisor))) { " is 175.
Long Statement,Spring.Aop.Framework.DynamicProxy,CachedAopProxyFactory,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\CachedAopProxyFactory.cs,BuildProxyType,The length of the statement  "	ProxyTypeCacheKey cacheKey = new ProxyTypeCacheKey (typeBuilder.BaseType' typeBuilder.TargetType' typeBuilder.Interfaces); " is 122.
Long Statement,Spring.Aop.Framework.DynamicProxy,InheritanceAopProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\InheritanceAopProxyTypeBuilder.cs,BuildProxyType,The length of the statement  "			ImplementInterface (typeBuilder' new BaseAopProxyMethodBuilder (typeBuilder' this' targetMethods' proxyMethods)' intf' TargetType' false); " is 138.
Long Statement,Spring.Aop.Framework.DynamicProxy,InheritanceAopProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\InheritanceAopProxyTypeBuilder.cs,BuildProxyType,The length of the statement  "			ImplementInterface (typeBuilder' new IntroductionProxyMethodBuilder (typeBuilder' this' targetMethods' advised.IndexOf ((IIntroductionAdvisor)target))' intf' TargetType); " is 170.
Long Statement,Spring.Aop.Framework.DynamicProxy,InheritanceAopProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\InheritanceAopProxyTypeBuilder.cs,BuildProxyType,The length of the statement  "	InheritType (typeBuilder' new BaseAopProxyMethodBuilder (typeBuilder' this' targetMethods' proxyMethods)' TargetType' ProxyDeclaredMembersOnly); " is 144.
Long Statement,Spring.Aop.Framework.DynamicProxy,InheritanceAopProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\InheritanceAopProxyTypeBuilder.cs,FindProxyMethod,The length of the statement  "	MemberInfo[] matchingMethods = targetType.FindMembers (MemberTypes.Method' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' new MemberFilter (new CriteriaMemberFilter ().FilterMemberByCriteria)' searchCriteria); " is 232.
Long Statement,Spring.Aop.Framework.DynamicProxy,InheritanceAopProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\InheritanceAopProxyTypeBuilder.cs,ImplementGetObjectDataMethod,The length of the statement  "	MethodBuilder mb = typeBuilder.DefineMethod ("GetObjectData"' MethodAttributes.Public | MethodAttributes.HideBySig | MethodAttributes.NewSlot | MethodAttributes.Virtual' typeof(void)' new Type[] { " is 196.
Long Statement,Spring.Aop.Framework.DynamicProxy,InheritanceAopProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\InheritanceAopProxyTypeBuilder.cs,ImplementSerializationConstructor,The length of the statement  "	ConstructorBuilder cb = typeBuilder.DefineConstructor (MethodAttributes.Family' CallingConventions.Standard' new Type[] { " is 121.
Long Statement,Spring.Aop.Framework.DynamicProxy,InheritanceAopProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\InheritanceAopProxyTypeBuilder.cs,ImplementIAopProxy,The length of the statement  "	MethodBuilder mb = typeBuilder.DefineMethod (typeof(IAdvised).FullName + "." + getProxyMethod.Name' MethodAttributes.Private | MethodAttributes.HideBySig | MethodAttributes.NewSlot | MethodAttributes.Virtual | MethodAttributes.Final' getProxyMethod.CallingConvention' getProxyMethod.ReturnType' Type.EmptyTypes); " is 312.
Long Statement,Spring.Aop.Framework.DynamicProxy,BaseAopProxyMethodBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\BaseAopProxyMethodBuilder.cs,GenerateOnProxyTargetMethodCacheField,The length of the statement  "		MethodBuilder baseMethod = typeBuilder.DefineMethod ("proxy_" + method.Name' MethodAttributes.Public | MethodAttributes.HideBySig' CallingConventions.Standard' method.ReturnType' ReflectionUtils.GetParameterTypes (method)); " is 223.
Long Statement,Spring.Aop.Framework.DynamicProxy,BaseAopProxyMethodBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\BaseAopProxyMethodBuilder.cs,GenerateOnProxyTargetMethodCacheField,The length of the statement  "		onProxyTargetMethodCacheField = typeBuilder.DefineField (methodId' typeof(MethodInfo)' FieldAttributes.Private | FieldAttributes.Static | FieldAttributes.InitOnly); " is 164.
Long Statement,Spring.Aop.Framework.DynamicProxy,AbstractAopProxyMethodBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\AbstractAopProxyMethodBuilder.cs,GenerateTargetMethodCacheField,The length of the statement  "	targetMethodCacheField = typeBuilder.DefineField (methodId' typeof(MethodInfo)' FieldAttributes.Private | FieldAttributes.Static | FieldAttributes.InitOnly); " is 157.
Long Statement,Spring.Aop.Framework.DynamicProxy,CompositionAopProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\CompositionAopProxyTypeBuilder.cs,BuildProxyType,The length of the statement  "			ImplementInterface (typeBuilder' new TargetAopProxyMethodBuilder (typeBuilder' this' false' targetMethods)' intf' TargetType); " is 126.
Long Statement,Spring.Aop.Framework.DynamicProxy,CompositionAopProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\CompositionAopProxyTypeBuilder.cs,BuildProxyType,The length of the statement  "			ImplementInterface (typeBuilder' new IntroductionProxyMethodBuilder (typeBuilder' this' targetMethods' advised.IndexOf ((IIntroductionAdvisor)target))' intf' TargetType); " is 170.
Long Statement,Spring.Aop.Framework.DynamicProxy,CompositionAopProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\CompositionAopProxyTypeBuilder.cs,ImplementSerializationConstructor,The length of the statement  "	ConstructorBuilder cb = typeBuilder.DefineConstructor (MethodAttributes.Family' CallingConventions.Standard' new Type[] { " is 121.
Long Statement,Spring.Aop.Framework.DynamicProxy,CompositionAopProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\CompositionAopProxyTypeBuilder.cs,ImplementConstructors,The length of the statement  "	ConstructorBuilder cb = typeBuilder.DefineConstructor (References.BaseCompositionAopProxyConstructor.Attributes' References.BaseCompositionAopProxyConstructor.CallingConvention' new Type[] { " is 190.
Long Statement,Spring.Aop.Framework.DynamicProxy,DecoratorAopProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\DecoratorAopProxyTypeBuilder.cs,BuildProxyType,The length of the statement  "			ImplementInterface (typeBuilder' new TargetAopProxyMethodBuilder (typeBuilder' this' true' targetMethods)' intf' TargetType' false); " is 132.
Long Statement,Spring.Aop.Framework.DynamicProxy,DecoratorAopProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\DecoratorAopProxyTypeBuilder.cs,BuildProxyType,The length of the statement  "			ImplementInterface (typeBuilder' new IntroductionProxyMethodBuilder (typeBuilder' this' targetMethods' advised.IndexOf ((IIntroductionAdvisor)target))' intf' TargetType); " is 170.
Long Statement,Spring.Aop.Framework.DynamicProxy,DecoratorAopProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\DecoratorAopProxyTypeBuilder.cs,ImplementGetObjectDataMethod,The length of the statement  "	MethodBuilder mb = typeBuilder.DefineMethod ("GetObjectData"' MethodAttributes.Public | MethodAttributes.HideBySig | MethodAttributes.NewSlot | MethodAttributes.Virtual' typeof(void)' new Type[] { " is 196.
Long Statement,Spring.Aop.Framework.DynamicProxy,DecoratorAopProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\DecoratorAopProxyTypeBuilder.cs,ImplementSerializationConstructor,The length of the statement  "	ConstructorBuilder cb = typeBuilder.DefineConstructor (MethodAttributes.Family' CallingConventions.Standard' new Type[] { " is 121.
Long Statement,Spring.Aop.Framework.DynamicProxy,DecoratorAopProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\DecoratorAopProxyTypeBuilder.cs,ImplementConstructors,The length of the statement  "	ConstructorBuilder cb = typeBuilder.DefineConstructor (References.ObjectConstructor.Attributes' References.ObjectConstructor.CallingConvention' new Type[] { " is 156.
Long Statement,Spring.Aop.Framework.DynamicProxy,DecoratorAopProxyTypeBuilder,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\DecoratorAopProxyTypeBuilder.cs,ImplementIAopProxy,The length of the statement  "	MethodBuilder mb = typeBuilder.DefineMethod (typeof(IAdvised).FullName + "." + getProxyMethod.Name' MethodAttributes.Private | MethodAttributes.HideBySig | MethodAttributes.NewSlot | MethodAttributes.Virtual | MethodAttributes.Final' getProxyMethod.CallingConvention' getProxyMethod.ReturnType' Type.EmptyTypes); " is 312.
Long Statement,Spring.Aop.Framework.Adapter,ThrowsAdviceInterceptor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\Adapter\ThrowsAdviceInterceptor.cs,MapAllExceptionHandlingMethods,The length of the statement  "					throw new ArgumentException ("Throws advice handler method for the [" + lastParametersType + "] type already exists; don't define " + "both single and multiple argument methods for the same " + "Exception type in the same class."); " is 231.
Long Statement,Spring.Aop.Support,AbstractPointcutAdvisor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Support\AbstractPointcutAdvisor.cs,GetHashCode,The length of the statement  "	+ 13 * (Pointcut == null ? 0 : Pointcut.GetHashCode ()) + 27 * (Advice == null ? 0 : Advice.GetHashCode ()) + 31 * Order.GetHashCode (); " is 136.
Long Statement,Spring.Aop.Support,AttributeMatchingPointcut,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Support\AttributeMatchingPointcut.cs,ValidateAttributeTypeArgument,The length of the statement  "		throw new ArgumentException (string.Format ("The [{0}] Type must be derived from the [System.Attribute] class."' attributeType)); " is 129.
Long Statement,Spring.Aop.Support,AttributeMethodMatcher,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Support\AttributeMethodMatcher.cs,ValidateAttributeTypeArgument,The length of the statement  "		throw new ArgumentException (string.Format ("The [{0}] Type must be derived from the [System.Attribute] class."' attributeType)); " is 129.
Long Statement,Spring.Aop.Support,DefaultIntroductionAdvisor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Support\DefaultIntroductionAdvisor.cs,ValidateInterfaces,The length of the statement  "			throw new ArgumentException ("Introduction [" + _introduction.GetType ().FullName + "] " + "does not implement interface '" + intf.FullName + "' specified in introduction advice."); " is 181.
Long Statement,Spring.Aop.Support,DefaultIntroductionAdvisor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Support\DefaultIntroductionAdvisor.cs,GetHashCode,The length of the statement  "		return ((_introduction != null ? _introduction.GetHashCode () : 0) * 397) ^ (_interfaces != null ? _interfaces.GetHashCode () : 0); " is 131.
Long Statement,Spring.Aop.Support,Pointcuts,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Support\Pointcuts.cs,AreEqual,The length of the statement  "	return firstPointcut.TypeFilter == secondPointcut.TypeFilter && firstPointcut.MethodMatcher == secondPointcut.MethodMatcher; " is 124.
Long Statement,Spring.Aop.Support,SdkRegularExpressionMethodPointcut,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Support\SdkRegularExpressionMethodPointcut.cs,InitPatternRepresentation,The length of the statement  "				throw new ArgumentException ("You can only specify a string value or an instance of a Regex class " + "as an element of the 'Patterns' property."); " is 147.
Long Statement,Spring.Aop.Support,SdkRegularExpressionMethodPointcut,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Support\SdkRegularExpressionMethodPointcut.cs,Matches,The length of the statement  "		_logger.Debug ("Candidate is: '" + pattern + "'; pattern is '" + _compiledPatterns [patternIndex].ToString () + "'; matched=" + matched); " is 137.
Long Statement,Spring.Aop.Support,StaticMethodMatcher,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Support\StaticMethodMatcher.cs,Matches,The length of the statement  "	throw new NotSupportedException ("Illegal IMethodMatcher usage. Cannot call 3-arg Matches method on a static matcher."); " is 120.
Long Statement,Spring.Aop.Target,AbstractPrototypeTargetSource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Target\AbstractPrototypeTargetSource.cs,AfterPropertiesSet,The length of the statement  "	AssertUtils.ArgumentHasText (TargetObjectName' "TargetObjectName"' "The 'TargetObjectName' property must have a value."); " is 121.
Long Statement,Spring.Aop.Target,ThreadLocalTargetSource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Target\ThreadLocalTargetSource.cs,GetTarget,The length of the statement  "			logger.Debug (string.Format ("No target for apartment prototype '{0}' " + "found in thread: creating one and binding it to thread '#{1}'"' TargetObjectName' Thread.CurrentThread.GetHashCode ())); " is 195.
Long Statement,Spring.Aop.Target,ThreadLocalTargetSource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Target\ThreadLocalTargetSource.cs,Dispose,The length of the statement  "					logger.Warn (string.Format ("Thread-bound target of class '{0}' " + "threw exception from it's IDisposable.Dispose() method."' target.GetType ())' ex); " is 151.
Long Statement,Spring.Aspects,RetryAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\RetryAdvice.cs,Sleep,The length of the statement  "			log.Warn ("Was not able to cast expression to decimal [" + handler.DelayRateExpression + "]. Sleeping for 1 second"' e); " is 120.
Long Statement,Spring.Aspects.Cache,BaseCacheAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\Cache\BaseCacheAdvice.cs,GetCache,The length of the statement  "		throw new ArgumentException (String.Format ("Cache with the specified name [{0}] does not implement the 'Spring.Caching.ICache' interface."' name)); " is 148.
Long Statement,Spring.Aspects.Cache,BaseCacheAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\Cache\BaseCacheAdvice.cs,EvalCondition,The length of the statement  "			throw new InvalidOperationException (String.Format ("The SpEL expression '{0}' could not be successfuly resolved to a boolean."' condition)); " is 141.
Long Statement,Spring.Aspects.Cache,CacheResultAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\Cache\CacheResultAdvice.cs,GetCacheResultInfo,The length of the statement  "		CacheResultItemsAttribute[] itemInfoArray = (CacheResultItemsAttribute[])GetCustomAttributes (method' typeof(CacheResultItemsAttribute)); " is 137.
Long Statement,Spring.Aspects.Cache,CacheResultAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\Cache\CacheResultAdvice.cs,GetReturnValue,The length of the statement  "				logger.Debug (String.Format ("Object for key [{0}] was not found in cache [{1}]. Proceeding..."' resultKey' resultInfo.CacheName)); " is 131.
Long Statement,Spring.Aspects.Cache,CacheResultAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\Cache\CacheResultAdvice.cs,GetReturnValue,The length of the statement  "				logger.Debug (String.Format ("Object for key [{0}] found in cache [{1}]. Aborting invocation..."' resultKey' resultInfo.CacheName)); " is 132.
Long Statement,Spring.Aspects.Cache,CacheParameterAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\Cache\CacheParameterAdvice.cs,GetCacheParameterInfo,The length of the statement  "			CacheParameterAttribute[] paramInfoArray = (CacheParameterAttribute[])GetCustomAttributes (p' typeof(CacheParameterAttribute)); " is 127.
Long Statement,Spring.Aspects.Cache,CacheResultAdvisor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\Cache\CacheResultAdvisor.cs,Matches,The length of the statement  "	return method.IsDefined (typeof(CacheResultAttribute)' Inherit) || method.IsDefined (typeof(CacheResultItemsAttribute)' Inherit); " is 129.
Complex Conditional,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,InitializeAdvisorChain,The conditional expression  "this.interceptorNames [this.interceptorNames.Length - 1] != null && this.interceptorNames [this.interceptorNames.Length - 1].EndsWith (GlobalInterceptorSuffix) && this.targetName == null && this.TargetSource == EmptyTargetSource.Empty"  is complex.
Virtual Method Call from Constructor,Spring.Aop.Framework,AdvisedSupport,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\AdvisedSupport.cs,AdvisedSupport,The constructor "AdvisedSupport" calls a virtual method "AddInterfaceInternal".
Virtual Method Call from Constructor,Spring.Aop.Framework.Adapter,DefaultAdvisorAdapterRegistry,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\Adapter\DefaultAdvisorAdapterRegistry.cs,DefaultAdvisorAdapterRegistry,The constructor "DefaultAdvisorAdapterRegistry" calls a virtual method "RegisterAdvisorAdapter".
Virtual Method Call from Constructor,Spring.Aop.Framework.Adapter,DefaultAdvisorAdapterRegistry,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\Adapter\DefaultAdvisorAdapterRegistry.cs,DefaultAdvisorAdapterRegistry,The constructor "DefaultAdvisorAdapterRegistry" calls a virtual method "RegisterAdvisorAdapter".
Virtual Method Call from Constructor,Spring.Aop.Framework.Adapter,DefaultAdvisorAdapterRegistry,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\Adapter\DefaultAdvisorAdapterRegistry.cs,DefaultAdvisorAdapterRegistry,The constructor "DefaultAdvisorAdapterRegistry" calls a virtual method "RegisterAdvisorAdapter".
Virtual Method Call from Constructor,Spring.Aop.Support,DefaultIntroductionAdvisor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Support\DefaultIntroductionAdvisor.cs,DefaultIntroductionAdvisor,The constructor "DefaultIntroductionAdvisor" calls a virtual method "AddInterface".
Magic Number,Spring.Aop.Framework.Adapter,ThrowsAdviceInterceptor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\Adapter\ThrowsAdviceInterceptor.cs,MapAllExceptionHandlingMethods,The following statement contains a magic number: foreach (MethodInfo method in methods) {  	int numParams = method.GetParameters ().Length;  	if (method.Name.Equals (SpecialThrowingMethodName) && (numParams == 1 || numParams == 4)) {  		Type lastParametersType = method.GetParameters () [numParams - 1].ParameterType;  		if (typeof(Exception).IsAssignableFrom (lastParametersType)) {  			#region Instrumentation  			if (log.IsDebugEnabled) {  				log.Debug ("Found exception handler method: " + method);  			}  			#endregion  			if (this.exceptionHandlers.Contains (lastParametersType)) {  				throw new ArgumentException ("Throws advice handler method for the [" + lastParametersType + "] type already exists; don't define " + "both single and multiple argument methods for the same " + "Exception type in the same class.");  			}  			this.exceptionHandlers [lastParametersType] = method;  		}  	}  }  
Magic Number,Spring.Aop.Framework.Adapter,ThrowsAdviceInterceptor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Framework\Adapter\ThrowsAdviceInterceptor.cs,MapAllExceptionHandlingMethods,The following statement contains a magic number: if (method.Name.Equals (SpecialThrowingMethodName) && (numParams == 1 || numParams == 4)) {  	Type lastParametersType = method.GetParameters () [numParams - 1].ParameterType;  	if (typeof(Exception).IsAssignableFrom (lastParametersType)) {  		#region Instrumentation  		if (log.IsDebugEnabled) {  			log.Debug ("Found exception handler method: " + method);  		}  		#endregion  		if (this.exceptionHandlers.Contains (lastParametersType)) {  			throw new ArgumentException ("Throws advice handler method for the [" + lastParametersType + "] type already exists; don't define " + "both single and multiple argument methods for the same " + "Exception type in the same class.");  		}  		this.exceptionHandlers [lastParametersType] = method;  	}  }  
Magic Number,Spring.Aop.Support,AbstractPointcutAdvisor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Support\AbstractPointcutAdvisor.cs,GetHashCode,The following statement contains a magic number: return 0 // (SPRNET-847) base.GetHashCode()  + 13 * (Pointcut == null ? 0 : Pointcut.GetHashCode ()) + 27 * (Advice == null ? 0 : Advice.GetHashCode ()) + 31 * Order.GetHashCode ();  
Magic Number,Spring.Aop.Support,AbstractPointcutAdvisor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Support\AbstractPointcutAdvisor.cs,GetHashCode,The following statement contains a magic number: return 0 // (SPRNET-847) base.GetHashCode()  + 13 * (Pointcut == null ? 0 : Pointcut.GetHashCode ()) + 27 * (Advice == null ? 0 : Advice.GetHashCode ()) + 31 * Order.GetHashCode ();  
Magic Number,Spring.Aop.Support,AbstractPointcutAdvisor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Support\AbstractPointcutAdvisor.cs,GetHashCode,The following statement contains a magic number: return 0 // (SPRNET-847) base.GetHashCode()  + 13 * (Pointcut == null ? 0 : Pointcut.GetHashCode ()) + 27 * (Advice == null ? 0 : Advice.GetHashCode ()) + 31 * Order.GetHashCode ();  
Magic Number,Spring.Aop.Support,DefaultIntroductionAdvisor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Support\DefaultIntroductionAdvisor.cs,GetHashCode,The following statement contains a magic number: unchecked {  	return ((_introduction != null ? _introduction.GetHashCode () : 0) * 397) ^ (_interfaces != null ? _interfaces.GetHashCode () : 0);  }  
Magic Number,Spring.Aop.Support,DefaultIntroductionAdvisor,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Support\DefaultIntroductionAdvisor.cs,GetHashCode,The following statement contains a magic number: return ((_introduction != null ? _introduction.GetHashCode () : 0) * 397) ^ (_interfaces != null ? _interfaces.GetHashCode () : 0);  
Magic Number,Spring.Aop.Target,HotSwappableTargetSource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Target\HotSwappableTargetSource.cs,GetHashCode,The following statement contains a magic number: return base.GetHashCode () + 13 * (_target == null ? 0 : _target.GetHashCode ());  
Magic Number,Spring.Aop.Target,SingletonTargetSource,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aop\Target\SingletonTargetSource.cs,GetHashCode,The following statement contains a magic number: return base.GetHashCode () + 13 * (target == null ? 0 : target.GetHashCode ());  
Magic Number,Spring.Aspects,AbstractExceptionHandlerAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\AbstractExceptionHandlerAdvice.cs,ParseAdviceExpression,The following statement contains a magic number: if (match.Success) {  	parsedAdviceExpression.Success = true;  	//using exception names for exception filter  	parsedAdviceExpression.ExceptionNames = StringUtils.CommaDelimitedListToStringArray (match.Groups [2].Value.Trim ());  	parsedAdviceExpression.ActionText = match.Groups [3].Value.Trim ();  	parsedAdviceExpression.ActionExpressionText = match.Groups [4].Value.Trim ();  }  else {  	match = GetMatch (adviceExpression' OnExceptionRegex);  	if (match.Success) {  		parsedAdviceExpression.Success = true;  		//using constratin expression for exception filter  		string constraintExpression = match.Groups [2].Value.Trim ().Remove (0' 1);  		parsedAdviceExpression.ConstraintExpression = constraintExpression.Substring (0' constraintExpression.Length - 1);  		parsedAdviceExpression.ActionText = match.Groups [3].Value.Trim ();  		parsedAdviceExpression.ActionExpressionText = match.Groups [4].Value.Trim ();  	}  }  
Magic Number,Spring.Aspects,AbstractExceptionHandlerAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\AbstractExceptionHandlerAdvice.cs,ParseAdviceExpression,The following statement contains a magic number: if (match.Success) {  	parsedAdviceExpression.Success = true;  	//using exception names for exception filter  	parsedAdviceExpression.ExceptionNames = StringUtils.CommaDelimitedListToStringArray (match.Groups [2].Value.Trim ());  	parsedAdviceExpression.ActionText = match.Groups [3].Value.Trim ();  	parsedAdviceExpression.ActionExpressionText = match.Groups [4].Value.Trim ();  }  else {  	match = GetMatch (adviceExpression' OnExceptionRegex);  	if (match.Success) {  		parsedAdviceExpression.Success = true;  		//using constratin expression for exception filter  		string constraintExpression = match.Groups [2].Value.Trim ().Remove (0' 1);  		parsedAdviceExpression.ConstraintExpression = constraintExpression.Substring (0' constraintExpression.Length - 1);  		parsedAdviceExpression.ActionText = match.Groups [3].Value.Trim ();  		parsedAdviceExpression.ActionExpressionText = match.Groups [4].Value.Trim ();  	}  }  
Magic Number,Spring.Aspects,AbstractExceptionHandlerAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\AbstractExceptionHandlerAdvice.cs,ParseAdviceExpression,The following statement contains a magic number: if (match.Success) {  	parsedAdviceExpression.Success = true;  	//using exception names for exception filter  	parsedAdviceExpression.ExceptionNames = StringUtils.CommaDelimitedListToStringArray (match.Groups [2].Value.Trim ());  	parsedAdviceExpression.ActionText = match.Groups [3].Value.Trim ();  	parsedAdviceExpression.ActionExpressionText = match.Groups [4].Value.Trim ();  }  else {  	match = GetMatch (adviceExpression' OnExceptionRegex);  	if (match.Success) {  		parsedAdviceExpression.Success = true;  		//using constratin expression for exception filter  		string constraintExpression = match.Groups [2].Value.Trim ().Remove (0' 1);  		parsedAdviceExpression.ConstraintExpression = constraintExpression.Substring (0' constraintExpression.Length - 1);  		parsedAdviceExpression.ActionText = match.Groups [3].Value.Trim ();  		parsedAdviceExpression.ActionExpressionText = match.Groups [4].Value.Trim ();  	}  }  
Magic Number,Spring.Aspects,AbstractExceptionHandlerAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\AbstractExceptionHandlerAdvice.cs,ParseAdviceExpression,The following statement contains a magic number: if (match.Success) {  	parsedAdviceExpression.Success = true;  	//using exception names for exception filter  	parsedAdviceExpression.ExceptionNames = StringUtils.CommaDelimitedListToStringArray (match.Groups [2].Value.Trim ());  	parsedAdviceExpression.ActionText = match.Groups [3].Value.Trim ();  	parsedAdviceExpression.ActionExpressionText = match.Groups [4].Value.Trim ();  }  else {  	match = GetMatch (adviceExpression' OnExceptionRegex);  	if (match.Success) {  		parsedAdviceExpression.Success = true;  		//using constratin expression for exception filter  		string constraintExpression = match.Groups [2].Value.Trim ().Remove (0' 1);  		parsedAdviceExpression.ConstraintExpression = constraintExpression.Substring (0' constraintExpression.Length - 1);  		parsedAdviceExpression.ActionText = match.Groups [3].Value.Trim ();  		parsedAdviceExpression.ActionExpressionText = match.Groups [4].Value.Trim ();  	}  }  
Magic Number,Spring.Aspects,AbstractExceptionHandlerAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\AbstractExceptionHandlerAdvice.cs,ParseAdviceExpression,The following statement contains a magic number: if (match.Success) {  	parsedAdviceExpression.Success = true;  	//using exception names for exception filter  	parsedAdviceExpression.ExceptionNames = StringUtils.CommaDelimitedListToStringArray (match.Groups [2].Value.Trim ());  	parsedAdviceExpression.ActionText = match.Groups [3].Value.Trim ();  	parsedAdviceExpression.ActionExpressionText = match.Groups [4].Value.Trim ();  }  else {  	match = GetMatch (adviceExpression' OnExceptionRegex);  	if (match.Success) {  		parsedAdviceExpression.Success = true;  		//using constratin expression for exception filter  		string constraintExpression = match.Groups [2].Value.Trim ().Remove (0' 1);  		parsedAdviceExpression.ConstraintExpression = constraintExpression.Substring (0' constraintExpression.Length - 1);  		parsedAdviceExpression.ActionText = match.Groups [3].Value.Trim ();  		parsedAdviceExpression.ActionExpressionText = match.Groups [4].Value.Trim ();  	}  }  
Magic Number,Spring.Aspects,AbstractExceptionHandlerAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\AbstractExceptionHandlerAdvice.cs,ParseAdviceExpression,The following statement contains a magic number: if (match.Success) {  	parsedAdviceExpression.Success = true;  	//using exception names for exception filter  	parsedAdviceExpression.ExceptionNames = StringUtils.CommaDelimitedListToStringArray (match.Groups [2].Value.Trim ());  	parsedAdviceExpression.ActionText = match.Groups [3].Value.Trim ();  	parsedAdviceExpression.ActionExpressionText = match.Groups [4].Value.Trim ();  }  else {  	match = GetMatch (adviceExpression' OnExceptionRegex);  	if (match.Success) {  		parsedAdviceExpression.Success = true;  		//using constratin expression for exception filter  		string constraintExpression = match.Groups [2].Value.Trim ().Remove (0' 1);  		parsedAdviceExpression.ConstraintExpression = constraintExpression.Substring (0' constraintExpression.Length - 1);  		parsedAdviceExpression.ActionText = match.Groups [3].Value.Trim ();  		parsedAdviceExpression.ActionExpressionText = match.Groups [4].Value.Trim ();  	}  }  
Magic Number,Spring.Aspects,AbstractExceptionHandlerAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\AbstractExceptionHandlerAdvice.cs,ParseAdviceExpression,The following statement contains a magic number: parsedAdviceExpression.ExceptionNames = StringUtils.CommaDelimitedListToStringArray (match.Groups [2].Value.Trim ());  
Magic Number,Spring.Aspects,AbstractExceptionHandlerAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\AbstractExceptionHandlerAdvice.cs,ParseAdviceExpression,The following statement contains a magic number: parsedAdviceExpression.ActionText = match.Groups [3].Value.Trim ();  
Magic Number,Spring.Aspects,AbstractExceptionHandlerAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\AbstractExceptionHandlerAdvice.cs,ParseAdviceExpression,The following statement contains a magic number: parsedAdviceExpression.ActionExpressionText = match.Groups [4].Value.Trim ();  
Magic Number,Spring.Aspects,AbstractExceptionHandlerAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\AbstractExceptionHandlerAdvice.cs,ParseAdviceExpression,The following statement contains a magic number: if (match.Success) {  	parsedAdviceExpression.Success = true;  	//using constratin expression for exception filter  	string constraintExpression = match.Groups [2].Value.Trim ().Remove (0' 1);  	parsedAdviceExpression.ConstraintExpression = constraintExpression.Substring (0' constraintExpression.Length - 1);  	parsedAdviceExpression.ActionText = match.Groups [3].Value.Trim ();  	parsedAdviceExpression.ActionExpressionText = match.Groups [4].Value.Trim ();  }  
Magic Number,Spring.Aspects,AbstractExceptionHandlerAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\AbstractExceptionHandlerAdvice.cs,ParseAdviceExpression,The following statement contains a magic number: if (match.Success) {  	parsedAdviceExpression.Success = true;  	//using constratin expression for exception filter  	string constraintExpression = match.Groups [2].Value.Trim ().Remove (0' 1);  	parsedAdviceExpression.ConstraintExpression = constraintExpression.Substring (0' constraintExpression.Length - 1);  	parsedAdviceExpression.ActionText = match.Groups [3].Value.Trim ();  	parsedAdviceExpression.ActionExpressionText = match.Groups [4].Value.Trim ();  }  
Magic Number,Spring.Aspects,AbstractExceptionHandlerAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\AbstractExceptionHandlerAdvice.cs,ParseAdviceExpression,The following statement contains a magic number: if (match.Success) {  	parsedAdviceExpression.Success = true;  	//using constratin expression for exception filter  	string constraintExpression = match.Groups [2].Value.Trim ().Remove (0' 1);  	parsedAdviceExpression.ConstraintExpression = constraintExpression.Substring (0' constraintExpression.Length - 1);  	parsedAdviceExpression.ActionText = match.Groups [3].Value.Trim ();  	parsedAdviceExpression.ActionExpressionText = match.Groups [4].Value.Trim ();  }  
Magic Number,Spring.Aspects,AbstractExceptionHandlerAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\AbstractExceptionHandlerAdvice.cs,ParseAdviceExpression,The following statement contains a magic number: parsedAdviceExpression.ActionText = match.Groups [3].Value.Trim ();  
Magic Number,Spring.Aspects,AbstractExceptionHandlerAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\AbstractExceptionHandlerAdvice.cs,ParseAdviceExpression,The following statement contains a magic number: parsedAdviceExpression.ActionExpressionText = match.Groups [4].Value.Trim ();  
Magic Number,Spring.Aspects,RetryAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\RetryAdvice.cs,Sleep,The following statement contains a magic number: if (handler.IsDelayBased) {  	sleepHandler (handler.DelayTimeSpan);  }  else {  	try {  		IExpression expression = Expression.Parse (handler.DelayRateExpression);  		object result = expression.GetValue (null' callContextDictionary);  		decimal d = decimal.Parse (result.ToString ());  		decimal rounded = decimal.Round (d * 1000' 0);  		TimeSpan duration = TimeSpan.FromMilliseconds (decimal.ToDouble (rounded));  		sleepHandler (duration);  	}  	catch (InvalidCastException e) {  		log.Warn ("Was not able to cast expression to decimal [" + handler.DelayRateExpression + "]. Sleeping for 1 second"' e);  		sleepHandler (new TimeSpan (0' 0' 1));  	}  	catch (Exception e) {  		log.Warn ("Was not able to evaluate rate expression [" + handler.DelayRateExpression + "]. Sleeping for 1 second"' e);  		sleepHandler (new TimeSpan (0' 0' 1));  	}  }  
Magic Number,Spring.Aspects,RetryAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\RetryAdvice.cs,Sleep,The following statement contains a magic number: try {  	IExpression expression = Expression.Parse (handler.DelayRateExpression);  	object result = expression.GetValue (null' callContextDictionary);  	decimal d = decimal.Parse (result.ToString ());  	decimal rounded = decimal.Round (d * 1000' 0);  	TimeSpan duration = TimeSpan.FromMilliseconds (decimal.ToDouble (rounded));  	sleepHandler (duration);  }  catch (InvalidCastException e) {  	log.Warn ("Was not able to cast expression to decimal [" + handler.DelayRateExpression + "]. Sleeping for 1 second"' e);  	sleepHandler (new TimeSpan (0' 0' 1));  }  catch (Exception e) {  	log.Warn ("Was not able to evaluate rate expression [" + handler.DelayRateExpression + "]. Sleeping for 1 second"' e);  	sleepHandler (new TimeSpan (0' 0' 1));  }  
Magic Number,Spring.Aspects,RetryAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\RetryAdvice.cs,Parse,The following statement contains a magic number: if (match.Success) {  	handler.MaximumRetryCount = int.Parse (match.Groups [1].Value.Trim ());  	handler.IsDelayBased = true;  	try {  		string ts = match.Groups [3].Value.Trim ();  		handler.DelayTimeSpan = (TimeSpan)timeSpanConverter.ConvertFrom (null' null' ts);  	}  	catch (Exception) {  		log.Warn ("Could not parse timespan " + match.Groups [3].Value.Trim ());  		return null;  	}  	return handler;  }  else {  	match = GetMatchForActionExpression (parsedAdviceExpression.ActionExpressionText' rateRegex);  	if (match.Success) {  		handler.MaximumRetryCount = int.Parse (match.Groups [1].Value.Trim ());  		handler.IsDelayBased = false;  		handler.DelayRateExpression = match.Groups [3].Value.Trim ();  		return handler;  	}  	else {  		return null;  	}  }  
Magic Number,Spring.Aspects,RetryAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\RetryAdvice.cs,Parse,The following statement contains a magic number: if (match.Success) {  	handler.MaximumRetryCount = int.Parse (match.Groups [1].Value.Trim ());  	handler.IsDelayBased = true;  	try {  		string ts = match.Groups [3].Value.Trim ();  		handler.DelayTimeSpan = (TimeSpan)timeSpanConverter.ConvertFrom (null' null' ts);  	}  	catch (Exception) {  		log.Warn ("Could not parse timespan " + match.Groups [3].Value.Trim ());  		return null;  	}  	return handler;  }  else {  	match = GetMatchForActionExpression (parsedAdviceExpression.ActionExpressionText' rateRegex);  	if (match.Success) {  		handler.MaximumRetryCount = int.Parse (match.Groups [1].Value.Trim ());  		handler.IsDelayBased = false;  		handler.DelayRateExpression = match.Groups [3].Value.Trim ();  		return handler;  	}  	else {  		return null;  	}  }  
Magic Number,Spring.Aspects,RetryAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\RetryAdvice.cs,Parse,The following statement contains a magic number: if (match.Success) {  	handler.MaximumRetryCount = int.Parse (match.Groups [1].Value.Trim ());  	handler.IsDelayBased = true;  	try {  		string ts = match.Groups [3].Value.Trim ();  		handler.DelayTimeSpan = (TimeSpan)timeSpanConverter.ConvertFrom (null' null' ts);  	}  	catch (Exception) {  		log.Warn ("Could not parse timespan " + match.Groups [3].Value.Trim ());  		return null;  	}  	return handler;  }  else {  	match = GetMatchForActionExpression (parsedAdviceExpression.ActionExpressionText' rateRegex);  	if (match.Success) {  		handler.MaximumRetryCount = int.Parse (match.Groups [1].Value.Trim ());  		handler.IsDelayBased = false;  		handler.DelayRateExpression = match.Groups [3].Value.Trim ();  		return handler;  	}  	else {  		return null;  	}  }  
Magic Number,Spring.Aspects,RetryAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\RetryAdvice.cs,Parse,The following statement contains a magic number: try {  	string ts = match.Groups [3].Value.Trim ();  	handler.DelayTimeSpan = (TimeSpan)timeSpanConverter.ConvertFrom (null' null' ts);  }  catch (Exception) {  	log.Warn ("Could not parse timespan " + match.Groups [3].Value.Trim ());  	return null;  }  
Magic Number,Spring.Aspects,RetryAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\RetryAdvice.cs,Parse,The following statement contains a magic number: try {  	string ts = match.Groups [3].Value.Trim ();  	handler.DelayTimeSpan = (TimeSpan)timeSpanConverter.ConvertFrom (null' null' ts);  }  catch (Exception) {  	log.Warn ("Could not parse timespan " + match.Groups [3].Value.Trim ());  	return null;  }  
Magic Number,Spring.Aspects,RetryAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\RetryAdvice.cs,Parse,The following statement contains a magic number: log.Warn ("Could not parse timespan " + match.Groups [3].Value.Trim ());  
Magic Number,Spring.Aspects,RetryAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\RetryAdvice.cs,Parse,The following statement contains a magic number: if (match.Success) {  	handler.MaximumRetryCount = int.Parse (match.Groups [1].Value.Trim ());  	handler.IsDelayBased = false;  	handler.DelayRateExpression = match.Groups [3].Value.Trim ();  	return handler;  }  else {  	return null;  }  
Magic Number,Spring.Aspects,RetryAdvice,C:\repos\JamesKovacs_nhcontrib\sandbox\simondud\Envers.NET.Spring\Spring.NET\src\Spring\Spring.Aop\Aspects\RetryAdvice.cs,Parse,The following statement contains a magic number: handler.DelayRateExpression = match.Groups [3].Value.Trim ();  
