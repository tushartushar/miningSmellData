Implementation smell,Namespace,Class,File,Method,Description
Long Method,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The method has 117 lines of code.
Long Method,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,ProcDanmaku,The method has 91 lines of code.
Complex Method,Bililive_dm,SSTPProtocol,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\SSTPProtocol.cs,GetSSPhWnd,Cyclomatic complexity of the method is 7
Complex Method,Bililive_dm,Utils,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\Store.cs,PluginExceptionHandler,Cyclomatic complexity of the method is 8
Complex Method,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,Cyclomatic complexity of the method is 9
Complex Method,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,connbtn_Click,Cyclomatic complexity of the method is 9
Complex Method,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,ProcDanmaku,Cyclomatic complexity of the method is 27
Complex Method,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,logging,Cyclomatic complexity of the method is 8
Complex Method,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,InitPlugins,Cyclomatic complexity of the method is 12
Long Parameter List,Bililive_dm,PluginStatusConverter,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\PluginStatusConverter.cs,Convert,The method has 4 parameters.
Long Parameter List,Bililive_dm,PluginStatusConverter,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\PluginStatusConverter.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,Bililive_dm,SSTPProtocol,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\SSTPProtocol.cs,SendMessage,The method has 4 parameters.
Long Parameter List,Bililive_dm,WtfDanmakuWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\WtfDanmakuWindow.cs,WTF_AddLiveDanmaku,The method has 8 parameters.
Long Parameter List,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,AddDMText,The method has 4 parameters.
Long Statement,Bililive_dm,Utils,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\Store.cs,PluginExceptionHandler,The length of the statement  "		MessageBox.Show ("插件" + plugin.PluginName + "遇到了不明錯誤: 日誌已經保存在桌面' 請有空發給該插件作者 " + plugin.PluginAuth + "' 聯繫方式 " + plugin.PluginCont); " is 131.
Long Statement,Bililive_dm,StoreModel,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\StoreModel.cs,SaveConfig,The length of the statement  "		IsolatedStorageFile isoStore = IsolatedStorageFile.GetStore (IsolatedStorageScope.User | IsolatedStorageScope.Domain | IsolatedStorageScope.Assembly' null' null); " is 162.
Long Statement,Bililive_dm,StoreModel,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\StoreModel.cs,SaveConfig,The length of the statement  "		System.Xml.Serialization.XmlSerializer settingsreader = new System.Xml.Serialization.XmlSerializer (typeof(StoreModel)); " is 120.
Long Statement,Bililive_dm,OutlinedTextBlock,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\OutlinedTextBlock.cs,MeasureOverride,The length of the statement  "	// the Math.Min call is important - without this constraint (which seems arbitrary' but is the maximum allowable text width)' things blow up when availableSize is infinite in both directions " is 190.
Long Statement,Bililive_dm,OutlinedTextBlock,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\OutlinedTextBlock.cs,EnsureFormattedText,The length of the statement  "	this.formattedText = new FormattedText (this.Text' CultureInfo.CurrentUICulture' this.FlowDirection' new Typeface (this.FontFamily' this.FontStyle' this.FontWeight' FontStretches.Normal)' this.FontSize' Brushes.Black); " is 218.
Long Statement,Bililive_dm,WpfDanmakuOverlay,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\WpfDanmakuOverlay.xaml.cs,AddDanmaku,The length of the statement  "		//			<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="fullScreenDanmaku"> " is 135.
Long Statement,Bililive_dm,WpfDanmakuOverlay,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\WpfDanmakuOverlay.xaml.cs,AddDanmaku,The length of the statement  "			Duration duration = new Duration (TimeSpan.FromTicks (Convert.ToInt64 ((SystemParameters.PrimaryScreenWidth + wd) / Store.FullOverlayEffect1 * TimeSpan.TicksPerSecond))); " is 170.
Long Statement,Bililive_dm,WpfDanmakuOverlay,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\WpfDanmakuOverlay.xaml.cs,AddDanmaku,The length of the statement  "			ThicknessAnimation f = new ThicknessAnimation (new Thickness (SystemParameters.PrimaryScreenWidth' top' 0' 0)' new Thickness (-wd' top' 0' 0)' duration); " is 153.
Long Statement,Bililive_dm,WpfDanmakuOverlay,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\WpfDanmakuOverlay.xaml.cs,AddDanmaku,The length of the statement  "		this.Dispatcher.BeginInvoke (DispatcherPriority.Normal' new Action (() => (this as IDanmakuWindow).AddDanmaku (type' comment' color))); " is 135.
Long Statement,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow_Loaded,The length of the statement  "		var isoStore = IsolatedStorageFile.GetStore (IsolatedStorageScope.User | IsolatedStorageScope.Domain | IsolatedStorageScope.Assembly' null' null); " is 146.
Long Statement,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow_Closed,The length of the statement  "			MessageBox.Show ("插件" + dmPlugin.PluginName + "遇到了不明錯誤: 日誌已經保存在桌面' 請有空發給該插件作者 " + dmPlugin.PluginAuth + "' 聯繫方式 " + dmPlugin.PluginCont); " is 137.
Long Statement,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,OpenFullOverlay,The length of the statement  "	var isWin8OrLater = Environment.OSVersion.Platform == PlatformID.Win32NT && Environment.OSVersion.Version >= win8Version; " is 121.
Long Statement,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,ProcDanmaku,The length of the statement  "		logging ("收到彈幕:" + (danmakuModel.isAdmin ? "[管]" : "") + (danmakuModel.isVIP ? "[爷]" : "") + danmakuModel.UserName + " 說: " + danmakuModel.CommentText); " is 152.
Long Statement,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,ProcDanmaku,The length of the statement  "		AddDMText ((danmakuModel.isAdmin ? "[管]" : "") + (danmakuModel.isVIP ? "[爷]" : "") + danmakuModel.UserName' danmakuModel.CommentText); " is 134.
Long Statement,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,ProcDanmaku,The length of the statement  "		SendSSP (string.Format (@"\_q{0}\n\_q\f[height'20]{1}"' (danmakuModel.isAdmin ? "[管]" : "") + (danmakuModel.isVIP ? "[爷]" : "") + danmakuModel.UserName' danmakuModel.CommentText)); " is 180.
Long Statement,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,ProcDanmaku,The length of the statement  "			var query = SessionItems.Where (p => p.UserName == danmakuModel.UserName && p.Item == danmakuModel.GiftName).ToArray (); " is 120.
Long Statement,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,Plugin_Enable,The length of the statement  "		MessageBox.Show ("插件" + plugin.PluginName + "遇到了不明錯誤: 日誌已經保存在桌面' 請有空發給該插件作者 " + plugin.PluginAuth + "' 聯繫方式 " + plugin.PluginCont); " is 131.
Long Statement,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,Plugin_Disable,The length of the statement  "		MessageBox.Show ("插件" + plugin.PluginName + "遇到了不明錯誤: 日誌已經保存在桌面' 請有空發給該插件作者 " + plugin.PluginAuth + "' 聯繫方式 " + plugin.PluginCont); " is 131.
Long Statement,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,Plugin_admin,The length of the statement  "		MessageBox.Show ("插件" + plugin.PluginName + "遇到了不明錯誤: 日誌已經保存在桌面' 請有空發給該插件作者 " + plugin.PluginAuth + "' 聯繫方式 " + plugin.PluginCont); " is 131.
Long Statement,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,InitPlugins,The length of the statement  "				logging ("Assembly.GetExportedTypes == " + string.Join ("'"' dll.GetExportedTypes ().Select (x => x.FullName).ToArray ())); " is 123.
Long Statement,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,InitPlugins,The length of the statement  "			MessageBox.Show ("插件" + plugin.PluginName + "遇到了不明錯誤: 日誌已經保存在桌面' 請有空發給該插件作者 " + plugin.PluginAuth + "' 聯繫方式 " + plugin.PluginCont); " is 131.
Empty Catch Block,Bililive_dm,MobileService,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\AndroidService.cs,B_ReceivedDanmaku,The method has an empty catch block.
Empty Catch Block,Bililive_dm,Utils,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\Store.cs,PluginExceptionHandler,The method has an empty catch block.
Empty Catch Block,Bililive_dm,Utils,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\Store.cs,PluginExceptionHandler,The method has an empty catch block.
Empty Catch Block,Bililive_dm,StoreModel,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\StoreModel.cs,SaveConfig,The method has an empty catch block.
Empty Catch Block,Bililive_dm,App,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\App.xaml.cs,App_DispatcherUnhandledException,The method has an empty catch block.
Empty Catch Block,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The method has an empty catch block.
Empty Catch Block,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow_Closed,The method has an empty catch block.
Empty Catch Block,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,logging,The method has an empty catch block.
Empty Catch Block,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,Plugin_Enable,The method has an empty catch block.
Empty Catch Block,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,Plugin_Disable,The method has an empty catch block.
Empty Catch Block,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,Plugin_admin,The method has an empty catch block.
Empty Catch Block,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,InitPlugins,The method has an empty catch block.
Empty Catch Block,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,UIElement_OnMouseLeftButtonUp,The method has an empty catch block.
Empty Catch Block,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,SaveRoomId,The method has an empty catch block.
Magic Number,Bililive_dm,MobileService,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\AndroidService.cs,B_ReceivedDanmaku,The following statement contains a magic number: try {  	if (e.Danmaku.MsgType == MsgTypeEnum.Comment) {  		foreach (var i in System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces ())  			foreach (var ua in i.GetIPProperties ().UnicastAddresses) {  				UdpClient client = new UdpClient ();  				IPEndPoint ip = new IPEndPoint (ua.Address.GetBroadcastAddress (ua.IPv4Mask)' 45695);  				var obj = JObject.FromObject (new {  					User = e.Danmaku.UserName + ""'  					Comment = e.Danmaku.CommentText + ""  				});  				byte[] sendbuf = Encoding.UTF8.GetBytes (obj.ToString ());  				client.Send (sendbuf' sendbuf.Length' ip);  				client.Close ();  			}  	}  } catch (Exception) {  }  
Magic Number,Bililive_dm,MobileService,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\AndroidService.cs,B_ReceivedDanmaku,The following statement contains a magic number: if (e.Danmaku.MsgType == MsgTypeEnum.Comment) {  	foreach (var i in System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces ())  		foreach (var ua in i.GetIPProperties ().UnicastAddresses) {  			UdpClient client = new UdpClient ();  			IPEndPoint ip = new IPEndPoint (ua.Address.GetBroadcastAddress (ua.IPv4Mask)' 45695);  			var obj = JObject.FromObject (new {  				User = e.Danmaku.UserName + ""'  				Comment = e.Danmaku.CommentText + ""  			});  			byte[] sendbuf = Encoding.UTF8.GetBytes (obj.ToString ());  			client.Send (sendbuf' sendbuf.Length' ip);  			client.Close ();  		}  }  
Magic Number,Bililive_dm,MobileService,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\AndroidService.cs,B_ReceivedDanmaku,The following statement contains a magic number: foreach (var i in System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces ())  	foreach (var ua in i.GetIPProperties ().UnicastAddresses) {  		UdpClient client = new UdpClient ();  		IPEndPoint ip = new IPEndPoint (ua.Address.GetBroadcastAddress (ua.IPv4Mask)' 45695);  		var obj = JObject.FromObject (new {  			User = e.Danmaku.UserName + ""'  			Comment = e.Danmaku.CommentText + ""  		});  		byte[] sendbuf = Encoding.UTF8.GetBytes (obj.ToString ());  		client.Send (sendbuf' sendbuf.Length' ip);  		client.Close ();  	}  
Magic Number,Bililive_dm,MobileService,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\AndroidService.cs,B_ReceivedDanmaku,The following statement contains a magic number: foreach (var ua in i.GetIPProperties ().UnicastAddresses) {  	UdpClient client = new UdpClient ();  	IPEndPoint ip = new IPEndPoint (ua.Address.GetBroadcastAddress (ua.IPv4Mask)' 45695);  	var obj = JObject.FromObject (new {  		User = e.Danmaku.UserName + ""'  		Comment = e.Danmaku.CommentText + ""  	});  	byte[] sendbuf = Encoding.UTF8.GetBytes (obj.ToString ());  	client.Send (sendbuf' sendbuf.Length' ip);  	client.Close ();  }  
Magic Number,Bililive_dm,FuckMePlugin,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\FuckMePlugin.cs,B_Disconnected,The following statement contains a magic number: await b.ConnectAsync (5051);  
Magic Number,Bililive_dm,SSTPProtocol,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\SSTPProtocol.cs,GetSSPhWnd,The following statement contains a magic number: try {  	MemoryMappedFile mmf = MemoryMappedFile.OpenExisting ("Sakura");  	var data = new Dictionary<string' Dictionary<string' string>> ();  	byte[] buf;  	//  	//                            Mutex mutex = Mutex.OpenExisting("SakuraFMO");  	//                            mutex.WaitOne();  	//                            bool mutexCreated;  	//                            Mutex mutex = new Mutex(true' "SakuraFMO"' out mutexCreated);  	using (MemoryMappedViewStream stream = mmf.CreateViewStream ()) {  		BinaryReader r = new BinaryReader (stream);  		int len = r.ReadInt32 ();  		if (len < 5) {  			return new int[0];  		}  		buf = new byte[len - 4];  		r.Read (buf' 0' len - 4);  	}  	var s = Encoding.Default.GetString (buf);  	Regex regex = new Regex ("^([^.]+)\\.([^\u0001]+)\u0001([^\r\n]+)\r$"' RegexOptions.Multiline);  	foreach (Match match in regex.Matches (s)) {  		string id = match.Groups [1].Value;  		string key = match.Groups [2].Value;  		string val = match.Groups [3].Value;  		if (!data.ContainsKey (id))  			data [id] = new Dictionary<string' string> ();  		data [id] [key] = val;  	}  	return data.Where (d => d.Value.ContainsKey ("hwnd")).Select (d => int.Parse (d.Value ["hwnd"])).ToArray ();  } catch (Exception) {  	return new int[0];  }  
Magic Number,Bililive_dm,SSTPProtocol,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\SSTPProtocol.cs,GetSSPhWnd,The following statement contains a magic number: try {  	MemoryMappedFile mmf = MemoryMappedFile.OpenExisting ("Sakura");  	var data = new Dictionary<string' Dictionary<string' string>> ();  	byte[] buf;  	//  	//                            Mutex mutex = Mutex.OpenExisting("SakuraFMO");  	//                            mutex.WaitOne();  	//                            bool mutexCreated;  	//                            Mutex mutex = new Mutex(true' "SakuraFMO"' out mutexCreated);  	using (MemoryMappedViewStream stream = mmf.CreateViewStream ()) {  		BinaryReader r = new BinaryReader (stream);  		int len = r.ReadInt32 ();  		if (len < 5) {  			return new int[0];  		}  		buf = new byte[len - 4];  		r.Read (buf' 0' len - 4);  	}  	var s = Encoding.Default.GetString (buf);  	Regex regex = new Regex ("^([^.]+)\\.([^\u0001]+)\u0001([^\r\n]+)\r$"' RegexOptions.Multiline);  	foreach (Match match in regex.Matches (s)) {  		string id = match.Groups [1].Value;  		string key = match.Groups [2].Value;  		string val = match.Groups [3].Value;  		if (!data.ContainsKey (id))  			data [id] = new Dictionary<string' string> ();  		data [id] [key] = val;  	}  	return data.Where (d => d.Value.ContainsKey ("hwnd")).Select (d => int.Parse (d.Value ["hwnd"])).ToArray ();  } catch (Exception) {  	return new int[0];  }  
Magic Number,Bililive_dm,SSTPProtocol,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\SSTPProtocol.cs,GetSSPhWnd,The following statement contains a magic number: try {  	MemoryMappedFile mmf = MemoryMappedFile.OpenExisting ("Sakura");  	var data = new Dictionary<string' Dictionary<string' string>> ();  	byte[] buf;  	//  	//                            Mutex mutex = Mutex.OpenExisting("SakuraFMO");  	//                            mutex.WaitOne();  	//                            bool mutexCreated;  	//                            Mutex mutex = new Mutex(true' "SakuraFMO"' out mutexCreated);  	using (MemoryMappedViewStream stream = mmf.CreateViewStream ()) {  		BinaryReader r = new BinaryReader (stream);  		int len = r.ReadInt32 ();  		if (len < 5) {  			return new int[0];  		}  		buf = new byte[len - 4];  		r.Read (buf' 0' len - 4);  	}  	var s = Encoding.Default.GetString (buf);  	Regex regex = new Regex ("^([^.]+)\\.([^\u0001]+)\u0001([^\r\n]+)\r$"' RegexOptions.Multiline);  	foreach (Match match in regex.Matches (s)) {  		string id = match.Groups [1].Value;  		string key = match.Groups [2].Value;  		string val = match.Groups [3].Value;  		if (!data.ContainsKey (id))  			data [id] = new Dictionary<string' string> ();  		data [id] [key] = val;  	}  	return data.Where (d => d.Value.ContainsKey ("hwnd")).Select (d => int.Parse (d.Value ["hwnd"])).ToArray ();  } catch (Exception) {  	return new int[0];  }  
Magic Number,Bililive_dm,SSTPProtocol,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\SSTPProtocol.cs,GetSSPhWnd,The following statement contains a magic number: try {  	MemoryMappedFile mmf = MemoryMappedFile.OpenExisting ("Sakura");  	var data = new Dictionary<string' Dictionary<string' string>> ();  	byte[] buf;  	//  	//                            Mutex mutex = Mutex.OpenExisting("SakuraFMO");  	//                            mutex.WaitOne();  	//                            bool mutexCreated;  	//                            Mutex mutex = new Mutex(true' "SakuraFMO"' out mutexCreated);  	using (MemoryMappedViewStream stream = mmf.CreateViewStream ()) {  		BinaryReader r = new BinaryReader (stream);  		int len = r.ReadInt32 ();  		if (len < 5) {  			return new int[0];  		}  		buf = new byte[len - 4];  		r.Read (buf' 0' len - 4);  	}  	var s = Encoding.Default.GetString (buf);  	Regex regex = new Regex ("^([^.]+)\\.([^\u0001]+)\u0001([^\r\n]+)\r$"' RegexOptions.Multiline);  	foreach (Match match in regex.Matches (s)) {  		string id = match.Groups [1].Value;  		string key = match.Groups [2].Value;  		string val = match.Groups [3].Value;  		if (!data.ContainsKey (id))  			data [id] = new Dictionary<string' string> ();  		data [id] [key] = val;  	}  	return data.Where (d => d.Value.ContainsKey ("hwnd")).Select (d => int.Parse (d.Value ["hwnd"])).ToArray ();  } catch (Exception) {  	return new int[0];  }  
Magic Number,Bililive_dm,SSTPProtocol,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\SSTPProtocol.cs,GetSSPhWnd,The following statement contains a magic number: try {  	MemoryMappedFile mmf = MemoryMappedFile.OpenExisting ("Sakura");  	var data = new Dictionary<string' Dictionary<string' string>> ();  	byte[] buf;  	//  	//                            Mutex mutex = Mutex.OpenExisting("SakuraFMO");  	//                            mutex.WaitOne();  	//                            bool mutexCreated;  	//                            Mutex mutex = new Mutex(true' "SakuraFMO"' out mutexCreated);  	using (MemoryMappedViewStream stream = mmf.CreateViewStream ()) {  		BinaryReader r = new BinaryReader (stream);  		int len = r.ReadInt32 ();  		if (len < 5) {  			return new int[0];  		}  		buf = new byte[len - 4];  		r.Read (buf' 0' len - 4);  	}  	var s = Encoding.Default.GetString (buf);  	Regex regex = new Regex ("^([^.]+)\\.([^\u0001]+)\u0001([^\r\n]+)\r$"' RegexOptions.Multiline);  	foreach (Match match in regex.Matches (s)) {  		string id = match.Groups [1].Value;  		string key = match.Groups [2].Value;  		string val = match.Groups [3].Value;  		if (!data.ContainsKey (id))  			data [id] = new Dictionary<string' string> ();  		data [id] [key] = val;  	}  	return data.Where (d => d.Value.ContainsKey ("hwnd")).Select (d => int.Parse (d.Value ["hwnd"])).ToArray ();  } catch (Exception) {  	return new int[0];  }  
Magic Number,Bililive_dm,SSTPProtocol,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\SSTPProtocol.cs,GetSSPhWnd,The following statement contains a magic number: using (MemoryMappedViewStream stream = mmf.CreateViewStream ()) {  	BinaryReader r = new BinaryReader (stream);  	int len = r.ReadInt32 ();  	if (len < 5) {  		return new int[0];  	}  	buf = new byte[len - 4];  	r.Read (buf' 0' len - 4);  }  
Magic Number,Bililive_dm,SSTPProtocol,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\SSTPProtocol.cs,GetSSPhWnd,The following statement contains a magic number: using (MemoryMappedViewStream stream = mmf.CreateViewStream ()) {  	BinaryReader r = new BinaryReader (stream);  	int len = r.ReadInt32 ();  	if (len < 5) {  		return new int[0];  	}  	buf = new byte[len - 4];  	r.Read (buf' 0' len - 4);  }  
Magic Number,Bililive_dm,SSTPProtocol,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\SSTPProtocol.cs,GetSSPhWnd,The following statement contains a magic number: using (MemoryMappedViewStream stream = mmf.CreateViewStream ()) {  	BinaryReader r = new BinaryReader (stream);  	int len = r.ReadInt32 ();  	if (len < 5) {  		return new int[0];  	}  	buf = new byte[len - 4];  	r.Read (buf' 0' len - 4);  }  
Magic Number,Bililive_dm,SSTPProtocol,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\SSTPProtocol.cs,GetSSPhWnd,The following statement contains a magic number: if (len < 5) {  	return new int[0];  }  
Magic Number,Bililive_dm,SSTPProtocol,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\SSTPProtocol.cs,GetSSPhWnd,The following statement contains a magic number: buf = new byte[len - 4];  
Magic Number,Bililive_dm,SSTPProtocol,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\SSTPProtocol.cs,GetSSPhWnd,The following statement contains a magic number: r.Read (buf' 0' len - 4);  
Magic Number,Bililive_dm,SSTPProtocol,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\SSTPProtocol.cs,GetSSPhWnd,The following statement contains a magic number: foreach (Match match in regex.Matches (s)) {  	string id = match.Groups [1].Value;  	string key = match.Groups [2].Value;  	string val = match.Groups [3].Value;  	if (!data.ContainsKey (id))  		data [id] = new Dictionary<string' string> ();  	data [id] [key] = val;  }  
Magic Number,Bililive_dm,SSTPProtocol,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\SSTPProtocol.cs,GetSSPhWnd,The following statement contains a magic number: foreach (Match match in regex.Matches (s)) {  	string id = match.Groups [1].Value;  	string key = match.Groups [2].Value;  	string val = match.Groups [3].Value;  	if (!data.ContainsKey (id))  		data [id] = new Dictionary<string' string> ();  	data [id] [key] = val;  }  
Magic Number,Bililive_dm,SSTPProtocol,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\SSTPProtocol.cs,sendWindowsStringMessage,The following statement contains a magic number: if (hWnd > 0) {  	byte[] data = System.Text.Encoding.UTF8.GetBytes (msg);  	IntPtr ptr = Marshal.AllocHGlobal (data.Length);  	try {  		Marshal.Copy (data' 0' ptr' data.Length);  		int len = data.Length;  		COPYDATASTRUCT cds;  		cds.dwData = (IntPtr)9801;  		cds.lpData = ptr;  		cds.cbData = len + 1;  		result = SendMessage (hWnd' WM_COPYDATA' wParam' ref cds);  		//deal with ptr  	} finally {  		Marshal.FreeHGlobal (ptr);  	}  }  
Magic Number,Bililive_dm,SSTPProtocol,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\SSTPProtocol.cs,sendWindowsStringMessage,The following statement contains a magic number: try {  	Marshal.Copy (data' 0' ptr' data.Length);  	int len = data.Length;  	COPYDATASTRUCT cds;  	cds.dwData = (IntPtr)9801;  	cds.lpData = ptr;  	cds.cbData = len + 1;  	result = SendMessage (hWnd' WM_COPYDATA' wParam' ref cds);  	//deal with ptr  } finally {  	Marshal.FreeHGlobal (ptr);  }  
Magic Number,Bililive_dm,SSTPProtocol,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\SSTPProtocol.cs,sendWindowsStringMessage,The following statement contains a magic number: cds.dwData = (IntPtr)9801;  
Magic Number,Bililive_dm,Utils,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\Store.cs,GetBroadcastAddress,The following statement contains a magic number: for (int i = 0; i < broadcastAddress.Length; i++) {  	broadcastAddress [i] = (byte)(ipAdressBytes [i] | (subnetMaskBytes [i] ^ 255));  }  
Magic Number,Bililive_dm,Utils,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\Store.cs,GetBroadcastAddress,The following statement contains a magic number: broadcastAddress [i] = (byte)(ipAdressBytes [i] | (subnetMaskBytes [i] ^ 255));  
Magic Number,Bililive_dm,WtfDanmakuWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\WtfDanmakuWindow.cs,AddDanmaku,The following statement contains a magic number: WTF_AddLiveDanmaku (_wtf' (int)type' 0' comment' 25' (int)color' 0' 0);  
Magic Number,Bililive_dm,WtfDanmakuWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\WtfDanmakuWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (915' 534);  
Magic Number,Bililive_dm,WtfDanmakuWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\WtfDanmakuWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (915' 534);  
Magic Number,Bililive_dm,OutlinedTextBlock,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\OutlinedTextBlock.cs,MeasureOverride,The following statement contains a magic number: this.formattedText.MaxTextWidth = Math.Min (3579139' availableSize.Width);  
Magic Number,Bililive_dm,DanmakuTextControl,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\DanmakuTextControl.xaml.cs,DanmakuTextControl,The following statement contains a magic number: Storyboard.SetTarget (sb.Children [2]' this);  
Magic Number,Bililive_dm,DanmakuTextControl,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\DanmakuTextControl.xaml.cs,DanmakuTextControl,The following statement contains a magic number: (sb.Children [1] as DoubleAnimationUsingKeyFrames).KeyFrames [2].KeyTime = KeyTime.FromTimeSpan (new TimeSpan (Convert.ToInt64 ((Store.MainOverlayEffect2 + Store.MainOverlayEffect1) * TimeSpan.TicksPerSecond)));  
Magic Number,Bililive_dm,DanmakuTextControl,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\DanmakuTextControl.xaml.cs,DanmakuTextControl,The following statement contains a magic number: (sb.Children [2] as DoubleAnimationUsingKeyFrames).KeyFrames [0].KeyTime = KeyTime.FromTimeSpan (new TimeSpan (Convert.ToInt64 ((Store.MainOverlayEffect3 + Store.MainOverlayEffect2 + Store.MainOverlayEffect1) * TimeSpan.TicksPerSecond)));  
Magic Number,Bililive_dm,DanmakuTextControl,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\DanmakuTextControl.xaml.cs,DanmakuTextControl,The following statement contains a magic number: (sb.Children [2] as DoubleAnimationUsingKeyFrames).KeyFrames [1].KeyTime = KeyTime.FromTimeSpan (new TimeSpan (Convert.ToInt64 ((Store.MainOverlayEffect4 + Store.MainOverlayEffect3 + Store.MainOverlayEffect2 + Store.MainOverlayEffect1) * TimeSpan.TicksPerSecond)));  
Magic Number,Bililive_dm,WpfDanmakuOverlay,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\WpfDanmakuOverlay.xaml.cs,WpfDanmakuOverlay,The following statement contains a magic number: this.Height = 550;  
Magic Number,Bililive_dm,WpfDanmakuOverlay,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\WpfDanmakuOverlay.xaml.cs,AddDanmaku,The following statement contains a magic number: if ((this as Window).CheckAccess ()) {  	//<Storyboard x:Key="Storyboard1">  	//			<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="fullScreenDanmaku">  	//				<EasingThicknessKeyFrame KeyTime="0" Value="3'0'0'0"/>  	//				<EasingThicknessKeyFrame KeyTime="0:0:1.9" Value="220'0'0'0"/>  	//			</ThicknessAnimationUsingKeyFrames>  	//		</Storyboard>  	lock (LayoutRoot.Children) {  		var v = new FullScreenDanmaku ();  		v.Text.Text = comment;  		v.ChangeHeight ();  		var wd = v.Text.DesiredSize.Width;  		Dictionary<double' bool> dd = new Dictionary<double' bool> ();  		dd.Add (0' true);  		foreach (var child in LayoutRoot.Children) {  			if (child is FullScreenDanmaku) {  				var c = child as FullScreenDanmaku;  				if (!dd.ContainsKey (Convert.ToInt32 (c.Margin.Top))) {  					dd.Add (Convert.ToInt32 (c.Margin.Top)' true);  				}  				if (c.Margin.Left > (SystemParameters.PrimaryScreenWidth - wd - 50)) {  					dd [Convert.ToInt32 (c.Margin.Top)] = false;  				}  			}  		}  		double top;  		if (dd.All (p => p.Value == false)) {  			top = dd.Max (p => p.Key) + v.Text.DesiredSize.Height;  		} else {  			top = dd.Where (p => p.Value).Min (p => p.Key);  		}  		// v.Height = v.Text.DesiredSize.Height;  		// v.Width = v.Text.DesiredSize.Width;  		Storyboard s = new Storyboard ();  		Duration duration = new Duration (TimeSpan.FromTicks (Convert.ToInt64 ((SystemParameters.PrimaryScreenWidth + wd) / Store.FullOverlayEffect1 * TimeSpan.TicksPerSecond)));  		ThicknessAnimation f = new ThicknessAnimation (new Thickness (SystemParameters.PrimaryScreenWidth' top' 0' 0)' new Thickness (-wd' top' 0' 0)' duration);  		s.Children.Add (f);  		s.Duration = duration;  		Storyboard.SetTarget (f' v);  		Storyboard.SetTargetProperty (f' new PropertyPath ("(FrameworkElement.Margin)"));  		LayoutRoot.Children.Add (v);  		s.Completed += s_Completed;  		s.Begin ();  	}  } else {  	this.Dispatcher.BeginInvoke (DispatcherPriority.Normal' new Action (() => (this as IDanmakuWindow).AddDanmaku (type' comment' color)));  }  
Magic Number,Bililive_dm,WpfDanmakuOverlay,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\WpfDanmakuOverlay.xaml.cs,AddDanmaku,The following statement contains a magic number: lock (LayoutRoot.Children) {  	var v = new FullScreenDanmaku ();  	v.Text.Text = comment;  	v.ChangeHeight ();  	var wd = v.Text.DesiredSize.Width;  	Dictionary<double' bool> dd = new Dictionary<double' bool> ();  	dd.Add (0' true);  	foreach (var child in LayoutRoot.Children) {  		if (child is FullScreenDanmaku) {  			var c = child as FullScreenDanmaku;  			if (!dd.ContainsKey (Convert.ToInt32 (c.Margin.Top))) {  				dd.Add (Convert.ToInt32 (c.Margin.Top)' true);  			}  			if (c.Margin.Left > (SystemParameters.PrimaryScreenWidth - wd - 50)) {  				dd [Convert.ToInt32 (c.Margin.Top)] = false;  			}  		}  	}  	double top;  	if (dd.All (p => p.Value == false)) {  		top = dd.Max (p => p.Key) + v.Text.DesiredSize.Height;  	} else {  		top = dd.Where (p => p.Value).Min (p => p.Key);  	}  	// v.Height = v.Text.DesiredSize.Height;  	// v.Width = v.Text.DesiredSize.Width;  	Storyboard s = new Storyboard ();  	Duration duration = new Duration (TimeSpan.FromTicks (Convert.ToInt64 ((SystemParameters.PrimaryScreenWidth + wd) / Store.FullOverlayEffect1 * TimeSpan.TicksPerSecond)));  	ThicknessAnimation f = new ThicknessAnimation (new Thickness (SystemParameters.PrimaryScreenWidth' top' 0' 0)' new Thickness (-wd' top' 0' 0)' duration);  	s.Children.Add (f);  	s.Duration = duration;  	Storyboard.SetTarget (f' v);  	Storyboard.SetTargetProperty (f' new PropertyPath ("(FrameworkElement.Margin)"));  	LayoutRoot.Children.Add (v);  	s.Completed += s_Completed;  	s.Begin ();  }  
Magic Number,Bililive_dm,WpfDanmakuOverlay,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\WpfDanmakuOverlay.xaml.cs,AddDanmaku,The following statement contains a magic number: foreach (var child in LayoutRoot.Children) {  	if (child is FullScreenDanmaku) {  		var c = child as FullScreenDanmaku;  		if (!dd.ContainsKey (Convert.ToInt32 (c.Margin.Top))) {  			dd.Add (Convert.ToInt32 (c.Margin.Top)' true);  		}  		if (c.Margin.Left > (SystemParameters.PrimaryScreenWidth - wd - 50)) {  			dd [Convert.ToInt32 (c.Margin.Top)] = false;  		}  	}  }  
Magic Number,Bililive_dm,WpfDanmakuOverlay,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\WpfDanmakuOverlay.xaml.cs,AddDanmaku,The following statement contains a magic number: if (child is FullScreenDanmaku) {  	var c = child as FullScreenDanmaku;  	if (!dd.ContainsKey (Convert.ToInt32 (c.Margin.Top))) {  		dd.Add (Convert.ToInt32 (c.Margin.Top)' true);  	}  	if (c.Margin.Left > (SystemParameters.PrimaryScreenWidth - wd - 50)) {  		dd [Convert.ToInt32 (c.Margin.Top)] = false;  	}  }  
Magic Number,Bililive_dm,WpfDanmakuOverlay,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\WpfDanmakuOverlay.xaml.cs,AddDanmaku,The following statement contains a magic number: if (c.Margin.Left > (SystemParameters.PrimaryScreenWidth - wd - 50)) {  	dd [Convert.ToInt32 (c.Margin.Top)] = false;  }  
Magic Number,Bililive_dm,MainOverlay,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainOverlay.xaml.cs,SetWindowLong,The following statement contains a magic number: if (IntPtr.Size == 4) {  	// use SetWindowLong  	Int32 tempResult = IntSetWindowLong (hWnd' nIndex' IntPtrToInt32 (dwNewLong));  	error = Marshal.GetLastWin32Error ();  	result = new IntPtr (tempResult);  } else {  	// use SetWindowLongPtr  	result = IntSetWindowLongPtr (hWnd' nIndex' dwNewLong);  	error = Marshal.GetLastWin32Error ();  }  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: dt = dt.AddSeconds (seconds * 2);  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: if (DateTime.Today.Month == 4 && DateTime.Today.Day == 1) {  	//MAGIC!  	timer_magic = new DispatcherTimer (new TimeSpan (0' 30' 0)' DispatcherPriority.Normal' (sender' args) => {  		Magic ();  	}' Dispatcher);  	timer_magic.Start ();  }  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: if (DateTime.Today.Month == 4 && DateTime.Today.Day == 1) {  	//MAGIC!  	timer_magic = new DispatcherTimer (new TimeSpan (0' 30' 0)' DispatcherPriority.Normal' (sender' args) => {  		Magic ();  	}' Dispatcher);  	timer_magic.Start ();  }  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: timer_magic = new DispatcherTimer (new TimeSpan (0' 30' 0)' DispatcherPriority.Normal' (sender' args) => {  	Magic ();  }' Dispatcher);  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: releaseThread = new Thread (() => {  	while (true) {  		Utils.ReleaseMemory (true);  		Thread.Sleep (30 * 1000);  	}  });  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: releaseThread = new Thread (() => {  	while (true) {  		Utils.ReleaseMemory (true);  		Thread.Sleep (30 * 1000);  	}  });  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: while (true) {  	Utils.ReleaseMemory (true);  	Thread.Sleep (30 * 1000);  }  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: while (true) {  	Utils.ReleaseMemory (true);  	Thread.Sleep (30 * 1000);  }  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Thread.Sleep (30 * 1000);  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Thread.Sleep (30 * 1000);  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: ProcDanmakuThread = new Thread (() => {  	while (true) {  		lock (_danmakuQueue) {  			var count = 0;  			if (_danmakuQueue.Any ()) {  				count = (int)Math.Ceiling (_danmakuQueue.Count / 30.0);  			}  			for (var i = 0; i < count; i++) {  				if (_danmakuQueue.Any ()) {  					var danmaku = _danmakuQueue.Dequeue ();  					ProcDanmaku (danmaku);  					if (danmaku.MsgType == MsgTypeEnum.Comment) {  						lock (Static) {  							Static.DanmakuCountShow += 1;  							Static.AddUser (danmaku.UserName);  						}  					}  				}  			}  		}  		Thread.Sleep (30);  	}  }) {  	IsBackground = true  };  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: ProcDanmakuThread = new Thread (() => {  	while (true) {  		lock (_danmakuQueue) {  			var count = 0;  			if (_danmakuQueue.Any ()) {  				count = (int)Math.Ceiling (_danmakuQueue.Count / 30.0);  			}  			for (var i = 0; i < count; i++) {  				if (_danmakuQueue.Any ()) {  					var danmaku = _danmakuQueue.Dequeue ();  					ProcDanmaku (danmaku);  					if (danmaku.MsgType == MsgTypeEnum.Comment) {  						lock (Static) {  							Static.DanmakuCountShow += 1;  							Static.AddUser (danmaku.UserName);  						}  					}  				}  			}  		}  		Thread.Sleep (30);  	}  }) {  	IsBackground = true  };  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: while (true) {  	lock (_danmakuQueue) {  		var count = 0;  		if (_danmakuQueue.Any ()) {  			count = (int)Math.Ceiling (_danmakuQueue.Count / 30.0);  		}  		for (var i = 0; i < count; i++) {  			if (_danmakuQueue.Any ()) {  				var danmaku = _danmakuQueue.Dequeue ();  				ProcDanmaku (danmaku);  				if (danmaku.MsgType == MsgTypeEnum.Comment) {  					lock (Static) {  						Static.DanmakuCountShow += 1;  						Static.AddUser (danmaku.UserName);  					}  				}  			}  		}  	}  	Thread.Sleep (30);  }  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: while (true) {  	lock (_danmakuQueue) {  		var count = 0;  		if (_danmakuQueue.Any ()) {  			count = (int)Math.Ceiling (_danmakuQueue.Count / 30.0);  		}  		for (var i = 0; i < count; i++) {  			if (_danmakuQueue.Any ()) {  				var danmaku = _danmakuQueue.Dequeue ();  				ProcDanmaku (danmaku);  				if (danmaku.MsgType == MsgTypeEnum.Comment) {  					lock (Static) {  						Static.DanmakuCountShow += 1;  						Static.AddUser (danmaku.UserName);  					}  				}  			}  		}  	}  	Thread.Sleep (30);  }  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: lock (_danmakuQueue) {  	var count = 0;  	if (_danmakuQueue.Any ()) {  		count = (int)Math.Ceiling (_danmakuQueue.Count / 30.0);  	}  	for (var i = 0; i < count; i++) {  		if (_danmakuQueue.Any ()) {  			var danmaku = _danmakuQueue.Dequeue ();  			ProcDanmaku (danmaku);  			if (danmaku.MsgType == MsgTypeEnum.Comment) {  				lock (Static) {  					Static.DanmakuCountShow += 1;  					Static.AddUser (danmaku.UserName);  				}  			}  		}  	}  }  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: if (_danmakuQueue.Any ()) {  	count = (int)Math.Ceiling (_danmakuQueue.Count / 30.0);  }  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: count = (int)Math.Ceiling (_danmakuQueue.Count / 30.0);  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Thread.Sleep (30);  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: for (var i = 0; i < 100; i++) {  	_messageQueue.Add ("");  }  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow_Loaded,The following statement contains a magic number: while (true) {  	var r = new Random ();  	lock (_danmakuQueue) {  		for (var i = 0; i < bbb; i++) {  			var a1 = r.NextDouble ().ToString ();  			var b1 = r.NextDouble ().ToString ();  			_danmakuQueue.Enqueue (new DanmakuModel {  				UserName = "asf"'  				CommentText = b1'  				MsgType = MsgTypeEnum.Comment  			});  		}  	}  	lock (Static) {  		Static.DanmakuCountRaw += bbb;  	}  	Thread.Sleep (1000);  }  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,MainWindow_Loaded,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,connbtn_Click,The following statement contains a magic number: if (roomId > 0) {  	ConnBtn.IsEnabled = false;  	DisconnBtn.IsEnabled = false;  	var connectresult = false;  	var trytime = 0;  	logging ("正在连接");  	if (debug_mode) {  		logging ("连接房间号：" + roomId);  	}  	connectresult = await b.ConnectAsync (roomId);  	if (!connectresult && b.Error != null)// 如果连接不成功并且出错了  	 {  		logging ("出错信息：" + b.Error.ToString ());  	}  	while (!connectresult && sender == null && AutoReconnect.IsChecked == true) {  		if (trytime > 5)  			break;  		else  			trytime++;  		await TaskEx.Delay (1000);  		// 稍等一下  		logging ("正在连接");  		connectresult = await b.ConnectAsync (roomId);  	}  	if (connectresult) {  		errorlogging ("連接成功");  		AddDMText ("彈幕姬報告"' "連接成功"' true);  		SendSSP ("連接成功");  		Ranking.Clear ();  		SaveRoomId (roomId);  		foreach (var dmPlugin in Plugins) {  			new Thread (() => {  				try {  					dmPlugin.MainConnected (roomId);  				} catch (Exception ex) {  					Utils.PluginExceptionHandler (ex' dmPlugin);  				}  			}).Start ();  		}  	} else {  		logging ("連接失敗");  		SendSSP ("連接失敗");  		AddDMText ("彈幕姬報告"' "連接失敗"' true);  		ConnBtn.IsEnabled = true;  	}  	DisconnBtn.IsEnabled = true;  } else {  	MessageBox.Show ("ID非法");  }  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,connbtn_Click,The following statement contains a magic number: if (roomId > 0) {  	ConnBtn.IsEnabled = false;  	DisconnBtn.IsEnabled = false;  	var connectresult = false;  	var trytime = 0;  	logging ("正在连接");  	if (debug_mode) {  		logging ("连接房间号：" + roomId);  	}  	connectresult = await b.ConnectAsync (roomId);  	if (!connectresult && b.Error != null)// 如果连接不成功并且出错了  	 {  		logging ("出错信息：" + b.Error.ToString ());  	}  	while (!connectresult && sender == null && AutoReconnect.IsChecked == true) {  		if (trytime > 5)  			break;  		else  			trytime++;  		await TaskEx.Delay (1000);  		// 稍等一下  		logging ("正在连接");  		connectresult = await b.ConnectAsync (roomId);  	}  	if (connectresult) {  		errorlogging ("連接成功");  		AddDMText ("彈幕姬報告"' "連接成功"' true);  		SendSSP ("連接成功");  		Ranking.Clear ();  		SaveRoomId (roomId);  		foreach (var dmPlugin in Plugins) {  			new Thread (() => {  				try {  					dmPlugin.MainConnected (roomId);  				} catch (Exception ex) {  					Utils.PluginExceptionHandler (ex' dmPlugin);  				}  			}).Start ();  		}  	} else {  		logging ("連接失敗");  		SendSSP ("連接失敗");  		AddDMText ("彈幕姬報告"' "連接失敗"' true);  		ConnBtn.IsEnabled = true;  	}  	DisconnBtn.IsEnabled = true;  } else {  	MessageBox.Show ("ID非法");  }  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,connbtn_Click,The following statement contains a magic number: while (!connectresult && sender == null && AutoReconnect.IsChecked == true) {  	if (trytime > 5)  		break;  	else  		trytime++;  	await TaskEx.Delay (1000);  	// 稍等一下  	logging ("正在连接");  	connectresult = await b.ConnectAsync (roomId);  }  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,connbtn_Click,The following statement contains a magic number: while (!connectresult && sender == null && AutoReconnect.IsChecked == true) {  	if (trytime > 5)  		break;  	else  		trytime++;  	await TaskEx.Delay (1000);  	// 稍等一下  	logging ("正在连接");  	connectresult = await b.ConnectAsync (roomId);  }  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,connbtn_Click,The following statement contains a magic number: if (trytime > 5)  	break;  else  	trytime++;  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,connbtn_Click,The following statement contains a magic number: await TaskEx.Delay (1000);  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,ProcDanmaku,The following statement contains a magic number: switch (danmakuModel.MsgType) {  case MsgTypeEnum.Comment:  	logging ("收到彈幕:" + (danmakuModel.isAdmin ? "[管]" : "") + (danmakuModel.isVIP ? "[爷]" : "") + danmakuModel.UserName + " 說: " + danmakuModel.CommentText);  	AddDMText ((danmakuModel.isAdmin ? "[管]" : "") + (danmakuModel.isVIP ? "[爷]" : "") + danmakuModel.UserName' danmakuModel.CommentText);  	SendSSP (string.Format (@"\_q{0}\n\_q\f[height'20]{1}"' (danmakuModel.isAdmin ? "[管]" : "") + (danmakuModel.isVIP ? "[爷]" : "") + danmakuModel.UserName' danmakuModel.CommentText));  	break;  case MsgTypeEnum.GiftTop:  	foreach (var giftRank in danmakuModel.GiftRanking) {  		var query = Ranking.Where (p => p.uid == giftRank.uid);  		if (query.Any ()) {  			var f = query.First ();  			Dispatcher.BeginInvoke (new Action (() => f.coin = giftRank.coin));  		} else {  			Dispatcher.BeginInvoke (new Action (() => Ranking.Add (new GiftRank {  				uid = giftRank.uid'  				coin = giftRank.coin'  				UserName = giftRank.UserName  			})));  		}  	}  	break;  case MsgTypeEnum.GiftSend: {  	lock (SessionItems) {  		var query = SessionItems.Where (p => p.UserName == danmakuModel.UserName && p.Item == danmakuModel.GiftName).ToArray ();  		if (query.Any ()) {  			Dispatcher.BeginInvoke (new Action (() => query.First ().num += Convert.ToDecimal (danmakuModel.GiftCount)));  		} else {  			Dispatcher.BeginInvoke (new Action (() => {  				lock (SessionItems) {  					SessionItems.Add (new SessionItem {  						Item = danmakuModel.GiftName'  						UserName = danmakuModel.UserName'  						num = Convert.ToDecimal (danmakuModel.GiftCount)  					});  				}  			}));  		}  		logging ("收到道具:" + danmakuModel.UserName + " 赠送的: " + danmakuModel.GiftName + " x " + danmakuModel.GiftCount);  		Dispatcher.BeginInvoke (new Action (() => {  			if (ShowItem.IsChecked == true) {  				AddDMText ("收到道具"' danmakuModel.UserName + " 赠送的: " + danmakuModel.GiftName + " x " + danmakuModel.GiftCount' true);  			}  		}));  		break;  	}  }  case MsgTypeEnum.GuardBuy: {  	logging ("上船:" + danmakuModel.UserName + " 购买了 " + danmakuModel.GiftName + " x " + danmakuModel.GiftCount);  	Dispatcher.BeginInvoke (new Action (() => {  		if (ShowItem.IsChecked == true) {  			AddDMText ("上船"' danmakuModel.UserName + " 购买了 " + danmakuModel.GiftName + " x " + danmakuModel.GiftCount' true);  		}  	}));  	break;  }  case MsgTypeEnum.Welcome: {  	logging ("欢迎老爷" + (danmakuModel.isAdmin ? "和管理" : "") + ": " + danmakuModel.UserName + " 进入直播间");  	Dispatcher.BeginInvoke (new Action (() => {  		if (ShowItem.IsChecked == true) {  			AddDMText ("欢迎老爷" + (danmakuModel.isAdmin ? "和管理" : "")' danmakuModel.UserName + " 进入直播间"' true);  		}  	}));  	break;  }  case MsgTypeEnum.WelcomeGuard: {  	string guard_text = string.Empty;  	switch (danmakuModel.UserGuardLevel) {  	case 1:  		guard_text = "总督";  		break;  	case 2:  		guard_text = "提督";  		break;  	case 3:  		guard_text = "舰长";  		break;  	}  	logging ("欢迎" + guard_text + ": " + danmakuModel.UserName + " 进入直播间");  	Dispatcher.BeginInvoke (new Action (() => {  		if (ShowItem.IsChecked == true) {  			AddDMText ("欢迎" + guard_text' danmakuModel.UserName + " 进入直播间"' true);  		}  	}));  	break;  }  }  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,ProcDanmaku,The following statement contains a magic number: switch (danmakuModel.MsgType) {  case MsgTypeEnum.Comment:  	logging ("收到彈幕:" + (danmakuModel.isAdmin ? "[管]" : "") + (danmakuModel.isVIP ? "[爷]" : "") + danmakuModel.UserName + " 說: " + danmakuModel.CommentText);  	AddDMText ((danmakuModel.isAdmin ? "[管]" : "") + (danmakuModel.isVIP ? "[爷]" : "") + danmakuModel.UserName' danmakuModel.CommentText);  	SendSSP (string.Format (@"\_q{0}\n\_q\f[height'20]{1}"' (danmakuModel.isAdmin ? "[管]" : "") + (danmakuModel.isVIP ? "[爷]" : "") + danmakuModel.UserName' danmakuModel.CommentText));  	break;  case MsgTypeEnum.GiftTop:  	foreach (var giftRank in danmakuModel.GiftRanking) {  		var query = Ranking.Where (p => p.uid == giftRank.uid);  		if (query.Any ()) {  			var f = query.First ();  			Dispatcher.BeginInvoke (new Action (() => f.coin = giftRank.coin));  		} else {  			Dispatcher.BeginInvoke (new Action (() => Ranking.Add (new GiftRank {  				uid = giftRank.uid'  				coin = giftRank.coin'  				UserName = giftRank.UserName  			})));  		}  	}  	break;  case MsgTypeEnum.GiftSend: {  	lock (SessionItems) {  		var query = SessionItems.Where (p => p.UserName == danmakuModel.UserName && p.Item == danmakuModel.GiftName).ToArray ();  		if (query.Any ()) {  			Dispatcher.BeginInvoke (new Action (() => query.First ().num += Convert.ToDecimal (danmakuModel.GiftCount)));  		} else {  			Dispatcher.BeginInvoke (new Action (() => {  				lock (SessionItems) {  					SessionItems.Add (new SessionItem {  						Item = danmakuModel.GiftName'  						UserName = danmakuModel.UserName'  						num = Convert.ToDecimal (danmakuModel.GiftCount)  					});  				}  			}));  		}  		logging ("收到道具:" + danmakuModel.UserName + " 赠送的: " + danmakuModel.GiftName + " x " + danmakuModel.GiftCount);  		Dispatcher.BeginInvoke (new Action (() => {  			if (ShowItem.IsChecked == true) {  				AddDMText ("收到道具"' danmakuModel.UserName + " 赠送的: " + danmakuModel.GiftName + " x " + danmakuModel.GiftCount' true);  			}  		}));  		break;  	}  }  case MsgTypeEnum.GuardBuy: {  	logging ("上船:" + danmakuModel.UserName + " 购买了 " + danmakuModel.GiftName + " x " + danmakuModel.GiftCount);  	Dispatcher.BeginInvoke (new Action (() => {  		if (ShowItem.IsChecked == true) {  			AddDMText ("上船"' danmakuModel.UserName + " 购买了 " + danmakuModel.GiftName + " x " + danmakuModel.GiftCount' true);  		}  	}));  	break;  }  case MsgTypeEnum.Welcome: {  	logging ("欢迎老爷" + (danmakuModel.isAdmin ? "和管理" : "") + ": " + danmakuModel.UserName + " 进入直播间");  	Dispatcher.BeginInvoke (new Action (() => {  		if (ShowItem.IsChecked == true) {  			AddDMText ("欢迎老爷" + (danmakuModel.isAdmin ? "和管理" : "")' danmakuModel.UserName + " 进入直播间"' true);  		}  	}));  	break;  }  case MsgTypeEnum.WelcomeGuard: {  	string guard_text = string.Empty;  	switch (danmakuModel.UserGuardLevel) {  	case 1:  		guard_text = "总督";  		break;  	case 2:  		guard_text = "提督";  		break;  	case 3:  		guard_text = "舰长";  		break;  	}  	logging ("欢迎" + guard_text + ": " + danmakuModel.UserName + " 进入直播间");  	Dispatcher.BeginInvoke (new Action (() => {  		if (ShowItem.IsChecked == true) {  			AddDMText ("欢迎" + guard_text' danmakuModel.UserName + " 进入直播间"' true);  		}  	}));  	break;  }  }  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,ProcDanmaku,The following statement contains a magic number: switch (danmakuModel.UserGuardLevel) {  case 1:  	guard_text = "总督";  	break;  case 2:  	guard_text = "提督";  	break;  case 3:  	guard_text = "舰长";  	break;  }  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,ProcDanmaku,The following statement contains a magic number: switch (danmakuModel.UserGuardLevel) {  case 1:  	guard_text = "总督";  	break;  case 2:  	guard_text = "提督";  	break;  case 3:  	guard_text = "舰长";  	break;  }  
Magic Number,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,Test_OnClick,The following statement contains a magic number: if (n > 98) {  	AddDMText ("彈幕姬報告"' "這不是個測試"' false);  } else {  	AddDMText ("彈幕姬報告"' "這是一個測試"' false);  }  
Missing Default,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,ProcDanmaku,The following switch statement is missing a default case: switch (danmakuModel.MsgType) {  case MsgTypeEnum.Comment:  	logging ("收到彈幕:" + (danmakuModel.isAdmin ? "[管]" : "") + (danmakuModel.isVIP ? "[爷]" : "") + danmakuModel.UserName + " 說: " + danmakuModel.CommentText);  	AddDMText ((danmakuModel.isAdmin ? "[管]" : "") + (danmakuModel.isVIP ? "[爷]" : "") + danmakuModel.UserName' danmakuModel.CommentText);  	SendSSP (string.Format (@"\_q{0}\n\_q\f[height'20]{1}"' (danmakuModel.isAdmin ? "[管]" : "") + (danmakuModel.isVIP ? "[爷]" : "") + danmakuModel.UserName' danmakuModel.CommentText));  	break;  case MsgTypeEnum.GiftTop:  	foreach (var giftRank in danmakuModel.GiftRanking) {  		var query = Ranking.Where (p => p.uid == giftRank.uid);  		if (query.Any ()) {  			var f = query.First ();  			Dispatcher.BeginInvoke (new Action (() => f.coin = giftRank.coin));  		} else {  			Dispatcher.BeginInvoke (new Action (() => Ranking.Add (new GiftRank {  				uid = giftRank.uid'  				coin = giftRank.coin'  				UserName = giftRank.UserName  			})));  		}  	}  	break;  case MsgTypeEnum.GiftSend: {  	lock (SessionItems) {  		var query = SessionItems.Where (p => p.UserName == danmakuModel.UserName && p.Item == danmakuModel.GiftName).ToArray ();  		if (query.Any ()) {  			Dispatcher.BeginInvoke (new Action (() => query.First ().num += Convert.ToDecimal (danmakuModel.GiftCount)));  		} else {  			Dispatcher.BeginInvoke (new Action (() => {  				lock (SessionItems) {  					SessionItems.Add (new SessionItem {  						Item = danmakuModel.GiftName'  						UserName = danmakuModel.UserName'  						num = Convert.ToDecimal (danmakuModel.GiftCount)  					});  				}  			}));  		}  		logging ("收到道具:" + danmakuModel.UserName + " 赠送的: " + danmakuModel.GiftName + " x " + danmakuModel.GiftCount);  		Dispatcher.BeginInvoke (new Action (() => {  			if (ShowItem.IsChecked == true) {  				AddDMText ("收到道具"' danmakuModel.UserName + " 赠送的: " + danmakuModel.GiftName + " x " + danmakuModel.GiftCount' true);  			}  		}));  		break;  	}  }  case MsgTypeEnum.GuardBuy: {  	logging ("上船:" + danmakuModel.UserName + " 购买了 " + danmakuModel.GiftName + " x " + danmakuModel.GiftCount);  	Dispatcher.BeginInvoke (new Action (() => {  		if (ShowItem.IsChecked == true) {  			AddDMText ("上船"' danmakuModel.UserName + " 购买了 " + danmakuModel.GiftName + " x " + danmakuModel.GiftCount' true);  		}  	}));  	break;  }  case MsgTypeEnum.Welcome: {  	logging ("欢迎老爷" + (danmakuModel.isAdmin ? "和管理" : "") + ": " + danmakuModel.UserName + " 进入直播间");  	Dispatcher.BeginInvoke (new Action (() => {  		if (ShowItem.IsChecked == true) {  			AddDMText ("欢迎老爷" + (danmakuModel.isAdmin ? "和管理" : "")' danmakuModel.UserName + " 进入直播间"' true);  		}  	}));  	break;  }  case MsgTypeEnum.WelcomeGuard: {  	string guard_text = string.Empty;  	switch (danmakuModel.UserGuardLevel) {  	case 1:  		guard_text = "总督";  		break;  	case 2:  		guard_text = "提督";  		break;  	case 3:  		guard_text = "舰长";  		break;  	}  	logging ("欢迎" + guard_text + ": " + danmakuModel.UserName + " 进入直播间");  	Dispatcher.BeginInvoke (new Action (() => {  		if (ShowItem.IsChecked == true) {  			AddDMText ("欢迎" + guard_text' danmakuModel.UserName + " 进入直播间"' true);  		}  	}));  	break;  }  }  
Missing Default,Bililive_dm,MainWindow,D:\newReposJune17\copyliu_bililive_dm\Bililive_dm\MainWindow.xaml.cs,ProcDanmaku,The following switch statement is missing a default case: switch (danmakuModel.UserGuardLevel) {  case 1:  	guard_text = "总督";  	break;  case 2:  	guard_text = "提督";  	break;  case 3:  	guard_text = "舰长";  	break;  }  
