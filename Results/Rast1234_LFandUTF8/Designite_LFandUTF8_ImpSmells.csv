Implementation smell,Namespace,Class,File,Method,Description
Complex Method,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,Cyclomatic complexity of the method is 22
Long Statement,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The length of the statement  "		if (buffer [position + 1] < 0xa0 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf) { " is 131.
Long Statement,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The length of the statement  "		if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf) { " is 131.
Long Statement,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The length of the statement  "		if (buffer [position + 1] < 0x90 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) { " is 195.
Long Statement,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The length of the statement  "		if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0x8f || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) { " is 195.
Long Statement,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The length of the statement  "		if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) { " is 195.
Complex Conditional,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The conditional expression  "buffer [position + 1] < 0xa0 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf"  is complex.
Complex Conditional,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The conditional expression  "buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf"  is complex.
Complex Conditional,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The conditional expression  "buffer [position + 1] < 0x90 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf"  is complex.
Complex Conditional,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The conditional expression  "buffer [position + 1] < 0x80 || buffer [position + 1] > 0x8f || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf"  is complex.
Complex Conditional,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The conditional expression  "buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf"  is complex.
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsUtf8,The following statement contains a magic number: while (true) {  	buffer = new byte[count];  	stream.Seek (0' SeekOrigin.Begin);  	read = stream.Read (buffer' 0' count);  	if (read < count) {  		break;  	}  	buffer = null;  	count *= 2;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsUtf8,The following statement contains a magic number: count *= 2;  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch >= 0xc2 && ch <= 0xdf) {  	if (position >= length - 2) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 2;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch >= 0xc2 && ch <= 0xdf) {  	if (position >= length - 2) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 2;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (position >= length - 2) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: bytes = 2;  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch == 0xe0) {  	if (position >= length - 3) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0xa0 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 3;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch == 0xe0) {  	if (position >= length - 3) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0xa0 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 3;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch == 0xe0) {  	if (position >= length - 3) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0xa0 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 3;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch == 0xe0) {  	if (position >= length - 3) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0xa0 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 3;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (position >= length - 3) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (buffer [position + 1] < 0xa0 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (buffer [position + 1] < 0xa0 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: bytes = 3;  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch >= 0xe1 && ch <= 0xef) {  	if (position >= length - 3) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 3;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch >= 0xe1 && ch <= 0xef) {  	if (position >= length - 3) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 3;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch >= 0xe1 && ch <= 0xef) {  	if (position >= length - 3) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 3;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch >= 0xe1 && ch <= 0xef) {  	if (position >= length - 3) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 3;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (position >= length - 3) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: bytes = 3;  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch == 0xf0) {  	if (position >= length - 4) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x90 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 4;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch == 0xf0) {  	if (position >= length - 4) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x90 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 4;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch == 0xf0) {  	if (position >= length - 4) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x90 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 4;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch == 0xf0) {  	if (position >= length - 4) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x90 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 4;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch == 0xf0) {  	if (position >= length - 4) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x90 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 4;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch == 0xf0) {  	if (position >= length - 4) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x90 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 4;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (position >= length - 4) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (buffer [position + 1] < 0x90 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (buffer [position + 1] < 0x90 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (buffer [position + 1] < 0x90 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (buffer [position + 1] < 0x90 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: bytes = 4;  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch == 0xf4) {  	if (position >= length - 4) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0x8f || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 4;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch == 0xf4) {  	if (position >= length - 4) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0x8f || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 4;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch == 0xf4) {  	if (position >= length - 4) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0x8f || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 4;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch == 0xf4) {  	if (position >= length - 4) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0x8f || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 4;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch == 0xf4) {  	if (position >= length - 4) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0x8f || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 4;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch == 0xf4) {  	if (position >= length - 4) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0x8f || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 4;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (position >= length - 4) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0x8f || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0x8f || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0x8f || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0x8f || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: bytes = 4;  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch >= 0xf1 && ch <= 0xf3) {  	if (position >= length - 4) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 4;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch >= 0xf1 && ch <= 0xf3) {  	if (position >= length - 4) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 4;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch >= 0xf1 && ch <= 0xf3) {  	if (position >= length - 4) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 4;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch >= 0xf1 && ch <= 0xf3) {  	if (position >= length - 4) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 4;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch >= 0xf1 && ch <= 0xf3) {  	if (position >= length - 4) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 4;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (ch >= 0xf1 && ch <= 0xf3) {  	if (position >= length - 4) {  		bytes = 0;  		return false;  	}  	if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  		bytes = 0;  		return false;  	}  	bytes = 4;  	return true;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (position >= length - 4) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: if (buffer [position + 1] < 0x80 || buffer [position + 1] > 0xbf || buffer [position + 2] < 0x80 || buffer [position + 2] > 0xbf || buffer [position + 3] < 0x80 || buffer [position + 3] > 0xbf) {  	bytes = 0;  	return false;  }  
Magic Number,LFandUTF8,Utf8Checker,C:\repos\Rast1234_LFandUTF8\LFandUTF8\TextTools.cs,IsValid,The following statement contains a magic number: bytes = 4;  
