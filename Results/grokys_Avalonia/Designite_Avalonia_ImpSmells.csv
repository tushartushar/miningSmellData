Implementation smell,Namespace,Class,File,Method,Description
Long Method,Avalonia.Controls,Grid,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Grid.cs,MeasureOverride,The method has 246 lines of code.
Complex Method,Avalonia,GridLengthConverter,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\GridLengthConverter.cs,ConvertFrom,Cyclomatic complexity of the method is 10
Complex Method,Avalonia,DependencyObject,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\DependencyObject.cs,OnPropertyChanged,Cyclomatic complexity of the method is 11
Complex Method,Avalonia.Controls,Image,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Image.cs,MeasureOverride,Cyclomatic complexity of the method is 13
Complex Method,Avalonia.Controls,Grid,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Grid.cs,MeasureOverride,Cyclomatic complexity of the method is 38
Complex Method,Avalonia.Controls,Grid,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Grid.cs,ArrangeOverride,Cyclomatic complexity of the method is 12
Complex Method,Avalonia.Controls,Grid,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Grid.cs,AllocateDesiredSize,Cyclomatic complexity of the method is 10
Complex Method,Avalonia.Controls,ItemContainerGenerator,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\ItemContainerGenerator.cs,GeneratorPositionFromIndex,Cyclomatic complexity of the method is 8
Complex Method,Avalonia.Controls,ItemContainerGenerator,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\ItemContainerGenerator.cs,GenerateNext,Cyclomatic complexity of the method is 12
Complex Method,Avalonia.Controls,ItemContainerGenerator,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\ItemContainerGenerator.cs,OnOwnerItemsItemsChanged,Cyclomatic complexity of the method is 9
Complex Method,Avalonia.Media,PathMarkupParser,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PathMarkupParser.cs,Parse,Cyclomatic complexity of the method is 12
Complex Method,Avalonia.Shapes,Shape,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Shapes\Shape.cs,MeasureOverride,Cyclomatic complexity of the method is 13
Long Parameter List,Avalonia,FrameworkPropertyMetadata,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\FrameworkPropertyMetadata.cs,FrameworkPropertyMetadata,The method has 5 parameters. Parameters: defaultValue' flags' propertyChangedCallback' coerceValueCallback' isAnimationProhibited
Long Parameter List,Avalonia,FrameworkPropertyMetadata,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\FrameworkPropertyMetadata.cs,FrameworkPropertyMetadata,The method has 6 parameters. Parameters: defaultValue' flags' propertyChangedCallback' coerceValueCallback' isAnimationProhibited' defaultUpdateSourceTrigger
Long Parameter List,Avalonia,DependencyProperty,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\DependencyProperty.cs,DependencyProperty,The method has 6 parameters. Parameters: isAttached' name' propertyType' ownerType' defaultMetadata' validateValueCallback
Long Parameter List,Avalonia,DependencyProperty,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\DependencyProperty.cs,Register,The method has 5 parameters. Parameters: name' propertyType' ownerType' typeMetadata' validateValueCallback
Long Parameter List,Avalonia,DependencyProperty,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\DependencyProperty.cs,RegisterAttached,The method has 5 parameters. Parameters: name' propertyType' ownerType' defaultMetadata' validateValueCallback
Long Parameter List,Avalonia,DependencyProperty,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\DependencyProperty.cs,RegisterAttachedReadOnly,The method has 5 parameters. Parameters: name' propertyType' ownerType' defaultMetadata' validateValueCallback
Long Parameter List,Avalonia,DependencyProperty,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\DependencyProperty.cs,RegisterReadOnly,The method has 5 parameters. Parameters: name' propertyType' ownerType' typeMetadata' validateValueCallback
Long Parameter List,Avalonia.Controls,Grid,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Grid.cs,AssignSize,The method has 6 parameters. Parameters: matrix' start' end' size' type' desiredSize
Long Parameter List,Avalonia.Media,StreamGeometryContext,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\StreamGeometryContext.cs,BezierTo,The method has 5 parameters. Parameters: point1' point2' point3' isStroked' isSmoothJoin
Long Parameter List,Avalonia.Media,DrawingContext,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\DrawingContext.cs,DrawRoundedRectangle,The method has 5 parameters. Parameters: brush' pen' rectangle' radiusX' radiusY
Long Parameter List,Avalonia.Media,FormattedText,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\FormattedText.cs,FormattedText,The method has 6 parameters. Parameters: textToFormat' culture' flowDirection' typeface' emSize' foreground
Long Parameter List,Avalonia.Media,Matrix,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\Matrix.cs,Matrix,The method has 6 parameters. Parameters: m11' m12' m21' m22' offsetX' offsetY
Long Parameter List,Avalonia.Media.Imaging,RenderTargetBitmap,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\Imaging\RenderTargetBitmap.cs,RenderTargetBitmap,The method has 5 parameters. Parameters: pixelWidth' pixelHeight' dpiX' dpiY' pixelFormat
Long Parameter List,Avalonia.Platform,PlatformInterface,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Platform\PlatformInterface.cs,CreateRenderTargetBitmap,The method has 5 parameters. Parameters: pixelWidth' pixelHeight' dpiX' dpiY' pixelFormat
Long Parameter List,Avalonia.Threading,Dispatcher,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Threading\Dispatcher.cs,Invoke,The method has 5 parameters. Parameters: priority' timeout' method' arg' args
Long Parameter List,Avalonia.Threading,DispatcherOperation,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Threading\DispatcherOperation.cs,DispatcherOperation,The method has 5 parameters. Parameters: dis' prio' d' arg' args
Long Identifier,Avalonia.Controls,Control,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Control.cs,,The length of the parameter HorizontalContentAlignmentProperty is 34.
Long Identifier,Avalonia.Controls,Control,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Control.cs,,The length of the parameter VerticalContentAlignmentProperty is 32.
Long Identifier,Avalonia.Controls.Primitives,Selector,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Primitives\Selector.cs,,The length of the parameter IsSynchronizedWithCurrentItemProperty is 37.
Long Statement,Avalonia,DependencyPropertyConverter,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\DependencyPropertyConverter.cs,Resolve,The length of the statement  "            IXamlSchemaContextProvider schema = (IXamlSchemaContextProvider)serviceProvider.GetService(typeof(IXamlSchemaContextProvider)); " is 127.
Long Statement,Avalonia,Setter,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Setter.cs,EndInit,The length of the statement  "                    IXamlSchemaContextProvider schema = (IXamlSchemaContextProvider)this.serviceProvider.GetService(typeof(IXamlSchemaContextProvider)); " is 132.
Long Statement,Avalonia,Setter,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Setter.cs,EndInit,The length of the statement  "                    TemplateContent templateContent = (TemplateContent)ambient.GetFirstAmbientValue(new[] { frameworkTemplateType }' templateProperty).Value; " is 137.
Long Statement,Avalonia,TemplateContentLoader,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\TemplateContentLoader.cs,Load,The length of the statement  "            IXamlSchemaContextProvider schema = (IXamlSchemaContextProvider)serviceProvider.GetService(typeof(IXamlSchemaContextProvider)); " is 127.
Long Statement,Avalonia,DependencyProperty,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\DependencyProperty.cs,RegisterAttachedReadOnly,The length of the statement  "            throw new NotImplementedException("RegisterAttachedReadOnly(string name' Type propertyType' Type ownerType' PropertyMetadata defaultMetadata)"); " is 144.
Long Statement,Avalonia,DependencyProperty,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\DependencyProperty.cs,RegisterAttachedReadOnly,The length of the statement  "            throw new NotImplementedException("RegisterAttachedReadOnly(string name' Type propertyType' Type ownerType' PropertyMetadata defaultMetadata' ValidateValueCallback validateValueCallback)"); " is 189.
Long Statement,Avalonia,DependencyProperty,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\DependencyProperty.cs,OverrideMetadata,The length of the statement  "                throw new InvalidOperationException(string.Format("Cannot override metadata on readonly property '{0}' without using a DependencyPropertyKey"' this.Name)); " is 155.
Long Statement,Avalonia.Controls,ItemContainerGenerator,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\ItemContainerGenerator.cs,OnOwnerItemsItemsChanged,The length of the statement  "                    Console.WriteLine("*** Critical error in ItemContainerGenerator.OnOwnerItemsItemsChanged. NotifyCollectionChangedAction.{0} is not supported"' e.Action); " is 153.
Complex Conditional,Avalonia.Controls,Grid,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Grid.cs,MeasureOverride,The conditional expression  "autoRow && autoCol && !starRow && !starCol"  is complex.
Complex Conditional,Avalonia.Controls,Grid,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Grid.cs,MeasureOverride,The conditional expression  "(autoRow || autoCol) && !(starRow || starCol)"  is complex.
Complex Conditional,Avalonia.Controls,Grid,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Grid.cs,CreateMatrices,The conditional expression  "this.rowMatrix == null || this.colMatrix == null ||                  this.rowMatrix.GetUpperBound(0) != rowCount - 1 ||                  this.colMatrix.GetUpperBound(0) != colCount - 1"  is complex.
Complex Conditional,Avalonia.Media,PathMarkupParser,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PathMarkupParser.cs,ReadCommand,The conditional expression  "(char.IsDigit(c) || c == '.' || c == '+' || c == '-') &&                           (lastCommand != Command.None)"  is complex.
Complex Conditional,Avalonia.Media,PathMarkupParser,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PathMarkupParser.cs,ReadDouble,The conditional expression  "((c == '+' || c == '-') && !readSign) ||                      (c == '.' && !readPoint) ||                      (c == 'E' && !readExponent) ||                      char.IsDigit(c)"  is complex.
Virtual Method Call from Constructor,Avalonia,UIElement,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\UIElement.cs,UIElement,The constructor "UIElement" calls a virtual method "OnGotKeyboardFocus".
Virtual Method Call from Constructor,Avalonia,UIElement,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\UIElement.cs,UIElement,The constructor "UIElement" calls a virtual method "OnLostKeyboardFocus".
Virtual Method Call from Constructor,Avalonia,UIElement,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\UIElement.cs,UIElement,The constructor "UIElement" calls a virtual method "OnMouseEnter".
Virtual Method Call from Constructor,Avalonia,UIElement,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\UIElement.cs,UIElement,The constructor "UIElement" calls a virtual method "OnMouseLeave".
Virtual Method Call from Constructor,Avalonia,UIElement,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\UIElement.cs,UIElement,The constructor "UIElement" calls a virtual method "OnMouseLeftButtonDown".
Virtual Method Call from Constructor,Avalonia,UIElement,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\UIElement.cs,UIElement,The constructor "UIElement" calls a virtual method "OnMouseLeftButtonUp".
Virtual Method Call from Constructor,Avalonia,UIElement,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\UIElement.cs,UIElement,The constructor "UIElement" calls a virtual method "OnMouseMove".
Virtual Method Call from Constructor,Avalonia,UIElement,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\UIElement.cs,UIElement,The constructor "UIElement" calls a virtual method "OnTextInput".
Virtual Method Call from Constructor,Avalonia,Window,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Window.cs,Window,The constructor "Window" calls a virtual method "CreatePresentationSource".
Virtual Method Call from Constructor,Avalonia,Window,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Window.cs,Window,The constructor "Window" calls a virtual method "OnClosed".
Virtual Method Call from Constructor,Avalonia.Controls,Control,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Control.cs,Control,The constructor "Control" calls a virtual method "OnKeyDown".
Virtual Method Call from Constructor,Avalonia.Controls.Primitives,PopupRoot,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Primitives\PopupRoot.cs,PopupRoot,The constructor "PopupRoot" calls a virtual method "CreatePopupPresentationSource".
Virtual Method Call from Constructor,Avalonia.Controls.Primitives,PopupRoot,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Primitives\PopupRoot.cs,PopupRoot,The constructor "PopupRoot" calls a virtual method "Show".
Virtual Method Call from Constructor,Avalonia.Media,StreamGeometry,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\StreamGeometry.cs,StreamGeometry,The constructor "StreamGeometry" calls a virtual method "CreateStreamGeometry".
Virtual Method Call from Constructor,Avalonia.Media,FormattedText,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\FormattedText.cs,FormattedText,The constructor "FormattedText" calls a virtual method "CreateFormattedText".
Virtual Method Call from Constructor,Avalonia.Media.Imaging,PngBitmapEncoder,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\Imaging\PngBitmapEncoder.cs,PngBitmapEncoder,The constructor "PngBitmapEncoder" calls a virtual method "CreateBitmapEncoder".
Virtual Method Call from Constructor,Avalonia.Media.Imaging,RenderTargetBitmap,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\Imaging\RenderTargetBitmap.cs,RenderTargetBitmap,The constructor "RenderTargetBitmap" calls a virtual method "CreateRenderTargetBitmap".
Empty Catch Block,Avalonia.Input,InputManager,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Input\InputManager.cs,ProcessStack,The method has an empty catch block.
Magic Number,Avalonia,FrameworkElement,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\FrameworkElement.cs,ArrangeCore,The following statement contains a magic number: switch (this.HorizontalAlignment)              {                  case HorizontalAlignment.Center:                      origin.X += (finalRect.Width - size.Width) / 2;                      break;                  case HorizontalAlignment.Right:                      origin.X += finalRect.Width - size.Width;                      break;              }
Magic Number,Avalonia,FrameworkElement,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\FrameworkElement.cs,ArrangeCore,The following statement contains a magic number: switch (this.VerticalAlignment)              {                  case VerticalAlignment.Center:                      origin.Y += (finalRect.Height - size.Height) / 2;                      break;                  case VerticalAlignment.Bottom:                      origin.Y += finalRect.Height - size.Height;                      break;              }
Magic Number,Avalonia,Point,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Point.cs,Parse,The following statement contains a magic number: points.Length < 2
Magic Number,Avalonia,Point,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Point.cs,Parse,The following statement contains a magic number: points.Length > 2
Magic Number,Avalonia,Rect,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Rect.cs,Inflate,The following statement contains a magic number: width < rect.Width * -2
Magic Number,Avalonia,Rect,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Rect.cs,Inflate,The following statement contains a magic number: height < rect.Height * -2
Magic Number,Avalonia,Rect,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Rect.cs,Inflate,The following statement contains a magic number: this.width += 2 * width;
Magic Number,Avalonia,Rect,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Rect.cs,Inflate,The following statement contains a magic number: this.height += 2 * height;
Magic Number,Avalonia,Thickness,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Thickness.cs,GetHashCode,The following statement contains a magic number: int hash = 17;
Magic Number,Avalonia,Thickness,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Thickness.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + this.Left.GetHashCode();
Magic Number,Avalonia,Thickness,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Thickness.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + this.Top.GetHashCode();
Magic Number,Avalonia,Thickness,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Thickness.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + this.Right.GetHashCode();
Magic Number,Avalonia,Thickness,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Thickness.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + this.Bottom.GetHashCode();
Magic Number,Avalonia,Vector,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Vector.cs,AngleBetween,The following statement contains a magic number: return Math.Acos(cos_theta) / Math.PI * 180;
Magic Number,Avalonia.Controls,Image,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Image.cs,OnRender,The following statement contains a magic number: switch (this.Stretch)                  {                      case Stretch.None:                          sourceRect = new Rect(                              0'                              0'                              Math.Min(this.ActualWidth' source.PixelWidth)'                              Math.Min(this.ActualHeight' source.PixelHeight));                          break;                        case Stretch.Uniform:                      {                          double scale = Math.Min(                              this.DesiredSize.Width / source.PixelWidth'                               this.DesiredSize.Height / source.PixelHeight);                          double scaledWidth = source.PixelWidth * scale;                          double scaledHeight = source.PixelHeight * scale;                          destRect = new Rect(                              (this.ActualWidth - scaledWidth) / 2'                              (this.ActualHeight - scaledHeight) / 2'                              scaledWidth'                              scaledHeight);                          break;                      }                        case Stretch.UniformToFill:                      {                          double scale = Math.Max(                              this.DesiredSize.Width / source.PixelWidth'                              this.DesiredSize.Height / source.PixelHeight);                          sourceRect = new Rect(                              0'                              0'                              this.ActualWidth / scale'                              this.ActualHeight / scale);                          break;                      }                  }
Magic Number,Avalonia.Controls,Image,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Image.cs,OnRender,The following statement contains a magic number: switch (this.Stretch)                  {                      case Stretch.None:                          sourceRect = new Rect(                              0'                              0'                              Math.Min(this.ActualWidth' source.PixelWidth)'                              Math.Min(this.ActualHeight' source.PixelHeight));                          break;                        case Stretch.Uniform:                      {                          double scale = Math.Min(                              this.DesiredSize.Width / source.PixelWidth'                               this.DesiredSize.Height / source.PixelHeight);                          double scaledWidth = source.PixelWidth * scale;                          double scaledHeight = source.PixelHeight * scale;                          destRect = new Rect(                              (this.ActualWidth - scaledWidth) / 2'                              (this.ActualHeight - scaledHeight) / 2'                              scaledWidth'                              scaledHeight);                          break;                      }                        case Stretch.UniformToFill:                      {                          double scale = Math.Max(                              this.DesiredSize.Width / source.PixelWidth'                              this.DesiredSize.Height / source.PixelHeight);                          sourceRect = new Rect(                              0'                              0'                              this.ActualWidth / scale'                              this.ActualHeight / scale);                          break;                      }                  }
Magic Number,Avalonia.Controls,Grid,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Grid.cs,MeasureOverride,The following statement contains a magic number: bool autoStar = i == 2;
Magic Number,Avalonia.Controls,Grid,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Grid.cs,MeasureOverride,The following statement contains a magic number: bool starAutoAgain = i == 3;
Magic Number,Avalonia.Controls,Grid,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Grid.cs,MeasureOverride,The following statement contains a magic number: bool nonStar = i == 4;
Magic Number,Avalonia.Controls,Grid,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Grid.cs,MeasureOverride,The following statement contains a magic number: bool remainingStar = i == 5;
Magic Number,Avalonia.Controls,Grid,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Grid.cs,MeasureOverride,The following statement contains a magic number: i < 6
Magic Number,Avalonia.Controls,Grid,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Grid.cs,AllocateDesiredSize,The following statement contains a magic number: i < 2
Magic Number,Avalonia.Controls,RangeCollection,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\RangeCollection.cs,FindRangeIndexForValue,The following statement contains a magic number: int mid = min + ((max - min) / 2);
Magic Number,Avalonia.Controls,RangeCollection,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\RangeCollection.cs,FindInsertionPosition,The following statement contains a magic number: int mid = min + ((max - min) / 2);
Magic Number,Avalonia.Controls,Border,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Border.cs,OnRender,The following statement contains a magic number: double penOffset = -(pen.Thickness / 2);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Bgr101010 = new PixelFormat("Bgr101010"' 32);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Bgr24 = new PixelFormat("Bgr24"' 24);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Bgr32 = new PixelFormat("Bgr32"' 32);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Bgr555 = new PixelFormat("Bgr555"' 16);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Bgr565 = new PixelFormat("Bgr565"' 16);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Bgra32 = new PixelFormat("Bgra32"' 32);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Cmyk32 = new PixelFormat("Cmyk32"' 32);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Gray16 = new PixelFormat("Gray16"' 16);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Gray2 = new PixelFormat("Gray2"' 2);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Gray32Float = new PixelFormat("Gray32Float"' 32);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Gray4 = new PixelFormat("Gray4"' 4);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Gray8 = new PixelFormat("Gray8"' 8);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Indexed2 = new PixelFormat("Indexed2"' 2);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Indexed4 = new PixelFormat("Indexed4"' 4);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Indexed8 = new PixelFormat("Indexed8"' 8);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Pbgra32 = new PixelFormat("Pbgra32"' 32);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Prgba128Float = new PixelFormat("Prgba128Float"' 128);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Prgba64 = new PixelFormat("Prgba64"' 64);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Rgb128Float = new PixelFormat("Rgb128Float"' 128);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Rgb24 = new PixelFormat("Rgb24"' 24);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Rgb48 = new PixelFormat("Rgb48"' 48);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Rgba128Float = new PixelFormat("Rgba128Float"' 128);
Magic Number,Avalonia.Media,PixelFormats,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\PixelFormats.cs,PixelFormats,The following statement contains a magic number: Rgba64 = new PixelFormat("Rgba64"' 64);
Magic Number,Avalonia.Media,BrushConverter,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\BrushConverter.cs,ConvertFrom,The following statement contains a magic number: s.Length == 6
Magic Number,Avalonia.Media,BrushConverter,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\BrushConverter.cs,ConvertFrom,The following statement contains a magic number: s.Length != 8
Magic Number,Avalonia.Media,Color,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\Color.cs,FromUInt32,The following statement contains a magic number: return new Color              {                  A = (byte)((value >> 24) & 0xff)'                  R = (byte)((value >> 16) & 0xff)'                  G = (byte)((value >> 8) & 0xff)'                  B = (byte)(value & 0xff)'              };
Magic Number,Avalonia.Media,Color,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\Color.cs,FromUInt32,The following statement contains a magic number: return new Color              {                  A = (byte)((value >> 24) & 0xff)'                  R = (byte)((value >> 16) & 0xff)'                  G = (byte)((value >> 8) & 0xff)'                  B = (byte)(value & 0xff)'              };
Magic Number,Avalonia.Media,Color,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\Color.cs,FromUInt32,The following statement contains a magic number: return new Color              {                  A = (byte)((value >> 24) & 0xff)'                  R = (byte)((value >> 16) & 0xff)'                  G = (byte)((value >> 8) & 0xff)'                  B = (byte)(value & 0xff)'              };
Magic Number,Avalonia.Media,Color,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\Color.cs,ToString,The following statement contains a magic number: uint rgb = ((uint)this.A << 24) | ((uint)this.R << 16) | ((uint)this.G << 8) | (uint)this.B;
Magic Number,Avalonia.Media,Color,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\Color.cs,ToString,The following statement contains a magic number: uint rgb = ((uint)this.A << 24) | ((uint)this.R << 16) | ((uint)this.G << 8) | (uint)this.B;
Magic Number,Avalonia.Media,Color,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\Color.cs,ToString,The following statement contains a magic number: uint rgb = ((uint)this.A << 24) | ((uint)this.R << 16) | ((uint)this.G << 8) | (uint)this.B;
Magic Number,Avalonia.Media,Color,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\Color.cs,ToUint32,The following statement contains a magic number: return ((uint)this.A << 24) | ((uint)this.R << 16) | ((uint)this.G << 8) | (uint)this.B;
Magic Number,Avalonia.Media,Color,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\Color.cs,ToUint32,The following statement contains a magic number: return ((uint)this.A << 24) | ((uint)this.R << 16) | ((uint)this.G << 8) | (uint)this.B;
Magic Number,Avalonia.Media,Color,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\Color.cs,ToUint32,The following statement contains a magic number: return ((uint)this.A << 24) | ((uint)this.R << 16) | ((uint)this.G << 8) | (uint)this.B;
Magic Number,Avalonia.Media,Matrix,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\Matrix.cs,Rotate,The following statement contains a magic number: double theta = angle * Math.PI / 180;
Magic Number,Avalonia.Media,Matrix,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\Matrix.cs,Skew,The following statement contains a magic number: Matrix skew_m = new Matrix(                  1'                  Math.Tan(skewY * Math.PI / 180)'                  Math.Tan(skewX * Math.PI / 180)'                  1'                  0'                  0);
Magic Number,Avalonia.Media,Matrix,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Media\Matrix.cs,Skew,The following statement contains a magic number: Matrix skew_m = new Matrix(                  1'                  Math.Tan(skewY * Math.PI / 180)'                  Math.Tan(skewX * Math.PI / 180)'                  1'                  0'                  0);
Magic Number,Avalonia.Shapes,Shape,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Shapes\Shape.cs,OnRender,The following statement contains a magic number: matrix.Translate(                      (this.ActualWidth - (shapeBounds.Width * scaleX)) / 2'                      (this.ActualHeight - (shapeBounds.Height * scaleY)) / 2);
Magic Number,Avalonia.Shapes,Shape,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Shapes\Shape.cs,OnRender,The following statement contains a magic number: matrix.Translate(                      (this.ActualWidth - (shapeBounds.Width * scaleX)) / 2'                      (this.ActualHeight - (shapeBounds.Height * scaleY)) / 2);
Magic Number,Avalonia.Threading,PokableQueue,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Threading\Dispatcher.cs,Grow,The following statement contains a magic number: int newc = this.array.Length * 2;
Missing Default,Avalonia,TemplateContentLoader,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\TemplateContentLoader.cs,Load,The following switch statement is missing a default case: switch (xamlReader.NodeType)                      {                          case XamlNodeType.StartObject:                              currentType = xamlReader.Type.UnderlyingType;                              break;                            case XamlNodeType.StartMember:                              // HACK: This matches any Name property. Should probably just match                              // FrameworkElement and x:Name but this'll do for now...                              if (xamlReader.Member.Name == "Name")                              {                                  nextValueIsName = true;                              }                                break;                            case XamlNodeType.Value:                              if (nextValueIsName)                              {                                  typesByName.Add((string)xamlReader.Value' currentType);                                  nextValueIsName = false;                              }                                                            break;                      }
Missing Default,Avalonia,FrameworkElement,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\FrameworkElement.cs,ArrangeCore,The following switch statement is missing a default case: switch (this.HorizontalAlignment)              {                  case HorizontalAlignment.Center:                      origin.X += (finalRect.Width - size.Width) / 2;                      break;                  case HorizontalAlignment.Right:                      origin.X += finalRect.Width - size.Width;                      break;              }
Missing Default,Avalonia,FrameworkElement,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\FrameworkElement.cs,ArrangeCore,The following switch statement is missing a default case: switch (this.VerticalAlignment)              {                  case VerticalAlignment.Center:                      origin.Y += (finalRect.Height - size.Height) / 2;                      break;                  case VerticalAlignment.Bottom:                      origin.Y += finalRect.Height - size.Height;                      break;              }
Missing Default,Avalonia.Controls,Image,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Image.cs,OnRender,The following switch statement is missing a default case: switch (this.Stretch)                  {                      case Stretch.None:                          sourceRect = new Rect(                              0'                              0'                              Math.Min(this.ActualWidth' source.PixelWidth)'                              Math.Min(this.ActualHeight' source.PixelHeight));                          break;                        case Stretch.Uniform:                      {                          double scale = Math.Min(                              this.DesiredSize.Width / source.PixelWidth'                               this.DesiredSize.Height / source.PixelHeight);                          double scaledWidth = source.PixelWidth * scale;                          double scaledHeight = source.PixelHeight * scale;                          destRect = new Rect(                              (this.ActualWidth - scaledWidth) / 2'                              (this.ActualHeight - scaledHeight) / 2'                              scaledWidth'                              scaledHeight);                          break;                      }                        case Stretch.UniformToFill:                      {                          double scale = Math.Max(                              this.DesiredSize.Width / source.PixelWidth'                              this.DesiredSize.Height / source.PixelHeight);                          sourceRect = new Rect(                              0'                              0'                              this.ActualWidth / scale'                              this.ActualHeight / scale);                          break;                      }                  }
Missing Default,Avalonia.Controls,Image,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\Image.cs,MeasureOverride,The following switch statement is missing a default case: switch (this.Stretch)              {                  case Stretch.Uniform:                      sx = sy = Math.Min(sx' sy);                      break;                  case Stretch.UniformToFill:                      sx = sy = Math.Max(sx' sy);                      break;                  case Stretch.Fill:                      if (double.IsInfinity(constraint.Width))                      {                          sx = sy;                      }                        if (double.IsInfinity(constraint.Height))                      {                          sy = sx;                      }                        break;                  case Stretch.None:                      sx = sy = 1;                      break;              }
Missing Default,Avalonia.Controls,ItemsControl,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\ItemsControl.cs,InvokeItemsChanged,The following switch statement is missing a default case: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      this.SetLogicalParent(this' e.NewItems);                      break;                  case NotifyCollectionChangedAction.Remove:                      this.SetLogicalParent(null' e.OldItems);                      break;                  case NotifyCollectionChangedAction.Replace:                      this.SetLogicalParent(null' e.OldItems);                      this.SetLogicalParent(this' e.NewItems);                      break;              }
Missing Default,Avalonia.Controls,ItemsControl,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\ItemsControl.cs,OnItemContainerGeneratorChanged,The following switch statement is missing a default case: switch (e.Action)              {                  case NotifyCollectionChangedAction.Reset:                      // the list has gone away' so clear the children of the panel                      if (panel.InternalChildren.Count > 0)                      {                          this.RemoveItemsFromPresenter(new GeneratorPosition(0' 0)' panel.InternalChildren.Count);                      }                        break;                  case NotifyCollectionChangedAction.Add:                      this.AddItemsToPresenter(e.Position' e.ItemCount);                      break;                  case NotifyCollectionChangedAction.Remove:                      this.RemoveItemsFromPresenter(e.Position' e.ItemCount);                      break;                  case NotifyCollectionChangedAction.Replace:                      this.RemoveItemsFromPresenter(e.Position' e.ItemCount);                      this.AddItemsToPresenter(e.Position' e.ItemCount);                      break;              }
Missing Default,Avalonia.Controls,TextBox,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\TextBox.cs,OnKeyDown,The following switch statement is missing a default case: switch (e.Key)              {                  case Key.Left:                      --this.CaretIndex;                      break;                                    case Key.Right:                      ++this.CaretIndex;                      break;                    case Key.Back:                      if (this.caretIndex > 0)                      {                                                  this.Text = text.Substring(0' this.caretIndex - 1) + text.Substring(this.caretIndex);                          --this.CaretIndex;                      }                        break;                    case Key.Delete:                      if (this.caretIndex < text.Length)                      {                          this.Text = text.Substring(0' this.caretIndex) + text.Substring(this.caretIndex + 1);                      }                        break;              }
Missing Default,Avalonia.Controls,UIElementCollection,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Controls\UIElementCollection.cs,OnItemsChanged,The following switch statement is missing a default case: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      foreach (UIElement element in e.NewItems)                      {                          this.SetLogicalParent(element);                      }                        break;                    case NotifyCollectionChangedAction.Remove:                      foreach (UIElement element in e.OldItems)                      {                          this.ClearLogicalParent(element);                      }                        break;                    case NotifyCollectionChangedAction.Replace:                      foreach (UIElement element in e.OldItems)                      {                          this.ClearLogicalParent(element);                      }                        foreach (UIElement element in e.NewItems)                      {                          this.SetLogicalParent(element);                      }                        break;              }
Missing Default,Avalonia.Data,BindingExpression,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Data\BindingExpression.cs,RewritePath,The following switch statement is missing a default case: switch (this.ParentBinding.RelativeSource.Mode)                      {                          case RelativeSourceMode.TemplatedParent:                              if (fe != null)                              {                                  prefix = "TemplatedParent";                              }                                break;                      }
Missing Default,Avalonia.Shapes,Shape,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Shapes\Shape.cs,OnRender,The following switch statement is missing a default case: switch (this.Stretch)                  {                      case Stretch.Uniform:                          scaleX = scaleY = Math.Min(scaleX' scaleY);                          break;                        case Stretch.UniformToFill:                          // Hmm' in WPF appears to be the same as Uniform. This can't be right...                          scaleX = scaleY = Math.Min(scaleX' scaleY);                          break;                  }
Missing Default,Avalonia.Input,KeyboardDevice,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Input\KeyboardDevice.cs,PreProcessKeyboardInput,The following switch statement is missing a default case: switch (rawKeyEvent.Type)                      {                          case RawKeyEventType.KeyDown:                              KeyEventArgs ek = new KeyEventArgs(                                  (KeyboardDevice)rawKeyEvent.Device'                                  Mouse.PrimaryDevice.ActiveSource'                                  rawKeyEvent.Timestamp'                                  rawKeyEvent.Key);                              ek.RoutedEvent = Keyboard.KeyDownEvent;                              InputManager.Current.ProcessInput(ek);                              e.Cancel();                              break;                      }
Missing Default,Avalonia.Input,MouseDevice,D:\research\architectureSmells\repos\grokys_Avalonia\Avalonia\Input\MouseDevice.cs,ProcessRawMouseEvent,The following switch statement is missing a default case: switch (input.Type)              {                  case RawMouseEventType.Move:                      e = new MouseEventArgs(this' input.Timestamp);                      e.RoutedEvent = UIElement.MouseMoveEvent;                      break;                    case RawMouseEventType.LeftButtonDown:                      e = new MouseButtonEventArgs(this' input.Timestamp);                      e.RoutedEvent = UIElement.MouseLeftButtonDownEvent;                      break;                    case RawMouseEventType.LeftButtonUp:                      e = new MouseButtonEventArgs(this' input.Timestamp);                      e.RoutedEvent = UIElement.MouseLeftButtonUpEvent;                      break;              }
