Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Machine.Specifications.Runner.Utility,RemoteRunListener,D:\research\architectureSmells\repos\machine_machine.specifications\src\Machine.Specifications.Runner.Utility\RemoteRunListener.cs,SyncProcessMessage,Cyclomatic complexity of the method is 10
Long Parameter List,Machine.Specifications.Runner.Utility,ContextInfo,D:\research\architectureSmells\repos\machine_machine.specifications\src\Machine.Specifications.Runner.Utility\ContextInfo.cs,ContextInfo,The method has 5 parameters. Parameters: name' concern' typeName' namespace' assemblyName
Long Parameter List,Machine.Specifications.Runner.Utility,ExceptionResult,D:\research\architectureSmells\repos\machine_machine.specifications\src\Machine.Specifications.Runner.Utility\Result.cs,ExceptionResult,The method has 5 parameters. Parameters: fullTypeName' typeName' message' stackTrace' innerExceptionResult
Long Statement,Machine.Specifications.Runner.Utility,AppDomainRunner,D:\research\architectureSmells\repos\machine_machine.specifications\src\Machine.Specifications.Runner.Utility\AppDomainRunner.cs,GetOrCreateAppDomainRunner,The length of the statement  "            var appDomain = AppDomain.CreateDomain(setup.ApplicationName' null' setup' new PermissionSet(PermissionState.Unrestricted)); " is 124.
Long Statement,Machine.Specifications.Runner.Utility,RemoteRunListener,D:\research\architectureSmells\repos\machine_machine.specifications\src\Machine.Specifications.Runner.Utility\RemoteRunListener.cs,SyncProcessMessage,The length of the statement  "                    listener.OnSpecificationStart(SpecificationInfo.Parse(element.XPathSelectElement("//onspecificationstart/*").ToString())); " is 122.
Long Statement,Machine.Specifications.Runner.Utility,RemoteRunnerDecorator,D:\research\architectureSmells\repos\machine_machine.specifications\src\Machine.Specifications.Runner.Utility\RemoteRunnerDecorator.cs,RunNamespace,The length of the statement  "            var root = new XElement("runner"' new XElement("runnamespace"' assembly.ToXml()' new XElement("namespace"' targetNamespace))); " is 126.
Long Statement,Machine.Specifications.Runner.Utility,ExceptionResult,D:\research\architectureSmells\repos\machine_machine.specifications\src\Machine.Specifications.Runner.Utility\Result.cs,ToString,The length of the statement  "                message.AppendFormat(" ---> {0}{1}   --- End of inner exception stack trace ---"' this.InnerExceptionResult' Environment.NewLine); " is 130.
Long Statement,Machine.Specifications.Runner.Utility,Result,D:\research\architectureSmells\repos\machine_machine.specifications\src\Machine.Specifications.Runner.Utility\Result.cs,Parse,The length of the statement  "                Dictionary<string' string> supplements = supplement.Elements("entry").ToDictionary(x => x.Attribute("key").Value' x => x.Value); " is 128.
Empty Catch Block,Machine.Specifications.Runner.Utility,AppDomainRunner,D:\research\architectureSmells\repos\machine_machine.specifications\src\Machine.Specifications.Runner.Utility\AppDomainRunner.cs,UnloadAppDomain,The method has an empty catch block.
Magic Number,Machine.Specifications.Runner.Utility,AppDomainRunner,D:\research\architectureSmells\repos\machine_machine.specifications\src\Machine.Specifications.Runner.Utility\AppDomainRunner.cs,CreateRunnerInSeparateAppDomain,The following statement contains a magic number: var constructorArgs = new object[3];
Magic Number,Machine.Specifications.Runner.Utility,AppDomainRunner,D:\research\architectureSmells\repos\machine_machine.specifications\src\Machine.Specifications.Runner.Utility\AppDomainRunner.cs,CreateRunnerInSeparateAppDomain,The following statement contains a magic number: constructorArgs[2] = false;
Magic Number,Machine.Specifications.Runner.Utility,ContextInfo,D:\research\architectureSmells\repos\machine_machine.specifications\src\Machine.Specifications.Runner.Utility\ContextInfo.cs,GetHashCode,The following statement contains a magic number: int hash = 17;
Magic Number,Machine.Specifications.Runner.Utility,ContextInfo,D:\research\architectureSmells\repos\machine_machine.specifications\src\Machine.Specifications.Runner.Utility\ContextInfo.cs,GetHashCode,The following statement contains a magic number: hash = hash * 29 + (this.Name != null ? this.Name.GetHashCode() : 0);
Magic Number,Machine.Specifications.Runner.Utility,ContextInfo,D:\research\architectureSmells\repos\machine_machine.specifications\src\Machine.Specifications.Runner.Utility\ContextInfo.cs,GetHashCode,The following statement contains a magic number: hash = hash * 29 + (this.Concern != null ? this.Concern.GetHashCode() : 0);
Magic Number,Machine.Specifications.Runner.Utility,ContextInfo,D:\research\architectureSmells\repos\machine_machine.specifications\src\Machine.Specifications.Runner.Utility\ContextInfo.cs,GetHashCode,The following statement contains a magic number: hash = hash * 29 + (this.TypeName != null ? this.TypeName.GetHashCode() : 0);
Magic Number,Machine.Specifications.Runner.Utility,ContextInfo,D:\research\architectureSmells\repos\machine_machine.specifications\src\Machine.Specifications.Runner.Utility\ContextInfo.cs,GetHashCode,The following statement contains a magic number: hash = hash * 29 + (this.Namespace != null ? this.Namespace.GetHashCode() : 0);
Magic Number,Machine.Specifications.Runner.Utility,ContextInfo,D:\research\architectureSmells\repos\machine_machine.specifications\src\Machine.Specifications.Runner.Utility\ContextInfo.cs,GetHashCode,The following statement contains a magic number: hash = hash * 29 + (this.AssemblyName != null ? this.AssemblyName.GetHashCode() : 0);
Missing Default,Machine.Specifications.Runner.Utility,RemoteRunListener,D:\research\architectureSmells\repos\machine_machine.specifications\src\Machine.Specifications.Runner.Utility\RemoteRunListener.cs,SyncProcessMessage,The following switch statement is missing a default case: switch (element.Name.ToString())              {                  case "onassemblystart":                      listener.OnAssemblyStart(AssemblyInfo.Parse(element.XPathSelectElement("//onassemblystart/*").ToString()));                      break;                  case "onassemblyend":                      listener.OnAssemblyEnd(AssemblyInfo.Parse(element.XPathSelectElement("//onassemblyend/*").ToString()));                      break;                  case "onrunstart":                      listener.OnRunStart();                      break;                  case "onrunend":                      listener.OnRunEnd();                      break;                  case "oncontextstart":                      listener.OnContextStart(ContextInfo.Parse(element.XPathSelectElement("//oncontextstart/*").ToString()));                      break;                  case "oncontextend":                      listener.OnContextEnd(ContextInfo.Parse(element.XPathSelectElement("//oncontextend/*").ToString()));                      break;                  case "onspecificationstart":                      listener.OnSpecificationStart(SpecificationInfo.Parse(element.XPathSelectElement("//onspecificationstart/*").ToString()));                      break;                  case "onspecificationend":                      listener.OnSpecificationEnd(                          SpecificationInfo.Parse(element.XPathSelectElement("//onspecificationend/specificationinfo").ToString())'                           Result.Parse(element.XPathSelectElement("//onspecificationend/result").ToString()));                      break;                  case "onfatalerror":                      listener.OnFatalError(ExceptionResult.Parse(element.XPathSelectElement("//onfatalerror/*").ToString()));                      break;              }
