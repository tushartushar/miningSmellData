Implementation smell,Namespace,Class,File,Method,Description
Long Statement,NHibernate.AspNet.Identity.Helpers,MappingHelper,C:\research\architectureSmells\repos\nhibernate_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity\Helpers\MappingHelper.cs,GetIdentityMappings,The length of the statement  "            mapper.IsComponent((type' declared) => typeof(NHibernate.AspNet.Identity.DomainModel.ValueObject).IsAssignableFrom(type)); " is 122.
Long Statement,NHibernate.AspNet.Identity,RoleStore<TRole>,C:\research\architectureSmells\repos\nhibernate_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity\RoleStore`1.cs,FindByNameAsync,The length of the statement  "            return Task.FromResult<TRole>(Queryable.FirstOrDefault<TRole>(Queryable.Where<TRole>(this.Context.Query<TRole>()' (Expression<Func<TRole' bool>>)(u => u.Name.ToUpper() == roleName.ToUpper())))); " is 194.
Long Statement,NHibernate.AspNet.Identity,UserStore<TUser>,C:\research\architectureSmells\repos\nhibernate_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity\UserStore`1.cs,FindByNameAsync,The length of the statement  "            //return Task.FromResult<TUser>(Queryable.FirstOrDefault<TUser>(Queryable.Where<TUser>(this.Context.Query<TUser>()' (Expression<Func<TUser' bool>>)(u => u.UserName.ToUpper() == userName.ToUpper())))); " is 200.
Long Statement,NHibernate.AspNet.Identity,UserStore<TUser>,C:\research\architectureSmells\repos\nhibernate_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity\UserStore`1.cs,RemoveLoginAsync,The length of the statement  "            var info = user.Logins.SingleOrDefault(x => x.LoginProvider == login.LoginProvider && x.ProviderKey == login.ProviderKey); " is 122.
Long Statement,NHibernate.AspNet.Identity,UserStore<TUser>,C:\research\architectureSmells\repos\nhibernate_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity\UserStore`1.cs,RemoveClaimAsync,The length of the statement  "            foreach (IdentityUserClaim identityUserClaim in Enumerable.ToList<IdentityUserClaim>(Enumerable.Where<IdentityUserClaim>((IEnumerable<IdentityUserClaim>)user.Claims' (Func<IdentityUserClaim' bool>)(uc => " is 203.
Long Statement,NHibernate.AspNet.Identity,UserStore<TUser>,C:\research\architectureSmells\repos\nhibernate_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity\UserStore`1.cs,AddToRoleAsync,The length of the statement  "            IdentityRole identityRole = Queryable.SingleOrDefault<IdentityRole>(this.Context.Query<IdentityRole>()' (Expression<Func<IdentityRole' bool>>)(r => r.Name.ToUpper() == role.ToUpper())); " is 185.
Long Statement,NHibernate.AspNet.Identity,UserStore<TUser>,C:\research\architectureSmells\repos\nhibernate_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity\UserStore`1.cs,AddToRoleAsync,The length of the statement  "                throw new InvalidOperationException(string.Format((IFormatProvider)CultureInfo.CurrentCulture' Resources.RoleNotFound' new object[1] { (object)role })); " is 152.
Long Statement,NHibernate.AspNet.Identity,UserStore<TUser>,C:\research\architectureSmells\repos\nhibernate_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity\UserStore`1.cs,RemoveFromRoleAsync,The length of the statement  "            IdentityRole identityUserRole = Enumerable.FirstOrDefault<IdentityRole>(Enumerable.Where<IdentityRole>((IEnumerable<IdentityRole>)user.Roles' (Func<IdentityRole' bool>)(r => r.Name.ToUpper() == role.ToUpper()))); " is 212.
Long Statement,NHibernate.AspNet.Identity,UserStore<TUser>,C:\research\architectureSmells\repos\nhibernate_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity\UserStore`1.cs,GetRolesAsync,The length of the statement  "                return Task.FromResult<IList<string>>((IList<string>)Enumerable.ToList<string>(Enumerable.Select<IdentityRole' string>((IEnumerable<IdentityRole>)user.Roles' (Func<IdentityRole' string>)(u => u.Name)))); " is 203.
Long Statement,NHibernate.AspNet.Identity,UserStore<TUser>,C:\research\architectureSmells\repos\nhibernate_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity\UserStore`1.cs,IsInRoleAsync,The length of the statement  "                return Task.FromResult<bool>(Enumerable.Any<IdentityRole>((IEnumerable<IdentityRole>)user.Roles' (Func<IdentityRole' bool>)(r => r.Name.ToUpper() == role.ToUpper()))); " is 167.
Long Statement,NHibernate.AspNet.Identity,UserStore<TUser>,C:\research\architectureSmells\repos\nhibernate_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity\UserStore`1.cs,GetUserAggregateAsync,The length of the statement  "                // no cartesian product' batch call. Don't know if it's really needed: should we eager load or let lazy loading do its stuff? " is 125.
Magic Number,NHibernate.AspNet.Identity,IdentityRoleMap,C:\research\architectureSmells\repos\nhibernate_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity\IdentityRole.cs,IdentityRoleMap,The following statement contains a magic number: this.Property(x => x.Name' map =>              {                  map.Length(255);                  map.NotNullable(true);                  map.Unique(true);              });
Magic Number,NHibernate.AspNet.Identity,IdentityUserMap,C:\research\architectureSmells\repos\nhibernate_NHibernate.AspNet.Identity\source\NHibernate.AspNet.Identity\IdentityUser.cs,IdentityUserMap,The following statement contains a magic number: this.Property(x => x.UserName' map =>              {                  map.Length(255);                  map.NotNullable(true);                  map.Unique(true);              });
