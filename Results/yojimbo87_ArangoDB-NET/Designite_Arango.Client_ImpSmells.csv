Implementation smell,Namespace,Class,File,Method,Description
Long Method,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,ConvertToObject,The method has 145 lines of code.
Long Method,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,ConvertToCollection,The method has 102 lines of code.
Long Method,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,ParseDictionary,The method has 148 lines of code.
Long Method,Arango.Client.Protocol,Connection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Protocol\Connection.cs,Send,The method has 104 lines of code.
Complex Method,Arango.Client,Dictator,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\Dictator.cs,ToDocument,Cyclomatic complexity of the method is 12
Complex Method,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,Drop,Cyclomatic complexity of the method is 8
Complex Method,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,ConvertToObject,Cyclomatic complexity of the method is 23
Complex Method,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,ConvertToCollection,Cyclomatic complexity of the method is 13
Complex Method,Arango.Client,Schema,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\Schema.cs,ValidateFieldValueRules,Cyclomatic complexity of the method is 16
Complex Method,Arango.fastJSON,Formatter,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\Formatter.cs,PrettyPrint,Cyclomatic complexity of the method is 11
Complex Method,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,ToObject,Cyclomatic complexity of the method is 13
Complex Method,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,ChangeType,Cyclomatic complexity of the method is 10
Complex Method,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,RootDictionary,Cyclomatic complexity of the method is 9
Complex Method,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,ParseDictionary,Cyclomatic complexity of the method is 44
Complex Method,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,ReadDataTable,Cyclomatic complexity of the method is 10
Complex Method,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,ParseString,Cyclomatic complexity of the method is 18
Complex Method,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,NextTokenCore,Cyclomatic complexity of the method is 15
Complex Method,Arango.fastJSON,JSONSerializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonSerializer.cs,WriteValue,Cyclomatic complexity of the method is 17
Complex Method,Arango.fastJSON,JSONSerializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonSerializer.cs,WriteObject,Cyclomatic complexity of the method is 16
Complex Method,Arango.fastJSON,JSONSerializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonSerializer.cs,WriteString,Cyclomatic complexity of the method is 14
Complex Method,Arango.fastJSON,Reflection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\Reflection.cs,Getproperties,Cyclomatic complexity of the method is 8
Complex Method,Arango.fastJSON,Reflection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\Reflection.cs,CreateMyProp,Cyclomatic complexity of the method is 21
Complex Method,Arango.fastJSON,Reflection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\Reflection.cs,GetGetters,Cyclomatic complexity of the method is 17
Long Parameter List,Arango.Client,ASettings,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ASettings.cs,AddConnection,The method has 5 parameters. Parameters: alias' hostname' port' isSecured' useWebProxy
Long Parameter List,Arango.Client,ASettings,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ASettings.cs,AddConnection,The method has 7 parameters. Parameters: alias' hostname' port' isSecured' username' password' useWebProxy
Long Parameter List,Arango.Client,ASettings,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ASettings.cs,AddConnection,The method has 6 parameters. Parameters: alias' hostname' port' isSecured' databaseName' useWebProxy
Long Parameter List,Arango.Client,ASettings,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ASettings.cs,AddConnection,The method has 8 parameters. Parameters: alias' hostname' port' isSecured' databaseName' username' password' useWebProxy
Long Parameter List,Arango.Client.Protocol,Connection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Protocol\Connection.cs,Connection,The method has 7 parameters. Parameters: alias' hostname' port' isSecured' userName' password' useWebProxy
Long Parameter List,Arango.Client.Protocol,Connection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Protocol\Connection.cs,Connection,The method has 8 parameters. Parameters: alias' hostname' port' isSecured' databaseName' userName' password' useWebProxy
Long Statement,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,DateTime,The length of the statement  "                dateTime = System.DateTime.Parse((string)fieldValue' DateTimeFormatInfo.InvariantInfo' DateTimeStyles.AdjustToUniversal); " is 121.
Long Statement,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,Document,The length of the statement  "                throw new InvalidFieldTypeException(string.Format("Field path '{0}' value does not contain Dictionary<string' object> type."' fieldPath)); " is 138.
Long Statement,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,Size,The length of the statement  "                throw new InvalidFieldTypeException(string.Format("Field path '{0}' value does not contain type which can retrieve items count."' fieldPath)); " is 142.
Long Statement,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,DateTime,The length of the statement  "            SetFieldValue(dictionary' fieldPath' fieldValue.ToUniversalTime().ToString(dateTimeStringFormat' DateTimeFormatInfo.InvariantInfo)); " is 132.
Long Statement,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,DateTime,The length of the statement  "                    SetFieldValue(dictionary' fieldPath' fieldValue.ToUniversalTime().ToString(Dictator.Settings.DateTimeStringFormat' DateTimeFormatInfo.InvariantInfo)); " is 150.
Long Statement,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,IsDateTime,The length of the statement  "                            var dateTime = System.DateTime.Parse((string)fieldValue' DateTimeFormatInfo.InvariantInfo' DateTimeStyles.AdjustToUniversal); " is 125.
Long Statement,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,GetFieldValue,The length of the statement  "                    throw new NonExistingFieldException(string.Format("Field path '{0}' does not contain field '{1}'."' fieldPath' fieldName)); " is 123.
Long Statement,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,GetFieldValue,The length of the statement  "                    throw new InvalidFieldException(string.Format("Field path '{0}' contains field '{1}' which is not dictionary."' fieldPath' fieldName)); " is 135.
Long Statement,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,ConvertToObject,The length of the statement  "                        propertyInfo.SetValue(stronglyTypedObject' ConvertToObject((Dictionary<string' object>)fieldValue' propertyInfo.PropertyType)' null); " is 133.
Long Statement,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,ConvertToObject,The length of the statement  "                            propertyInfo.SetValue(stronglyTypedObject' ConvertToObject((Dictionary<string' object>)fieldValue' propertyInfo.PropertyType)' null); " is 133.
Long Statement,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,ConvertToObject,The length of the statement  "                            propertyInfo.SetValue(stronglyTypedObject' System.Enum.Parse(propertyInfo.PropertyType' (string)fieldValue' true)' null); " is 121.
Long Statement,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,ConvertToObject,The length of the statement  "                    else if (propertyInfo.PropertyType.IsGenericType && propertyInfo.PropertyType.GetGenericTypeDefinition() == typeof(Nullable<>)) " is 127.
Long Statement,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,ConvertToCollection,The length of the statement  "                                ((IList)collectionInstance).Add(ConvertToObject((Dictionary<string' object>)collection[i]' collectionType.GetGenericArguments()[0])); " is 133.
Long Statement,Arango.Client,Schema,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\Schema.cs,Validate,The length of the statement  "            var fieldRules = _rules.Where(rule => rule.Constraint == Constraint.MustHave || rule.Constraint == Constraint.ShouldHave).ToList(); " is 131.
Long Statement,Arango.Client,Schema,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\Schema.cs,Validate,The length of the statement  "                            var fieldValueRules = _rules.Where(rule => rule.FieldPath == fieldRule.FieldPath && rule.Constraint != Constraint.MustHave).ToList(); " is 133.
Long Statement,Arango.Client,Schema,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\Schema.cs,Validate,The length of the statement  "                            var fieldValueRules = _rules.Where(rule => rule.FieldPath == fieldRule.FieldPath && rule.Constraint != Constraint.ShouldHave).ToList(); " is 135.
Long Statement,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,ParseDictionary,The length of the statement  "            Dictionary<string' myPropInfo> props = Reflection.Instance.Getproperties(type' typename' Reflection.Instance.IsTypeRegistered(type)); " is 133.
Long Statement,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,ParseDictionary,The length of the statement  "                            case myPropInfoType.StringKeyDictionary: oset = CreateStringKeyDictionary((Dictionary<string' object>)v' pi.pt' pi.GenericTypes' globaltypes); break; " is 149.
Long Statement,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,CreateDataset,The length of the statement  "                DatasetSchema ms = (DatasetSchema)ParseDictionary((Dictionary<string' object>)schema' globalTypes' typeof(DatasetSchema)' null); " is 128.
Long Statement,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,CreateDataTable,The length of the statement  "                var ms = (DatasetSchema)this.ParseDictionary((Dictionary<string' object>)schema' globalTypes' typeof(DatasetSchema)' null); " is 123.
Complex Conditional,Arango.Client,Dictator,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\Dictator.cs,ToList,The conditional expression  "elementType.IsPrimitive ||                              (elementType == typeof(string)) ||                              (elementType == typeof(DateTime)) ||                              (elementType == typeof(decimal))"  is complex.
Complex Conditional,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,Enum,The conditional expression  "(fieldValue is byte) || (fieldValue is sbyte) ||                      (fieldValue is short) || (fieldValue is ushort) ||                      (fieldValue is int) || (fieldValue is uint) ||                      (fieldValue is long) || (fieldValue is ulong)"  is complex.
Complex Conditional,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,IsInteger,The conditional expression  "(fieldValue is byte) ||                          (fieldValue is sbyte) ||                          (fieldValue is short) ||                          (fieldValue is ushort) ||                          (fieldValue is int) ||                          (fieldValue is uint) ||                          (fieldValue is long) ||                          (fieldValue is ulong)"  is complex.
Complex Conditional,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,ConvertToObject,The conditional expression  "(fieldValue is byte) || (fieldValue is sbyte) ||                                  (fieldValue is short) || (fieldValue is ushort) ||                                  (fieldValue is int) || (fieldValue is uint) ||                                  (fieldValue is long) || (fieldValue is ulong)"  is complex.
Complex Conditional,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,ConvertToCollection,The conditional expression  "elementType.IsPrimitive ||                              (elementType == typeof(string)) ||                              (elementType == typeof(DateTime)) ||                              (elementType == typeof(decimal))"  is complex.
Complex Conditional,Arango.Client,Schema,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\Schema.cs,ValidateMinConstraint,The conditional expression  "(fieldValue is byte) ||                      (fieldValue is sbyte) ||                      (fieldValue is short) ||                      (fieldValue is ushort) ||                      (fieldValue is int) ||                      (fieldValue is uint) ||                      (fieldValue is long) ||                      (fieldValue is ulong)"  is complex.
Complex Conditional,Arango.Client,Schema,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\Schema.cs,ValidateMaxConstraint,The conditional expression  "(fieldValue is byte) ||                      (fieldValue is sbyte) ||                      (fieldValue is short) ||                      (fieldValue is ushort) ||                      (fieldValue is int) ||                      (fieldValue is uint) ||                      (fieldValue is long) ||                      (fieldValue is ulong)"  is complex.
Complex Conditional,Arango.Client,Schema,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\Schema.cs,ValidateRangeConstraint,The conditional expression  "(fieldValue is byte) ||                      (fieldValue is sbyte) ||                      (fieldValue is short) ||                      (fieldValue is ushort) ||                      (fieldValue is int) ||                      (fieldValue is uint) ||                      (fieldValue is long) ||                      (fieldValue is ulong)"  is complex.
Complex Conditional,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,ParseNumber,The conditional expression  "(c >= '0' && c <= '9') || c == '.' || c == '-' || c == '+' || c == 'e' || c == 'E'"  is complex.
Complex Conditional,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,NextTokenCore,The conditional expression  "c != ' ' && c != '\t' && c != '\n' && c != '\r'"  is complex.
Complex Conditional,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,NextTokenCore,The conditional expression  "json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e'"  is complex.
Complex Conditional,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,NextTokenCore,The conditional expression  "json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e'"  is complex.
Complex Conditional,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,NextTokenCore,The conditional expression  "json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l'"  is complex.
Complex Conditional,Arango.fastJSON,JSONSerializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonSerializer.cs,WriteValue,The conditional expression  "obj is int || obj is long || obj is double ||                  obj is decimal || obj is float ||                  obj is byte || obj is short ||                  obj is sbyte || obj is ushort ||                  obj is uint || obj is ulong"  is complex.
Complex Conditional,Arango.fastJSON,JSONSerializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonSerializer.cs,WriteValue,The conditional expression  "_params.KVStyleStringDictionary == false && obj is IDictionary &&                  obj.GetType().IsGenericType && obj.GetType().GetGenericArguments()[0] == typeof(string)"  is complex.
Complex Conditional,Arango.fastJSON,JSONSerializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonSerializer.cs,WriteString,The conditional expression  "c >= ' ' && c < 128 && c != '\"' && c != '\\'"  is complex.
Complex Conditional,Arango.fastJSON,JSONSerializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonSerializer.cs,WriteString,The conditional expression  "c != '\t' && c != '\n' && c != '\r' && c != '\"' && c != '\\'"  is complex.
Complex Conditional,Arango.fastJSON,Reflection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\Reflection.cs,CreateMyProp,The conditional expression  "t.IsValueType && !t.IsPrimitive && !t.IsEnum && t != typeof(decimal)"  is complex.
Empty Catch Block,Arango.Client,DictionaryExtensions,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictionaryExtensions.cs,CloneOnly,The method has an empty catch block.
Magic Number,Arango.Client,DictatorSettings,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\dictator\DictatorSettings.cs,DictatorSettings,The following statement contains a magic number: UnixEpoch = new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,Create,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,Get,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,Get,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,GetProperties,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,GetProperties,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,GetProperties,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,GetCount,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,GetCount,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,GetCount,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,GetFigures,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,GetFigures,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,GetFigures,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,GetRevision,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,GetRevision,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,GetRevision,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,GetChecksum,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,GetChecksum,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,GetChecksum,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,GetAllIndexes,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,GetAllIndexes,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,Truncate,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,Load,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,Load,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,Load,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,Unload,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,Unload,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,Unload,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,ChangeProperties,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,Rename,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,RotateJournal,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Body<bool>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,RotateJournal,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Body<bool>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,RotateJournal,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Body<bool>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,Delete,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,Delete,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ACollection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ACollection.cs,Delete,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADatabase,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADatabase.cs,Create,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                      var body = response.ParseBody<Body<bool>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 403:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADatabase,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADatabase.cs,Create,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                      var body = response.ParseBody<Body<bool>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 403:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADatabase,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADatabase.cs,Create,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                      var body = response.ParseBody<Body<bool>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 403:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADatabase,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADatabase.cs,Create,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                      var body = response.ParseBody<Body<bool>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 403:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADatabase,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADatabase.cs,GetCurrent,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Body<Dictionary<string' object>>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADatabase,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADatabase.cs,GetCurrent,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Body<Dictionary<string' object>>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADatabase,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADatabase.cs,GetCurrent,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Body<Dictionary<string' object>>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADatabase,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADatabase.cs,GetAccessibleDatabases,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Body<List<string>>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADatabase,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADatabase.cs,GetAccessibleDatabases,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Body<List<string>>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADatabase,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADatabase.cs,GetAllDatabases,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Body<List<string>>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 403:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADatabase,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADatabase.cs,GetAllDatabases,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Body<List<string>>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 403:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADatabase,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADatabase.cs,GetAllDatabases,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Body<List<string>>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 403:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADatabase,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADatabase.cs,GetAllCollections,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body.List<Dictionary<string' object>>("result");                      break;                  case 400:                  case 403:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADatabase,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADatabase.cs,GetAllCollections,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body.List<Dictionary<string' object>>("result");                      break;                  case 400:                  case 403:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADatabase,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADatabase.cs,GetAllCollections,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body.List<Dictionary<string' object>>("result");                      break;                  case 400:                  case 403:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADatabase,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADatabase.cs,Drop,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Body<bool>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 403:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADatabase,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADatabase.cs,Drop,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Body<bool>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 403:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADatabase,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADatabase.cs,Drop,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Body<bool>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 403:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADatabase,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADatabase.cs,Drop,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Body<bool>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 403:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Create,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                  case 202:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Create,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                  case 202:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Create,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                  case 202:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Create,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                  case 202:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Check,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      if ((response.Headers["ETag"] ?? "").Trim().Length > 0)                      {                          result.Value = response.Headers["ETag"].Replace("\""' "");                          result.Success = (result.Value != null);                      }                      break;                  case 304:                  case 412:                      if ((response.Headers["ETag"] ?? "").Trim().Length > 0)                      {                          result.Value = response.Headers["ETag"].Replace("\""' "");                      }                      break;                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Check,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      if ((response.Headers["ETag"] ?? "").Trim().Length > 0)                      {                          result.Value = response.Headers["ETag"].Replace("\""' "");                          result.Success = (result.Value != null);                      }                      break;                  case 304:                  case 412:                      if ((response.Headers["ETag"] ?? "").Trim().Length > 0)                      {                          result.Value = response.Headers["ETag"].Replace("\""' "");                      }                      break;                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Check,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      if ((response.Headers["ETag"] ?? "").Trim().Length > 0)                      {                          result.Value = response.Headers["ETag"].Replace("\""' "");                          result.Success = (result.Value != null);                      }                      break;                  case 304:                  case 412:                      if ((response.Headers["ETag"] ?? "").Trim().Length > 0)                      {                          result.Value = response.Headers["ETag"].Replace("\""' "");                      }                      break;                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Check,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      if ((response.Headers["ETag"] ?? "").Trim().Length > 0)                      {                          result.Value = response.Headers["ETag"].Replace("\""' "");                          result.Success = (result.Value != null);                      }                      break;                  case 304:                  case 412:                      if ((response.Headers["ETag"] ?? "").Trim().Length > 0)                      {                          result.Value = response.Headers["ETag"].Replace("\""' "");                      }                      break;                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Get,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<T>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 412:                      body = response.ParseBody<T>();                                            result.Value = body;                      break;                  case 304:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Get,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<T>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 412:                      body = response.ParseBody<T>();                                            result.Value = body;                      break;                  case 304:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Get,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<T>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 412:                      body = response.ParseBody<T>();                                            result.Value = body;                      break;                  case 304:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Get,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<T>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 412:                      body = response.ParseBody<T>();                                            result.Value = body;                      break;                  case 304:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,GetEdges,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                        result.Success = (body != null);                        if (result.Success)                      {                          result.Value = body.List<Dictionary<string' object>>("edges");                      }                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,GetEdges,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                        result.Success = (body != null);                        if (result.Success)                      {                          result.Value = body.List<Dictionary<string' object>>("edges");                      }                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,GetEdges,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                        result.Success = (body != null);                        if (result.Success)                      {                          result.Value = body.List<Dictionary<string' object>>("edges");                      }                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Update,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                  case 202:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 412:                      body = response.ParseBody<Dictionary<string' object>>();                                            result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Update,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                  case 202:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 412:                      body = response.ParseBody<Dictionary<string' object>>();                                            result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Update,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                  case 202:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 412:                      body = response.ParseBody<Dictionary<string' object>>();                                            result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Update,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                  case 202:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 412:                      body = response.ParseBody<Dictionary<string' object>>();                                            result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Update,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                  case 202:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 412:                      body = response.ParseBody<Dictionary<string' object>>();                                            result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Replace,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                  case 202:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 412:                      body = response.ParseBody<Dictionary<string' object>>();                                            result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Replace,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                  case 202:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 412:                      body = response.ParseBody<Dictionary<string' object>>();                                            result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Replace,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                  case 202:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 412:                      body = response.ParseBody<Dictionary<string' object>>();                                            result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Replace,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                  case 202:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 412:                      body = response.ParseBody<Dictionary<string' object>>();                                            result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Replace,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                  case 202:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 412:                      body = response.ParseBody<Dictionary<string' object>>();                                            result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Delete,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                  case 202:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 412:                      body = response.ParseBody<Dictionary<string' object>>();                                            result.Value = body;                      break;                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Delete,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                  case 202:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 412:                      body = response.ParseBody<Dictionary<string' object>>();                                            result.Value = body;                      break;                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Delete,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                  case 202:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 412:                      body = response.ParseBody<Dictionary<string' object>>();                                            result.Value = body;                      break;                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,Delete,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                  case 202:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 412:                      body = response.ParseBody<Dictionary<string' object>>();                                            result.Value = body;                      break;                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,IsID,The following statement contains a magic number: (split.Length == 2) && (split[0].Length > 0) && (split[1].Length > 0)
Magic Number,Arango.Client,ADocument,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ADocument.cs,ParseKey,The following statement contains a magic number: (split.Length == 2) && (split[0].Length > 0) && (split[1].Length > 0)
Magic Number,Arango.Client,AFunction,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AFunction.cs,Register,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                  case 201:                      result.Success = true;                      result.Value = true;                      break;                  case 400:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AFunction,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AFunction.cs,Register,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                  case 201:                      result.Success = true;                      result.Value = true;                      break;                  case 400:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AFunction,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AFunction.cs,Register,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                  case 201:                      result.Success = true;                      result.Value = true;                      break;                  case 400:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AFunction,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AFunction.cs,List,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      //var body = ((IEnumerable)response.ParseBody()).Cast<Dictionary<string' object>>().ToList();                      var body = response.ParseBody<List<Dictionary<string' object>>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AFunction,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AFunction.cs,Unregister,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      result.Success = true;                      result.Value = true;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AFunction,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AFunction.cs,Unregister,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      result.Success = true;                      result.Value = true;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AFunction,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AFunction.cs,Unregister,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      result.Success = true;                      result.Value = true;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AIndex,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AIndex.cs,Create,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                  case 201:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AIndex,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AIndex.cs,Create,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                  case 201:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AIndex,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AIndex.cs,Create,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                  case 201:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AIndex,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AIndex.cs,Create,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                  case 201:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AIndex,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AIndex.cs,Get,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AIndex,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AIndex.cs,Get,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AIndex,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AIndex.cs,Delete,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AIndex,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AIndex.cs,Delete,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AIndex,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AIndex.cs,Delete,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                      result.Value = body;                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AQuery,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AQuery.cs,ToList,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                      var body = response.ParseBody<Body<List<T>>>();                                            result.Success = (body != null);                                            if (result.Success)                      {                          result.Value = new List<T>();                          result.Value.AddRange(body.Result);                          result.Extra = new Dictionary<string' object>();                                                    CopyExtraBodyFields<List<T>>(body' result.Extra);                                                    if (body.HasMore)                          {                              var putResult = Put<T>(body.ID);                                                            result.Success = putResult.Success;                              result.StatusCode = putResult.StatusCode;                                                            if (putResult.Success)                              {                                  result.Value.AddRange(putResult.Value);                              }                              else                              {                                  result.Error = putResult.Error;                              }                          }                      }                      break;                  case 400:                  case 404:                  case 405:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AQuery,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AQuery.cs,ToList,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                      var body = response.ParseBody<Body<List<T>>>();                                            result.Success = (body != null);                                            if (result.Success)                      {                          result.Value = new List<T>();                          result.Value.AddRange(body.Result);                          result.Extra = new Dictionary<string' object>();                                                    CopyExtraBodyFields<List<T>>(body' result.Extra);                                                    if (body.HasMore)                          {                              var putResult = Put<T>(body.ID);                                                            result.Success = putResult.Success;                              result.StatusCode = putResult.StatusCode;                                                            if (putResult.Success)                              {                                  result.Value.AddRange(putResult.Value);                              }                              else                              {                                  result.Error = putResult.Error;                              }                          }                      }                      break;                  case 400:                  case 404:                  case 405:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AQuery,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AQuery.cs,ToList,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                      var body = response.ParseBody<Body<List<T>>>();                                            result.Success = (body != null);                                            if (result.Success)                      {                          result.Value = new List<T>();                          result.Value.AddRange(body.Result);                          result.Extra = new Dictionary<string' object>();                                                    CopyExtraBodyFields<List<T>>(body' result.Extra);                                                    if (body.HasMore)                          {                              var putResult = Put<T>(body.ID);                                                            result.Success = putResult.Success;                              result.StatusCode = putResult.StatusCode;                                                            if (putResult.Success)                              {                                  result.Value.AddRange(putResult.Value);                              }                              else                              {                                  result.Error = putResult.Error;                              }                          }                      }                      break;                  case 400:                  case 404:                  case 405:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AQuery,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AQuery.cs,ToList,The following statement contains a magic number: switch (response.StatusCode)              {                  case 201:                      var body = response.ParseBody<Body<List<T>>>();                                            result.Success = (body != null);                                            if (result.Success)                      {                          result.Value = new List<T>();                          result.Value.AddRange(body.Result);                          result.Extra = new Dictionary<string' object>();                                                    CopyExtraBodyFields<List<T>>(body' result.Extra);                                                    if (body.HasMore)                          {                              var putResult = Put<T>(body.ID);                                                            result.Success = putResult.Success;                              result.StatusCode = putResult.StatusCode;                                                            if (putResult.Success)                              {                                  result.Value.AddRange(putResult.Value);                              }                              else                              {                                  result.Error = putResult.Error;                              }                          }                      }                      break;                  case 400:                  case 404:                  case 405:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AQuery,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AQuery.cs,Put,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                                          var body = response.ParseBody<Body<List<T>>>();                                            result.Success = (body.Result != null);                                            if (result.Success)                      {                          result.Value = new List<T>();                          result.Value.AddRange(body.Result);                                                    if (body.HasMore)                          {                              var putResult = Put<T>(body.ID);                                                            result.Success = putResult.Success;                              result.StatusCode = putResult.StatusCode;                                                            if (putResult.Success)                              {                                  result.Value.AddRange(putResult.Value);                              }                              else                              {                                  result.Error = putResult.Error;                              }                          }                      }                      break;                  case 400:                  case 404:                  default:                      break;              }
Magic Number,Arango.Client,AQuery,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AQuery.cs,Put,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                                          var body = response.ParseBody<Body<List<T>>>();                                            result.Success = (body.Result != null);                                            if (result.Success)                      {                          result.Value = new List<T>();                          result.Value.AddRange(body.Result);                                                    if (body.HasMore)                          {                              var putResult = Put<T>(body.ID);                                                            result.Success = putResult.Success;                              result.StatusCode = putResult.StatusCode;                                                            if (putResult.Success)                              {                                  result.Value.AddRange(putResult.Value);                              }                              else                              {                                  result.Error = putResult.Error;                              }                          }                      }                      break;                  case 400:                  case 404:                  default:                      break;              }
Magic Number,Arango.Client,AQuery,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AQuery.cs,Put,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                                          var body = response.ParseBody<Body<List<T>>>();                                            result.Success = (body.Result != null);                                            if (result.Success)                      {                          result.Value = new List<T>();                          result.Value.AddRange(body.Result);                                                    if (body.HasMore)                          {                              var putResult = Put<T>(body.ID);                                                            result.Success = putResult.Success;                              result.StatusCode = putResult.StatusCode;                                                            if (putResult.Success)                              {                                  result.Value.AddRange(putResult.Value);                              }                              else                              {                                  result.Error = putResult.Error;                              }                          }                      }                      break;                  case 400:                  case 404:                  default:                      break;              }
Magic Number,Arango.Client,AQuery,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AQuery.cs,Parse,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                                            if (result.Success)                      {                          result.Value = body.CloneExcept("code"' "error");                      }                      break;                  case 400:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AQuery,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AQuery.cs,Parse,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Dictionary<string' object>>();                                            result.Success = (body != null);                                            if (result.Success)                      {                          result.Value = body.CloneExcept("code"' "error");                      }                      break;                  case 400:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AQuery,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AQuery.cs,DeleteCursor,The following statement contains a magic number: switch (response.StatusCode)              {                  case 202:                      if (response.BodyType == BodyType.Document)                      {                          result.Success = true;                          result.Value = true;                      }                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AQuery,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AQuery.cs,DeleteCursor,The following statement contains a magic number: switch (response.StatusCode)              {                  case 202:                      if (response.BodyType == BodyType.Document)                      {                          result.Success = true;                          result.Value = true;                      }                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,AQuery,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\AQuery.cs,DeleteCursor,The following statement contains a magic number: switch (response.StatusCode)              {                  case 202:                      if (response.BodyType == BodyType.Document)                      {                          result.Success = true;                          result.Value = true;                      }                      break;                  case 400:                  case 404:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ATransaction,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ATransaction.cs,Execute,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Body<T>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 404:                  case 409:                  case 500:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ATransaction,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ATransaction.cs,Execute,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Body<T>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 404:                  case 409:                  case 500:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ATransaction,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ATransaction.cs,Execute,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Body<T>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 404:                  case 409:                  case 500:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ATransaction,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ATransaction.cs,Execute,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Body<T>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 404:                  case 409:                  case 500:                  default:                      // Arango error                      break;              }
Magic Number,Arango.Client,ATransaction,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\Public\ATransaction.cs,Execute,The following statement contains a magic number: switch (response.StatusCode)              {                  case 200:                      var body = response.ParseBody<Body<T>>();                                            result.Success = (body != null);                      result.Value = body.Result;                      break;                  case 400:                  case 404:                  case 409:                  case 500:                  default:                      // Arango error                      break;              }
Magic Number,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,CreateGuid,The following statement contains a magic number: s.Length > 30
Magic Number,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: year = CreateInteger(value' 0' 4);
Magic Number,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: month = CreateInteger(value' 5' 2);
Magic Number,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: month = CreateInteger(value' 5' 2);
Magic Number,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: day = CreateInteger(value' 8' 2);
Magic Number,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: day = CreateInteger(value' 8' 2);
Magic Number,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: hour = CreateInteger(value' 11' 2);
Magic Number,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: hour = CreateInteger(value' 11' 2);
Magic Number,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: min = CreateInteger(value' 14' 2);
Magic Number,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: min = CreateInteger(value' 14' 2);
Magic Number,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: sec = CreateInteger(value' 17' 2);
Magic Number,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: sec = CreateInteger(value' 17' 2);
Magic Number,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: ms = CreateInteger(value' 20' 3);
Magic Number,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: ms = CreateInteger(value' 20' 3);
Magic Number,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: value.Length > 21 && value[19] == '.'
Magic Number,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: value.Length > 21 && value[19] == '.'
Magic Number,Arango.fastJSON,deserializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JSON.cs,ReadDataTable,The following statement contains a magic number: s != null && s.Length < 36
Magic Number,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,ParseString,The following statement contains a magic number: switch (json[index++])                  {                      case '"':                          s.Append('"');                          break;                        case '\\':                          s.Append('\\');                          break;                        case '/':                          s.Append('/');                          break;                        case 'b':                          s.Append('\b');                          break;                        case 'f':                          s.Append('\f');                          break;                        case 'n':                          s.Append('\n');                          break;                        case 'r':                          s.Append('\r');                          break;                        case 't':                          s.Append('\t');                          break;                        case 'u':                          {                              int remainingLength = json.Length - index;                              if (remainingLength < 4) break;                                // parse the 32 bit hex into an integer codepoint                              uint codePoint = ParseUnicode(json[index]' json[index + 1]' json[index + 2]' json[index + 3]);                              s.Append((char)codePoint);                                // skip 4 chars                              index += 4;                          }                          break;                  }
Magic Number,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,ParseString,The following statement contains a magic number: switch (json[index++])                  {                      case '"':                          s.Append('"');                          break;                        case '\\':                          s.Append('\\');                          break;                        case '/':                          s.Append('/');                          break;                        case 'b':                          s.Append('\b');                          break;                        case 'f':                          s.Append('\f');                          break;                        case 'n':                          s.Append('\n');                          break;                        case 'r':                          s.Append('\r');                          break;                        case 't':                          s.Append('\t');                          break;                        case 'u':                          {                              int remainingLength = json.Length - index;                              if (remainingLength < 4) break;                                // parse the 32 bit hex into an integer codepoint                              uint codePoint = ParseUnicode(json[index]' json[index + 1]' json[index + 2]' json[index + 3]);                              s.Append((char)codePoint);                                // skip 4 chars                              index += 4;                          }                          break;                  }
Magic Number,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,ParseString,The following statement contains a magic number: switch (json[index++])                  {                      case '"':                          s.Append('"');                          break;                        case '\\':                          s.Append('\\');                          break;                        case '/':                          s.Append('/');                          break;                        case 'b':                          s.Append('\b');                          break;                        case 'f':                          s.Append('\f');                          break;                        case 'n':                          s.Append('\n');                          break;                        case 'r':                          s.Append('\r');                          break;                        case 't':                          s.Append('\t');                          break;                        case 'u':                          {                              int remainingLength = json.Length - index;                              if (remainingLength < 4) break;                                // parse the 32 bit hex into an integer codepoint                              uint codePoint = ParseUnicode(json[index]' json[index + 1]' json[index + 2]' json[index + 3]);                              s.Append((char)codePoint);                                // skip 4 chars                              index += 4;                          }                          break;                  }
Magic Number,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,ParseString,The following statement contains a magic number: switch (json[index++])                  {                      case '"':                          s.Append('"');                          break;                        case '\\':                          s.Append('\\');                          break;                        case '/':                          s.Append('/');                          break;                        case 'b':                          s.Append('\b');                          break;                        case 'f':                          s.Append('\f');                          break;                        case 'n':                          s.Append('\n');                          break;                        case 'r':                          s.Append('\r');                          break;                        case 't':                          s.Append('\t');                          break;                        case 'u':                          {                              int remainingLength = json.Length - index;                              if (remainingLength < 4) break;                                // parse the 32 bit hex into an integer codepoint                              uint codePoint = ParseUnicode(json[index]' json[index + 1]' json[index + 2]' json[index + 3]);                              s.Append((char)codePoint);                                // skip 4 chars                              index += 4;                          }                          break;                  }
Magic Number,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,NextTokenCore,The following statement contains a magic number: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;              }
Magic Number,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,NextTokenCore,The following statement contains a magic number: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;              }
Magic Number,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,NextTokenCore,The following statement contains a magic number: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;              }
Magic Number,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,NextTokenCore,The following statement contains a magic number: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;              }
Magic Number,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,NextTokenCore,The following statement contains a magic number: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;              }
Magic Number,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,NextTokenCore,The following statement contains a magic number: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;              }
Magic Number,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,NextTokenCore,The following statement contains a magic number: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;              }
Magic Number,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,NextTokenCore,The following statement contains a magic number: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;              }
Magic Number,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,NextTokenCore,The following statement contains a magic number: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;              }
Magic Number,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,NextTokenCore,The following statement contains a magic number: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;              }
Magic Number,Arango.fastJSON,JSONSerializer,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonSerializer.cs,WriteString,The following statement contains a magic number: c >= ' ' && c < 128 && c != '\"' && c != '\\'
Magic Number,Arango.fastJSON,Reflection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\Reflection.cs,CreateSetField,The following statement contains a magic number: Type[] arguments = new Type[2];
Magic Number,Arango.fastJSON,Reflection,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\Reflection.cs,CreateSetMethod,The following statement contains a magic number: Type[] arguments = new Type[2];
Missing Default,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,ParseValue,The following switch statement is missing a default case: switch (LookAhead())              {                  case Token.Number:                      return ParseNumber();                    case Token.String:                      return ParseString();                    case Token.Curly_Open:                      return ParseObject();                    case Token.Squared_Open:                      return ParseArray();                    case Token.True:                      ConsumeToken();                      return true;                    case Token.False:                      ConsumeToken();                      return false;                    case Token.Null:                      ConsumeToken();                      return null;              }
Missing Default,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,ParseString,The following switch statement is missing a default case: switch (json[index++])                  {                      case '"':                          s.Append('"');                          break;                        case '\\':                          s.Append('\\');                          break;                        case '/':                          s.Append('/');                          break;                        case 'b':                          s.Append('\b');                          break;                        case 'f':                          s.Append('\f');                          break;                        case 'n':                          s.Append('\n');                          break;                        case 'r':                          s.Append('\r');                          break;                        case 't':                          s.Append('\t');                          break;                        case 'u':                          {                              int remainingLength = json.Length - index;                              if (remainingLength < 4) break;                                // parse the 32 bit hex into an integer codepoint                              uint codePoint = ParseUnicode(json[index]' json[index + 1]' json[index + 2]' json[index + 3]);                              s.Append((char)codePoint);                                // skip 4 chars                              index += 4;                          }                          break;                  }
Missing Default,Arango.fastJSON,JsonParser,D:\research\architectureSmells\repos\yojimbo87_ArangoDB-NET\src\Arango\Arango.Client\ExternalLibraries\fastJSON\JsonParser.cs,NextTokenCore,The following switch statement is missing a default case: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;              }
