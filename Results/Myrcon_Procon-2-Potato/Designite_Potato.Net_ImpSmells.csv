Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Potato.Net.Protocols.CommandServer,CommandServerPacketSerializer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net\Protocols\CommandServer\CommandServerPacketSerializer.cs,SerializeHeader,The length of the statement  "            builder.AppendFormat("HTTP/{0}.{1} {2} {3}\r\n"' packet.ProtocolVersion.Major' packet.ProtocolVersion.Minor' (int)packet.StatusCode' packet.StatusCode);" is 152.
Long Statement,Potato.Net.Protocols.CommandServer,CommandServerPacketSerializer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net\Protocols\CommandServer\CommandServerPacketSerializer.cs,Deserialize,The length of the statement  "            packet.Query = CommandServerPacketSerializer.CombineNameValueCollections(CommandServerPacketSerializer.ParseGet(packet)' CommandServerPacketSerializer.ParsePost(packet));" is 170.
Long Statement,Potato.Net.Protocols.CommandServer,CommandServerListener,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net\Protocols\CommandServer\CommandServerListener.cs,AcceptTcpClientCallback,The length of the statement  "                    CommandServerClient client = new CommandServerClient(commandServerListener.Listener.EndAcceptTcpClient(ar)' commandServerListener.Certificate);" is 143.
Long Statement,Potato.Net.Utils.Tests,ProtocolUnitTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net\Utils\Tests\ProtocolUnitTest.cs,LoggedIn,The length of the statement  "                    this.OnTestEvent(new ProtocolUnitTestEventArgs() { Message = "Timeout on client connection + login. (check end point & credentials)" });" is 136.
Long Statement,Potato.Net.Utils.Tests,ProtocolUnitTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net\Utils\Tests\ProtocolUnitTest.cs,Execute,The length of the statement  "                            ProtocolUnitTestPacket matchedPacket = args.Now.Packets.First().Type == PacketType.Response ? localCommand.Responses.FirstOrDefault(response => response.Matches(args.Now.Packets.First().Text)) : localCommand.Requests.FirstOrDefault(request => request.Matches(args.Now.Packets.First().Text));" is 291.
Long Statement,Potato.Net.Utils.Tests,ProtocolUnitTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net\Utils\Tests\ProtocolUnitTest.cs,Execute,The length of the statement  "                            if (localCommand.Responses.Count(response => response.Found == false) + localCommand.Requests.Count(request => request.Found == false) == 0) {" is 142.
Long Statement,Potato.Net.Utils.Tests,ProtocolUnitTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net\Utils\Tests\ProtocolUnitTest.cs,Execute,The length of the statement  "                        String[] expecting = command.Responses.Where(response => response.Found == false).Select(response => response.ToString()).Union(command.Requests.Where(request => request.Found == false).Select(request => request.ToString())).ToArray();" is 235.
Long Statement,Potato.Net.Utils.Tests,ProtocolUnitTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net\Utils\Tests\ProtocolUnitTest.cs,Execute,The length of the statement  "                        this.OnTestEvent(new ProtocolUnitTestEventArgs() { Message = String.Format("Expecting: {0}; Received: {1}"' String.Join("' "' expecting)' String.Join("' "' unmatchedReceived.ToArray())) });" is 189.
Long Statement,Potato.Net.Utils.Tests,ProtocolUnitTestObject,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net\Utils\Tests\ProtocolUnitTestObject.cs,ReplaceWith,The length of the statement  "                    this.Text = this.Text.Replace(replacement.Text' replacement.Random != null ? replacement.Random.ToString() : replacement.Replace);" is 130.
Magic Number,Potato.Net.Protocols.CommandServer,CommandServerPacketSerializer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net\Protocols\CommandServer\CommandServerPacketSerializer.cs,CommandServerPacketSerializer,The following statement contains a magic number: this.PacketHeaderSize = 14;
Magic Number,Potato.Net.Protocols.CommandServer,CommandServerPacketSerializer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net\Protocols\CommandServer\CommandServerPacketSerializer.cs,Parse,The following statement contains a magic number: var headerValues = packet.Header.Split(new [] { "\r\n" }' StringSplitOptions.RemoveEmptyEntries).Skip(1).ToDictionary(                         line => (line.Split(new[] { ":" }' 2' StringSplitOptions.RemoveEmptyEntries).FirstOrDefault() ?? "").Trim()'                         line => (line.Split(new[] { ":" }' 2' StringSplitOptions.RemoveEmptyEntries).LastOrDefault() ?? "").Trim()                     );
Magic Number,Potato.Net.Protocols.CommandServer,CommandServerPacketSerializer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net\Protocols\CommandServer\CommandServerPacketSerializer.cs,Parse,The following statement contains a magic number: var headerValues = packet.Header.Split(new [] { "\r\n" }' StringSplitOptions.RemoveEmptyEntries).Skip(1).ToDictionary(                         line => (line.Split(new[] { ":" }' 2' StringSplitOptions.RemoveEmptyEntries).FirstOrDefault() ?? "").Trim()'                         line => (line.Split(new[] { ":" }' 2' StringSplitOptions.RemoveEmptyEntries).LastOrDefault() ?? "").Trim()                     );
Magic Number,Potato.Net.Protocols.CommandServer,CommandServerPacketSerializer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net\Protocols\CommandServer\CommandServerPacketSerializer.cs,Parse,The following statement contains a magic number: packet.ProtocolVersion = new Version(status[2].Replace("HTTP/"' ""));
Magic Number,Potato.Net.Protocols.CommandServer,CommandServerPacketSerializer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net\Protocols\CommandServer\CommandServerPacketSerializer.cs,Parse,The following statement contains a magic number: status.Count == 3 && headerValues.ContainsKey("Host") == true
Magic Number,Potato.Net.Protocols.CommandServer,CommandServerPacketSerializer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net\Protocols\CommandServer\CommandServerPacketSerializer.cs,ReadPacketSize,The following statement contains a magic number: length += 4;
Magic Number,Potato.Net.Utils.Tests,ProtocolUnitRandomObject,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net\Utils\Tests\ProtocolUnitRandomObject.cs,ToString,The following statement contains a magic number: int minimum = this.Minimum' maximum = this.Maximum > 0 ? this.Maximum : 10;
Magic Number,Potato.Net.Utils.Tests,ProtocolUnitTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net\Utils\Tests\ProtocolUnitTest.cs,Disconnect,The following statement contains a magic number: (disconnected = disconnectEvent.WaitOne(this.Timeout * 1000)) == false
Magic Number,Potato.Net.Utils.Tests,ProtocolUnitTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net\Utils\Tests\ProtocolUnitTest.cs,LoggedIn,The following statement contains a magic number: (loggedIn = loginEvent.WaitOne(this.Timeout * 1000)) == false
Magic Number,Potato.Net.Utils.Tests,ProtocolUnitTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net\Utils\Tests\ProtocolUnitTest.cs,Execute,The following statement contains a magic number: (success = success && expectedResults.WaitOne(this.Timeout * 1000)) == false
