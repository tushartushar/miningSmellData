Implementation smell,Namespace,Class,File,Method,Description
Long Method,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityLoadConfig,The method has 107 lines of code.
Long Method,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The method has 130 lines of code.
Long Parameter List,Potato.Core.Test.TextCommands,TestTextCommandParserBase,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\TestTextCommandParserBase.cs,AssertCommandPlayerListMapList,The method has 5 parameters. Parameters: textCommandController' command' primaryCommand' players' maps
Long Parameter List,Potato.Core.Test.TextCommands,TestTextCommandParserBase,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\TestTextCommandParserBase.cs,AssertExecutedCommandAgainstTemporalValue,The method has 5 parameters. Parameters: args' primaryCommand' period' delay' interval
Long Parameter List,Potato.Core.Test.TextCommands,TestTextCommandParserBase,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\TestTextCommandParserBase.cs,AssertTemporalCommand,The method has 6 parameters. Parameters: textCommandController' command' primaryCommand' period' delay' interval
Long Identifier,Potato.Core.Test.Protocols.TestProtocolController,TestGetProtocolAssemblies,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestGetProtocolAssemblies.cs,,The length of the parameter TestGetProtocolAssembliesDirectory is 34.
Long Identifier,Potato.Core.Test.Protocols.TestProtocolController,TestLoadProtocolsMetadata,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestLoadProtocolsMetadata.cs,,The length of the parameter TestLoadProtocolsMetadataDirectory is 34.
Long Statement,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteQueryMissingNamespaced,The length of the statement  "                                new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())" is 162.
Long Statement,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQuery,The length of the statement  "                                new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'" is 163.
Long Statement,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQueryNamespaced,The length of the statement  "                                new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'" is 163.
Long Statement,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestInsufficientPermissions,The length of the statement  "            var result = pushEvents.Tunnel(CommandBuilder.EventsEstablishJsonStream("id"' "http://localhost/"' "key"' 1' new List<String>() {" is 129.
Long Statement,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestSuccess,The length of the statement  "            pushEvents.Shared.Security.Tunnel(CommandBuilder.SecurityGroupAddAccount("GroupName"' "Phogue").SetOrigin(CommandOrigin.Local));" is 128.
Long Statement,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestSuccess,The length of the statement  "            pushEvents.Shared.Security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.EventsEstablishJsonStream' 5).SetOrigin(CommandOrigin.Local));" is 163.
Long Statement,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestSuccess,The length of the statement  "            var result = pushEvents.Tunnel(CommandBuilder.EventsEstablishJsonStream("id"' "http://localhost/"' "key"' 1' new List<String>() {" is 129.
Long Statement,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestSuccessTwoEndPointsEstablished,The length of the statement  "            pushEvents.Tunnel(CommandBuilder.EventsEstablishJsonStream("id2"' "http://lolcatshost/"' "key2"' 20' new List<String>() {" is 121.
Long Statement,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestSuccessTwoEndPointsSaved,The length of the statement  "            pushEvents.Tunnel(CommandBuilder.EventsEstablishJsonStream("id2"' "http://lolcatshost/"' "key2"' 20' new List<String>() {" is 121.
Long Statement,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestSuccessTwoEndPointsSaved,The length of the statement  "            Assert.AreEqual(2' pushEvents.Shared.Variables.FlashVariables.First(archive => archive.Key.ToLower() == CommonVariableNames.EventsPushConfigGroups.ToString().ToLower()).Value.ToList<String>().Count);" is 199.
Long Statement,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestSuccessPreviouslySetupWillReflash,The length of the statement  "            pushEvents.Shared.Variables.Tunnel(CommandBuilder.VariablesSet(CommonVariableNames.EventsPushConfigGroups' "id1").SetOrigin(CommandOrigin.Local));" is 146.
Long Statement,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestSuccessPreviouslySetupWillReflash,The length of the statement  "            Assert.AreEqual(1' pushEvents.Shared.Variables.FlashVariables.First(archive => archive.Key.ToLower() == CommonVariableNames.EventsPushConfigGroups.ToString().ToLower()).Value.ToList<String>().Count);" is 199.
Long Statement,Potato.Core.Test.Localization,TestLocalization,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Localization\TestLocalization.cs,TestEnglishLocalizationControllerGetCorrectFormat,The length of the statement  "                //TestHelpers.ObjectListToContentList(new List<Object>() { "en-GB"' "Potato.Core.Test.Localization"' "TestFormat"' new object[] { "World" } })" is 142.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesRemoveRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesRemoveRepository.cs,TestResultInsufficientPermissions,The length of the statement  "            ICommandResult result = packages.Tunnel(CommandBuilder.PackagesRemoveRepository("https://teamcity.myrcon.com/nuget").SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 201.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesRemoveRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesRemoveRepository.cs,TestResultSuccess,The length of the statement  "            ICommandResult result = packages.Tunnel(CommandBuilder.PackagesRemoveRepository("https://teamcity.myrcon.com/nuget").SetOrigin(CommandOrigin.Local));" is 149.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesRemoveRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesRemoveRepository.cs,TestResultSuccessEventListed,The length of the statement  "                if (@event.GenericEventType == GenericEventType.PackagesRepositoryRemoved && @event.Then.Repositories.First().Uri == "https://teamcity.myrcon.com/nuget") {" is 155.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesRemoveRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesRemoveRepository.cs,TestResultSuccessEventListed,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesAppendRepository("https://teamcity.myrcon.com/nuget").SetOrigin(CommandOrigin.Local));" is 125.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesRemoveRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesRemoveRepository.cs,TestResultSuccessEventListed,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesRemoveRepository("https://teamcity.myrcon.com/nuget").SetOrigin(CommandOrigin.Local));" is 125.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesRemoveRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesRemoveRepository.cs,TestSingleRepositoryAddedThenRemoved,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesAppendRepository("https://teamcity.myrcon.com/nuget").SetOrigin(CommandOrigin.Local));" is 125.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesRemoveRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesRemoveRepository.cs,TestSingleRepositoryAddedThenRemoved,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesRemoveRepository("https://teamcity.myrcon.com/nuget").SetOrigin(CommandOrigin.Local));" is 125.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesRemoveRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesRemoveRepository.cs,TestDoubleRepositorySetup,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesAppendRepository("https://teamcity.myrcon.com/nuget").SetOrigin(CommandOrigin.Local));" is 125.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesRemoveRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesRemoveRepository.cs,TestDoubleRepositorySetup,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesRemoveRepository("https://teamcity.myrcon.com/nuget").SetOrigin(CommandOrigin.Local));" is 125.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesRemoveRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesRemoveRepository.cs,TestDoubleRepositorySetup,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesRemoveRepository("https://teamcity.myrcon.com/nuget").SetOrigin(CommandOrigin.Local));" is 125.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesRemoveRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesRemoveRepository.cs,TestSuccessTwoUniqueRepositoriesAdded,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesAppendRepository("https://teamcity.myrcon.com/nuget1").SetOrigin(CommandOrigin.Local));" is 126.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesRemoveRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesRemoveRepository.cs,TestSuccessTwoUniqueRepositoriesAdded,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesAppendRepository("https://teamcity.myrcon.com/nuget2").SetOrigin(CommandOrigin.Local));" is 126.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesRemoveRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesRemoveRepository.cs,TestSuccessTwoUniqueRepositoriesAdded,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesRemoveRepository("https://teamcity.myrcon.com/nuget1").SetOrigin(CommandOrigin.Local));" is 126.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesRemoveRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesRemoveRepository.cs,TestSuccessTwoUniqueRepositoriesAdded,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesRemoveRepository("https://teamcity.myrcon.com/nuget2").SetOrigin(CommandOrigin.Local));" is 126.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesRemoveRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesRemoveRepository.cs,TestSuccessOneRepositorySaved,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesAppendRepository("https://teamcity.myrcon.com/nuget1").SetOrigin(CommandOrigin.Local));" is 126.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesRemoveRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesRemoveRepository.cs,TestSuccessOneRepositorySaved,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesAppendRepository("https://teamcity.myrcon.com/nuget2").SetOrigin(CommandOrigin.Local));" is 126.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesRemoveRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesRemoveRepository.cs,TestSuccessOneRepositorySaved,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesRemoveRepository("https://teamcity.myrcon.com/nuget1").SetOrigin(CommandOrigin.Local));" is 126.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesRemoveRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesRemoveRepository.cs,TestSuccessOneRepositorySaved,The length of the statement  "            Assert.AreEqual(1' packages.Shared.Variables.ArchiveVariables.First(archive => archive.Key.ToLower() == CommonVariableNames.PackagesConfigGroups.ToString().ToLower()).Value.ToList<String>().Count);" is 197.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesAppendRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesAppendRepository.cs,TestResultInsufficientPermissions,The length of the statement  "            ICommandResult result = packages.Tunnel(CommandBuilder.PackagesAppendRepository("https://teamcity.myrcon.com/nuget").SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 201.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesAppendRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesAppendRepository.cs,TestResultSuccess,The length of the statement  "            ICommandResult result = packages.Tunnel(CommandBuilder.PackagesAppendRepository("https://teamcity.myrcon.com/nuget").SetOrigin(CommandOrigin.Local));" is 149.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesAppendRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesAppendRepository.cs,TestResultSuccessEventListed,The length of the statement  "                if (@event.GenericEventType == GenericEventType.PackagesRepositoryAppended && @event.Now.Repositories.First().Uri == "https://teamcity.myrcon.com/nuget") {" is 155.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesAppendRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesAppendRepository.cs,TestResultSuccessEventListed,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesAppendRepository("https://teamcity.myrcon.com/nuget").SetOrigin(CommandOrigin.Local));" is 125.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesAppendRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesAppendRepository.cs,TestSingleRepositorySetup,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesAppendRepository("https://teamcity.myrcon.com/nuget").SetOrigin(CommandOrigin.Local));" is 125.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesAppendRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesAppendRepository.cs,TestDoubleRepositorySetup,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesAppendRepository("https://teamcity.myrcon.com/nuget").SetOrigin(CommandOrigin.Local));" is 125.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesAppendRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesAppendRepository.cs,TestDoubleRepositorySetup,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesAppendRepository("https://teamcity.myrcon.com/nuget").SetOrigin(CommandOrigin.Local));" is 125.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesAppendRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesAppendRepository.cs,TestSuccessTwoUniqueRepositoriesAdded,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesAppendRepository("https://teamcity.myrcon.com/nuget1").SetOrigin(CommandOrigin.Local));" is 126.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesAppendRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesAppendRepository.cs,TestSuccessTwoUniqueRepositoriesAdded,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesAppendRepository("https://teamcity.myrcon.com/nuget2").SetOrigin(CommandOrigin.Local));" is 126.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesAppendRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesAppendRepository.cs,TestSuccessTwoRepositoriesSaved,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesAppendRepository("https://teamcity.myrcon.com/nuget1").SetOrigin(CommandOrigin.Local));" is 126.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesAppendRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesAppendRepository.cs,TestSuccessTwoRepositoriesSaved,The length of the statement  "            packages.Tunnel(CommandBuilder.PackagesAppendRepository("https://teamcity.myrcon.com/nuget2").SetOrigin(CommandOrigin.Local));" is 126.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,PackagesAppendRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesAppendRepository.cs,TestSuccessTwoRepositoriesSaved,The length of the statement  "            Assert.AreEqual(2' packages.Shared.Variables.ArchiveVariables.First(archive => archive.Key.ToLower() == CommonVariableNames.PackagesConfigGroups.ToString().ToLower()).Value.ToList<String>().Count);" is 197.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,TestPackagesFetchPackages,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\TestPackagesFetchPackages.cs,TestResultInsufficientPermissions,The length of the statement  "            ICommandResult result = packages.Tunnel(CommandBuilder.PackagesFetchPackages().SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 163.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,TestPackagesMergePackage,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\TestPackagesMergePackage.cs,TestResultInsufficientPermissions,The length of the statement  "            ICommandResult result = packages.Tunnel(CommandBuilder.PackagesMergePackage("id").SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 166.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,TestPackagesMergePackage,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\TestPackagesMergePackage.cs,TestResultDoesNotExists,The length of the statement  "            ICommandResult result = packages.Tunnel(CommandBuilder.PackagesMergePackage("this-does-not-exist").SetOrigin(CommandOrigin.Local));" is 131.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,TestPackagesUninstallPackage,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\TestPackagesUninstallPackage.cs,TestResultInsufficientPermissions,The length of the statement  "            ICommandResult result = packages.Tunnel(CommandBuilder.PackagesUninstallPackage("id").SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 170.
Long Statement,Potato.Core.Test.Packages.TestPackagesController,TestPackagesUninstallPackage,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\TestPackagesUninstallPackage.cs,TestResultDoesNotExists,The length of the statement  "            ICommandResult result = packages.Tunnel(CommandBuilder.PackagesUninstallPackage("this-does-not-exist").SetOrigin(CommandOrigin.Local));" is 135.
Long Statement,Potato.Core.Test.TestPotato,TestPotatoPing,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoPing.cs,TestResultInsufficientPermissions,The length of the statement  "            ICommandResult result = instance.Tunnel(CommandBuilder.PotatoPing().SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 152.
Long Statement,Potato.Core.Test.TestPotato,TestPotatoServiceMergePackage,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoServiceMergePackage.cs,TestResultInsufficientPermissions,The length of the statement  "            ICommandResult result = instance.Tunnel(CommandBuilder.PotatoServiceMergePackage("localhost"' "id").SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 184.
Long Statement,Potato.Core.Test.TestPotato,TestPotatoServiceMergePackage,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoServiceMergePackage.cs,TestResultInvalidParameterUri,The length of the statement  "            ICommandResult result = instance.Tunnel(CommandBuilder.PotatoServiceMergePackage(""' "id").SetOrigin(CommandOrigin.Local));" is 123.
Long Statement,Potato.Core.Test.TestPotato,TestPotatoServiceMergePackage,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoServiceMergePackage.cs,TestResultInvalidParameterPackageId,The length of the statement  "            ICommandResult result = instance.Tunnel(CommandBuilder.PotatoServiceMergePackage("localhost"' "").SetOrigin(CommandOrigin.Local));" is 130.
Long Statement,Potato.Core.Test.TestPotato,TestPotatoServiceMergePackage,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoServiceMergePackage.cs,TestResultSuccess,The length of the statement  "            ICommandResult result = instance.Tunnel(CommandBuilder.PotatoServiceMergePackage("localhost"' "id").SetOrigin(CommandOrigin.Local));" is 132.
Long Statement,Potato.Core.Test.TestPotato,TestPotatoServiceRestart,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoServiceRestart.cs,TestResultInsufficientPermissions,The length of the statement  "            ICommandResult result = instance.Tunnel(CommandBuilder.PotatoServiceRestart().SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 162.
Long Statement,Potato.Core.Test.TestPotato,TestPotatoServiceUninstallPackage,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoServiceUninstallPackage.cs,TestResultInsufficientPermissions,The length of the statement  "            ICommandResult result = instance.Tunnel(CommandBuilder.PotatoServiceUninstallPackage("id").SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 175.
Long Statement,Potato.Core.Test.TestPotato,TestPotatoServiceUninstallPackage,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoServiceUninstallPackage.cs,TestResultInvalidParameterPackageId,The length of the statement  "            ICommandResult result = instance.Tunnel(CommandBuilder.PotatoServiceUninstallPackage("").SetOrigin(CommandOrigin.Local));" is 121.
Long Statement,Potato.Core.Test.TestPotato,TestPotatoServiceUninstallPackage,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoServiceUninstallPackage.cs,TestResultSuccess,The length of the statement  "            ICommandResult result = instance.Tunnel(CommandBuilder.PotatoServiceUninstallPackage("id").SetOrigin(CommandOrigin.Local));" is 123.
Long Statement,Potato.Core.Test.TestPotato,TestPotatoRemoveConnection,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoRemoveConnection.cs,TestPotatoRemoveConnectionByGuidSuccess,The length of the statement  "            ICommandResult result = instance.Tunnel(CommandBuilder.PotatoRemoveConnection(instance.Connections.First().ConnectionModel.ConnectionGuid).SetOrigin(CommandOrigin.Local));" is 171.
Long Statement,Potato.Core.Test.TestPotato,TestPotatoRemoveConnection,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoRemoveConnection.cs,TestPotatoRemoveConnectionDoesNotExist,The length of the statement  "            ICommandResult result = instance.Tunnel(CommandBuilder.PotatoRemoveConnection("Myrcon"' "MockProtocol"' "1.1.1.1"' 27516).SetOrigin(CommandOrigin.Local));" is 154.
Long Statement,Potato.Core.Test.TestPotato,TestPotatoRemoveConnection,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoRemoveConnection.cs,TestPotatoRemoveConnectionInsufficientPermissions,The length of the statement  "            ICommandResult result = instance.Tunnel(CommandBuilder.PotatoRemoveConnection("Myrcon"' "MockProtocol"' "1.1.1.1"' 27516).SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 206.
Long Statement,Potato.Core.Test.TestPotato,TestPotatoRemoveConnection,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoRemoveConnection.cs,TestPotatoRemoveConnectionByDetailsSuccess,The length of the statement  "            ICommandResult result = instance.Tunnel(CommandBuilder.PotatoRemoveConnection("Myrcon"' "MockProtocol"' "1.1.1.1"' 27516).SetOrigin(CommandOrigin.Local));" is 154.
Long Statement,Potato.Core.Test.TestPotato,TestPotato,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotato.cs,TestPotatoConfigWritten,The length of the statement  "            instance.Shared.Variables.Tunnel(CommandBuilder.VariablesSet(CommonVariableNames.PotatoConfigPassword' "PotatoConfigurationPassword").SetOrigin(CommandOrigin.Local));" is 166.
Long Statement,Potato.Core.Test.TestPotato,TestPotato,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotato.cs,TestPotatoConfigWritten,The length of the statement  "            var configCommand = loadConfig.RootOf<PotatoController>().Children<JObject>().Select(item => item.ToObject<IConfigCommand>(JsonSerialization.Minimal)).ToList().Last();" is 167.
Long Statement,Potato.Core.Test.TestPotato,TestPotatoAddConnection,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoAddConnection.cs,TestPotatoAddConnectionDuplicate,The length of the statement  "            ICommandResult result = instance.Tunnel(CommandBuilder.PotatoAddConnection("Myrcon"' "MockProtocol"' "1.1.1.1"' 27516' "password"' "").SetOrigin(CommandOrigin.Local));" is 167.
Long Statement,Potato.Core.Test.TestPotato,TestPotatoAddConnection,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoAddConnection.cs,TestPotatoAddConnectionExceedMaximumConnectionLimit,The length of the statement  "            ICommandResult result = instance.Tunnel(CommandBuilder.PotatoAddConnection("Myrcon"' "MockProtocol"' "1.1.1.1"' 27516' "password"' "").SetOrigin(CommandOrigin.Local));" is 167.
Long Statement,Potato.Core.Test.TestPotato,TestPotatoAddConnection,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoAddConnection.cs,TestPotatoAddConnectionProtocolTypeDoesNotExist,The length of the statement  "            ICommandResult result = instance.Tunnel(CommandBuilder.PotatoAddConnection("Myrcon"' "la la la"' "1.1.1.1"' 27516' "password"' "").SetOrigin(CommandOrigin.Local));" is 163.
Long Statement,Potato.Core.Test.TestPotato,TestPotatoAddConnection,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoAddConnection.cs,TestPotatoAddConnectionInsufficientPermissions,The length of the statement  "            ICommandResult result = instance.Tunnel(CommandBuilder.PotatoAddConnection("Myrcon"' "MockProtocol"' "1.1.1.1"' 27516' "password"' "").SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 219.
Long Statement,Potato.Core.Test.TestPotato,TestPotatoAddConnection,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoAddConnection.cs,TestPotatoAddConnectionSuccess,The length of the statement  "            ICommandResult result = instance.Tunnel(CommandBuilder.PotatoAddConnection("Myrcon"' "MockProtocol"' "1.1.1.1"' 27516' "password"' "").SetOrigin(CommandOrigin.Local));" is 167.
Long Statement,Potato.Core.Test.Events,TestEvents,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEvents.cs,TestEventsNoParametersWrittenToFile,The length of the statement  "            events.Shared.Variables.Tunnel(CommandBuilder.VariablesSet(CommonVariableNames.WriteLogEventsToFile' true.ToString()).SetOrigin(CommandOrigin.Local));" is 150.
Long Statement,Potato.Core.Test.Events,TestEvents,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEvents.cs,TestEventsSingleWrittenToFile,The length of the statement  "            events.Shared.Variables.Tunnel(CommandBuilder.VariablesSet(CommonVariableNames.WriteLogEventsToFile' true.ToString()).SetOrigin(CommandOrigin.Local));" is 150.
Long Statement,Potato.Core.Test.Events,TestEvents,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEvents.cs,TestEventsUnexpiredWrittenToFile,The length of the statement  "            events.Shared.Variables.Tunnel(CommandBuilder.VariablesSet(CommonVariableNames.WriteLogEventsToFile' true.ToString()).SetOrigin(CommandOrigin.Local));" is 150.
Long Statement,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerMultipleEndPointsRandomVariableAssignment,The length of the statement  "                {VariableModel.NamespaceVariableName(pushConfigGroupNameOne' CommonVariableNames.EventsPushUri)' "http://localhost/one.php"}'" is 125.
Long Statement,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerMultipleEndPointsRandomVariableAssignment,The length of the statement  "                {VariableModel.NamespaceVariableName(pushConfigGroupNameTwo' CommonVariableNames.EventsPushUri)' "http://localhost/two.php"}'" is 125.
Long Statement,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerNamespacedSingleEndPointBackwardSetting,The length of the statement  "            }' VariableModel.NamespaceVariableName(pushConfigGroupName' CommonVariableNames.EventsPushUri)' "http://localhost/pushme.php");" is 127.
Long Statement,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerNamespacedSingleEndPointForwardSetting,The length of the statement  "            }' VariableModel.NamespaceVariableName(pushConfigGroupName' CommonVariableNames.EventsPushUri)' "http://localhost/pushme.php");" is 127.
Long Statement,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestVariablesSetPriorToPushEventsControllerExecution,The length of the statement  "            variables.Tunnel(CommandBuilder.VariablesSet(VariableModel.NamespaceVariableName(pushConfigGroupName' CommonVariableNames.EventsPushUri)' "http://localhost/pushme.php").SetOrigin(CommandOrigin.Local));" is 201.
Long Statement,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestVariablesSetPriorToPushEventsControllerExecution,The length of the statement  "            variables.Tunnel(CommandBuilder.VariablesSet(VariableModel.NamespaceVariableName(pushConfigGroupName' CommonVariableNames.EventPushIntervalSeconds)' "20").SetOrigin(CommandOrigin.Local));" is 187.
Long Statement,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestVariablesSetPriorToPushEventsControllerExecution,The length of the statement  "            variables.Tunnel(CommandBuilder.VariablesSet(CommonVariableNames.EventsPushConfigGroups' pushConfigGroupName).SetOrigin(CommandOrigin.Local));" is 142.
Long Statement,Potato.Core.Test.Events,TestPushEventsEndPoint,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsEndPoint.cs,TestPushEventsRequestJsonSerialization,The length of the statement  "            var deserialized = JsonSerialization.Minimal.Deserialize<PushEventsRequest>(new JsonTextReader(new StringReader(builder.ToString())));" is 134.
Long Statement,Potato.Core.Test.Packages,TestBuildRepositoryCache,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestBuildRepositoryCache.cs,TestRepositoryCacheBuilt,The length of the statement  "            Assert.AreEqual("A"' packages.Cache.Repositories.First(repository => repository.Uri == "localhost").Packages.First().Id);" is 121.
Long Statement,Potato.Core.Test.Packages,TestBuildRepositoryCache,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestBuildRepositoryCache.cs,TestRepositoryCacheBuilt,The length of the statement  "            Assert.AreEqual(PackageState.UpdateAvailable' packages.Cache.Repositories.First(repository => repository.Uri == "localhost").Packages.First().State);" is 149.
Long Statement,Potato.Core.Test.Packages,TestBuildRepositoryCache,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestBuildRepositoryCache.cs,TestRepositoryCacheBuiltEventLogged,The length of the statement  "            Assert.AreEqual("A"' events.LoggedEvents.First().Now.Repositories.First(repository => repository.Uri == "localhost").Packages.First().Id);" is 138.
Long Statement,Potato.Core.Test.Packages,TestBuildRepositoryCache,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestBuildRepositoryCache.cs,TestRepositoryCacheBuiltEventLogged,The length of the statement  "            Assert.AreEqual(PackageState.UpdateAvailable' events.LoggedEvents.First().Now.Repositories.First(repository => repository.Uri == "localhost").Packages.First().State);" is 166.
Long Statement,Potato.Core.Test.Packages,TestRepositoryCache,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestRepositoryCache.cs,TestCacheBuildOrphanedLocalRepository,The length of the statement  "            Assert.AreEqual(PackageState.Installed' cache.Repositories.First(repository => repository.IsOrphanage == true).Packages.First().State);" is 135.
Long Statement,Potato.Core.Test.Packages,TestRepositoryCache,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestRepositoryCache.cs,TestExceptionOnCacheBuildAttachedToRepositoryModel,The length of the statement  "            Assert.AreEqual("GetPackages Exception"' cache.Repositories.First(repository => repository.IsOrphanage == false).CacheError);" is 125.
Long Statement,Potato.Core.Test.Packages,TestRepositoryCache,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestRepositoryCache.cs,TestLastCacheBuildStampSet,The length of the statement  "            Assert.Greater(cache.Repositories.First(repository => repository.IsOrphanage == false).CacheStamp' DateTime.Now.AddSeconds(-5));" is 128.
Long Statement,Potato.Core.Test.Packages,TestRepositoryCache,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestRepositoryCache.cs,TestCacheBuildSingleRemoteRepositoryEmptyLocalRepository,The length of the statement  "            Assert.AreEqual(PackageState.NotInstalled' cache.Repositories.SelectMany(repository => repository.Packages).First().State);" is 123.
Long Statement,Potato.Core.Test.Packages,TestRepositoryCache,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestRepositoryCache.cs,TestCacheBuildSingleRemoteRepositoryInstalledLocalRepository,The length of the statement  "            Assert.AreEqual(PackageState.Installed' cache.Repositories.SelectMany(repository => repository.Packages).First().State);" is 120.
Long Statement,Potato.Core.Test.Packages,TestRepositoryCache,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestRepositoryCache.cs,TestCacheBuildSingleRemoteRepositoryUpdateAvailableLocalRepository,The length of the statement  "            Assert.AreEqual(PackageState.UpdateAvailable' cache.Repositories.SelectMany(repository => repository.Packages).First().State);" is 126.
Long Statement,Potato.Core.Test.Plugins,TestPluginConfig,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Plugins\TestPluginConfig.cs,TestEnabledPluginSavedToConfig,The length of the statement  "            var commands = loadConfig.RootOf<CorePluginController>().Children<JObject>().Select(item => item.ToObject<IConfigCommand>(JsonSerialization.Minimal)).ToList();" is 159.
Long Statement,Potato.Core.Test.Protocols,TestProtocolIsolation,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolIsolation.cs,TestIsolationSuccessOnLoad,The length of the statement  "            ICommandResult result = instance.Tunnel(CommandBuilder.PotatoAddConnection(protocol.Provider' protocol.Type' "1.1.1.1"' 27516' "password"' "").SetOrigin(CommandOrigin.Local));" is 175.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestGetProtocolAssemblies,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestGetProtocolAssemblies.cs,TestAllProtocolAssembliesFilesFoundInPackageRoot,The length of the statement  "            var dll = new FileInfo(Path.Combine(this.TestGetProtocolAssembliesDirectory.FullName' "Something.Protocols.Something"' "Something.Protocols.Something.dll"));" is 157.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestGetProtocolAssemblies,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestGetProtocolAssemblies.cs,TestNonProtocolAssemblyNotDiscovered,The length of the statement  "            var dll = new FileInfo(Path.Combine(this.TestGetProtocolAssembliesDirectory.FullName' "Something.Protocols.Something"' "Something.Protocols.Something.dll"));" is 157.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestGetProtocolAssemblies,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestGetProtocolAssemblies.cs,TestNonProtocolAssemblyNotDiscovered,The length of the statement  "            var json = new FileInfo(Path.Combine(this.TestGetProtocolAssembliesDirectory.FullName' "Something.Protocols.Something"' "Something.Protocols.Something.json"));" is 159.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestGetProtocolPackages,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestGetProtocolPackages.cs,TestPackageDirectoryReturnedSingleDepth,The length of the statement  "            DirectoryInfo package = new DirectoryInfo(Path.Combine(this.TestTestGetProtocolPackages.FullName' "Something.Protocols.Something"));" is 132.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestGetProtocolPackages,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestGetProtocolPackages.cs,TestPackageDirectoryReturnedSecondDepth,The length of the statement  "            DirectoryInfo package = new DirectoryInfo(Path.Combine(this.TestTestGetProtocolPackages.FullName' "Something.Protocols.Something"));" is 132.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestGetProtocolPackages,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestGetProtocolPackages.cs,TestLatestPackagePathReturned,The length of the statement  "            DirectoryInfo latest = new DirectoryInfo(Path.Combine(this.TestTestGetProtocolPackages.FullName' "Something.Protocols.Something.2.0.0"));" is 137.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestGetProtocolPackages,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestGetProtocolPackages.cs,TestLatestPackagePathReturned,The length of the statement  "            DirectoryInfo oldest = new DirectoryInfo(Path.Combine(this.TestTestGetProtocolPackages.FullName' "Something.Protocols.Something.1.0.0"));" is 137.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestLoadProtocolsMetadata,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestLoadProtocolsMetadata.cs,TestLoadedWithSingleVersionOfPackage,The length of the statement  "            DirectoryInfo package = new DirectoryInfo(Path.Combine(this.TestLoadProtocolsMetadataDirectory.FullName' "Something.Protocols.Something"));" is 139.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestLoadProtocolsMetadata,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestLoadProtocolsMetadata.cs,TestProtocolVariablesLoaded,The length of the statement  "            DirectoryInfo package = new DirectoryInfo(Path.Combine(this.TestLoadProtocolsMetadataDirectory.FullName' "Something.Protocols.Something"));" is 139.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestLoadProtocolsMetadata,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestLoadProtocolsMetadata.cs,TestProtocolVariablesLoaded,The length of the statement  "            File.WriteAllText(json.FullName' @"{ ""ProtocolTypes"": [ { ""Provider"": ""Myrcon""'""Name"": ""Battlefield 4""'""Type"": ""DiceBattlefield4"" } ] }");" is 152.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestLoadProtocolsMetadata,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestLoadProtocolsMetadata.cs,TestSingleProtocolLoadedWithMultipleVersionsOfPackage,The length of the statement  "            DirectoryInfo newest = new DirectoryInfo(Path.Combine(this.TestLoadProtocolsMetadataDirectory.FullName' "Something.Protocols.Something.2.0.0"));" is 144.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestLoadProtocolsMetadata,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestLoadProtocolsMetadata.cs,TestSingleProtocolLoadedWithMultipleVersionsOfPackage,The length of the statement  "            DirectoryInfo oldest = new DirectoryInfo(Path.Combine(this.TestLoadProtocolsMetadataDirectory.FullName' "Something.Protocols.Something.1.0.0"));" is 144.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestLoadProtocolsMetadata,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestLoadProtocolsMetadata.cs,TestLatestLoadedLoadedWithMultipleVersionsOfPackage,The length of the statement  "            DirectoryInfo newest = new DirectoryInfo(Path.Combine(this.TestLoadProtocolsMetadataDirectory.FullName' "Something.Protocols.Something.2.0.0"));" is 144.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestLoadProtocolsMetadata,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestLoadProtocolsMetadata.cs,TestLatestLoadedLoadedWithMultipleVersionsOfPackage,The length of the statement  "            DirectoryInfo oldest = new DirectoryInfo(Path.Combine(this.TestLoadProtocolsMetadataDirectory.FullName' "Something.Protocols.Something.1.0.0"));" is 144.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestProtocolsCheckSupportedProtocol,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestProtocolsCheckSupportedProtocol.cs,TestInsufficientPermissions,The length of the statement  "            ICommandResult result = protocols.Tunnel(CommandBuilder.ProtocolsCheckSupportedProtocol("Myrcon"' CommonProtocolType.DiceBattlefield4).SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 219.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestProtocolsCheckSupportedProtocol,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestProtocolsCheckSupportedProtocol.cs,TestSuccess,The length of the statement  "            ICommandResult result = protocols.Tunnel(CommandBuilder.ProtocolsCheckSupportedProtocol("Myrcon"' CommonProtocolType.DiceBattlefield4).SetOrigin(CommandOrigin.Local));" is 167.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestProtocolsCheckSupportedProtocol,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestProtocolsCheckSupportedProtocol.cs,TestProtocolTypesReturned,The length of the statement  "            ICommandResult result = protocols.Tunnel(CommandBuilder.ProtocolsCheckSupportedProtocol("Myrcon"' CommonProtocolType.DiceBattlefield4).SetOrigin(CommandOrigin.Local));" is 167.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestProtocolsCheckSupportedProtocol,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestProtocolsCheckSupportedProtocol.cs,TestFailureDoesNotExist,The length of the statement  "            ICommandResult result = protocols.Tunnel(CommandBuilder.ProtocolsCheckSupportedProtocol("Myrcon"' CommonProtocolType.DiceBattlefield4).SetOrigin(CommandOrigin.Local));" is 167.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestProtocolsFetchSupportedProtocols,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestProtocolsFetchSupportedProtocols.cs,TestInsufficientPermissions,The length of the statement  "            ICommandResult result = protocols.Tunnel(CommandBuilder.ProtocolsFetchSupportedProtocols().SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 175.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestProtocolsFetchSupportedProtocols,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestProtocolsFetchSupportedProtocols.cs,TestSuccess,The length of the statement  "            ICommandResult result = protocols.Tunnel(CommandBuilder.ProtocolsFetchSupportedProtocols().SetOrigin(CommandOrigin.Local));" is 123.
Long Statement,Potato.Core.Test.Protocols.TestProtocolController,TestProtocolsFetchSupportedProtocols,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolController\TestProtocolsFetchSupportedProtocols.cs,TestProtocolTypesReturned,The length of the statement  "            ICommandResult result = protocols.Tunnel(CommandBuilder.ProtocolsFetchSupportedProtocols().SetOrigin(CommandOrigin.Local));" is 123.
Long Statement,Potato.Core.Test.Remote.TestCertificateController,TestExplicitLoad,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCertificateController\TestVariableLoad.cs,TestFileDoesNotExist,The length of the statement  "            Assert.IsFalse(certificate.Load(Path.Combine(Defines.BaseDirectory.FullName' "Remote"' "Certificates"' "DoesNotExist.pfx")));" is 125.
Long Statement,Potato.Core.Test.Remote.TestCertificateController,TestExplicitLoad,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCertificateController\TestVariableLoad.cs,TestNoPassword,The length of the statement  "            Assert.IsTrue(certificate.Load(Path.Combine(Defines.BaseDirectory.FullName' "Remote"' "Certificates"' "NoPassword.pfx")));" is 122.
Long Statement,Potato.Core.Test.Remote.TestCertificateController,TestExplicitLoad,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCertificateController\TestVariableLoad.cs,TestNoPasswordButPasswordSupplied,The length of the statement  "            Assert.IsFalse(certificate.Load(Path.Combine(Defines.BaseDirectory.FullName' "Remote"' "Certificates"' "NoPassword.pfx")' "This is a password that isn't needed"));" is 163.
Long Statement,Potato.Core.Test.Remote.TestCertificateController,TestExplicitLoad,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCertificateController\TestVariableLoad.cs,TestPassword,The length of the statement  "            Assert.IsTrue(certificate.Load(Path.Combine(Defines.BaseDirectory.FullName' "Remote"' "Certificates"' "Password.pfx")' "password1"));" is 133.
Long Statement,Potato.Core.Test.Remote.TestCertificateController,TestExplicitLoad,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCertificateController\TestVariableLoad.cs,TestPasswordButNoPasswordSupplied,The length of the statement  "            Assert.IsFalse(certificate.Load(Path.Combine(Defines.BaseDirectory.FullName' "Remote"' "Certificates"' "Password.pfx")));" is 121.
Long Statement,Potato.Core.Test.Remote.TestCertificateController,TestExplicitLoad,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCertificateController\TestVariableLoad.cs,TestPasswordButIncorrectPasswordSupplied,The length of the statement  "            Assert.IsFalse(certificate.Load(Path.Combine(Defines.BaseDirectory.FullName' "Remote"' "Certificates"' "Password.pfx")' "incorrect password"));" is 143.
Long Statement,Potato.Core.Test.Remote.TestCertificateController,TestExplicitLoad,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCertificateController\TestVariableLoad.cs,TestEventLoggedOnFileDoesNotExist,The length of the statement  "            Assert.IsFalse(certificate.Load(Path.Combine(Defines.BaseDirectory.FullName' "Remote"' "Certificates"' "DoesNotExist.pfx")));" is 125.
Long Statement,Potato.Core.Test.Remote.TestCertificateController,TestExplicitLoad,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCertificateController\TestVariableLoad.cs,TestEventLoggedOnNoPasswordButPasswordSupplied,The length of the statement  "            Assert.IsFalse(certificate.Load(Path.Combine(Defines.BaseDirectory.FullName' "Remote"' "Certificates"' "NoPassword.pfx")' "This is a password that isn't needed"));" is 163.
Long Statement,Potato.Core.Test.Remote.TestCertificateController,TestExplicitLoad,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCertificateController\TestVariableLoad.cs,TestEventLoggedOnPasswordButNoPasswordSupplied,The length of the statement  "            Assert.IsFalse(certificate.Load(Path.Combine(Defines.BaseDirectory.FullName' "Remote"' "Certificates"' "Password.pfx")));" is 121.
Long Statement,Potato.Core.Test.Remote.TestCertificateController,TestExplicitLoad,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCertificateController\TestVariableLoad.cs,TestEventLoggedOnPasswordButIncorrectPasswordSupplied,The length of the statement  "            Assert.IsFalse(certificate.Load(Path.Combine(Defines.BaseDirectory.FullName' "Remote"' "Certificates"' "Password.pfx")' "incorrect password"));" is 143.
Long Statement,Potato.Core.Test.Remote.TestCertificateController,TestVariableLoad,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCertificateController\TestExplicitLoad.cs,TestNoPassword,The length of the statement  "            variables.Variable(CommonVariableNames.CommandServerCertificatePath).Value = Path.Combine(Defines.BaseDirectory.FullName' "Remote"' "Certificates"' "NoPassword.pfx");" is 166.
Long Statement,Potato.Core.Test.Remote.TestCertificateController,TestVariableLoad,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCertificateController\TestExplicitLoad.cs,TestPassword,The length of the statement  "            variables.Variable(CommonVariableNames.CommandServerCertificatePath).Value = Path.Combine(Defines.BaseDirectory.FullName' "Remote"' "Certificates"' "Password.pfx");" is 164.
Long Statement,Potato.Core.Test.Remote.TestCommandServerController,TestConfigure,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCommandServerController\TestConfigure.cs,TestEventLoggedOnConfiguredEnabled,The length of the statement  "            Assert.AreEqual(GenericEventType.CommandServerStarted' commandServer.Shared.Events.LoggedEvents.First(e => e.GenericEventType == GenericEventType.CommandServerStarted).GenericEventType);" is 186.
Long Statement,Potato.Core.Test.Remote.TestCommandServerController,TestConfigure,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCommandServerController\TestConfigure.cs,TestEventLoggedOnConfiguredEnabled,The length of the statement  "            Assert.AreEqual(CommandResultType.Success' commandServer.Shared.Events.LoggedEvents.First(e => e.GenericEventType == GenericEventType.CommandServerStarted).CommandResultType);" is 175.
Long Statement,Potato.Core.Test.Remote.TestCommandServerController,TestConfigure,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCommandServerController\TestConfigure.cs,TestEventLoggedOnConfiguredEnabled,The length of the statement  "            Assert.IsTrue(commandServer.Shared.Events.LoggedEvents.First(e => e.GenericEventType == GenericEventType.CommandServerStarted).Success);" is 136.
Long Statement,Potato.Core.Test.Remote.TestCommandServerController,TestConfigure,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCommandServerController\TestConfigure.cs,TestEventLoggedOnConfiguredDisabled,The length of the statement  "            Assert.AreEqual(GenericEventType.CommandServerStopped' commandServer.Shared.Events.LoggedEvents.First(e => e.GenericEventType == GenericEventType.CommandServerStopped).GenericEventType);" is 186.
Long Statement,Potato.Core.Test.Remote.TestCommandServerController,TestConfigure,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCommandServerController\TestConfigure.cs,TestEventLoggedOnConfiguredDisabled,The length of the statement  "            Assert.AreEqual(CommandResultType.Success' commandServer.Shared.Events.LoggedEvents.First(e => e.GenericEventType == GenericEventType.CommandServerStarted).CommandResultType);" is 175.
Long Statement,Potato.Core.Test.Remote.TestCommandServerController,TestConfigure,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCommandServerController\TestConfigure.cs,TestEventLoggedOnConfiguredDisabled,The length of the statement  "            Assert.IsTrue(commandServer.Shared.Events.LoggedEvents.First(e => e.GenericEventType == GenericEventType.CommandServerStarted).Success);" is 136.
Long Statement,Potato.Core.Test.Remote.TestCommandServerSerializer,TestCompleteResponsePacket,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCommandServerSerializer\TestCompleteResponsePacket.cs,TestSerializeJson,The length of the statement  "            var packet = CommandServerSerializer.CompleteResponsePacket(Mime.ApplicationJson' new CommandServerPacket()' new CommandResult() {" is 130.
Long Statement,Potato.Core.Test.Remote.TestCommandServerSerializer,TestCompleteResponsePacket,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCommandServerSerializer\TestCompleteResponsePacket.cs,TestSerializeTextHtml,The length of the statement  "            var packet = CommandServerSerializer.CompleteResponsePacket(Mime.TextHtml' new CommandServerPacket()' new CommandResult() {" is 123.
Long Statement,Potato.Core.Test.Security.AccountPlayer,TestSecurityRemovePlayer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\AccountPlayer\TestSecurityRemovePlayer.cs,TestRemoveSuccess,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.AccountPlayer,TestSecurityRemovePlayer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\AccountPlayer\TestSecurityRemovePlayer.cs,TestRemoveSuccess,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityRemovePlayer(CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 155.
Long Statement,Potato.Core.Test.Security.AccountPlayer,TestSecurityRemovePlayer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\AccountPlayer\TestSecurityRemovePlayer.cs,TestRemoveSuccess,The length of the statement  "            Assert.IsNull(security.Groups.SelectMany(group => group.Accounts).Where(account => account.Username == "Phogue").SelectMany(account => account.Players).FirstOrDefault());" is 170.
Long Statement,Potato.Core.Test.Security.AccountPlayer,TestSecurityRemovePlayer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\AccountPlayer\TestSecurityRemovePlayer.cs,TestDoesNotExist,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityRemovePlayer(CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 155.
Long Statement,Potato.Core.Test.Security.AccountPlayer,TestSecurityRemovePlayer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\AccountPlayer\TestSecurityRemovePlayer.cs,TestDoesNotExist,The length of the statement  "            Assert.IsNull(security.Groups.SelectMany(group => group.Accounts).SelectMany(account => account.Players).FirstOrDefault());" is 123.
Long Statement,Potato.Core.Test.Security.AccountPlayer,TestSecurityRemovePlayer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\AccountPlayer\TestSecurityRemovePlayer.cs,TestEmptyUid,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityRemovePlayer(CommonProtocolType.DiceBattlefield3' String.Empty).SetOrigin(CommandOrigin.Local));" is 159.
Long Statement,Potato.Core.Test.Security.AccountPlayer,TestSecurityRemovePlayer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\AccountPlayer\TestSecurityRemovePlayer.cs,TestEmptyUid,The length of the statement  "            Assert.IsNull(security.Groups.SelectMany(group => group.Accounts).SelectMany(account => account.Players).FirstOrDefault());" is 123.
Long Statement,Potato.Core.Test.Security.AccountPlayer,TestSecurityRemovePlayer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\AccountPlayer\TestSecurityRemovePlayer.cs,TestInsufficientPermission,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("GroupName"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 148.
Long Statement,Potato.Core.Test.Security.AccountPlayer,TestSecurityRemovePlayer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\AccountPlayer\TestSecurityRemovePlayer.cs,TestInsufficientPermission,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityRemovePlayer(CommonProtocolType.DiceBattlefield3' "ABCDEF")" is 122.
Long Statement,Potato.Core.Test.Security.AccountPlayer,TestSecurityAccountAddPlayer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\AccountPlayer\TestSecurityAccountAddPlayer.cs,TestAddSuccess,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 169.
Long Statement,Potato.Core.Test.Security.AccountPlayer,TestSecurityAccountAddPlayer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\AccountPlayer\TestSecurityAccountAddPlayer.cs,TestAddSuccess,The length of the statement  "            Assert.AreEqual(security.Groups.SelectMany(group => group.Accounts).SelectMany(account => account.Players).First().ProtocolType' CommonProtocolType.DiceBattlefield3);" is 166.
Long Statement,Potato.Core.Test.Security.AccountPlayer,TestSecurityAccountAddPlayer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\AccountPlayer\TestSecurityAccountAddPlayer.cs,TestAddSuccess,The length of the statement  "            Assert.AreEqual(security.Groups.SelectMany(group => group.Accounts).SelectMany(account => account.Players).First().Uid' "ABCDEF");" is 130.
Long Statement,Potato.Core.Test.Security.AccountPlayer,TestSecurityAccountAddPlayer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\AccountPlayer\TestSecurityAccountAddPlayer.cs,TestEmptyUidFailure,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' String.Empty).SetOrigin(CommandOrigin.Local));" is 173.
Long Statement,Potato.Core.Test.Security.AccountPlayer,TestSecurityAccountAddPlayer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\AccountPlayer\TestSecurityAccountAddPlayer.cs,TestExistingPlayerMoved,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.AccountPlayer,TestSecurityAccountAddPlayer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\AccountPlayer\TestSecurityAccountAddPlayer.cs,TestExistingPlayerMoved,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("PapaCharlie9"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 175.
Long Statement,Potato.Core.Test.Security.AccountPlayer,TestSecurityAccountAddPlayer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\AccountPlayer\TestSecurityAccountAddPlayer.cs,TestExistingPlayerMoved,The length of the statement  "            Assert.IsNull(security.Groups.SelectMany(group => group.Accounts).Where(account => account.Username == "Phogue").SelectMany(account => account.Players).FirstOrDefault());" is 170.
Long Statement,Potato.Core.Test.Security.AccountPlayer,TestSecurityAccountAddPlayer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\AccountPlayer\TestSecurityAccountAddPlayer.cs,TestExistingPlayerMoved,The length of the statement  "            Assert.AreEqual(security.Groups.SelectMany(group => group.Accounts).Where(account => account.Username == "PapaCharlie9").SelectMany(account => account.Players).First().ProtocolType' CommonProtocolType.DiceBattlefield3);" is 219.
Long Statement,Potato.Core.Test.Security.AccountPlayer,TestSecurityAccountAddPlayer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\AccountPlayer\TestSecurityAccountAddPlayer.cs,TestExistingPlayerMoved,The length of the statement  "            Assert.AreEqual(security.Groups.SelectMany(group => group.Accounts).Where(account => account.Username == "PapaCharlie9").SelectMany(account => account.Players).First().Uid' "ABCDEF");" is 183.
Long Statement,Potato.Core.Test.Security.AccountPlayer,TestSecurityAccountAddPlayer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\AccountPlayer\TestSecurityAccountAddPlayer.cs,TestInsufficientPermission,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("PapaCharlie9"' CommonProtocolType.DiceBattlefield3' "ABCDEF")" is 142.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestInsufficientPermission,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.NewGuid()' "TokenHash"' DateTime.Now)" is 140.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestAccountDoesNotExist,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("DoesNotExist"' Guid.NewGuid()' "TokenHash"' DateTime.Now).SetOrigin(CommandOrigin.Local));" is 179.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestEmptyId,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.Empty' "TokenHash"' DateTime.Now).SetOrigin(CommandOrigin.Local));" is 169.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestEmptyTokenHash,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.NewGuid()' ""' DateTime.Now).SetOrigin(CommandOrigin.Local));" is 164.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestExpiredToken,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.NewGuid()' "TokenHash"' DateTime.Now.AddDays(-3)).SetOrigin(CommandOrigin.Local));" is 185.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestSetSuccess,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.NewGuid()' "TokenHash"' DateTime.Now).SetOrigin(CommandOrigin.Local));" is 173.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestSetSuccessAppearsInAccountTokens,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.NewGuid()' "TokenHash"' DateTime.Now).SetOrigin(CommandOrigin.Local));" is 149.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestSetSuccessAppearsInAccountTokens,The length of the statement  "            Assert.IsNotEmpty(security.Groups.SelectMany(group => group.Accounts).First(account => account.Username == "Phogue").AccessTokens);" is 131.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestSetSuccessIdenticalIdsOverwriteWithNewData,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' id' "TokenHashOne"' DateTime.Now).SetOrigin(CommandOrigin.Local));" is 140.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestSetSuccessIdenticalIdsOverwriteWithNewData,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' id' "TokenHashTwo"' DateTime.Now).SetOrigin(CommandOrigin.Local));" is 140.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestSetSuccessIdenticalIdsOverwriteWithNewData,The length of the statement  "            Assert.AreEqual("TokenHashTwo"' security.Groups.SelectMany(group => @group.Accounts).First(account => account.Username == "Phogue").AccessTokens.First().Value.TokenHash);" is 170.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestAddingTooManyTokensCullsTheTokenList,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' oldest' "TokenHashOldest"' DateTime.Now.AddHours(-1)).SetOrigin(CommandOrigin.Local));" is 160.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestAddingTooManyTokensCullsTheTokenList,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.NewGuid()' "TokenHashOne"' DateTime.Now).SetOrigin(CommandOrigin.Local));" is 152.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestAddingTooManyTokensCullsTheTokenList,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.NewGuid()' "TokenHashTwo"' DateTime.Now).SetOrigin(CommandOrigin.Local));" is 152.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestAddingTooManyTokensCullsTheTokenList,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.NewGuid()' "TokenHashThree"' DateTime.Now).SetOrigin(CommandOrigin.Local));" is 154.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestAddingTooManyTokensCullsTheTokenList,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.NewGuid()' "TokenHashFour"' DateTime.Now).SetOrigin(CommandOrigin.Local));" is 153.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestAddingTooManyTokensCullsTheTokenList,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.NewGuid()' "TokenHashFive"' DateTime.Now).SetOrigin(CommandOrigin.Local));" is 153.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestAddingTooManyTokensCullsTheTokenList,The length of the statement  "            Assert.AreEqual(5' security.Groups.SelectMany(group => @group.Accounts).First(account => account.Username == "Phogue").AccessTokens.Count);" is 139.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestAddingTooManyTokensCullsTheTokenList,The length of the statement  "            Assert.IsNull(security.Groups.SelectMany(group => @group.Accounts).First(account => account.Username == "Phogue").AccessTokens.Where(token => token.Key == oldest).Select(token => token.Value).FirstOrDefault());" is 210.
Long Statement,Potato.Core.Test.Security.Account,TestGetAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestGetAccount.cs,TestByCommandInitiatorWithPlayerDetails,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Account,TestGetAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestGetAccount.cs,TestByCommandInitiatorWithUsername,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Account,TestGetAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestGetAccount.cs,TestByCommandInitiatorWithUsernameCaseInsensitive,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Account,TestGetAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestGetAccount.cs,TestByPlayerDetails,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Account,TestGetAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestGetAccount.cs,TestByUsername,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Account,TestGetAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestGetAccount.cs,TestByUsernameCaseInsensitive,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Account,TestGetAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestGetAccount.cs,TestByTokenId,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Account,TestGetAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestGetAccount.cs,TestByTokenId,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' tokenId' "Token Hash"' DateTime.Now).SetOrigin(CommandOrigin.Local));" is 143.
Long Statement,Potato.Core.Test.Security.Account,TestGetAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestGetAccount.cs,TestByTokenIdDoesNotExist,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Account,TestGetAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestGetAccount.cs,TestByTokenIdDoesNotExist,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' tokenId' "Token Hash"' DateTime.Now).SetOrigin(CommandOrigin.Local));" is 143.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticateToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticateToken.cs,TestInsufficientPermission,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAuthenticateToken(Guid.NewGuid()' "TokenHash"' "id")" is 122.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticateToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticateToken.cs,TestCannotAuthenticateAgainstEmptyTokenList,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAuthenticateToken(Guid.NewGuid()' "token"' identifier).SetOrigin(CommandOrigin.Local));" is 157.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticateToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticateToken.cs,TestCannotAuthenticateAgainstDifferentTokenId,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountSetPasswordHash("Phogue"' "MyPasswordHash").SetOrigin(CommandOrigin.Local));" is 122.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticateToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticateToken.cs,TestCannotAuthenticateAgainstDifferentTokenId,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' accessToken.Id' accessToken.TokenHash' accessToken.LastTouched).SetOrigin(CommandOrigin.Local));" is 170.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticateToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticateToken.cs,TestCannotAuthenticateAgainstDifferentTokenId,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAuthenticateToken(Guid.NewGuid()' token' identifier).SetOrigin(CommandOrigin.Local));" is 155.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticateToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticateToken.cs,TestSetSuccessCanAuthenticateAgainst,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountSetPasswordHash("Phogue"' "MyPasswordHash").SetOrigin(CommandOrigin.Local));" is 122.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticateToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticateToken.cs,TestSetSuccessCanAuthenticateAgainst,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' accessToken.Id' accessToken.TokenHash' accessToken.LastTouched).SetOrigin(CommandOrigin.Local));" is 170.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticateToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticateToken.cs,TestSetSuccessCanAuthenticateAgainst,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAuthenticateToken(accessToken.Id' token' identifier).SetOrigin(CommandOrigin.Local));" is 155.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticateToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticateToken.cs,TestModifiedPasswordHashAfterSettingInvalidatesToken,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountSetPasswordHash("Phogue"' "MyPasswordHash").SetOrigin(CommandOrigin.Local));" is 122.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticateToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticateToken.cs,TestModifiedPasswordHashAfterSettingInvalidatesToken,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' accessToken.Id' accessToken.TokenHash' accessToken.LastTouched).SetOrigin(CommandOrigin.Local));" is 170.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticateToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticateToken.cs,TestModifiedPasswordHashAfterSettingInvalidatesToken,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountSetPasswordHash("Phogue"' "MyModifiedPasswordHash").SetOrigin(CommandOrigin.Local));" is 130.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticateToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticateToken.cs,TestModifiedPasswordHashAfterSettingInvalidatesToken,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAuthenticateToken(accessToken.Id' token' identifier).SetOrigin(CommandOrigin.Local));" is 155.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticateToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticateToken.cs,TestModifiedIdentiferAfterSettingInvalidatesToken,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountSetPasswordHash("Phogue"' "MyPasswordHash").SetOrigin(CommandOrigin.Local));" is 122.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticateToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticateToken.cs,TestModifiedIdentiferAfterSettingInvalidatesToken,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' accessToken.Id' accessToken.TokenHash' accessToken.LastTouched).SetOrigin(CommandOrigin.Local));" is 170.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticateToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticateToken.cs,TestModifiedIdentiferAfterSettingInvalidatesToken,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAuthenticateToken(accessToken.Id' token' "192.168.1.2").SetOrigin(CommandOrigin.Local));" is 158.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationSuccess,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountSetPassword("Phogue"' generatedAuthenticatePassword).SetOrigin(CommandOrigin.Local));" is 131.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationSuccess,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityAccountAuthenticate' 50).SetOrigin(CommandOrigin.Local));" is 148.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationSuccess,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAuthenticate("Phogue"' generatedAuthenticatePassword' String.Empty).SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 222.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAccountGroupReturnedInResult,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountSetPassword("Phogue"' generatedAuthenticatePassword).SetOrigin(CommandOrigin.Local));" is 131.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAccountGroupReturnedInResult,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityAccountAuthenticate' 50).SetOrigin(CommandOrigin.Local));" is 148.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAccountGroupReturnedInResult,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAuthenticate("Phogue"' generatedAuthenticatePassword' String.Empty).SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 222.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAccountDoesNotExist,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAuthenticate("DoesNotExist"' generatedAuthenticatePassword' String.Empty).SetOrigin(CommandOrigin.Local));" is 176.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestIncorrectPassword,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountSetPassword("Phogue"' generatedSetPassword).SetOrigin(CommandOrigin.Local));" is 122.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestIncorrectPassword,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAuthenticate("Phogue"' generatedAuthenticatePassword' String.Empty).SetOrigin(CommandOrigin.Local));" is 170.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestInsufficientPermission,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAuthenticate("Phogue"' "password"' String.Empty).SetOrigin(CommandOrigin.Local).SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 234.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestUnsetPassword,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAuthenticate("Phogue"' String.Empty' String.Empty).SetOrigin(CommandOrigin.Local));" is 153.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationSuccessTokenGenerated,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountSetPassword("Phogue"' generatedAuthenticatePassword).SetOrigin(CommandOrigin.Local));" is 131.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationSuccessTokenGenerated,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityAccountAuthenticate' 50).SetOrigin(CommandOrigin.Local));" is 148.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationSuccessTokenGenerated,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAuthenticate("Phogue"' generatedAuthenticatePassword' "192.168.1.1").SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 223.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationSuccessCanThenAuthenticateWithToken,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountSetPassword("Phogue"' generatedAuthenticatePassword).SetOrigin(CommandOrigin.Local));" is 131.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationSuccessCanThenAuthenticateWithToken,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityAccountAuthenticate' 50).SetOrigin(CommandOrigin.Local));" is 148.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationSuccessCanThenAuthenticateWithToken,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityAccountAuthenticateToken' 50).SetOrigin(CommandOrigin.Local));" is 153.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationSuccessCanThenAuthenticateWithToken,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAuthenticate("Phogue"' generatedAuthenticatePassword' "192.168.1.1").SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 223.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationSuccessCanThenAuthenticateWithToken,The length of the statement  "            result = security.Tunnel(CommandBuilder.SecurityAccountAuthenticateToken(token.Id' token.Token' "192.168.1.1").SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 195.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationFailureWhenAuthenticateWithTokenDifferentIdentifier,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountSetPassword("Phogue"' generatedAuthenticatePassword).SetOrigin(CommandOrigin.Local));" is 131.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationFailureWhenAuthenticateWithTokenDifferentIdentifier,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityAccountAuthenticate' 50).SetOrigin(CommandOrigin.Local));" is 148.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationFailureWhenAuthenticateWithTokenDifferentIdentifier,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityAccountAuthenticateToken' 50).SetOrigin(CommandOrigin.Local));" is 153.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationFailureWhenAuthenticateWithTokenDifferentIdentifier,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAuthenticate("Phogue"' generatedAuthenticatePassword' "192.168.1.1").SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 223.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationFailureWhenAuthenticateWithTokenDifferentIdentifier,The length of the statement  "            result = security.Tunnel(CommandBuilder.SecurityAccountAuthenticateToken(token.Id' token.Token' "192.168.1.2").SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 195.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountSetPassword,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountSetPassword.cs,TestSuccess,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAuthenticate("Phogue"' generatedPassword' String.Empty).SetOrigin(CommandOrigin.Local));" is 158.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountSetPassword,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountSetPassword.cs,TestAccountDoesNotExist,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountSetPassword("DoesNotExist"' "password").SetOrigin(CommandOrigin.Local));" is 142.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountSetPassword,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountSetPassword.cs,TestAccountInsufficientPermission,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountSetPassword("Phogue"' "password").SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 188.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountSetPassword,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountSetPassword.cs,TestEmptyPassword,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountSetPassword("Phogue"' String.Empty).SetOrigin(CommandOrigin.Local));" is 138.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountSetPasswordHash,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountSetPasswordHash.cs,TestInsufficientPermission,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountSetPasswordHash("Phogue"' BCrypt.Net.BCrypt.HashPassword("password"' BCrypt.Net.BCrypt.GenerateSalt()))" is 173.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountSetPasswordHash,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountSetPasswordHash.cs,TestSetSuccess,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountSetPasswordHash("Phogue"' generatedPasswordHash).SetOrigin(CommandOrigin.Local));" is 127.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountSetPasswordHash,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountSetPasswordHash.cs,TestSetSuccess,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAuthenticate("Phogue"' generatedPassword' String.Empty).SetOrigin(CommandOrigin.Local));" is 158.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountSetPasswordHash,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountSetPasswordHash.cs,TestAccountDoesNotExist,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountSetPasswordHash("DoesNotExist"' BCrypt.Net.BCrypt.HashPassword("password"' BCrypt.Net.BCrypt.GenerateSalt())).SetOrigin(CommandOrigin.Local));" is 212.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountSetPasswordHash,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountSetPasswordHash.cs,TestEmptyPassword,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountSetPasswordHash("Phogue"' String.Empty).SetOrigin(CommandOrigin.Local));" is 142.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityGroupAddAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityGroupAddAccount.cs,TestAddSuccess,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityGroupAddAccount("GroupName"' "Phogue").SetOrigin(CommandOrigin.Local));" is 134.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityGroupAddAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityGroupAddAccount.cs,TestEmptyUsername,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityGroupAddAccount("GroupName"' String.Empty).SetOrigin(CommandOrigin.Local));" is 138.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityGroupAddAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityGroupAddAccount.cs,TestExistingName,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityGroupAddAccount("SecondGroupName"' "Phogue").SetOrigin(CommandOrigin.Local));" is 140.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityGroupAddAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityGroupAddAccount.cs,TestExistingName,The length of the statement  "            Assert.IsNull(security.Groups.Where(group => group.Name == "FirstGroupName").SelectMany(group => group.Accounts).FirstOrDefault());" is 131.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityGroupAddAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityGroupAddAccount.cs,TestExistingName,The length of the statement  "            Assert.AreEqual(security.Groups.Where(group => group.Name == "SecondGroupName").SelectMany(group => group.Accounts).First().Username' "Phogue");" is 144.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityGroupAddAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityGroupAddAccount.cs,TestExistingNameCaseInsensitive,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityGroupAddAccount("SecondGroupName"' "PHOGUE").SetOrigin(CommandOrigin.Local));" is 140.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityGroupAddAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityGroupAddAccount.cs,TestExistingNameCaseInsensitive,The length of the statement  "            Assert.IsNull(security.Groups.Where(group => group.Name == "FirstGroupName").SelectMany(group => group.Accounts).FirstOrDefault());" is 131.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityGroupAddAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityGroupAddAccount.cs,TestExistingNameCaseInsensitive,The length of the statement  "            Assert.AreEqual(security.Groups.Where(group => group.Name == "SecondGroupName").SelectMany(group => group.Accounts).First().Username' "Phogue");" is 144.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityGroupAddAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityGroupAddAccount.cs,TestGroupDoesNotExist,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityGroupAddAccount("NonExistentGroup"' "Phogue").SetOrigin(CommandOrigin.Local));" is 141.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityGroupAddAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityGroupAddAccount.cs,TestGroupGuest,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityGroupAddAccount("Guest"' "Phogue").SetOrigin(CommandOrigin.Local));" is 130.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityRemoveAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityRemoveAccount.cs,TestRemoveOwnAccountFailure,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityRemoveAccount' 1).SetOrigin(CommandOrigin.Local));" is 141.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityRemoveAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityRemoveAccount.cs,TestRemoveOwnAccountFailure,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityRemoveAccount("Phogue").SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 171.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityRemoveAccount,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityRemoveAccount.cs,TestSecurityRemoveAccountInsufficientPermission,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityRemoveAccount("Phogue").SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 171.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountSetPreferredLanguageCode,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountSetPreferredLanguageCode.cs,TestSetSuccess,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountSetPreferredLanguageCode("Phogue"' "de-DE").SetOrigin(CommandOrigin.Local));" is 146.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountSetPreferredLanguageCode,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountSetPreferredLanguageCode.cs,TestAccountDoesNotExist,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountSetPreferredLanguageCode("ThisDoesNotExist"' "de-DE").SetOrigin(CommandOrigin.Local));" is 156.
Long Statement,Potato.Core.Test.Security.Account,TestSecurityAccountSetPreferredLanguageCode,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountSetPreferredLanguageCode.cs,TestLanguageDoesNotExist,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountSetPreferredLanguageCode("Phogue"' "zu-ZU").SetOrigin(CommandOrigin.Local));" is 146.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupSetPermissionDescription,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupSetPermissionDescription.cs,TestInsufficientPermissions,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityGroupSetPermissionDescription("GroupName"' CommandType.VariablesSet.ToString()' "Description!").SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 243.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupSetPermissionDescription,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupSetPermissionDescription.cs,TestGroupDoesNotExist,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityGroupSetPermissionDescription("ThisIsNotValid"' CommandType.VariablesSet.ToString()' "Description!").SetOrigin(CommandOrigin.Local));" is 196.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupSetPermissionDescription,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupSetPermissionDescription.cs,TestSuccess,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityGroupSetPermissionDescription("GroupName"' CommandType.VariablesSet.ToString()' "Description!").SetOrigin(CommandOrigin.Local));" is 191.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupSetPermissionDescription,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupSetPermissionDescription.cs,TestPermissionsdescriptionAppended,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermissionDescription("GroupName"' CommandType.VariablesSet.ToString()' "Description!").SetOrigin(CommandOrigin.Local));" is 167.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupSetPermissionDescription,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupSetPermissionDescription.cs,TestPermissionsdescriptionAppended,The length of the statement  "            Assert.AreEqual("Description!"' group.Permissions.First(permission => permission.CommandType == CommandType.VariablesSet).Description);" is 135.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupSetPermissionDescription,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupSetPermissionDescription.cs,TestCustomPermissionsCustomdescriptionAppended,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermissionDescription("GroupName"' "Custom Permission"' "Description!").SetOrigin(CommandOrigin.Local));" is 151.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupSetPermissionDescription,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupSetPermissionDescription.cs,TestCustomPermissionsCustomdescriptionAppended,The length of the statement  "            Assert.AreEqual("Description!"' group.Permissions.First(permission => permission.Name == "Custom Permission").Description);" is 123.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupRemovePermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupRemovePermissionTrait.cs,TestInsufficientPermissions,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityGroupRemovePermissionTrait("GroupName"' CommandType.VariablesSet.ToString()' PermissionTraitsType.Boolean).SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 254.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupRemovePermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupRemovePermissionTrait.cs,TestGroupDoesNotExist,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityGroupRemovePermissionTrait("ThisIsNotValid"' CommandType.VariablesSet.ToString()' PermissionTraitsType.Boolean).SetOrigin(CommandOrigin.Local));" is 207.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupRemovePermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupRemovePermissionTrait.cs,TestSuccess,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupAppendPermissionTrait("GroupName"' CommandType.VariablesSet.ToString()' PermissionTraitsType.Boolean).SetOrigin(CommandOrigin.Local));" is 178.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupRemovePermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupRemovePermissionTrait.cs,TestSuccess,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityGroupRemovePermissionTrait("GroupName"' CommandType.VariablesSet.ToString()' PermissionTraitsType.Boolean).SetOrigin(CommandOrigin.Local));" is 202.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupRemovePermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupRemovePermissionTrait.cs,TestPermissionsTraitRemoved,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupAppendPermissionTrait("GroupName"' CommandType.VariablesSet.ToString()' PermissionTraitsType.Boolean).SetOrigin(CommandOrigin.Local));" is 178.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupRemovePermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupRemovePermissionTrait.cs,TestPermissionsTraitRemoved,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupRemovePermissionTrait("GroupName"' CommandType.VariablesSet.ToString()' PermissionTraitsType.Boolean).SetOrigin(CommandOrigin.Local));" is 178.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupRemovePermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupRemovePermissionTrait.cs,TestPermissionsTraitRemoved,The length of the statement  "            Assert.AreEqual(new List<String>()' group.Permissions.First(permission => permission.CommandType == CommandType.VariablesSet).Traits);" is 134.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupRemovePermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupRemovePermissionTrait.cs,TestPermissionsTraitRemovedAlreadyRemoved,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupAppendPermissionTrait("GroupName"' CommandType.VariablesSet.ToString()' PermissionTraitsType.Boolean).SetOrigin(CommandOrigin.Local));" is 178.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupRemovePermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupRemovePermissionTrait.cs,TestPermissionsTraitRemovedAlreadyRemoved,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupRemovePermissionTrait("GroupName"' CommandType.VariablesSet.ToString()' PermissionTraitsType.Boolean).SetOrigin(CommandOrigin.Local));" is 178.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupRemovePermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupRemovePermissionTrait.cs,TestPermissionsTraitRemovedAlreadyRemoved,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupRemovePermissionTrait("GroupName"' CommandType.VariablesSet.ToString()' PermissionTraitsType.Boolean).SetOrigin(CommandOrigin.Local));" is 178.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupRemovePermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupRemovePermissionTrait.cs,TestPermissionsTraitRemovedAlreadyRemoved,The length of the statement  "            Assert.AreEqual(new List<String>()' group.Permissions.First(permission => permission.CommandType == CommandType.VariablesSet).Traits);" is 134.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupRemovePermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupRemovePermissionTrait.cs,TestPermissionsCustomTraitAppended,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupAppendPermissionTrait("GroupName"' CommandType.VariablesSet.ToString()' "Custom Trait").SetOrigin(CommandOrigin.Local));" is 164.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupRemovePermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupRemovePermissionTrait.cs,TestPermissionsCustomTraitAppended,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupRemovePermissionTrait("GroupName"' CommandType.VariablesSet.ToString()' "Custom Trait").SetOrigin(CommandOrigin.Local));" is 164.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupRemovePermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupRemovePermissionTrait.cs,TestPermissionsCustomTraitAppended,The length of the statement  "            Assert.AreEqual(new List<String>() { PermissionTraitsType.Boolean }' group.Permissions.First(permission => permission.CommandType == CommandType.VariablesSet).Traits);" is 167.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupRemovePermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupRemovePermissionTrait.cs,TestCustomPermissionsCustomTraitAppended,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupAppendPermissionTrait("GroupName"' "Custom Permission"' "Custom Trait").SetOrigin(CommandOrigin.Local));" is 148.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupRemovePermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupRemovePermissionTrait.cs,TestCustomPermissionsCustomTraitAppended,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupRemovePermissionTrait("GroupName"' "Custom Permission"' "Custom Trait").SetOrigin(CommandOrigin.Local));" is 148.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupRemovePermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupRemovePermissionTrait.cs,TestCustomPermissionsCustomTraitAppended,The length of the statement  "            Assert.AreEqual(new List<String>()' group.Permissions.First(permission => permission.Name == "Custom Permission").Traits);" is 122.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupAppendPermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupAppendPermissionTrait.cs,TestInsufficientPermissions,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityGroupAppendPermissionTrait("GroupName"' CommandType.VariablesSet.ToString()' PermissionTraitsType.Boolean).SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 254.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupAppendPermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupAppendPermissionTrait.cs,TestGroupDoesNotExist,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityGroupAppendPermissionTrait("ThisIsNotValid"' CommandType.VariablesSet.ToString()' PermissionTraitsType.Boolean).SetOrigin(CommandOrigin.Local));" is 207.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupAppendPermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupAppendPermissionTrait.cs,TestSuccess,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityGroupAppendPermissionTrait("GroupName"' CommandType.VariablesSet.ToString()' PermissionTraitsType.Boolean).SetOrigin(CommandOrigin.Local));" is 202.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupAppendPermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupAppendPermissionTrait.cs,TestPermissionsTraitAppended,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupAppendPermissionTrait("GroupName"' CommandType.VariablesSet.ToString()' PermissionTraitsType.Boolean).SetOrigin(CommandOrigin.Local));" is 178.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupAppendPermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupAppendPermissionTrait.cs,TestPermissionsTraitAppended,The length of the statement  "            Assert.AreEqual(new List<String>() { PermissionTraitsType.Boolean }' group.Permissions.First(permission => permission.CommandType == CommandType.VariablesSet).Traits);" is 167.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupAppendPermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupAppendPermissionTrait.cs,TestPermissionsTraitAppendedDistinctValues,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupAppendPermissionTrait("GroupName"' CommandType.VariablesSet.ToString()' PermissionTraitsType.Boolean).SetOrigin(CommandOrigin.Local));" is 178.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupAppendPermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupAppendPermissionTrait.cs,TestPermissionsTraitAppendedDistinctValues,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupAppendPermissionTrait("GroupName"' CommandType.VariablesSet.ToString()' PermissionTraitsType.Boolean).SetOrigin(CommandOrigin.Local));" is 178.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupAppendPermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupAppendPermissionTrait.cs,TestPermissionsTraitAppendedDistinctValues,The length of the statement  "            Assert.AreEqual(new List<String>() { PermissionTraitsType.Boolean }' group.Permissions.First(permission => permission.CommandType == CommandType.VariablesSet).Traits);" is 167.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupAppendPermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupAppendPermissionTrait.cs,TestPermissionsCustomTraitAppended,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupAppendPermissionTrait("GroupName"' CommandType.VariablesSet.ToString()' "Custom Trait").SetOrigin(CommandOrigin.Local));" is 164.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupAppendPermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupAppendPermissionTrait.cs,TestPermissionsCustomTraitAppended,The length of the statement  "            Assert.AreEqual(new List<String>() { PermissionTraitsType.Boolean' "Custom Trait" }' group.Permissions.First(permission => permission.CommandType == CommandType.VariablesSet).Traits);" is 183.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupAppendPermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupAppendPermissionTrait.cs,TestCustomPermissionsCustomTraitAppended,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupAppendPermissionTrait("GroupName"' "Custom Permission"' "Custom Trait").SetOrigin(CommandOrigin.Local));" is 148.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityGroupAppendPermissionTrait,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityGroupAppendPermissionTrait.cs,TestCustomPermissionsCustomTraitAppended,The length of the statement  "            Assert.AreEqual(new List<String>() { "Custom Trait" }' group.Permissions.First(permission => permission.Name == "Custom Permission").Traits);" is 141.
Long Statement,Potato.Core.Test.Security.Permission,TestSecuritySetPredefinedAdministratorsPermissions,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecuritySetPredefinedAdministratorsPermissions.cs,TestInsufficientPermissions,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecuritySetPredefinedAdministratorsPermissions("GroupName").SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 199.
Long Statement,Potato.Core.Test.Security.Permission,TestSecuritySetPredefinedAdministratorsPermissions,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecuritySetPredefinedAdministratorsPermissions.cs,TestGroupDoesNotExist,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecuritySetPredefinedAdministratorsPermissions("ThisIsNotValid").SetOrigin(CommandOrigin.Local));" is 152.
Long Statement,Potato.Core.Test.Security.Permission,TestSecuritySetPredefinedAdministratorsPermissions,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecuritySetPredefinedAdministratorsPermissions.cs,TestGuestGroupFailure,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecuritySetPredefinedAdministratorsPermissions("Guest").SetOrigin(CommandOrigin.Local));" is 143.
Long Statement,Potato.Core.Test.Security.Permission,TestSecuritySetPredefinedAdministratorsPermissions,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecuritySetPredefinedAdministratorsPermissions.cs,TestSuccess,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecuritySetPredefinedAdministratorsPermissions("GroupName").SetOrigin(CommandOrigin.Local));" is 147.
Long Statement,Potato.Core.Test.Security.Permission,TestSecuritySetPredefinedAdministratorsPermissions,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecuritySetPredefinedAdministratorsPermissions.cs,TestPermissionsSet,The length of the statement  "            security.Tunnel(CommandBuilder.SecuritySetPredefinedAdministratorsPermissions("GroupName").SetOrigin(CommandOrigin.Local));" is 123.
Long Statement,Potato.Core.Test.Security.Permission,TestSecuritySetPredefinedStreamPermissions,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecuritySetPredefinedStreamPermissions.cs,TestInsufficientPermissions,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecuritySetPredefinedStreamPermissions("GroupName").SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 191.
Long Statement,Potato.Core.Test.Security.Permission,TestSecuritySetPredefinedStreamPermissions,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecuritySetPredefinedStreamPermissions.cs,TestGroupDoesNotExist,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecuritySetPredefinedStreamPermissions("ThisIsNotValid").SetOrigin(CommandOrigin.Local));" is 144.
Long Statement,Potato.Core.Test.Security.Permission,TestSecuritySetPredefinedStreamPermissions,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecuritySetPredefinedStreamPermissions.cs,TestGuestGroupFailure,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecuritySetPredefinedStreamPermissions("Guest").SetOrigin(CommandOrigin.Local));" is 135.
Long Statement,Potato.Core.Test.Security.Permission,TestSecuritySetPredefinedStreamPermissions,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecuritySetPredefinedStreamPermissions.cs,TestSuccess,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecuritySetPredefinedStreamPermissions("GroupName").SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestZeroedAuthorityEqualsNoPermissions,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.VariablesSet' 0).SetOrigin(CommandOrigin.Local));" is 132.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestZeroedAuthorityEqualsNoPermissions,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityQueryPermission(CommandType.VariablesSet' "DoesNotExist")" is 120.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestZeroedAuthorityEqualsNoPermissionsCaseInsensitive,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.VariablesSet' 0).SetOrigin(CommandOrigin.Local));" is 132.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestZeroedAuthorityEqualsNoPermissionsCaseInsensitive,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityQueryPermission(CommandType.VariablesSet' "DoesNotExist")" is 120.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsLessAuthorityByAccountUsername,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsLessAuthorityByAccountUsername,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsLessAuthorityByAccountUsername,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("SecondGroupName"' CommandType.VariablesSet' 50).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsLessAuthorityByAccountUsername,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Zaeed"' CommonProtocolType.DiceBattlefield3' "0123456789").SetOrigin(CommandOrigin.Local));" is 148.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsLessAuthorityByPlayerDetails,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsLessAuthorityByPlayerDetails,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsLessAuthorityByPlayerDetails,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("SecondGroupName"' CommandType.VariablesSet' 50).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsLessAuthorityByPlayerDetails,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Zaeed"' CommonProtocolType.DiceBattlefield3' "0123456789").SetOrigin(CommandOrigin.Local));" is 148.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsLessAuthorityByPlayerDetails,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityQueryPermission(CommandType.VariablesSet' CommonProtocolType.DiceBattlefield3' "ABCDEF")" is 151.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByPlayerDetailsAsGuest,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByPlayerDetailsAsGuest,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByPlayerDetailsAsGuest,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityQueryPermission(CommandType.VariablesSet' CommonProtocolType.DiceBattlefield3' "ABCDEF")" is 151.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsLessAuthorityByPlayerDetailsAsGuest,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsLessAuthorityByPlayerDetailsAsGuest,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsLessAuthorityByPlayerDetailsAsGuest,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("Guest"' CommandType.VariablesSet' 50).SetOrigin(CommandOrigin.Local));" is 129.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsLessAuthorityByPlayerDetailsAsGuest,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityQueryPermission(CommandType.VariablesSet' CommonProtocolType.DiceBattlefield3' "ABCDEF")" is 151.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByPlayerDetailsAsGuest,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByPlayerDetailsAsGuest,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByPlayerDetailsAsGuest,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("Guest"' CommandType.VariablesSet' 200).SetOrigin(CommandOrigin.Local));" is 130.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByPlayerDetailsAsGuest,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityQueryPermission(CommandType.VariablesSet' CommonProtocolType.DiceBattlefield3' "ABCDEF")" is 151.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByAccountUsername,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByAccountUsername,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByAccountUsername,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("SecondGroupName"' CommandType.VariablesSet' 50).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByAccountUsername,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Zaeed"' CommonProtocolType.DiceBattlefield3' "0123456789").SetOrigin(CommandOrigin.Local));" is 148.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByAccountUsernameCaseInsensitive,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByAccountUsernameCaseInsensitive,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByAccountUsernameCaseInsensitive,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("SecondGroupName"' CommandType.VariablesSet' 50).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByAccountUsernameCaseInsensitive,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Zaeed"' CommonProtocolType.DiceBattlefield3' "0123456789").SetOrigin(CommandOrigin.Local));" is 148.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByPlayerDetails,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByPlayerDetails,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByPlayerDetails,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("SecondGroupName"' CommandType.VariablesSet' 50).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByPlayerDetails,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Zaeed"' CommonProtocolType.DiceBattlefield3' "0123456789").SetOrigin(CommandOrigin.Local));" is 148.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByPlayerDetails,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityQueryPermission(CommandType.VariablesSet' CommonProtocolType.DiceBattlefield3' "0123456789")" is 155.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByAccountUsername,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByAccountUsername,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByAccountUsername,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("SecondGroupName"' CommandType.VariablesSet' 50).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByAccountUsername,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Zaeed"' CommonProtocolType.DiceBattlefield3' "0123456789").SetOrigin(CommandOrigin.Local));" is 148.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByAccountUsername,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityQueryPermission(CommandType.VariablesSet' "DoesNotExist")" is 120.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByAccountUsernameCaseInsensitive,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByAccountUsernameCaseInsensitive,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByAccountUsernameCaseInsensitive,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("SecondGroupName"' CommandType.VariablesSet' 50).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByAccountUsernameCaseInsensitive,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Zaeed"' CommonProtocolType.DiceBattlefield3' "0123456789").SetOrigin(CommandOrigin.Local));" is 148.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByAccountUsernameCaseInsensitive,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityQueryPermission(CommandType.VariablesSet' "DoesNotExist")" is 120.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByPlayerDetails,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByPlayerDetails,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByPlayerDetails,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("SecondGroupName"' CommandType.VariablesSet' 50).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByPlayerDetails,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Zaeed"' CommonProtocolType.DiceBattlefield3' "0123456789").SetOrigin(CommandOrigin.Local));" is 148.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByPlayerDetails,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityQueryPermission(CommandType.VariablesSet' CommonProtocolType.DiceBattlefield3' "DoesNotExist")" is 157.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsPluginOrigin,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsPluginOrigin,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsPluginOrigin,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityQueryPermission(CommandType.VariablesSet' "DoesNotExist")" is 120.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsUnknownOrigin,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsUnknownOrigin,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Phogue"' CommonProtocolType.DiceBattlefield3' "ABCDEF").SetOrigin(CommandOrigin.Local));" is 145.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsUnknownOrigin,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("SecondGroupName"' CommandType.VariablesSet' 50).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsUnknownOrigin,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAddPlayer("Zaeed"' CommonProtocolType.DiceBattlefield3' "0123456789").SetOrigin(CommandOrigin.Local));" is 148.
Long Statement,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsUnknownOrigin,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityQueryPermission(CommandType.VariablesSet' CommonProtocolType.DiceBattlefield3' "DoesNotExist")" is 157.
Long Statement,Potato.Core.Test.Security,TestPoke,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestPoke.cs,TestNoneExpiredNoneRemoved,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.NewGuid()' "Token Hash One"' DateTime.Now).SetOrigin(CommandOrigin.Local));" is 154.
Long Statement,Potato.Core.Test.Security,TestPoke,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestPoke.cs,TestNoneExpiredNoneRemoved,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.NewGuid()' "Token Hash Two"' DateTime.Now).SetOrigin(CommandOrigin.Local));" is 154.
Long Statement,Potato.Core.Test.Security,TestPoke,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestPoke.cs,TestOneExpiredOneRemoved,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.NewGuid()' "Token Hash One"' DateTime.Now.AddDays(-3)).SetOrigin(CommandOrigin.Local));" is 166.
Long Statement,Potato.Core.Test.Security,TestPoke,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestPoke.cs,TestOneExpiredOneRemoved,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.NewGuid()' "Token Hash Two"' DateTime.Now).SetOrigin(CommandOrigin.Local));" is 154.
Long Statement,Potato.Core.Test.Security,TestPoke,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestPoke.cs,TestOneExpiredOneRemoved,The length of the statement  "            Assert.AreEqual("Token Hash Two"' security.Groups.First(group => group.Name == "GroupName").Accounts.First().AccessTokens.First().Value.TokenHash);" is 147.
Long Statement,Potato.Core.Test.Security,TestPoke,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestPoke.cs,TestTwoExpiredTwoRemoved,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.NewGuid()' "Token Hash One"' DateTime.Now.AddDays(-3)).SetOrigin(CommandOrigin.Local));" is 166.
Long Statement,Potato.Core.Test.Security,TestPoke,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestPoke.cs,TestTwoExpiredTwoRemoved,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.NewGuid()' "Token Hash Two"' DateTime.Now.AddDays(-3)).SetOrigin(CommandOrigin.Local));" is 166.
Long Statement,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityDispose,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupAppendPermissionTrait("GroupName"' CommandType.VariablesSet.ToString()' PermissionTraitsType.Boolean).SetOrigin(CommandOrigin.Local));" is 178.
Long Statement,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityDispose,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermissionDescription("GroupName"' CommandType.VariablesSet.ToString()' "Description!").SetOrigin(CommandOrigin.Local));" is 167.
Long Statement,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityLoadConfig,The length of the statement  "            saveSecurity.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.Parse("f380eb1e-1438-48c0-8c3d-ad55f2d40538")' "Token Hash"' DateTime.Parse("2024-04-14 20:51:00 PM")).SetOrigin(CommandOrigin.Local));" is 218.
Long Statement,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityLoadConfig,The length of the statement  "            Assert.AreEqual(77' lastGroup.Permissions.First(permission => permission.Name == CommandType.VariablesSet.ToString()).Authority);" is 129.
Long Statement,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityLoadConfig,The length of the statement  "            Assert.AreEqual(88' lastGroup.Permissions.First(permission => permission.Name == CommandType.VariablesSetA.ToString()).Authority);" is 130.
Long Statement,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityLoadConfig,The length of the statement  "            Assert.AreEqual(Guid.Parse("f380eb1e-1438-48c0-8c3d-ad55f2d40538")' loadSecurity.Groups.SelectMany(group => group.Accounts).First().AccessTokens.First().Value.Id);" is 163.
Long Statement,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityLoadConfig,The length of the statement  "            Assert.AreEqual("Token Hash"' loadSecurity.Groups.SelectMany(group => group.Accounts).First().AccessTokens.First().Value.TokenHash);" is 132.
Long Statement,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityLoadConfig,The length of the statement  "            Assert.AreEqual(DateTime.Parse("2024-04-14 20:51:00 PM")' loadSecurity.Groups.SelectMany(group => group.Accounts).First().AccessTokens.First().Value.LastTouched);" is 162.
Long Statement,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityLoadConfig,The length of the statement  "            Assert.AreEqual(CommonProtocolType.DiceBattlefield3' loadSecurity.Groups.SelectMany(group => group.Accounts).SelectMany(account => account.Players).First().ProtocolType);" is 170.
Long Statement,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityLoadConfig,The length of the statement  "            Assert.AreEqual("ABCDEF"' loadSecurity.Groups.SelectMany(group => group.Accounts).SelectMany(account => account.Players).First().Uid);" is 134.
Long Statement,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityLoadConfig,The length of the statement  "            ICommandResult result = loadSecurity.Tunnel(CommandBuilder.SecurityAccountAuthenticate("Phogue"' "password"' String.Empty).SetOrigin(CommandOrigin.Local));" is 155.
Long Statement,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.Parse("f380eb1e-1438-48c0-8c3d-ad55f2d40538")' "Token Hash"' DateTime.Parse("2024-04-14 20:51:00 PM")).SetOrigin(CommandOrigin.Local));" is 214.
Long Statement,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The length of the statement  "            var commands = loadConfig.RootOf<SecurityController>().Children<JObject>().Select(item => item.ToObject<IConfigCommand>(JsonSerialization.Minimal)).ToList();" is 157.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicMonthTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicMonthTemporal.cs,TestTemporalKickEveryoneLastMonth,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone last month"' TextCommandKick' new TimeSpan(-1 * DateTime.DaysInMonth(DateTime.Now.Year' DateTime.Now.Month - 1 < 1 ? 12 : DateTime.Now.Month - 1)' 0' 0' 0));" is 225.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicMonthTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicMonthTemporal.cs,TestTemporalKickEveryoneUntilNextMonth,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone until next month"' TextCommandKick' new TimeSpan(DateTime.DaysInMonth(DateTime.Now.Year' DateTime.Now.Month)' 0' 0' 0));" is 188.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneEverySecond,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone every second"' TextCommandKick' null' null' new FuzzyDateTimePattern() {" is 140.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneFor1Hour,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone for 1 hour"' TextCommandKick' new TimeSpan(TimeSpan.TicksPerHour * 1));" is 139.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneFor1Month,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone for 1 month"' TextCommandKick' new TimeSpan(TimeSpan.TicksPerDay * DateTime.DaysInMonth(DateTime.Now.Year' DateTime.Now.Month)));" is 197.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneFor1Second,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone for 1 second"' TextCommandKick' new TimeSpan(TimeSpan.TicksPerSecond * 1));" is 143.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneFor1Year,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone for 1 year"' TextCommandKick' new TimeSpan(TimeSpan.TicksPerDay * 365));" is 140.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneFor2PlusTwoWeeks,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone for 2 plus two weeks"' TextCommandKick' new TimeSpan(TimeSpan.TicksPerDay * 28));" is 149.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneFor2Weeks,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone for 2 weeks"' TextCommandKick' new TimeSpan(TimeSpan.TicksPerDay * 14));" is 140.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneForAHour,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone for a hour"' TextCommandKick' new TimeSpan(TimeSpan.TicksPerHour * 1));" is 139.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneForAMonth,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone for a month"' TextCommandKick' new TimeSpan(TimeSpan.TicksPerDay * DateTime.DaysInMonth(DateTime.Now.Year' DateTime.Now.Month)));" is 197.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneForASecond,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone for a second"' TextCommandKick' new TimeSpan(TimeSpan.TicksPerSecond * 1));" is 143.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneForAYear,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone for a year"' TextCommandKick' new TimeSpan(TimeSpan.TicksPerDay * 365));" is 140.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneForOneHour,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone for one hour"' TextCommandKick' new TimeSpan(TimeSpan.TicksPerHour * 1));" is 141.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneForOneMonth,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone for one month"' TextCommandKick' new TimeSpan(TimeSpan.TicksPerDay * DateTime.DaysInMonth(DateTime.Now.Year' DateTime.Now.Month)));" is 199.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneForOneSecond,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone for one second"' TextCommandKick' new TimeSpan(TimeSpan.TicksPerSecond * 1));" is 145.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneForOneYear,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone for one year"' TextCommandKick' new TimeSpan(TimeSpan.TicksPerDay * 365));" is 142.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneLastDayOfWeek,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone last {0}"' DateTime.Now.DayOfWeek)' TextCommandKick' new TimeSpan(-7' 0' 0' 0));" is 162.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneNextDayOfWeek,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone next {0}"' DateTime.Now.DayOfWeek)' TextCommandKick' new TimeSpan(7' 0' 0' 0));" is 161.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneSplitDefinitiveTimesOnPrepositions,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone on 5'th september 2020"' TextCommandKick' null' new DateTime(2020' 9' 5' DateTime.Now.Hour' DateTime.Now.Minute' DateTime.Now.Second));" is 203.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneSplitDefinitiveTimesOnThePrepositions,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone on the 5'th september 2020"' TextCommandKick' null' new DateTime(2020' 9' 5' DateTime.Now.Hour' DateTime.Now.Minute' DateTime.Now.Second));" is 207.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneSplitDefinitiveTimesUntilPrepositions,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone until 5'th september 2020"' TextCommandKick' new DateTime(2020' 9' 5' DateTime.Now.Hour' DateTime.Now.Minute' DateTime.Now.Second) - DateTime.Now);" is 215.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneSplitDefinitiveTimesUntilThePrepositions,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' "kick everyone until the 5'th september 2020"' TextCommandKick' new DateTime(2020' 9' 5' DateTime.Now.Hour' DateTime.Now.Minute' DateTime.Now.Second) - DateTime.Now);" is 219.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneThisDayOfWeek,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone this {0}"' DateTime.Now.DayOfWeek)' TextCommandKick' new TimeSpan(0' 0' 0' 0));" is 161.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneThisDayOfWeekPlus1,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone this {0}"' DateTime.Now.AddDays(1).DayOfWeek)' TextCommandKick' new TimeSpan(1' 0' 0' 0));" is 172.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneThisDayOfWeekPlus2,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone this {0}"' DateTime.Now.AddDays(2).DayOfWeek)' TextCommandKick' new TimeSpan(2' 0' 0' 0));" is 172.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneThisDayOfWeekPlus3,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone this {0}"' DateTime.Now.AddDays(3).DayOfWeek)' TextCommandKick' new TimeSpan(3' 0' 0' 0));" is 172.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneThisDayOfWeekPlus4,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone this {0}"' DateTime.Now.AddDays(4).DayOfWeek)' TextCommandKick' new TimeSpan(4' 0' 0' 0));" is 172.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneThisDayOfWeekPlus5,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone this {0}"' DateTime.Now.AddDays(5).DayOfWeek)' TextCommandKick' new TimeSpan(5' 0' 0' 0));" is 172.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneThisDayOfWeekPlus6,The length of the statement  "            AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone this {0}"' DateTime.Now.AddDays(6).DayOfWeek)' TextCommandKick' new TimeSpan(6' 0' 0' 0));" is 172.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneUntil12Pm,The length of the statement  "            AssertExecutedCommandAgainstTemporalValue(args' TextCommandKick' new DateTime(midnight.Year' midnight.Month' midnight.Day' 0' 0' 0) - DateTime.Now' null' null);" is 160.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzySetsObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzySetsObjectMatching.cs,TestKickEveryoneWithExclusionOnPhoguePhilImpliedJoin,The length of the statement  "            AssertCommandPlayerListMapList(textCommandController' "kick everyone but not phogue phil"' TextCommandKick' textCommandController.Connection.ProtocolState.Players.Values.Except(new List<PlayerModel>() {" is 202.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzySetsObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzySetsObjectMatching.cs,TestKickPhogueOrPhilk,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick phogue or phil"' TextCommandKick' new List<PlayerModel>() {" is 127.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzySetsObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzySetsObjectMatching.cs,TestKickPhoguePhilkImpliedJoin,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick phogue phil"' TextCommandKick' new List<PlayerModel>() {" is 124.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzySetsObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzySetsObjectMatching.cs,TestKickPhoguePhilkImpliedJoinGarbageIke,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick phogue phil garbage ike"' TextCommandKick' new List<PlayerModel>() {" is 136.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzySetsObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzySetsObjectMatching.cs,TestKickPhoguePhilkImpliedJoinGarbageIkeZaeedImpliedJoin,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick phogue phil' zaeed ike"' TextCommandKick' new List<PlayerModel>() {" is 135.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzySetsObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzySetsObjectMatching.cs,TestKickPhoguePhilkImpliedJoinWithImpliedJoinPortValdez,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick phogue phil port valdez"' TextCommandKick' new List<PlayerModel>() {" is 136.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzySetsObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzySetsObjectMatching.cs,TestKickPhoguePhilkImpliedJoinWithLogicalAndJoinIke,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick phogue phil and ike"' TextCommandKick' new List<PlayerModel>() {" is 132.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzySetsObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzySetsObjectMatching.cs,TestKickPhoguePhilkImpliedJoinWithLogicalAndJoinIkeZaeedImpliedJoin,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick phogue phil and zaeed ike"' TextCommandKick' new List<PlayerModel>() {" is 138.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzySetsObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzySetsObjectMatching.cs,TestKickPhoguePhilkLogicalAndJoin,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick phogue and phil"' TextCommandKick' new List<PlayerModel>() {" is 128.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateCardinalsAddition,The length of the statement  "            AssertNumericCommand(CreateTextCommandController()' "calculate twenty one + one hundred and one"' TextCommandCalculate' 122.0F);" is 128.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateComplexBracketedArithmeticBodmasLevelThree,The length of the statement  "            AssertNumericCommand(CreateTextCommandController()' "calculate (51+3)/6*((2+3*3)/2)*(51+3)/6*((2+3*3)/2)"' TextCommandCalculate' 2450.25F);" is 139.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexObjectMatching.cs,TestComplexChangeMapToAllMaps,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "change map to all maps"' TextCommandChangeMap' new List<PlayerModel>()' new List<MapModel>() {" is 157.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexObjectMatching.cs,TestComplexKickAllPlayers,The length of the statement  "            AssertCommandPlayerListMapList(textCommandController' "kick all players"' TextCommandKick' textCommandController.Connection.ProtocolState.Players.Values' new List<MapModel>());" is 176.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexObjectMatching.cs,TestComplexKickEveryoneExceptMe,The length of the statement  "            AssertCommandPlayerListMapList(textCommandController' "kick everyone except me"' TextCommandKick' textCommandController.Connection.ProtocolState.Players.Values.Where(player => player != PlayerPhogue).ToList()' new List<MapModel>());" is 232.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexObjectMatching.cs,TestComplexKickEveryoneExceptPhogue,The length of the statement  "            AssertCommandPlayerListMapList(textCommandController' "kick everyone except phogue"' TextCommandKick' textCommandController.Connection.ProtocolState.Players.Values.Where(player => player != PlayerPhogue).ToList()' new List<MapModel>());" is 236.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexObjectMatching.cs,TestComplexKickEveryoneExceptPhogueOnAllMapsButPortValdez,The length of the statement  "            AssertCommandPlayerListMapList(textCommandController' "kick everyone except phogue on all maps but port valdez"' TextCommandKick' textCommandController.Connection.ProtocolState.Players.Values.Where(player => player != PlayerPhogue).ToList()' new List<MapModel>() {" is 264.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexObjectMatching.cs,TestComplexKickEveryoneNotUsingC4,The length of the statement  "            AssertCommandPlayerListMapList(textCommandController' "kick everyone not using C4"' TextCommandKick' textCommandController.Connection.ProtocolState.Players.Values.Where(player => player != PlayerImisnew2).ToList()' new List<MapModel>());" is 237.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexObjectMatching.cs,TestComplexKickEveryoneUsingSniperRifles,The length of the statement  "            AssertCommandPlayerListMapList(textCommandController' "kick everyone using sniper rifles"' TextCommandKick' new List<PlayerModel>() {" is 133.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexObjectMatching.cs,TestComplexKickPhogueOnPortValdez,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick phogue on port valdez"' TextCommandKick' new List<PlayerModel>() {" is 134.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexObjectMatching.cs,TestComplexKickPlayersEqualToPing,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick players with ping equal to 50"' TextCommandKick' new List<PlayerModel>() {" is 142.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexObjectMatching.cs,TestComplexKickPlayersFromAustralia,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick everyone from australia"' TextCommandKick' new List<PlayerModel>() {" is 136.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexObjectMatching.cs,TestComplexKickPlayersFromAustraliaAndScoreLessThan1000,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick everyone from australia and score less than 1000"' TextCommandKick' new List<PlayerModel>() {" is 161.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexObjectMatching.cs,TestComplexKickPlayersGreaterThanPing,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick players with ping greater than 300"' TextCommandKick' new List<PlayerModel>() {" is 147.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexObjectMatching.cs,TestComplexKickPlayersGreaterThanPingOnPortValdez,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick players with ping over 320 on port valdez"' TextCommandKick' new List<PlayerModel>() {" is 154.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexObjectMatching.cs,TestComplexKickPlayersGreaterThanorEqualToPing,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick players with ping gteq 300"' TextCommandKick' new List<PlayerModel>() {" is 139.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexObjectMatching.cs,TestComplexKickPlayersLessThanOrEqualToPing,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick players with ping lteq 100"' TextCommandKick' new List<PlayerModel>() {" is 139.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexObjectMatching.cs,TestComplexKickPlayersLessThanPing,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick players with ping less than 100"' TextCommandKick' new List<PlayerModel>() {" is 144.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexObjectMatching.cs,TestComplexKickPlayersNotFromAustralia,The length of the statement  "            AssertCommandPlayerListMapList(textCommandController' "kick everyone not from australia"' TextCommandKick' textCommandController.Connection.ProtocolState.Players.Values.Except(new List<PlayerModel>() {" is 201.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexObjectMatching.cs,TestComplexKickPlayersWithinRangeOfPing,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick players with ping gteq 50 and ping lteq 100"' TextCommandKick' new List<PlayerModel>() {" is 156.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexObjectMatching.cs,TestComplexKickPlayersWithinRangeOfPingAndScoreEqualTo1000,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick players with ping gteq 50 and ping lteq 100 and score = 1000"' TextCommandKick' new List<PlayerModel>() {" is 173.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicObjectMatching.cs,TestBasicAlternateKickPhogueCommandSmallTypo,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "get rdi of phogue"' TextCommandKick' new List<PlayerModel>() {" is 125.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicObjectMatching.cs,TestBasicKickDiacritic,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick MrDiacritic"' TextCommandKick' new List<PlayerModel>() {" is 124.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicObjectMatching.cs,TestKickPhogueButNotPhogueIsAButterflyWithHighSimilarity,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick phogue is perhaps not a butterfly"' TextCommandKick' new List<PlayerModel>() {" is 146.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicObjectMatching.cs,TestKickPhogueCommaMorpheus,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick phogue' morpheus(aut)"' TextCommandKick' new List<PlayerModel>() {" is 134.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicObjectMatching.cs,TestKickPhogueIsAButterfly,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick phogue is a butterfly"' TextCommandKick' new List<PlayerModel>() {" is 134.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicObjectMatching.cs,TestKickPhogueIsAButterflySmallTypo,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick phogue is a buttrfly"' TextCommandKick' new List<PlayerModel>() {" is 133.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicObjectMatching.cs,TestKickPhogueMorpheusSevereTypo,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick phage' marphius aut"' TextCommandKick' new List<PlayerModel>() {" is 132.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicObjectMatching.cs,TestKickPhogueMorpheusTruncated,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick pho' morph"' TextCommandKick' new List<PlayerModel>() {" is 123.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicObjectMatching,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicObjectMatching.cs,TestKickSplitNameDoubleSubsetMatch,The length of the statement  "            AssertCommandPlayerListMapList(CreateTextCommandController()' "kick say nish"' TextCommandKick' new List<PlayerModel>() {" is 121.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzySentences,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzySentences.cs,TestSentencesHelloWorldQuoted,The length of the statement  "            AssertCommandSentencesList(CreateTextCommandController()' "test \"Hello World!\""' TextCommandTest' new List<string>() {" is 120.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexTemporal.cs,TestTemporalKickPhogueInTwoMinutesOnPortValdezForAMinute,The length of the statement  "            ICommandResult args = ExecuteTextCommand(CreateTextCommandController()' "kick phogue in two minutes on port valdez for a minute");" is 130.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexTemporal.cs,TestTemporalKickPhogueInTwoMinutesOnPortValdezForAMinute,The length of the statement  "            AssertExecutedCommandAgainstTemporalValue(args' TextCommandKick' new TimeSpan(TimeSpan.TicksPerMinute * 1)' DateTime.Now + new TimeSpan(TimeSpan.TicksPerMinute * 2));" is 166.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexTemporal.cs,TestTemporalKickPhogueInTwoMinutesOnPortValdezForAMinuteEveryHour,The length of the statement  "            ICommandResult args = ExecuteTextCommand(CreateTextCommandController()' "kick phogue in two minutes on port valdez for a minute every hour");" is 141.
Long Statement,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexTemporal.cs,TestTemporalKickPhogueInTwoMinutesOnPortValdezForAMinuteEveryHour,The length of the statement  "            AssertExecutedCommandAgainstTemporalValue(args' TextCommandKick' new TimeSpan(TimeSpan.TicksPerMinute * 1)' DateTime.Now + new TimeSpan(TimeSpan.TicksPerMinute * 2)' new FuzzyDateTimePattern() {" is 194.
Long Statement,Potato.Core.Test.TextCommands,TestTextCommandParserBase,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\TestTextCommandParserBase.cs,CreateTextCommandController,The length of the statement  "            textCommandController.Connection.ProtocolState.Items = new ConcurrentDictionary<String' ItemModel>(textCommandController.Connection.ProtocolState.Players.Values.SelectMany(player => player.Inventory.Now.Items).ToDictionary(i => i.Name' i => i));" is 245.
Long Statement,Potato.Core.Test.TextCommands,TestTextCommandParserBase,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\TestTextCommandParserBase.cs,CreateTextCommandController,The length of the statement  "            textCommandController.Connection.ProtocolState.MapPool.TryAdd(String.Format("{0}/{1}"' MapPortValdez.GameMode.Name' MapPortValdez.Name)' MapPortValdez);" is 152.
Long Statement,Potato.Core.Test.TextCommands,TestTextCommandParserBase,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\TestTextCommandParserBase.cs,CreateTextCommandController,The length of the statement  "            textCommandController.Connection.ProtocolState.MapPool.TryAdd(String.Format("{0}/{1}"' MapValparaiso.GameMode.Name' MapValparaiso.Name)' MapValparaiso);" is 152.
Long Statement,Potato.Core.Test.TextCommands,TestTextCommandParserBase,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\TestTextCommandParserBase.cs,CreateTextCommandController,The length of the statement  "            textCommandController.Connection.ProtocolState.MapPool.TryAdd(String.Format("{0}/{1}"' MapPanamaCanal.GameMode.Name' MapPanamaCanal.Name)' MapPanamaCanal);" is 155.
Long Statement,Potato.Core.Test.TextCommands,TestTextCommandParserBase,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\TestTextCommandParserBase.cs,AssertExecutedCommand,The length of the statement  "            Assert.AreEqual(primaryCommand' args.Now.TextCommands.First()' String.Format("Has not used the '{0}' command"' primaryCommand.PluginCommand));" is 142.
Long Statement,Potato.Core.Test.TextCommands,TestTextCommandParserBase,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\TestTextCommandParserBase.cs,AssertExecutedCommandAgainstSentencesList,The length of the statement  "            Assert.AreEqual(primaryCommand' args.Now.TextCommands.First()' String.Format("Has not used the '{0}' command"' primaryCommand.PluginCommand));" is 142.
Long Statement,Potato.Core.Test.TextCommands,TestTextCommandParserBase,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\TestTextCommandParserBase.cs,AssertExecutedCommandAgainstSentencesList,The length of the statement  "            Assert.AreEqual(sentences.Count' args.Now.TextCommandMatches.First().Quotes != null ? args.Now.TextCommandMatches.First().Quotes.Count : 0' "Incorrect numbers of sentences returned");" is 183.
Long Statement,Potato.Core.Test.TextCommands,TestTextCommandParserBase,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\TestTextCommandParserBase.cs,AssertExecutedCommandAgainstSentencesList,The length of the statement  "                Assert.IsTrue(args.Now.TextCommandMatches.First().Quotes.Contains(sentence) == true' String.Format("Could not find sentence '{0}'"' sentence));" is 143.
Long Statement,Potato.Core.Test.TextCommands,TestTextCommandParserBase,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\TestTextCommandParserBase.cs,AssertExecutedCommandAgainstPlayerListMapList,The length of the statement  "            Assert.AreEqual(primaryCommand' args.Now.TextCommands.First()' String.Format("Has not used the '{0}' command"' primaryCommand.PluginCommand));" is 142.
Long Statement,Potato.Core.Test.TextCommands,TestTextCommandParserBase,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\TestTextCommandParserBase.cs,AssertExecutedCommandAgainstPlayerListMapList,The length of the statement  "            Assert.AreEqual(players.Count' args.Now.TextCommandMatches.First().Players != null ? args.Now.TextCommandMatches.First().Players.Count : 0' "Incorrect numbers of players returned");" is 181.
Long Statement,Potato.Core.Test.TextCommands,TestTextCommandParserBase,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\TestTextCommandParserBase.cs,AssertExecutedCommandAgainstPlayerListMapList,The length of the statement  "            Assert.AreEqual(maps.Count' args.Now.TextCommandMatches.First().Maps != null ? args.Now.TextCommandMatches.First().Maps.Count : 0' "Incorrect numbers of maps returned");" is 169.
Long Statement,Potato.Core.Test.TextCommands,TestTextCommandParserBase,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\TestTextCommandParserBase.cs,AssertExecutedCommandAgainstPlayerListMapList,The length of the statement  "                Assert.IsTrue(args.Now.TextCommandMatches.First().Players.Contains(player) == true' String.Format("Could not find player '{0}'"' player.Name));" is 143.
Long Statement,Potato.Core.Test.TextCommands,TestTextCommandParserBase,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\TestTextCommandParserBase.cs,AssertExecutedCommandAgainstPlayerListMapList,The length of the statement  "                Assert.IsTrue(args.Now.TextCommandMatches.First().Maps.Contains(map) == true' String.Format("Could not find map '{0}'"' map.Name));" is 131.
Long Statement,Potato.Core.Test.TextCommands,TestTextCommandParserBase,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\TestTextCommandParserBase.cs,AssertExecutedCommandAgainstNumericValue,The length of the statement  "            Assert.AreEqual(primaryCommand' args.Now.TextCommands.First()' String.Format("Has not used the '{0}' command"' primaryCommand.PluginCommand));" is 142.
Long Statement,Potato.Core.Test.TextCommands,TestTextCommandParserBase,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\TestTextCommandParserBase.cs,AssertExecutedCommandAgainstTemporalValue,The length of the statement  "            Assert.AreEqual(primaryCommand' args.Now.TextCommands.First()' String.Format("Has not used the '{0}' command"' primaryCommand.PluginCommand));" is 142.
Long Statement,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsCopyPermissions,The length of the statement  "            Assert.AreEqual(firstGroup.Permissions.First(permission => permission.Name == CommandType.VariablesSet.ToString()).Authority' 77);" is 130.
Long Statement,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsCopyPermissions,The length of the statement  "            Assert.AreEqual(firstGroup.Permissions.First(permission => permission.Name == CommandType.VariablesSetA.ToString()).Authority' 88);" is 131.
Long Statement,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsCopyPermissions,The length of the statement  "            Assert.IsNull(secondGroup.Permissions.First(permission => permission.Name == CommandType.VariablesSet.ToString()).Authority);" is 125.
Long Statement,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsCopyPermissions,The length of the statement  "            Assert.IsNull(secondGroup.Permissions.First(permission => permission.Name == CommandType.VariablesSetA.ToString()).Authority);" is 126.
Long Statement,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsCopyPermissions,The length of the statement  "            Assert.AreEqual(secondGroup.Permissions.First(permission => permission.Name == CommandType.VariablesSet.ToString()).Authority' 77);" is 131.
Long Statement,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsCopyPermissions,The length of the statement  "            Assert.AreEqual(secondGroup.Permissions.First(permission => permission.Name == CommandType.VariablesSetA.ToString()).Authority' 88);" is 132.
Long Statement,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetCustomPermission,The length of the statement  "            Assert.AreEqual(security.Groups.Last().Permissions.First(permission => permission.Name == "CustomPermission").Authority' 50);" is 125.
Long Statement,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetPermission,The length of the statement  "            Assert.AreEqual(security.Groups.Last().Permissions.First(permission => permission.Name == CommandType.VariablesSet.ToString()).Authority' 50);" is 142.
Long Statement,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetPermissionDynamicallyCreate,The length of the statement  "            Assert.IsNull(security.Groups.Last().Permissions.FirstOrDefault(permission => permission.Name == CommandType.VariablesSet.ToString()));" is 135.
Long Statement,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetPermissionDynamicallyCreate,The length of the statement  "            Assert.AreEqual(security.Groups.Last().Permissions.First(permission => permission.Name == CommandType.VariablesSet.ToString()).Authority' 50);" is 142.
Long Statement,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetPermissionSettingOwnSetPermissionToNothingDenied,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityGroupSetPermission' 50).SetOrigin(CommandOrigin.Local));" is 147.
Long Statement,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetPermissionSettingOwnSetPermissionToNothingDenied,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityGroupSetPermission' 0).SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 222.
Long Statement,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetPermissionSettingOwnAuthenticateToNothingDenied,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityGroupSetPermission' 50).SetOrigin(CommandOrigin.Local));" is 147.
Long Statement,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetPermissionSettingOwnAuthenticateToNothingDenied,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityAccountAuthenticate' 50).SetOrigin(CommandOrigin.Local));" is 148.
Long Statement,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetPermissionSettingOwnAuthenticateToNothingDenied,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityAccountAuthenticate' 0).SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 223.
Long Statement,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetPermissionTypeConvert,The length of the statement  "            Assert.AreEqual(security.Groups.Last().Permissions.First(permission => permission.Name == CommandType.VariablesSet.ToString()).Authority' 60);" is 142.
Long Statement,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestRemoveGroupByLocalSuccess,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityRemoveGroup("GroupName").SetOrigin(CommandOrigin.Local));" is 120.
Long Statement,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestRemoveOwnGroupFailure,The length of the statement  "            security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityRemoveGroup' 1).SetOrigin(CommandOrigin.Local));" is 139.
Long Statement,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestRemoveOwnGroupFailure,The length of the statement  "            ICommandResult result = security.Tunnel(CommandBuilder.SecurityRemoveGroup("GroupName").SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {" is 172.
Long Statement,Potato.Core.Test.TextCommands.Route,TestRoute,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Route\TestRoute.cs,TestCommandTextSentence,The length of the statement  "            AssertCommandSentencesList(textCommandController' "Command hello' this is a longer sentence!"' command' new List<String>() {" is 124.
Long Statement,Potato.Core.Test.TextCommands.Route,TestRoute,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Route\TestRoute.cs,TestCommandPlayerMap,The length of the statement  "            AssertCommandPlayerListMapList(textCommandController' "Command port valdez"' command' new List<PlayerModel>() ' new List<MapModel>() {" is 134.
Long Statement,Potato.Core.Test.TextCommands.Route,TestRoute,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Route\TestRoute.cs,TestCommandPlayerPlayerText,The length of the statement  "            ICommandResult result = ExecuteTextCommand(textCommandController' "command phogue morpheus for something and something");" is 121.
Long Statement,Potato.Core.Test.TextCommands.Route,TestRoute,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Route\TestRoute.cs,TestCommandPlayerTextPlayer,The length of the statement  "            ICommandResult result = ExecuteTextCommand(textCommandController' "command phogue something' something' something dark side morpheus");" is 135.
Long Statement,Potato.Core.Test.TextCommands.Route,TestRoute,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Route\TestRoute.cs,TestCommandPlayerTextPlayerNumber,The length of the statement  "            ICommandResult result = ExecuteTextCommand(textCommandController' "command phogue something' something' something dark side morpheus 25");" is 138.
Long Statement,Potato.Core.Test.Variables,TestVariablesSetF,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariablesSetF.cs,TestEmptyKeyValue,The length of the statement  "            ICommandResult result = variables.Tunnel(CommandBuilder.VariablesSetF(String.Empty' "value").SetOrigin(CommandOrigin.Local));" is 125.
Long Statement,Potato.Core.Test.Variables,TestVariablesSetF,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariablesSetF.cs,TestInsufficientPermission,The length of the statement  "            ICommandResult result = variables.Tunnel(CommandBuilder.VariablesSetF("key"' "value").SetAuthentication(new CommandAuthenticationModel() {" is 138.
Long Statement,Potato.Core.Test.Variables,TestVariablesSetF,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariablesSetF.cs,TestCommonNameValue,The length of the statement  "            variables.Tunnel(CommandBuilder.VariablesSetF(CommonVariableNames.MaximumProtocolConnections' "value").SetOrigin(CommandOrigin.Local));" is 135.
Long Statement,Potato.Core.Test.Variables,TestVariablesSetF,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariablesSetF.cs,TestCommonNameValue,The length of the statement  "            Assert.AreEqual("value"' variables.FlashVariables.Values.First(v => v.Name == CommonVariableNames.MaximumProtocolConnections.ToString()).ToType<String>());" is 155.
Long Statement,Potato.Core.Test.Variables,TestVariablesSetA,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariablesSetA.cs,TestEmptyKeyValue,The length of the statement  "            ICommandResult result = variables.Tunnel(CommandBuilder.VariablesSetA(String.Empty' "value").SetOrigin(CommandOrigin.Local));" is 125.
Long Statement,Potato.Core.Test.Variables,TestVariablesSetA,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariablesSetA.cs,TestInsufficientPermission,The length of the statement  "            ICommandResult result = variables.Tunnel(CommandBuilder.VariablesSetA("key"' "value").SetAuthentication(new CommandAuthenticationModel() {" is 138.
Long Statement,Potato.Core.Test.Variables,TestVariablesSetA,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariablesSetA.cs,TestCommonNameValue,The length of the statement  "            variables.Tunnel(CommandBuilder.VariablesSetA(CommonVariableNames.MaximumProtocolConnections' "value").SetOrigin(CommandOrigin.Local));" is 135.
Long Statement,Potato.Core.Test.Variables,TestVariablesSetA,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariablesSetA.cs,TestCommonNameValue,The length of the statement  "            Assert.AreEqual("value"' variables.ArchiveVariables.Values.First(v => v.Name == CommonVariableNames.MaximumProtocolConnections.ToString()).ToType<String>());" is 157.
Long Statement,Potato.Core.Test.Variables,TestVariableController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariableController.cs,TestBuildNamespaceVariableKeyEmptyNamespace,The length of the statement  "            Assert.AreEqual("CommandServerEnabled"' VariableModel.NamespaceVariableName(""' CommonVariableNames.CommandServerEnabled));" is 123.
Long Statement,Potato.Core.Test.Variables,TestVariableController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariableController.cs,TestBuildNamespaceVariableKeyWithNamespace,The length of the statement  "            Assert.AreEqual("my.namespace.CommandServerEnabled"' VariableModel.NamespaceVariableName("my.namespace"' CommonVariableNames.CommandServerEnabled));" is 148.
Long Statement,Potato.Core.Test.Variables,TestVariableController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariableController.cs,TestDynamicCreationCommonVariableKey,The length of the statement  "            Assert.IsNull(variables.VolatileVariables.Values.FirstOrDefault(v => v.Name == CommonVariableNames.TextCommandPrivatePrefix.ToString()));" is 137.
Long Statement,Potato.Core.Test.Variables,TestVariableController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariableController.cs,TestDynamicCreationCommonVariableKey,The length of the statement  "            Assert.IsNotNull(variables.VolatileVariables.Values.First(v => v.Name == CommonVariableNames.TextCommandPrivatePrefix.ToString()));" is 131.
Long Statement,Potato.Core.Test.Variables,TestVariableController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariableController.cs,TestLoadConfig,The length of the statement  "            Assert.AreEqual("this is a string"' loadVariables.ArchiveVariables.Values.First(v => v.Name == "KeyToWriteString").ToType<String>());" is 133.
Long Statement,Potato.Core.Test.Variables,TestVariableController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariableController.cs,TestLoadConfig,The length of the statement  "            Assert.AreEqual(10' loadVariables.ArchiveVariables.Values.First(v => v.Name == "MaximumProtocolConnections").ToType<int>());" is 124.
Long Statement,Potato.Core.Test.Variables,TestVariableController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariableController.cs,TestWriteConfig,The length of the statement  "            var commands = loadConfig.RootOf<VariableController>().Children<JObject>().Select(item => item.ToObject<IConfigCommand>(JsonSerialization.Minimal)).ToList();" is 157.
Long Statement,Potato.Core.Test.Variables,TestVariableController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariableController.cs,TestWriteConfig,The length of the statement  "                Assert.IsTrue(new List<String>() { "NameToWriteString"' "NameToWriteInteger"' "MaximumProtocolConnections" }.Contains(command.Command.Parameters[0].First<String>()));" is 166.
Long Statement,Potato.Core.Test.Variables,TestVariableController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariableController.cs,TestWriteConfig,The length of the statement  "                Assert.IsTrue(new List<String>() { "this is a string"' "1"' "10" }.Contains(command.Command.Parameters[1].First<String>()));" is 124.
Long Statement,Potato.Core.Test.Variables,TestVariablesGet,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariablesGet.cs,TestValueCommonName,The length of the statement  "            variables.VolatileVariables.TryAdd(CommonVariableNames.MaximumProtocolConnections.ToString().ToLowerInvariant()' new VariableModel() {" is 134.
Long Statement,Potato.Core.Test.Variables,TestVariablesGet,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariablesGet.cs,TestValueCommonName,The length of the statement  "            var value = variables.Tunnel(CommandBuilder.VariablesGet(CommonVariableNames.MaximumProtocolConnections).SetOrigin(CommandOrigin.Local)).Now.Variables.First().ToType<String>();" is 176.
Magic Number,Potato.Core.Test.Database.Helpers,TestMigrationTrackerHelper,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\Helpers\TestMigrationTrackerHelper.cs,TestMigrationTrackerHelper,The following statement contains a magic number: Migrations = new MigrationController() {                 // Bubble all commands to the database controller                 BubbleObjects = new List<ICoreController>() {                     TestDatabaseController.OpenSqLiteDriver()                 }'                 Migrations = new List<IMigration>() {                     new Migration() {                         Up = () => {                             Tracker = 1;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 0;                              Counter++;                              return true;                         }                     }'                     new Migration() {                         Up = () => {                             Tracker = 2;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 1;                              Counter++;                              return true;                         }                     }'                     new Migration() {                         Up = () => {                             Tracker = 3;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 2;                              Counter++;                              return true;                         }                     }'                     new Migration() {                         Up = () => {                             Tracker = 4;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 3;                              Counter++;                              return true;                         }                     }                 }'                 Settings = new MigrationSettings() {                     // Create a random stream name                     Name = StringExtensions.RandomString(10)'                     // Just use Core as the origin for testing                     Origin = MigrationOrigin.Core                 }             }.Execute() as MigrationController;
Magic Number,Potato.Core.Test.Database.Helpers,TestMigrationTrackerHelper,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\Helpers\TestMigrationTrackerHelper.cs,TestMigrationTrackerHelper,The following statement contains a magic number: Migrations = new MigrationController() {                 // Bubble all commands to the database controller                 BubbleObjects = new List<ICoreController>() {                     TestDatabaseController.OpenSqLiteDriver()                 }'                 Migrations = new List<IMigration>() {                     new Migration() {                         Up = () => {                             Tracker = 1;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 0;                              Counter++;                              return true;                         }                     }'                     new Migration() {                         Up = () => {                             Tracker = 2;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 1;                              Counter++;                              return true;                         }                     }'                     new Migration() {                         Up = () => {                             Tracker = 3;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 2;                              Counter++;                              return true;                         }                     }'                     new Migration() {                         Up = () => {                             Tracker = 4;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 3;                              Counter++;                              return true;                         }                     }                 }'                 Settings = new MigrationSettings() {                     // Create a random stream name                     Name = StringExtensions.RandomString(10)'                     // Just use Core as the origin for testing                     Origin = MigrationOrigin.Core                 }             }.Execute() as MigrationController;
Magic Number,Potato.Core.Test.Database.Helpers,TestMigrationTrackerHelper,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\Helpers\TestMigrationTrackerHelper.cs,TestMigrationTrackerHelper,The following statement contains a magic number: Migrations = new MigrationController() {                 // Bubble all commands to the database controller                 BubbleObjects = new List<ICoreController>() {                     TestDatabaseController.OpenSqLiteDriver()                 }'                 Migrations = new List<IMigration>() {                     new Migration() {                         Up = () => {                             Tracker = 1;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 0;                              Counter++;                              return true;                         }                     }'                     new Migration() {                         Up = () => {                             Tracker = 2;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 1;                              Counter++;                              return true;                         }                     }'                     new Migration() {                         Up = () => {                             Tracker = 3;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 2;                              Counter++;                              return true;                         }                     }'                     new Migration() {                         Up = () => {                             Tracker = 4;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 3;                              Counter++;                              return true;                         }                     }                 }'                 Settings = new MigrationSettings() {                     // Create a random stream name                     Name = StringExtensions.RandomString(10)'                     // Just use Core as the origin for testing                     Origin = MigrationOrigin.Core                 }             }.Execute() as MigrationController;
Magic Number,Potato.Core.Test.Database.Helpers,TestMigrationTrackerHelper,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\Helpers\TestMigrationTrackerHelper.cs,TestMigrationTrackerHelper,The following statement contains a magic number: Migrations = new MigrationController() {                 // Bubble all commands to the database controller                 BubbleObjects = new List<ICoreController>() {                     TestDatabaseController.OpenSqLiteDriver()                 }'                 Migrations = new List<IMigration>() {                     new Migration() {                         Up = () => {                             Tracker = 1;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 0;                              Counter++;                              return true;                         }                     }'                     new Migration() {                         Up = () => {                             Tracker = 2;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 1;                              Counter++;                              return true;                         }                     }'                     new Migration() {                         Up = () => {                             Tracker = 3;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 2;                              Counter++;                              return true;                         }                     }'                     new Migration() {                         Up = () => {                             Tracker = 4;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 3;                              Counter++;                              return true;                         }                     }                 }'                 Settings = new MigrationSettings() {                     // Create a random stream name                     Name = StringExtensions.RandomString(10)'                     // Just use Core as the origin for testing                     Origin = MigrationOrigin.Core                 }             }.Execute() as MigrationController;
Magic Number,Potato.Core.Test.Database.Helpers,TestMigrationTrackerHelper,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\Helpers\TestMigrationTrackerHelper.cs,TestMigrationTrackerHelper,The following statement contains a magic number: Migrations = new MigrationController() {                 // Bubble all commands to the database controller                 BubbleObjects = new List<ICoreController>() {                     TestDatabaseController.OpenSqLiteDriver()                 }'                 Migrations = new List<IMigration>() {                     new Migration() {                         Up = () => {                             Tracker = 1;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 0;                              Counter++;                              return true;                         }                     }'                     new Migration() {                         Up = () => {                             Tracker = 2;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 1;                              Counter++;                              return true;                         }                     }'                     new Migration() {                         Up = () => {                             Tracker = 3;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 2;                              Counter++;                              return true;                         }                     }'                     new Migration() {                         Up = () => {                             Tracker = 4;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 3;                              Counter++;                              return true;                         }                     }                 }'                 Settings = new MigrationSettings() {                     // Create a random stream name                     Name = StringExtensions.RandomString(10)'                     // Just use Core as the origin for testing                     Origin = MigrationOrigin.Core                 }             }.Execute() as MigrationController;
Magic Number,Potato.Core.Test.Database.Helpers,TestMigrationTrackerHelper,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\Helpers\TestMigrationTrackerHelper.cs,TestMigrationTrackerHelper,The following statement contains a magic number: Migrations = new MigrationController() {                 // Bubble all commands to the database controller                 BubbleObjects = new List<ICoreController>() {                     TestDatabaseController.OpenSqLiteDriver()                 }'                 Migrations = new List<IMigration>() {                     new Migration() {                         Up = () => {                             Tracker = 1;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 0;                              Counter++;                              return true;                         }                     }'                     new Migration() {                         Up = () => {                             Tracker = 2;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 1;                              Counter++;                              return true;                         }                     }'                     new Migration() {                         Up = () => {                             Tracker = 3;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 2;                              Counter++;                              return true;                         }                     }'                     new Migration() {                         Up = () => {                             Tracker = 4;                              Counter++;                              return true;                         }'                         Down = () => {                             Tracker = 3;                              Counter++;                              return true;                         }                     }                 }'                 Settings = new MigrationSettings() {                     // Create a random stream name                     Name = StringExtensions.RandomString(10)'                     // Just use Core as the origin for testing                     Origin = MigrationOrigin.Core                 }             }.Execute() as MigrationController;
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteMemoryDatabaseOpenedNamespaced,The following statement contains a magic number: String @namespace = StringExtensions.RandomString(10);
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteQueryMissingNamespaced,The following statement contains a magic number: String databaseNamespace = StringExtensions.RandomString(10);
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteQueryMissingNamespaced,The following statement contains a magic number: String queryNamespace = StringExtensions.RandomString(10);
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQuery,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQuery,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQuery,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQuery,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQuery,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQuery,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQuery,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQuery,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQuery,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQuery,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQuery,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQuery,The following statement contains a magic number: Assert.AreEqual(new JArray() {                 new JObject() {                     new JProperty("Name"' "Zaeed")'                     new JProperty("Score"' 15.0)'                     new JProperty("Rank"' 20.0)'                     new JProperty("Kdr"' 2.0)                 }             }.ToString(Formatting.None)' ((CollectionValue) result.Now.Queries.First()).ToJArray().ToString(Formatting.None));
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQuery,The following statement contains a magic number: Assert.AreEqual(new JArray() {                 new JObject() {                     new JProperty("Name"' "Zaeed")'                     new JProperty("Score"' 15.0)'                     new JProperty("Rank"' 20.0)'                     new JProperty("Kdr"' 2.0)                 }             }.ToString(Formatting.None)' ((CollectionValue) result.Now.Queries.First()).ToJArray().ToString(Formatting.None));
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQuery,The following statement contains a magic number: Assert.AreEqual(new JArray() {                 new JObject() {                     new JProperty("Name"' "Zaeed")'                     new JProperty("Score"' 15.0)'                     new JProperty("Rank"' 20.0)'                     new JProperty("Kdr"' 2.0)                 }             }.ToString(Formatting.None)' ((CollectionValue) result.Now.Queries.First()).ToJArray().ToString(Formatting.None));
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQueryNamespaced,The following statement contains a magic number: String @namespace = StringExtensions.RandomString(10);
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQueryNamespaced,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Content = new List<string>() {                                 @namespace                             }                         }                     }'                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQueryNamespaced,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Content = new List<string>() {                                 @namespace                             }                         }                     }'                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQueryNamespaced,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Content = new List<string>() {                                 @namespace                             }                         }                     }'                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQueryNamespaced,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Content = new List<string>() {                                 @namespace                             }                         }                     }'                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQueryNamespaced,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Content = new List<string>() {                                 @namespace                             }                         }                     }'                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQueryNamespaced,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Content = new List<string>() {                                 @namespace                             }                         }                     }'                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQueryNamespaced,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Content = new List<string>() {                                 @namespace                             }                         }                     }'                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQueryNamespaced,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Content = new List<string>() {                                 @namespace                             }                         }                     }'                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQueryNamespaced,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Content = new List<string>() {                                 @namespace                             }                         }                     }'                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQueryNamespaced,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Content = new List<string>() {                                 @namespace                             }                         }                     }'                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQueryNamespaced,The following statement contains a magic number: database.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.DatabaseQuery'                 Parameters = new List<ICommandParameter>() {                     new CommandParameter() {                         Data = {                             Content = new List<string>() {                                 @namespace                             }                         }                     }'                     new CommandParameter() {                         Data = {                             Queries = new List<IDatabaseObject>() {                                 new Create().Collection("Player").Field("Name"' new StringType()).Field("Score"' new IntegerType()).Field("Rank"' new IntegerType()).Field("Kdr"' new FloatType())'                                 new Save().Collection("Player").Set("Name"' "Phogue").Set("Score"' 100).Set("Rank"' 10).Set("Kdr"' 1)'                                 new Save().Collection("Player").Set("Name"' "Zaeed").Set("Score"' 15).Set("Rank"' 20).Set("Kdr"' 2)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)'                                 new Save().Collection("Player").Set("Name"' "Duplicate").Set("Score"' 1000).Set("Rank"' 100).Set("Kdr"' 4)                             }                         }                     }                 }             });
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQueryNamespaced,The following statement contains a magic number: Assert.AreEqual(new JArray() {                 new JObject() {                     new JProperty("Name"' "Zaeed")'                     new JProperty("Score"' 15.0)'                     new JProperty("Rank"' 20.0)'                     new JProperty("Kdr"' 2.0)                 }             }.ToString(Formatting.None)' ((CollectionValue) result.Now.Queries.First()).ToJArray().ToString(Formatting.None));
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQueryNamespaced,The following statement contains a magic number: Assert.AreEqual(new JArray() {                 new JObject() {                     new JProperty("Name"' "Zaeed")'                     new JProperty("Score"' 15.0)'                     new JProperty("Rank"' 20.0)'                     new JProperty("Kdr"' 2.0)                 }             }.ToString(Formatting.None)' ((CollectionValue) result.Now.Queries.First()).ToJArray().ToString(Formatting.None));
Magic Number,Potato.Core.Test.Database,TestDatabaseController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseController.cs,TestSqLiteSetupAndFindQueryNamespaced,The following statement contains a magic number: Assert.AreEqual(new JArray() {                 new JObject() {                     new JProperty("Name"' "Zaeed")'                     new JProperty("Score"' 15.0)'                     new JProperty("Rank"' 20.0)'                     new JProperty("Kdr"' 2.0)                 }             }.ToString(Formatting.None)' ((CollectionValue) result.Now.Queries.First()).ToJArray().ToString(Formatting.None));
Magic Number,Potato.Core.Test.Database,TestDatabaseMigrationController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseMigrationController.cs,TestMigrationDownFromLatest,The following statement contains a magic number: helper.Migrations.SaveVersion(4);
Magic Number,Potato.Core.Test.Database,TestDatabaseMigrationController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseMigrationController.cs,TestMigrationDownFromLatest,The following statement contains a magic number: Assert.AreEqual(4' helper.Counter);
Magic Number,Potato.Core.Test.Database,TestDatabaseMigrationController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseMigrationController.cs,TestMigrationDownFromLatestToSecond,The following statement contains a magic number: helper.Migrations.SaveVersion(4);
Magic Number,Potato.Core.Test.Database,TestDatabaseMigrationController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseMigrationController.cs,TestMigrationDownFromLatestToSecond,The following statement contains a magic number: helper.Migrations.Down(2);
Magic Number,Potato.Core.Test.Database,TestDatabaseMigrationController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseMigrationController.cs,TestMigrationDownFromLatestToSecond,The following statement contains a magic number: Assert.AreEqual(2' helper.Counter);
Magic Number,Potato.Core.Test.Database,TestDatabaseMigrationController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseMigrationController.cs,TestMigrationDownFromLatestToSecond,The following statement contains a magic number: Assert.AreEqual(2' helper.Tracker);
Magic Number,Potato.Core.Test.Database,TestDatabaseMigrationController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseMigrationController.cs,TestMigrationDownFromSecond,The following statement contains a magic number: helper.Migrations.SaveVersion(2);
Magic Number,Potato.Core.Test.Database,TestDatabaseMigrationController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseMigrationController.cs,TestMigrationDownFromSecond,The following statement contains a magic number: Assert.AreEqual(2' helper.Counter);
Magic Number,Potato.Core.Test.Database,TestDatabaseMigrationController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseMigrationController.cs,TestMigrationUpFromLatest,The following statement contains a magic number: helper.Migrations.SaveVersion(4);
Magic Number,Potato.Core.Test.Database,TestDatabaseMigrationController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseMigrationController.cs,TestMigrationUpFromNothing,The following statement contains a magic number: Assert.AreEqual(4' helper.Counter);
Magic Number,Potato.Core.Test.Database,TestDatabaseMigrationController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseMigrationController.cs,TestMigrationUpFromNothing,The following statement contains a magic number: Assert.AreEqual(4' helper.Tracker);
Magic Number,Potato.Core.Test.Database,TestDatabaseMigrationController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseMigrationController.cs,TestMigrationUpFromNothingButCanceled,The following statement contains a magic number: var migrations = new MigrationController() {                 // Bubble all commands to the database controller                 BubbleObjects = new List<ICoreController>() {                     TestDatabaseController.OpenSqLiteDriver()                 }'                 Migrations = new List<IMigration>() {                     new Migration() {                         Up = () => {                             counter++;                              return false;                         }'                         Down = () => {                             counter++;                              return false;                         }                     }                 }'                 Settings = new MigrationSettings() {                     // Create a random stream name                     Name = StringExtensions.RandomString(10)'                     // Just use Core as the origin for testing                     Origin = MigrationOrigin.Core                 }             };
Magic Number,Potato.Core.Test.Database,TestDatabaseMigrationController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseMigrationController.cs,TestMigrationUpFromNothingToSecond,The following statement contains a magic number: helper.Migrations.Up(2);
Magic Number,Potato.Core.Test.Database,TestDatabaseMigrationController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseMigrationController.cs,TestMigrationUpFromNothingToSecond,The following statement contains a magic number: Assert.AreEqual(2' helper.Counter);
Magic Number,Potato.Core.Test.Database,TestDatabaseMigrationController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseMigrationController.cs,TestMigrationUpFromNothingToSecond,The following statement contains a magic number: Assert.AreEqual(2' helper.Tracker);
Magic Number,Potato.Core.Test.Database,TestDatabaseMigrationController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseMigrationController.cs,TestMigrationUpFromSecond,The following statement contains a magic number: helper.Migrations.SaveVersion(2);
Magic Number,Potato.Core.Test.Database,TestDatabaseMigrationController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseMigrationController.cs,TestMigrationUpFromSecond,The following statement contains a magic number: Assert.AreEqual(2' helper.Counter);
Magic Number,Potato.Core.Test.Database,TestDatabaseMigrationController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Database\TestDatabaseMigrationController.cs,TestMigrationUpFromSecond,The following statement contains a magic number: Assert.AreEqual(4' helper.Tracker);
Magic Number,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestSuccess,The following statement contains a magic number: pushEvents.Shared.Security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.EventsEstablishJsonStream' 5).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestSuccessEndPointAdded,The following statement contains a magic number: pushEvents.Tunnel(CommandBuilder.EventsEstablishJsonStream("id"' "http://localhost/"' "key"' 10' new List<String>() {                 "EventName"             }).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestSuccessEndPointAdded,The following statement contains a magic number: Assert.AreEqual(10' pushEvents.EndPoints.First().Value.Interval);
Magic Number,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestSuccessEndPointAddedWithInclusiveList,The following statement contains a magic number: pushEvents.Tunnel(CommandBuilder.EventsEstablishJsonStream("id"' "http://localhost/"' "key"' 10' new List<String>() {                 "EventOne"'                 "EventTwo"             }).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestSuccessEndPointAddedWithInclusiveList,The following statement contains a magic number: Assert.AreEqual(10' pushEvents.EndPoints.First().Value.Interval);
Magic Number,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestSuccessTwoEndPointsEstablished,The following statement contains a magic number: pushEvents.Tunnel(CommandBuilder.EventsEstablishJsonStream("id1"' "http://localhost/"' "key1"' 10' new List<String>() {                 "EventName1"             }).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestSuccessTwoEndPointsEstablished,The following statement contains a magic number: pushEvents.Tunnel(CommandBuilder.EventsEstablishJsonStream("id2"' "http://lolcatshost/"' "key2"' 20' new List<String>() {                 "EventName2"             }).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestSuccessTwoEndPointsEstablished,The following statement contains a magic number: Assert.AreEqual(2' pushEvents.EndPoints.Count);
Magic Number,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestSuccessTwoEndPointsSaved,The following statement contains a magic number: pushEvents.Tunnel(CommandBuilder.EventsEstablishJsonStream("id1"' "http://localhost/"' "key1"' 10' new List<String>() {                 "EventName1"             }).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestSuccessTwoEndPointsSaved,The following statement contains a magic number: pushEvents.Tunnel(CommandBuilder.EventsEstablishJsonStream("id2"' "http://lolcatshost/"' "key2"' 20' new List<String>() {                 "EventName2"             }).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestSuccessTwoEndPointsSaved,The following statement contains a magic number: Assert.AreEqual(2' pushEvents.Shared.Variables.FlashVariables.First(archive => archive.Key.ToLower() == CommonVariableNames.EventsPushConfigGroups.ToString().ToLower()).Value.ToList<String>().Count);
Magic Number,Potato.Core.Test.Events.TestEventsController,TestEventsEstablishJsonStream,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEventsController\TestEventsEstablishJsonStream.cs,TestSuccessPreviouslySetupWillReflash,The following statement contains a magic number: pushEvents.Tunnel(CommandBuilder.EventsEstablishJsonStream("id1"' "http://localhost/"' "key1"' 10' new List<String>() {                 "EventName1"             }).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Packages.TestPackagesController,PackagesRemoveRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesRemoveRepository.cs,TestResultSuccessEventListed,The following statement contains a magic number: Assert.IsTrue(wait.WaitOne(5000));
Magic Number,Potato.Core.Test.Packages.TestPackagesController,PackagesRemoveRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesRemoveRepository.cs,TestSuccessOneRepositorySaved,The following statement contains a magic number: Assert.AreEqual(2' packages.Cache.Repositories.Count);
Magic Number,Potato.Core.Test.Packages.TestPackagesController,PackagesAppendRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesAppendRepository.cs,TestResultSuccessEventListed,The following statement contains a magic number: Assert.IsTrue(wait.WaitOne(5000));
Magic Number,Potato.Core.Test.Packages.TestPackagesController,PackagesAppendRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesAppendRepository.cs,TestSingleRepositorySetup,The following statement contains a magic number: Assert.AreEqual(2' packages.Cache.Repositories.Count);
Magic Number,Potato.Core.Test.Packages.TestPackagesController,PackagesAppendRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesAppendRepository.cs,TestDoubleRepositorySetup,The following statement contains a magic number: Assert.AreEqual(2' packages.Cache.Repositories.Count);
Magic Number,Potato.Core.Test.Packages.TestPackagesController,PackagesAppendRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesAppendRepository.cs,TestSuccessTwoUniqueRepositoriesAdded,The following statement contains a magic number: Assert.AreEqual(3' packages.Cache.Repositories.Count);
Magic Number,Potato.Core.Test.Packages.TestPackagesController,PackagesAppendRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesAppendRepository.cs,TestSuccessTwoRepositoriesSaved,The following statement contains a magic number: Assert.AreEqual(3' packages.Cache.Repositories.Count);
Magic Number,Potato.Core.Test.Packages.TestPackagesController,PackagesAppendRepository,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestPackagesController\PackagesAppendRepository.cs,TestSuccessTwoRepositoriesSaved,The following statement contains a magic number: Assert.AreEqual(2' packages.Shared.Variables.ArchiveVariables.First(archive => archive.Key.ToLower() == CommonVariableNames.PackagesConfigGroups.ToString().ToLower()).Value.ToList<String>().Count);
Magic Number,Potato.Core.Test.TestPotato,TestPotatoPing,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoPing.cs,TestResultSuccessUptimeReturned,The following statement contains a magic number: PotatoController instance = new PotatoController() {                 InstantiatedStamp = DateTime.Now.AddSeconds(-5)             };
Magic Number,Potato.Core.Test.TestPotato,TestPotatoPing,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoPing.cs,TestResultSuccessUptimeReturned,The following statement contains a magic number: Assert.GreaterOrEqual(int.Parse(result.Now.Content.First())' 5000);
Magic Number,Potato.Core.Test.TestPotato,TestPotatoRemoveConnection,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoRemoveConnection.cs,TestPotatoRemoveConnectionByGuidSuccess,The following statement contains a magic number: instance.Connections.Add(new ConnectionController() {                 ConnectionModel = new ConnectionModel() {                     ProtocolType = new ProtocolType() {                         Name = "Mock Protocol"'                         Provider = "Myrcon"'                         Type = "MockProtocol"                     }'                     Hostname = "1.1.1.1"'                     Port = 27516                 }             });
Magic Number,Potato.Core.Test.TestPotato,TestPotatoRemoveConnection,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoRemoveConnection.cs,TestPotatoRemoveConnectionDoesNotExist,The following statement contains a magic number: ICommandResult result = instance.Tunnel(CommandBuilder.PotatoRemoveConnection("Myrcon"' "MockProtocol"' "1.1.1.1"' 27516).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.TestPotato,TestPotatoRemoveConnection,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoRemoveConnection.cs,TestPotatoRemoveConnectionInsufficientPermissions,The following statement contains a magic number: ICommandResult result = instance.Tunnel(CommandBuilder.PotatoRemoveConnection("Myrcon"' "MockProtocol"' "1.1.1.1"' 27516).SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {                 Username = "Phogue"             }));
Magic Number,Potato.Core.Test.TestPotato,TestPotatoRemoveConnection,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoRemoveConnection.cs,TestPotatoRemoveConnectionByDetailsSuccess,The following statement contains a magic number: instance.Connections.Add(new ConnectionController() {                 ConnectionModel = new ConnectionModel() {                     ProtocolType = new ProtocolType() {                         Name = "Mock Protocol"'                         Provider = "Myrcon"'                         Type = "MockProtocol"                     }'                     Hostname = "1.1.1.1"'                     Port = 27516                 }             });
Magic Number,Potato.Core.Test.TestPotato,TestPotatoRemoveConnection,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoRemoveConnection.cs,TestPotatoRemoveConnectionByDetailsSuccess,The following statement contains a magic number: ICommandResult result = instance.Tunnel(CommandBuilder.PotatoRemoveConnection("Myrcon"' "MockProtocol"' "1.1.1.1"' 27516).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.TestPotato,TestPotato,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotato.cs,TestPotatoCommandScopeNoScope,The following statement contains a magic number: instance.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.PotatoAddConnection'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     "Myrcon"'                     "MockProtocol"'                     "1.1.1.1"'                     27516'                     "password"'                     ""                 })             });
Magic Number,Potato.Core.Test.TestPotato,TestPotato,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotato.cs,TestPotatoCommandScopeWithConnectionScope,The following statement contains a magic number: instance.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.PotatoAddConnection'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     "Myrcon"'                     "MockProtocol"'                     "1.1.1.1"'                     27516'                     "password"'                     ""                 })             });
Magic Number,Potato.Core.Test.TestPotato,TestPotato,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotato.cs,TestPotatoConfigWritten,The following statement contains a magic number: instance.Connections.Add(new ConnectionController() {                 ConnectionModel = new ConnectionModel() {                     ProtocolType = new ProtocolType() {                         Name = "Mock Protocol"'                         Provider = "Myrcon"'                         Type = "MockProtocol"                     }'                     Hostname = "1.1.1.1"'                     Port = 27516'                     Arguments = ""'                     Password = "password"                 }             });
Magic Number,Potato.Core.Test.TestPotato,TestPotato,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotato.cs,TestPotatoConfigWritten,The following statement contains a magic number: Assert.AreEqual("1.1.1.1"' configCommand.Command.Parameters[2].First<String>());
Magic Number,Potato.Core.Test.TestPotato,TestPotato,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotato.cs,TestPotatoConfigWritten,The following statement contains a magic number: Assert.AreEqual("27516"' configCommand.Command.Parameters[3].First<String>());
Magic Number,Potato.Core.Test.TestPotato,TestPotato,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotato.cs,TestPotatoConfigWritten,The following statement contains a magic number: Assert.AreEqual("password"' configCommand.Command.Parameters[4].First<String>());
Magic Number,Potato.Core.Test.TestPotato,TestPotato,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotato.cs,TestPotatoConfigWritten,The following statement contains a magic number: Assert.AreEqual(""' configCommand.Command.Parameters[5].First<String>());
Magic Number,Potato.Core.Test.TestPotato,TestPotato,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotato.cs,TestPotatoDispose,The following statement contains a magic number: instance.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.PotatoAddConnection'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     "MockProtocol"'                     "1.1.1.1"'                     27516'                     "password"'                     ""                 })             });
Magic Number,Potato.Core.Test.TestPotato,TestPotato,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotato.cs,TestPotatoDispose,The following statement contains a magic number: Assert.IsTrue(requestWait.WaitOne(60000));
Magic Number,Potato.Core.Test.TestPotato,TestPotatoAddConnection,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoAddConnection.cs,TestPotatoAddConnectionDuplicate,The following statement contains a magic number: instance.Connections.Add(new ConnectionController() {                 ConnectionModel = new ConnectionModel() {                     ProtocolType = new ProtocolType() {                         Name = "Mock Protocol"'                         Provider = "Myrcon"'                         Type = "MockProtocol"                     }'                     Hostname = "1.1.1.1"'                     Port = 27516                 }             });
Magic Number,Potato.Core.Test.TestPotato,TestPotatoAddConnection,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoAddConnection.cs,TestPotatoAddConnectionDuplicate,The following statement contains a magic number: ICommandResult result = instance.Tunnel(CommandBuilder.PotatoAddConnection("Myrcon"' "MockProtocol"' "1.1.1.1"' 27516' "password"' "").SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.TestPotato,TestPotatoAddConnection,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoAddConnection.cs,TestPotatoAddConnectionExceedMaximumConnectionLimit,The following statement contains a magic number: ICommandResult result = instance.Tunnel(CommandBuilder.PotatoAddConnection("Myrcon"' "MockProtocol"' "1.1.1.1"' 27516' "password"' "").SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.TestPotato,TestPotatoAddConnection,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoAddConnection.cs,TestPotatoAddConnectionProtocolTypeDoesNotExist,The following statement contains a magic number: ICommandResult result = instance.Tunnel(CommandBuilder.PotatoAddConnection("Myrcon"' "la la la"' "1.1.1.1"' 27516' "password"' "").SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.TestPotato,TestPotatoAddConnection,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoAddConnection.cs,TestPotatoAddConnectionInsufficientPermissions,The following statement contains a magic number: ICommandResult result = instance.Tunnel(CommandBuilder.PotatoAddConnection("Myrcon"' "MockProtocol"' "1.1.1.1"' 27516' "password"' "").SetOrigin(CommandOrigin.Remote).SetAuthentication(new CommandAuthenticationModel() {                 Username = "Phogue"             }));
Magic Number,Potato.Core.Test.TestPotato,TestPotatoAddConnection,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TestPotato\TestPotatoAddConnection.cs,TestPotatoAddConnectionSuccess,The following statement contains a magic number: ICommandResult result = instance.Tunnel(CommandBuilder.PotatoAddConnection("Myrcon"' "MockProtocol"' "1.1.1.1"' 27516' "password"' "").SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Events,TestEvents,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestEvents.cs,TestEventsLoggedEventFired,The following statement contains a magic number: Assert.IsTrue(requestWait.WaitOne(60000));
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerMultipleEndPointsRandomVariableAssignment,The following statement contains a magic number: String pushConfigGroupNameOne = StringExtensions.RandomString(10);
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerMultipleEndPointsRandomVariableAssignment,The following statement contains a magic number: String pushConfigGroupNameTwo = StringExtensions.RandomString(10);
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerMultipleEndPointsRandomVariableAssignment,The following statement contains a magic number: var groupVariables = new Dictionary<String' Object>() {                 {CommonVariableNames.EventsPushConfigGroups.ToString()' new List<String>() {                     pushConfigGroupNameOne'                     pushConfigGroupNameTwo                 }}'                 {VariableModel.NamespaceVariableName(String.Empty' CommonVariableNames.EventsPushUri)' "http://localhost/blank.php"}'                 {VariableModel.NamespaceVariableName(String.Empty' CommonVariableNames.EventPushIntervalSeconds)' 10}'                 {VariableModel.NamespaceVariableName(pushConfigGroupNameOne' CommonVariableNames.EventsPushUri)' "http://localhost/one.php"}'                 {VariableModel.NamespaceVariableName(pushConfigGroupNameOne' CommonVariableNames.EventPushIntervalSeconds)' 20}'                 {VariableModel.NamespaceVariableName(pushConfigGroupNameTwo' CommonVariableNames.EventsPushUri)' "http://localhost/two.php"}'                 {VariableModel.NamespaceVariableName(pushConfigGroupNameTwo' CommonVariableNames.EventPushIntervalSeconds)' 30}             };
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerMultipleEndPointsRandomVariableAssignment,The following statement contains a magic number: var groupVariables = new Dictionary<String' Object>() {                 {CommonVariableNames.EventsPushConfigGroups.ToString()' new List<String>() {                     pushConfigGroupNameOne'                     pushConfigGroupNameTwo                 }}'                 {VariableModel.NamespaceVariableName(String.Empty' CommonVariableNames.EventsPushUri)' "http://localhost/blank.php"}'                 {VariableModel.NamespaceVariableName(String.Empty' CommonVariableNames.EventPushIntervalSeconds)' 10}'                 {VariableModel.NamespaceVariableName(pushConfigGroupNameOne' CommonVariableNames.EventsPushUri)' "http://localhost/one.php"}'                 {VariableModel.NamespaceVariableName(pushConfigGroupNameOne' CommonVariableNames.EventPushIntervalSeconds)' 20}'                 {VariableModel.NamespaceVariableName(pushConfigGroupNameTwo' CommonVariableNames.EventsPushUri)' "http://localhost/two.php"}'                 {VariableModel.NamespaceVariableName(pushConfigGroupNameTwo' CommonVariableNames.EventPushIntervalSeconds)' 30}             };
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerMultipleEndPointsRandomVariableAssignment,The following statement contains a magic number: var groupVariables = new Dictionary<String' Object>() {                 {CommonVariableNames.EventsPushConfigGroups.ToString()' new List<String>() {                     pushConfigGroupNameOne'                     pushConfigGroupNameTwo                 }}'                 {VariableModel.NamespaceVariableName(String.Empty' CommonVariableNames.EventsPushUri)' "http://localhost/blank.php"}'                 {VariableModel.NamespaceVariableName(String.Empty' CommonVariableNames.EventPushIntervalSeconds)' 10}'                 {VariableModel.NamespaceVariableName(pushConfigGroupNameOne' CommonVariableNames.EventsPushUri)' "http://localhost/one.php"}'                 {VariableModel.NamespaceVariableName(pushConfigGroupNameOne' CommonVariableNames.EventPushIntervalSeconds)' 20}'                 {VariableModel.NamespaceVariableName(pushConfigGroupNameTwo' CommonVariableNames.EventsPushUri)' "http://localhost/two.php"}'                 {VariableModel.NamespaceVariableName(pushConfigGroupNameTwo' CommonVariableNames.EventPushIntervalSeconds)' 30}             };
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerMultipleEndPointsRandomVariableAssignment,The following statement contains a magic number: Assert.AreEqual(10' pushEvents.EndPoints[String.Empty].Interval);
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerMultipleEndPointsRandomVariableAssignment,The following statement contains a magic number: Assert.AreEqual(20' pushEvents.EndPoints[pushConfigGroupNameOne].Interval);
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerMultipleEndPointsRandomVariableAssignment,The following statement contains a magic number: Assert.AreEqual(30' pushEvents.EndPoints[pushConfigGroupNameTwo].Interval);
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerDispose,The following statement contains a magic number: variables.Set(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.VariablesSet             }' CommonVariableNames.EventPushIntervalSeconds' 10);
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerDispose,The following statement contains a magic number: Assert.AreEqual(10' pushEvents.EndPoints[String.Empty].Interval);
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerIntervalTickedEventsPushed,The following statement contains a magic number: Assert.IsTrue(requestWait.WaitOne(5000));
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerMultipleEndPointsRandomVariableAssignmentA,The following statement contains a magic number: TestEventsPushControllerMultipleEndPointsRandomVariableAssignment(100);
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerMultipleEndPointsRandomVariableAssignmentB,The following statement contains a magic number: TestEventsPushControllerMultipleEndPointsRandomVariableAssignment(98279872);
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerMultipleEndPointsRandomVariableAssignmentC,The following statement contains a magic number: TestEventsPushControllerMultipleEndPointsRandomVariableAssignment(5674353);
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerNamespacedSingleEndPointBackwardSetting,The following statement contains a magic number: String pushConfigGroupName = StringExtensions.RandomString(10);
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerNamespacedSingleEndPointBackwardSetting,The following statement contains a magic number: variables.Set(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.VariablesSet             }' VariableModel.NamespaceVariableName(pushConfigGroupName' CommonVariableNames.EventPushIntervalSeconds)' 20);
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerNamespacedSingleEndPointBackwardSetting,The following statement contains a magic number: Assert.AreEqual(20' pushEvents.EndPoints[pushConfigGroupName].Interval);
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerNamespacedSingleEndPointForwardSetting,The following statement contains a magic number: String pushConfigGroupName = StringExtensions.RandomString(10);
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerNamespacedSingleEndPointForwardSetting,The following statement contains a magic number: variables.Set(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.VariablesSet             }' VariableModel.NamespaceVariableName(pushConfigGroupName' CommonVariableNames.EventPushIntervalSeconds)' 20);
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerNamespacedSingleEndPointForwardSetting,The following statement contains a magic number: Assert.AreEqual(20' pushEvents.EndPoints[pushConfigGroupName].Interval);
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestVariablesSetPriorToPushEventsControllerExecution,The following statement contains a magic number: String pushConfigGroupName = StringExtensions.RandomString(10);
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestVariablesSetPriorToPushEventsControllerExecution,The following statement contains a magic number: Assert.AreEqual(20' pushEvents.EndPoints[pushConfigGroupName].Interval);
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerSingleEndPointNoNamespace,The following statement contains a magic number: variables.Set(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.VariablesSet             }' CommonVariableNames.EventPushIntervalSeconds' 20);
Magic Number,Potato.Core.Test.Events,TestPushEventsController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsController.cs,TestEventsPushControllerSingleEndPointNoNamespace,The following statement contains a magic number: Assert.AreEqual(20' pushEvents.EndPoints[String.Empty].Interval);
Magic Number,Potato.Core.Test.Events,TestGenericEventData,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestGenericEventData.cs,TestGameEventObjectConversion,The following statement contains a magic number: var gameEventData = new ProtocolEventData() {                 Bans = new List<BanModel>() {                     new BanModel() {                         Now = {                             Content = new List<String>() {                                 "I should remove this property"                             }                         }                     }                 }'                 Chats = new List<ChatModel>() {                     new ChatModel() {                         Now = {                             Content = new List<String>() {                                 "I should remove this property"                             }                         }                     }                 }'                 Kicks = new List<KickModel>() {                     new KickModel() {                         Scope = {                             Content = new List<String>() {                                 "I should remove this property"                             }                         }                     }                 }'                 Kills = new List<KillModel>() {                     new KillModel() {                         Scope = {                             Content = new List<String>() {                                 "I should remove this property"                             }                         }                     }                 }'                 Players = new List<PlayerModel>() {                     new PlayerModel() {                         Name = "Phogue"'                         Ping = 100                     }                 }'                 Spawns = new List<SpawnModel>() {                     new SpawnModel() {                         Player = new PlayerModel() {                             Name = "Phogue"'                             Ping = 100                         }                     }                 }             };
Magic Number,Potato.Core.Test.Events,TestGenericEventData,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestGenericEventData.cs,TestGameEventObjectConversion,The following statement contains a magic number: var gameEventData = new ProtocolEventData() {                 Bans = new List<BanModel>() {                     new BanModel() {                         Now = {                             Content = new List<String>() {                                 "I should remove this property"                             }                         }                     }                 }'                 Chats = new List<ChatModel>() {                     new ChatModel() {                         Now = {                             Content = new List<String>() {                                 "I should remove this property"                             }                         }                     }                 }'                 Kicks = new List<KickModel>() {                     new KickModel() {                         Scope = {                             Content = new List<String>() {                                 "I should remove this property"                             }                         }                     }                 }'                 Kills = new List<KillModel>() {                     new KillModel() {                         Scope = {                             Content = new List<String>() {                                 "I should remove this property"                             }                         }                     }                 }'                 Players = new List<PlayerModel>() {                     new PlayerModel() {                         Name = "Phogue"'                         Ping = 100                     }                 }'                 Spawns = new List<SpawnModel>() {                     new SpawnModel() {                         Player = new PlayerModel() {                             Name = "Phogue"'                             Ping = 100                         }                     }                 }             };
Magic Number,Potato.Core.Test.Events,TestGenericEventData,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestGenericEventData.cs,TestGameEventObjectConversion,The following statement contains a magic number: Assert.AreEqual(100' genericEventData.Players.First().Ping);
Magic Number,Potato.Core.Test.Events,TestGenericEventData,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestGenericEventData.cs,TestGameEventObjectConversion,The following statement contains a magic number: Assert.AreEqual(100' genericEventData.Spawns.First().Player.Ping);
Magic Number,Potato.Core.Test.Events,TestPushEventsEndPoint,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Events\TestPushEventsEndPoint.cs,TestPushEventsRequestFailCleanupOccurs,The following statement contains a magic number: Assert.IsTrue(requestWait.WaitOne(10000));
Magic Number,Potato.Core.Test.Packages,TestRepositoryCache,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Packages\TestRepositoryCache.cs,TestLastCacheBuildStampSet,The following statement contains a magic number: Assert.Greater(cache.Repositories.First(repository => repository.IsOrphanage == false).CacheStamp' DateTime.Now.AddSeconds(-5));
Magic Number,Potato.Core.Test.Protocols,TestProtocolIsolation,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Protocols\TestProtocolIsolation.cs,TestIsolationSuccessOnLoad,The following statement contains a magic number: ICommandResult result = instance.Tunnel(CommandBuilder.PotatoAddConnection(protocol.Provider' protocol.Type' "1.1.1.1"' 27516' "password"' "").SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Remote.TestCommandServerController,TestConfigure,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCommandServerController\TestConfigure.cs,TestVariableEnabledPortThenEnabled,The following statement contains a magic number: commandServer.Shared.Variables.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.VariablesSet'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     CommonVariableNames.CommandServerPort'                     3100                 })             });
Magic Number,Potato.Core.Test.Remote.TestCommandServerController,TestConfigure,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCommandServerController\TestConfigure.cs,TestVariableEnabledEnabledThenPort,The following statement contains a magic number: commandServer.Shared.Variables.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.VariablesSet'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     CommonVariableNames.CommandServerPort'                     3200                 })             });
Magic Number,Potato.Core.Test.Remote.TestCommandServerController,TestConfigure,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCommandServerController\TestConfigure.cs,TestVariableDisabled,The following statement contains a magic number: commandServer.Shared.Variables.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.VariablesSet'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     CommonVariableNames.CommandServerPort'                     3300                 })             });
Magic Number,Potato.Core.Test.Remote.TestCommandServerController,TestConfigure,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCommandServerController\TestConfigure.cs,TestEventLoggedOnConfiguredEnabled,The following statement contains a magic number: commandServer.Shared.Variables.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.VariablesSet'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     CommonVariableNames.CommandServerPort'                     3400                 })             });
Magic Number,Potato.Core.Test.Remote.TestCommandServerController,TestConfigure,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Remote\TestCommandServerController\TestConfigure.cs,TestEventLoggedOnConfiguredDisabled,The following statement contains a magic number: commandServer.Shared.Variables.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.VariablesSet'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     CommonVariableNames.CommandServerPort'                     3500                 })             });
Magic Number,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestExpiredToken,The following statement contains a magic number: ICommandResult result = security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.NewGuid()' "TokenHash"' DateTime.Now.AddDays(-3)).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Account,TestSecurityAccountAppendAccessToken,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAppendAccessToken.cs,TestAddingTooManyTokensCullsTheTokenList,The following statement contains a magic number: Assert.AreEqual(5' security.Groups.SelectMany(group => @group.Accounts).First(account => account.Username == "Phogue").AccessTokens.Count);
Magic Number,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationSuccess,The following statement contains a magic number: String generatedAuthenticatePassword = StringExtensions.RandomString(10);
Magic Number,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationSuccess,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityAccountAuthenticate' 50).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAccountGroupReturnedInResult,The following statement contains a magic number: String generatedAuthenticatePassword = StringExtensions.RandomString(10);
Magic Number,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAccountGroupReturnedInResult,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityAccountAuthenticate' 50).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAccountDoesNotExist,The following statement contains a magic number: String generatedAuthenticatePassword = StringExtensions.RandomString(10);
Magic Number,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestIncorrectPassword,The following statement contains a magic number: String generatedSetPassword = StringExtensions.RandomString(10);
Magic Number,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestIncorrectPassword,The following statement contains a magic number: String generatedAuthenticatePassword = StringExtensions.RandomString(10);
Magic Number,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationSuccessTokenGenerated,The following statement contains a magic number: String generatedAuthenticatePassword = StringExtensions.RandomString(10);
Magic Number,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationSuccessTokenGenerated,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityAccountAuthenticate' 50).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationSuccessCanThenAuthenticateWithToken,The following statement contains a magic number: String generatedAuthenticatePassword = StringExtensions.RandomString(10);
Magic Number,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationSuccessCanThenAuthenticateWithToken,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityAccountAuthenticate' 50).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationSuccessCanThenAuthenticateWithToken,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityAccountAuthenticateToken' 50).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationFailureWhenAuthenticateWithTokenDifferentIdentifier,The following statement contains a magic number: String generatedAuthenticatePassword = StringExtensions.RandomString(10);
Magic Number,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationFailureWhenAuthenticateWithTokenDifferentIdentifier,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityAccountAuthenticate' 50).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Account,TestSecurityAccountAuthenticate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountAuthenticate.cs,TestAuthenticationFailureWhenAuthenticateWithTokenDifferentIdentifier,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityAccountAuthenticateToken' 50).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Account,TestSecurityAccountSetPassword,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountSetPassword.cs,TestSuccess,The following statement contains a magic number: String generatedPassword = StringExtensions.RandomString(10);
Magic Number,Potato.Core.Test.Security.Account,TestSecurityAccountSetPasswordHash,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Account\TestSecurityAccountSetPasswordHash.cs,TestSetSuccess,The following statement contains a magic number: String generatedPassword = StringExtensions.RandomString(10);
Magic Number,Potato.Core.Test.Security.Permission,TestSecuritySetPredefinedAdministratorsPermissions,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecuritySetPredefinedAdministratorsPermissions.cs,TestPermissionsSet,The following statement contains a magic number: group.Permissions.ForEach(item => Assert.AreEqual(2' item.Authority));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsLessAuthorityByAccountUsername,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsLessAuthorityByAccountUsername,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("SecondGroupName"' CommandType.VariablesSet' 50).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsLessAuthorityByPlayerDetails,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsLessAuthorityByPlayerDetails,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("SecondGroupName"' CommandType.VariablesSet' 50).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByPlayerDetailsAsGuest,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsLessAuthorityByPlayerDetailsAsGuest,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsLessAuthorityByPlayerDetailsAsGuest,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("Guest"' CommandType.VariablesSet' 50).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByPlayerDetailsAsGuest,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByPlayerDetailsAsGuest,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("Guest"' CommandType.VariablesSet' 200).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByAccountUsername,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByAccountUsername,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("SecondGroupName"' CommandType.VariablesSet' 50).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByAccountUsernameCaseInsensitive,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByAccountUsernameCaseInsensitive,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("SecondGroupName"' CommandType.VariablesSet' 50).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByPlayerDetails,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsMoreAuthorityByPlayerDetails,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("SecondGroupName"' CommandType.VariablesSet' 50).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByAccountUsername,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByAccountUsername,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("SecondGroupName"' CommandType.VariablesSet' 50).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByAccountUsernameCaseInsensitive,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByAccountUsernameCaseInsensitive,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("SecondGroupName"' CommandType.VariablesSet' 50).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByPlayerDetails,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsNoAuthorityByPlayerDetails,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("SecondGroupName"' CommandType.VariablesSet' 50).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsPluginOrigin,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsUnknownOrigin,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("FirstGroupName"' CommandType.VariablesSet' 100).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Permission,TestSecurityQueryPermission,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Permission\TestSecurityQueryPermission.cs,TestDetailsUnknownOrigin,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("SecondGroupName"' CommandType.VariablesSet' 50).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security,TestPoke,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestPoke.cs,TestNoneExpiredNoneRemoved,The following statement contains a magic number: Assert.AreEqual(2' security.Groups.First(group => group.Name == "GroupName").Accounts.First().AccessTokens.Count);
Magic Number,Potato.Core.Test.Security,TestPoke,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestPoke.cs,TestOneExpiredOneRemoved,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.NewGuid()' "Token Hash One"' DateTime.Now.AddDays(-3)).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security,TestPoke,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestPoke.cs,TestTwoExpiredTwoRemoved,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.NewGuid()' "Token Hash One"' DateTime.Now.AddDays(-3)).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security,TestPoke,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestPoke.cs,TestTwoExpiredTwoRemoved,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityAccountAppendAccessToken("Phogue"' Guid.NewGuid()' "Token Hash Two"' DateTime.Now.AddDays(-3)).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityDispose,The following statement contains a magic number: security.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.SecurityGroupSetPermission'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     "GroupName"'                     CommandType.VariablesSet'                     77                 })             });
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityLoadConfig,The following statement contains a magic number: saveSecurity.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.SecurityGroupSetPermission'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     "GroupName"'                     "CustomPermission"'                     22                 })             });
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityLoadConfig,The following statement contains a magic number: saveSecurity.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.SecurityGroupSetPermission'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     "GroupName"'                     CommandType.VariablesSet'                     77                 })             });
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityLoadConfig,The following statement contains a magic number: saveSecurity.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.SecurityGroupSetPermission'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     "GroupName"'                     CommandType.VariablesSetA'                     88                 })             });
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityLoadConfig,The following statement contains a magic number: Assert.AreEqual(22' lastGroup.Permissions.First(permission => permission.Name == "CustomPermission").Authority);
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityLoadConfig,The following statement contains a magic number: Assert.AreEqual(77' lastGroup.Permissions.First(permission => permission.Name == CommandType.VariablesSet.ToString()).Authority);
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityLoadConfig,The following statement contains a magic number: Assert.AreEqual(88' lastGroup.Permissions.First(permission => permission.Name == CommandType.VariablesSetA.ToString()).Authority);
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: security.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.SecurityGroupSetPermission'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     "GroupName"'                     "CustomPermission"'                     22                 })             });
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: security.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.SecurityGroupSetPermission'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     "GroupName"'                     CommandType.VariablesSet'                     77                 })             });
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: security.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.SecurityGroupSetPermission'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     "GroupName"'                     CommandType.VariablesSetA'                     88                 })             });
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("SecurityGroupSetPermission"' commands[2].Command.Name);
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("GroupName"' commands[2].Command.Parameters[0].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual(CommandType.VariablesSet.ToString()' commands[2].Command.Parameters[1].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("77"' commands[2].Command.Parameters[2].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("77"' commands[2].Command.Parameters[2].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("SecurityGroupSetPermission"' commands[3].Command.Name);
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("GroupName"' commands[3].Command.Parameters[0].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual(CommandType.VariablesSetA.ToString()' commands[3].Command.Parameters[1].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("88"' commands[3].Command.Parameters[2].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("88"' commands[3].Command.Parameters[2].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("SecurityGroupSetPermission"' commands[4].Command.Name);
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("GroupName"' commands[4].Command.Parameters[0].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("CustomPermission"' commands[4].Command.Parameters[1].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("22"' commands[4].Command.Parameters[2].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("22"' commands[4].Command.Parameters[2].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("SecurityGroupAddAccount"' commands[5].Command.Name);
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("GroupName"' commands[5].Command.Parameters[0].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("Phogue"' commands[5].Command.Parameters[1].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("SecurityAccountSetPasswordHash"' commands[6].Command.Name);
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("Phogue"' commands[6].Command.Parameters[0].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.IsNotNull(commands[6].Command.Parameters[1].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("SecurityAccountSetPreferredLanguageCode"' commands[7].Command.Name);
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("Phogue"' commands[7].Command.Parameters[0].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("de-DE"' commands[7].Command.Parameters[1].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("SecurityAccountAddPlayer"' commands[8].Command.Name);
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("Phogue"' commands[8].Command.Parameters[0].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual(CommonProtocolType.DiceBattlefield3' commands[8].Command.Parameters[1].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("ABCDEF"' commands[8].Command.Parameters[2].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("ABCDEF"' commands[8].Command.Parameters[2].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("SecurityAccountAppendAccessToken"' commands[9].Command.Name);
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("Phogue"' commands[9].Command.Parameters[0].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual(Guid.Parse("f380eb1e-1438-48c0-8c3d-ad55f2d40538")' commands[9].Command.Parameters[1].First<Guid>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("Token Hash"' commands[9].Command.Parameters[2].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual("Token Hash"' commands[9].Command.Parameters[2].First<String>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual(DateTime.Parse("2024-04-14 20:51:00 PM")' commands[9].Command.Parameters[3].First<DateTime>());
Magic Number,Potato.Core.Test.Security,TestSecurity,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\TestSecurity.cs,TestSecurityWriteConfig,The following statement contains a magic number: Assert.AreEqual(DateTime.Parse("2024-04-14 20:51:00 PM")' commands[9].Command.Parameters[3].First<DateTime>());
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicMonthTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicMonthTemporal.cs,TestTemporalKickEveryoneLastMonth,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' "kick everyone last month"' TextCommandKick' new TimeSpan(-1 * DateTime.DaysInMonth(DateTime.Now.Year' DateTime.Now.Month - 1 < 1 ? 12 : DateTime.Now.Month - 1)' 0' 0' 0));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneFor1Year,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' "kick everyone for 1 year"' TextCommandKick' new TimeSpan(TimeSpan.TicksPerDay * 365));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneFor2PlusTwoWeeks,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' "kick everyone for 2 plus two weeks"' TextCommandKick' new TimeSpan(TimeSpan.TicksPerDay * 28));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneFor2Weeks,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' "kick everyone for 2 weeks"' TextCommandKick' new TimeSpan(TimeSpan.TicksPerDay * 14));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneForAYear,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' "kick everyone for a year"' TextCommandKick' new TimeSpan(TimeSpan.TicksPerDay * 365));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneForOneYear,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' "kick everyone for one year"' TextCommandKick' new TimeSpan(TimeSpan.TicksPerDay * 365));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneLastDayOfWeek,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone last {0}"' DateTime.Now.DayOfWeek)' TextCommandKick' new TimeSpan(-7' 0' 0' 0));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneNextDayOfWeek,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone next {0}"' DateTime.Now.DayOfWeek)' TextCommandKick' new TimeSpan(7' 0' 0' 0));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneSplitDefinitiveTimesOnPrepositions,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' "kick everyone on 5'th september 2020"' TextCommandKick' null' new DateTime(2020' 9' 5' DateTime.Now.Hour' DateTime.Now.Minute' DateTime.Now.Second));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneSplitDefinitiveTimesOnPrepositions,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' "kick everyone on 5'th september 2020"' TextCommandKick' null' new DateTime(2020' 9' 5' DateTime.Now.Hour' DateTime.Now.Minute' DateTime.Now.Second));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneSplitDefinitiveTimesOnPrepositions,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' "kick everyone on 5'th september 2020"' TextCommandKick' null' new DateTime(2020' 9' 5' DateTime.Now.Hour' DateTime.Now.Minute' DateTime.Now.Second));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneSplitDefinitiveTimesOnThePrepositions,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' "kick everyone on the 5'th september 2020"' TextCommandKick' null' new DateTime(2020' 9' 5' DateTime.Now.Hour' DateTime.Now.Minute' DateTime.Now.Second));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneSplitDefinitiveTimesOnThePrepositions,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' "kick everyone on the 5'th september 2020"' TextCommandKick' null' new DateTime(2020' 9' 5' DateTime.Now.Hour' DateTime.Now.Minute' DateTime.Now.Second));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneSplitDefinitiveTimesOnThePrepositions,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' "kick everyone on the 5'th september 2020"' TextCommandKick' null' new DateTime(2020' 9' 5' DateTime.Now.Hour' DateTime.Now.Minute' DateTime.Now.Second));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneSplitDefinitiveTimesUntilPrepositions,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' "kick everyone until 5'th september 2020"' TextCommandKick' new DateTime(2020' 9' 5' DateTime.Now.Hour' DateTime.Now.Minute' DateTime.Now.Second) - DateTime.Now);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneSplitDefinitiveTimesUntilPrepositions,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' "kick everyone until 5'th september 2020"' TextCommandKick' new DateTime(2020' 9' 5' DateTime.Now.Hour' DateTime.Now.Minute' DateTime.Now.Second) - DateTime.Now);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneSplitDefinitiveTimesUntilPrepositions,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' "kick everyone until 5'th september 2020"' TextCommandKick' new DateTime(2020' 9' 5' DateTime.Now.Hour' DateTime.Now.Minute' DateTime.Now.Second) - DateTime.Now);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneSplitDefinitiveTimesUntilThePrepositions,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' "kick everyone until the 5'th september 2020"' TextCommandKick' new DateTime(2020' 9' 5' DateTime.Now.Hour' DateTime.Now.Minute' DateTime.Now.Second) - DateTime.Now);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneSplitDefinitiveTimesUntilThePrepositions,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' "kick everyone until the 5'th september 2020"' TextCommandKick' new DateTime(2020' 9' 5' DateTime.Now.Hour' DateTime.Now.Minute' DateTime.Now.Second) - DateTime.Now);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneSplitDefinitiveTimesUntilThePrepositions,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' "kick everyone until the 5'th september 2020"' TextCommandKick' new DateTime(2020' 9' 5' DateTime.Now.Hour' DateTime.Now.Minute' DateTime.Now.Second) - DateTime.Now);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneThisDayOfWeekPlus2,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone this {0}"' DateTime.Now.AddDays(2).DayOfWeek)' TextCommandKick' new TimeSpan(2' 0' 0' 0));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneThisDayOfWeekPlus2,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone this {0}"' DateTime.Now.AddDays(2).DayOfWeek)' TextCommandKick' new TimeSpan(2' 0' 0' 0));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneThisDayOfWeekPlus3,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone this {0}"' DateTime.Now.AddDays(3).DayOfWeek)' TextCommandKick' new TimeSpan(3' 0' 0' 0));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneThisDayOfWeekPlus3,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone this {0}"' DateTime.Now.AddDays(3).DayOfWeek)' TextCommandKick' new TimeSpan(3' 0' 0' 0));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneThisDayOfWeekPlus4,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone this {0}"' DateTime.Now.AddDays(4).DayOfWeek)' TextCommandKick' new TimeSpan(4' 0' 0' 0));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneThisDayOfWeekPlus4,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone this {0}"' DateTime.Now.AddDays(4).DayOfWeek)' TextCommandKick' new TimeSpan(4' 0' 0' 0));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneThisDayOfWeekPlus5,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone this {0}"' DateTime.Now.AddDays(5).DayOfWeek)' TextCommandKick' new TimeSpan(5' 0' 0' 0));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneThisDayOfWeekPlus5,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone this {0}"' DateTime.Now.AddDays(5).DayOfWeek)' TextCommandKick' new TimeSpan(5' 0' 0' 0));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneThisDayOfWeekPlus6,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone this {0}"' DateTime.Now.AddDays(6).DayOfWeek)' TextCommandKick' new TimeSpan(6' 0' 0' 0));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyBasicTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyBasicTemporal.cs,TestTemporalKickEveryoneThisDayOfWeekPlus6,The following statement contains a magic number: AssertTemporalCommand(CreateTextCommandController()' String.Format("kick everyone this {0}"' DateTime.Now.AddDays(6).DayOfWeek)' TextCommandKick' new TimeSpan(6' 0' 0' 0));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateBasicArithmeticAddition,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate 1 + 2"' TextCommandCalculate' 3.0F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateBasicArithmeticAdditionNoSpaces,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate 1+2"' TextCommandCalculate' 3.0F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateBasicArithmeticBodmasAdditionLeftMultiplicationRight,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate 1 + 2 * 3"' TextCommandCalculate' 7.0F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateBasicArithmeticBodmasAdditionLeftMultiplicationRightNoSpaces,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate 1+2*3"' TextCommandCalculate' 7.0F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateBasicArithmeticBodmasAdditionRightMultiplicationLeft,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate 1 * 2 + 3"' TextCommandCalculate' 5.0F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateBasicArithmeticBodmasAdditionRightMultiplicationLeftNoSpaces,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate 1*2+3"' TextCommandCalculate' 5.0F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateBasicArithmeticDivisionOperator,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate 1 / 2"' TextCommandCalculate' 0.5F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateBasicArithmeticDivisionWord,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate 1 divide by 2"' TextCommandCalculate' 0.5F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateBasicArithmeticMultiplicationOperator,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate 1 * 2"' TextCommandCalculate' 2.0F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateBasicArithmeticMultiplicationWord,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate 1 multiplied by 2"' TextCommandCalculate' 2.0F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateBasicArithmeticPower,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate 3 ^ 2"' TextCommandCalculate' 9.0F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateBracketedArithmeticAdditionNoSpaces,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate (1+2)"' TextCommandCalculate' 3.0F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateBracketedArithmeticBodmasAdditionLeftMultiplicationRightNoSpaces,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate (1+2)*3"' TextCommandCalculate' 9.0F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateBracketedArithmeticBodmasAdditionRightMultiplicationLeftNoSpaces,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate 1*(2+3)"' TextCommandCalculate' 5.0F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateCardinalsAddition,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate twenty one + one hundred and one"' TextCommandCalculate' 122.0F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateCardinalsExtendedOneImpliedAdditionHundreds,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate one hundred twenty one"' TextCommandCalculate' 121.0F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateCardinalsExtendedTwoImpliedAdditionHundreds,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate two hundred twenty one"' TextCommandCalculate' 221.0F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateCardinalsImpliedAdditionHundreds,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate hundred twenty one"' TextCommandCalculate' 121.0F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateCardinalsImpliedAdditionTens,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate twenty one"' TextCommandCalculate' 21.0F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateComplexBracketedArithmeticBodmasLevelOne,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate 6*((2+3*3)/2)"' TextCommandCalculate' 33.0F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateComplexBracketedArithmeticBodmasLevelThree,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate (51+3)/6*((2+3*3)/2)*(51+3)/6*((2+3*3)/2)"' TextCommandCalculate' 2450.25F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateComplexBracketedArithmeticBodmasLevelTwo,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate (51+3)/6*((2+3*3)/2)"' TextCommandCalculate' 49.5F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyArithmetic,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyArithmetic.cs,TestCalculateComplexBracketedArithmeticBodmasPowerFunction,The following statement contains a magic number: AssertNumericCommand(CreateTextCommandController()' "calculate 3 pow(2+1)"' TextCommandCalculate' 27.0F);
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexTemporal.cs,TestTemporalKickPhogueInTwoMinutesOnPortValdezForAMinute,The following statement contains a magic number: AssertExecutedCommandAgainstTemporalValue(args' TextCommandKick' new TimeSpan(TimeSpan.TicksPerMinute * 1)' DateTime.Now + new TimeSpan(TimeSpan.TicksPerMinute * 2));
Magic Number,Potato.Core.Test.TextCommands.Fuzzy,TestFuzzyComplexTemporal,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Fuzzy\TestFuzzyComplexTemporal.cs,TestTemporalKickPhogueInTwoMinutesOnPortValdezForAMinuteEveryHour,The following statement contains a magic number: AssertExecutedCommandAgainstTemporalValue(args' TextCommandKick' new TimeSpan(TimeSpan.TicksPerMinute * 1)' DateTime.Now + new TimeSpan(TimeSpan.TicksPerMinute * 2)' new FuzzyDateTimePattern() {                 Hour = 1'                 Modifier = TimeModifier.Interval             });
Magic Number,Potato.Core.Test.TextCommands,TestTextCommandParsing,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\TestTextCommandParsing.cs,TestTextCommandParsingExecuteUsePreferredLanguage,The following statement contains a magic number: security.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.SecurityGroupSetPermission'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     "TestGroup"'                     CommandType.TextCommandsExecute'                     100                 })             });
Magic Number,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsCopyPermissions,The following statement contains a magic number: security.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.SecurityGroupSetPermission'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     "FirstGroupName"'                     CommandType.VariablesSet'                     77                 })             });
Magic Number,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsCopyPermissions,The following statement contains a magic number: security.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.SecurityGroupSetPermission'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     "FirstGroupName"'                     CommandType.VariablesSetA'                     88                 })             });
Magic Number,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsCopyPermissions,The following statement contains a magic number: Assert.AreEqual(firstGroup.Permissions.First(permission => permission.Name == CommandType.VariablesSet.ToString()).Authority' 77);
Magic Number,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsCopyPermissions,The following statement contains a magic number: Assert.AreEqual(firstGroup.Permissions.First(permission => permission.Name == CommandType.VariablesSetA.ToString()).Authority' 88);
Magic Number,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsCopyPermissions,The following statement contains a magic number: Assert.AreEqual(secondGroup.Permissions.First(permission => permission.Name == CommandType.VariablesSet.ToString()).Authority' 77);
Magic Number,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsCopyPermissions,The following statement contains a magic number: Assert.AreEqual(secondGroup.Permissions.First(permission => permission.Name == CommandType.VariablesSetA.ToString()).Authority' 88);
Magic Number,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetCustomPermission,The following statement contains a magic number: ICommandResult result = security.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.SecurityGroupSetPermission'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     "GroupName"'                     "CustomPermission"'                     50                 })             });
Magic Number,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetCustomPermission,The following statement contains a magic number: Assert.AreEqual(security.Groups.Last().Permissions.First(permission => permission.Name == "CustomPermission").Authority' 50);
Magic Number,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetPermission,The following statement contains a magic number: ICommandResult result = security.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.SecurityGroupSetPermission'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     "GroupName"'                     CommandType.VariablesSet'                     50                 })             });
Magic Number,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetPermission,The following statement contains a magic number: Assert.AreEqual(security.Groups.Last().Permissions.First(permission => permission.Name == CommandType.VariablesSet.ToString()).Authority' 50);
Magic Number,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetPermissionDynamicallyCreate,The following statement contains a magic number: ICommandResult result = security.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.SecurityGroupSetPermission'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     "GroupName"'                     CommandType.VariablesSet'                     50                 })             });
Magic Number,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetPermissionDynamicallyCreate,The following statement contains a magic number: Assert.AreEqual(security.Groups.Last().Permissions.First(permission => permission.Name == CommandType.VariablesSet.ToString()).Authority' 50);
Magic Number,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetPermissionGroupDoesNotExist,The following statement contains a magic number: ICommandResult result = security.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.SecurityGroupSetPermission'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     "ThisIsNotValid"'                     CommandType.VariablesSet'                     50                 })             });
Magic Number,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetPermissionSettingOwnSetPermissionToNothingDenied,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityGroupSetPermission' 50).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetPermissionSettingOwnAuthenticateToNothingDenied,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityGroupSetPermission' 50).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetPermissionSettingOwnAuthenticateToNothingDenied,The following statement contains a magic number: security.Tunnel(CommandBuilder.SecurityGroupSetPermission("GroupName"' CommandType.SecurityAccountAuthenticate' 50).SetOrigin(CommandOrigin.Local));
Magic Number,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetPermissionInsufficientPermission,The following statement contains a magic number: ICommandResult result = security.Tunnel(new Command() {                 CommandType = CommandType.SecurityGroupSetPermission'                 Authentication = {                     Username = "Phogue"                 }'                 Origin = CommandOrigin.Remote'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     "GroupName"'                     CommandType.VariablesSet'                     50                 })             });
Magic Number,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetPermissionTypeConvert,The following statement contains a magic number: ICommandResult result = security.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.SecurityGroupSetPermission'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     "GroupName"'                     CommandType.VariablesSet.ToString()'                     60                 })             });
Magic Number,Potato.Core.Test.Security.Group,TestSecurityGroup,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Security\Group\TestSecurityGroup.cs,TestSecurityGroupsSetPermissionTypeConvert,The following statement contains a magic number: Assert.AreEqual(security.Groups.Last().Permissions.First(permission => permission.Name == CommandType.VariablesSet.ToString()).Authority' 60);
Magic Number,Potato.Core.Test.TextCommands.Route,TestRoute,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Route\TestRoute.cs,TestCommandNumber,The following statement contains a magic number: AssertExecutedCommandAgainstNumericValue(ExecuteTextCommand(textCommandController' "Command 10")' command' 10);
Magic Number,Potato.Core.Test.TextCommands.Route,TestRoute,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Route\TestRoute.cs,TestCommandNumberSentence,The following statement contains a magic number: AssertExecutedCommandAgainstNumericValue(result' command' 20);
Magic Number,Potato.Core.Test.TextCommands.Route,TestRoute,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\TextCommands\Route\TestRoute.cs,TestCommandPlayerTextPlayerNumber,The following statement contains a magic number: AssertExecutedCommandAgainstNumericValue(result' command' 25);
Magic Number,Potato.Core.Test.Variables,TestVariableController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariableController.cs,TestDynamicCreationStringKey,The following statement contains a magic number: String key = "TestDynamicCreation" + StringExtensions.RandomString(20);
Magic Number,Potato.Core.Test.Variables,TestVariableController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariableController.cs,TestLoadConfig,The following statement contains a magic number: saveVariables.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.VariablesSetA'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     CommonVariableNames.MaximumProtocolConnections'                     10                 })             });
Magic Number,Potato.Core.Test.Variables,TestVariableController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariableController.cs,TestLoadConfig,The following statement contains a magic number: Assert.AreEqual(10' loadVariables.ArchiveVariables.Values.First(v => v.Name == "MaximumProtocolConnections").ToType<int>());
Magic Number,Potato.Core.Test.Variables,TestVariableController,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariableController.cs,TestWriteConfig,The following statement contains a magic number: variables.Tunnel(new Command() {                 Origin = CommandOrigin.Local'                 CommandType = CommandType.VariablesSetA'                 Parameters = TestHelpers.ObjectListToContentList(new List<Object>() {                     CommonVariableNames.MaximumProtocolConnections'                     10                 })             });
Magic Number,Potato.Core.Test.Variables,TestVariablesArguments,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariablesArguments.cs,TestParseMixedMultiple,The following statement contains a magic number: Assert.AreEqual(2' variableThree.ToType(0));
Magic Number,Potato.Core.Test.Variables,TestVariablesArguments,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariablesArguments.cs,TestParseMultiple,The following statement contains a magic number: Assert.AreEqual(2' variableTwo.ToType(0));
Magic Number,Potato.Core.Test.Variables,TestVariablesGet,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariablesGet.cs,TestEmptyValueWithDefault,The following statement contains a magic number: Assert.AreEqual(10' variables.VolatileVariables.Values.First().ToType(10));
Magic Number,Potato.Core.Test.Variables,TestVariablesGet,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariablesGet.cs,TestEmptyValueWithDefault,The following statement contains a magic number: Assert.AreEqual(10' variables.VolatileVariables.Values.First().ToType(10));
Magic Number,Potato.Core.Test.Variables,TestVariablesGet,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariablesGet.cs,TestInvalidTypeCastNoDefault,The following statement contains a magic number: Assert.AreNotEqual(10' variables.Get<int>("key"));
Magic Number,Potato.Core.Test.Variables,TestVariablesGet,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariablesGet.cs,TestInvalidTypeCastWithDefault,The following statement contains a magic number: Assert.AreEqual(10' variables.Get("key"' 10));
Magic Number,Potato.Core.Test.Variables,TestVariablesGet,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariablesGet.cs,TestInvalidTypeCastWithDefault,The following statement contains a magic number: Assert.AreEqual(10' variables.Get("key"' 10));
Magic Number,Potato.Core.Test.Variables,TestVariablesGet,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Test\Variables\TestVariablesGet.cs,TesValueValidTypeCast,The following statement contains a magic number: Assert.AreEqual(10' variables.Get<int>("key"));
