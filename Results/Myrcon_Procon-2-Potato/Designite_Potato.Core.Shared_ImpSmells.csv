Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Potato.Core.Shared,CommandData,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\CommandData.cs,Dispose,Cyclomatic complexity of the method is 27
Long Parameter List,Potato.Core.Shared,CommandBuilder,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\CommandBuilder.cs,PotatoAddConnection,The method has 6 parameters. Parameters: provider' type' hostName' port' password' arguments
Long Parameter List,Potato.Core.Shared,CommandBuilder,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\CommandBuilder.cs,EventsEstablishJsonStream,The method has 5 parameters. Parameters: name' uri' key' interval' inclusive
Long Statement,Potato.Core.Shared,Config,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Config.cs,Load,The length of the statement  "                            this.Root = this.Document[name] != null ? this.Document.Value<JArray>(name) : this.Document.First.First.Value<JArray>(); " is 120.
Long Statement,Potato.Core.Shared,AsynchronousCoreController,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\AsynchronousCoreController.cs,Execute,The length of the statement  "            Task.Factory.StartNew(ExecuteQueuedCommands' this.AsyncStateModel.TaskQueueWaitCancellationTokenSource.Token' TaskCreationOptions.LongRunning' TaskScheduler.Default); " is 166.
Long Statement,Potato.Core.Shared,AsynchronousCoreController,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\AsynchronousCoreController.cs,BeginTunnel,The length of the statement  "            if (this.AsyncStateModel != null && this.AsyncStateModel.TaskQueueWaitCancellationTokenSource.IsCancellationRequested == false) { " is 129.
Long Statement,Potato.Core.Shared,AsynchronousCoreController,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\AsynchronousCoreController.cs,BeginBubble,The length of the statement  "            if (this.AsyncStateModel != null && this.AsyncStateModel.TaskQueueWaitCancellationTokenSource.IsCancellationRequested == false) { " is 129.
Long Statement,Potato.Core.Shared,CommandParameter,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\CommandParameter.cs,HasOne,The length of the statement  "                if (t.IsEnum == true && this.HasOne<String>() == true && CommandParameter.ConvertToEnum(t' this.First<String>()) != null) { " is 123.
Long Statement,Potato.Core.Shared,CoreController,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\CoreController.cs,Execute,The length of the statement  "                foreach (var loadedConfigCommand in config.RootOf(this.GetType()).Children<JObject>().Select(item => item.ToObject<ConfigCommand>(JsonSerialization.Minimal)).Where(item => item != null)) { " is 188.
Long Statement,Potato.Core.Shared,CoreController,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\CoreController.cs,PropogatePreview,The length of the statement  "                IList<ICoreController> propogationList = direction == CommandDirection.Tunnel ? this.TunnelExecutableObjects(command) : this.BubbleExecutableObjects(command); " is 158.
Long Statement,Potato.Core.Shared,CoreController,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\CoreController.cs,PropogatePreview,The length of the statement  "                for (int offset = 0; propogationList != null && offset < propogationList.Count && command.Result.CommandResultType == CommandResultType.Continue; offset++) { " is 157.
Long Statement,Potato.Core.Shared,CoreController,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\CoreController.cs,PropogateHandler,The length of the statement  "                IList<ICoreController> propogationList = direction == CommandDirection.Tunnel ? this.TunnelExecutableObjects(command) : this.BubbleExecutableObjects(command); " is 158.
Long Statement,Potato.Core.Shared,CoreController,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\CoreController.cs,PropogateHandler,The length of the statement  "                for (int offset = 0; propogationList != null && offset < propogationList.Count && command.Result.CommandResultType == CommandResultType.Continue; offset++) { " is 157.
Long Statement,Potato.Core.Shared,CoreController,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\CoreController.cs,PropogateExecuted,The length of the statement  "            IList<ICoreController> propogationList = direction == CommandDirection.Tunnel ? this.TunnelExecutableObjects(command) : this.BubbleExecutableObjects(command); " is 158.
Long Statement,Potato.Core.Shared.Models,AccessTokenModel,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Models\AccessTokenModel.cs,Generate,The length of the statement  "            if (this.Account != null && String.IsNullOrEmpty(this.Account.PasswordHash) == false && String.IsNullOrEmpty(identifer) == false) { " is 131.
Long Statement,Potato.Core.Shared.Models,AccessTokenModel,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Models\AccessTokenModel.cs,Generate,The length of the statement  "                // The access token is useless if: The password is changed OR the password is set to the same and the hash is regenerated " is 121.
Long Statement,Potato.Core.Shared.Models,AccessTokenModel,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Models\AccessTokenModel.cs,Generate,The length of the statement  "                this.TokenHash = BCrypt.Net.BCrypt.HashPassword(this.ShaHash(token + this.Account.PasswordHash + identifer)' BCrypt.Net.BCrypt.GenerateSalt()); " is 143.
Long Statement,Potato.Core.Shared.Models,AccessTokenModel,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Models\AccessTokenModel.cs,Authenticate,The length of the statement  "            if (this.Id == id && this.LastTouched > DateTime.Now.AddSeconds(-1 * this.ExpiredWindowSeconds) && String.IsNullOrEmpty(token) == false && String.IsNullOrEmpty(identifer) == false && String.IsNullOrEmpty(this.TokenHash) == false && this.Account != null && String.IsNullOrEmpty(this.Account.PasswordHash) == false) { " is 315.
Long Statement,Potato.Core.Shared.Models,AccessTokenModel,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Models\AccessTokenModel.cs,Authenticate,The length of the statement  "                authenticated = String.CompareOrdinal(this.TokenHash' BCrypt.Net.BCrypt.HashPassword(this.ShaHash(token + this.Account.PasswordHash + identifer)' this.TokenHash)) == 0; " is 168.
Long Statement,Potato.Core.Shared.Models,AsynchronousCommandStateModel,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Models\AsynchronousCommandStateModel.cs,IsKnown,The length of the statement  "            return this.PendingCommandsQueue.Any(command => command.Command.CommandGuid == commandGuid) || this.ExecutedCommandsPool.ContainsKey(commandGuid); " is 146.
Long Statement,Potato.Core.Shared.Models,TextCommandIntervalModel,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Models\TextCommandIntervalModel.cs,ToTimeSpan,The length of the statement  "            return new TimeSpan(this.Day == null ? 0 : (int)this.Day' this.Hour == null ? 0 : (int)this.Hour' this.Minute == null ? 0 : (int)this.Minute' this.Second == null ? 0 : (int)this.Second); " is 186.
Long Statement,Potato.Core.Shared.Plugins,PluginController,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Plugins\PluginController.cs,GetAssemblyGuid,The length of the statement  "            GuidAttribute attribute = Assembly.GetAssembly(this.GetType()).GetCustomAttributes(typeof(GuidAttribute)' true).Cast<GuidAttribute>().FirstOrDefault(); " is 151.
Long Statement,Potato.Core.Shared.Plugins,PluginController,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Plugins\PluginController.cs,HandledCommandNames,The length of the statement  "            return items.SelectMany(item => item.CommandDispatchers).Select(item => item.Name).Distinct().OrderBy(item => item).ToList(); " is 125.
Long Statement,Potato.Core.Shared.Plugins,PluginController,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Plugins\PluginController.cs,ClientEvent,The length of the statement  "                    if (this.DeferredActions.TryRemove(doneAction.Uid' out deferredAction) == true && deferredAction.TryInsertDone(doneAction' e.Then.Packets' e.Now.Packets) == true) { " is 164.
Long Statement,Potato.Core.Shared.Plugins,PluginController,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Plugins\PluginController.cs,ClientEvent,The length of the statement  "                    if (this.DeferredActions.TryRemove(doneAction.Uid' out deferredAction) == true && deferredAction.TryInsertExpired(doneAction' e.Then.Packets' e.Now.Packets) == true) { " is 167.
Long Statement,Potato.Core.Shared.Plugins,PluginController,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Plugins\PluginController.cs,TextCommandExecuted,The length of the statement  "            if (command.Result.CommandResultType == CommandResultType.Success && command.Result.Now.TextCommands.First().PluginGuid == this.PluginGuid) { " is 141.
Complex Conditional,Potato.Core.Shared.Models,AccessTokenModel,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Models\AccessTokenModel.cs,Authenticate,The conditional expression  "this.Id == id && this.LastTouched > DateTime.Now.AddSeconds(-1 * this.ExpiredWindowSeconds) && String.IsNullOrEmpty(token) == false && String.IsNullOrEmpty(identifer) == false && String.IsNullOrEmpty(this.TokenHash) == false && this.Account != null && String.IsNullOrEmpty(this.Account.PasswordHash) == false"  is complex.
Magic Number,Potato.Core.Shared,ConfigCommand,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\ConfigCommand.cs,GenerateSalt,The following statement contains a magic number: byte[] salt = new byte[8];
Magic Number,Potato.Core.Shared,ConfigCommand,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\ConfigCommand.cs,DeriveKey,The following statement contains a magic number: using (var derived = new Rfc2898DeriveBytes(password' salt' 26000)) {                  key = derived.GetBytes(32);              }
Magic Number,Potato.Core.Shared,ConfigCommand,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\ConfigCommand.cs,DeriveKey,The following statement contains a magic number: using (var derived = new Rfc2898DeriveBytes(password' salt' 26000)) {                  key = derived.GetBytes(32);              }
Magic Number,Potato.Core.Shared.Models,AccessTokenModel,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Models\AccessTokenModel.cs,AccessTokenModel,The following statement contains a magic number: this.ExpiredWindowSeconds = 172800;
Magic Number,Potato.Core.Shared.Models,AccessTokenModel,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Models\AccessTokenModel.cs,Generate,The following statement contains a magic number: if (this.Account != null && String.IsNullOrEmpty(this.Account.PasswordHash) == false && String.IsNullOrEmpty(identifer) == false) {                  this.LastTouched = DateTime.Now;                    // Generate a random string for our access token.                  token = Convert.ToBase64String(this.GenerateSalt(64));                                    // The hash is equal to our generated token + the accounts current hash                  // The access token is useless if: The password is changed OR the password is set to the same and the hash is regenerated                  this.TokenHash = BCrypt.Net.BCrypt.HashPassword(this.ShaHash(token + this.Account.PasswordHash + identifer)' BCrypt.Net.BCrypt.GenerateSalt());              }
Magic Number,Potato.Core.Shared.Models,TextCommandMatchModel,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Models\TextCommandMatchModel.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = (Prefix != null ? Prefix.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Text != null ? Text.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ Period.GetHashCode();                  hashCode = (hashCode * 397) ^ Delay.GetHashCode();                  hashCode = (hashCode * 397) ^ (Interval != null ? Interval.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Numeric != null ? Numeric.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Quotes != null ? Quotes.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Players != null ? Players.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Maps != null ? Maps.GetHashCode() : 0);                  return hashCode;              }
Magic Number,Potato.Core.Shared.Models,TextCommandMatchModel,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Models\TextCommandMatchModel.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = (Prefix != null ? Prefix.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Text != null ? Text.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ Period.GetHashCode();                  hashCode = (hashCode * 397) ^ Delay.GetHashCode();                  hashCode = (hashCode * 397) ^ (Interval != null ? Interval.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Numeric != null ? Numeric.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Quotes != null ? Quotes.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Players != null ? Players.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Maps != null ? Maps.GetHashCode() : 0);                  return hashCode;              }
Magic Number,Potato.Core.Shared.Models,TextCommandMatchModel,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Models\TextCommandMatchModel.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = (Prefix != null ? Prefix.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Text != null ? Text.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ Period.GetHashCode();                  hashCode = (hashCode * 397) ^ Delay.GetHashCode();                  hashCode = (hashCode * 397) ^ (Interval != null ? Interval.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Numeric != null ? Numeric.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Quotes != null ? Quotes.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Players != null ? Players.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Maps != null ? Maps.GetHashCode() : 0);                  return hashCode;              }
Magic Number,Potato.Core.Shared.Models,TextCommandMatchModel,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Models\TextCommandMatchModel.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = (Prefix != null ? Prefix.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Text != null ? Text.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ Period.GetHashCode();                  hashCode = (hashCode * 397) ^ Delay.GetHashCode();                  hashCode = (hashCode * 397) ^ (Interval != null ? Interval.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Numeric != null ? Numeric.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Quotes != null ? Quotes.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Players != null ? Players.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Maps != null ? Maps.GetHashCode() : 0);                  return hashCode;              }
Magic Number,Potato.Core.Shared.Models,TextCommandMatchModel,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Models\TextCommandMatchModel.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = (Prefix != null ? Prefix.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Text != null ? Text.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ Period.GetHashCode();                  hashCode = (hashCode * 397) ^ Delay.GetHashCode();                  hashCode = (hashCode * 397) ^ (Interval != null ? Interval.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Numeric != null ? Numeric.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Quotes != null ? Quotes.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Players != null ? Players.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Maps != null ? Maps.GetHashCode() : 0);                  return hashCode;              }
Magic Number,Potato.Core.Shared.Models,TextCommandMatchModel,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Models\TextCommandMatchModel.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = (Prefix != null ? Prefix.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Text != null ? Text.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ Period.GetHashCode();                  hashCode = (hashCode * 397) ^ Delay.GetHashCode();                  hashCode = (hashCode * 397) ^ (Interval != null ? Interval.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Numeric != null ? Numeric.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Quotes != null ? Quotes.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Players != null ? Players.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Maps != null ? Maps.GetHashCode() : 0);                  return hashCode;              }
Magic Number,Potato.Core.Shared.Models,TextCommandMatchModel,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Models\TextCommandMatchModel.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = (Prefix != null ? Prefix.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Text != null ? Text.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ Period.GetHashCode();                  hashCode = (hashCode * 397) ^ Delay.GetHashCode();                  hashCode = (hashCode * 397) ^ (Interval != null ? Interval.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Numeric != null ? Numeric.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Quotes != null ? Quotes.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Players != null ? Players.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Maps != null ? Maps.GetHashCode() : 0);                  return hashCode;              }
Magic Number,Potato.Core.Shared.Models,TextCommandMatchModel,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Models\TextCommandMatchModel.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = (Prefix != null ? Prefix.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Text != null ? Text.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ Period.GetHashCode();                  hashCode = (hashCode * 397) ^ Delay.GetHashCode();                  hashCode = (hashCode * 397) ^ (Interval != null ? Interval.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Numeric != null ? Numeric.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Quotes != null ? Quotes.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Players != null ? Players.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Maps != null ? Maps.GetHashCode() : 0);                  return hashCode;              }
Magic Number,Potato.Core.Shared.Database.Migrations,MigrationController,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Database\Migrations\MigrationController.cs,Execute,The following statement contains a magic number: this.Bubble(                  CommandBuilder.DatabaseQuery(                      new Create()                      .Collection("Migrations")                      .Modifier(new IfNotExists())                      .Field("_id"' new IntegerType() {                          new Unsigned()'                          new AutoIncrement()                      }' false)                      .Field("Name"' 255' false)                      .Field("Origin"' 40' false)                      .Field("Version"' new IntegerType()' false)                      .Field("Stamp"' new DateTimeType()' false)                      .Index(                          new Index() {                              Name = "Name_Origin_Stamp_INDEX"                          }                          .Modifier(new IfNotExists())                          .Collection("Migrations")                          .Sort("Name")                          .Sort("Origin")                          .Sort("Stamp"' new Descending())                      )                      .Index("Migrations"' "_id"' new Primary())                  ).SetOrigin(CommandOrigin.Local)              );
Magic Number,Potato.Core.Shared.Database.Migrations,MigrationController,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Core.Shared\Database\Migrations\MigrationController.cs,Execute,The following statement contains a magic number: this.Bubble(                  CommandBuilder.DatabaseQuery(                      new Create()                      .Collection("Migrations")                      .Modifier(new IfNotExists())                      .Field("_id"' new IntegerType() {                          new Unsigned()'                          new AutoIncrement()                      }' false)                      .Field("Name"' 255' false)                      .Field("Origin"' 40' false)                      .Field("Version"' new IntegerType()' false)                      .Field("Stamp"' new DateTimeType()' false)                      .Index(                          new Index() {                              Name = "Name_Origin_Stamp_INDEX"                          }                          .Modifier(new IfNotExists())                          .Collection("Migrations")                          .Sort("Name")                          .Sort("Origin")                          .Sort("Stamp"' new Descending())                      )                      .Index("Migrations"' "_id"' new Primary())                  ).SetOrigin(CommandOrigin.Local)              );
