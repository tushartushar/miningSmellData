Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Potato.Fuzzy.Utils,StringExtensions,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Utils\StringExtensions.cs,Levenshtein,Cyclomatic complexity of the method is 8
Complex Method,Potato.Fuzzy.Utils,StringExtensions,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Utils\StringExtensions.cs,GetClosestMatch,Cyclomatic complexity of the method is 11
Long Statement,Potato.Fuzzy,Sentence,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Sentence.cs,GetParameters,The length of the statement  "                parameters = metaData.ExactMatchSignature == true ? Sentence.GetParametersExactMatchSignature(sentence' metaData) : Sentence.GetParametersCombinationSignature(sentence' metaData); " is 179.
Long Statement,Potato.Fuzzy,Sentence,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Sentence.cs,GetReduction,The length of the statement  "                if (handler.Key.DemandTokenCompatability == false || (handler.Key.DemandTokenCompatability == true && Sentence.IsAllTokensCompatable(sentence) == true)) { " is 154.
Long Statement,Potato.Fuzzy,Sentence,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Sentence.cs,Reduce,The length of the statement  "                    Sentence reducedSentence = new Sentence(this.GetRange(offset' count)).GetReduction(state' handlers.Where(handler => handler.Key.Parameters.Count == count).ToList()); " is 165.
Long Statement,Potato.Fuzzy,Sentence,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Sentence.cs,Reduce,The length of the statement  "            this.Reduce(state' TokenReflection.TokenReduceHandlers.Where(handler => handler.Key.Namespace.Contains("Potato.Fuzzy.Tokens.Operator.Arithmetic.FirstOrder")).ToList()); " is 168.
Long Statement,Potato.Fuzzy,Sentence,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Sentence.cs,Reduce,The length of the statement  "            this.Reduce(state' TokenReflection.TokenReduceHandlers.Where(handler => handler.Key.Namespace.Contains("Potato.Fuzzy.Tokens.Operator.Arithmetic.SecondOrder")).ToList()); " is 169.
Long Statement,Potato.Fuzzy,Sentence,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Sentence.cs,Reduce,The length of the statement  "            this.Reduce(state' TokenReflection.TokenReduceHandlers.Where(handler => handler.Key.Namespace.Contains("Potato.Fuzzy.Tokens.Operator.Arithmetic.ThirdOrder")).ToList()); " is 168.
Long Statement,Potato.Fuzzy,Sentence,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Sentence.cs,Reduce,The length of the statement  "            this.Reduce(state' TokenReflection.TokenReduceHandlers.Where(handler => handler.Key.Namespace.Contains("Potato.Fuzzy.Tokens")).ToList()); " is 137.
Long Statement,Potato.Fuzzy,Sentence,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Sentence.cs,ExtractFirstOrDefault,The length of the statement  "            return (T) this.Combine().Where(token => token is T).OrderByDescending(token => token.Similarity).ThenByDescending(token => token.Text.Length).FirstOrDefault(); " is 160.
Long Statement,Potato.Fuzzy,Sentence,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Sentence.cs,ExtractList,The length of the statement  "            return this.Combine().Where(token => token is T).OrderByDescending(token => token.Similarity).ThenByDescending(token => token.Text.Length).Select(token => token as T).ToList(); " is 176.
Long Statement,Potato.Fuzzy,Sentence,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Sentence.cs,ScrapeStrictList,The length of the statement  "            return this.Where(phrase => phrase.Any()).Select(phrase => phrase.First()).Where(token => token.GetType() == typeof(T)).OrderByDescending(token => token.Similarity).ThenByDescending(token => token.Text.Length).Select(token => token as T).ToList(); " is 247.
Long Statement,Potato.Fuzzy,Phrase,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Phrase.cs,OrderByWeightedSimilarity,The length of the statement  "                phraseList.ReplaceRange(0' phraseList.Count' phraseList.OrderByDescending(token => token.Similarity - (largestToken.Text.Length - token.Text.Length) * largestTokenErrorRatio).ToList()); " is 185.
Long Statement,Potato.Fuzzy,Phrase,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Phrase.cs,Parse,The length of the statement  "            foreach (var delegateParseMethod in TokenReflection.TokenParseHandlers.Where(parse => parse.Key.Namespace.Contains(tokenNamespace))) { " is 134.
Long Statement,Potato.Fuzzy,Phrase,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Phrase.cs,AppendDistinctRange,The length of the statement  "            .Where(token => String.CompareOrdinal(token.token.ToString()' token.newToken.ToString()) == 0 && token.newToken.Similarity < token.token.Similarity) " is 148.
Long Statement,Potato.Fuzzy.Tokens.Operator.Arithmetic.FirstOrder,FirstOrderArithmeticToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Operator\Arithmetic\FirstOrder\FirstOrderArithmeticToken.cs,ReduceMultiplierMultiplicand,The length of the statement  "            MultiplicandCardinalNumericPrimitiveToken multiplicand = (MultiplicandCardinalNumericPrimitiveToken) parameters["multiplicand"]; " is 128.
Long Statement,Potato.Fuzzy.Tokens.Operator.Arithmetic.SecondOrder,MultiplicationSecondOrderArithmeticToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Operator\Arithmetic\SecondOrder\MultiplicationSecondOrderArithmeticToken.cs,ReduceMultiplierMultiplyMultiplicand,The length of the statement  "            return MultiplicationSecondOrderArithmeticToken.ReduceMultiplierAsteriskMultiplicand(state' new Dictionary<String' Token>() { " is 125.
Long Statement,Potato.Fuzzy.Tokens.Operator.Arithmetic.ThirdOrder,AdditionThirdOrderArithmeticOperatorToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Operator\Arithmetic\ThirdOrder\AdditionThirdOrderArithmeticOperatorToken.cs,ReduceNumberAdditionNumber,The length of the statement  "            AdditionThirdOrderArithmeticOperatorToken addition = (AdditionThirdOrderArithmeticOperatorToken) parameters["addition"]; " is 120.
Long Statement,Potato.Fuzzy.Tokens.Operator.Arithmetic.ThirdOrder,SubtractionThirdOrderArithmeticOperatorToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Operator\Arithmetic\ThirdOrder\SubtractionThirdOrderArithmeticOperatorToken.cs,ReduceNumberSubtractionNumber,The length of the statement  "            SubtractionThirdOrderArithmeticOperatorToken subtraction = (SubtractionThirdOrderArithmeticOperatorToken) parameters["subtraction"]; " is 132.
Long Statement,Potato.Fuzzy.Tokens.Primitive.Temporal,FuzzyDateTimePattern,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\FuzzyDateTimePattern.cs,AddDefinitives,The length of the statement  "                TemporalInterval = definitive1.TemporalInterval != TemporalInterval.Infinite ? definitive1.TemporalInterval : definitive2.TemporalInterval " is 138.
Long Statement,Potato.Fuzzy.Tokens.Primitive.Temporal,FuzzyDateTimePattern,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\FuzzyDateTimePattern.cs,AddDefinitiveRelative,The length of the statement  "                DayOfWeek = (System.DayOfWeek?) FuzzyDateTimePattern.AnchoredCombine(definitive.DayOfWeek' DateTime.Now.DayOfWeek' relative.DayOfWeek' 0)' " is 138.
Long Statement,Potato.Fuzzy.Tokens.Primitive.Temporal,FuzzyDateTimePattern,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\FuzzyDateTimePattern.cs,AddDefinitiveRelative,The length of the statement  "                TemporalInterval = (TemporalInterval) FuzzyDateTimePattern.Combine(definitive.TemporalInterval' relative.TemporalInterval) " is 122.
Long Statement,Potato.Fuzzy.Tokens.Primitive.Temporal,FuzzyDateTimePattern,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\FuzzyDateTimePattern.cs,AddRelatives,The length of the statement  "                TemporalInterval = (TemporalInterval) FuzzyDateTimePattern.Combine(relative1.TemporalInterval' relative2.TemporalInterval) " is 122.
Long Statement,Potato.Fuzzy.Tokens.Primitive.Temporal,FuzzyDateTimePattern,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\FuzzyDateTimePattern.cs,ToTimeSpan,The length of the statement  "                ts = new TimeSpan(this.Day == null ? 0 : (int) this.Day' this.Hour == null ? 0 : (int) this.Hour' this.Minute == null ? 0 : (int) this.Minute' this.Second == null ? 0 : (int) this.Second); " is 188.
Long Statement,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable,DateTimeTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\DateTimeTemporalPrimitiveToken.cs,ReduceDateTimeAdditionDateTime,The length of the statement  "            AdditionThirdOrderArithmeticOperatorToken addition = (AdditionThirdOrderArithmeticOperatorToken) parameters["addition"]; " is 120.
Long Statement,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable,DateTimeTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\DateTimeTemporalPrimitiveToken.cs,ReduceDateTimeSubtractionDateTime,The length of the statement  "            SubtractionThirdOrderArithmeticOperatorToken subtraction = (SubtractionThirdOrderArithmeticOperatorToken) parameters["subtraction"]; " is 132.
Long Statement,Potato.Fuzzy.Tokens,TokenReflection,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\TokenReflection.cs,SelectMatchDescendants,The length of the statement  "                TokenReflection.MatchDescendants.Add(type' array != null ? array.Children<JObject>().Select(item => item.ToObject<MatchModel>()).ToList() : new List<MatchModel>()); " is 164.
Long Statement,Potato.Fuzzy.Tokens,TokenReflection,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\TokenReflection.cs,CreateDescendants,The length of the statement  "            phrase.AddRange(TokenReflection.SelectMatchDescendants(state.Document' typeof(T)).Select(element => TokenReflection.CreateToken<T>(element' phrase)).Where(token => token != null)); " is 180.
Long Statement,Potato.Fuzzy.Utils,StringExtensions,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Utils\StringExtensions.cs,GetClosestMatch,The length of the statement  "                        int score = (int) input.Substring(0' x).ToLower().Sift3Distance(match.LowerCaseMatchedText' match.LowerCaseMatchedText.Length); " is 127.
Complex Conditional,Potato.Fuzzy.Tokens.Primitive,StringPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\StringPrimitiveToken.cs,Parse,The conditional expression  "phrase.Text.Length > 0 && phrase.Text.First() == '"' && phrase.Text.Last() == '"' && phrase.Refactoring == false"  is complex.
Magic Number,Potato.Fuzzy,Sentence,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Sentence.cs,Refactor,The following statement contains a magic number: for (int count = 2; count <= this.Count; count++) {                  for (int offset = 0; offset <= this.Count - count; offset++) {                      Sentence original = new Sentence(this.GetRange(offset' count));                      // @todo does combine do any sorting?                      // Should it?                      List<Token> originalTokens = original.Combine();                        Phrase refactoredPhrase = new Phrase(original.Combine()) {                          Text = original.ToString()'                          Refactoring = true                      }.Parse(state' tokenNamespace);                        // Is our original list empty?                      // OR is the first token in the refactoredPhrase better?                      bool betterPhrase = refactoredPhrase.Count > originalTokens.Count;                      betterPhrase = betterPhrase && (// We didn't know any better before hand?                                                         originalTokens.Count == 0 // OR if the refactored token has our first original token' but it's been moved up a rank..                                                         || refactoredPhrase.IndexOf(originalTokens.FirstOrDefault()) > 0                                                     );                        if (betterPhrase == true) {                          this.RemoveRange(offset' count);                          this.Insert(offset' refactoredPhrase);                            count = 2;                          offset = -1;                      }                  }              }
Magic Number,Potato.Fuzzy,Sentence,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Sentence.cs,Refactor,The following statement contains a magic number: for (int count = 2; count <= this.Count; count++) {                  for (int offset = 0; offset <= this.Count - count; offset++) {                      Sentence original = new Sentence(this.GetRange(offset' count));                      // @todo does combine do any sorting?                      // Should it?                      List<Token> originalTokens = original.Combine();                        Phrase refactoredPhrase = new Phrase(original.Combine()) {                          Text = original.ToString()'                          Refactoring = true                      }.Parse(state' tokenNamespace);                        // Is our original list empty?                      // OR is the first token in the refactoredPhrase better?                      bool betterPhrase = refactoredPhrase.Count > originalTokens.Count;                      betterPhrase = betterPhrase && (// We didn't know any better before hand?                                                         originalTokens.Count == 0 // OR if the refactored token has our first original token' but it's been moved up a rank..                                                         || refactoredPhrase.IndexOf(originalTokens.FirstOrDefault()) > 0                                                     );                        if (betterPhrase == true) {                          this.RemoveRange(offset' count);                          this.Insert(offset' refactoredPhrase);                            count = 2;                          offset = -1;                      }                  }              }
Magic Number,Potato.Fuzzy,Sentence,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Sentence.cs,Reduce,The following statement contains a magic number: for (int count = 2; count <= this.Count; count++) {                  for (int offset = 0; offset <= this.Count - count; offset++) {                      Sentence reducedSentence = new Sentence(this.GetRange(offset' count)).GetReduction(state' handlers.Where(handler => handler.Key.Parameters.Count == count).ToList());                        if (reducedSentence.Count == 1 && reducedSentence[0] != null) {                          this.ReplaceRange(offset' count' reducedSentence);                          count = 2;                          offset = -1;                      }                  }              }
Magic Number,Potato.Fuzzy,Sentence,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Sentence.cs,Reduce,The following statement contains a magic number: for (int count = 2; count <= this.Count; count++) {                  for (int offset = 0; offset <= this.Count - count; offset++) {                      Sentence reducedSentence = new Sentence(this.GetRange(offset' count)).GetReduction(state' handlers.Where(handler => handler.Key.Parameters.Count == count).ToList());                        if (reducedSentence.Count == 1 && reducedSentence[0] != null) {                          this.ReplaceRange(offset' count' reducedSentence);                          count = 2;                          offset = -1;                      }                  }              }
Magic Number,Potato.Fuzzy,Phrase,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Phrase.cs,OrderByWeightedSimilarity,The following statement contains a magic number: if (largestToken != null) {                  float largestTokenErrorRatio = largestToken.Similarity / 100;                    phraseList.ReplaceRange(0' phraseList.Count' phraseList.OrderByDescending(token => token.Similarity - (largestToken.Text.Length - token.Text.Length) * largestTokenErrorRatio).ToList());              }
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,AprilMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\AprilMonthsVariableTemporalPrimitiveToken.cs,AprilMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 4 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 4              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,AprilMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\AprilMonthsVariableTemporalPrimitiveToken.cs,AprilMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 4 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 4              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,AugustMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\AugustMonthsVariableTemporalPrimitiveToken.cs,AugustMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 8 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 8              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,AugustMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\AugustMonthsVariableTemporalPrimitiveToken.cs,AugustMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 8 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 8              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,DecemberMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\DecemberMonthsVariableTemporalPrimitiveToken.cs,DecemberMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 12 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 12              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,DecemberMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\DecemberMonthsVariableTemporalPrimitiveToken.cs,DecemberMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 12 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 12              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,FebruaryMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\FebruaryMonthsVariableTemporalPrimitiveToken.cs,FebruaryMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 2 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 2              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,FebruaryMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\FebruaryMonthsVariableTemporalPrimitiveToken.cs,FebruaryMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 2 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 2              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,JulyMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\JulyMonthsVariableTemporalPrimitiveToken.cs,JulyMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 7 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 7              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,JulyMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\JulyMonthsVariableTemporalPrimitiveToken.cs,JulyMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 7 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 7              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,JuneMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\JuneMonthsVariableTemporalPrimitiveToken.cs,JuneMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 6 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 6              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,JuneMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\JuneMonthsVariableTemporalPrimitiveToken.cs,JuneMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 6 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 6              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,MarchMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\MarchMonthsVariableTemporalPrimitiveToken.cs,MarchMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 3 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 3              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,MarchMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\MarchMonthsVariableTemporalPrimitiveToken.cs,MarchMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 3 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 3              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,MayMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\MayMonthsVariableTemporalPrimitiveToken.cs,MayMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 5 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 5              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,MayMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\MayMonthsVariableTemporalPrimitiveToken.cs,MayMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 5 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 5              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,NovemberMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\NovemberMonthsVariableTemporalPrimitiveToken.cs,NovemberMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 11 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 11              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,NovemberMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\NovemberMonthsVariableTemporalPrimitiveToken.cs,NovemberMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 11 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 11              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,OctoberMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\OctoberMonthsVariableTemporalPrimitiveToken.cs,OctoberMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 10 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 10              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,OctoberMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\OctoberMonthsVariableTemporalPrimitiveToken.cs,OctoberMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 10 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 10              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,SeptemberMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\SeptemberMonthsVariableTemporalPrimitiveToken.cs,SeptemberMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 9 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 9              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Months,SeptemberMonthsVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Months\SeptemberMonthsVariableTemporalPrimitiveToken.cs,SeptemberMonthsVariableTemporalPrimitiveToken,The following statement contains a magic number: this.Pattern = new FuzzyDateTimePattern() {                  Rule = TimeType.Definitive'                  Year = DateTime.Now.Month <= 9 ? DateTime.Now.Year : DateTime.Now.Year + 1'                  Month = 9              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable,DateTimeTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\DateTimeTemporalPrimitiveToken.cs,ReduceDateTimeAtNumber,The following statement contains a magic number: if (number.ToFloat() < 12) {                  // If PM                  if (DateTime.Now.Hour > 12) {                      definitiveHour += 12;                  }              }
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable,DateTimeTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\DateTimeTemporalPrimitiveToken.cs,ReduceDateTimeAtNumber,The following statement contains a magic number: if (number.ToFloat() < 12) {                  // If PM                  if (DateTime.Now.Hour > 12) {                      definitiveHour += 12;                  }              }
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable,DateTimeTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\DateTimeTemporalPrimitiveToken.cs,ReduceDateTimeAtNumber,The following statement contains a magic number: if (number.ToFloat() < 12) {                  // If PM                  if (DateTime.Now.Hour > 12) {                      definitiveHour += 12;                  }              }
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Date.Day,DayVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Date\Day\DayVariableTemporalPrimitiveToken.cs,ReduceNumberWeeks,The following statement contains a magic number: return new Phrase() {                  new DayVariableTemporalPrimitiveToken() {                      Pattern = new FuzzyDateTimePattern() {                          Rule = TimeType.Relative'                          Day = (int) number.ToFloat().ConvertTo(typeof (int)) * 7                      }'                      Text = String.Format("{0} {1}"' number.Text' weeks.Text)'                      Similarity = (weeks.Similarity + number.Similarity) / 2.0F                  }              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Date.Day,DayVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Date\Day\DayVariableTemporalPrimitiveToken.cs,ReduceArticleWeeks,The following statement contains a magic number: return new Phrase() {                  new DayVariableTemporalPrimitiveToken() {                      Pattern = new FuzzyDateTimePattern() {                          Rule = TimeType.Relative'                          Day = 7                      }'                      Text = String.Format("{0} {1}"' article.Text' weeks.Text)'                      Similarity = (weeks.Similarity + article.Similarity) / 2.0F                  }              };
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Time.Hour,HourVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Time\Hour\HourVariableTemporalPrimitiveToken.cs,ReduceNumberMeridiem,The following statement contains a magic number: int hours = (int) number.ToFloat().ConvertTo(typeof (int)) % 24;
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Time.Hour,HourVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Time\Hour\HourVariableTemporalPrimitiveToken.cs,ReduceNumberMeridiem,The following statement contains a magic number: if (meridiem is PostMeridiemUnitsTemporalPrimitiveToken) {                  hours += 12;              }
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Time,TimeVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Time\TimeVariableTemporalPrimitiveToken.cs,Parse,The following statement contains a magic number: if (regexMatch.Success == true) {                  int? hours = regexMatch.Groups["hours"].Value.Length > 0 ? int.Parse(regexMatch.Groups["hours"].Value) : 0;                  int? minutes = regexMatch.Groups["minutes"].Value.Length > 0 ? int.Parse(regexMatch.Groups["minutes"].Value) : 0;                  int? seconds = regexMatch.Groups["seconds"].Value.Length > 0 ? int.Parse(regexMatch.Groups["seconds"].Value) : 0;                    if (String.Compare(regexMatch.Groups["meridiem"].Value' "pm"' StringComparison.OrdinalIgnoreCase) == 0 && hours < 12) {                      hours += 12;                  }                  else if (String.Compare(regexMatch.Groups["meridiem"].Value' "am"' StringComparison.OrdinalIgnoreCase) == 0) {                      if (hours == 12) {                          hours = 0;                      }                  }                    hours %= 24;                    phrase.Add(new TimeVariableTemporalPrimitiveToken() {                      Pattern = new FuzzyDateTimePattern() {                          Rule = TimeType.Definitive'                          Hour = (regexMatch.Groups["hours"].Value.Length > 0 ? hours : null)'                          Minute = (regexMatch.Groups["minutes"].Value.Length > 0 ? minutes : null)'                          Second = (regexMatch.Groups["seconds"].Value.Length > 0 ? seconds : null)                      }'                      Text = phrase.Text'                      Similarity = 100.0F                  });              }
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Time,TimeVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Time\TimeVariableTemporalPrimitiveToken.cs,Parse,The following statement contains a magic number: if (regexMatch.Success == true) {                  int? hours = regexMatch.Groups["hours"].Value.Length > 0 ? int.Parse(regexMatch.Groups["hours"].Value) : 0;                  int? minutes = regexMatch.Groups["minutes"].Value.Length > 0 ? int.Parse(regexMatch.Groups["minutes"].Value) : 0;                  int? seconds = regexMatch.Groups["seconds"].Value.Length > 0 ? int.Parse(regexMatch.Groups["seconds"].Value) : 0;                    if (String.Compare(regexMatch.Groups["meridiem"].Value' "pm"' StringComparison.OrdinalIgnoreCase) == 0 && hours < 12) {                      hours += 12;                  }                  else if (String.Compare(regexMatch.Groups["meridiem"].Value' "am"' StringComparison.OrdinalIgnoreCase) == 0) {                      if (hours == 12) {                          hours = 0;                      }                  }                    hours %= 24;                    phrase.Add(new TimeVariableTemporalPrimitiveToken() {                      Pattern = new FuzzyDateTimePattern() {                          Rule = TimeType.Definitive'                          Hour = (regexMatch.Groups["hours"].Value.Length > 0 ? hours : null)'                          Minute = (regexMatch.Groups["minutes"].Value.Length > 0 ? minutes : null)'                          Second = (regexMatch.Groups["seconds"].Value.Length > 0 ? seconds : null)                      }'                      Text = phrase.Text'                      Similarity = 100.0F                  });              }
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Time,TimeVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Time\TimeVariableTemporalPrimitiveToken.cs,Parse,The following statement contains a magic number: if (regexMatch.Success == true) {                  int? hours = regexMatch.Groups["hours"].Value.Length > 0 ? int.Parse(regexMatch.Groups["hours"].Value) : 0;                  int? minutes = regexMatch.Groups["minutes"].Value.Length > 0 ? int.Parse(regexMatch.Groups["minutes"].Value) : 0;                  int? seconds = regexMatch.Groups["seconds"].Value.Length > 0 ? int.Parse(regexMatch.Groups["seconds"].Value) : 0;                    if (String.Compare(regexMatch.Groups["meridiem"].Value' "pm"' StringComparison.OrdinalIgnoreCase) == 0 && hours < 12) {                      hours += 12;                  }                  else if (String.Compare(regexMatch.Groups["meridiem"].Value' "am"' StringComparison.OrdinalIgnoreCase) == 0) {                      if (hours == 12) {                          hours = 0;                      }                  }                    hours %= 24;                    phrase.Add(new TimeVariableTemporalPrimitiveToken() {                      Pattern = new FuzzyDateTimePattern() {                          Rule = TimeType.Definitive'                          Hour = (regexMatch.Groups["hours"].Value.Length > 0 ? hours : null)'                          Minute = (regexMatch.Groups["minutes"].Value.Length > 0 ? minutes : null)'                          Second = (regexMatch.Groups["seconds"].Value.Length > 0 ? seconds : null)                      }'                      Text = phrase.Text'                      Similarity = 100.0F                  });              }
Magic Number,Potato.Fuzzy.Tokens.Primitive.Temporal.Variable.Time,TimeVariableTemporalPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\Temporal\Variable\Time\TimeVariableTemporalPrimitiveToken.cs,Parse,The following statement contains a magic number: if (regexMatch.Success == true) {                  int? hours = regexMatch.Groups["hours"].Value.Length > 0 ? int.Parse(regexMatch.Groups["hours"].Value) : 0;                  int? minutes = regexMatch.Groups["minutes"].Value.Length > 0 ? int.Parse(regexMatch.Groups["minutes"].Value) : 0;                  int? seconds = regexMatch.Groups["seconds"].Value.Length > 0 ? int.Parse(regexMatch.Groups["seconds"].Value) : 0;                    if (String.Compare(regexMatch.Groups["meridiem"].Value' "pm"' StringComparison.OrdinalIgnoreCase) == 0 && hours < 12) {                      hours += 12;                  }                  else if (String.Compare(regexMatch.Groups["meridiem"].Value' "am"' StringComparison.OrdinalIgnoreCase) == 0) {                      if (hours == 12) {                          hours = 0;                      }                  }                    hours %= 24;                    phrase.Add(new TimeVariableTemporalPrimitiveToken() {                      Pattern = new FuzzyDateTimePattern() {                          Rule = TimeType.Definitive'                          Hour = (regexMatch.Groups["hours"].Value.Length > 0 ? hours : null)'                          Minute = (regexMatch.Groups["minutes"].Value.Length > 0 ? minutes : null)'                          Second = (regexMatch.Groups["seconds"].Value.Length > 0 ? seconds : null)                      }'                      Text = phrase.Text'                      Similarity = 100.0F                  });              }
Magic Number,Potato.Fuzzy.Tokens.Primitive,StringPrimitiveToken,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Tokens\Primitive\StringPrimitiveToken.cs,Parse,The following statement contains a magic number: if (phrase.Text.Length > 0 && phrase.Text.First() == '"' && phrase.Text.Last() == '"' && phrase.Refactoring == false) {                  phrase.Add(new StringPrimitiveToken() {                      Text = phrase.Text.Trim('"')'                      Similarity = 80'                      Value = phrase.Text.Trim('"')                  });              }
Magic Number,Potato.Fuzzy.Utils,StringExtensions,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Utils\StringExtensions.cs,StringSimularityRatio,The following statement contains a magic number: double levenshtein = s.ToLower().Sift3Distance(t.ToLower()' 5);
Magic Number,Potato.Fuzzy.Utils,StringExtensions,C:\repos\Myrcon_Procon-2-Potato\src\Potato.Fuzzy\Utils\StringExtensions.cs,StringSimularitySubsetBonusRatio,The following statement contains a magic number: double levenshtein = s.ToLower().Sift3Distance(t.ToLower()' 5);
