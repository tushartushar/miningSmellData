Implementation smell,Namespace,Class,File,Method,Description
Long Method,Potato.Net.Shared.Test.TestSerialization.TestJson,TestProtocolEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestProtocolEventArgs.cs,TestSingleDepthPopulationSerialization,The method has 101 lines of code.
Long Statement,Potato.Net.Shared.Test.Mocks,MockPacketSerializer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Mocks\MockPacketSerializer.cs,Deserialize,The length of the statement  "            wrapper.Packet.DebugText = String.Format("{0} {1} {2} {3}"' wrapper.Packet.Origin' wrapper.Packet.Type' wrapper.Packet.RequestId' wrapper.Packet.Text);" is 151.
Long Statement,Potato.Net.Shared.Test.Mocks,MockPacketSerializer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Mocks\MockPacketSerializer.cs,Serialize,The length of the statement  "                mockPacket.Packet.DebugText = String.Format("{0} {1} {2} {3}"' mockPacket.Packet.Origin' mockPacket.Packet.Type' mockPacket.Packet.RequestId' mockPacket.Packet.Text);" is 166.
Long Statement,Potato.Net.Shared.Test.TestProtocolAssemblyMetadata,TestLoad,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolAssemblyMetadata\TestLoad.cs,TestProtocolTypesLoadedSuccessfully,The length of the statement  "            File.WriteAllText(Path.Combine(this.TestPath.FullName' "Myrcon.Protocols.Frostbite.json")' @"{ ""ProtocolTypes"": [ { ""Provider"": ""Myrcon""'""Name"": ""Battlefield 4""'""Type"": ""DiceBattlefield4"" } ] }");" is 210.
Long Statement,Potato.Net.Shared.Test.TestProtocolAssemblyMetadata,TestLoad,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolAssemblyMetadata\TestLoad.cs,TestProtocolTypesDataLoadedSuccessfully,The length of the statement  "            File.WriteAllText(Path.Combine(this.TestPath.FullName' "Myrcon.Protocols.Frostbite.json")' @"{ ""ProtocolTypes"": [ { ""Provider"": ""Myrcon""'""Name"": ""Battlefield 4""'""Type"": ""DiceBattlefield4"" } ] }");" is 210.
Long Statement,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestTwoMapsIdenticalNamesDifferentGameModes,The length of the statement  "            Assert.AreEqual("Fun First Map"' state.Maps.First(item => item.Value.Name == "map1" && item.Value.GameMode.Name == "gamemode1").Value.FriendlyName);" is 148.
Long Statement,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestTwoMapsIdenticalNamesDifferentGameModes,The length of the statement  "            Assert.AreEqual("Fun Second Map"' state.Maps.First(item => item.Value.Name == "map1" && item.Value.GameMode.Name == "gamemode2").Value.FriendlyName);" is 149.
Long Statement,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestTwoMapPoolIdenticalNamesDifferentGameModes,The length of the statement  "            Assert.AreEqual("Fun First Map"' state.MapPool.First(item => item.Value.Name == "map1" && item.Value.GameMode.Name == "gamemode1").Value.FriendlyName);" is 151.
Long Statement,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestTwoMapPoolIdenticalNamesDifferentGameModes,The length of the statement  "            Assert.AreEqual("Fun Second Map"' state.MapPool.First(item => item.Value.Name == "map1" && item.Value.GameMode.Name == "gamemode2").Value.FriendlyName);" is 152.
Long Statement,Potato.Net.Shared.Test.TestShared.TestSandboxProtocolController,TestCreate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestShared\TestSandboxProtocolController\TestCreate.cs,TestSuccess,The length of the statement  "            controller.Create(this.Meta.Assembly.FullName' this.Meta.ProtocolTypes.FirstOrDefault(type => type.Type == "MyrconTestProtocol8"));" is 131.
Long Statement,Potato.Net.Shared.Test.TestShared.TestSandboxProtocolController,TestCreate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestShared\TestSandboxProtocolController\TestCreate.cs,TestSuccessReturnsTrue,The length of the statement  "            var result = controller.Create(this.Meta.Assembly.FullName' this.Meta.ProtocolTypes.FirstOrDefault(type => type.Type == "MyrconTestProtocol8"));" is 144.
Long Statement,Potato.Net.Shared.Test.TestShared.TestSandboxProtocolController,TestCreate,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestShared\TestSandboxProtocolController\TestCreate.cs,TestFailureReturnsFalse,The length of the statement  "            var result = controller.Create("Protocol.dll"' this.Meta.ProtocolTypes.FirstOrDefault(type => type.Type == "MyrconTestProtocol8"));" is 131.
Long Statement,Potato.Net.Shared.Test.Truths,TestTruthsStaticTree,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Truths\TestTruthsStaticTree.cs,TestPotatoCanDoChatsToGroupSubstitutedFalse,The length of the statement  "            Assert.IsFalse(truth.BuildAndTest(new ProtocolAgent()' new KnowsWhenFlow()' new ChatGoal()' new ToFlow()' new GroupAgent()));" is 125.
Long Statement,Potato.Net.Shared.Test.Truths,TestTruthsMerge,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Truths\TestTruthsMerge.cs,TestMergeTwoBranchesWithIdenticalRootNode,The length of the statement  "            Assert.IsTrue(tree.BuildAndTest(new ProtocolAgent()' new KnowsWhenFlow()' new PlayerAgent()' new KillGoal()' new PlayerAgent()));" is 129.
Magic Number,Potato.Net.Shared.Test.Actions.Deferred,WaitingActionsTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Actions\Deferred\WaitingActionsTest.cs,TestFailedDoneAction,The following statement contains a magic number: waitingActions.Mark(new Packet() {                 Origin = PacketOrigin.Client'                 Type = PacketType.Response'                 RequestId = 2             });
Magic Number,Potato.Net.Shared.Test.Actions.Deferred,WaitingActionsTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Actions\Deferred\WaitingActionsTest.cs,TestSuccessfulDoublePacketDoneAction,The following statement contains a magic number: waitingActions.Wait(new NetworkAction()' new List<IPacket>() {                 new Packet() {                     Origin = PacketOrigin.Client'                     Type = PacketType.Request'                     RequestId = 1                 }'                 new Packet() {                     Origin = PacketOrigin.Client'                     Type = PacketType.Request'                     RequestId = 2                 }             });
Magic Number,Potato.Net.Shared.Test.Actions.Deferred,WaitingActionsTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Actions\Deferred\WaitingActionsTest.cs,TestSuccessfulDoublePacketDoneAction,The following statement contains a magic number: waitingActions.Mark(new Packet() {                 Origin = PacketOrigin.Client'                 Type = PacketType.Response'                 RequestId = 2             });
Magic Number,Potato.Net.Shared.Test.Actions.Deferred,WaitingActionsTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Actions\Deferred\WaitingActionsTest.cs,TestFailedDoublePacketActionWithTwoSameResponses,The following statement contains a magic number: waitingActions.Wait(new NetworkAction()' new List<IPacket>() {                 new Packet() {                     Origin = PacketOrigin.Client'                     Type = PacketType.Request'                     RequestId = 1                 }'                 new Packet() {                     Origin = PacketOrigin.Client'                     Type = PacketType.Request'                     RequestId = 2                 }             });
Magic Number,Potato.Net.Shared.Test,ClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\ClientTest.cs,TestPokeNulledValues,The following statement contains a magic number: MockTcpListener listener = new MockTcpListener() {                 Port = 36000             };
Magic Number,Potato.Net.Shared.Test,ClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\ClientTest.cs,TestPokeNulledValues,The following statement contains a magic number: client.Setup(new ClientSetup() {                 Hostname = "localhost"'                 Port = 36000             });
Magic Number,Potato.Net.Shared.Test,ClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\ClientTest.cs,TestPokeNulledValues,The following statement contains a magic number: Assert.IsTrue(connectionWait.WaitOne(1000));
Magic Number,Potato.Net.Shared.Test,ClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\ClientTest.cs,TestPokeNewValues,The following statement contains a magic number: MockTcpListener listener = new MockTcpListener() {                 Port = 36001             };
Magic Number,Potato.Net.Shared.Test,ClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\ClientTest.cs,TestPokeNewValues,The following statement contains a magic number: client.Setup(new ClientSetup() {                 Hostname = "localhost"'                 Port = 36001             });
Magic Number,Potato.Net.Shared.Test,ClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\ClientTest.cs,TestPokeNewValues,The following statement contains a magic number: Assert.IsTrue(connectionWait.WaitOne(1000));
Magic Number,Potato.Net.Shared.Test,ClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\ClientTest.cs,TestPokeOldValues,The following statement contains a magic number: MockTcpListener listener = new MockTcpListener() {                 Port = 36002             };
Magic Number,Potato.Net.Shared.Test,ClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\ClientTest.cs,TestPokeOldValues,The following statement contains a magic number: client.Setup(new ClientSetup() {                 Hostname = "localhost"'                 Port = 36002             });
Magic Number,Potato.Net.Shared.Test,ClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\ClientTest.cs,TestPokeOldValues,The following statement contains a magic number: Assert.IsTrue(connectionWait.WaitOne(1000));
Magic Number,Potato.Net.Shared.Test,MarkManagerTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\MarkManagerTest.cs,TestTwentyMarkListClosedWindow,The following statement contains a magic number: count < 20
Magic Number,Potato.Net.Shared.Test,PacketDispatcherTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketDispatcherTest.cs,TestMockPacketDispatcherSuccess,The following statement contains a magic number: dispatcher.Dispatch(new MockPacket() {                 Packet = {                     Origin = PacketOrigin.Client'                     RequestId = 2'                     Type = PacketType.Request'                 }'                 Text = "TestMockPacketDispatcherSuccess"'             });
Magic Number,Potato.Net.Shared.Test,PacketDispatcherTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketDispatcherTest.cs,TestMockPacketDispatcherDifferentOriginFailed,The following statement contains a magic number: dispatcher.Dispatch(new MockPacket() {                 Packet = {                     Origin = PacketOrigin.Server'                     RequestId = 2'                     Type = PacketType.Request'                 }'                 Text = "TestMockPacketDispatcherDifferentOriginFailed"'             });
Magic Number,Potato.Net.Shared.Test,PacketDispatcherTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketDispatcherTest.cs,TestMockPacketDispatcherMissingDispatchNameFailed,The following statement contains a magic number: dispatcher.Dispatch(new MockPacket() {                 Packet = {                     Origin = PacketOrigin.Server'                     RequestId = 2'                     Type = PacketType.Request'                 }'                 Text = "ThisDoesNotExist"'             });
Magic Number,Potato.Net.Shared.Test,PacketDispatcherTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketDispatcherTest.cs,TestMockPacketDispatcherReplacedDispatcherSuccess,The following statement contains a magic number: dispatcher.Append(new Dictionary<IPacketDispatch' Action<IPacketWrapper' IPacketWrapper>>() {                 {                      new PacketDispatch() {                         Name = "TestMockPacketDispatcherReplacedDispatcherSuccess"' Origin = PacketOrigin.Client                     }' (request' response) => {                         handler = 2;                     }                  }             });
Magic Number,Potato.Net.Shared.Test,PacketDispatcherTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketDispatcherTest.cs,TestMockPacketDispatcherReplacedDispatcherSuccess,The following statement contains a magic number: dispatcher.Dispatch(new MockPacket() {                 Packet = {                     Origin = PacketOrigin.Client'                     RequestId = 2'                     Type = PacketType.Request'                 }'                 Text = "TestMockPacketDispatcherReplacedDispatcherSuccess"             });
Magic Number,Potato.Net.Shared.Test,PacketDispatcherTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketDispatcherTest.cs,TestMockPacketDispatcherReplacedDispatcherSuccess,The following statement contains a magic number: Assert.AreEqual(2' handler);
Magic Number,Potato.Net.Shared.Test,PacketQueueTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketQueueTest.cs,TestPacketReceivedRemovedAndPopped,The following statement contains a magic number: IPacketWrapper secondPacketRequest = new MockPacket() {                 Packet = {                     Origin = PacketOrigin.Client'                     Type = PacketType.Request'                     RequestId = 2                 }             };
Magic Number,Potato.Net.Shared.Test,PacketQueueTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketQueueTest.cs,TestRestartConnectionOnQueueFailureTruey,The following statement contains a magic number: IPacketWrapper packet = new MockPacket() {                 Packet = {                     Origin = PacketOrigin.Client'                     Type = PacketType.Request'                     RequestId = 1'                     Stamp = DateTime.Now.AddMinutes(-5)                 }             };
Magic Number,Potato.Net.Shared.Test,PacketQueueTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketQueueTest.cs,TestGetRequestPacketDoesNotExists,The following statement contains a magic number: IPacketWrapper packetResponse = new MockPacket() {                 Packet = {                     Origin = PacketOrigin.Client'                     Type = PacketType.Response'                     RequestId = 2                 }             };
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestSingleAppendPacketStreamPush,The following statement contains a magic number: Assert.AreEqual(2' stream.Data.Length);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestMultipleAppendPacketStreamPush,The following statement contains a magic number: stream.Push(new byte[] { 0x03' 0x04 }' 2);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestMultipleAppendPacketStreamPush,The following statement contains a magic number: Assert.AreEqual(4' stream.Data.Length);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestMultipleAppendPacketStreamPush,The following statement contains a magic number: Assert.AreEqual(0x03' stream.Data[2]);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestMultipleAppendPacketStreamPush,The following statement contains a magic number: Assert.AreEqual(0x04' stream.Data[3]);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestSinglePacketStreamPeekShift,The following statement contains a magic number: Assert.AreEqual(4' stream.Data.Length);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestSinglePacketStreamPeekShift,The following statement contains a magic number: Assert.AreEqual(0x03' stream.Data[2]);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestSinglePacketStreamPeekShift,The following statement contains a magic number: Assert.AreEqual(0x04' stream.Data[3]);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestMultiplePacketStreamPeekShift,The following statement contains a magic number: Assert.AreEqual(0x01' stream.PeekShift(2).First());
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestMultiplePacketStreamPeekShift,The following statement contains a magic number: Assert.AreEqual(0x02' stream.PeekShift(2).Last());
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestMultiplePacketStreamPeekShift,The following statement contains a magic number: Assert.AreEqual(4' stream.Data.Length);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestMultiplePacketStreamPeekShift,The following statement contains a magic number: Assert.AreEqual(0x03' stream.Data[2]);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestMultiplePacketStreamPeekShift,The following statement contains a magic number: Assert.AreEqual(0x04' stream.Data[3]);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestMultiplePacketStreamPeekShiftZeroBytes,The following statement contains a magic number: Assert.AreEqual(4' stream.Data.Length);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestMultiplePacketStreamPeekShiftZeroBytes,The following statement contains a magic number: Assert.AreEqual(0x03' stream.Data[2]);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestMultiplePacketStreamPeekShiftZeroBytes,The following statement contains a magic number: Assert.AreEqual(0x04' stream.Data[3]);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestIndexBoundsPacketStreamPeekShift,The following statement contains a magic number: Assert.IsNull(stream.PeekShift(5));
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestSinglePacketStreamShift,The following statement contains a magic number: Assert.AreEqual(3' stream.Data.Length);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestSinglePacketStreamShift,The following statement contains a magic number: Assert.AreEqual(0x04' stream.Data[2]);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestMultiplePacketStreamShift,The following statement contains a magic number: byte[] data = stream.Shift(2);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestMultiplePacketStreamShift,The following statement contains a magic number: Assert.AreEqual(2' stream.Data.Length);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestAllDataPacketStreamShift,The following statement contains a magic number: byte[] data = stream.Shift(4);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestAllDataPacketStreamShift,The following statement contains a magic number: Assert.AreEqual(0x03' data[2]);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestAllDataPacketStreamShift,The following statement contains a magic number: Assert.AreEqual(0x04' data[3]);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestMultiplePacketStreamShiftZeroBytes,The following statement contains a magic number: Assert.AreEqual(4' stream.Data.Length);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestMultiplePacketStreamShiftZeroBytes,The following statement contains a magic number: Assert.AreEqual(0x03' stream.Data[2]);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestMultiplePacketStreamShiftZeroBytes,The following statement contains a magic number: Assert.AreEqual(0x04' stream.Data[3]);
Magic Number,Potato.Net.Shared.Test,PacketStreamTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\PacketStreamTest.cs,TestIndexBoundsPacketStreamShift,The following statement contains a magic number: Assert.IsNull(stream.Shift(5));
Magic Number,Potato.Net.Shared.Test,TcpClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TcpClientTest.cs,CreateAndConnect,The following statement contains a magic number: connectionWait.WaitOne(1000);
Magic Number,Potato.Net.Shared.Test,TcpClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TcpClientTest.cs,TestBasicPacketRecievedByListener,The following statement contains a magic number: this.CreateAndConnect(35000' out listener' out client);
Magic Number,Potato.Net.Shared.Test,TcpClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TcpClientTest.cs,TestBasicPacketRecievedByListener,The following statement contains a magic number: Assert.IsTrue(packetWait.WaitOne(1000));
Magic Number,Potato.Net.Shared.Test,TcpClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TcpClientTest.cs,TestBasicPacketDeserializedByListener,The following statement contains a magic number: this.CreateAndConnect(35001' out listener' out client);
Magic Number,Potato.Net.Shared.Test,TcpClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TcpClientTest.cs,TestBasicPacketDeserializedByListener,The following statement contains a magic number: Assert.IsTrue(packetWait.WaitOne(1000));
Magic Number,Potato.Net.Shared.Test,TcpClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TcpClientTest.cs,TestBasicPacketListenerReply,The following statement contains a magic number: this.CreateAndConnect(35002' out listener' out client);
Magic Number,Potato.Net.Shared.Test,TcpClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TcpClientTest.cs,TestBasicPacketListenerReply,The following statement contains a magic number: Assert.IsTrue(packetWait.WaitOne(1000));
Magic Number,Potato.Net.Shared.Test,TcpClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TcpClientTest.cs,TestGracefulCloseOnServerDisconnect,The following statement contains a magic number: this.CreateAndConnect(35003' out listener' out client);
Magic Number,Potato.Net.Shared.Test,TcpClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TcpClientTest.cs,TestGracefulCloseOnServerDisconnect,The following statement contains a magic number: Assert.IsTrue(stateChangeWait.WaitOne(1000));
Magic Number,Potato.Net.Shared.Test,UdpClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\UdpClientTest.cs,CreateAndConnect,The following statement contains a magic number: Assert.IsTrue(connectionWait.WaitOne(1000));
Magic Number,Potato.Net.Shared.Test,UdpClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\UdpClientTest.cs,TestBasicPacketRecievedByListener,The following statement contains a magic number: this.CreateAndConnect(36000' out listener' out client);
Magic Number,Potato.Net.Shared.Test,UdpClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\UdpClientTest.cs,TestBasicPacketRecievedByListener,The following statement contains a magic number: Assert.IsTrue(packetWait.WaitOne(1000));
Magic Number,Potato.Net.Shared.Test,UdpClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\UdpClientTest.cs,TestBasicPacketDeserializedByListener,The following statement contains a magic number: this.CreateAndConnect(36001' out listener' out client);
Magic Number,Potato.Net.Shared.Test,UdpClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\UdpClientTest.cs,TestBasicPacketDeserializedByListener,The following statement contains a magic number: Assert.IsTrue(packetWait.WaitOne(1000));
Magic Number,Potato.Net.Shared.Test,UdpClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\UdpClientTest.cs,TestBasicPacketListenerReply,The following statement contains a magic number: this.CreateAndConnect(36002' out listener' out client);
Magic Number,Potato.Net.Shared.Test,UdpClientTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\UdpClientTest.cs,TestBasicPacketListenerReply,The following statement contains a magic number: Assert.IsTrue(packetWait.WaitOne(1000));
Magic Number,Potato.Net.Shared.Test.Mocks,MockPacketSerializer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Mocks\MockPacketSerializer.cs,MockPacketSerializer,The following statement contains a magic number: this.PacketHeaderSize = 16;
Magic Number,Potato.Net.Shared.Test.Mocks,MockPacketSerializer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Mocks\MockPacketSerializer.cs,Deserialize,The following statement contains a magic number: int length = BitConverter.ToInt32(packetData' 12);
Magic Number,Potato.Net.Shared.Test.Mocks,MockPacketSerializer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Mocks\MockPacketSerializer.cs,Deserialize,The following statement contains a magic number: MockPacket wrapper = new MockPacket {                 Packet = {                     Origin = (PacketOrigin)BitConverter.ToInt32(packetData' 0)'                     Type = (PacketType)BitConverter.ToInt32(packetData' 4)'                     RequestId = BitConverter.ToInt32(packetData' 8)                 }'                 Text = Encoding.ASCII.GetString(packetData' (int)this.PacketHeaderSize' length)             };
Magic Number,Potato.Net.Shared.Test.Mocks,MockPacketSerializer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Mocks\MockPacketSerializer.cs,Deserialize,The following statement contains a magic number: MockPacket wrapper = new MockPacket {                 Packet = {                     Origin = (PacketOrigin)BitConverter.ToInt32(packetData' 0)'                     Type = (PacketType)BitConverter.ToInt32(packetData' 4)'                     RequestId = BitConverter.ToInt32(packetData' 8)                 }'                 Text = Encoding.ASCII.GetString(packetData' (int)this.PacketHeaderSize' length)             };
Magic Number,Potato.Net.Shared.Test.Mocks,MockPacketSerializer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Mocks\MockPacketSerializer.cs,Serialize,The following statement contains a magic number: mockPacket.Packet.RequestId = 111;
Magic Number,Potato.Net.Shared.Test.Mocks,MockPacketSerializer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Mocks\MockPacketSerializer.cs,Serialize,The following statement contains a magic number: BitConverter.GetBytes((int)mockPacket.Packet.Type).CopyTo(serialized' 4);
Magic Number,Potato.Net.Shared.Test.Mocks,MockPacketSerializer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Mocks\MockPacketSerializer.cs,Serialize,The following statement contains a magic number: BitConverter.GetBytes(mockPacket.Packet.RequestId.Value).CopyTo(serialized' 8);
Magic Number,Potato.Net.Shared.Test.Mocks,MockPacketSerializer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Mocks\MockPacketSerializer.cs,Serialize,The following statement contains a magic number: BitConverter.GetBytes(mockPacket.Text.Length).CopyTo(serialized' 12);
Magic Number,Potato.Net.Shared.Test.Mocks,MockPacketSerializer,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Mocks\MockPacketSerializer.cs,ReadPacketSize,The following statement contains a magic number: length = BitConverter.ToUInt32(packetData' 12) + this.PacketHeaderSize;
Magic Number,Potato.Net.Shared.Test.Models,PlayerTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Models\PlayerTest.cs,TestKdr,The following statement contains a magic number: PlayerModel player = new PlayerModel() {                 Kills = 10'                 Deaths = 5             };
Magic Number,Potato.Net.Shared.Test.Models,PlayerTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Models\PlayerTest.cs,TestKdr,The following statement contains a magic number: PlayerModel player = new PlayerModel() {                 Kills = 10'                 Deaths = 5             };
Magic Number,Potato.Net.Shared.Test.Models,PlayerTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Models\PlayerTest.cs,TestKdr,The following statement contains a magic number: Assert.AreEqual(2' player.Kdr);
Magic Number,Potato.Net.Shared.Test.Models,PlayerTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Models\PlayerTest.cs,TestKdrNoDeaths,The following statement contains a magic number: PlayerModel player = new PlayerModel() {                 Kills = 10'                 Deaths = 0             };
Magic Number,Potato.Net.Shared.Test.Models,PlayerTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Models\PlayerTest.cs,TestKdrNoDeaths,The following statement contains a magic number: Assert.AreEqual(10' player.Kdr);
Magic Number,Potato.Net.Shared.Test.Models,Point3DTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Models\Point3DTest.cs,TestPointParsed,The following statement contains a magic number: Assert.AreEqual(2' point.Y);
Magic Number,Potato.Net.Shared.Test.Models,Point3DTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Models\Point3DTest.cs,TestPointParsed,The following statement contains a magic number: Assert.AreEqual(3' point.Z);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestRedefine,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestRedefine.cs,TestRedefineBuildsPlayerOutliers,The following statement contains a magic number: state.Players.TryAdd("1"' new PlayerModel() {                 Uid = "1"'                 Kills = 2             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestRedefine,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestRedefine.cs,TestRedefineBuildsPlayerOutliers,The following statement contains a magic number: state.Players.TryAdd("2"' new PlayerModel() {                 Uid = "2"'                 Kills = 4             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestRedefine,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestRedefine.cs,TestRedefineBuildsPlayerOutliers,The following statement contains a magic number: state.Players.TryAdd("3"' new PlayerModel() {                 Uid = "3"'                 Kills = 4             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestRedefine,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestRedefine.cs,TestRedefineBuildsPlayerOutliers,The following statement contains a magic number: state.Players.TryAdd("4"' new PlayerModel() {                 Uid = "4"'                 Kills = 4             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestRedefine,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestRedefine.cs,TestRedefineBuildsPlayerOutliers,The following statement contains a magic number: state.Players.TryAdd("5"' new PlayerModel() {                 Uid = "5"'                 Kills = 5             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestRedefine,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestRedefine.cs,TestRedefineBuildsPlayerOutliers,The following statement contains a magic number: state.Players.TryAdd("6"' new PlayerModel() {                 Uid = "6"'                 Kills = 5             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestRedefine,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestRedefine.cs,TestRedefineBuildsPlayerOutliers,The following statement contains a magic number: state.Players.TryAdd("7"' new PlayerModel() {                 Uid = "7"'                 Kills = 7             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestRedefine,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestRedefine.cs,TestRedefineBuildsPlayerOutliers,The following statement contains a magic number: state.Players.TryAdd("8"' new PlayerModel() {                 Uid = "8"'                 Kills = 9             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestRedefine,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestRedefine.cs,TestRedefineBuildsPlayerOutliers,The following statement contains a magic number: Assert.AreEqual(5.0f' state.Players["8"].Outliers.First().Mean);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestRedefine,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestRedefine.cs,TestRedefineBuildsPlayerOutliers,The following statement contains a magic number: Assert.AreEqual(2.0f' state.Players["8"].Outliers.First().StandardDeviation);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestRedefine,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestRedefine.cs,TestRedefineBuildsPlayerOutliers,The following statement contains a magic number: Assert.AreEqual(2.0f' state.Players["8"].Outliers.First().Deviations);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestRedefine,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestRedefine.cs,TestRedefineBuildsPlayerOutliers,The following statement contains a magic number: Assert.AreEqual(9.0f' state.Players["8"].Outliers.First().Value);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestSet,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestSet.cs,TestSinglePlayersSet,The following statement contains a magic number: state.Players.TryAdd("2"' new PlayerModel() {                 Uid = "2"'                 Score = 2             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestSet,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestSet.cs,TestSingleUidBansSet,The following statement contains a magic number: state.Bans.TryAdd("Time/Uid/2"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Time                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Uid = "2"'                             Score = 2                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestSet,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestSet.cs,TestSingleIpBansSet,The following statement contains a magic number: state.Bans.TryAdd("Time/Ip/2"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Time                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Ip = "2"'                             Score = 2                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestSet,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestSet.cs,TestSingleNameBansSet,The following statement contains a magic number: state.Bans.TryAdd("Time/Name/2"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Time                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Name = "2"'                             Score = 2                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestRemoved,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestRemoved.cs,TestSinglePlayersRemoved,The following statement contains a magic number: state.Players.TryAdd("2"' new PlayerModel() {                 Uid = "2"'                 Score = 2             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestRemoved,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestRemoved.cs,TestSinglePlayersRemoved,The following statement contains a magic number: Assert.AreEqual(2' state.Players.First().Value.Score);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestRemoved,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestRemoved.cs,TestSingleUidBansRemoved,The following statement contains a magic number: state.Bans.TryAdd("Time/Uid/2"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Time                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Uid = "2"'                             Score = 2                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestRemoved,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestRemoved.cs,TestSingleIpBansRemoved,The following statement contains a magic number: state.Bans.TryAdd("Time/Ip/2"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Time                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Ip = "2"'                             Score = 2                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestRemoved,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestRemoved.cs,TestSingleNameBansRemoved,The following statement contains a magic number: state.Bans.TryAdd("Time/Name/2"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Time                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Name = "2"'                             Score = 2                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultiplePlayersModified,The following statement contains a magic number: state.Players.TryAdd("2"' new PlayerModel() {                 Uid = "2"'                 Score = 2             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultiplePlayersModified,The following statement contains a magic number: segment.Players.TryAdd("1"' new PlayerModel() {                 Uid = "1"'                 Score = 100             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultiplePlayersModified,The following statement contains a magic number: segment.Players.TryAdd("2"' new PlayerModel() {                 Uid = "2"'                 Score = 200             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultiplePlayersModified,The following statement contains a magic number: Assert.AreEqual(2' state.Players.Count);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultiplePlayersModified,The following statement contains a magic number: Assert.AreEqual(100' state.Players.First(item => item.Value.Uid == "1").Value.Score);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultiplePlayersModified,The following statement contains a magic number: Assert.AreEqual(200' state.Players.First(item => item.Value.Uid == "2").Value.Score);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestPlayerModifiedAndPlayerInserted,The following statement contains a magic number: segment.Players.TryAdd("1"' new PlayerModel() {                 Uid = "1"'                 Score = 100             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestPlayerModifiedAndPlayerInserted,The following statement contains a magic number: segment.Players.TryAdd("2"' new PlayerModel() {                 Uid = "2"'                 Score = 200             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestPlayerModifiedAndPlayerInserted,The following statement contains a magic number: Assert.AreEqual(2' state.Players.Count);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestPlayerModifiedAndPlayerInserted,The following statement contains a magic number: Assert.AreEqual(100' state.Players.First(item => item.Value.Uid == "1").Value.Score);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestPlayerModifiedAndPlayerInserted,The following statement contains a magic number: Assert.AreEqual(200' state.Players.First(item => item.Value.Uid == "2").Value.Score);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleMapsModified,The following statement contains a magic number: Assert.AreEqual(2' state.Maps.Count);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMapModifiedAndMapInserted,The following statement contains a magic number: Assert.AreEqual(2' state.Maps.Count);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestTwoMapsIdenticalNamesDifferentGameModes,The following statement contains a magic number: Assert.AreEqual(2' state.Maps.Count);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleUidBansModified,The following statement contains a magic number: state.Bans.TryAdd("Permanent/Uid/2"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Permanent                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Uid = "2"'                             Score = 2                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleUidBansModified,The following statement contains a magic number: segment.Bans.TryAdd("Permanent/Uid/1"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Permanent                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Uid = "1"'                             Score = 3                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleUidBansModified,The following statement contains a magic number: segment.Bans.TryAdd("Permanent/Uid/2"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Permanent                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Uid = "2"'                             Score = 4                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleUidBansModified,The following statement contains a magic number: Assert.AreEqual(2' state.Bans.Count);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleUidBansModified,The following statement contains a magic number: Assert.AreEqual(3' state.Bans.First(ban => ban.Key == "Permanent/Uid/1").Value.Scope.Players.First().Score);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleUidBansModified,The following statement contains a magic number: Assert.AreEqual(4' state.Bans.Last(ban => ban.Key == "Permanent/Uid/2").Value.Scope.Players.First().Score);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestUidBanModifiedAndUidBanInserted,The following statement contains a magic number: segment.Bans.TryAdd("Permanent/Uid/1"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Permanent                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Uid = "1"'                             Score = 3                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestUidBanModifiedAndUidBanInserted,The following statement contains a magic number: segment.Bans.TryAdd("Permanent/Uid/2"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Permanent                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Uid = "2"'                             Score = 4                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestUidBanModifiedAndUidBanInserted,The following statement contains a magic number: Assert.AreEqual(2' state.Bans.Count);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestUidBanModifiedAndUidBanInserted,The following statement contains a magic number: Assert.AreEqual(3' state.Bans.First(ban => ban.Key == "Permanent/Uid/1").Value.Scope.Players.First().Score);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestUidBanModifiedAndUidBanInserted,The following statement contains a magic number: Assert.AreEqual(4' state.Bans.Last(ban => ban.Key == "Permanent/Uid/2").Value.Scope.Players.First().Score);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleIpBansModified,The following statement contains a magic number: state.Bans.TryAdd("Permanent/Ip/2"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Permanent                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Ip = "2"'                             Score = 2                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleIpBansModified,The following statement contains a magic number: segment.Bans.TryAdd("Permanent/Ip/1"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Permanent                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Ip = "1"'                             Score = 3                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleIpBansModified,The following statement contains a magic number: segment.Bans.TryAdd("Permanent/Ip/2"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Permanent                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Ip = "2"'                             Score = 4                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleIpBansModified,The following statement contains a magic number: Assert.AreEqual(2' state.Bans.Count);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleIpBansModified,The following statement contains a magic number: Assert.AreEqual(3' state.Bans.First(ban => ban.Key == "Permanent/Ip/1").Value.Scope.Players.First().Score);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleIpBansModified,The following statement contains a magic number: Assert.AreEqual(4' state.Bans.Last(ban => ban.Key == "Permanent/Ip/2").Value.Scope.Players.First().Score);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestIpBanModifiedAndIpBanInserted,The following statement contains a magic number: segment.Bans.TryAdd("Permanent/Ip/1"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Permanent                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Ip = "1"'                             Score = 3                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestIpBanModifiedAndIpBanInserted,The following statement contains a magic number: segment.Bans.TryAdd("Permanent/Ip/2"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Permanent                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Ip = "2"'                             Score = 4                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestIpBanModifiedAndIpBanInserted,The following statement contains a magic number: Assert.AreEqual(2' state.Bans.Count);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestIpBanModifiedAndIpBanInserted,The following statement contains a magic number: Assert.AreEqual(3' state.Bans.First(ban => ban.Key == "Permanent/Ip/1").Value.Scope.Players.First().Score);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestIpBanModifiedAndIpBanInserted,The following statement contains a magic number: Assert.AreEqual(4' state.Bans.Last(ban => ban.Key == "Permanent/Ip/2").Value.Scope.Players.First().Score);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleNameBansModified,The following statement contains a magic number: state.Bans.TryAdd("Permanent/Name/2"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Permanent                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Name = "2"'                             Score = 2                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleNameBansModified,The following statement contains a magic number: segment.Bans.TryAdd("Permanent/Name/1"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Permanent                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Name = "1"'                             Score = 3                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleNameBansModified,The following statement contains a magic number: segment.Bans.TryAdd("Permanent/Name/2"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Permanent                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Name = "2"'                             Score = 4                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleNameBansModified,The following statement contains a magic number: Assert.AreEqual(2' state.Bans.Count);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleNameBansModified,The following statement contains a magic number: Assert.AreEqual(3' state.Bans.First(ban => ban.Key == "Permanent/Name/1").Value.Scope.Players.First().Score);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleNameBansModified,The following statement contains a magic number: Assert.AreEqual(4' state.Bans.Last(ban => ban.Key == "Permanent/Name/2").Value.Scope.Players.First().Score);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestNameBanModifiedAndNameBanInserted,The following statement contains a magic number: segment.Bans.TryAdd("Permanent/Name/1"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Permanent                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Name = "1"'                             Score = 3                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestNameBanModifiedAndNameBanInserted,The following statement contains a magic number: segment.Bans.TryAdd("Permanent/Name/2"' new BanModel() {                 Scope = {                     Times = {                         new TimeSubsetModel() {                             Context = TimeSubsetContext.Permanent                         }                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel() {                             Name = "2"'                             Score = 4                         }                     }                 }             });
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestNameBanModifiedAndNameBanInserted,The following statement contains a magic number: Assert.AreEqual(2' state.Bans.Count);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestNameBanModifiedAndNameBanInserted,The following statement contains a magic number: Assert.AreEqual(3' state.Bans.First(ban => ban.Key == "Permanent/Name/1").Value.Scope.Players.First().Score);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestNameBanModifiedAndNameBanInserted,The following statement contains a magic number: Assert.AreEqual(4' state.Bans.Last(ban => ban.Key == "Permanent/Name/2").Value.Scope.Players.First().Score);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleMapPoolModified,The following statement contains a magic number: Assert.AreEqual(2' state.MapPool.Count);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMapPoolModifiedAndMapPoolInserted,The following statement contains a magic number: Assert.AreEqual(2' state.MapPool.Count);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestTwoMapPoolIdenticalNamesDifferentGameModes,The following statement contains a magic number: Assert.AreEqual(2' state.MapPool.Count);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleGameModePoolModified,The following statement contains a magic number: Assert.AreEqual(2' state.GameModePool.Count);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestGameModePoolModifiedAndGameModePoolInserted,The following statement contains a magic number: Assert.AreEqual(2' state.GameModePool.Count);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleGroupPoolModified,The following statement contains a magic number: Assert.AreEqual(2' state.Groups.Count);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestGroupPoolModifiedAndGroupPoolInserted,The following statement contains a magic number: Assert.AreEqual(2' state.Groups.Count);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestMultipleItemPoolModified,The following statement contains a magic number: Assert.AreEqual(2' state.Items.Count);
Magic Number,Potato.Net.Shared.Test.TestProtocolState,TestModified,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestProtocolState\TestModified.cs,TestItemPoolModifiedAndItemPoolInserted,The following statement contains a magic number: Assert.AreEqual(2' state.Items.Count);
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestProtocolEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestProtocolEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ProtocolEventArgs() {                 Now = {                     Bans = new List<BanModel>() {                         new BanModel()                     }'                     Chats = new List<ChatModel>() {                         new ChatModel()                     }'                     Items = new List<ItemModel>() {                         new ItemModel()                     }'                     Kicks = new List<KickModel>() {                         new KickModel()                     }'                     Kills = new List<KillModel>() {                         new KillModel()                     }'                     Moves = new List<MoveModel>() {                         new MoveModel()                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel()                     }'                     Points = new List<Point3DModel>() {                         new Point3DModel()                     }'                     Settings = new List<Settings>() {                         new Settings()                     }'                     Spawns = new List<SpawnModel>() {                         new SpawnModel()                     }                 }'                 Then = {                     Bans = new List<BanModel>() {                         new BanModel()                     }'                     Chats = new List<ChatModel>() {                         new ChatModel()                     }'                     Items = new List<ItemModel>() {                         new ItemModel()                     }'                     Kicks = new List<KickModel>() {                         new KickModel()                     }'                     Kills = new List<KillModel>() {                         new KillModel()                     }'                     Moves = new List<MoveModel>() {                         new MoveModel()                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel()                     }'                     Points = new List<Point3DModel>() {                         new Point3DModel()                     }'                     Settings = new List<Settings>() {                         new Settings()                     }'                     Spawns = new List<SpawnModel>() {                         new SpawnModel()                     }                 }'                 StateDifference = new ProtocolStateDifference()'                 ProtocolEventType = ProtocolEventType.ProtocolBanlistUpdated'                 ProtocolType = new ProtocolType()'                 Stamp = new DateTime(2000' 10' 10' 10' 10' 10)             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestProtocolEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestProtocolEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ProtocolEventArgs() {                 Now = {                     Bans = new List<BanModel>() {                         new BanModel()                     }'                     Chats = new List<ChatModel>() {                         new ChatModel()                     }'                     Items = new List<ItemModel>() {                         new ItemModel()                     }'                     Kicks = new List<KickModel>() {                         new KickModel()                     }'                     Kills = new List<KillModel>() {                         new KillModel()                     }'                     Moves = new List<MoveModel>() {                         new MoveModel()                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel()                     }'                     Points = new List<Point3DModel>() {                         new Point3DModel()                     }'                     Settings = new List<Settings>() {                         new Settings()                     }'                     Spawns = new List<SpawnModel>() {                         new SpawnModel()                     }                 }'                 Then = {                     Bans = new List<BanModel>() {                         new BanModel()                     }'                     Chats = new List<ChatModel>() {                         new ChatModel()                     }'                     Items = new List<ItemModel>() {                         new ItemModel()                     }'                     Kicks = new List<KickModel>() {                         new KickModel()                     }'                     Kills = new List<KillModel>() {                         new KillModel()                     }'                     Moves = new List<MoveModel>() {                         new MoveModel()                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel()                     }'                     Points = new List<Point3DModel>() {                         new Point3DModel()                     }'                     Settings = new List<Settings>() {                         new Settings()                     }'                     Spawns = new List<SpawnModel>() {                         new SpawnModel()                     }                 }'                 StateDifference = new ProtocolStateDifference()'                 ProtocolEventType = ProtocolEventType.ProtocolBanlistUpdated'                 ProtocolType = new ProtocolType()'                 Stamp = new DateTime(2000' 10' 10' 10' 10' 10)             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestProtocolEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestProtocolEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ProtocolEventArgs() {                 Now = {                     Bans = new List<BanModel>() {                         new BanModel()                     }'                     Chats = new List<ChatModel>() {                         new ChatModel()                     }'                     Items = new List<ItemModel>() {                         new ItemModel()                     }'                     Kicks = new List<KickModel>() {                         new KickModel()                     }'                     Kills = new List<KillModel>() {                         new KillModel()                     }'                     Moves = new List<MoveModel>() {                         new MoveModel()                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel()                     }'                     Points = new List<Point3DModel>() {                         new Point3DModel()                     }'                     Settings = new List<Settings>() {                         new Settings()                     }'                     Spawns = new List<SpawnModel>() {                         new SpawnModel()                     }                 }'                 Then = {                     Bans = new List<BanModel>() {                         new BanModel()                     }'                     Chats = new List<ChatModel>() {                         new ChatModel()                     }'                     Items = new List<ItemModel>() {                         new ItemModel()                     }'                     Kicks = new List<KickModel>() {                         new KickModel()                     }'                     Kills = new List<KillModel>() {                         new KillModel()                     }'                     Moves = new List<MoveModel>() {                         new MoveModel()                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel()                     }'                     Points = new List<Point3DModel>() {                         new Point3DModel()                     }'                     Settings = new List<Settings>() {                         new Settings()                     }'                     Spawns = new List<SpawnModel>() {                         new SpawnModel()                     }                 }'                 StateDifference = new ProtocolStateDifference()'                 ProtocolEventType = ProtocolEventType.ProtocolBanlistUpdated'                 ProtocolType = new ProtocolType()'                 Stamp = new DateTime(2000' 10' 10' 10' 10' 10)             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestProtocolEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestProtocolEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ProtocolEventArgs() {                 Now = {                     Bans = new List<BanModel>() {                         new BanModel()                     }'                     Chats = new List<ChatModel>() {                         new ChatModel()                     }'                     Items = new List<ItemModel>() {                         new ItemModel()                     }'                     Kicks = new List<KickModel>() {                         new KickModel()                     }'                     Kills = new List<KillModel>() {                         new KillModel()                     }'                     Moves = new List<MoveModel>() {                         new MoveModel()                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel()                     }'                     Points = new List<Point3DModel>() {                         new Point3DModel()                     }'                     Settings = new List<Settings>() {                         new Settings()                     }'                     Spawns = new List<SpawnModel>() {                         new SpawnModel()                     }                 }'                 Then = {                     Bans = new List<BanModel>() {                         new BanModel()                     }'                     Chats = new List<ChatModel>() {                         new ChatModel()                     }'                     Items = new List<ItemModel>() {                         new ItemModel()                     }'                     Kicks = new List<KickModel>() {                         new KickModel()                     }'                     Kills = new List<KillModel>() {                         new KillModel()                     }'                     Moves = new List<MoveModel>() {                         new MoveModel()                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel()                     }'                     Points = new List<Point3DModel>() {                         new Point3DModel()                     }'                     Settings = new List<Settings>() {                         new Settings()                     }'                     Spawns = new List<SpawnModel>() {                         new SpawnModel()                     }                 }'                 StateDifference = new ProtocolStateDifference()'                 ProtocolEventType = ProtocolEventType.ProtocolBanlistUpdated'                 ProtocolType = new ProtocolType()'                 Stamp = new DateTime(2000' 10' 10' 10' 10' 10)             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestProtocolEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestProtocolEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ProtocolEventArgs() {                 Now = {                     Bans = new List<BanModel>() {                         new BanModel()                     }'                     Chats = new List<ChatModel>() {                         new ChatModel()                     }'                     Items = new List<ItemModel>() {                         new ItemModel()                     }'                     Kicks = new List<KickModel>() {                         new KickModel()                     }'                     Kills = new List<KillModel>() {                         new KillModel()                     }'                     Moves = new List<MoveModel>() {                         new MoveModel()                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel()                     }'                     Points = new List<Point3DModel>() {                         new Point3DModel()                     }'                     Settings = new List<Settings>() {                         new Settings()                     }'                     Spawns = new List<SpawnModel>() {                         new SpawnModel()                     }                 }'                 Then = {                     Bans = new List<BanModel>() {                         new BanModel()                     }'                     Chats = new List<ChatModel>() {                         new ChatModel()                     }'                     Items = new List<ItemModel>() {                         new ItemModel()                     }'                     Kicks = new List<KickModel>() {                         new KickModel()                     }'                     Kills = new List<KillModel>() {                         new KillModel()                     }'                     Moves = new List<MoveModel>() {                         new MoveModel()                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel()                     }'                     Points = new List<Point3DModel>() {                         new Point3DModel()                     }'                     Settings = new List<Settings>() {                         new Settings()                     }'                     Spawns = new List<SpawnModel>() {                         new SpawnModel()                     }                 }'                 StateDifference = new ProtocolStateDifference()'                 ProtocolEventType = ProtocolEventType.ProtocolBanlistUpdated'                 ProtocolType = new ProtocolType()'                 Stamp = new DateTime(2000' 10' 10' 10' 10' 10)             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestProtocolEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestProtocolEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ProtocolEventArgs() {                 Now = {                     Bans = new List<BanModel>() {                         new BanModel()                     }'                     Chats = new List<ChatModel>() {                         new ChatModel()                     }'                     Items = new List<ItemModel>() {                         new ItemModel()                     }'                     Kicks = new List<KickModel>() {                         new KickModel()                     }'                     Kills = new List<KillModel>() {                         new KillModel()                     }'                     Moves = new List<MoveModel>() {                         new MoveModel()                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel()                     }'                     Points = new List<Point3DModel>() {                         new Point3DModel()                     }'                     Settings = new List<Settings>() {                         new Settings()                     }'                     Spawns = new List<SpawnModel>() {                         new SpawnModel()                     }                 }'                 Then = {                     Bans = new List<BanModel>() {                         new BanModel()                     }'                     Chats = new List<ChatModel>() {                         new ChatModel()                     }'                     Items = new List<ItemModel>() {                         new ItemModel()                     }'                     Kicks = new List<KickModel>() {                         new KickModel()                     }'                     Kills = new List<KillModel>() {                         new KillModel()                     }'                     Moves = new List<MoveModel>() {                         new MoveModel()                     }'                     Players = new List<PlayerModel>() {                         new PlayerModel()                     }'                     Points = new List<Point3DModel>() {                         new Point3DModel()                     }'                     Settings = new List<Settings>() {                         new Settings()                     }'                     Spawns = new List<SpawnModel>() {                         new SpawnModel()                     }                 }'                 StateDifference = new ProtocolStateDifference()'                 ProtocolEventType = ProtocolEventType.ProtocolBanlistUpdated'                 ProtocolType = new ProtocolType()'                 Stamp = new DateTime(2000' 10' 10' 10' 10' 10)             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestProtocolEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestProtocolEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 10' 10' 10' 10)' deseralized.Stamp);
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestProtocolEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestProtocolEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 10' 10' 10' 10)' deseralized.Stamp);
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestProtocolEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestProtocolEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 10' 10' 10' 10)' deseralized.Stamp);
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestProtocolEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestProtocolEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 10' 10' 10' 10)' deseralized.Stamp);
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestProtocolEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestProtocolEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 10' 10' 10' 10)' deseralized.Stamp);
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestProtocolEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestProtocolEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 10' 10' 10' 10)' deseralized.Stamp);
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestClientEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestClientEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ClientEventArgs() {                 ConnectionState = ConnectionState.ConnectionLoggedIn'                 EventType = ClientEventType.ClientConnectionStateChange'                 Now = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }'                 Then = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestClientEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestClientEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ClientEventArgs() {                 ConnectionState = ConnectionState.ConnectionLoggedIn'                 EventType = ClientEventType.ClientConnectionStateChange'                 Now = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }'                 Then = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestClientEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestClientEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ClientEventArgs() {                 ConnectionState = ConnectionState.ConnectionLoggedIn'                 EventType = ClientEventType.ClientConnectionStateChange'                 Now = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }'                 Then = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestClientEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestClientEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ClientEventArgs() {                 ConnectionState = ConnectionState.ConnectionLoggedIn'                 EventType = ClientEventType.ClientConnectionStateChange'                 Now = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }'                 Then = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestClientEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestClientEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ClientEventArgs() {                 ConnectionState = ConnectionState.ConnectionLoggedIn'                 EventType = ClientEventType.ClientConnectionStateChange'                 Now = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }'                 Then = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestClientEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestClientEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ClientEventArgs() {                 ConnectionState = ConnectionState.ConnectionLoggedIn'                 EventType = ClientEventType.ClientConnectionStateChange'                 Now = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }'                 Then = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestClientEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestClientEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ClientEventArgs() {                 ConnectionState = ConnectionState.ConnectionLoggedIn'                 EventType = ClientEventType.ClientConnectionStateChange'                 Now = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }'                 Then = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestClientEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestClientEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ClientEventArgs() {                 ConnectionState = ConnectionState.ConnectionLoggedIn'                 EventType = ClientEventType.ClientConnectionStateChange'                 Now = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }'                 Then = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestClientEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestClientEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ClientEventArgs() {                 ConnectionState = ConnectionState.ConnectionLoggedIn'                 EventType = ClientEventType.ClientConnectionStateChange'                 Now = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }'                 Then = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestClientEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestClientEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ClientEventArgs() {                 ConnectionState = ConnectionState.ConnectionLoggedIn'                 EventType = ClientEventType.ClientConnectionStateChange'                 Now = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }'                 Then = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestClientEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestClientEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ClientEventArgs() {                 ConnectionState = ConnectionState.ConnectionLoggedIn'                 EventType = ClientEventType.ClientConnectionStateChange'                 Now = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }'                 Then = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestClientEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestClientEventArgs.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ClientEventArgs() {                 ConnectionState = ConnectionState.ConnectionLoggedIn'                 EventType = ClientEventType.ClientConnectionStateChange'                 Now = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }'                 Then = {                     Actions = new List<INetworkAction>() {                         new NetworkAction() {                             Uid = Guid.Empty                         }                     }'                     Exceptions = new List<String>() {                         ""                     }'                     Packets = new List<IPacket>() {                         new Packet() {                             Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                         }                     }                 }             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestClientEventData,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestClientEventData.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ClientEventData() {                 Actions = new List<INetworkAction>() {                     new NetworkAction() {                         Uid = Guid.Empty                     }                 }'                 Exceptions = new List<String>() {                     ""                 }'                 Packets = new List<IPacket>() {                     new Packet() {                         Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                     }                 }             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestClientEventData,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestClientEventData.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ClientEventData() {                 Actions = new List<INetworkAction>() {                     new NetworkAction() {                         Uid = Guid.Empty                     }                 }'                 Exceptions = new List<String>() {                     ""                 }'                 Packets = new List<IPacket>() {                     new Packet() {                         Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                     }                 }             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestClientEventData,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestClientEventData.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ClientEventData() {                 Actions = new List<INetworkAction>() {                     new NetworkAction() {                         Uid = Guid.Empty                     }                 }'                 Exceptions = new List<String>() {                     ""                 }'                 Packets = new List<IPacket>() {                     new Packet() {                         Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                     }                 }             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestClientEventData,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestClientEventData.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ClientEventData() {                 Actions = new List<INetworkAction>() {                     new NetworkAction() {                         Uid = Guid.Empty                     }                 }'                 Exceptions = new List<String>() {                     ""                 }'                 Packets = new List<IPacket>() {                     new Packet() {                         Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                     }                 }             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestClientEventData,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestClientEventData.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ClientEventData() {                 Actions = new List<INetworkAction>() {                     new NetworkAction() {                         Uid = Guid.Empty                     }                 }'                 Exceptions = new List<String>() {                     ""                 }'                 Packets = new List<IPacket>() {                     new Packet() {                         Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                     }                 }             };
Magic Number,Potato.Net.Shared.Test.TestSerialization.TestJson,TestClientEventData,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestClientEventData.cs,TestSingleDepthPopulationSerialization,The following statement contains a magic number: var original = new ClientEventData() {                 Actions = new List<INetworkAction>() {                     new NetworkAction() {                         Uid = Guid.Empty                     }                 }'                 Exceptions = new List<String>() {                     ""                 }'                 Packets = new List<IPacket>() {                     new Packet() {                         Stamp = new DateTime(2000' 10' 10' 10' 10' 10)                     }                 }             };
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestSinglePropertyOutlierDataAttachedToPlayer,The following statement contains a magic number: samples.TryAdd("1"' new PlayerModel() {                 Uid = "1"'                 Kills = 2             });
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestSinglePropertyOutlierDataAttachedToPlayer,The following statement contains a magic number: samples.TryAdd("2"' new PlayerModel() {                 Uid = "2"'                 Kills = 4             });
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestSinglePropertyOutlierDataAttachedToPlayer,The following statement contains a magic number: samples.TryAdd("3"' new PlayerModel() {                 Uid = "3"'                 Kills = 4             });
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestSinglePropertyOutlierDataAttachedToPlayer,The following statement contains a magic number: samples.TryAdd("4"' new PlayerModel() {                 Uid = "4"'                 Kills = 4             });
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestSinglePropertyOutlierDataAttachedToPlayer,The following statement contains a magic number: samples.TryAdd("5"' new PlayerModel() {                 Uid = "5"'                 Kills = 5             });
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestSinglePropertyOutlierDataAttachedToPlayer,The following statement contains a magic number: samples.TryAdd("6"' new PlayerModel() {                 Uid = "6"'                 Kills = 5             });
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestSinglePropertyOutlierDataAttachedToPlayer,The following statement contains a magic number: samples.TryAdd("7"' new PlayerModel() {                 Uid = "7"'                 Kills = 7             });
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestSinglePropertyOutlierDataAttachedToPlayer,The following statement contains a magic number: samples.TryAdd("8"' new PlayerModel() {                 Uid = "8"'                 Kills = 9             });
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestSinglePropertyOutlierDataAttachedToPlayer,The following statement contains a magic number: Assert.AreEqual(5.0f' samples["8"].Outliers.First().Mean);
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestSinglePropertyOutlierDataAttachedToPlayer,The following statement contains a magic number: Assert.AreEqual(2.0f' samples["8"].Outliers.First().StandardDeviation);
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestSinglePropertyOutlierDataAttachedToPlayer,The following statement contains a magic number: Assert.AreEqual(2.0f' samples["8"].Outliers.First().Deviations);
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestSinglePropertyOutlierDataAttachedToPlayer,The following statement contains a magic number: Assert.AreEqual(9.0f' samples["8"].Outliers.First().Value);
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestAllPropertiesOutlierDataAttachedToPlayer,The following statement contains a magic number: samples.TryAdd("1"' new PlayerModel() {                 Uid = "1"'                 Kills = 2             });
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestAllPropertiesOutlierDataAttachedToPlayer,The following statement contains a magic number: samples.TryAdd("2"' new PlayerModel() {                 Uid = "2"'                 Kills = 4             });
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestAllPropertiesOutlierDataAttachedToPlayer,The following statement contains a magic number: samples.TryAdd("3"' new PlayerModel() {                 Uid = "3"'                 Kills = 4             });
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestAllPropertiesOutlierDataAttachedToPlayer,The following statement contains a magic number: samples.TryAdd("4"' new PlayerModel() {                 Uid = "4"'                 Kills = 4             });
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestAllPropertiesOutlierDataAttachedToPlayer,The following statement contains a magic number: samples.TryAdd("5"' new PlayerModel() {                 Uid = "5"'                 Kills = 5             });
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestAllPropertiesOutlierDataAttachedToPlayer,The following statement contains a magic number: samples.TryAdd("6"' new PlayerModel() {                 Uid = "6"'                 Kills = 5             });
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestAllPropertiesOutlierDataAttachedToPlayer,The following statement contains a magic number: samples.TryAdd("7"' new PlayerModel() {                 Uid = "7"'                 Kills = 7             });
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestAllPropertiesOutlierDataAttachedToPlayer,The following statement contains a magic number: samples.TryAdd("8"' new PlayerModel() {                 Uid = "8"'                 Kills = 9             });
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestAllPropertiesOutlierDataAttachedToPlayer,The following statement contains a magic number: Assert.AreEqual(5.0f' samples["8"].Outliers.First().Mean);
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestAllPropertiesOutlierDataAttachedToPlayer,The following statement contains a magic number: Assert.AreEqual(2.0f' samples["8"].Outliers.First().StandardDeviation);
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestAllPropertiesOutlierDataAttachedToPlayer,The following statement contains a magic number: Assert.AreEqual(2.0f' samples["8"].Outliers.First().Deviations);
Magic Number,Potato.Net.Shared.Test.TestStatistics,TestPlayers,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestStatistics\TestPlayers.cs,TestAllPropertiesOutlierDataAttachedToPlayer,The following statement contains a magic number: Assert.AreEqual(9.0f' samples["8"].Outliers.First().Value);
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestStdDev,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestStdDev.cs,TestIntegerStandardDeviationCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("1"' new PlayerModel() {                 Uid = "1"'                 Kills = 2             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestStdDev,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestStdDev.cs,TestIntegerStandardDeviationCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("2"' new PlayerModel() {                 Uid = "2"'                 Kills = 4             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestStdDev,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestStdDev.cs,TestIntegerStandardDeviationCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("3"' new PlayerModel() {                 Uid = "3"'                 Kills = 4             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestStdDev,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestStdDev.cs,TestIntegerStandardDeviationCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("4"' new PlayerModel() {                 Uid = "4"'                 Kills = 4             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestStdDev,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestStdDev.cs,TestIntegerStandardDeviationCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("5"' new PlayerModel() {                 Uid = "5"'                 Kills = 5             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestStdDev,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestStdDev.cs,TestIntegerStandardDeviationCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("6"' new PlayerModel() {                 Uid = "6"'                 Kills = 5             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestStdDev,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestStdDev.cs,TestIntegerStandardDeviationCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("7"' new PlayerModel() {                 Uid = "7"'                 Kills = 7             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestStdDev,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestStdDev.cs,TestIntegerStandardDeviationCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("8"' new PlayerModel() {                 Uid = "8"'                 Kills = 9             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestStdDev,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestStdDev.cs,TestIntegerStandardDeviationCalculatedCorrectly,The following statement contains a magic number: Assert.AreEqual(2.0f' samples.Values.StdDev(model => model.Kills' mean));
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestStdDev,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestStdDev.cs,TestFloatMeanCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("1"' new PlayerModel() {                 Uid = "1"'                 Kills = 2'                 Deaths = 1             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestStdDev,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestStdDev.cs,TestFloatMeanCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("2"' new PlayerModel() {                 Uid = "2"'                 Kills = 4'                 Deaths = 1             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestStdDev,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestStdDev.cs,TestFloatMeanCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("3"' new PlayerModel() {                 Uid = "3"'                 Kills = 4'                 Deaths = 1             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestStdDev,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestStdDev.cs,TestFloatMeanCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("4"' new PlayerModel() {                 Uid = "4"'                 Kills = 4'                 Deaths = 1             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestStdDev,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestStdDev.cs,TestFloatMeanCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("5"' new PlayerModel() {                 Uid = "5"'                 Kills = 5'                 Deaths = 1             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestStdDev,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestStdDev.cs,TestFloatMeanCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("6"' new PlayerModel() {                 Uid = "6"'                 Kills = 5'                 Deaths = 1             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestStdDev,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestStdDev.cs,TestFloatMeanCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("7"' new PlayerModel() {                 Uid = "7"'                 Kills = 7'                 Deaths = 1             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestStdDev,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestStdDev.cs,TestFloatMeanCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("8"' new PlayerModel() {                 Uid = "8"'                 Kills = 9'                 Deaths = 1             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestStdDev,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestStdDev.cs,TestFloatMeanCalculatedCorrectly,The following statement contains a magic number: Assert.AreEqual(2.0f' samples.Values.StdDev(model => model.Kdr' mean));
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestMean,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestMean.cs,TestIntegerMeanCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("1"' new PlayerModel() {                 Uid = "1"'                 Kills = 5             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestMean,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestMean.cs,TestIntegerMeanCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("2"' new PlayerModel() {                 Uid = "2"'                 Kills = 10             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestMean,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestMean.cs,TestIntegerMeanCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("3"' new PlayerModel() {                 Uid = "3"'                 Kills = 15             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestMean,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestMean.cs,TestIntegerMeanCalculatedCorrectly,The following statement contains a magic number: Assert.AreEqual(10.0f' samples.Values.Mean(model => model.Kills));
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestMean,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestMean.cs,TestFloatMeanCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("1"' new PlayerModel() {                 Uid = "1"'                 Kills = 5'                 Deaths = 1             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestMean,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestMean.cs,TestFloatMeanCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("2"' new PlayerModel() {                 Uid = "2"'                 Kills = 10'                 Deaths = 1             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestMean,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestMean.cs,TestFloatMeanCalculatedCorrectly,The following statement contains a magic number: samples.TryAdd("3"' new PlayerModel() {                 Uid = "3"'                 Kills = 15'                 Deaths = 1             });
Magic Number,Potato.Net.Shared.Test.Utils.CollectionExtensions,TestMean,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\CollectionExtensions\TestMean.cs,TestFloatMeanCalculatedCorrectly,The following statement contains a magic number: Assert.AreEqual(10.0f' samples.Values.Mean(model => model.Kdr));
Magic Number,Potato.Net.Shared.Test.Utils.StringExtensions,StringExtensionsTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\StringExtensions\StringExtensionsTest.cs,TestRandomStringSuccess,The following statement contains a magic number: generated.Add(Shared.Utils.StringExtensions.RandomString(30));
Magic Number,Potato.Net.Shared.Test.Utils.StringExtensions,StringExtensionsTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\StringExtensions\StringExtensionsTest.cs,TestRandomStringSuccess,The following statement contains a magic number: count < 20
Magic Number,Potato.Net.Shared.Test.Utils.StringExtensions,StringExtensionsTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\StringExtensions\StringExtensionsTest.cs,TestRandomStringSuccess,The following statement contains a magic number: Assert.AreEqual(20' generated.Distinct().Count());
Magic Number,Potato.Net.Shared.Test.Utils.StringExtensions,StringExtensionsTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\StringExtensions\StringExtensionsTest.cs,TestWordWrapSuccess,The following statement contains a magic number: List<string> wrapped = "Die Brösel eines Käsekuchen verzücken mich.".WordWrap(30);
Magic Number,Potato.Net.Shared.Test.Utils.StringExtensions,StringExtensionsTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\StringExtensions\StringExtensionsTest.cs,TestWordWrapSuccess,The following statement contains a magic number: Assert.AreEqual(2' wrapped.Count);
Magic Number,Potato.Net.Shared.Test.Utils.StringExtensions,WordifyTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\StringExtensions\WordifyTest.cs,TestWordifyDoubleWord,The following statement contains a magic number: Assert.AreEqual(2' words.Count);
Magic Number,Potato.Net.Shared.Test.Utils.StringExtensions,WordifyTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\StringExtensions\WordifyTest.cs,TestWordifyTripleWordFirstTwoQuoted,The following statement contains a magic number: Assert.AreEqual(2' words.Count);
Magic Number,Potato.Net.Shared.Test.Utils.StringExtensions,WordifyTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\StringExtensions\WordifyTest.cs,TestWordifyTripleWordLastTwoQuoted,The following statement contains a magic number: Assert.AreEqual(2' words.Count);
Magic Number,Potato.Net.Shared.Test.Utils.StringExtensions,WordifyTest,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Utils\StringExtensions\WordifyTest.cs,TestWordifyQuoteWithinQuote,The following statement contains a magic number: Assert.AreEqual(2' words.Count);
Duplicate Code,Potato.Net.Shared.Test.TestSerialization.TestJson,TestProtocolEventArgs,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\TestSerialization\TestJson\TestProtocolEventArgs.cs,TestSingleDepthPopulationSerialization,The method contains a code clone-set at the following line numbers (starting from the method definition): ((4' 34)' (36' 66))
Missing Default,Potato.Net.Shared.Test.Mocks.Game,MockActionDispatchGame,C:\research\architectureSmells\repos\Myrcon_Procon-2-Potato\src\Potato.Net.Shared.Test\Mocks\Game\MockActionDispatchGame.cs,DispatchAction,The following switch statement is missing a default case: switch (action.ActionType) {                 case NetworkActionType.NetworkTextSay:                     wrappers.Add(                         this.WrapPacket(new Packet() {                             Text = "Chat"                         })                     );                     break;                 case NetworkActionType.NetworkPlayerKick:                     wrappers.Add(                         this.WrapPacket(new Packet() {                             Text = "Kick"                         })                     );                     break;                 case NetworkActionType.NetworkPlayerBan:                     wrappers.Add(                         this.WrapPacket(new Packet() {                             Text = "Ban"                         })                     );                     break;                 case NetworkActionType.NetworkMapAppend:                     wrappers.Add(                         this.WrapPacket(new Packet() {                             Text = "Map"                         })                     );                     break;                 case NetworkActionType.NetworkPlayerKill:                     wrappers.Add(                         this.WrapPacket(new Packet() {                             Text = "Kill"                         })                     );                     break;                 case NetworkActionType.NetworkPlayerMove:                     wrappers.Add(                         this.WrapPacket(new Packet() {                             Text = "Move"                         })                     );                     break;                 case NetworkActionType.NetworkPacketSend:                     wrappers.Add(                         this.WrapPacket(new Packet() {                             Text = "Raw"                         })                     );                     break;             }
