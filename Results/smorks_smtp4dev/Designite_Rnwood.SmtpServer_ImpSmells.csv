Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Rnwood.SmtpServer.Extensions.Auth,AuthVerb,C:\repos\smorks_smtp4dev\Rnwood.SmtpServer\Extensions\Auth\AuthExtension.cs,Process,Cyclomatic complexity of the method is 8
Long Parameter List,Rnwood.SmtpServer,ASCIISevenBitTruncatingEncoding,C:\repos\smorks_smtp4dev\Rnwood.SmtpServer\ASCIISevenBitTruncatingEncoding.cs,GetBytes,The method has 5 parameters. Parameters: chars' charIndex' charCount' bytes' byteIndex
Long Parameter List,Rnwood.SmtpServer,ASCIISevenBitTruncatingEncoding,C:\repos\smorks_smtp4dev\Rnwood.SmtpServer\ASCIISevenBitTruncatingEncoding.cs,GetChars,The method has 5 parameters. Parameters: bytes' byteIndex' byteCount' chars' charIndex
Long Statement,Rnwood.SmtpServer,DefaultServerBehaviour,C:\repos\smorks_smtp4dev\Rnwood.SmtpServer\DefaultServerBehaviour.cs,GetExtensions,The length of the statement  "            List<IExtension> extensions = new List<IExtension>(new IExtension[] { new EightBitMimeExtension()' new SizeExtension() }); " is 122.
Long Statement,Rnwood.SmtpServer,RcptToVerb,C:\repos\smorks_smtp4dev\Rnwood.SmtpServer\Verbs\RcptToVerb.cs,Process,The length of the statement  "                !command.ArgumentsText.EndsWith(">") || command.ArgumentsText.Count(c => c == '<') != command.ArgumentsText.Count(c => c == '>')) " is 129.
Long Statement,Rnwood.SmtpServer.Extensions.Auth,AuthVerb,C:\repos\smorks_smtp4dev\Rnwood.SmtpServer\Extensions\Auth\AuthExtension.cs,Process,The length of the statement  "                        connection.WriteResponse(new SmtpResponse(StandardSmtpResponseCode.SyntaxErrorInCommandArguments' "Authentication aborted")); " is 125.
Complex Conditional,Rnwood.SmtpServer,RcptToVerb,C:\repos\smorks_smtp4dev\Rnwood.SmtpServer\Verbs\RcptToVerb.cs,Process,The conditional expression  "command.ArgumentsText == "<>" || !command.ArgumentsText.StartsWith("<") ||                  !command.ArgumentsText.EndsWith(">") || command.ArgumentsText.Count(c => c == '<') != command.ArgumentsText.Count(c => c == '>')"  is complex.
Magic Number,Rnwood.SmtpServer,Buffer,C:\repos\smorks_smtp4dev\Rnwood.SmtpServer\ASCIISevenBitTruncatingEncoding.cs,FallbackChar,The following statement contains a magic number: return (char)(charUnknown & 127);
Magic Number,Rnwood.SmtpServer,Buffer,C:\repos\smorks_smtp4dev\Rnwood.SmtpServer\ASCIISevenBitTruncatingEncoding.cs,Fallback,The following statement contains a magic number: _fallbackString = Encoding.ASCII.GetString(bytesUnknown.Select(b => (byte)( b & 127)).ToArray());
Magic Number,Rnwood.SmtpServer,DefaultServerBehaviour,C:\repos\smorks_smtp4dev\Rnwood.SmtpServer\DefaultServerBehaviour.cs,GetReceiveTimeout,The following statement contains a magic number: return (int)new TimeSpan(0' 5' 0).TotalMilliseconds;
Magic Number,Rnwood.SmtpServer,ParameterParser,C:\repos\smorks_smtp4dev\Rnwood.SmtpServer\ParameterParser.cs,Parse,The following statement contains a magic number: foreach (string token in tokens)              {                  string[] tokenParts = token.Split(new[] {'='}' 2' StringSplitOptions.RemoveEmptyEntries);                  string key = tokenParts[0];                  string value = tokenParts.Length > 1 ? tokenParts[1] : null;                  _parameters.Add(new Parameter(key' value));              }
Magic Number,Rnwood.SmtpServer,RcptToVerb,C:\repos\smorks_smtp4dev\Rnwood.SmtpServer\Verbs\RcptToVerb.cs,Process,The following statement contains a magic number: string address = command.ArgumentsText.Remove(0' 1).Remove(command.ArgumentsText.Length - 2);
Magic Number,Rnwood.SmtpServer.Extensions.Auth,CramMd5MechanismProcessor,C:\repos\smorks_smtp4dev\Rnwood.SmtpServer\Extensions\Auth\CramMd5Mechanism.cs,ProcessResponse,The following statement contains a magic number: if (_challenge == null)              {                  StringBuilder challenge = new StringBuilder();                  challenge.Append(_random.Next(Int16.MaxValue));                  challenge.Append(".");                  challenge.Append(DateTime.Now.Ticks.ToString());                  challenge.Append("@");                  challenge.Append(Connection.Server.Behaviour.DomainName);                  _challenge = challenge.ToString();                    string base64Challenge = Convert.ToBase64String(Encoding.ASCII.GetBytes(challenge.ToString()));                  Connection.WriteResponse(new SmtpResponse(StandardSmtpResponseCode.AuthenticationContinue'                                                                     base64Challenge));                  return AuthMechanismProcessorStatus.Continue;              }              else              {                  string response = DecodeBase64(data);                  string[] responseparts = response.Split(' ');                    if (responseparts.Length != 2)                  {                      throw new SmtpServerException(new SmtpResponse(StandardSmtpResponseCode.AuthenticationFailure'                                                                     "Response in incorrect format - should be USERNAME RESPONSE"));                  }                    string username = responseparts[0];                  string hash = responseparts[1];                    Credentials = new CramMd5AuthenticationRequest(username' _challenge' hash);                    AuthenticationResult result =                      Connection.Server.Behaviour.ValidateAuthenticationCredentials(Connection' Credentials);                    switch (result)                  {                      case AuthenticationResult.Success:                          return AuthMechanismProcessorStatus.Success;                      default:                          return AuthMechanismProcessorStatus.Failed;                  }              }
Magic Number,Rnwood.SmtpServer.Extensions.Auth,PlainMechanismProcessor,C:\repos\smorks_smtp4dev\Rnwood.SmtpServer\Extensions\Auth\PlainMechanism.cs,ProcessResponse,The following statement contains a magic number: if (decodedDataParts.Length != 3)              {                  throw new SmtpServerException(new SmtpResponse(StandardSmtpResponseCode.AuthenticationFailure'                                                                 "Auth data in incorrect format"));              }
Magic Number,Rnwood.SmtpServer.Extensions.Auth,PlainMechanismProcessor,C:\repos\smorks_smtp4dev\Rnwood.SmtpServer\Extensions\Auth\PlainMechanism.cs,ProcessResponse,The following statement contains a magic number: string password = decodedDataParts[2];
