Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Doo.Environments,DataEnvironment,C:\repos\avogab_dooHTM\framework\Environments\DataEnvironment.cs,Step,Cyclomatic complexity of the method is 8
Complex Method,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,Initialize,Cyclomatic complexity of the method is 15
Complex Method,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,Cyclomatic complexity of the method is 55
Complex Method,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,Step,Cyclomatic complexity of the method is 16
Complex Method,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,sourceTypeComboBox_SelectedIndexChanged,Cyclomatic complexity of the method is 13
Complex Method,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,figureComboBox_SelectedIndexChanged,Cyclomatic complexity of the method is 14
Complex Method,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,movementComboBox_SelectedIndexChanged,Cyclomatic complexity of the method is 14
Complex Method,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,Cyclomatic complexity of the method is 14
Long Statement,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The length of the statement  "		_genImg.Draw (new Ellipse (new Point (x1 + dx / 2' y1 + dy / 2)' new SizeF (x2 - x1' y2 - y1)' 0)' figureColor' thickness); " is 123.
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,ImageEnvironment,The following statement contains a magic number: figureComboBox.SelectedIndex = 2;  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,ImageEnvironment,The following statement contains a magic number: movementComboBox.SelectedIndex = 2;  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: if (_genFigure == GeneratedFigure.VerticalBar) {  	switch (genSizeComboBox.Text) {  	case "small":  		thickness = 3;  		break;  	case "medium":  		thickness = 10;  		break;  	case "big":  		thickness = 20;  		break;  	default:  		break;  	}  	dy = _genHeight;  }  else {  	switch (genSizeComboBox.Text) {  	case "small":  		dx = 16;  		dy = 16;  		break;  	case "medium":  		dx = 32;  		dy = 32;  		break;  	case "big":  		dx = 64;  		dy = 64;  		break;  	}  	thickness = 3;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: if (_genFigure == GeneratedFigure.VerticalBar) {  	switch (genSizeComboBox.Text) {  	case "small":  		thickness = 3;  		break;  	case "medium":  		thickness = 10;  		break;  	case "big":  		thickness = 20;  		break;  	default:  		break;  	}  	dy = _genHeight;  }  else {  	switch (genSizeComboBox.Text) {  	case "small":  		dx = 16;  		dy = 16;  		break;  	case "medium":  		dx = 32;  		dy = 32;  		break;  	case "big":  		dx = 64;  		dy = 64;  		break;  	}  	thickness = 3;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: if (_genFigure == GeneratedFigure.VerticalBar) {  	switch (genSizeComboBox.Text) {  	case "small":  		thickness = 3;  		break;  	case "medium":  		thickness = 10;  		break;  	case "big":  		thickness = 20;  		break;  	default:  		break;  	}  	dy = _genHeight;  }  else {  	switch (genSizeComboBox.Text) {  	case "small":  		dx = 16;  		dy = 16;  		break;  	case "medium":  		dx = 32;  		dy = 32;  		break;  	case "big":  		dx = 64;  		dy = 64;  		break;  	}  	thickness = 3;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: if (_genFigure == GeneratedFigure.VerticalBar) {  	switch (genSizeComboBox.Text) {  	case "small":  		thickness = 3;  		break;  	case "medium":  		thickness = 10;  		break;  	case "big":  		thickness = 20;  		break;  	default:  		break;  	}  	dy = _genHeight;  }  else {  	switch (genSizeComboBox.Text) {  	case "small":  		dx = 16;  		dy = 16;  		break;  	case "medium":  		dx = 32;  		dy = 32;  		break;  	case "big":  		dx = 64;  		dy = 64;  		break;  	}  	thickness = 3;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: if (_genFigure == GeneratedFigure.VerticalBar) {  	switch (genSizeComboBox.Text) {  	case "small":  		thickness = 3;  		break;  	case "medium":  		thickness = 10;  		break;  	case "big":  		thickness = 20;  		break;  	default:  		break;  	}  	dy = _genHeight;  }  else {  	switch (genSizeComboBox.Text) {  	case "small":  		dx = 16;  		dy = 16;  		break;  	case "medium":  		dx = 32;  		dy = 32;  		break;  	case "big":  		dx = 64;  		dy = 64;  		break;  	}  	thickness = 3;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: if (_genFigure == GeneratedFigure.VerticalBar) {  	switch (genSizeComboBox.Text) {  	case "small":  		thickness = 3;  		break;  	case "medium":  		thickness = 10;  		break;  	case "big":  		thickness = 20;  		break;  	default:  		break;  	}  	dy = _genHeight;  }  else {  	switch (genSizeComboBox.Text) {  	case "small":  		dx = 16;  		dy = 16;  		break;  	case "medium":  		dx = 32;  		dy = 32;  		break;  	case "big":  		dx = 64;  		dy = 64;  		break;  	}  	thickness = 3;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: if (_genFigure == GeneratedFigure.VerticalBar) {  	switch (genSizeComboBox.Text) {  	case "small":  		thickness = 3;  		break;  	case "medium":  		thickness = 10;  		break;  	case "big":  		thickness = 20;  		break;  	default:  		break;  	}  	dy = _genHeight;  }  else {  	switch (genSizeComboBox.Text) {  	case "small":  		dx = 16;  		dy = 16;  		break;  	case "medium":  		dx = 32;  		dy = 32;  		break;  	case "big":  		dx = 64;  		dy = 64;  		break;  	}  	thickness = 3;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: if (_genFigure == GeneratedFigure.VerticalBar) {  	switch (genSizeComboBox.Text) {  	case "small":  		thickness = 3;  		break;  	case "medium":  		thickness = 10;  		break;  	case "big":  		thickness = 20;  		break;  	default:  		break;  	}  	dy = _genHeight;  }  else {  	switch (genSizeComboBox.Text) {  	case "small":  		dx = 16;  		dy = 16;  		break;  	case "medium":  		dx = 32;  		dy = 32;  		break;  	case "big":  		dx = 64;  		dy = 64;  		break;  	}  	thickness = 3;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: if (_genFigure == GeneratedFigure.VerticalBar) {  	switch (genSizeComboBox.Text) {  	case "small":  		thickness = 3;  		break;  	case "medium":  		thickness = 10;  		break;  	case "big":  		thickness = 20;  		break;  	default:  		break;  	}  	dy = _genHeight;  }  else {  	switch (genSizeComboBox.Text) {  	case "small":  		dx = 16;  		dy = 16;  		break;  	case "medium":  		dx = 32;  		dy = 32;  		break;  	case "big":  		dx = 64;  		dy = 64;  		break;  	}  	thickness = 3;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: if (_genFigure == GeneratedFigure.VerticalBar) {  	switch (genSizeComboBox.Text) {  	case "small":  		thickness = 3;  		break;  	case "medium":  		thickness = 10;  		break;  	case "big":  		thickness = 20;  		break;  	default:  		break;  	}  	dy = _genHeight;  }  else {  	switch (genSizeComboBox.Text) {  	case "small":  		dx = 16;  		dy = 16;  		break;  	case "medium":  		dx = 32;  		dy = 32;  		break;  	case "big":  		dx = 64;  		dy = 64;  		break;  	}  	thickness = 3;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (genSizeComboBox.Text) {  case "small":  	thickness = 3;  	break;  case "medium":  	thickness = 10;  	break;  case "big":  	thickness = 20;  	break;  default:  	break;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (genSizeComboBox.Text) {  case "small":  	thickness = 3;  	break;  case "medium":  	thickness = 10;  	break;  case "big":  	thickness = 20;  	break;  default:  	break;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (genSizeComboBox.Text) {  case "small":  	thickness = 3;  	break;  case "medium":  	thickness = 10;  	break;  case "big":  	thickness = 20;  	break;  default:  	break;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: thickness = 3;  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: thickness = 10;  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: thickness = 20;  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (genSizeComboBox.Text) {  case "small":  	dx = 16;  	dy = 16;  	break;  case "medium":  	dx = 32;  	dy = 32;  	break;  case "big":  	dx = 64;  	dy = 64;  	break;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (genSizeComboBox.Text) {  case "small":  	dx = 16;  	dy = 16;  	break;  case "medium":  	dx = 32;  	dy = 32;  	break;  case "big":  	dx = 64;  	dy = 64;  	break;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (genSizeComboBox.Text) {  case "small":  	dx = 16;  	dy = 16;  	break;  case "medium":  	dx = 32;  	dy = 32;  	break;  case "big":  	dx = 64;  	dy = 64;  	break;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (genSizeComboBox.Text) {  case "small":  	dx = 16;  	dy = 16;  	break;  case "medium":  	dx = 32;  	dy = 32;  	break;  case "big":  	dx = 64;  	dy = 64;  	break;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (genSizeComboBox.Text) {  case "small":  	dx = 16;  	dy = 16;  	break;  case "medium":  	dx = 32;  	dy = 32;  	break;  case "big":  	dx = 64;  	dy = 64;  	break;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (genSizeComboBox.Text) {  case "small":  	dx = 16;  	dy = 16;  	break;  case "medium":  	dx = 32;  	dy = 32;  	break;  case "big":  	dx = 64;  	dy = 64;  	break;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: dx = 16;  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: dy = 16;  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: dx = 32;  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: dy = 32;  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: dx = 64;  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: dy = 64;  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: thickness = 3;  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (_genMovementType) {  case GeneratedMovementType.Fixed:  	x1 = left;  	y1 = top;  	break;  case GeneratedMovementType.LeftToRight:  	x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top;  	break;  case GeneratedMovementType.CircularClockwise:  	x1 = left + (int)((Math.Sin (-(double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  	break;  case GeneratedMovementType.CircularAnticlockwise:  	x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  	break;  default:  	throw new Exception ();  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (_genMovementType) {  case GeneratedMovementType.Fixed:  	x1 = left;  	y1 = top;  	break;  case GeneratedMovementType.LeftToRight:  	x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top;  	break;  case GeneratedMovementType.CircularClockwise:  	x1 = left + (int)((Math.Sin (-(double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  	break;  case GeneratedMovementType.CircularAnticlockwise:  	x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  	break;  default:  	throw new Exception ();  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (_genMovementType) {  case GeneratedMovementType.Fixed:  	x1 = left;  	y1 = top;  	break;  case GeneratedMovementType.LeftToRight:  	x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top;  	break;  case GeneratedMovementType.CircularClockwise:  	x1 = left + (int)((Math.Sin (-(double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  	break;  case GeneratedMovementType.CircularAnticlockwise:  	x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  	break;  default:  	throw new Exception ();  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (_genMovementType) {  case GeneratedMovementType.Fixed:  	x1 = left;  	y1 = top;  	break;  case GeneratedMovementType.LeftToRight:  	x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top;  	break;  case GeneratedMovementType.CircularClockwise:  	x1 = left + (int)((Math.Sin (-(double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  	break;  case GeneratedMovementType.CircularAnticlockwise:  	x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  	break;  default:  	throw new Exception ();  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (_genMovementType) {  case GeneratedMovementType.Fixed:  	x1 = left;  	y1 = top;  	break;  case GeneratedMovementType.LeftToRight:  	x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top;  	break;  case GeneratedMovementType.CircularClockwise:  	x1 = left + (int)((Math.Sin (-(double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  	break;  case GeneratedMovementType.CircularAnticlockwise:  	x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  	break;  default:  	throw new Exception ();  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (_genMovementType) {  case GeneratedMovementType.Fixed:  	x1 = left;  	y1 = top;  	break;  case GeneratedMovementType.LeftToRight:  	x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top;  	break;  case GeneratedMovementType.CircularClockwise:  	x1 = left + (int)((Math.Sin (-(double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  	break;  case GeneratedMovementType.CircularAnticlockwise:  	x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  	break;  default:  	throw new Exception ();  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (_genMovementType) {  case GeneratedMovementType.Fixed:  	x1 = left;  	y1 = top;  	break;  case GeneratedMovementType.LeftToRight:  	x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top;  	break;  case GeneratedMovementType.CircularClockwise:  	x1 = left + (int)((Math.Sin (-(double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  	break;  case GeneratedMovementType.CircularAnticlockwise:  	x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  	break;  default:  	throw new Exception ();  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (_genMovementType) {  case GeneratedMovementType.Fixed:  	x1 = left;  	y1 = top;  	break;  case GeneratedMovementType.LeftToRight:  	x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top;  	break;  case GeneratedMovementType.CircularClockwise:  	x1 = left + (int)((Math.Sin (-(double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  	break;  case GeneratedMovementType.CircularAnticlockwise:  	x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  	break;  default:  	throw new Exception ();  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (_genMovementType) {  case GeneratedMovementType.Fixed:  	x1 = left;  	y1 = top;  	break;  case GeneratedMovementType.LeftToRight:  	x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top;  	break;  case GeneratedMovementType.CircularClockwise:  	x1 = left + (int)((Math.Sin (-(double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  	break;  case GeneratedMovementType.CircularAnticlockwise:  	x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  	break;  default:  	throw new Exception ();  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (_genMovementType) {  case GeneratedMovementType.Fixed:  	x1 = left;  	y1 = top;  	break;  case GeneratedMovementType.LeftToRight:  	x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top;  	break;  case GeneratedMovementType.CircularClockwise:  	x1 = left + (int)((Math.Sin (-(double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  	break;  case GeneratedMovementType.CircularAnticlockwise:  	x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  	y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  	break;  default:  	throw new Exception ();  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: x1 = left + (int)((Math.Sin (-(double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: x1 = left + (int)((Math.Sin (-(double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: x1 = left + (int)((Math.Sin ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (width - dx));  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: y1 = top + (int)((Math.Cos ((double)_genIndex / totalCycles * 2 * Math.PI) + 1) / 2 * (height - dy));  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: if (noiseCheckBox.Checked) {  	double noiseFactor = 3;  	x1 += (int)(_rnd.NextDouble () * noiseFactor);  	y1 += (int)(_rnd.NextDouble () * noiseFactor);  	x2 += (int)(_rnd.NextDouble () * noiseFactor);  	y2 += (int)(_rnd.NextDouble () * noiseFactor);  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (_genFigure) {  case GeneratedFigure.VerticalBar:  	_genImg.Draw (new LineSegment2D (new Point (x1' y1)' new Point (x1' y2))' figureColor' thickness);  	break;  case GeneratedFigure.ObliqueLine:  	_genImg.Draw (new LineSegment2D (new Point (x1' y1)' new Point (x2' y2))' figureColor' thickness);  	break;  case GeneratedFigure.Square:  	_genImg.Draw (new Rectangle (x1' y1' x2 - x1' y2 - y1)' figureColor' thickness);  	break;  case GeneratedFigure.Circle:  	_genImg.Draw (new Ellipse (new Point (x1 + dx / 2' y1 + dy / 2)' new SizeF (x2 - x1' y2 - y1)' 0)' figureColor' thickness);  	break;  default:  	break;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: switch (_genFigure) {  case GeneratedFigure.VerticalBar:  	_genImg.Draw (new LineSegment2D (new Point (x1' y1)' new Point (x1' y2))' figureColor' thickness);  	break;  case GeneratedFigure.ObliqueLine:  	_genImg.Draw (new LineSegment2D (new Point (x1' y1)' new Point (x2' y2))' figureColor' thickness);  	break;  case GeneratedFigure.Square:  	_genImg.Draw (new Rectangle (x1' y1' x2 - x1' y2 - y1)' figureColor' thickness);  	break;  case GeneratedFigure.Circle:  	_genImg.Draw (new Ellipse (new Point (x1 + dx / 2' y1 + dy / 2)' new SizeF (x2 - x1' y2 - y1)' 0)' figureColor' thickness);  	break;  default:  	break;  }  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: _genImg.Draw (new Ellipse (new Point (x1 + dx / 2' y1 + dy / 2)' new SizeF (x2 - x1' y2 - y1)' 0)' figureColor' thickness);  
Magic Number,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following statement contains a magic number: _genImg.Draw (new Ellipse (new Point (x1 + dx / 2' y1 + dy / 2)' new SizeF (x2 - x1' y2 - y1)' 0)' figureColor' thickness);  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (labelFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2049)  		throw new Exception ("Invalid format.");  	pos += 4;  	itemsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (_itemsToLoad > 0)  		itemsCount = Math.Min (_itemsToLoad' itemsCount);  	pos += 4;  	_mnists = new MNistData[itemsCount];  	int index = 0;  	for (int item = 0; item < itemsCount; item++) {  		_mnists [index].Label = br.ReadByte ();  		pos += 1;  		if (pos > length)  			throw new Exception ("Unexpected end of file.");  		index++;  	}  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (labelFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2049)  		throw new Exception ("Invalid format.");  	pos += 4;  	itemsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (_itemsToLoad > 0)  		itemsCount = Math.Min (_itemsToLoad' itemsCount);  	pos += 4;  	_mnists = new MNistData[itemsCount];  	int index = 0;  	for (int item = 0; item < itemsCount; item++) {  		_mnists [index].Label = br.ReadByte ();  		pos += 1;  		if (pos > length)  			throw new Exception ("Unexpected end of file.");  		index++;  	}  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (labelFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2049)  		throw new Exception ("Invalid format.");  	pos += 4;  	itemsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (_itemsToLoad > 0)  		itemsCount = Math.Min (_itemsToLoad' itemsCount);  	pos += 4;  	_mnists = new MNistData[itemsCount];  	int index = 0;  	for (int item = 0; item < itemsCount; item++) {  		_mnists [index].Label = br.ReadByte ();  		pos += 1;  		if (pos > length)  			throw new Exception ("Unexpected end of file.");  		index++;  	}  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (labelFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2049)  		throw new Exception ("Invalid format.");  	pos += 4;  	itemsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (_itemsToLoad > 0)  		itemsCount = Math.Min (_itemsToLoad' itemsCount);  	pos += 4;  	_mnists = new MNistData[itemsCount];  	int index = 0;  	for (int item = 0; item < itemsCount; item++) {  		_mnists [index].Label = br.ReadByte ();  		pos += 1;  		if (pos > length)  			throw new Exception ("Unexpected end of file.");  		index++;  	}  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (labelFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2049)  		throw new Exception ("Invalid format.");  	pos += 4;  	itemsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (_itemsToLoad > 0)  		itemsCount = Math.Min (_itemsToLoad' itemsCount);  	pos += 4;  	_mnists = new MNistData[itemsCount];  	int index = 0;  	for (int item = 0; item < itemsCount; item++) {  		_mnists [index].Label = br.ReadByte ();  		pos += 1;  		if (pos > length)  			throw new Exception ("Unexpected end of file.");  		index++;  	}  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (labelFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2049)  		throw new Exception ("Invalid format.");  	pos += 4;  	itemsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (_itemsToLoad > 0)  		itemsCount = Math.Min (_itemsToLoad' itemsCount);  	pos += 4;  	_mnists = new MNistData[itemsCount];  	int index = 0;  	for (int item = 0; item < itemsCount; item++) {  		_mnists [index].Label = br.ReadByte ();  		pos += 1;  		if (pos > length)  			throw new Exception ("Unexpected end of file.");  		index++;  	}  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (labelFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2049)  		throw new Exception ("Invalid format.");  	pos += 4;  	itemsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (_itemsToLoad > 0)  		itemsCount = Math.Min (_itemsToLoad' itemsCount);  	pos += 4;  	_mnists = new MNistData[itemsCount];  	int index = 0;  	for (int item = 0; item < itemsCount; item++) {  		_mnists [index].Label = br.ReadByte ();  		pos += 1;  		if (pos > length)  			throw new Exception ("Unexpected end of file.");  		index++;  	}  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (labelFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2049)  		throw new Exception ("Invalid format.");  	pos += 4;  	itemsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (_itemsToLoad > 0)  		itemsCount = Math.Min (_itemsToLoad' itemsCount);  	pos += 4;  	_mnists = new MNistData[itemsCount];  	int index = 0;  	for (int item = 0; item < itemsCount; item++) {  		_mnists [index].Label = br.ReadByte ();  		pos += 1;  		if (pos > length)  			throw new Exception ("Unexpected end of file.");  		index++;  	}  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (labelFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2049)  		throw new Exception ("Invalid format.");  	pos += 4;  	itemsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (_itemsToLoad > 0)  		itemsCount = Math.Min (_itemsToLoad' itemsCount);  	pos += 4;  	_mnists = new MNistData[itemsCount];  	int index = 0;  	for (int item = 0; item < itemsCount; item++) {  		_mnists [index].Label = br.ReadByte ();  		pos += 1;  		if (pos > length)  			throw new Exception ("Unexpected end of file.");  		index++;  	}  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: if (maginNumber != 2049)  	throw new Exception ("Invalid format.");  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: pos += 4;  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: itemsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: itemsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: itemsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: pos += 4;  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (imageFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2051)  		throw new Exception ("Invalid format.");  	pos += 4;  	int imagesCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int rowsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int columnsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int index = 0;  	Emgu.CV.Image<Bgr' byte> image;  	byte pixel;  	for (int item = 0; item < itemsCount; item++) {  		image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  		byte[''] arr = (byte[''])image.ManagedArray;  		for (int row = 0; row < rowsCount; row++) {  			for (int column = 0; column < columnsCount; column++) {  				if (_reversePixel)  					pixel = (byte)(255 - br.ReadByte ());  				else  					pixel = br.ReadByte ();  				arr [row' column' 0] = pixel;  				arr [row' column' 1] = pixel;  				arr [row' column' 2] = pixel;  				pos += 1;  			}  		}  		_mnists [index].Image = image;  		index++;  	}  	scrollBar1.Minimum = 1;  	scrollBar1.Maximum = itemsCount;  	scrollBar1.SmallChange = 1;  	scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  	scrollBar1.Value = 1;  	//pictureBox1.Width = columnsCount;  	//pictureBox1.Height = rowsCount;  	ItemIndex = 0;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (imageFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2051)  		throw new Exception ("Invalid format.");  	pos += 4;  	int imagesCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int rowsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int columnsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int index = 0;  	Emgu.CV.Image<Bgr' byte> image;  	byte pixel;  	for (int item = 0; item < itemsCount; item++) {  		image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  		byte[''] arr = (byte[''])image.ManagedArray;  		for (int row = 0; row < rowsCount; row++) {  			for (int column = 0; column < columnsCount; column++) {  				if (_reversePixel)  					pixel = (byte)(255 - br.ReadByte ());  				else  					pixel = br.ReadByte ();  				arr [row' column' 0] = pixel;  				arr [row' column' 1] = pixel;  				arr [row' column' 2] = pixel;  				pos += 1;  			}  		}  		_mnists [index].Image = image;  		index++;  	}  	scrollBar1.Minimum = 1;  	scrollBar1.Maximum = itemsCount;  	scrollBar1.SmallChange = 1;  	scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  	scrollBar1.Value = 1;  	//pictureBox1.Width = columnsCount;  	//pictureBox1.Height = rowsCount;  	ItemIndex = 0;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (imageFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2051)  		throw new Exception ("Invalid format.");  	pos += 4;  	int imagesCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int rowsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int columnsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int index = 0;  	Emgu.CV.Image<Bgr' byte> image;  	byte pixel;  	for (int item = 0; item < itemsCount; item++) {  		image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  		byte[''] arr = (byte[''])image.ManagedArray;  		for (int row = 0; row < rowsCount; row++) {  			for (int column = 0; column < columnsCount; column++) {  				if (_reversePixel)  					pixel = (byte)(255 - br.ReadByte ());  				else  					pixel = br.ReadByte ();  				arr [row' column' 0] = pixel;  				arr [row' column' 1] = pixel;  				arr [row' column' 2] = pixel;  				pos += 1;  			}  		}  		_mnists [index].Image = image;  		index++;  	}  	scrollBar1.Minimum = 1;  	scrollBar1.Maximum = itemsCount;  	scrollBar1.SmallChange = 1;  	scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  	scrollBar1.Value = 1;  	//pictureBox1.Width = columnsCount;  	//pictureBox1.Height = rowsCount;  	ItemIndex = 0;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (imageFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2051)  		throw new Exception ("Invalid format.");  	pos += 4;  	int imagesCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int rowsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int columnsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int index = 0;  	Emgu.CV.Image<Bgr' byte> image;  	byte pixel;  	for (int item = 0; item < itemsCount; item++) {  		image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  		byte[''] arr = (byte[''])image.ManagedArray;  		for (int row = 0; row < rowsCount; row++) {  			for (int column = 0; column < columnsCount; column++) {  				if (_reversePixel)  					pixel = (byte)(255 - br.ReadByte ());  				else  					pixel = br.ReadByte ();  				arr [row' column' 0] = pixel;  				arr [row' column' 1] = pixel;  				arr [row' column' 2] = pixel;  				pos += 1;  			}  		}  		_mnists [index].Image = image;  		index++;  	}  	scrollBar1.Minimum = 1;  	scrollBar1.Maximum = itemsCount;  	scrollBar1.SmallChange = 1;  	scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  	scrollBar1.Value = 1;  	//pictureBox1.Width = columnsCount;  	//pictureBox1.Height = rowsCount;  	ItemIndex = 0;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (imageFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2051)  		throw new Exception ("Invalid format.");  	pos += 4;  	int imagesCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int rowsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int columnsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int index = 0;  	Emgu.CV.Image<Bgr' byte> image;  	byte pixel;  	for (int item = 0; item < itemsCount; item++) {  		image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  		byte[''] arr = (byte[''])image.ManagedArray;  		for (int row = 0; row < rowsCount; row++) {  			for (int column = 0; column < columnsCount; column++) {  				if (_reversePixel)  					pixel = (byte)(255 - br.ReadByte ());  				else  					pixel = br.ReadByte ();  				arr [row' column' 0] = pixel;  				arr [row' column' 1] = pixel;  				arr [row' column' 2] = pixel;  				pos += 1;  			}  		}  		_mnists [index].Image = image;  		index++;  	}  	scrollBar1.Minimum = 1;  	scrollBar1.Maximum = itemsCount;  	scrollBar1.SmallChange = 1;  	scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  	scrollBar1.Value = 1;  	//pictureBox1.Width = columnsCount;  	//pictureBox1.Height = rowsCount;  	ItemIndex = 0;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (imageFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2051)  		throw new Exception ("Invalid format.");  	pos += 4;  	int imagesCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int rowsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int columnsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int index = 0;  	Emgu.CV.Image<Bgr' byte> image;  	byte pixel;  	for (int item = 0; item < itemsCount; item++) {  		image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  		byte[''] arr = (byte[''])image.ManagedArray;  		for (int row = 0; row < rowsCount; row++) {  			for (int column = 0; column < columnsCount; column++) {  				if (_reversePixel)  					pixel = (byte)(255 - br.ReadByte ());  				else  					pixel = br.ReadByte ();  				arr [row' column' 0] = pixel;  				arr [row' column' 1] = pixel;  				arr [row' column' 2] = pixel;  				pos += 1;  			}  		}  		_mnists [index].Image = image;  		index++;  	}  	scrollBar1.Minimum = 1;  	scrollBar1.Maximum = itemsCount;  	scrollBar1.SmallChange = 1;  	scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  	scrollBar1.Value = 1;  	//pictureBox1.Width = columnsCount;  	//pictureBox1.Height = rowsCount;  	ItemIndex = 0;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (imageFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2051)  		throw new Exception ("Invalid format.");  	pos += 4;  	int imagesCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int rowsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int columnsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int index = 0;  	Emgu.CV.Image<Bgr' byte> image;  	byte pixel;  	for (int item = 0; item < itemsCount; item++) {  		image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  		byte[''] arr = (byte[''])image.ManagedArray;  		for (int row = 0; row < rowsCount; row++) {  			for (int column = 0; column < columnsCount; column++) {  				if (_reversePixel)  					pixel = (byte)(255 - br.ReadByte ());  				else  					pixel = br.ReadByte ();  				arr [row' column' 0] = pixel;  				arr [row' column' 1] = pixel;  				arr [row' column' 2] = pixel;  				pos += 1;  			}  		}  		_mnists [index].Image = image;  		index++;  	}  	scrollBar1.Minimum = 1;  	scrollBar1.Maximum = itemsCount;  	scrollBar1.SmallChange = 1;  	scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  	scrollBar1.Value = 1;  	//pictureBox1.Width = columnsCount;  	//pictureBox1.Height = rowsCount;  	ItemIndex = 0;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (imageFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2051)  		throw new Exception ("Invalid format.");  	pos += 4;  	int imagesCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int rowsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int columnsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int index = 0;  	Emgu.CV.Image<Bgr' byte> image;  	byte pixel;  	for (int item = 0; item < itemsCount; item++) {  		image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  		byte[''] arr = (byte[''])image.ManagedArray;  		for (int row = 0; row < rowsCount; row++) {  			for (int column = 0; column < columnsCount; column++) {  				if (_reversePixel)  					pixel = (byte)(255 - br.ReadByte ());  				else  					pixel = br.ReadByte ();  				arr [row' column' 0] = pixel;  				arr [row' column' 1] = pixel;  				arr [row' column' 2] = pixel;  				pos += 1;  			}  		}  		_mnists [index].Image = image;  		index++;  	}  	scrollBar1.Minimum = 1;  	scrollBar1.Maximum = itemsCount;  	scrollBar1.SmallChange = 1;  	scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  	scrollBar1.Value = 1;  	//pictureBox1.Width = columnsCount;  	//pictureBox1.Height = rowsCount;  	ItemIndex = 0;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (imageFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2051)  		throw new Exception ("Invalid format.");  	pos += 4;  	int imagesCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int rowsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int columnsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int index = 0;  	Emgu.CV.Image<Bgr' byte> image;  	byte pixel;  	for (int item = 0; item < itemsCount; item++) {  		image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  		byte[''] arr = (byte[''])image.ManagedArray;  		for (int row = 0; row < rowsCount; row++) {  			for (int column = 0; column < columnsCount; column++) {  				if (_reversePixel)  					pixel = (byte)(255 - br.ReadByte ());  				else  					pixel = br.ReadByte ();  				arr [row' column' 0] = pixel;  				arr [row' column' 1] = pixel;  				arr [row' column' 2] = pixel;  				pos += 1;  			}  		}  		_mnists [index].Image = image;  		index++;  	}  	scrollBar1.Minimum = 1;  	scrollBar1.Maximum = itemsCount;  	scrollBar1.SmallChange = 1;  	scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  	scrollBar1.Value = 1;  	//pictureBox1.Width = columnsCount;  	//pictureBox1.Height = rowsCount;  	ItemIndex = 0;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (imageFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2051)  		throw new Exception ("Invalid format.");  	pos += 4;  	int imagesCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int rowsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int columnsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int index = 0;  	Emgu.CV.Image<Bgr' byte> image;  	byte pixel;  	for (int item = 0; item < itemsCount; item++) {  		image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  		byte[''] arr = (byte[''])image.ManagedArray;  		for (int row = 0; row < rowsCount; row++) {  			for (int column = 0; column < columnsCount; column++) {  				if (_reversePixel)  					pixel = (byte)(255 - br.ReadByte ());  				else  					pixel = br.ReadByte ();  				arr [row' column' 0] = pixel;  				arr [row' column' 1] = pixel;  				arr [row' column' 2] = pixel;  				pos += 1;  			}  		}  		_mnists [index].Image = image;  		index++;  	}  	scrollBar1.Minimum = 1;  	scrollBar1.Maximum = itemsCount;  	scrollBar1.SmallChange = 1;  	scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  	scrollBar1.Value = 1;  	//pictureBox1.Width = columnsCount;  	//pictureBox1.Height = rowsCount;  	ItemIndex = 0;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (imageFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2051)  		throw new Exception ("Invalid format.");  	pos += 4;  	int imagesCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int rowsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int columnsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int index = 0;  	Emgu.CV.Image<Bgr' byte> image;  	byte pixel;  	for (int item = 0; item < itemsCount; item++) {  		image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  		byte[''] arr = (byte[''])image.ManagedArray;  		for (int row = 0; row < rowsCount; row++) {  			for (int column = 0; column < columnsCount; column++) {  				if (_reversePixel)  					pixel = (byte)(255 - br.ReadByte ());  				else  					pixel = br.ReadByte ();  				arr [row' column' 0] = pixel;  				arr [row' column' 1] = pixel;  				arr [row' column' 2] = pixel;  				pos += 1;  			}  		}  		_mnists [index].Image = image;  		index++;  	}  	scrollBar1.Minimum = 1;  	scrollBar1.Maximum = itemsCount;  	scrollBar1.SmallChange = 1;  	scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  	scrollBar1.Value = 1;  	//pictureBox1.Width = columnsCount;  	//pictureBox1.Height = rowsCount;  	ItemIndex = 0;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (imageFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2051)  		throw new Exception ("Invalid format.");  	pos += 4;  	int imagesCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int rowsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int columnsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int index = 0;  	Emgu.CV.Image<Bgr' byte> image;  	byte pixel;  	for (int item = 0; item < itemsCount; item++) {  		image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  		byte[''] arr = (byte[''])image.ManagedArray;  		for (int row = 0; row < rowsCount; row++) {  			for (int column = 0; column < columnsCount; column++) {  				if (_reversePixel)  					pixel = (byte)(255 - br.ReadByte ());  				else  					pixel = br.ReadByte ();  				arr [row' column' 0] = pixel;  				arr [row' column' 1] = pixel;  				arr [row' column' 2] = pixel;  				pos += 1;  			}  		}  		_mnists [index].Image = image;  		index++;  	}  	scrollBar1.Minimum = 1;  	scrollBar1.Maximum = itemsCount;  	scrollBar1.SmallChange = 1;  	scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  	scrollBar1.Value = 1;  	//pictureBox1.Width = columnsCount;  	//pictureBox1.Height = rowsCount;  	ItemIndex = 0;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (imageFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2051)  		throw new Exception ("Invalid format.");  	pos += 4;  	int imagesCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int rowsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int columnsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int index = 0;  	Emgu.CV.Image<Bgr' byte> image;  	byte pixel;  	for (int item = 0; item < itemsCount; item++) {  		image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  		byte[''] arr = (byte[''])image.ManagedArray;  		for (int row = 0; row < rowsCount; row++) {  			for (int column = 0; column < columnsCount; column++) {  				if (_reversePixel)  					pixel = (byte)(255 - br.ReadByte ());  				else  					pixel = br.ReadByte ();  				arr [row' column' 0] = pixel;  				arr [row' column' 1] = pixel;  				arr [row' column' 2] = pixel;  				pos += 1;  			}  		}  		_mnists [index].Image = image;  		index++;  	}  	scrollBar1.Minimum = 1;  	scrollBar1.Maximum = itemsCount;  	scrollBar1.SmallChange = 1;  	scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  	scrollBar1.Value = 1;  	//pictureBox1.Width = columnsCount;  	//pictureBox1.Height = rowsCount;  	ItemIndex = 0;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (imageFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2051)  		throw new Exception ("Invalid format.");  	pos += 4;  	int imagesCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int rowsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int columnsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int index = 0;  	Emgu.CV.Image<Bgr' byte> image;  	byte pixel;  	for (int item = 0; item < itemsCount; item++) {  		image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  		byte[''] arr = (byte[''])image.ManagedArray;  		for (int row = 0; row < rowsCount; row++) {  			for (int column = 0; column < columnsCount; column++) {  				if (_reversePixel)  					pixel = (byte)(255 - br.ReadByte ());  				else  					pixel = br.ReadByte ();  				arr [row' column' 0] = pixel;  				arr [row' column' 1] = pixel;  				arr [row' column' 2] = pixel;  				pos += 1;  			}  		}  		_mnists [index].Image = image;  		index++;  	}  	scrollBar1.Minimum = 1;  	scrollBar1.Maximum = itemsCount;  	scrollBar1.SmallChange = 1;  	scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  	scrollBar1.Value = 1;  	//pictureBox1.Width = columnsCount;  	//pictureBox1.Height = rowsCount;  	ItemIndex = 0;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (imageFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2051)  		throw new Exception ("Invalid format.");  	pos += 4;  	int imagesCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int rowsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int columnsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int index = 0;  	Emgu.CV.Image<Bgr' byte> image;  	byte pixel;  	for (int item = 0; item < itemsCount; item++) {  		image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  		byte[''] arr = (byte[''])image.ManagedArray;  		for (int row = 0; row < rowsCount; row++) {  			for (int column = 0; column < columnsCount; column++) {  				if (_reversePixel)  					pixel = (byte)(255 - br.ReadByte ());  				else  					pixel = br.ReadByte ();  				arr [row' column' 0] = pixel;  				arr [row' column' 1] = pixel;  				arr [row' column' 2] = pixel;  				pos += 1;  			}  		}  		_mnists [index].Image = image;  		index++;  	}  	scrollBar1.Minimum = 1;  	scrollBar1.Maximum = itemsCount;  	scrollBar1.SmallChange = 1;  	scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  	scrollBar1.Value = 1;  	//pictureBox1.Width = columnsCount;  	//pictureBox1.Height = rowsCount;  	ItemIndex = 0;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (imageFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2051)  		throw new Exception ("Invalid format.");  	pos += 4;  	int imagesCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int rowsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int columnsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int index = 0;  	Emgu.CV.Image<Bgr' byte> image;  	byte pixel;  	for (int item = 0; item < itemsCount; item++) {  		image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  		byte[''] arr = (byte[''])image.ManagedArray;  		for (int row = 0; row < rowsCount; row++) {  			for (int column = 0; column < columnsCount; column++) {  				if (_reversePixel)  					pixel = (byte)(255 - br.ReadByte ());  				else  					pixel = br.ReadByte ();  				arr [row' column' 0] = pixel;  				arr [row' column' 1] = pixel;  				arr [row' column' 2] = pixel;  				pos += 1;  			}  		}  		_mnists [index].Image = image;  		index++;  	}  	scrollBar1.Minimum = 1;  	scrollBar1.Maximum = itemsCount;  	scrollBar1.SmallChange = 1;  	scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  	scrollBar1.Value = 1;  	//pictureBox1.Width = columnsCount;  	//pictureBox1.Height = rowsCount;  	ItemIndex = 0;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (imageFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2051)  		throw new Exception ("Invalid format.");  	pos += 4;  	int imagesCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int rowsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int columnsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int index = 0;  	Emgu.CV.Image<Bgr' byte> image;  	byte pixel;  	for (int item = 0; item < itemsCount; item++) {  		image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  		byte[''] arr = (byte[''])image.ManagedArray;  		for (int row = 0; row < rowsCount; row++) {  			for (int column = 0; column < columnsCount; column++) {  				if (_reversePixel)  					pixel = (byte)(255 - br.ReadByte ());  				else  					pixel = br.ReadByte ();  				arr [row' column' 0] = pixel;  				arr [row' column' 1] = pixel;  				arr [row' column' 2] = pixel;  				pos += 1;  			}  		}  		_mnists [index].Image = image;  		index++;  	}  	scrollBar1.Minimum = 1;  	scrollBar1.Maximum = itemsCount;  	scrollBar1.SmallChange = 1;  	scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  	scrollBar1.Value = 1;  	//pictureBox1.Width = columnsCount;  	//pictureBox1.Height = rowsCount;  	ItemIndex = 0;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (imageFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2051)  		throw new Exception ("Invalid format.");  	pos += 4;  	int imagesCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int rowsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int columnsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int index = 0;  	Emgu.CV.Image<Bgr' byte> image;  	byte pixel;  	for (int item = 0; item < itemsCount; item++) {  		image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  		byte[''] arr = (byte[''])image.ManagedArray;  		for (int row = 0; row < rowsCount; row++) {  			for (int column = 0; column < columnsCount; column++) {  				if (_reversePixel)  					pixel = (byte)(255 - br.ReadByte ());  				else  					pixel = br.ReadByte ();  				arr [row' column' 0] = pixel;  				arr [row' column' 1] = pixel;  				arr [row' column' 2] = pixel;  				pos += 1;  			}  		}  		_mnists [index].Image = image;  		index++;  	}  	scrollBar1.Minimum = 1;  	scrollBar1.Maximum = itemsCount;  	scrollBar1.SmallChange = 1;  	scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  	scrollBar1.Value = 1;  	//pictureBox1.Width = columnsCount;  	//pictureBox1.Height = rowsCount;  	ItemIndex = 0;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (imageFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2051)  		throw new Exception ("Invalid format.");  	pos += 4;  	int imagesCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int rowsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int columnsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int index = 0;  	Emgu.CV.Image<Bgr' byte> image;  	byte pixel;  	for (int item = 0; item < itemsCount; item++) {  		image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  		byte[''] arr = (byte[''])image.ManagedArray;  		for (int row = 0; row < rowsCount; row++) {  			for (int column = 0; column < columnsCount; column++) {  				if (_reversePixel)  					pixel = (byte)(255 - br.ReadByte ());  				else  					pixel = br.ReadByte ();  				arr [row' column' 0] = pixel;  				arr [row' column' 1] = pixel;  				arr [row' column' 2] = pixel;  				pos += 1;  			}  		}  		_mnists [index].Image = image;  		index++;  	}  	scrollBar1.Minimum = 1;  	scrollBar1.Maximum = itemsCount;  	scrollBar1.SmallChange = 1;  	scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  	scrollBar1.Value = 1;  	//pictureBox1.Width = columnsCount;  	//pictureBox1.Height = rowsCount;  	ItemIndex = 0;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (File.Open (imageFileName' FileMode.Open))) {  	int pos = 0;  	int length = (int)br.BaseStream.Length;  	int maginNumber = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	if (maginNumber != 2051)  		throw new Exception ("Invalid format.");  	pos += 4;  	int imagesCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int rowsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int columnsCount = (br.ReadByte () << 24) + (br.ReadByte () << 16) + (br.ReadByte () << 8) + (br.ReadByte () << 0);  	pos += 4;  	int index = 0;  	Emgu.CV.Image<Bgr' byte> image;  	byte pixel;  	for (int item = 0; item < itemsCount; item++) {  		image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  		byte[''] arr = (byte[''])image.ManagedArray;  		for (int row = 0; row < rowsCount; row++) {  			for (int column = 0; column < columnsCount; column++) {  				if (_reversePixel)  					pixel = (byte)(255 - br.ReadByte ());  				else  					pixel = br.ReadByte ();  				arr [row' column' 0] = pixel;  				arr [row' column' 1] = pixel;  				arr [row' column' 2] = pixel;  				pos += 1;  			}  		}  		_mnists [index].Image = image;  		index++;  	}  	scrollBar1.Minimum = 1;  	scrollBar1.Maximum = itemsCount;  	scrollBar1.SmallChange = 1;  	scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  	scrollBar1.Value = 1;  	//pictureBox1.Width = columnsCount;  	//pictureBox1.Height = rowsCount;  	ItemIndex = 0;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: if (maginNumber != 2051)  	throw new Exception ("Invalid format.");  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: pos += 4;  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: pos += 4;  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: pos += 4;  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: pos += 4;  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: for (int item = 0; item < itemsCount; item++) {  	image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  	byte[''] arr = (byte[''])image.ManagedArray;  	for (int row = 0; row < rowsCount; row++) {  		for (int column = 0; column < columnsCount; column++) {  			if (_reversePixel)  				pixel = (byte)(255 - br.ReadByte ());  			else  				pixel = br.ReadByte ();  			arr [row' column' 0] = pixel;  			arr [row' column' 1] = pixel;  			arr [row' column' 2] = pixel;  			pos += 1;  		}  	}  	_mnists [index].Image = image;  	index++;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: for (int item = 0; item < itemsCount; item++) {  	image = new Emgu.CV.Image<Bgr' byte> (columnsCount' rowsCount);  	byte[''] arr = (byte[''])image.ManagedArray;  	for (int row = 0; row < rowsCount; row++) {  		for (int column = 0; column < columnsCount; column++) {  			if (_reversePixel)  				pixel = (byte)(255 - br.ReadByte ());  			else  				pixel = br.ReadByte ();  			arr [row' column' 0] = pixel;  			arr [row' column' 1] = pixel;  			arr [row' column' 2] = pixel;  			pos += 1;  		}  	}  	_mnists [index].Image = image;  	index++;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: for (int row = 0; row < rowsCount; row++) {  	for (int column = 0; column < columnsCount; column++) {  		if (_reversePixel)  			pixel = (byte)(255 - br.ReadByte ());  		else  			pixel = br.ReadByte ();  		arr [row' column' 0] = pixel;  		arr [row' column' 1] = pixel;  		arr [row' column' 2] = pixel;  		pos += 1;  	}  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: for (int row = 0; row < rowsCount; row++) {  	for (int column = 0; column < columnsCount; column++) {  		if (_reversePixel)  			pixel = (byte)(255 - br.ReadByte ());  		else  			pixel = br.ReadByte ();  		arr [row' column' 0] = pixel;  		arr [row' column' 1] = pixel;  		arr [row' column' 2] = pixel;  		pos += 1;  	}  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: for (int column = 0; column < columnsCount; column++) {  	if (_reversePixel)  		pixel = (byte)(255 - br.ReadByte ());  	else  		pixel = br.ReadByte ();  	arr [row' column' 0] = pixel;  	arr [row' column' 1] = pixel;  	arr [row' column' 2] = pixel;  	pos += 1;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: for (int column = 0; column < columnsCount; column++) {  	if (_reversePixel)  		pixel = (byte)(255 - br.ReadByte ());  	else  		pixel = br.ReadByte ();  	arr [row' column' 0] = pixel;  	arr [row' column' 1] = pixel;  	arr [row' column' 2] = pixel;  	pos += 1;  }  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: if (_reversePixel)  	pixel = (byte)(255 - br.ReadByte ());  else  	pixel = br.ReadByte ();  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: pixel = (byte)(255 - br.ReadByte ());  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: arr [row' column' 2] = pixel;  
Magic Number,Doo.Environments,MNistEnvironment,C:\repos\avogab_dooHTM\framework\Environments\MNistEnvironment.cs,Initialize,The following statement contains a magic number: scrollBar1.LargeChange = Math.Max (1' itemsCount / 10);  
Magic Number,Doo,MainForm,C:\repos\avogab_dooHTM\framework\MainForm.cs,Loop,The following statement contains a magic number: while (!_stopLoop) {  	Thread.Sleep (int.Parse (sleepBetweenStepTextBox.Text));  	Application.DoEvents ();  	if (!Step ())  		_stopLoop = true;  	if (int.Parse (breakAtStepTextBox.Text) != 0) {  		if (_cycle == int.Parse (breakAtStepTextBox.Text))  			_stopLoop = true;  	}  	if ((_cycle & 3) == 3)  		// update cycle text box every 4 cycle  		UpdateCycleTextBox ();  }  
Magic Number,Doo,MainForm,C:\repos\avogab_dooHTM\framework\MainForm.cs,Loop,The following statement contains a magic number: while (!_stopLoop) {  	Thread.Sleep (int.Parse (sleepBetweenStepTextBox.Text));  	Application.DoEvents ();  	if (!Step ())  		_stopLoop = true;  	if (int.Parse (breakAtStepTextBox.Text) != 0) {  		if (_cycle == int.Parse (breakAtStepTextBox.Text))  			_stopLoop = true;  	}  	if ((_cycle & 3) == 3)  		// update cycle text box every 4 cycle  		UpdateCycleTextBox ();  }  
Magic Number,Doo,MainForm,C:\repos\avogab_dooHTM\framework\MainForm.cs,Loop,The following statement contains a magic number: if ((_cycle & 3) == 3)  	// update cycle text box every 4 cycle  	UpdateCycleTextBox ();  
Magic Number,Doo,MainForm,C:\repos\avogab_dooHTM\framework\MainForm.cs,Loop,The following statement contains a magic number: if ((_cycle & 3) == 3)  	// update cycle text box every 4 cycle  	UpdateCycleTextBox ();  
Magic Number,Doo,MainForm,C:\repos\avogab_dooHTM\framework\MainForm.cs,mnistDesktopButton_Click,The following statement contains a magic number: env.ItemsToLoad = 5;  
Magic Number,Doo,MainForm,C:\repos\avogab_dooHTM\framework\MainForm.cs,dataDesktopButton_Click,The following statement contains a magic number: htmBuilder.RegionWidth = 10;  
Magic Number,Doo,MainForm,C:\repos\avogab_dooHTM\framework\MainForm.cs,dataDesktopButton_Click,The following statement contains a magic number: htmBuilder.DesiredLocalActivity = 2;  
Magic Number,Doo,MainForm,C:\repos\avogab_dooHTM\framework\MainForm.cs,dataDesktopButton_Click,The following statement contains a magic number: htmBuilder.MinSegmentActivityForLearning = 2;  
Missing Default,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,Initialize,The following switch statement is missing a default case: switch (_sourceType) {  case SourceType.WebCam:  	frameBox.Visible = true;  	try {  		if (_capture == null)  			_capture = new Capture ();  	}  	catch (NullReferenceException exch) {  		MessageBox.Show (exch.Message);  	}  	break;  case SourceType.Generated:  	frameBox.Visible = true;  	_rnd = new Random ();  	_genIndex = 0;  	_genImg = new Image<Bgr' Byte> (_genWidth' _genHeight);  	break;  case SourceType.VideoFile:  	//frameBox.Visible = false;  	//try  	//{  	//    qtPlayer.URL = fileNameTextBox.Text;  	//}  	//catch (Exception exch)  	//{  	//    _director.Log(exch.ToString());  	//}  	break;  }  
Missing Default,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,StepGenerated,The following switch statement is missing a default case: switch (genSizeComboBox.Text) {  case "small":  	dx = 16;  	dy = 16;  	break;  case "medium":  	dx = 32;  	dy = 32;  	break;  case "big":  	dx = 64;  	dy = 64;  	break;  }  
Missing Default,Doo.Environments,ImageEnvironment,C:\repos\avogab_dooHTM\framework\Environments\ImageEnvironment.cs,browseButton_Click,The following switch statement is missing a default case: switch (_sourceType) {  //case SourceType.StillImage:  //    _stillImage = new Emgu.CV.Image<Bgr' Byte>(_sourceFilePath);  //    frameBox.Image = _stillImage;  //    break;  case SourceType.VideoFile:  	//try  	//{  	//    if (qtPlayer.Movie != null)  	//        qtPlayer.Movie.Disconnect();  	//    qtPlayer.URL = fileNameTextBox.Text;  	//}  	//catch (Exception exch)  	//{  	//    _director.Log(exch.ToString());  	//}  	break;  }  
