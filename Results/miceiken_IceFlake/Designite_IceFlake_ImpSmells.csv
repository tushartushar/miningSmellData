Implementation smell,Namespace,Class,File,Method,Description
Long Method,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The method has 434 lines of code.
Complex Method,IceFlake.Client.Objects,WoWItem,C:\repos\miceiken_IceFlake\IceFlake\Client\Objects\WoWItem.cs,GetSlotIndexes,Cyclomatic complexity of the method is 9
Complex Method,IceFlake.Scripts,EquippedItemsDumperScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\DumpersScripts.cs,OnStart,Cyclomatic complexity of the method is 8
Complex Method,IceFlake.Scripts,UITestScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\UITestScript.cs,OnStart,Cyclomatic complexity of the method is 19
Complex Method,IceFlake.Scripts,VendorScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\VendorScript.cs,OnTick,Cyclomatic complexity of the method is 10
Long Statement,IceFlake.Client.API,Merchant,C:\repos\miceiken_IceFlake\IceFlake\Client\API\Merchant.cs,SellAll,The length of the statement  "                "for i=0'4 do for j=1' GetContainerNumSlots(i) do l=GetContainerItemLink(i'j) if l then _'_'q=GetItemInfo(l) if q == " + " is 120.
Long Statement,IceFlake.Client.API,Trainer,C:\repos\miceiken_IceFlake\IceFlake\Client\API\Trainer.cs,SetFilter,The length of the statement  "                WoWScript.ExecuteNoResults(string.Format("SetTrainerServiceTypeFilter(\"unavailable\"' {0})"' unavailable.Value ? 1 : 0)); " is 122.
Long Statement,IceFlake.Client,EndSceneExecute,C:\repos\miceiken_IceFlake\IceFlake\Client\EndSceneExecute.cs,AddExececution,The length of the statement  "            // If we're already in the main thread we're also in the EndScene hook which means we can run the command without any problems " is 126.
Long Statement,IceFlake.Client,EndSceneExecute,C:\repos\miceiken_IceFlake\IceFlake\Client\EndSceneExecute.cs,AddExececution,The length of the statement  "            // sometimes this is however not desired (maybe this needs to happen the next frame) so we check if we want it postponed " is 120.
Long Statement,IceFlake.Client,WoWEvents,C:\repos\miceiken_IceFlake\IceFlake\Client\WoWEvents.cs,ExecuteIngameListener,The length of the statement  "                "local frame = CreateFrame('Frame'' 'evcFrame'); frame:RegisterAllEvents(); frame:SetScript('OnEvent'' function(self' event' ...) GetBillingTimeRested(event' ...); end);"; " is 171.
Long Statement,IceFlake.Client.Objects,WoWItem,C:\repos\miceiken_IceFlake\IceFlake\Client\Objects\WoWItem.cs,GetInventorySlotsByEquipSlot,The length of the statement  "                    //bool flag = Manager.LocalPlayer.Class == WoWClass.Warrior && WoWScript.Execute<int>(InventoryManager.#a(61464)' 4u) > 0; " is 122.
Long Statement,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The length of the statement  "            this.rbLogBox.Font = new System.Drawing.Font("Consolas"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 146.
Long Statement,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanel2.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent' 50F)); " is 122.
Long Statement,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanel2.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent' 50F)); " is 122.
Long Statement,IceFlake.Scripts,ConsoleScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\ConsoleScript.cs,TestCommand,The length of the statement  "            Manager.Console.Write(string.Format("Hello from TestCommand: cmd '{0}'' args '{1}'"' cmd' args)' WoWConsoleColor.Input); " is 120.
Long Statement,IceFlake.Scripts,PacketScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\PacketScript.cs,ResetChatHandler,The length of the statement  "            Manager.ClientServices.SetMessageHandler(WoWClientServices.NetMessage.SMSG_MESSAGECHAT' ChatMessageHandlerPtr' IntPtr.Zero); " is 124.
Empty Catch Block,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,GUITimer_Tick,The method has an empty catch block.
Empty Catch Block,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,btnSpellCast_Click,The method has an empty catch block.
Magic Number,IceFlake.Client.API,WoWCompanion,C:\repos\miceiken_IceFlake\IceFlake\Client\API\Companion.cs,WoWCompanion,The following statement contains a magic number: SpellId = int.Parse(ret[2]);
Magic Number,IceFlake.Client.API,WoWCompanion,C:\repos\miceiken_IceFlake\IceFlake\Client\API\Companion.cs,WoWCompanion,The following statement contains a magic number: Active = !(ret[4] == "false" || ret[4] == "0" || ret[4] == "nil");
Magic Number,IceFlake.Client.API,WoWCompanion,C:\repos\miceiken_IceFlake\IceFlake\Client\API\Companion.cs,WoWCompanion,The following statement contains a magic number: Active = !(ret[4] == "false" || ret[4] == "0" || ret[4] == "nil");
Magic Number,IceFlake.Client.API,WoWCompanion,C:\repos\miceiken_IceFlake\IceFlake\Client\API\Companion.cs,WoWCompanion,The following statement contains a magic number: Active = !(ret[4] == "false" || ret[4] == "0" || ret[4] == "nil");
Magic Number,IceFlake.Client,Pather,C:\repos\miceiken_IceFlake\IceFlake\Client\Pather.cs,LoadAllTiles,The following statement contains a magic number: for (int y = 0; y < 64; y++)              {                  for (int x = 0; x < 64; x++)                  {                      if (!File.Exists(GetTilePath(x' y)))                          continue;                      DetourMesh.LoadTile(x' y);                  }              }
Magic Number,IceFlake.Client,Pather,C:\repos\miceiken_IceFlake\IceFlake\Client\Pather.cs,LoadAllTiles,The following statement contains a magic number: for (int y = 0; y < 64; y++)              {                  for (int x = 0; x < 64; x++)                  {                      if (!File.Exists(GetTilePath(x' y)))                          continue;                      DetourMesh.LoadTile(x' y);                  }              }
Magic Number,IceFlake.Client,Pather,C:\repos\miceiken_IceFlake\IceFlake\Client\Pather.cs,LoadAppropriateTiles,The following statement contains a magic number: const int extent = 3;
Magic Number,IceFlake.Client,Helper,C:\repos\miceiken_IceFlake\IceFlake\Client\Helper.cs,ToWowCurrency,The following statement contains a magic number: return String.Format("{0}g {1}s {2}c"' amount / 10000' amount / 100 % 100' amount % 100);
Magic Number,IceFlake.Client,Helper,C:\repos\miceiken_IceFlake\IceFlake\Client\Helper.cs,ToWowCurrency,The following statement contains a magic number: return String.Format("{0}g {1}s {2}c"' amount / 10000' amount / 100 % 100' amount % 100);
Magic Number,IceFlake.Client,Helper,C:\repos\miceiken_IceFlake\IceFlake\Client\Helper.cs,ToWowCurrency,The following statement contains a magic number: return String.Format("{0}g {1}s {2}c"' amount / 10000' amount / 100 % 100' amount % 100);
Magic Number,IceFlake.Client,Helper,C:\repos\miceiken_IceFlake\IceFlake\Client\Helper.cs,ToWowCurrency,The following statement contains a magic number: return String.Format("{0}g {1}s {2}c"' amount / 10000' amount / 100 % 100' amount % 100);
Magic Number,IceFlake.Client,Location,C:\repos\miceiken_IceFlake\IceFlake\Client\Location.cs,DistanceTo,The following statement contains a magic number: return Math.Sqrt(Math.Pow(X - loc.X' 2) + Math.Pow(Y - loc.Y' 2) + Math.Pow(Z - loc.Z' 2));
Magic Number,IceFlake.Client,Location,C:\repos\miceiken_IceFlake\IceFlake\Client\Location.cs,DistanceTo,The following statement contains a magic number: return Math.Sqrt(Math.Pow(X - loc.X' 2) + Math.Pow(Y - loc.Y' 2) + Math.Pow(Z - loc.Z' 2));
Magic Number,IceFlake.Client,Location,C:\repos\miceiken_IceFlake\IceFlake\Client\Location.cs,DistanceTo,The following statement contains a magic number: return Math.Sqrt(Math.Pow(X - loc.X' 2) + Math.Pow(Y - loc.Y' 2) + Math.Pow(Z - loc.Z' 2));
Magic Number,IceFlake.Client,Location,C:\repos\miceiken_IceFlake\IceFlake\Client\Location.cs,DistanceToSqr,The following statement contains a magic number: return Math.Pow(X - loc.X' 2) + Math.Pow(Y - loc.Y' 2) + Math.Pow(Z - loc.Z' 2);
Magic Number,IceFlake.Client,Location,C:\repos\miceiken_IceFlake\IceFlake\Client\Location.cs,DistanceToSqr,The following statement contains a magic number: return Math.Pow(X - loc.X' 2) + Math.Pow(Y - loc.Y' 2) + Math.Pow(Z - loc.Z' 2);
Magic Number,IceFlake.Client,Location,C:\repos\miceiken_IceFlake\IceFlake\Client\Location.cs,DistanceToSqr,The following statement contains a magic number: return Math.Pow(X - loc.X' 2) + Math.Pow(Y - loc.Y' 2) + Math.Pow(Z - loc.Z' 2);
Magic Number,IceFlake.Client,Location,C:\repos\miceiken_IceFlake\IceFlake\Client\Location.cs,Distance2D,The following statement contains a magic number: return Math.Sqrt(Math.Pow(X - loc.X' 2) + Math.Pow(Y - loc.Y' 2));
Magic Number,IceFlake.Client,Location,C:\repos\miceiken_IceFlake\IceFlake\Client\Location.cs,Distance2D,The following statement contains a magic number: return Math.Sqrt(Math.Pow(X - loc.X' 2) + Math.Pow(Y - loc.Y' 2));
Magic Number,IceFlake.Client,Movement,C:\repos\miceiken_IceFlake\IceFlake\Client\Movement.cs,Direct3D_EndScene,The following statement contains a magic number: SleepTime = DateTime.Now + TimeSpan.FromMilliseconds(100);
Magic Number,IceFlake.Client,DbTable,C:\repos\miceiken_IceFlake\IceFlake\Client\WoWDB.cs,GetLocalizedRow,The following statement contains a magic number: IntPtr rowPtr = Marshal.AllocHGlobal(4*4*256);
Magic Number,IceFlake.Client,DbTable,C:\repos\miceiken_IceFlake\IceFlake\Client\WoWDB.cs,GetLocalizedRow,The following statement contains a magic number: IntPtr rowPtr = Marshal.AllocHGlobal(4*4*256);
Magic Number,IceFlake.Client,DbTable,C:\repos\miceiken_IceFlake\IceFlake\Client\WoWDB.cs,GetLocalizedRow,The following statement contains a magic number: IntPtr rowPtr = Marshal.AllocHGlobal(4*4*256);
Magic Number,IceFlake.Client,Row,C:\repos\miceiken_IceFlake\IceFlake\Client\WoWDB.cs,GetField,The following statement contains a magic number: try                      {                          if (typeof (T) == typeof (string))                          {                              // Sometimes.... generics ****ing suck                              object s =                                  Marshal.PtrToStringAnsi(                                      Manager.Memory.Read<IntPtr>(new IntPtr((uint) _rowPtr + (index*4))));                              return (T) s;                          }                            return Manager.Memory.Read<T>(new IntPtr((uint) _rowPtr + (index*4)));                      }                      catch                      {                          return default(T);                      }
Magic Number,IceFlake.Client,Row,C:\repos\miceiken_IceFlake\IceFlake\Client\WoWDB.cs,GetField,The following statement contains a magic number: try                      {                          if (typeof (T) == typeof (string))                          {                              // Sometimes.... generics ****ing suck                              object s =                                  Marshal.PtrToStringAnsi(                                      Manager.Memory.Read<IntPtr>(new IntPtr((uint) _rowPtr + (index*4))));                              return (T) s;                          }                            return Manager.Memory.Read<T>(new IntPtr((uint) _rowPtr + (index*4)));                      }                      catch                      {                          return default(T);                      }
Magic Number,IceFlake.Client.Routines.Combat,HarmfulSpellRoutine,C:\repos\miceiken_IceFlake\IceFlake\Client\Routines\Combat\HarmfulSpellRoutine.cs,ExecuteOnUnit,The following statement contains a magic number: Sleep(1000);
Magic Number,IceFlake.Client.Routines.Combat,HelpfulSpellRoutine,C:\repos\miceiken_IceFlake\IceFlake\Client\Routines\Combat\HelpfulSpellRoutine.cs,ExecuteOnUnit,The following statement contains a magic number: Sleep(1000);
Magic Number,IceFlake.Client.Routines.Combat,SpellRoutine,C:\repos\miceiken_IceFlake\IceFlake\Client\Routines\Combat\SpellRoutine.cs,Execute,The following statement contains a magic number: Sleep(1000);
Magic Number,IceFlake.Client.Collections,SpellCollection,C:\repos\miceiken_IceFlake\IceFlake\Client\Collections\SpellCollection.cs,Direct3D_EndScene,The following statement contains a magic number: for (int i = 0; i < Manager.Memory.Read<int>((IntPtr) Pointers.Spell.SpellCount); i++)              {                  var spellId = Manager.Memory.Read<uint>((IntPtr) (Pointers.Spell.SpellBook + (i*4)));                  knownspells.Add(new WoWSpell(spellId));              }
Magic Number,IceFlake.Client.Objects,WoWContainer,C:\repos\miceiken_IceFlake\IceFlake\Client\Objects\WoWContainer.cs,GetItemGuid,The following statement contains a magic number: if (index > 35 || index > Slots || index < 0)                  return 0;
Magic Number,IceFlake.Client.Objects,WoWContainer,C:\repos\miceiken_IceFlake\IceFlake\Client\Objects\WoWContainer.cs,GetItemGuid,The following statement contains a magic number: return GetAbsoluteDescriptor<ulong>((int) WoWContainerFields.CONTAINER_FIELD_SLOT_1*0x4 + (index*8));
Magic Number,IceFlake.Client.Objects,WoWItem,C:\repos\miceiken_IceFlake\IceFlake\Client\Objects\WoWItem.cs,GetSlotIndexes,The following statement contains a magic number: for (int i = 0; i < 16; i++)              {                  WoWItem item = Manager.LocalPlayer.GetBackpackItem(i);                  if (item == null || !item.IsValid) continue;                  if (item.Guid == Guid)                  {                      container = 0;                      slot = i + 1;                      return true;                  }              }
Magic Number,IceFlake.Client.Objects,WoWLocalPlayer,C:\repos\miceiken_IceFlake\IceFlake\Client\Objects\WoWLocalPlayer.cs,SetFacing,The following statement contains a magic number: const float pi2 = (float) (Math.PI*2);
Magic Number,IceFlake.Client.Objects,WoWLocalPlayer,C:\repos\miceiken_IceFlake\IceFlake\Client\Objects\WoWLocalPlayer.cs,GetRuneCooldown,The following statement contains a magic number: return Manager.Memory.Read<int>(new IntPtr(Pointers.LocalPlayer.RuneCooldown + (int) slot*4));
Magic Number,IceFlake.Client.Objects,WoWLocalPlayer,C:\repos\miceiken_IceFlake\IceFlake\Client\Objects\WoWLocalPlayer.cs,GetBackpackItem,The following statement contains a magic number: var guid = GetAbsoluteDescriptor<ulong>((int) WoWPlayerFields.PLAYER_FIELD_PACK_SLOT_1*4 + (slot*8));
Magic Number,IceFlake.Client.Objects,WoWLocalPlayer,C:\repos\miceiken_IceFlake\IceFlake\Client\Objects\WoWLocalPlayer.cs,GetBackpackItem,The following statement contains a magic number: var guid = GetAbsoluteDescriptor<ulong>((int) WoWPlayerFields.PLAYER_FIELD_PACK_SLOT_1*4 + (slot*8));
Magic Number,IceFlake.Client.Objects,WoWLocalPlayer,C:\repos\miceiken_IceFlake\IceFlake\Client\Objects\WoWLocalPlayer.cs,GetBankedItem,The following statement contains a magic number: var guid = GetAbsoluteDescriptor<ulong>((int) WoWPlayerFields.PLAYER_FIELD_BANK_SLOT_1*4 + (slot*8));
Magic Number,IceFlake.Client.Objects,WoWLocalPlayer,C:\repos\miceiken_IceFlake\IceFlake\Client\Objects\WoWLocalPlayer.cs,GetBankedItem,The following statement contains a magic number: var guid = GetAbsoluteDescriptor<ulong>((int) WoWPlayerFields.PLAYER_FIELD_BANK_SLOT_1*4 + (slot*8));
Magic Number,IceFlake.Client.Objects,WoWLocalPlayer,C:\repos\miceiken_IceFlake\IceFlake\Client\Objects\WoWLocalPlayer.cs,GetEquippedItem,The following statement contains a magic number: var guid = GetAbsoluteDescriptor<ulong>((int) WoWPlayerFields.PLAYER_FIELD_INV_SLOT_HEAD*4 + (slot*8));
Magic Number,IceFlake.Client.Objects,WoWLocalPlayer,C:\repos\miceiken_IceFlake\IceFlake\Client\Objects\WoWLocalPlayer.cs,GetEquippedItem,The following statement contains a magic number: var guid = GetAbsoluteDescriptor<ulong>((int) WoWPlayerFields.PLAYER_FIELD_INV_SLOT_HEAD*4 + (slot*8));
Magic Number,IceFlake.Client.Objects,WoWUnit,C:\repos\miceiken_IceFlake\IceFlake\Client\Objects\WoWUnit.cs,GetMeleeRangeOf,The following statement contains a magic number: return (float)Math.Max(5.0' this.CombatReach + unit.CombatReach + (4 / 3));
Magic Number,IceFlake.Client.Objects,WoWUnit,C:\repos\miceiken_IceFlake\IceFlake\Client\Objects\WoWUnit.cs,GetMeleeRangeOf,The following statement contains a magic number: return (float)Math.Max(5.0' this.CombatReach + unit.CombatReach + (4 / 3));
Magic Number,IceFlake.Client.Objects,WoWUnit,C:\repos\miceiken_IceFlake\IceFlake\Client\Objects\WoWUnit.cs,GetMeleeRangeOf,The following statement contains a magic number: return (float)Math.Max(5.0' this.CombatReach + unit.CombatReach + (4 / 3));
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,Identity,The following statement contains a magic number: result[2' 2] = 1f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,Identity,The following statement contains a magic number: result[2' 2] = 1f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,Identity,The following statement contains a magic number: result[3' 3] = 1f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,Identity,The following statement contains a magic number: result[3' 3] = 1f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,Translation,The following statement contains a magic number: result[3' 0] = x;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,Translation,The following statement contains a magic number: result[3' 1] = y;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,Translation,The following statement contains a magic number: result[3' 2] = z;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,Translation,The following statement contains a magic number: result[3' 2] = z;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtLH,The following statement contains a magic number: result[2' 0] = rightNormal.Z;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtLH,The following statement contains a magic number: result[3' 0] = -rightNormal.Dot(eye);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtLH,The following statement contains a magic number: result[2' 1] = upNormal.Z;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtLH,The following statement contains a magic number: result[3' 1] = -upNormal.Dot(eye);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtLH,The following statement contains a magic number: result[0' 2] = vectorNormal.X;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtLH,The following statement contains a magic number: result[1' 2] = vectorNormal.Y;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtLH,The following statement contains a magic number: result[2' 2] = vectorNormal.Z;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtLH,The following statement contains a magic number: result[2' 2] = vectorNormal.Z;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtLH,The following statement contains a magic number: result[3' 2] = -vectorNormal.Dot(eye);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtLH,The following statement contains a magic number: result[3' 2] = -vectorNormal.Dot(eye);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtLH,The following statement contains a magic number: result[0' 3] = 0.0f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtLH,The following statement contains a magic number: result[1' 3] = 0.0f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtLH,The following statement contains a magic number: result[2' 3] = 0.0f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtLH,The following statement contains a magic number: result[2' 3] = 0.0f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtLH,The following statement contains a magic number: result[3' 3] = 1.0f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtLH,The following statement contains a magic number: result[3' 3] = 1.0f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtRH,The following statement contains a magic number: result[2' 0] = -rightNormal.Z;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtRH,The following statement contains a magic number: result[3' 0] = rightNormal.Dot(eye);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtRH,The following statement contains a magic number: result[2' 1] = upNormal.Z;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtRH,The following statement contains a magic number: result[3' 1] = -upNormal.Dot(eye);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtRH,The following statement contains a magic number: result[0' 2] = -vectorNormal.X;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtRH,The following statement contains a magic number: result[1' 2] = -vectorNormal.Y;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtRH,The following statement contains a magic number: result[2' 2] = -vectorNormal.Z;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtRH,The following statement contains a magic number: result[2' 2] = -vectorNormal.Z;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtRH,The following statement contains a magic number: result[3' 2] = vectorNormal.Dot(eye);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtRH,The following statement contains a magic number: result[3' 2] = vectorNormal.Dot(eye);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtRH,The following statement contains a magic number: result[0' 3] = 0.0f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtRH,The following statement contains a magic number: result[1' 3] = 0.0f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtRH,The following statement contains a magic number: result[2' 3] = 0.0f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtRH,The following statement contains a magic number: result[2' 3] = 0.0f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtRH,The following statement contains a magic number: result[3' 3] = 1.0f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,LookAtRH,The following statement contains a magic number: result[3' 3] = 1.0f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,PerspectiveFovLH,The following statement contains a magic number: result[2' 2] = zFarPlane/(zFarPlane - zNearPlane);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,PerspectiveFovLH,The following statement contains a magic number: result[2' 2] = zFarPlane/(zFarPlane - zNearPlane);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,PerspectiveFovLH,The following statement contains a magic number: result[2' 3] = 1.0f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,PerspectiveFovLH,The following statement contains a magic number: result[2' 3] = 1.0f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,PerspectiveFovLH,The following statement contains a magic number: result[3' 2] = (zFarPlane*zNearPlane)/(zNearPlane - zFarPlane);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,PerspectiveFovLH,The following statement contains a magic number: result[3' 2] = (zFarPlane*zNearPlane)/(zNearPlane - zFarPlane);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,PerspectiveFovLH,The following statement contains a magic number: result[3' 3] = 0.0f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,PerspectiveFovLH,The following statement contains a magic number: result[3' 3] = 0.0f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,PerspectiveFovRH,The following statement contains a magic number: result[2' 2] = zf/(zn - zf);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,PerspectiveFovRH,The following statement contains a magic number: result[2' 2] = zf/(zn - zf);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,PerspectiveFovRH,The following statement contains a magic number: result[2' 3] = -1.0f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,PerspectiveFovRH,The following statement contains a magic number: result[2' 3] = -1.0f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,PerspectiveFovRH,The following statement contains a magic number: result[3' 2] = (zf*zn)/(zn - zf);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,PerspectiveFovRH,The following statement contains a magic number: result[3' 2] = (zf*zn)/(zn - zf);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,PerspectiveFovRH,The following statement contains a magic number: result[3' 3] = 0.0f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,PerspectiveFovRH,The following statement contains a magic number: result[3' 3] = 0.0f;
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,RotationX,The following statement contains a magic number: result[2' 2] = (float) Math.Cos(angle);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,RotationX,The following statement contains a magic number: result[2' 2] = (float) Math.Cos(angle);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,RotationX,The following statement contains a magic number: result[1' 2] = (float) Math.Sin(angle);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,RotationX,The following statement contains a magic number: result[2' 1] = -(float) Math.Sin(angle);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,RotationY,The following statement contains a magic number: result[2' 2] = (float) Math.Cos(angle);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,RotationY,The following statement contains a magic number: result[2' 2] = (float) Math.Cos(angle);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,RotationY,The following statement contains a magic number: result[0' 2] = -(float) Math.Sin(angle);
Magic Number,IceFlake.DirectX,Matrix,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Matrix.cs,RotationY,The following statement contains a magic number: result[2' 0] = (float) Math.Sin(angle);
Magic Number,IceFlake.DirectX,Vector2,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Vector2.cs,Distance,The following statement contains a magic number: return Math.Sqrt(Math.Pow(X - loc.X' 2) + Math.Pow(Y - loc.Y' 2));
Magic Number,IceFlake.DirectX,Vector2,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Vector2.cs,Distance,The following statement contains a magic number: return Math.Sqrt(Math.Pow(X - loc.X' 2) + Math.Pow(Y - loc.Y' 2));
Magic Number,IceFlake.DirectX,Vector3,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Vector3.cs,Vector3,The following statement contains a magic number: z = *((float*) pVector + 2);
Magic Number,IceFlake.DirectX,Vector3,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Vector3.cs,Vector3,The following statement contains a magic number: z = *(pVector + 2);
Magic Number,IceFlake.DirectX,Vector3,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Vector3.cs,GetVerticalAngle,The following statement contains a magic number: double a = Math.Sqrt(Math.Pow(x' 2) + Math.Pow(y' 2));
Magic Number,IceFlake.DirectX,Vector3,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Vector3.cs,GetVerticalAngle,The following statement contains a magic number: double a = Math.Sqrt(Math.Pow(x' 2) + Math.Pow(y' 2));
Magic Number,IceFlake.DirectX,Vector3,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Vector3.cs,GetVerticalAngle,The following statement contains a magic number: if (result < -Math.PI/2)                  result += (Math.PI*2);
Magic Number,IceFlake.DirectX,Vector3,C:\repos\miceiken_IceFlake\IceFlake\DirectX\Vector3.cs,GetVerticalAngle,The following statement contains a magic number: if (result < -Math.PI/2)                  result += (Math.PI*2);
Magic Number,IceFlake.Routines,ElementalShamanRoutine,C:\repos\miceiken_IceFlake\IceFlake\Routines\ElementalShamanRoutine.cs,ElementalShamanRoutine,The following statement contains a magic number: AddAction(new Thunderstorm(this' 11));
Magic Number,IceFlake.Routines,ElementalShamanRoutine,C:\repos\miceiken_IceFlake\IceFlake\Routines\ElementalShamanRoutine.cs,ElementalShamanRoutine,The following statement contains a magic number: AddAction(new EarthShock(this' 10));
Magic Number,IceFlake.Routines,ElementalShamanRoutine,C:\repos\miceiken_IceFlake\IceFlake\Routines\ElementalShamanRoutine.cs,ElementalShamanRoutine,The following statement contains a magic number: AddAction(new FlameShock(this' 9));
Magic Number,IceFlake.Routines,ElementalShamanRoutine,C:\repos\miceiken_IceFlake\IceFlake\Routines\ElementalShamanRoutine.cs,ElementalShamanRoutine,The following statement contains a magic number: AddAction(new HarmfulSpellRoutine(this' 8' "Lava Burst"' 30));
Magic Number,IceFlake.Routines,ElementalShamanRoutine,C:\repos\miceiken_IceFlake\IceFlake\Routines\ElementalShamanRoutine.cs,ElementalShamanRoutine,The following statement contains a magic number: AddAction(new HarmfulSpellRoutine(this' 8' "Lava Burst"' 30));
Magic Number,IceFlake.Routines,ElementalShamanRoutine,C:\repos\miceiken_IceFlake\IceFlake\Routines\ElementalShamanRoutine.cs,ElementalShamanRoutine,The following statement contains a magic number: AddAction(new Shield(this' 7));
Magic Number,IceFlake.Routines,ElementalShamanRoutine,C:\repos\miceiken_IceFlake\IceFlake\Routines\ElementalShamanRoutine.cs,ElementalShamanRoutine,The following statement contains a magic number: AddAction(new HarmfulSpellRoutine(this' 6' "Lightning Bolt"' 30));
Magic Number,IceFlake.Routines,ElementalShamanRoutine,C:\repos\miceiken_IceFlake\IceFlake\Routines\ElementalShamanRoutine.cs,ElementalShamanRoutine,The following statement contains a magic number: AddAction(new HarmfulSpellRoutine(this' 6' "Lightning Bolt"' 30));
Magic Number,IceFlake.Routines,ElementalShamanRoutine,C:\repos\miceiken_IceFlake\IceFlake\Routines\ElementalShamanRoutine.cs,OnBeforeAction,The following statement contains a magic number: if (Helper.InCombat && Manager.LocalPlayer.Totems.Count() == 0)              {                  if (TotemHelper.CallTotems())                      Sleep(600);              }
Magic Number,IceFlake.Routines,ElementalShamanRoutine,C:\repos\miceiken_IceFlake\IceFlake\Routines\ElementalShamanRoutine.cs,OnBeforeAction,The following statement contains a magic number: if (action is HarmfulSpellRoutine)              {                  var haction = action as HarmfulSpellRoutine;                  if (haction.SpellName == "Lava Burst")                  {                      WoWSpell cd = Manager.Spellbook["Elemental Mastery"];                      if (cd != null && cd.IsValid && cd.IsReady)                      {                          Log.WriteLine("Popping Elemental Mastery for instant Lava Burst");                          cd.Cast();                          Sleep(600);                      }                  }              }
Magic Number,IceFlake.Routines,ElementalShamanRoutine,C:\repos\miceiken_IceFlake\IceFlake\Routines\ElementalShamanRoutine.cs,OnAfterAction,The following statement contains a magic number: if (!Helper.InCombat)              {                  if (TotemHelper.RecallTotems())                      Sleep(600);              }
Magic Number,IceFlake.Routines,StarterMageRoutine,C:\repos\miceiken_IceFlake\IceFlake\Routines\StarterMageRoutine.cs,CheckForAndApplyBuff,The following statement contains a magic number: if (sleep)                  Sleep(1000);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.rbLogBox.Location = new System.Drawing.Point(0' 213);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.rbLogBox.Size = new System.Drawing.Size(361' 298);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.rbLogBox.Size = new System.Drawing.Size(361' 298);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.Size = new System.Drawing.Size(361' 213);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.Size = new System.Drawing.Size(361' 213);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.TabIndex = 3;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabStatus.Location = new System.Drawing.Point(4' 22);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabStatus.Location = new System.Drawing.Point(4' 22);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabStatus.Padding = new System.Windows.Forms.Padding(3);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabStatus.Size = new System.Drawing.Size(353' 187);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabStatus.Size = new System.Drawing.Size(353' 187);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabStatus.TabIndex = 2;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.gbPlayer.Location = new System.Drawing.Point(3' 3);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.gbPlayer.Location = new System.Drawing.Point(3' 3);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.gbPlayer.Size = new System.Drawing.Size(184' 181);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.gbPlayer.Size = new System.Drawing.Size(184' 181);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.ColumnCount = 2;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.label3' 0' 2);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.label4' 0' 3);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.lblLevel' 1' 2);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.lblZone' 1' 3);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Location = new System.Drawing.Point(3' 16);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Location = new System.Drawing.Point(3' 16);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.RowCount = 4;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Size = new System.Drawing.Size(178' 162);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Size = new System.Drawing.Size(178' 162);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(3' 0);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(41' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(41' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblPowerText.Location = new System.Drawing.Point(3' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblPowerText.Location = new System.Drawing.Point(3' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblPowerText.Size = new System.Drawing.Size(40' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblPowerText.Size = new System.Drawing.Size(40' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(3' 26);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(3' 26);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(36' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(36' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 2;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(3' 39);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(3' 39);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(35' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(35' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.label4.TabIndex = 3;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblHealth.Location = new System.Drawing.Point(50' 0);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblHealth.Size = new System.Drawing.Size(63' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblHealth.Size = new System.Drawing.Size(63' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblHealth.TabIndex = 4;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblPower.Location = new System.Drawing.Point(50' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblPower.Location = new System.Drawing.Point(50' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblPower.Size = new System.Drawing.Size(63' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblPower.Size = new System.Drawing.Size(63' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblPower.TabIndex = 5;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblLevel.Location = new System.Drawing.Point(50' 26);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblLevel.Location = new System.Drawing.Point(50' 26);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblLevel.Size = new System.Drawing.Size(63' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblLevel.Size = new System.Drawing.Size(63' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblLevel.TabIndex = 6;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblZone.Location = new System.Drawing.Point(50' 39);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblZone.Location = new System.Drawing.Point(50' 39);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblZone.Size = new System.Drawing.Size(63' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblZone.Size = new System.Drawing.Size(63' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblZone.TabIndex = 7;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabScripts.Location = new System.Drawing.Point(4' 22);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabScripts.Location = new System.Drawing.Point(4' 22);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabScripts.Padding = new System.Windows.Forms.Padding(3);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabScripts.Size = new System.Drawing.Size(353' 187);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabScripts.Size = new System.Drawing.Size(353' 187);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lstScripts.Location = new System.Drawing.Point(6' 7);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lstScripts.Location = new System.Drawing.Point(6' 7);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lstScripts.Size = new System.Drawing.Size(339' 139);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lstScripts.Size = new System.Drawing.Size(339' 139);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lstScripts.TabIndex = 4;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnScriptCompile.Location = new System.Drawing.Point(168' 156);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnScriptCompile.Location = new System.Drawing.Point(168' 156);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnScriptCompile.Size = new System.Drawing.Size(75' 23);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnScriptCompile.Size = new System.Drawing.Size(75' 23);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnScriptCompile.TabIndex = 3;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnScriptStop.Location = new System.Drawing.Point(87' 156);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnScriptStop.Location = new System.Drawing.Point(87' 156);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnScriptStop.Size = new System.Drawing.Size(75' 23);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnScriptStop.Size = new System.Drawing.Size(75' 23);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnScriptStop.TabIndex = 2;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnScriptStart.Location = new System.Drawing.Point(6' 156);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnScriptStart.Location = new System.Drawing.Point(6' 156);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnScriptStart.Size = new System.Drawing.Size(75' 23);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnScriptStart.Size = new System.Drawing.Size(75' 23);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabDebug.Location = new System.Drawing.Point(4' 22);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabDebug.Location = new System.Drawing.Point(4' 22);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabDebug.Padding = new System.Windows.Forms.Padding(3);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabDebug.Size = new System.Drawing.Size(353' 187);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabDebug.Size = new System.Drawing.Size(353' 187);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnLoSTest.Location = new System.Drawing.Point(8' 36);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnLoSTest.Location = new System.Drawing.Point(8' 36);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnLoSTest.Size = new System.Drawing.Size(75' 23);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnLoSTest.Size = new System.Drawing.Size(75' 23);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnLoSTest.TabIndex = 3;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnExecute.Location = new System.Drawing.Point(181' 160);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnExecute.Location = new System.Drawing.Point(181' 160);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnExecute.Size = new System.Drawing.Size(75' 23);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnExecute.Size = new System.Drawing.Size(75' 23);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnExecute.TabIndex = 2;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tbLUA.Location = new System.Drawing.Point(8' 162);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tbLUA.Location = new System.Drawing.Point(8' 162);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tbLUA.Size = new System.Drawing.Size(167' 20);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tbLUA.Size = new System.Drawing.Size(167' 20);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnSpellCast.Location = new System.Drawing.Point(8' 7);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnSpellCast.Location = new System.Drawing.Point(8' 7);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnSpellCast.Size = new System.Drawing.Size(75' 23);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnSpellCast.Size = new System.Drawing.Size(75' 23);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPath.Location = new System.Drawing.Point(4' 22);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPath.Location = new System.Drawing.Point(4' 22);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPath.Padding = new System.Windows.Forms.Padding(3);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPath.Size = new System.Drawing.Size(353' 187);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPath.Size = new System.Drawing.Size(353' 187);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPath.TabIndex = 3;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(8' 6);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(8' 6);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(200' 100);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(200' 100);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel2.ColumnCount = 2;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel2.Location = new System.Drawing.Point(3' 16);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel2.Location = new System.Drawing.Point(3' 16);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel2.RowCount = 2;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel2.Size = new System.Drawing.Size(194' 58);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel2.Size = new System.Drawing.Size(194' 58);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(3' 0);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(56' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(56' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(3' 29);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(3' 29);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(56' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(56' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblPos1.Location = new System.Drawing.Point(100' 0);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblPos1.Size = new System.Drawing.Size(58' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblPos1.Size = new System.Drawing.Size(58' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblPos1.TabIndex = 2;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblPos2.Location = new System.Drawing.Point(100' 29);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblPos2.Location = new System.Drawing.Point(100' 29);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblPos2.Size = new System.Drawing.Size(58' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblPos2.Size = new System.Drawing.Size(58' 13);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.lblPos2.TabIndex = 3;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGenPath.Location = new System.Drawing.Point(3' 74);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGenPath.Location = new System.Drawing.Point(3' 74);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGenPath.Size = new System.Drawing.Size(194' 23);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGenPath.Size = new System.Drawing.Size(194' 23);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.GUITimer.Interval = 500;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(262' 158);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(262' 158);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(83' 23);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(83' 23);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.button1.TabIndex = 4;
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(361' 511);
Magic Number,IceFlake,IceForm,C:\repos\miceiken_IceFlake\IceFlake\IceForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(361' 511);
Magic Number,IceFlake.Scripts,ChatScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\ChatScript.cs,HandleChatEvents,The following statement contains a magic number: Print("[{0}] {1}: {2}"' ev.Substring(9)' args[1]' args[0]);
Magic Number,IceFlake.Scripts,PacketScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\PacketScript.cs,SendCastSpell,The following statement contains a magic number: var csp = new CastSpellPacket()              {                  CastCount = 1'                  SpellID = 49276' // Lesser Healing Wave                  unkFlags = 0'                  TargetFlags = SpellCastTargetFlags.TARGET_FLAG_SELF'                  TargetGUID = (long)Manager.LocalPlayer.Guid'              };
Magic Number,IceFlake.Scripts,PacketScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\PacketScript.cs,LookupResultHandler,The following statement contains a magic number: var received = data.GetString(256);
Magic Number,IceFlake.Scripts,PacketScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\PacketScript.cs,OnChatMessage,The following statement contains a magic number: switch (type)              {                  case ChatMsgType.CHAT_MSG_MONSTER_SAY:                  case ChatMsgType.CHAT_MSG_MONSTER_PARTY:                  case ChatMsgType.CHAT_MSG_MONSTER_YELL:                  case ChatMsgType.CHAT_MSG_MONSTER_WHISPER:                  case ChatMsgType.CHAT_MSG_MONSTER_EMOTE:                  case ChatMsgType.CHAT_MSG_RAID_BOSS_WHISPER:                  case ChatMsgType.CHAT_MSG_RAID_BOSS_EMOTE:                  case ChatMsgType.CHAT_MSG_BATTLENET:                  case ChatMsgType.CHAT_MSG_WHISPER_FOREIGN:                      // Sender length' name and target GUID                      sb.AppendFormat("[SN:{0}] "' data.GetString(data.Read<int>()));                      sb.AppendFormat("[TG:{0}] "' data.Read<long>());                      /*                      if (targetGuid && !targetGuid.IsPlayer() && !targetGuid.IsPet() && (msgtype != CHAT_MSG_WHISPER_FOREIGN))                      {                          data << uint32(strlen(targetName) + 1); // target name length                          data << targetName; // target name                      }                      */                      break;                    case ChatMsgType.CHAT_MSG_BG_SYSTEM_NEUTRAL:                  case ChatMsgType.CHAT_MSG_BG_SYSTEM_ALLIANCE:                  case ChatMsgType.CHAT_MSG_BG_SYSTEM_HORDE:                      // Target guid' sender length and name                      sb.AppendFormat("[TG:{0}] "' data.Read<long>());                      /*                      if (targetGuid && !targetGuid.IsPlayer())                      {                          MANGOS_ASSERT(targetName);                          data << uint32(strlen(targetName) + 1); // target name length                          data << targetName; // target name                      }                      */                       //sb.AppendFormat("[SN:{0}] "' data.GetString(data.Read<int>()));                      break;                    case ChatMsgType.CHAT_MSG_ACHIEVEMENT:                  case ChatMsgType.CHAT_MSG_GUILD_ACHIEVEMENT:                      // Target GUID                      sb.AppendFormat("[TG:{0}] "' data.Read<long>());                      break;                    case ChatMsgType.CHAT_MSG_CHANNEL:                      // Channel name' and target GUID                      sb.AppendFormat("[CN:{0}] "' data.GetString(64)); // verify length of channel name                      sb.AppendFormat("[TG:{0}] "' data.Read<long>());                      break;                    default:                      // Target GUID                      sb.AppendFormat("[TG:{0}] "' data.Read<long>());                      break;              }
Magic Number,IceFlake.Scripts,QuestHelperScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\QuestHelperScript.cs,OnTick,The following statement contains a magic number: if (!dumpedActiveQuests)              {                  Print("Active Quests:");                  // Loop through all active quests from quest log                  foreach (QuestLogEntry q in Manager.Quests.QuestLog)                  {                      // Get the Quest Cache Record                      QuestCacheRecord qcr = q.AsWoWQuest().CachedEntry;                      Print("{0}: {1}:"' qcr.Id' qcr.Name);                      unsafe                      {                          // There are 4 ObjectiveIds and ObjectiveRequiredCounts                          for (int i = 0; i < 4; i++)                          {                              // Get Objective ID i                              int objectiveId = qcr.ObjectiveId[i];                              if (objectiveId == 0) continue;                              int objectiveReq = qcr.ObjectiveRequiredCount[i];                              Print("\tObjective id {0} req {1}"' objectiveId' objectiveReq);                          }                            // There are 6 CollectItemIds and CollectItemCounts                          for (int i = 0; i < 6; i++)                          {                              int collectItemId = qcr.CollectItemId[i];                              if (collectItemId == 0) continue;                              int collectItemCount = qcr.CollectItemCount[i];                              Print("\tCollectItem id {0} req {1}"' collectItemId' collectItemCount);                          }                            // There are 4 IntermediateItemIds and IntermediateItemCounts                          for (int i = 0; i < 4; i++)                          {                              int intermediateItemId = qcr.IntermediateItemId[i];                              if (intermediateItemId == 0) continue;                              int intermediateItemCount = qcr.IntermediateItemCount[i];                              Print("\tIntermediateItem id {0} req {1}"' intermediateItemId' intermediateItemCount);                          }                      }                  }                  dumpedActiveQuests = true;              }
Magic Number,IceFlake.Scripts,QuestHelperScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\QuestHelperScript.cs,OnTick,The following statement contains a magic number: if (!dumpedActiveQuests)              {                  Print("Active Quests:");                  // Loop through all active quests from quest log                  foreach (QuestLogEntry q in Manager.Quests.QuestLog)                  {                      // Get the Quest Cache Record                      QuestCacheRecord qcr = q.AsWoWQuest().CachedEntry;                      Print("{0}: {1}:"' qcr.Id' qcr.Name);                      unsafe                      {                          // There are 4 ObjectiveIds and ObjectiveRequiredCounts                          for (int i = 0; i < 4; i++)                          {                              // Get Objective ID i                              int objectiveId = qcr.ObjectiveId[i];                              if (objectiveId == 0) continue;                              int objectiveReq = qcr.ObjectiveRequiredCount[i];                              Print("\tObjective id {0} req {1}"' objectiveId' objectiveReq);                          }                            // There are 6 CollectItemIds and CollectItemCounts                          for (int i = 0; i < 6; i++)                          {                              int collectItemId = qcr.CollectItemId[i];                              if (collectItemId == 0) continue;                              int collectItemCount = qcr.CollectItemCount[i];                              Print("\tCollectItem id {0} req {1}"' collectItemId' collectItemCount);                          }                            // There are 4 IntermediateItemIds and IntermediateItemCounts                          for (int i = 0; i < 4; i++)                          {                              int intermediateItemId = qcr.IntermediateItemId[i];                              if (intermediateItemId == 0) continue;                              int intermediateItemCount = qcr.IntermediateItemCount[i];                              Print("\tIntermediateItem id {0} req {1}"' intermediateItemId' intermediateItemCount);                          }                      }                  }                  dumpedActiveQuests = true;              }
Magic Number,IceFlake.Scripts,QuestHelperScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\QuestHelperScript.cs,OnTick,The following statement contains a magic number: if (!dumpedActiveQuests)              {                  Print("Active Quests:");                  // Loop through all active quests from quest log                  foreach (QuestLogEntry q in Manager.Quests.QuestLog)                  {                      // Get the Quest Cache Record                      QuestCacheRecord qcr = q.AsWoWQuest().CachedEntry;                      Print("{0}: {1}:"' qcr.Id' qcr.Name);                      unsafe                      {                          // There are 4 ObjectiveIds and ObjectiveRequiredCounts                          for (int i = 0; i < 4; i++)                          {                              // Get Objective ID i                              int objectiveId = qcr.ObjectiveId[i];                              if (objectiveId == 0) continue;                              int objectiveReq = qcr.ObjectiveRequiredCount[i];                              Print("\tObjective id {0} req {1}"' objectiveId' objectiveReq);                          }                            // There are 6 CollectItemIds and CollectItemCounts                          for (int i = 0; i < 6; i++)                          {                              int collectItemId = qcr.CollectItemId[i];                              if (collectItemId == 0) continue;                              int collectItemCount = qcr.CollectItemCount[i];                              Print("\tCollectItem id {0} req {1}"' collectItemId' collectItemCount);                          }                            // There are 4 IntermediateItemIds and IntermediateItemCounts                          for (int i = 0; i < 4; i++)                          {                              int intermediateItemId = qcr.IntermediateItemId[i];                              if (intermediateItemId == 0) continue;                              int intermediateItemCount = qcr.IntermediateItemCount[i];                              Print("\tIntermediateItem id {0} req {1}"' intermediateItemId' intermediateItemCount);                          }                      }                  }                  dumpedActiveQuests = true;              }
Magic Number,IceFlake.Scripts,FishingBot,C:\repos\miceiken_IceFlake\IceFlake\Scripts\FishingScript.cs,OnTick,The following statement contains a magic number: if ((DateTime.Now - SleepTimer).TotalMilliseconds < 200)                  return;
Magic Number,IceFlake.Scripts,FishingBot,C:\repos\miceiken_IceFlake\IceFlake\Scripts\FishingScript.cs,OnTick,The following statement contains a magic number: switch (CurrentState)              {                  case FishingState.Lure:                      //if (!HasBait)                      //{                      //    // Implement applying lure                      //}                      ProfessionInfo fish = API.Profession.Fishing;                      if (fish != null)                      {                          if (fish.Level >= (fish.MaxLevel - 25) && fish.MaxLevel < 450)                          {                              CurrentState = FishingState.Training;                              return;                          }                      }                      CurrentState = FishingState.Cast;                      break;                    case FishingState.Cast:                      Print("Casting Fishing Pole");                      Fishing.Cast();                      CurrentState = FishingState.Fishing;                      break;                    case FishingState.Fishing:                      if (IsFishing)                      {                          if (IsBobbing)                              CurrentState = FishingState.Loot;                      }                      else                          CurrentState = FishingState.Lure;                      break;                    case FishingState.Loot:                      Print("Getting Fishing Bobber");                      Bobber.Interact();                      LootTimer = DateTime.Now;                      CurrentState = FishingState.Looting;                      break;                    case FishingState.Looting:                      TimeSpan span = DateTime.Now - LootTimer;                      if (span.TotalSeconds > 3)                      {                          Print("No loot? Back to fishing then!");                          CurrentState = FishingState.Lure;                      }                      break;                        // TODO: Clean up' add dynamic fishing trainer locator.                  case FishingState.Training:                      if (Trainer == null || !Trainer.IsValid)                      {                          // Marcia Chase' Dalaran - Neutral.                          Trainer =                              Manager.ObjectManager.Objects.Where(x => x.IsValid && x.IsUnit)                                  .OfType<WoWUnit>()                                  .FirstOrDefault(u => u.Entry == 28742);                          return;                      }                        if (Trainer.Distance > 6f)                      {                          if (Manager.Movement.Destination == Trainer.Location)                              Sleep(100);                          Manager.Movement.PathTo(Trainer.Location);                          return;                      }                        if (!API.Gossip.IsShown && !API.Trainer.IsShown)                      {                          Trainer.Interact();                          return;                      }                        if (API.Gossip.IsShown)                      {                          GossipOption opt = API.Gossip.Options.FirstOrDefault(g => g.Gossip == GossipType.Trainer);                          if (opt != null)                              opt.Select();                          return;                      }                        if (API.Trainer.IsShown)                      {                          API.Trainer.BuyAllAvailable();                          Fishing = null;                          Manager.Spellbook.Update = true;                          CurrentState = FishingState.Lure;                          return;                      }                        CurrentState = FishingState.Lure;                        break;              }
Magic Number,IceFlake.Scripts,FishingBot,C:\repos\miceiken_IceFlake\IceFlake\Scripts\FishingScript.cs,OnTick,The following statement contains a magic number: switch (CurrentState)              {                  case FishingState.Lure:                      //if (!HasBait)                      //{                      //    // Implement applying lure                      //}                      ProfessionInfo fish = API.Profession.Fishing;                      if (fish != null)                      {                          if (fish.Level >= (fish.MaxLevel - 25) && fish.MaxLevel < 450)                          {                              CurrentState = FishingState.Training;                              return;                          }                      }                      CurrentState = FishingState.Cast;                      break;                    case FishingState.Cast:                      Print("Casting Fishing Pole");                      Fishing.Cast();                      CurrentState = FishingState.Fishing;                      break;                    case FishingState.Fishing:                      if (IsFishing)                      {                          if (IsBobbing)                              CurrentState = FishingState.Loot;                      }                      else                          CurrentState = FishingState.Lure;                      break;                    case FishingState.Loot:                      Print("Getting Fishing Bobber");                      Bobber.Interact();                      LootTimer = DateTime.Now;                      CurrentState = FishingState.Looting;                      break;                    case FishingState.Looting:                      TimeSpan span = DateTime.Now - LootTimer;                      if (span.TotalSeconds > 3)                      {                          Print("No loot? Back to fishing then!");                          CurrentState = FishingState.Lure;                      }                      break;                        // TODO: Clean up' add dynamic fishing trainer locator.                  case FishingState.Training:                      if (Trainer == null || !Trainer.IsValid)                      {                          // Marcia Chase' Dalaran - Neutral.                          Trainer =                              Manager.ObjectManager.Objects.Where(x => x.IsValid && x.IsUnit)                                  .OfType<WoWUnit>()                                  .FirstOrDefault(u => u.Entry == 28742);                          return;                      }                        if (Trainer.Distance > 6f)                      {                          if (Manager.Movement.Destination == Trainer.Location)                              Sleep(100);                          Manager.Movement.PathTo(Trainer.Location);                          return;                      }                        if (!API.Gossip.IsShown && !API.Trainer.IsShown)                      {                          Trainer.Interact();                          return;                      }                        if (API.Gossip.IsShown)                      {                          GossipOption opt = API.Gossip.Options.FirstOrDefault(g => g.Gossip == GossipType.Trainer);                          if (opt != null)                              opt.Select();                          return;                      }                        if (API.Trainer.IsShown)                      {                          API.Trainer.BuyAllAvailable();                          Fishing = null;                          Manager.Spellbook.Update = true;                          CurrentState = FishingState.Lure;                          return;                      }                        CurrentState = FishingState.Lure;                        break;              }
Magic Number,IceFlake.Scripts,FishingBot,C:\repos\miceiken_IceFlake\IceFlake\Scripts\FishingScript.cs,OnTick,The following statement contains a magic number: switch (CurrentState)              {                  case FishingState.Lure:                      //if (!HasBait)                      //{                      //    // Implement applying lure                      //}                      ProfessionInfo fish = API.Profession.Fishing;                      if (fish != null)                      {                          if (fish.Level >= (fish.MaxLevel - 25) && fish.MaxLevel < 450)                          {                              CurrentState = FishingState.Training;                              return;                          }                      }                      CurrentState = FishingState.Cast;                      break;                    case FishingState.Cast:                      Print("Casting Fishing Pole");                      Fishing.Cast();                      CurrentState = FishingState.Fishing;                      break;                    case FishingState.Fishing:                      if (IsFishing)                      {                          if (IsBobbing)                              CurrentState = FishingState.Loot;                      }                      else                          CurrentState = FishingState.Lure;                      break;                    case FishingState.Loot:                      Print("Getting Fishing Bobber");                      Bobber.Interact();                      LootTimer = DateTime.Now;                      CurrentState = FishingState.Looting;                      break;                    case FishingState.Looting:                      TimeSpan span = DateTime.Now - LootTimer;                      if (span.TotalSeconds > 3)                      {                          Print("No loot? Back to fishing then!");                          CurrentState = FishingState.Lure;                      }                      break;                        // TODO: Clean up' add dynamic fishing trainer locator.                  case FishingState.Training:                      if (Trainer == null || !Trainer.IsValid)                      {                          // Marcia Chase' Dalaran - Neutral.                          Trainer =                              Manager.ObjectManager.Objects.Where(x => x.IsValid && x.IsUnit)                                  .OfType<WoWUnit>()                                  .FirstOrDefault(u => u.Entry == 28742);                          return;                      }                        if (Trainer.Distance > 6f)                      {                          if (Manager.Movement.Destination == Trainer.Location)                              Sleep(100);                          Manager.Movement.PathTo(Trainer.Location);                          return;                      }                        if (!API.Gossip.IsShown && !API.Trainer.IsShown)                      {                          Trainer.Interact();                          return;                      }                        if (API.Gossip.IsShown)                      {                          GossipOption opt = API.Gossip.Options.FirstOrDefault(g => g.Gossip == GossipType.Trainer);                          if (opt != null)                              opt.Select();                          return;                      }                        if (API.Trainer.IsShown)                      {                          API.Trainer.BuyAllAvailable();                          Fishing = null;                          Manager.Spellbook.Update = true;                          CurrentState = FishingState.Lure;                          return;                      }                        CurrentState = FishingState.Lure;                        break;              }
Magic Number,IceFlake.Scripts,FishingBot,C:\repos\miceiken_IceFlake\IceFlake\Scripts\FishingScript.cs,OnTick,The following statement contains a magic number: switch (CurrentState)              {                  case FishingState.Lure:                      //if (!HasBait)                      //{                      //    // Implement applying lure                      //}                      ProfessionInfo fish = API.Profession.Fishing;                      if (fish != null)                      {                          if (fish.Level >= (fish.MaxLevel - 25) && fish.MaxLevel < 450)                          {                              CurrentState = FishingState.Training;                              return;                          }                      }                      CurrentState = FishingState.Cast;                      break;                    case FishingState.Cast:                      Print("Casting Fishing Pole");                      Fishing.Cast();                      CurrentState = FishingState.Fishing;                      break;                    case FishingState.Fishing:                      if (IsFishing)                      {                          if (IsBobbing)                              CurrentState = FishingState.Loot;                      }                      else                          CurrentState = FishingState.Lure;                      break;                    case FishingState.Loot:                      Print("Getting Fishing Bobber");                      Bobber.Interact();                      LootTimer = DateTime.Now;                      CurrentState = FishingState.Looting;                      break;                    case FishingState.Looting:                      TimeSpan span = DateTime.Now - LootTimer;                      if (span.TotalSeconds > 3)                      {                          Print("No loot? Back to fishing then!");                          CurrentState = FishingState.Lure;                      }                      break;                        // TODO: Clean up' add dynamic fishing trainer locator.                  case FishingState.Training:                      if (Trainer == null || !Trainer.IsValid)                      {                          // Marcia Chase' Dalaran - Neutral.                          Trainer =                              Manager.ObjectManager.Objects.Where(x => x.IsValid && x.IsUnit)                                  .OfType<WoWUnit>()                                  .FirstOrDefault(u => u.Entry == 28742);                          return;                      }                        if (Trainer.Distance > 6f)                      {                          if (Manager.Movement.Destination == Trainer.Location)                              Sleep(100);                          Manager.Movement.PathTo(Trainer.Location);                          return;                      }                        if (!API.Gossip.IsShown && !API.Trainer.IsShown)                      {                          Trainer.Interact();                          return;                      }                        if (API.Gossip.IsShown)                      {                          GossipOption opt = API.Gossip.Options.FirstOrDefault(g => g.Gossip == GossipType.Trainer);                          if (opt != null)                              opt.Select();                          return;                      }                        if (API.Trainer.IsShown)                      {                          API.Trainer.BuyAllAvailable();                          Fishing = null;                          Manager.Spellbook.Update = true;                          CurrentState = FishingState.Lure;                          return;                      }                        CurrentState = FishingState.Lure;                        break;              }
Magic Number,IceFlake.Scripts,FishingBot,C:\repos\miceiken_IceFlake\IceFlake\Scripts\FishingScript.cs,OnTick,The following statement contains a magic number: switch (CurrentState)              {                  case FishingState.Lure:                      //if (!HasBait)                      //{                      //    // Implement applying lure                      //}                      ProfessionInfo fish = API.Profession.Fishing;                      if (fish != null)                      {                          if (fish.Level >= (fish.MaxLevel - 25) && fish.MaxLevel < 450)                          {                              CurrentState = FishingState.Training;                              return;                          }                      }                      CurrentState = FishingState.Cast;                      break;                    case FishingState.Cast:                      Print("Casting Fishing Pole");                      Fishing.Cast();                      CurrentState = FishingState.Fishing;                      break;                    case FishingState.Fishing:                      if (IsFishing)                      {                          if (IsBobbing)                              CurrentState = FishingState.Loot;                      }                      else                          CurrentState = FishingState.Lure;                      break;                    case FishingState.Loot:                      Print("Getting Fishing Bobber");                      Bobber.Interact();                      LootTimer = DateTime.Now;                      CurrentState = FishingState.Looting;                      break;                    case FishingState.Looting:                      TimeSpan span = DateTime.Now - LootTimer;                      if (span.TotalSeconds > 3)                      {                          Print("No loot? Back to fishing then!");                          CurrentState = FishingState.Lure;                      }                      break;                        // TODO: Clean up' add dynamic fishing trainer locator.                  case FishingState.Training:                      if (Trainer == null || !Trainer.IsValid)                      {                          // Marcia Chase' Dalaran - Neutral.                          Trainer =                              Manager.ObjectManager.Objects.Where(x => x.IsValid && x.IsUnit)                                  .OfType<WoWUnit>()                                  .FirstOrDefault(u => u.Entry == 28742);                          return;                      }                        if (Trainer.Distance > 6f)                      {                          if (Manager.Movement.Destination == Trainer.Location)                              Sleep(100);                          Manager.Movement.PathTo(Trainer.Location);                          return;                      }                        if (!API.Gossip.IsShown && !API.Trainer.IsShown)                      {                          Trainer.Interact();                          return;                      }                        if (API.Gossip.IsShown)                      {                          GossipOption opt = API.Gossip.Options.FirstOrDefault(g => g.Gossip == GossipType.Trainer);                          if (opt != null)                              opt.Select();                          return;                      }                        if (API.Trainer.IsShown)                      {                          API.Trainer.BuyAllAvailable();                          Fishing = null;                          Manager.Spellbook.Update = true;                          CurrentState = FishingState.Lure;                          return;                      }                        CurrentState = FishingState.Lure;                        break;              }
Magic Number,IceFlake.Scripts,GuildRecruitmentScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\GuildRecruitScript.cs,OnTick,The following statement contains a magic number: switch (CurrentState)              {                  case GRState.Search:                      Print("Starting a new search for level {0}"' CurrentLevelSearch);                      LastSearch = DateTime.Now;                      WoWScript.ExecuteNoResults("SendWho(\"" + CurrentLevelSearch + "\")");                      TotalSearches++;                        CurrentState = GRState.Searching;                      break;                    case GRState.Searching:                      TimeSpan span = DateTime.Now - LastSearch;                      if (span.TotalSeconds > 5)                      {                          Print(                              "Last search didn't give any match after 5 seconds' maybe there are no characters in this level?");                          CurrentLevelSearch++;                          CurrentState = GRState.Search;                      }                      break;                    case GRState.Invite:                      List<string> searchResult = WoWScript.Execute("GetNumWhoResults()");                      int shownResults = int.Parse(searchResult[0]);                      int totalResults = int.Parse(searchResult[1]);                      Print("Search returned {0} visible matches out of a total {1}"' shownResults' totalResults);                      for (int i = 1; i <= shownResults; i++)                      {                          List<string> searchInfo = WoWScript.Execute("GetWhoInfo(" + i + ")");                          var charInfo = new WhoCharacterInfo                          {                              Name = searchInfo[0]'                              Guild = searchInfo[1]'                              Level = int.Parse(searchInfo[2])'                              Race = searchInfo[3]'                              Class = searchInfo[4]'                              Zone = searchInfo[5]                          };                            if (string.IsNullOrEmpty(charInfo.Guild) && !InvitedCharacters.ContainsKey(charInfo.Name))                          {                              Print("Inviting {0} (Level {1} {2} {3})"' charInfo.Name' charInfo.Level' charInfo.Race'                                  charInfo.Class);                              if (SendMessage)                                  WoWScript.ExecuteNoResults("SendChatMessage(\"" + RecruitMessage +                                                             "\"' \"WHISPER\"' nil' \"" + charInfo.Name + "\")");                              WoWScript.ExecuteNoResults("GuildInvite(\"" + charInfo.Name + "\")");                              InvitedCharacters.Add(charInfo.Name' charInfo);                          }                      }                        CurrentState = GRState.Search;                      Sleep(5000);                      break;                    case GRState.Completed:                      Print("Stopping after {0} searches and {1} invites"' TotalSearches' InvitedCharacters.Count);                      Stop();                      break;              }
Magic Number,IceFlake.Scripts,GuildRecruitmentScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\GuildRecruitScript.cs,OnTick,The following statement contains a magic number: switch (CurrentState)              {                  case GRState.Search:                      Print("Starting a new search for level {0}"' CurrentLevelSearch);                      LastSearch = DateTime.Now;                      WoWScript.ExecuteNoResults("SendWho(\"" + CurrentLevelSearch + "\")");                      TotalSearches++;                        CurrentState = GRState.Searching;                      break;                    case GRState.Searching:                      TimeSpan span = DateTime.Now - LastSearch;                      if (span.TotalSeconds > 5)                      {                          Print(                              "Last search didn't give any match after 5 seconds' maybe there are no characters in this level?");                          CurrentLevelSearch++;                          CurrentState = GRState.Search;                      }                      break;                    case GRState.Invite:                      List<string> searchResult = WoWScript.Execute("GetNumWhoResults()");                      int shownResults = int.Parse(searchResult[0]);                      int totalResults = int.Parse(searchResult[1]);                      Print("Search returned {0} visible matches out of a total {1}"' shownResults' totalResults);                      for (int i = 1; i <= shownResults; i++)                      {                          List<string> searchInfo = WoWScript.Execute("GetWhoInfo(" + i + ")");                          var charInfo = new WhoCharacterInfo                          {                              Name = searchInfo[0]'                              Guild = searchInfo[1]'                              Level = int.Parse(searchInfo[2])'                              Race = searchInfo[3]'                              Class = searchInfo[4]'                              Zone = searchInfo[5]                          };                            if (string.IsNullOrEmpty(charInfo.Guild) && !InvitedCharacters.ContainsKey(charInfo.Name))                          {                              Print("Inviting {0} (Level {1} {2} {3})"' charInfo.Name' charInfo.Level' charInfo.Race'                                  charInfo.Class);                              if (SendMessage)                                  WoWScript.ExecuteNoResults("SendChatMessage(\"" + RecruitMessage +                                                             "\"' \"WHISPER\"' nil' \"" + charInfo.Name + "\")");                              WoWScript.ExecuteNoResults("GuildInvite(\"" + charInfo.Name + "\")");                              InvitedCharacters.Add(charInfo.Name' charInfo);                          }                      }                        CurrentState = GRState.Search;                      Sleep(5000);                      break;                    case GRState.Completed:                      Print("Stopping after {0} searches and {1} invites"' TotalSearches' InvitedCharacters.Count);                      Stop();                      break;              }
Magic Number,IceFlake.Scripts,GuildRecruitmentScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\GuildRecruitScript.cs,OnTick,The following statement contains a magic number: switch (CurrentState)              {                  case GRState.Search:                      Print("Starting a new search for level {0}"' CurrentLevelSearch);                      LastSearch = DateTime.Now;                      WoWScript.ExecuteNoResults("SendWho(\"" + CurrentLevelSearch + "\")");                      TotalSearches++;                        CurrentState = GRState.Searching;                      break;                    case GRState.Searching:                      TimeSpan span = DateTime.Now - LastSearch;                      if (span.TotalSeconds > 5)                      {                          Print(                              "Last search didn't give any match after 5 seconds' maybe there are no characters in this level?");                          CurrentLevelSearch++;                          CurrentState = GRState.Search;                      }                      break;                    case GRState.Invite:                      List<string> searchResult = WoWScript.Execute("GetNumWhoResults()");                      int shownResults = int.Parse(searchResult[0]);                      int totalResults = int.Parse(searchResult[1]);                      Print("Search returned {0} visible matches out of a total {1}"' shownResults' totalResults);                      for (int i = 1; i <= shownResults; i++)                      {                          List<string> searchInfo = WoWScript.Execute("GetWhoInfo(" + i + ")");                          var charInfo = new WhoCharacterInfo                          {                              Name = searchInfo[0]'                              Guild = searchInfo[1]'                              Level = int.Parse(searchInfo[2])'                              Race = searchInfo[3]'                              Class = searchInfo[4]'                              Zone = searchInfo[5]                          };                            if (string.IsNullOrEmpty(charInfo.Guild) && !InvitedCharacters.ContainsKey(charInfo.Name))                          {                              Print("Inviting {0} (Level {1} {2} {3})"' charInfo.Name' charInfo.Level' charInfo.Race'                                  charInfo.Class);                              if (SendMessage)                                  WoWScript.ExecuteNoResults("SendChatMessage(\"" + RecruitMessage +                                                             "\"' \"WHISPER\"' nil' \"" + charInfo.Name + "\")");                              WoWScript.ExecuteNoResults("GuildInvite(\"" + charInfo.Name + "\")");                              InvitedCharacters.Add(charInfo.Name' charInfo);                          }                      }                        CurrentState = GRState.Search;                      Sleep(5000);                      break;                    case GRState.Completed:                      Print("Stopping after {0} searches and {1} invites"' TotalSearches' InvitedCharacters.Count);                      Stop();                      break;              }
Magic Number,IceFlake.Scripts,GuildRecruitmentScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\GuildRecruitScript.cs,OnTick,The following statement contains a magic number: switch (CurrentState)              {                  case GRState.Search:                      Print("Starting a new search for level {0}"' CurrentLevelSearch);                      LastSearch = DateTime.Now;                      WoWScript.ExecuteNoResults("SendWho(\"" + CurrentLevelSearch + "\")");                      TotalSearches++;                        CurrentState = GRState.Searching;                      break;                    case GRState.Searching:                      TimeSpan span = DateTime.Now - LastSearch;                      if (span.TotalSeconds > 5)                      {                          Print(                              "Last search didn't give any match after 5 seconds' maybe there are no characters in this level?");                          CurrentLevelSearch++;                          CurrentState = GRState.Search;                      }                      break;                    case GRState.Invite:                      List<string> searchResult = WoWScript.Execute("GetNumWhoResults()");                      int shownResults = int.Parse(searchResult[0]);                      int totalResults = int.Parse(searchResult[1]);                      Print("Search returned {0} visible matches out of a total {1}"' shownResults' totalResults);                      for (int i = 1; i <= shownResults; i++)                      {                          List<string> searchInfo = WoWScript.Execute("GetWhoInfo(" + i + ")");                          var charInfo = new WhoCharacterInfo                          {                              Name = searchInfo[0]'                              Guild = searchInfo[1]'                              Level = int.Parse(searchInfo[2])'                              Race = searchInfo[3]'                              Class = searchInfo[4]'                              Zone = searchInfo[5]                          };                            if (string.IsNullOrEmpty(charInfo.Guild) && !InvitedCharacters.ContainsKey(charInfo.Name))                          {                              Print("Inviting {0} (Level {1} {2} {3})"' charInfo.Name' charInfo.Level' charInfo.Race'                                  charInfo.Class);                              if (SendMessage)                                  WoWScript.ExecuteNoResults("SendChatMessage(\"" + RecruitMessage +                                                             "\"' \"WHISPER\"' nil' \"" + charInfo.Name + "\")");                              WoWScript.ExecuteNoResults("GuildInvite(\"" + charInfo.Name + "\")");                              InvitedCharacters.Add(charInfo.Name' charInfo);                          }                      }                        CurrentState = GRState.Search;                      Sleep(5000);                      break;                    case GRState.Completed:                      Print("Stopping after {0} searches and {1} invites"' TotalSearches' InvitedCharacters.Count);                      Stop();                      break;              }
Magic Number,IceFlake.Scripts,GuildRecruitmentScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\GuildRecruitScript.cs,OnTick,The following statement contains a magic number: switch (CurrentState)              {                  case GRState.Search:                      Print("Starting a new search for level {0}"' CurrentLevelSearch);                      LastSearch = DateTime.Now;                      WoWScript.ExecuteNoResults("SendWho(\"" + CurrentLevelSearch + "\")");                      TotalSearches++;                        CurrentState = GRState.Searching;                      break;                    case GRState.Searching:                      TimeSpan span = DateTime.Now - LastSearch;                      if (span.TotalSeconds > 5)                      {                          Print(                              "Last search didn't give any match after 5 seconds' maybe there are no characters in this level?");                          CurrentLevelSearch++;                          CurrentState = GRState.Search;                      }                      break;                    case GRState.Invite:                      List<string> searchResult = WoWScript.Execute("GetNumWhoResults()");                      int shownResults = int.Parse(searchResult[0]);                      int totalResults = int.Parse(searchResult[1]);                      Print("Search returned {0} visible matches out of a total {1}"' shownResults' totalResults);                      for (int i = 1; i <= shownResults; i++)                      {                          List<string> searchInfo = WoWScript.Execute("GetWhoInfo(" + i + ")");                          var charInfo = new WhoCharacterInfo                          {                              Name = searchInfo[0]'                              Guild = searchInfo[1]'                              Level = int.Parse(searchInfo[2])'                              Race = searchInfo[3]'                              Class = searchInfo[4]'                              Zone = searchInfo[5]                          };                            if (string.IsNullOrEmpty(charInfo.Guild) && !InvitedCharacters.ContainsKey(charInfo.Name))                          {                              Print("Inviting {0} (Level {1} {2} {3})"' charInfo.Name' charInfo.Level' charInfo.Race'                                  charInfo.Class);                              if (SendMessage)                                  WoWScript.ExecuteNoResults("SendChatMessage(\"" + RecruitMessage +                                                             "\"' \"WHISPER\"' nil' \"" + charInfo.Name + "\")");                              WoWScript.ExecuteNoResults("GuildInvite(\"" + charInfo.Name + "\")");                              InvitedCharacters.Add(charInfo.Name' charInfo);                          }                      }                        CurrentState = GRState.Search;                      Sleep(5000);                      break;                    case GRState.Completed:                      Print("Stopping after {0} searches and {1} invites"' TotalSearches' InvitedCharacters.Count);                      Stop();                      break;              }
Magic Number,IceFlake.Scripts,GuildRecruitmentScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\GuildRecruitScript.cs,OnTick,The following statement contains a magic number: switch (CurrentState)              {                  case GRState.Search:                      Print("Starting a new search for level {0}"' CurrentLevelSearch);                      LastSearch = DateTime.Now;                      WoWScript.ExecuteNoResults("SendWho(\"" + CurrentLevelSearch + "\")");                      TotalSearches++;                        CurrentState = GRState.Searching;                      break;                    case GRState.Searching:                      TimeSpan span = DateTime.Now - LastSearch;                      if (span.TotalSeconds > 5)                      {                          Print(                              "Last search didn't give any match after 5 seconds' maybe there are no characters in this level?");                          CurrentLevelSearch++;                          CurrentState = GRState.Search;                      }                      break;                    case GRState.Invite:                      List<string> searchResult = WoWScript.Execute("GetNumWhoResults()");                      int shownResults = int.Parse(searchResult[0]);                      int totalResults = int.Parse(searchResult[1]);                      Print("Search returned {0} visible matches out of a total {1}"' shownResults' totalResults);                      for (int i = 1; i <= shownResults; i++)                      {                          List<string> searchInfo = WoWScript.Execute("GetWhoInfo(" + i + ")");                          var charInfo = new WhoCharacterInfo                          {                              Name = searchInfo[0]'                              Guild = searchInfo[1]'                              Level = int.Parse(searchInfo[2])'                              Race = searchInfo[3]'                              Class = searchInfo[4]'                              Zone = searchInfo[5]                          };                            if (string.IsNullOrEmpty(charInfo.Guild) && !InvitedCharacters.ContainsKey(charInfo.Name))                          {                              Print("Inviting {0} (Level {1} {2} {3})"' charInfo.Name' charInfo.Level' charInfo.Race'                                  charInfo.Class);                              if (SendMessage)                                  WoWScript.ExecuteNoResults("SendChatMessage(\"" + RecruitMessage +                                                             "\"' \"WHISPER\"' nil' \"" + charInfo.Name + "\")");                              WoWScript.ExecuteNoResults("GuildInvite(\"" + charInfo.Name + "\")");                              InvitedCharacters.Add(charInfo.Name' charInfo);                          }                      }                        CurrentState = GRState.Search;                      Sleep(5000);                      break;                    case GRState.Completed:                      Print("Stopping after {0} searches and {1} invites"' TotalSearches' InvitedCharacters.Count);                      Stop();                      break;              }
Magic Number,IceFlake.Scripts,GuildRecruitmentScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\GuildRecruitScript.cs,OnTick,The following statement contains a magic number: Sleep(500);
Magic Number,IceFlake.Scripts,GuildRecruitmentScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\GuildRecruitScript.cs,HandleEvent,The following statement contains a magic number: CurrentState = (CurrentLevelSearch <= 85 ? GRState.Invite : GRState.Completed);
Magic Number,IceFlake.Scripts,LoginScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\LoginScript.cs,OnTick,The following statement contains a magic number: Sleep(2000);
Magic Number,IceFlake.Scripts,VendorScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\VendorScript.cs,OnTick,The following statement contains a magic number: if (Vendor.Distance > 6)              {                  if (Manager.Movement.Destination == Vendor.Location)                      Sleep(100);                  Manager.Movement.PathTo(Vendor.Location);                  Sleep(100);              }
Magic Number,IceFlake.Scripts,VendorScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\VendorScript.cs,OnTick,The following statement contains a magic number: if (Vendor.Distance > 6)              {                  if (Manager.Movement.Destination == Vendor.Location)                      Sleep(100);                  Manager.Movement.PathTo(Vendor.Location);                  Sleep(100);              }
Magic Number,IceFlake.Scripts,VendorScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\VendorScript.cs,OnTick,The following statement contains a magic number: if (Vendor.Distance > 6)              {                  if (Manager.Movement.Destination == Vendor.Location)                      Sleep(100);                  Manager.Movement.PathTo(Vendor.Location);                  Sleep(100);              }
Magic Number,IceFlake.Scripts,VendorScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\VendorScript.cs,OnTick,The following statement contains a magic number: if (!API.Gossip.IsShown && !API.Merchant.IsShown)              {                  Vendor.Interact();                  Sleep(1000);              }
Magic Number,IceFlake.Scripts,VendorScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\VendorScript.cs,OnTick,The following statement contains a magic number: if (API.Gossip.IsShown)              {                  GossipOption opt = API.Gossip.Options.FirstOrDefault(x => x.Gossip == GossipType.Vendor);                  if (opt == null) // Vendor doesn't have repairer gossip?                      Stop();                  opt.Select();                  Sleep(1000);              }
Missing Default,IceFlake.Client,CDataStore,C:\repos\miceiken_IceFlake\IceFlake\Client\CDataStore.cs,Read,The following switch statement is missing a default case: switch (Type.GetTypeCode(typeof(T)))              {                  case TypeCode.Byte:                      ret = (byte)GetInt8();                      break;                  case TypeCode.Int16:                      ret = (short)GetInt16();                      break;                  case TypeCode.Int32:                      ret = (int)GetInt32();                      break;                  case TypeCode.Int64:                      ret = (long)GetInt64();                      break;                  case TypeCode.Single:                      ret = (float)GetFloat();                      break;              }
Missing Default,IceFlake.Client,CDataStore,C:\repos\miceiken_IceFlake\IceFlake\Client\CDataStore.cs,Write,The following switch statement is missing a default case: switch (Type.GetTypeCode(typeof(T)))              {                  case TypeCode.Byte:                      PutInt8(Convert.ToByte(value));                      break;                  case TypeCode.Int16:                      PutInt16(Convert.ToInt16(value));                      break;                  case TypeCode.Int32:                      PutInt32(Convert.ToInt32(value));                      break;                  case TypeCode.Int64:                      PutInt64(Convert.ToInt64(value));                      break;                  case TypeCode.Single:                      PutFloat(Convert.ToSingle(value));                      break;              }
Missing Default,IceFlake.Client.Routines,RoutineBrain,C:\repos\miceiken_IceFlake\IceFlake\Client\Routines\RoutineBrain.cs,HandleCombatEvents,The following switch statement is missing a default case: switch (ev)              {                  case "PLAYER_REGEN_DISABLED":                      OnEnterCombat();                      break;                  case "PLAYER_REGEN_ENABLED":                      OnExitCombat();                      break;              }
Missing Default,IceFlake.Client.Objects,WoWItem,C:\repos\miceiken_IceFlake\IceFlake\Client\Objects\WoWItem.cs,GetInventorySlotsByEquipSlot,The following switch statement is missing a default case: switch (type)              {                  case InventoryType.Head:                      yield return EquipSlot.Head;                      break;                  case InventoryType.Neck:                      yield return EquipSlot.Neck;                      break;                  case InventoryType.Shoulders:                      yield return EquipSlot.Shoulders;                      break;                  case InventoryType.Body:                      yield return EquipSlot.Body;                      break;                  case InventoryType.Chest:                  case InventoryType.Robe:                      yield return EquipSlot.Chest;                      break;                  case InventoryType.Waist:                      yield return EquipSlot.Waist;                      break;                  case InventoryType.Legs:                      yield return EquipSlot.Legs;                      break;                  case InventoryType.Feet:                      yield return EquipSlot.Feet;                      break;                  case InventoryType.Wrists:                      yield return EquipSlot.Wrists;                      break;                  case InventoryType.Hands:                      yield return EquipSlot.Hands;                      break;                  case InventoryType.Finger:                      yield return EquipSlot.Finger1;                      yield return EquipSlot.Finger2;                      break;                  case InventoryType.Trinket:                      yield return EquipSlot.Trinket1;                      yield return EquipSlot.Trinket2;                      break;                  case InventoryType.Weapon:                      yield return EquipSlot.MainHand;                      yield return EquipSlot.OffHand;                      break;                  case InventoryType.Shield:                  case InventoryType.WeaponOffHand:                  case InventoryType.Holdable:                      yield return EquipSlot.OffHand;                      break;                  case InventoryType.Ranged:                  case InventoryType.Thrown:                  case InventoryType.RangedRight:                  case InventoryType.Relic:                      yield return EquipSlot.Ranged;                      break;                  case InventoryType.Cloak:                      yield return EquipSlot.Back;                      break;                  case InventoryType.TwoHandedWeapon:                  {                      yield return EquipSlot.MainHand;                      // TODO: Check for titan's grip                      //bool flag = Manager.LocalPlayer.Class == WoWClass.Warrior && WoWScript.Execute<int>(InventoryManager.#a(61464)' 4u) > 0;                      //var mainHand = Manager.LocalPlayer.GetEquippedItem(EquipSlot.MainHand);                      //if (flag && mainHand != null && mainHand.ItemInfo.InventoryType == InventoryType.TwoHandedWeapon)                      //{                      //    yield return EquipSlot.OffHand;                      //}                      break;                  }                  case InventoryType.Bag:                  case InventoryType.Quiver:                      yield return EquipSlot.Bag1;                      yield return EquipSlot.Bag2;                      yield return EquipSlot.Bag3;                      yield return EquipSlot.Bag4;                      break;                  case InventoryType.Tabard:                      yield return EquipSlot.Tabard;                      break;                  case InventoryType.WeaponMainHand:                      yield return EquipSlot.MainHand;                      break;              }
Missing Default,IceFlake.Scripts,EquippedItemsDumperScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\DumpersScripts.cs,OnStart,The following switch statement is missing a default case: switch (itemInfo.Class)                  {                      case ItemClass.Armor:                          Print("\tArmor Class: {0}"' (ItemArmorClass) itemInfo.SubClassId);                          break;                      case ItemClass.Weapon:                          Print("\tWeapon Class: {0}"' (ItemWeaponClass) itemInfo.SubClassId);                          break;                  }
Missing Default,IceFlake.Scripts,FishingBot,C:\repos\miceiken_IceFlake\IceFlake\Scripts\FishingScript.cs,OnTick,The following switch statement is missing a default case: switch (CurrentState)              {                  case FishingState.Lure:                      //if (!HasBait)                      //{                      //    // Implement applying lure                      //}                      ProfessionInfo fish = API.Profession.Fishing;                      if (fish != null)                      {                          if (fish.Level >= (fish.MaxLevel - 25) && fish.MaxLevel < 450)                          {                              CurrentState = FishingState.Training;                              return;                          }                      }                      CurrentState = FishingState.Cast;                      break;                    case FishingState.Cast:                      Print("Casting Fishing Pole");                      Fishing.Cast();                      CurrentState = FishingState.Fishing;                      break;                    case FishingState.Fishing:                      if (IsFishing)                      {                          if (IsBobbing)                              CurrentState = FishingState.Loot;                      }                      else                          CurrentState = FishingState.Lure;                      break;                    case FishingState.Loot:                      Print("Getting Fishing Bobber");                      Bobber.Interact();                      LootTimer = DateTime.Now;                      CurrentState = FishingState.Looting;                      break;                    case FishingState.Looting:                      TimeSpan span = DateTime.Now - LootTimer;                      if (span.TotalSeconds > 3)                      {                          Print("No loot? Back to fishing then!");                          CurrentState = FishingState.Lure;                      }                      break;                        // TODO: Clean up' add dynamic fishing trainer locator.                  case FishingState.Training:                      if (Trainer == null || !Trainer.IsValid)                      {                          // Marcia Chase' Dalaran - Neutral.                          Trainer =                              Manager.ObjectManager.Objects.Where(x => x.IsValid && x.IsUnit)                                  .OfType<WoWUnit>()                                  .FirstOrDefault(u => u.Entry == 28742);                          return;                      }                        if (Trainer.Distance > 6f)                      {                          if (Manager.Movement.Destination == Trainer.Location)                              Sleep(100);                          Manager.Movement.PathTo(Trainer.Location);                          return;                      }                        if (!API.Gossip.IsShown && !API.Trainer.IsShown)                      {                          Trainer.Interact();                          return;                      }                        if (API.Gossip.IsShown)                      {                          GossipOption opt = API.Gossip.Options.FirstOrDefault(g => g.Gossip == GossipType.Trainer);                          if (opt != null)                              opt.Select();                          return;                      }                        if (API.Trainer.IsShown)                      {                          API.Trainer.BuyAllAvailable();                          Fishing = null;                          Manager.Spellbook.Update = true;                          CurrentState = FishingState.Lure;                          return;                      }                        CurrentState = FishingState.Lure;                        break;              }
Missing Default,IceFlake.Scripts,FishingBot,C:\repos\miceiken_IceFlake\IceFlake\Scripts\FishingScript.cs,HandleFishingEvents,The following switch statement is missing a default case: switch (ev)              {                  case "LOOT_OPENED":                      Print("We have {0} catches to loot"' args[0]);                      break;                    case "LOOT_SLOT_CLEARED":                      //var loot = WoWScript.Execute("GetLootSlotInfo(" + args[0] + ")");                      //Print("Looted [{0}]x{1}"' loot[1]' loot[2]);                      break;                    case "LOOT_CLOSED":                      span = DateTime.Now - LootTimer;                      Print("Looting took {0} seconds."' Math.Round(span.TotalSeconds' 1));                      Fishes++;                      CurrentState = FishingState.Lure;                      break;                    case "SKILL_LINES_CHANGED":                      Print("Seems like we leveled up our fishing!");                      break;                    case "PLAYER_REGEN_DISABLED":                      Print("Seems like we entered combat!");                      CombatTimer = DateTime.Now;                      //if (CanHandleCombat)                      //    Combat.Pulse();                      //else                      //    Print("... too bad you didn't select a combat brain' now we're going to die");                      CurrentState = FishingState.Combat;                      break;                    case "PLAYER_REGEN_ENABLED":                      span = DateTime.Now - CombatTimer;                      Print("Combat done after {0} seconds"' Math.Round(span.TotalSeconds' 1));                      CurrentState = FishingState.Lure;                      break;              }
Missing Default,IceFlake.Scripts,GuildRecruitmentScript,C:\repos\miceiken_IceFlake\IceFlake\Scripts\GuildRecruitScript.cs,OnTick,The following switch statement is missing a default case: switch (CurrentState)              {                  case GRState.Search:                      Print("Starting a new search for level {0}"' CurrentLevelSearch);                      LastSearch = DateTime.Now;                      WoWScript.ExecuteNoResults("SendWho(\"" + CurrentLevelSearch + "\")");                      TotalSearches++;                        CurrentState = GRState.Searching;                      break;                    case GRState.Searching:                      TimeSpan span = DateTime.Now - LastSearch;                      if (span.TotalSeconds > 5)                      {                          Print(                              "Last search didn't give any match after 5 seconds' maybe there are no characters in this level?");                          CurrentLevelSearch++;                          CurrentState = GRState.Search;                      }                      break;                    case GRState.Invite:                      List<string> searchResult = WoWScript.Execute("GetNumWhoResults()");                      int shownResults = int.Parse(searchResult[0]);                      int totalResults = int.Parse(searchResult[1]);                      Print("Search returned {0} visible matches out of a total {1}"' shownResults' totalResults);                      for (int i = 1; i <= shownResults; i++)                      {                          List<string> searchInfo = WoWScript.Execute("GetWhoInfo(" + i + ")");                          var charInfo = new WhoCharacterInfo                          {                              Name = searchInfo[0]'                              Guild = searchInfo[1]'                              Level = int.Parse(searchInfo[2])'                              Race = searchInfo[3]'                              Class = searchInfo[4]'                              Zone = searchInfo[5]                          };                            if (string.IsNullOrEmpty(charInfo.Guild) && !InvitedCharacters.ContainsKey(charInfo.Name))                          {                              Print("Inviting {0} (Level {1} {2} {3})"' charInfo.Name' charInfo.Level' charInfo.Race'                                  charInfo.Class);                              if (SendMessage)                                  WoWScript.ExecuteNoResults("SendChatMessage(\"" + RecruitMessage +                                                             "\"' \"WHISPER\"' nil' \"" + charInfo.Name + "\")");                              WoWScript.ExecuteNoResults("GuildInvite(\"" + charInfo.Name + "\")");                              InvitedCharacters.Add(charInfo.Name' charInfo);                          }                      }                        CurrentState = GRState.Search;                      Sleep(5000);                      break;                    case GRState.Completed:                      Print("Stopping after {0} searches and {1} invites"' TotalSearches' InvitedCharacters.Count);                      Stop();                      break;              }
