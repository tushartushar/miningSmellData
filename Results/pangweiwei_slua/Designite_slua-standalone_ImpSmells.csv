Implementation smell,Namespace,Class,File,Method,Description
Long Method,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,init,The method has 105 lines of code.
Complex Method,SLua,Lua3rdDLL,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Lua3rdDLL.cs,open,Cyclomatic complexity of the method is 9
Complex Method,SLua,LuaTimer,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Timer.cs,tick,Cyclomatic complexity of the method is 12
Long Parameter List,SLua,LuaDLL,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaDLL.cs,luaS_checkVector3,The method has 5 parameters. Parameters: l' p' x' y' z
Long Parameter List,SLua,LuaDLL,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaDLL.cs,luaS_checkVector4,The method has 6 parameters. Parameters: l' p' x' y' z' w
Long Parameter List,SLua,LuaDLL,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaDLL.cs,luaS_checkQuaternion,The method has 6 parameters. Parameters: l' p' x' y' z' w
Long Parameter List,SLua,LuaDLL,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaDLL.cs,luaS_checkColor,The method has 6 parameters. Parameters: l' p' x' y' z' w
Long Parameter List,SLua,LuaDLL,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaDLL.cs,luaS_pushVector4,The method has 5 parameters. Parameters: l' x' y' z' w
Long Parameter List,SLua,LuaDLL,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaDLL.cs,luaS_pushQuaternion,The method has 5 parameters. Parameters: l' x' y' z' w
Long Parameter List,SLua,LuaDLL,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaDLL.cs,luaS_pushColor,The method has 5 parameters. Parameters: l' x' y' z' w
Long Parameter List,SLua,LuaDLL,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaDLL.cs,luaS_setDataVec,The method has 6 parameters. Parameters: l' p' x' y' z' w
Long Parameter List,SLua,LuaDLL,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaDLL.cs,luaS_pushobject,The method has 5 parameters. Parameters: l' index' t' gco' cref
Long Parameter List,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,addMember,The method has 5 parameters. Parameters: l' name' get' set' instance
Long Parameter List,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The method has 5 parameters. Parameters: l' total' from' t1' t2
Long Parameter List,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The method has 6 parameters. Parameters: l' total' from' t1' t2' t3
Long Parameter List,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The method has 7 parameters. Parameters: l' total' from' t1' t2' t3' t4
Long Parameter List,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The method has 8 parameters. Parameters: l' total' from' t1' t2' t3' t4' t5
Long Parameter List,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The method has 9 parameters. Parameters: l' total' from' t1' t2' t3' t4' t5' t6
Long Parameter List,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The method has 10 parameters. Parameters: l' total' from' t1' t2' t3' t4' t5' t6' t7
Long Parameter List,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The method has 11 parameters. Parameters: l' total' from' t1' t2' t3' t4' t5' t6' t7' t8
Long Parameter List,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The method has 12 parameters. Parameters: l' total' from' t1' t2' t3' t4' t5' t6' t7' t8' t9
Long Parameter List,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The method has 13 parameters. Parameters: l' total' from' t1' t2' t3' t4' t5' t6' t7' t8' t9' t10
Long Statement,SLua,LuaDLL,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaDLL.cs,luaL_checktype,The length of the statement  "                throw new Exception(string.Format("arg {0} expect {1}' got {2}"' p' lua_typenamestr(luaState' t)' lua_typenamestr(luaState' ct))); " is 130.
Long Statement,SLua,LuaDLL,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaDLL.cs,lua_pushcfunction,The length of the statement  "            // Add all LuaCSFunction£¬ or they will be GC collected!  (problem at windows' .net framework 4.5' `CallbackOnCollectedDelegated` exception) " is 140.
Long Statement,SLua,LuaDLL,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaDLL.cs,lua_pushcclosure,The length of the statement  "            // Add all LuaCSFunction£¬ or they will be GC collected!  (problem at windows' .net framework 4.5' `CallbackOnCollectedDelegated` exception) " is 140.
Long Statement,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The length of the statement  "			return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4); " is 120.
Long Statement,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,checkVar,The length of the statement  "				throw new Exception(string.Format("parameter {0} expected {1}' got {2}' exception: {3}"' p' t.Name' obj == null ? "null" : obj.GetType().Name' e.Message)); " is 155.
Long Statement,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,setupPushVar,The length of the statement  "            regPushVar(typeof(UnityEngine.Quaternion)' (IntPtr L' object o) => { LuaObject.pushValue(L' (UnityEngine.Quaternion)o); }); " is 123.
Long Statement,SLua,MainState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaSvr.cs,checkTop,The length of the statement  "					Logger.LogError(string.Format("Some function not remove temp value({0}) from lua stack. You should fix it."'LuaDLL.luaL_typename(L'errorReported))); " is 148.
Long Statement,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,CollectTypeMembers,The length of the statement  "            var mems = type.GetMembers(BindingFlags.Static | BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.DeclaredOnly); // GetMembers can get basetType's members' but GetMember cannot " is 211.
Long Statement,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,newindexString,The length of the statement  "            //MemberInfo[] mis = t.GetMember(key' BindingFlags.Static | BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic); " is 130.
Long Statement,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,indexInt,The length of the statement  "                    dictKey = changeType(dictKey' keyType); // if key is not int but ushort/uint'  IDictionary will cannot find the key and return null! " is 132.
Long Statement,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,newindexInt,The length of the statement  "                dictKey = changeType(dictKey' keyType); // if key is not int but ushort/uint'  IDictionary will cannot find the key and return null! " is 132.
Complex Conditional,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,CleanUTF8Bom,The conditional expression  "bytes.Length > 3 && bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF"  is complex.
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,ReAlloc,The following statement contains a magic number: if (ba.Length < (pos + size)) {  				Array.Resize<byte> (ref ba' (int)(ba.Length + size + 1024));  			}
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,ByteArray,The following statement contains a magic number: data_ = new byte[32];
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,ReadInt,The following statement contains a magic number: pos_ += 4;
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,ReadUInt,The following statement contains a magic number: pos_ += 4;
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,ReadSByte,The following statement contains a magic number: if (data_ [pos_] > 127)  				return (sbyte)(data_ [pos_++] - 256);  			else  				return (sbyte)(data_ [pos_++]);
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,ReadSByte,The following statement contains a magic number: if (data_ [pos_] > 127)  				return (sbyte)(data_ [pos_++] - 256);  			else  				return (sbyte)(data_ [pos_++]);
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,ReadInt16,The following statement contains a magic number: pos_ += 2;
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,ReadUInt16,The following statement contains a magic number: pos_ += 2;
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,ReadInt64,The following statement contains a magic number: pos_ += 8;
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,ReadFloat,The following statement contains a magic number: pos_ += 4;
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,ReadDouble,The following statement contains a magic number: pos_ += 8;
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,WriteInt,The following statement contains a magic number: ReAlloc (ref data_' pos_' 4);
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,WriteInt,The following statement contains a magic number: pos_ += 4;
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,WriteUInt,The following statement contains a magic number: ReAlloc (ref data_' pos_' 4);
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,WriteUInt,The following statement contains a magic number: pos_ += 4;
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,WriteUShort,The following statement contains a magic number: ReAlloc (ref data_' pos_' 2);
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,WriteUShort,The following statement contains a magic number: pos_+=2;
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,WriteShort,The following statement contains a magic number: ReAlloc (ref data_' pos_' 2);
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,WriteShort,The following statement contains a magic number: pos_+=2;
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,WriteFloat,The following statement contains a magic number: ReAlloc (ref data_' pos_' 4);
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,WriteFloat,The following statement contains a magic number: pos_ += 4;
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,WriteNum,The following statement contains a magic number: ReAlloc (ref data_' pos_' 8);
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,WriteNum,The following statement contains a magic number: pos_ += 8;
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,WriteInt64,The following statement contains a magic number: pos_ += 8;
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,ReadVarInt,The following statement contains a magic number: int shift = 7;
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,ReadVarInt,The following statement contains a magic number: while ((ch & 0x80) > 0 && pos_<data_.Length-1) {  				ch = ReadByte ();  				v |= (((Int64)(ch & 0x7f)) << shift);  				shift += 7;  			}
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,WriteVarInt,The following statement contains a magic number: while (uv >= 0x80) {  				WriteByte ((byte)(uv | 0x80));  				uv >>= 7;  			}
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,ReadInt48,The following statement contains a magic number: Int64 int48 = (Int64)((UInt64)high << 32 | low);
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,ReadInt48L,The following statement contains a magic number: Int64 v = (Int64)(low | (high << 32));
Magic Number,SLua,ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ByteArray.cs,ReadUInt64,The following statement contains a magic number: pos_ += 8;
Magic Number,SLua,Helper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Helper.cs,iter,The following statement contains a magic number: if (o is IEnumerable)  			{  				IEnumerable e = o as IEnumerable;  				IEnumerator iter = e.GetEnumerator();  				pushValue(l' true);  				pushLightObject(l' iter);  				LuaDLL.lua_pushcclosure(l' _iter' 1);  				return 2;  			}
Magic Number,SLua,Helper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Helper.cs,CreateAction,The following statement contains a magic number: try              {                    LuaFunction func;                  checkType(l' 1' out func);                  var action = new Action(() =>                  {                      func.call();                    });                  pushValue(l' true);                  pushVar(l' action);                  return 2;              }              catch (Exception e)              {                  return error(l' e);              }
Magic Number,SLua,Helper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Helper.cs,CreateClass,The following statement contains a magic number: try  			{  				string cls;  				checkType(l' 1' out cls);  				Type t = LuaObject.FindType(cls);  				if (t == null)  				{  					return error(l' string.Format("Can't find {0} to create"' cls));  				}    				ConstructorInfo[] cis = t.GetConstructors();  				ConstructorInfo target = null;  				for (int n = 0; n < cis.Length; n++)  				{  					ConstructorInfo ci = cis[n];  					if (matchType(l' LuaDLL.lua_gettop(l)' 2' ci.GetParameters()))  					{  						target = ci;  						break;  					}  				}    				if (target != null)  				{  					ParameterInfo[] pis = target.GetParameters();  					object[] args = new object[pis.Length];  					for (int n = 0; n < pis.Length; n++)  						args[n] = changeType(checkVar(l' n + 2)' pis[n].ParameterType);    					object ret = target.Invoke(args);  					pushValue(l' true);  					pushVar(l' ret);  					return 2;  				}  				pushValue(l' true);  				return 1;  			}  			catch (Exception e)  			{  				return error(l'e);  			}
Magic Number,SLua,Helper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Helper.cs,CreateClass,The following statement contains a magic number: try  			{  				string cls;  				checkType(l' 1' out cls);  				Type t = LuaObject.FindType(cls);  				if (t == null)  				{  					return error(l' string.Format("Can't find {0} to create"' cls));  				}    				ConstructorInfo[] cis = t.GetConstructors();  				ConstructorInfo target = null;  				for (int n = 0; n < cis.Length; n++)  				{  					ConstructorInfo ci = cis[n];  					if (matchType(l' LuaDLL.lua_gettop(l)' 2' ci.GetParameters()))  					{  						target = ci;  						break;  					}  				}    				if (target != null)  				{  					ParameterInfo[] pis = target.GetParameters();  					object[] args = new object[pis.Length];  					for (int n = 0; n < pis.Length; n++)  						args[n] = changeType(checkVar(l' n + 2)' pis[n].ParameterType);    					object ret = target.Invoke(args);  					pushValue(l' true);  					pushVar(l' ret);  					return 2;  				}  				pushValue(l' true);  				return 1;  			}  			catch (Exception e)  			{  				return error(l'e);  			}
Magic Number,SLua,Helper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Helper.cs,CreateClass,The following statement contains a magic number: try  			{  				string cls;  				checkType(l' 1' out cls);  				Type t = LuaObject.FindType(cls);  				if (t == null)  				{  					return error(l' string.Format("Can't find {0} to create"' cls));  				}    				ConstructorInfo[] cis = t.GetConstructors();  				ConstructorInfo target = null;  				for (int n = 0; n < cis.Length; n++)  				{  					ConstructorInfo ci = cis[n];  					if (matchType(l' LuaDLL.lua_gettop(l)' 2' ci.GetParameters()))  					{  						target = ci;  						break;  					}  				}    				if (target != null)  				{  					ParameterInfo[] pis = target.GetParameters();  					object[] args = new object[pis.Length];  					for (int n = 0; n < pis.Length; n++)  						args[n] = changeType(checkVar(l' n + 2)' pis[n].ParameterType);    					object ret = target.Invoke(args);  					pushValue(l' true);  					pushVar(l' ret);  					return 2;  				}  				pushValue(l' true);  				return 1;  			}  			catch (Exception e)  			{  				return error(l'e);  			}
Magic Number,SLua,Helper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Helper.cs,GetClass,The following statement contains a magic number: try  			{  				string cls;  				checkType(l' 1' out cls);  				Type t = LuaObject.FindType(cls);  				if (t == null)  				{  					return error(l' "Can't find {0} to create"' cls);  				}    				LuaClassObject co = new LuaClassObject(t);  				pushValue(l' true);  				LuaObject.pushObject(l'co);  				return 2;  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,Helper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Helper.cs,ToBytes,The following statement contains a magic number: try{  				byte[] bytes = null;  				checkBinaryString(l'1'out bytes);  				pushValue(l'true);  				LuaObject.pushObject(l'bytes);  				return 2;    			}catch(System.Exception e){  				return error(l' e);  			}
Magic Number,SLua,Helper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Helper.cs,ToString,The following statement contains a magic number: try  			{  				object o = checkObj(l' 1);  				if (o == null)  				{  					pushValue(l' true);  					LuaDLL.lua_pushnil(l);  					return 2;  				}    				pushValue(l' true);  				if (o is byte[])  				{  					byte[] b = (byte[])o;  					LuaDLL.lua_pushlstring(l' b' b.Length);  				}  				else  				{  					pushValue(l' o.ToString());  				}  				return 2;  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,Helper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Helper.cs,ToString,The following statement contains a magic number: try  			{  				object o = checkObj(l' 1);  				if (o == null)  				{  					pushValue(l' true);  					LuaDLL.lua_pushnil(l);  					return 2;  				}    				pushValue(l' true);  				if (o is byte[])  				{  					byte[] b = (byte[])o;  					LuaDLL.lua_pushlstring(l' b' b.Length);  				}  				else  				{  					pushValue(l' o.ToString());  				}  				return 2;  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,Helper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Helper.cs,MakeArray,The following statement contains a magic number: try  			{  				Type t;  				checkType (l'1'out t);  				LuaDLL.luaL_checktype(l' 2' LuaTypes.LUA_TTABLE);  				int n = LuaDLL.lua_rawlen(l' 2);  				Array array=Array.CreateInstance(t'n);  				for (int k = 0; k < n; k++)  				{  					LuaDLL.lua_rawgeti(l' 2' k + 1);  				    var obj = checkVar(l' -1);  					array.SetValue(changeType(obj' t)' k);  					LuaDLL.lua_pop(l' 1);  				}  				pushValue(l' true);  				pushValue(l' array);  				return 2;  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,Helper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Helper.cs,MakeArray,The following statement contains a magic number: try  			{  				Type t;  				checkType (l'1'out t);  				LuaDLL.luaL_checktype(l' 2' LuaTypes.LUA_TTABLE);  				int n = LuaDLL.lua_rawlen(l' 2);  				Array array=Array.CreateInstance(t'n);  				for (int k = 0; k < n; k++)  				{  					LuaDLL.lua_rawgeti(l' 2' k + 1);  				    var obj = checkVar(l' -1);  					array.SetValue(changeType(obj' t)' k);  					LuaDLL.lua_pop(l' 1);  				}  				pushValue(l' true);  				pushValue(l' array);  				return 2;  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,Helper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Helper.cs,MakeArray,The following statement contains a magic number: try  			{  				Type t;  				checkType (l'1'out t);  				LuaDLL.luaL_checktype(l' 2' LuaTypes.LUA_TTABLE);  				int n = LuaDLL.lua_rawlen(l' 2);  				Array array=Array.CreateInstance(t'n);  				for (int k = 0; k < n; k++)  				{  					LuaDLL.lua_rawgeti(l' 2' k + 1);  				    var obj = checkVar(l' -1);  					array.SetValue(changeType(obj' t)' k);  					LuaDLL.lua_pop(l' 1);  				}  				pushValue(l' true);  				pushValue(l' array);  				return 2;  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,Helper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Helper.cs,MakeArray,The following statement contains a magic number: try  			{  				Type t;  				checkType (l'1'out t);  				LuaDLL.luaL_checktype(l' 2' LuaTypes.LUA_TTABLE);  				int n = LuaDLL.lua_rawlen(l' 2);  				Array array=Array.CreateInstance(t'n);  				for (int k = 0; k < n; k++)  				{  					LuaDLL.lua_rawgeti(l' 2' k + 1);  				    var obj = checkVar(l' -1);  					array.SetValue(changeType(obj' t)' k);  					LuaDLL.lua_pop(l' 1);  				}  				pushValue(l' true);  				pushValue(l' array);  				return 2;  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,Helper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Helper.cs,As,The following statement contains a magic number: try  			{  				if (!isTypeTable(l' 2))  				{  					return error(l' "No matched type of param 2");  				}  				string meta = LuaDLL.lua_tostring(l' -1);  				LuaDLL.luaL_getmetatable(l' meta);  				LuaDLL.lua_setmetatable(l' 1);  				pushValue(l' true);  				LuaDLL.lua_pushvalue(l' 1);  				return 2;  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,Helper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Helper.cs,As,The following statement contains a magic number: try  			{  				if (!isTypeTable(l' 2))  				{  					return error(l' "No matched type of param 2");  				}  				string meta = LuaDLL.lua_tostring(l' -1);  				LuaDLL.luaL_getmetatable(l' meta);  				LuaDLL.lua_setmetatable(l' 1);  				pushValue(l' true);  				LuaDLL.lua_pushvalue(l' 1);  				return 2;  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,Helper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Helper.cs,IsNull,The following statement contains a magic number: try  			{  				LuaTypes t = LuaDLL.lua_type(l' 1);  				pushValue(l' true);    				if (t == LuaTypes.LUA_TNIL)  				{  					pushValue(l' true);  				}  				// LUA_TUSERDATA or LUA_TTABLE(Class inherited from Unity Native)  				else if (t == LuaTypes.LUA_TUSERDATA || isLuaClass(l' 1))  				{  					object o = checkObj(l' 1);  #if !SLUA_STANDALONE  					if( o is UnityEngine.Object )  					{  						pushValue(l' ((UnityEngine.Object)o)==null);  					}  					else  #endif  						pushValue(l' o.Equals(null));  				}  				else  					pushValue(l' false);    				return 2;  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,Helper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Helper.cs,get_out,The following statement contains a magic number: return 2;
Magic Number,SLua,Helper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Helper.cs,get_version,The following statement contains a magic number: return 2;
Magic Number,SLua,Helper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Helper.cs,reg,The following statement contains a magic number: LuaDLL.lua_setfield(l' -3' "Class");
Magic Number,SLua,Lua3rdDLL,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Lua3rdDLL.cs,open,The following statement contains a magic number: foreach (KeyValuePair<string' LuaCSFunction> pair in DLLRegFuncs) {  				LuaDLL.lua_pushcfunction (L' pair.Value);  				LuaDLL.lua_setfield(L' -2' pair.Key);  			}
Magic Number,SLua,LuaArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaArray.cs,toTable,The following statement contains a magic number: for (int n = 0; n < o.Length; n++)  			{  				pushVar(l' o.GetValue(n));  				LuaDLL.lua_rawseti(l' -2' n + 1);  			}
Magic Number,SLua,LuaArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaArray.cs,luaIndex,The following statement contains a magic number: try  			{  				Array a=(Array)checkSelf(l);  				if (LuaDLL.lua_type(l' 2) == LuaTypes.LUA_TSTRING)  				{  					string mn;  					checkType(l' 2' out mn);  					ArrayPropFunction fun;  					if (propMethod.TryGetValue(mn' out fun))  					{  						pushValue(l' true);  						return fun(l' a) + 1;  					}  					else  						throw new Exception("Can't find property named " + mn);  				}  				else  				{  					int i;  					checkType(l' 2' out i);  					assert(i>0'"index base 1");  					pushValue(l' true);  					pushVar(l' a.GetValue(i-1));  					return 2;  				}	  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,LuaArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaArray.cs,luaIndex,The following statement contains a magic number: try  			{  				Array a=(Array)checkSelf(l);  				if (LuaDLL.lua_type(l' 2) == LuaTypes.LUA_TSTRING)  				{  					string mn;  					checkType(l' 2' out mn);  					ArrayPropFunction fun;  					if (propMethod.TryGetValue(mn' out fun))  					{  						pushValue(l' true);  						return fun(l' a) + 1;  					}  					else  						throw new Exception("Can't find property named " + mn);  				}  				else  				{  					int i;  					checkType(l' 2' out i);  					assert(i>0'"index base 1");  					pushValue(l' true);  					pushVar(l' a.GetValue(i-1));  					return 2;  				}	  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,LuaArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaArray.cs,luaIndex,The following statement contains a magic number: try  			{  				Array a=(Array)checkSelf(l);  				if (LuaDLL.lua_type(l' 2) == LuaTypes.LUA_TSTRING)  				{  					string mn;  					checkType(l' 2' out mn);  					ArrayPropFunction fun;  					if (propMethod.TryGetValue(mn' out fun))  					{  						pushValue(l' true);  						return fun(l' a) + 1;  					}  					else  						throw new Exception("Can't find property named " + mn);  				}  				else  				{  					int i;  					checkType(l' 2' out i);  					assert(i>0'"index base 1");  					pushValue(l' true);  					pushVar(l' a.GetValue(i-1));  					return 2;  				}	  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,LuaArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaArray.cs,luaIndex,The following statement contains a magic number: try  			{  				Array a=(Array)checkSelf(l);  				if (LuaDLL.lua_type(l' 2) == LuaTypes.LUA_TSTRING)  				{  					string mn;  					checkType(l' 2' out mn);  					ArrayPropFunction fun;  					if (propMethod.TryGetValue(mn' out fun))  					{  						pushValue(l' true);  						return fun(l' a) + 1;  					}  					else  						throw new Exception("Can't find property named " + mn);  				}  				else  				{  					int i;  					checkType(l' 2' out i);  					assert(i>0'"index base 1");  					pushValue(l' true);  					pushVar(l' a.GetValue(i-1));  					return 2;  				}	  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,LuaArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaArray.cs,luaNewIndex,The following statement contains a magic number: try  			{  				Array a = (Array)checkSelf(l);  				int i;  				checkType(l' 2' out i);  				assert(i>0'"index base 1");  				object o=checkVar(l' 3);  				Type et = a.GetType().GetElementType();  				a.SetValue(changeType(o'et)' i-1);  				return ok(l);  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,LuaArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaArray.cs,luaNewIndex,The following statement contains a magic number: try  			{  				Array a = (Array)checkSelf(l);  				int i;  				checkType(l' 2' out i);  				assert(i>0'"index base 1");  				object o=checkVar(l' 3);  				Type et = a.GetType().GetElementType();  				a.SetValue(changeType(o'et)' i-1);  				return ok(l);  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,LuaArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaArray.cs,init,The following statement contains a magic number: LuaDLL.lua_createtable(l' 0' 5);
Magic Number,SLua,LuaArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaArray.cs,init,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__index");
Magic Number,SLua,LuaArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaArray.cs,init,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__newindex");
Magic Number,SLua,LuaArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaArray.cs,init,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__gc");
Magic Number,SLua,LuaArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaArray.cs,init,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__tostring");
Magic Number,SLua,LuaArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaArray.cs,init,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__len");
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,constructor,The following statement contains a magic number: try {  				int argc = LuaDLL.lua_gettop(l);  				SLua.ByteArray o;  				if(argc==1){  					o=new SLua.ByteArray();  					pushValue(l'true);  					pushValue(l'o);  					return 2;  				}  				else if(argc==2){  					System.Byte[] a1;  					checkArray(l'2'out a1);  					o=new SLua.ByteArray(a1);  					pushValue(l'true);  					pushValue(l'o);  					return 2;  				}  				return error(l'"New object failed.");  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,constructor,The following statement contains a magic number: try {  				int argc = LuaDLL.lua_gettop(l);  				SLua.ByteArray o;  				if(argc==1){  					o=new SLua.ByteArray();  					pushValue(l'true);  					pushValue(l'o);  					return 2;  				}  				else if(argc==2){  					System.Byte[] a1;  					checkArray(l'2'out a1);  					o=new SLua.ByteArray(a1);  					pushValue(l'true);  					pushValue(l'o);  					return 2;  				}  				return error(l'"New object failed.");  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,constructor,The following statement contains a magic number: try {  				int argc = LuaDLL.lua_gettop(l);  				SLua.ByteArray o;  				if(argc==1){  					o=new SLua.ByteArray();  					pushValue(l'true);  					pushValue(l'o);  					return 2;  				}  				else if(argc==2){  					System.Byte[] a1;  					checkArray(l'2'out a1);  					o=new SLua.ByteArray(a1);  					pushValue(l'true);  					pushValue(l'o);  					return 2;  				}  				return error(l'"New object failed.");  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,constructor,The following statement contains a magic number: try {  				int argc = LuaDLL.lua_gettop(l);  				SLua.ByteArray o;  				if(argc==1){  					o=new SLua.ByteArray();  					pushValue(l'true);  					pushValue(l'o);  					return 2;  				}  				else if(argc==2){  					System.Byte[] a1;  					checkArray(l'2'out a1);  					o=new SLua.ByteArray(a1);  					pushValue(l'true);  					pushValue(l'o);  					return 2;  				}  				return error(l'"New object failed.");  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,SetData,The following statement contains a magic number: try {  				int argc = LuaDLL.lua_gettop(l);  				if(argc==2){  					SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  					System.Byte[] a1;  					checkArray(l'2'out a1);  					self.SetData(a1);  					pushValue(l'true);  					return 1;  				}  				else if(argc==4){  					SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  					System.Byte[] a1;  					checkArray(l'2'out a1);  					System.Int32 a2;  					checkType(l'3'out a2);  					System.Int32 a3;  					checkType(l'4'out a3);  					self.SetData(a1'a2'a3);  					pushValue(l'true);  					return 1;  				}  				pushValue(l'false);  				LuaDLL.lua_pushstring(l'"No matched override function SetData to call");  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,SetData,The following statement contains a magic number: try {  				int argc = LuaDLL.lua_gettop(l);  				if(argc==2){  					SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  					System.Byte[] a1;  					checkArray(l'2'out a1);  					self.SetData(a1);  					pushValue(l'true);  					return 1;  				}  				else if(argc==4){  					SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  					System.Byte[] a1;  					checkArray(l'2'out a1);  					System.Int32 a2;  					checkType(l'3'out a2);  					System.Int32 a3;  					checkType(l'4'out a3);  					self.SetData(a1'a2'a3);  					pushValue(l'true);  					return 1;  				}  				pushValue(l'false);  				LuaDLL.lua_pushstring(l'"No matched override function SetData to call");  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,SetData,The following statement contains a magic number: try {  				int argc = LuaDLL.lua_gettop(l);  				if(argc==2){  					SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  					System.Byte[] a1;  					checkArray(l'2'out a1);  					self.SetData(a1);  					pushValue(l'true);  					return 1;  				}  				else if(argc==4){  					SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  					System.Byte[] a1;  					checkArray(l'2'out a1);  					System.Int32 a2;  					checkType(l'3'out a2);  					System.Int32 a3;  					checkType(l'4'out a3);  					self.SetData(a1'a2'a3);  					pushValue(l'true);  					return 1;  				}  				pushValue(l'false);  				LuaDLL.lua_pushstring(l'"No matched override function SetData to call");  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,SetData,The following statement contains a magic number: try {  				int argc = LuaDLL.lua_gettop(l);  				if(argc==2){  					SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  					System.Byte[] a1;  					checkArray(l'2'out a1);  					self.SetData(a1);  					pushValue(l'true);  					return 1;  				}  				else if(argc==4){  					SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  					System.Byte[] a1;  					checkArray(l'2'out a1);  					System.Int32 a2;  					checkType(l'3'out a2);  					System.Int32 a3;  					checkType(l'4'out a3);  					self.SetData(a1'a2'a3);  					pushValue(l'true);  					return 1;  				}  				pushValue(l'false);  				LuaDLL.lua_pushstring(l'"No matched override function SetData to call");  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,SetData,The following statement contains a magic number: try {  				int argc = LuaDLL.lua_gettop(l);  				if(argc==2){  					SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  					System.Byte[] a1;  					checkArray(l'2'out a1);  					self.SetData(a1);  					pushValue(l'true);  					return 1;  				}  				else if(argc==4){  					SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  					System.Byte[] a1;  					checkArray(l'2'out a1);  					System.Int32 a2;  					checkType(l'3'out a2);  					System.Int32 a3;  					checkType(l'4'out a3);  					self.SetData(a1'a2'a3);  					pushValue(l'true);  					return 1;  				}  				pushValue(l'false);  				LuaDLL.lua_pushstring(l'"No matched override function SetData to call");  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,SetData,The following statement contains a magic number: try {  				int argc = LuaDLL.lua_gettop(l);  				if(argc==2){  					SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  					System.Byte[] a1;  					checkArray(l'2'out a1);  					self.SetData(a1);  					pushValue(l'true);  					return 1;  				}  				else if(argc==4){  					SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  					System.Byte[] a1;  					checkArray(l'2'out a1);  					System.Int32 a2;  					checkType(l'3'out a2);  					System.Int32 a3;  					checkType(l'4'out a3);  					self.SetData(a1'a2'a3);  					pushValue(l'true);  					return 1;  				}  				pushValue(l'false);  				LuaDLL.lua_pushstring(l'"No matched override function SetData to call");  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,SetData,The following statement contains a magic number: try {  				int argc = LuaDLL.lua_gettop(l);  				if(argc==2){  					SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  					System.Byte[] a1;  					checkArray(l'2'out a1);  					self.SetData(a1);  					pushValue(l'true);  					return 1;  				}  				else if(argc==4){  					SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  					System.Byte[] a1;  					checkArray(l'2'out a1);  					System.Int32 a2;  					checkType(l'3'out a2);  					System.Int32 a3;  					checkType(l'4'out a3);  					self.SetData(a1'a2'a3);  					pushValue(l'true);  					return 1;  				}  				pushValue(l'false);  				LuaDLL.lua_pushstring(l'"No matched override function SetData to call");  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,GetData,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.GetData();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadBool,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadBool();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadInt,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadInt();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadUInt,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadUInt();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadChar,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadChar();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadUChar,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadUChar();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadByte,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadByte();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,Read,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				System.Byte[] a1;  				checkType(l'2'out a1);  				self.Read(ref a1);  				pushValue(l'true);  				pushValue(l'a1);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,Read,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				System.Byte[] a1;  				checkType(l'2'out a1);  				self.Read(ref a1);  				pushValue(l'true);  				pushValue(l'a1);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadSByte,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadSByte();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadShort,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadShort();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadUShort,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadUShort();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadInt16,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadInt16();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadUInt16,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadUInt16();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadInt64,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadInt64();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadFloat,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadFloat();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadDouble,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadDouble();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadString,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadString();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,WriteByteArray,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				SLua.ByteArray a1;  				checkType(l'2'out a1);  				self.WriteByteArray(a1);  				pushValue(l'true);  				return 1;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,WriteBool,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				System.Boolean a1;  				checkType(l'2'out a1);  				self.WriteBool(a1);  				pushValue(l'true);  				return 1;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,WriteInt,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				System.Int32 a1;  				checkType(l'2'out a1);  				self.WriteInt(a1);  				pushValue(l'true);  				return 1;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,WriteUInt,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				System.UInt32 a1;  				checkType(l'2'out a1);  				self.WriteUInt(a1);  				pushValue(l'true);  				return 1;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,WriteChar,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				System.SByte a1;  				checkType(l'2'out a1);  				self.WriteChar(a1);  				pushValue(l'true);  				return 1;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,WriteByte,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				System.Byte a1;  				checkType(l'2'out a1);  				self.WriteByte(a1);  				pushValue(l'true);  				return 1;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,WriteUChar,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				System.Byte a1;  				checkType(l'2'out a1);  				self.WriteUChar(a1);  				pushValue(l'true);  				return 1;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,WriteSByte,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				System.SByte a1;  				checkType(l'2'out a1);  				self.WriteSByte(a1);  				pushValue(l'true);  				return 1;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,WriteUShort,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				System.UInt16 a1;  				checkType(l'2'out a1);  				self.WriteUShort(a1);  				pushValue(l'true);  				return 1;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,WriteShort,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				System.Int16 a1;  				checkType(l'2'out a1);  				self.WriteShort(a1);  				pushValue(l'true);  				return 1;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,WriteFloat,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				System.Single a1;  				checkType(l'2'out a1);  				self.WriteFloat(a1);  				pushValue(l'true);  				return 1;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,WriteNum,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				System.Double a1;  				checkType(l'2'out a1);  				self.WriteNum(a1);  				pushValue(l'true);  				return 1;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,WriteString,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				System.String a1;  				checkType(l'2'out a1);  				self.WriteString(a1);  				pushValue(l'true);  				return 1;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,WriteInt64,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				System.Int64 a1;  				checkType(l'2'out a1);  				self.WriteInt64(a1);  				pushValue(l'true);  				return 1;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadVarInt,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadVarInt();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,WriteVarInt,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				System.Int64 a1;  				checkType(l'2'out a1);  				self.WriteVarInt(a1);  				pushValue(l'true);  				return 1;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadInt48,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadInt48();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadInt48L,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadInt48L();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,WriteInt48,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				System.Int64 a1;  				checkType(l'2'out a1);  				self.WriteInt48(a1);  				pushValue(l'true);  				return 1;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadByteArray,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadByteArray();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadUInt64,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadUInt64();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,ReadBytes,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				var ret=self.ReadBytes();  				pushValue(l'true);  				pushValue(l'ret);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,WriteBytes,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				System.Byte[] a1;  				checkArray(l'2'out a1);  				self.WriteBytes(a1);  				pushValue(l'true);  				return 1;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,get_Length,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				pushValue(l'true);  				pushValue(l'self.Length);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,get_Position,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				pushValue(l'true);  				pushValue(l'self.Position);  				return 2;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,Lua_SLua_ByteArray,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaByteArray.cs,set_Position,The following statement contains a magic number: try {  				SLua.ByteArray self=(SLua.ByteArray)checkSelf(l);  				int v;  				checkType(l'2'out v);  				self.Position=v;  				pushValue(l'true);  				return 1;  			}  			catch(Exception e) {  				return error(l'e);  			}
Magic Number,SLua,LuaDLL,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaDLL.cs,lua_setglobal,The following statement contains a magic number: LuaDLL.lua_insert(luaState' -2);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,init,The following statement contains a magic number: LuaDLL.lua_createtable(l' 0' 4);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,ToString,The following statement contains a magic number: try  			{  				object obj = checkVar(l' 1);  				pushValue(l' true);  				pushValue(l' obj.ToString());  				return 2;  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,GetHashCode,The following statement contains a magic number: try  			{  				object obj = checkVar(l' 1);  				pushValue(l' true);  				pushValue(l' obj.GetHashCode());  				return 2;  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,Equals,The following statement contains a magic number: try  			{  				object obj = checkVar(l' 1);  				object other = checkVar(l' 2);  				pushValue(l' true);  				pushValue(l' obj.Equals(other));  				return 2;  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,Equals,The following statement contains a magic number: try  			{  				object obj = checkVar(l' 1);  				object other = checkVar(l' 2);  				pushValue(l' true);  				pushValue(l' obj.Equals(other));  				return 2;  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,GetType,The following statement contains a magic number: try  			{  				object obj = checkVar(l' 1);  				pushValue(l' true);  				pushObject(l' obj.GetType());  				return 2;  			}  			catch (Exception e)  			{  				return error(l' e);  			}
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,getOpFunction,The following statement contains a magic number: while (!LuaDLL.lua_isnil(l' -1))  			{  				LuaDLL.lua_getfield(l' -1' f);  				if (!LuaDLL.lua_isnil(l' -1))  				{  					LuaDLL.lua_remove(l' -2);  					break;  				}  				LuaDLL.lua_pop(l' 1); //pop nil  				LuaDLL.lua_getfield(l' -1' "__parent");  				LuaDLL.lua_remove(l' -2); //pop base  			}
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,getOpFunction,The following statement contains a magic number: while (!LuaDLL.lua_isnil(l' -1))  			{  				LuaDLL.lua_getfield(l' -1' f);  				if (!LuaDLL.lua_isnil(l' -1))  				{  					LuaDLL.lua_remove(l' -2);  					break;  				}  				LuaDLL.lua_pop(l' 1); //pop nil  				LuaDLL.lua_getfield(l' -1' "__parent");  				LuaDLL.lua_remove(l' -2); //pop base  			}
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,luaOp,The following statement contains a magic number: LuaDLL.lua_pushvalue(l' 2);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,luaOp,The following statement contains a magic number: if (LuaDLL.lua_pcall(l' 2' 1' err) != 0)                  LuaDLL.lua_pop(l' 1);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,luaOp,The following statement contains a magic number: LuaDLL.lua_insert(l' -2);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,luaOp,The following statement contains a magic number: return 2;
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,luaUnaryOp,The following statement contains a magic number: LuaDLL.lua_insert(l' -2);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,luaUnaryOp,The following statement contains a magic number: return 2;
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,newTypeTable,The following statement contains a magic number: foreach(string t in subt)  			{  				LuaDLL.lua_pushstring(l' t);  				LuaDLL.lua_rawget(l' -2);  				if (LuaDLL.lua_isnil(l' -1))  				{  					LuaDLL.lua_pop(l' 1);  					LuaDLL.lua_createtable(l' 0' 0);  					LuaDLL.lua_pushstring(l' t);  					LuaDLL.lua_pushvalue(l' -2);  					LuaDLL.lua_rawset(l' -4);  				}  				LuaDLL.lua_remove(l' -2);  			}
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,newTypeTable,The following statement contains a magic number: foreach(string t in subt)  			{  				LuaDLL.lua_pushstring(l' t);  				LuaDLL.lua_rawget(l' -2);  				if (LuaDLL.lua_isnil(l' -1))  				{  					LuaDLL.lua_pop(l' 1);  					LuaDLL.lua_createtable(l' 0' 0);  					LuaDLL.lua_pushstring(l' t);  					LuaDLL.lua_pushvalue(l' -2);  					LuaDLL.lua_rawset(l' -4);  				}  				LuaDLL.lua_remove(l' -2);  			}
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,newTypeTable,The following statement contains a magic number: foreach(string t in subt)  			{  				LuaDLL.lua_pushstring(l' t);  				LuaDLL.lua_rawget(l' -2);  				if (LuaDLL.lua_isnil(l' -1))  				{  					LuaDLL.lua_pop(l' 1);  					LuaDLL.lua_createtable(l' 0' 0);  					LuaDLL.lua_pushstring(l' t);  					LuaDLL.lua_pushvalue(l' -2);  					LuaDLL.lua_rawset(l' -4);  				}  				LuaDLL.lua_remove(l' -2);  			}
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,newTypeTable,The following statement contains a magic number: foreach(string t in subt)  			{  				LuaDLL.lua_pushstring(l' t);  				LuaDLL.lua_rawget(l' -2);  				if (LuaDLL.lua_isnil(l' -1))  				{  					LuaDLL.lua_pop(l' 1);  					LuaDLL.lua_createtable(l' 0' 0);  					LuaDLL.lua_pushstring(l' t);  					LuaDLL.lua_pushvalue(l' -2);  					LuaDLL.lua_rawset(l' -4);  				}  				LuaDLL.lua_remove(l' -2);  			}
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,createTypeMetatable,The following statement contains a magic number: while (parent != null && parent != typeof(object) && parent != typeof(ValueType))  			{  				LuaDLL.luaL_getmetatable(l' ObjectCache.getAQName(parent));  				// if parentType is not exported to lua  				if (LuaDLL.lua_isnil(l' -1))  				{  					LuaDLL.lua_pop(l' 1);  					parent = parent.BaseType;  				}  				else  				{  					LuaDLL.lua_rawset(l' -3);    					LuaDLL.lua_pushstring(l' "__parent");  					LuaDLL.luaL_getmetatable(l' parent.FullName);  					LuaDLL.lua_rawset(l' -4);    					parentSet = true;  					break;  				}  			}
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,createTypeMetatable,The following statement contains a magic number: while (parent != null && parent != typeof(object) && parent != typeof(ValueType))  			{  				LuaDLL.luaL_getmetatable(l' ObjectCache.getAQName(parent));  				// if parentType is not exported to lua  				if (LuaDLL.lua_isnil(l' -1))  				{  					LuaDLL.lua_pop(l' 1);  					parent = parent.BaseType;  				}  				else  				{  					LuaDLL.lua_rawset(l' -3);    					LuaDLL.lua_pushstring(l' "__parent");  					LuaDLL.luaL_getmetatable(l' parent.FullName);  					LuaDLL.lua_rawset(l' -4);    					parentSet = true;  					break;  				}  			}
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,createTypeMetatable,The following statement contains a magic number: if(!parentSet)  			{  				LuaDLL.luaL_getmetatable(l' "__luabaseobject");  				LuaDLL.lua_rawset(l' -3);  			}
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,completeTypeMeta,The following statement contains a magic number: LuaDLL.lua_setfield(l' -3' "__fullname");
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,completeTypeMeta,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__index");
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,completeTypeMeta,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__newindex");
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,completeTypeMeta,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__call");
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,completeTypeMeta,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__tostring");
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,completeTypeMeta,The following statement contains a magic number: LuaDLL.lua_setmetatable(l' -3);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,completeInstanceMeta,The following statement contains a magic number: LuaDLL.lua_rawset(l' -3);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,completeInstanceMeta,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__index");
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,completeInstanceMeta,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__newindex");
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,completeInstanceMeta,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__add");
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,completeInstanceMeta,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__sub");
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,completeInstanceMeta,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__mul");
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,completeInstanceMeta,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__div");
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,completeInstanceMeta,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__unm");
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,completeInstanceMeta,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__eq");
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,completeInstanceMeta,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__le");
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,completeInstanceMeta,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__lt");
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,completeInstanceMeta,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__tostring");
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,completeInstanceMeta,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__gc");
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,reg,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' func.Method.Name);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,addMember,The following statement contains a magic number: if (name.EndsWith("_s"))  			{  				name = name.Substring(0' name.Length - 2);  				LuaDLL.lua_setfield(l' -3' name);  			}  			else  				LuaDLL.lua_setfield(l' -2' name);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,addMember,The following statement contains a magic number: if (name.EndsWith("_s"))  			{  				name = name.Substring(0' name.Length - 2);  				LuaDLL.lua_setfield(l' -3' name);  			}  			else  				LuaDLL.lua_setfield(l' -2' name);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,addMember,The following statement contains a magic number: if (name.EndsWith("_s"))  			{  				name = name.Substring(0' name.Length - 2);  				LuaDLL.lua_setfield(l' -3' name);  			}  			else  				LuaDLL.lua_setfield(l' -2' name);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,addMember,The following statement contains a magic number: LuaDLL.lua_setfield(l' instance ? -2 : -3' name);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,addMember,The following statement contains a magic number: LuaDLL.lua_setfield(l' instance ? -2 : -3' name);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,addMember,The following statement contains a magic number: int t = instance ? -2 : -3;
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,addMember,The following statement contains a magic number: int t = instance ? -2 : -3;
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,addMember,The following statement contains a magic number: LuaDLL.lua_createtable(l' 2' 0);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,addMember,The following statement contains a magic number: LuaDLL.lua_rawseti(l' -2' 1);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,addMember,The following statement contains a magic number: LuaDLL.lua_rawseti(l' -2' 2);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,addMember,The following statement contains a magic number: LuaDLL.lua_rawseti(l' -2' 2);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,addMember,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' name);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: if (total - from + 1 != 2)  				return false;
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: if (total - from + 1 != 3)  				return false;
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: if (total - from + 1 != 4)  				return false;
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: if (total - from + 1 != 5)  				return false;
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: if (total - from + 1 != 6)  				return false;
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: if (total - from + 1 != 7)  				return false;
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6)  				&& matchType(l' from + 6' t7);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6)  				&& matchType(l' from + 6' t7);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6)  				&& matchType(l' from + 6' t7);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6)  				&& matchType(l' from + 6' t7);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6)  				&& matchType(l' from + 6' t7);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: if (total - from + 1 != 8)  				return false;
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6)  				&& matchType(l' from + 6' t7)  				&& matchType(l' from + 7' t8);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6)  				&& matchType(l' from + 6' t7)  				&& matchType(l' from + 7' t8);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6)  				&& matchType(l' from + 6' t7)  				&& matchType(l' from + 7' t8);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6)  				&& matchType(l' from + 6' t7)  				&& matchType(l' from + 7' t8);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6)  				&& matchType(l' from + 6' t7)  				&& matchType(l' from + 7' t8);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6)  				&& matchType(l' from + 6' t7)  				&& matchType(l' from + 7' t8);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: if (total - from + 1 != 9)  				return false;
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6)  				&& matchType(l' from + 6' t7)  				&& matchType(l' from + 7' t8)  				&& matchType(l' from + 8' t9);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6)  				&& matchType(l' from + 6' t7)  				&& matchType(l' from + 7' t8)  				&& matchType(l' from + 8' t9);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6)  				&& matchType(l' from + 6' t7)  				&& matchType(l' from + 7' t8)  				&& matchType(l' from + 8' t9);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6)  				&& matchType(l' from + 6' t7)  				&& matchType(l' from + 7' t8)  				&& matchType(l' from + 8' t9);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6)  				&& matchType(l' from + 6' t7)  				&& matchType(l' from + 7' t8)  				&& matchType(l' from + 8' t9);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6)  				&& matchType(l' from + 6' t7)  				&& matchType(l' from + 7' t8)  				&& matchType(l' from + 8' t9);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  				&& matchType(l' from + 5' t6)  				&& matchType(l' from + 6' t7)  				&& matchType(l' from + 7' t8)  				&& matchType(l' from + 8' t9);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: if (total - from + 1 != 10)  				return false;
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  					&& matchType(l' from + 5' t6)  					&& matchType(l' from + 6' t7)  					&& matchType(l' from + 7' t8)  					&& matchType(l' from + 8' t9)  					&& matchType(l' from + 9' t10);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  					&& matchType(l' from + 5' t6)  					&& matchType(l' from + 6' t7)  					&& matchType(l' from + 7' t8)  					&& matchType(l' from + 8' t9)  					&& matchType(l' from + 9' t10);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  					&& matchType(l' from + 5' t6)  					&& matchType(l' from + 6' t7)  					&& matchType(l' from + 7' t8)  					&& matchType(l' from + 8' t9)  					&& matchType(l' from + 9' t10);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  					&& matchType(l' from + 5' t6)  					&& matchType(l' from + 6' t7)  					&& matchType(l' from + 7' t8)  					&& matchType(l' from + 8' t9)  					&& matchType(l' from + 9' t10);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  					&& matchType(l' from + 5' t6)  					&& matchType(l' from + 6' t7)  					&& matchType(l' from + 7' t8)  					&& matchType(l' from + 8' t9)  					&& matchType(l' from + 9' t10);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  					&& matchType(l' from + 5' t6)  					&& matchType(l' from + 6' t7)  					&& matchType(l' from + 7' t8)  					&& matchType(l' from + 8' t9)  					&& matchType(l' from + 9' t10);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  					&& matchType(l' from + 5' t6)  					&& matchType(l' from + 6' t7)  					&& matchType(l' from + 7' t8)  					&& matchType(l' from + 8' t9)  					&& matchType(l' from + 9' t10);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following statement contains a magic number: return matchType(l' from' t1) && matchType(l' from + 1' t2) && matchType(l' from + 2' t3) && matchType(l' from + 3' t4)  				&& matchType(l' from + 4' t5)  					&& matchType(l' from + 5' t6)  					&& matchType(l' from + 6' t7)  					&& matchType(l' from + 7' t8)  					&& matchType(l' from + 8' t9)  					&& matchType(l' from + 9' t10);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,newDelegate,The following statement contains a magic number: LuaDLL.lua_settable(l' -3);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,removeDelgate,The following statement contains a magic number: LuaDLL.lua_settable(l' -3);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,extractFunction,The following statement contains a magic number: switch (t)  			{  				case LuaTypes.LUA_TNIL:  				case LuaTypes.LUA_TUSERDATA:  					op = 0;  					break;    				case LuaTypes.LUA_TTABLE:    					LuaDLL.lua_rawgeti(l' p' 1);  					LuaDLL.lua_pushstring(l' "+=");  					if (LuaDLL.lua_rawequal(l' -1' -2) == 1)  						op = 1;  					else  						op = 2;    					LuaDLL.lua_pop(l' 2);  					LuaDLL.lua_rawgeti(l' p' 2);  					break;  				case LuaTypes.LUA_TFUNCTION:  					LuaDLL.lua_pushvalue(l' p);  					break;  				default:  					throw new Exception("expect valid Delegate");  			}
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,extractFunction,The following statement contains a magic number: switch (t)  			{  				case LuaTypes.LUA_TNIL:  				case LuaTypes.LUA_TUSERDATA:  					op = 0;  					break;    				case LuaTypes.LUA_TTABLE:    					LuaDLL.lua_rawgeti(l' p' 1);  					LuaDLL.lua_pushstring(l' "+=");  					if (LuaDLL.lua_rawequal(l' -1' -2) == 1)  						op = 1;  					else  						op = 2;    					LuaDLL.lua_pop(l' 2);  					LuaDLL.lua_rawgeti(l' p' 2);  					break;  				case LuaTypes.LUA_TFUNCTION:  					LuaDLL.lua_pushvalue(l' p);  					break;  				default:  					throw new Exception("expect valid Delegate");  			}
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,extractFunction,The following statement contains a magic number: switch (t)  			{  				case LuaTypes.LUA_TNIL:  				case LuaTypes.LUA_TUSERDATA:  					op = 0;  					break;    				case LuaTypes.LUA_TTABLE:    					LuaDLL.lua_rawgeti(l' p' 1);  					LuaDLL.lua_pushstring(l' "+=");  					if (LuaDLL.lua_rawequal(l' -1' -2) == 1)  						op = 1;  					else  						op = 2;    					LuaDLL.lua_pop(l' 2);  					LuaDLL.lua_rawgeti(l' p' 2);  					break;  				case LuaTypes.LUA_TFUNCTION:  					LuaDLL.lua_pushvalue(l' p);  					break;  				default:  					throw new Exception("expect valid Delegate");  			}
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,extractFunction,The following statement contains a magic number: switch (t)  			{  				case LuaTypes.LUA_TNIL:  				case LuaTypes.LUA_TUSERDATA:  					op = 0;  					break;    				case LuaTypes.LUA_TTABLE:    					LuaDLL.lua_rawgeti(l' p' 1);  					LuaDLL.lua_pushstring(l' "+=");  					if (LuaDLL.lua_rawequal(l' -1' -2) == 1)  						op = 1;  					else  						op = 2;    					LuaDLL.lua_pop(l' 2);  					LuaDLL.lua_rawgeti(l' p' 2);  					break;  				case LuaTypes.LUA_TFUNCTION:  					LuaDLL.lua_pushvalue(l' p);  					break;  				default:  					throw new Exception("expect valid Delegate");  			}
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,typeToString,The following statement contains a magic number: LuaDLL.lua_rawget (l' -2);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,error,The following statement contains a magic number: return 2;
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,error,The following statement contains a magic number: return 2;
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,error,The following statement contains a magic number: return 2;
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,checkType,The following statement contains a magic number: LuaDLL.lua_gettable(l' -2);
Magic Number,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,checkType,The following statement contains a magic number: switch (lt)              {                  case LuaTypes.LUA_TUSERDATA:                      object o = checkObj(l' p);                      if (o.GetType() != MonoType)                          throw new Exception(string.Format("{0} expect Type' got {1}"' p' o.GetType().Name));                      t = (Type)o;  					return true;                  case LuaTypes.LUA_TTABLE:                      LuaDLL.lua_pushstring(l' "__type");                      LuaDLL.lua_rawget(l' p);                      if (!LuaDLL.lua_isnil(l' -1))                      {                          t = (Type)checkObj(l' -1);                          LuaDLL.lua_pop(l' 1);                          return true;                      }                      else                      {                          LuaDLL.lua_pushstring(l' "__fullname");                          LuaDLL.lua_rawget(l' p);                          tname = LuaDLL.lua_tostring(l' -1);                          LuaDLL.lua_pop(l' 2);                      }                      break;                    case LuaTypes.LUA_TSTRING:                      checkType(l' p' out tname);                      break;              }
Magic Number,SLua,LuaVar,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,Equals,The following statement contains a magic number: int ok = LuaDLL.lua_equal(x.L' -1' -2);
Magic Number,SLua,LuaVar,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,Equals,The following statement contains a magic number: LuaDLL.lua_pop(x.L' 2);
Magic Number,SLua,Enumerator,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,MoveNext,The following statement contains a magic number: if (!ret) iterPhase = 2;
Magic Number,SLua,Enumerator,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,Dispose,The following statement contains a magic number: if (iterPhase == 1)                      LuaDLL.lua_pop(t.L' 2);
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,init,The following statement contains a magic number: for (int e = LuaDLL.lua_rawlen(L' loaderTable) + 1; e > 2; e--)              {                  LuaDLL.lua_rawgeti(L' loaderTable' e - 1);                  LuaDLL.lua_rawseti(L' loaderTable' e);              }
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,init,The following statement contains a magic number: LuaDLL.lua_rawseti(L' loaderTable' 2);
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,errorReport,The following statement contains a magic number: LuaDLL.lua_pushnumber(L' 2);
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,errorReport,The following statement contains a magic number: LuaDLL.lua_call(L' 2' 1);
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,errorReport,The following statement contains a magic number: LuaDLL.lua_remove(L' -2);
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,import,The following statement contains a magic number: try              {                  LuaDLL.luaL_checktype(l' 1' LuaTypes.LUA_TSTRING);                  string str = LuaDLL.lua_tostring(l' 1);                    string[] ns = str.Split('.');                    LuaDLL.lua_pushglobaltable(l);                    for (int n = 0; n < ns.Length; n++)                  {                      LuaDLL.lua_getfield(l' -1' ns[n]);                      if (!LuaDLL.lua_istable(l' -1))                      {                          return LuaObject.error(l' "expect {0} is type table"' ns);                      }                      LuaDLL.lua_remove(l' -2);                  }                    LuaDLL.lua_pushnil(l);                  while (LuaDLL.lua_next(l' -2) != 0)                  {                      string key = LuaDLL.lua_tostring(l' -2);                      LuaDLL.lua_getglobal(l' key);                      if (!LuaDLL.lua_isnil(l' -1))                      {                          LuaDLL.lua_pop(l' 1);                          return LuaObject.error(l' "{0} had existed' import can't overload it."' key);                      }                      LuaDLL.lua_pop(l' 1);                      LuaDLL.lua_setglobal(l' key);                  }                    LuaDLL.lua_pop(l' 1);                    LuaObject.pushValue(l' true);                  return 1;              }              catch (Exception e)              {                  return LuaObject.error(l' e);              }
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,import,The following statement contains a magic number: try              {                  LuaDLL.luaL_checktype(l' 1' LuaTypes.LUA_TSTRING);                  string str = LuaDLL.lua_tostring(l' 1);                    string[] ns = str.Split('.');                    LuaDLL.lua_pushglobaltable(l);                    for (int n = 0; n < ns.Length; n++)                  {                      LuaDLL.lua_getfield(l' -1' ns[n]);                      if (!LuaDLL.lua_istable(l' -1))                      {                          return LuaObject.error(l' "expect {0} is type table"' ns);                      }                      LuaDLL.lua_remove(l' -2);                  }                    LuaDLL.lua_pushnil(l);                  while (LuaDLL.lua_next(l' -2) != 0)                  {                      string key = LuaDLL.lua_tostring(l' -2);                      LuaDLL.lua_getglobal(l' key);                      if (!LuaDLL.lua_isnil(l' -1))                      {                          LuaDLL.lua_pop(l' 1);                          return LuaObject.error(l' "{0} had existed' import can't overload it."' key);                      }                      LuaDLL.lua_pop(l' 1);                      LuaDLL.lua_setglobal(l' key);                  }                    LuaDLL.lua_pop(l' 1);                    LuaObject.pushValue(l' true);                  return 1;              }              catch (Exception e)              {                  return LuaObject.error(l' e);              }
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,import,The following statement contains a magic number: try              {                  LuaDLL.luaL_checktype(l' 1' LuaTypes.LUA_TSTRING);                  string str = LuaDLL.lua_tostring(l' 1);                    string[] ns = str.Split('.');                    LuaDLL.lua_pushglobaltable(l);                    for (int n = 0; n < ns.Length; n++)                  {                      LuaDLL.lua_getfield(l' -1' ns[n]);                      if (!LuaDLL.lua_istable(l' -1))                      {                          return LuaObject.error(l' "expect {0} is type table"' ns);                      }                      LuaDLL.lua_remove(l' -2);                  }                    LuaDLL.lua_pushnil(l);                  while (LuaDLL.lua_next(l' -2) != 0)                  {                      string key = LuaDLL.lua_tostring(l' -2);                      LuaDLL.lua_getglobal(l' key);                      if (!LuaDLL.lua_isnil(l' -1))                      {                          LuaDLL.lua_pop(l' 1);                          return LuaObject.error(l' "{0} had existed' import can't overload it."' key);                      }                      LuaDLL.lua_pop(l' 1);                      LuaDLL.lua_setglobal(l' key);                  }                    LuaDLL.lua_pop(l' 1);                    LuaObject.pushValue(l' true);                  return 1;              }              catch (Exception e)              {                  return LuaObject.error(l' e);              }
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,loadfile,The following statement contains a magic number: return 2;
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,dofile,The following statement contains a magic number: if (!LuaDLL.lua_toboolean(L' -2))  			{  				return 2;  			}  			else  			{  				if (LuaDLL.lua_isnil(L' -1))  				{  					string fileName = LuaDLL.lua_tostring(L' 1);  					return LuaObject.error(L' "Can't find {0}"' fileName);  				}  				int k = LuaDLL.lua_gettop(L);  				LuaDLL.lua_call(L' 0' LuaDLL.LUA_MULTRET);  				k = LuaDLL.lua_gettop(L);  				return k - n;  			}
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,dofile,The following statement contains a magic number: if (!LuaDLL.lua_toboolean(L' -2))  			{  				return 2;  			}  			else  			{  				if (LuaDLL.lua_isnil(L' -1))  				{  					string fileName = LuaDLL.lua_tostring(L' 1);  					return LuaObject.error(L' "Can't find {0}"' fileName);  				}  				int k = LuaDLL.lua_gettop(L);  				LuaDLL.lua_call(L' 0' LuaDLL.LUA_MULTRET);  				k = LuaDLL.lua_gettop(L);  				return k - n;  			}
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,loader,The following statement contains a magic number: if (bytes != null)  			{  				if (LuaDLL.luaL_loadbuffer(L' bytes' bytes.Length' "@" + fileName) == 0)  				{  					LuaObject.pushValue(L' true);  					LuaDLL.lua_insert(L' -2);  					return 2;  				}  				else  				{  					string errstr = LuaDLL.lua_tostring(L' -1);  					return LuaObject.error(L' errstr);  				}  			}
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,loader,The following statement contains a magic number: if (bytes != null)  			{  				if (LuaDLL.luaL_loadbuffer(L' bytes' bytes.Length' "@" + fileName) == 0)  				{  					LuaObject.pushValue(L' true);  					LuaDLL.lua_insert(L' -2);  					return 2;  				}  				else  				{  					string errstr = LuaDLL.lua_tostring(L' -1);  					return LuaObject.error(L' errstr);  				}  			}
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,loader,The following statement contains a magic number: return 2;
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,CleanUTF8Bom,The following statement contains a magic number: if (bytes.Length > 3 && bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF)              {                  var oldBytes = bytes;                  bytes = new byte[bytes.Length - 3];                  Array.Copy(oldBytes' 3' bytes' 0' bytes.Length);              }
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,CleanUTF8Bom,The following statement contains a magic number: if (bytes.Length > 3 && bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF)              {                  var oldBytes = bytes;                  bytes = new byte[bytes.Length - 3];                  Array.Copy(oldBytes' 3' bytes' 0' bytes.Length);              }
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,CleanUTF8Bom,The following statement contains a magic number: if (bytes.Length > 3 && bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF)              {                  var oldBytes = bytes;                  bytes = new byte[bytes.Length - 3];                  Array.Copy(oldBytes' 3' bytes' 0' bytes.Length);              }
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,CleanUTF8Bom,The following statement contains a magic number: if (bytes.Length > 3 && bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF)              {                  var oldBytes = bytes;                  bytes = new byte[bytes.Length - 3];                  Array.Copy(oldBytes' 3' bytes' 0' bytes.Length);              }
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,doBuffer,The following statement contains a magic number: if (LuaDLL.luaL_loadbuffer(L' bytes' bytes.Length' fn) == 0)  			{  				if (LuaDLL.lua_pcall(L' 0' LuaDLL.LUA_MULTRET' errfunc) != 0)  				{  					LuaDLL.lua_pop(L' 2);  					return false;  				}  				LuaDLL.lua_remove(L' errfunc); // pop error function  				ret = topObjects(errfunc - 1);  				return true;  			}
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,doBuffer,The following statement contains a magic number: LuaDLL.lua_pop(L' 2);
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,getObject,The following statement contains a magic number: for (int i = 0; i < remainingPath.Length; i++)  			{  				LuaDLL.lua_pushstring(L' remainingPath[i]);  				LuaDLL.lua_gettable(L' -2);  				returnValue = this.getObject(L' -1);  				LuaDLL.lua_remove(L' -2);  				if (returnValue == null) break;  			}
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,getObject,The following statement contains a magic number: for (int i = 0; i < remainingPath.Length; i++)  			{  				LuaDLL.lua_pushstring(L' remainingPath[i]);  				LuaDLL.lua_gettable(L' -2);  				returnValue = this.getObject(L' -1);  				LuaDLL.lua_remove(L' -2);  				if (returnValue == null) break;  			}
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,getObject,The following statement contains a magic number: if (index >= 1)              {                  LuaDLL.lua_getref (L' reference);  				LuaDLL.lua_rawgeti (L' -1' index);  				object returnValue = getObject (L' -1);                  LuaDLL.lua_pop(L' 2);                  return returnValue;  			} else {  				LuaDLL.lua_getref (L' reference);  				LuaDLL.lua_pushinteger (L' index);  				LuaDLL.lua_gettable (L' -2);  				object returnValue = getObject (L' -1);                  LuaDLL.lua_pop(L' 2);                  return returnValue;  			}
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,getObject,The following statement contains a magic number: if (index >= 1)              {                  LuaDLL.lua_getref (L' reference);  				LuaDLL.lua_rawgeti (L' -1' index);  				object returnValue = getObject (L' -1);                  LuaDLL.lua_pop(L' 2);                  return returnValue;  			} else {  				LuaDLL.lua_getref (L' reference);  				LuaDLL.lua_pushinteger (L' index);  				LuaDLL.lua_gettable (L' -2);  				object returnValue = getObject (L' -1);                  LuaDLL.lua_pop(L' 2);                  return returnValue;  			}
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,getObject,The following statement contains a magic number: if (index >= 1)              {                  LuaDLL.lua_getref (L' reference);  				LuaDLL.lua_rawgeti (L' -1' index);  				object returnValue = getObject (L' -1);                  LuaDLL.lua_pop(L' 2);                  return returnValue;  			} else {  				LuaDLL.lua_getref (L' reference);  				LuaDLL.lua_pushinteger (L' index);  				LuaDLL.lua_gettable (L' -2);  				object returnValue = getObject (L' -1);                  LuaDLL.lua_pop(L' 2);                  return returnValue;  			}
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,getObject,The following statement contains a magic number: LuaDLL.lua_gettable(L' -2);
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,setObject,The following statement contains a magic number: for (int i = 0; i < remainingPath.Length - 1; i++)  			{  				LuaDLL.lua_pushstring(L' remainingPath[i]);  				LuaDLL.lua_gettable(L' -2);  			}
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,setObject,The following statement contains a magic number: LuaDLL.lua_settable(L' -3);
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,setObject,The following statement contains a magic number: if (index >= 1) {  				LuaDLL.lua_getref (L' reference);  				LuaObject.pushVar (L' o);  				LuaDLL.lua_rawseti (L' -2' index);  				LuaDLL.lua_pop (L' 1);  			} else {  				LuaDLL.lua_getref (L' reference);  				LuaDLL.lua_pushinteger (L' index);  				LuaObject.pushVar (L' o);  				LuaDLL.lua_settable (L' -3);  				LuaDLL.lua_pop (L' 1);  			}
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,setObject,The following statement contains a magic number: if (index >= 1) {  				LuaDLL.lua_getref (L' reference);  				LuaObject.pushVar (L' o);  				LuaDLL.lua_rawseti (L' -2' index);  				LuaDLL.lua_pop (L' 1);  			} else {  				LuaDLL.lua_getref (L' reference);  				LuaDLL.lua_pushinteger (L' index);  				LuaObject.pushVar (L' o);  				LuaDLL.lua_settable (L' -3);  				LuaDLL.lua_pop (L' 1);  			}
Magic Number,SLua,LuaState,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaState.cs,setObject,The following statement contains a magic number: LuaDLL.lua_settable(L' -3);
Magic Number,SLua,LuaSvr,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaSvr.cs,doBind,The following statement contains a magic number: tick (2);
Magic Number,SLua,LuaSvr,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaSvr.cs,doBind,The following statement contains a magic number: int bindProgress = 2;
Magic Number,SLua,LuaSvr,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaSvr.cs,doBind,The following statement contains a magic number: for (int n = 0; n < list.Count; n++)  			{  				Action<IntPtr> action = list[n];  				action(L);  				bindProgress = (int)(((float)n / list.Count) * 98.0) + 2;  				if (_tick!=null && lastProgress != bindProgress && bindProgress % 5 == 0) {                      lastProgress = bindProgress;  					tick (bindProgress);  					yield return null;  				}  			}
Magic Number,SLua,LuaSvr,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaSvr.cs,doBind,The following statement contains a magic number: for (int n = 0; n < list.Count; n++)  			{  				Action<IntPtr> action = list[n];  				action(L);  				bindProgress = (int)(((float)n / list.Count) * 98.0) + 2;  				if (_tick!=null && lastProgress != bindProgress && bindProgress % 5 == 0) {                      lastProgress = bindProgress;  					tick (bindProgress);  					yield return null;  				}  			}
Magic Number,SLua,LuaSvr,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaSvr.cs,doBind,The following statement contains a magic number: for (int n = 0; n < list.Count; n++)  			{  				Action<IntPtr> action = list[n];  				action(L);  				bindProgress = (int)(((float)n / list.Count) * 98.0) + 2;  				if (_tick!=null && lastProgress != bindProgress && bindProgress % 5 == 0) {                      lastProgress = bindProgress;  					tick (bindProgress);  					yield return null;  				}  			}
Magic Number,SLua,LuaSvr,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaSvr.cs,doBind,The following statement contains a magic number: tick (100);
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,luaIndex,The following statement contains a magic number: try              {                  ObjectCache oc = ObjectCache.get(l);                  object self = oc.get(l' 1);                    LuaTypes t = LuaDLL.lua_type(l' 2);                  switch (t)                  {                      case LuaTypes.LUA_TSTRING:                          return indexString(l' self' LuaDLL.lua_tostring(l' 2));                      case LuaTypes.LUA_TNUMBER:                          return indexInt(l' self' LuaDLL.lua_tointeger(l' 2));                      default:                          return indexObject(l' self' checkObj(l' 2));                  }              }              catch (Exception e)              {                  return error(l' e);              }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,luaIndex,The following statement contains a magic number: try              {                  ObjectCache oc = ObjectCache.get(l);                  object self = oc.get(l' 1);                    LuaTypes t = LuaDLL.lua_type(l' 2);                  switch (t)                  {                      case LuaTypes.LUA_TSTRING:                          return indexString(l' self' LuaDLL.lua_tostring(l' 2));                      case LuaTypes.LUA_TNUMBER:                          return indexInt(l' self' LuaDLL.lua_tointeger(l' 2));                      default:                          return indexObject(l' self' checkObj(l' 2));                  }              }              catch (Exception e)              {                  return error(l' e);              }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,luaIndex,The following statement contains a magic number: try              {                  ObjectCache oc = ObjectCache.get(l);                  object self = oc.get(l' 1);                    LuaTypes t = LuaDLL.lua_type(l' 2);                  switch (t)                  {                      case LuaTypes.LUA_TSTRING:                          return indexString(l' self' LuaDLL.lua_tostring(l' 2));                      case LuaTypes.LUA_TNUMBER:                          return indexInt(l' self' LuaDLL.lua_tointeger(l' 2));                      default:                          return indexObject(l' self' checkObj(l' 2));                  }              }              catch (Exception e)              {                  return error(l' e);              }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,luaIndex,The following statement contains a magic number: try              {                  ObjectCache oc = ObjectCache.get(l);                  object self = oc.get(l' 1);                    LuaTypes t = LuaDLL.lua_type(l' 2);                  switch (t)                  {                      case LuaTypes.LUA_TSTRING:                          return indexString(l' self' LuaDLL.lua_tostring(l' 2));                      case LuaTypes.LUA_TNUMBER:                          return indexInt(l' self' LuaDLL.lua_tointeger(l' 2));                      default:                          return indexObject(l' self' checkObj(l' 2));                  }              }              catch (Exception e)              {                  return error(l' e);              }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,indexObject,The following statement contains a magic number: if (self is IDictionary)              {                  var dict = self as IDictionary;                                    object v = dict[key];                  pushValue(l' true);                  pushVar(l' v);                  return 2;              }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,indexString,The following statement contains a magic number: if (self is IDictionary)              {                  if (t.IsGenericType && t.GetGenericArguments()[0] != typeof(string))                  {                      goto IndexProperty;                  }                  object v = (self as IDictionary)[key];                  if (v != null)                  {                      pushValue(l' true);                      pushVar(l' v);                      return 2;                  }              }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,indexString,The following statement contains a magic number: return 2;
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,newindexString,The following statement contains a magic number: if (self is IDictionary)              {                  var dictType = getType(self);                  var valueType = dictType.GetGenericArguments()[1];                  (self as IDictionary)[key] = checkVar(l' 3' valueType);                  return ok(l);              }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,newindexString,The following statement contains a magic number: switch (mi.MemberType)              {                  case MemberTypes.Property:                      {                          PropertyInfo p = (PropertyInfo)mi;                          MethodInfo set = p.GetSetMethod(true);                          var value = checkVar(l' 3' p.PropertyType);                          set.Invoke(self' new object[] { value });                          break;                      }                  case MemberTypes.Field:                      {                          FieldInfo f = (FieldInfo)mi;                          var value = checkVar(l' 3' f.FieldType);                          f.SetValue(self' value);                          break;                      }                  case MemberTypes.Method:                      return error(l' "Method can't set");                  case MemberTypes.Event:                      return error(l' "Event can't set");                }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,newindexString,The following statement contains a magic number: switch (mi.MemberType)              {                  case MemberTypes.Property:                      {                          PropertyInfo p = (PropertyInfo)mi;                          MethodInfo set = p.GetSetMethod(true);                          var value = checkVar(l' 3' p.PropertyType);                          set.Invoke(self' new object[] { value });                          break;                      }                  case MemberTypes.Field:                      {                          FieldInfo f = (FieldInfo)mi;                          var value = checkVar(l' 3' f.FieldType);                          f.SetValue(self' value);                          break;                      }                  case MemberTypes.Method:                      return error(l' "Method can't set");                  case MemberTypes.Event:                      return error(l' "Event can't set");                }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,indexInt,The following statement contains a magic number: if (self is IList)              {                  pushValue(l' true);                  pushVar(l' (self as IList)[index]);                  return 2;              }              else if (self is IDictionary)              {                  var dict = (IDictionary)self;// as IDictionary;                  //support enumerate key                  object dictKey = index;                  if (type.IsGenericType)                  {                      Type keyType = type.GetGenericArguments()[0];                        if (keyType.IsEnum)                      {                          pushValue(l' true);                          pushVar(l' dict[Enum.Parse(keyType' dictKey.ToString())]);                          return 2;                      }                        dictKey = changeType(dictKey' keyType); // if key is not int but ushort/uint'  IDictionary will cannot find the key and return null!                  }                                    pushValue(l' true);                  pushVar(l' dict[dictKey]);                  return 2;              }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,indexInt,The following statement contains a magic number: if (self is IList)              {                  pushValue(l' true);                  pushVar(l' (self as IList)[index]);                  return 2;              }              else if (self is IDictionary)              {                  var dict = (IDictionary)self;// as IDictionary;                  //support enumerate key                  object dictKey = index;                  if (type.IsGenericType)                  {                      Type keyType = type.GetGenericArguments()[0];                        if (keyType.IsEnum)                      {                          pushValue(l' true);                          pushVar(l' dict[Enum.Parse(keyType' dictKey.ToString())]);                          return 2;                      }                        dictKey = changeType(dictKey' keyType); // if key is not int but ushort/uint'  IDictionary will cannot find the key and return null!                  }                                    pushValue(l' true);                  pushVar(l' dict[dictKey]);                  return 2;              }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,indexInt,The following statement contains a magic number: if (self is IList)              {                  pushValue(l' true);                  pushVar(l' (self as IList)[index]);                  return 2;              }              else if (self is IDictionary)              {                  var dict = (IDictionary)self;// as IDictionary;                  //support enumerate key                  object dictKey = index;                  if (type.IsGenericType)                  {                      Type keyType = type.GetGenericArguments()[0];                        if (keyType.IsEnum)                      {                          pushValue(l' true);                          pushVar(l' dict[Enum.Parse(keyType' dictKey.ToString())]);                          return 2;                      }                        dictKey = changeType(dictKey' keyType); // if key is not int but ushort/uint'  IDictionary will cannot find the key and return null!                  }                                    pushValue(l' true);                  pushVar(l' dict[dictKey]);                  return 2;              }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,newindexInt,The following statement contains a magic number: if (self is IList)              {                  if (type.IsGenericType)                  {                      Type t = type.GetGenericArguments()[0];                      (self as IList)[index] = changeType(checkVar(l' 3)' t);                  }                  else                      (self as IList)[index] = checkVar(l' 3);              }              else if (self is IDictionary)              {                  Type keyType = type.GetGenericArguments()[0];                  object dictKey = index;                  dictKey = changeType(dictKey' keyType); // if key is not int but ushort/uint'  IDictionary will cannot find the key and return null!                    if (type.IsGenericType)                  {                      Type t = type.GetGenericArguments()[1];                      (self as IDictionary)[dictKey] = changeType(checkVar(l' 3)' t);                  }                  else                      (self as IDictionary)[dictKey] = checkVar(l' 3);              }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,newindexInt,The following statement contains a magic number: if (self is IList)              {                  if (type.IsGenericType)                  {                      Type t = type.GetGenericArguments()[0];                      (self as IList)[index] = changeType(checkVar(l' 3)' t);                  }                  else                      (self as IList)[index] = checkVar(l' 3);              }              else if (self is IDictionary)              {                  Type keyType = type.GetGenericArguments()[0];                  object dictKey = index;                  dictKey = changeType(dictKey' keyType); // if key is not int but ushort/uint'  IDictionary will cannot find the key and return null!                    if (type.IsGenericType)                  {                      Type t = type.GetGenericArguments()[1];                      (self as IDictionary)[dictKey] = changeType(checkVar(l' 3)' t);                  }                  else                      (self as IDictionary)[dictKey] = checkVar(l' 3);              }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,newindexInt,The following statement contains a magic number: if (self is IList)              {                  if (type.IsGenericType)                  {                      Type t = type.GetGenericArguments()[0];                      (self as IList)[index] = changeType(checkVar(l' 3)' t);                  }                  else                      (self as IList)[index] = checkVar(l' 3);              }              else if (self is IDictionary)              {                  Type keyType = type.GetGenericArguments()[0];                  object dictKey = index;                  dictKey = changeType(dictKey' keyType); // if key is not int but ushort/uint'  IDictionary will cannot find the key and return null!                    if (type.IsGenericType)                  {                      Type t = type.GetGenericArguments()[1];                      (self as IDictionary)[dictKey] = changeType(checkVar(l' 3)' t);                  }                  else                      (self as IDictionary)[dictKey] = checkVar(l' 3);              }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,newindexInt,The following statement contains a magic number: if (self is IList)              {                  if (type.IsGenericType)                  {                      Type t = type.GetGenericArguments()[0];                      (self as IList)[index] = changeType(checkVar(l' 3)' t);                  }                  else                      (self as IList)[index] = checkVar(l' 3);              }              else if (self is IDictionary)              {                  Type keyType = type.GetGenericArguments()[0];                  object dictKey = index;                  dictKey = changeType(dictKey' keyType); // if key is not int but ushort/uint'  IDictionary will cannot find the key and return null!                    if (type.IsGenericType)                  {                      Type t = type.GetGenericArguments()[1];                      (self as IDictionary)[dictKey] = changeType(checkVar(l' 3)' t);                  }                  else                      (self as IDictionary)[dictKey] = checkVar(l' 3);              }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,luaNewIndex,The following statement contains a magic number: try              {                  ObjectCache oc = ObjectCache.get(l);                  object self = oc.get(l' 1);                    LuaTypes t = LuaDLL.lua_type(l' 2);                  switch (t)                  {                      case LuaTypes.LUA_TSTRING:                          return newindexString(l' self' LuaDLL.lua_tostring(l' 2));                      case LuaTypes.LUA_TNUMBER:                          return newindexInt(l' self' LuaDLL.lua_tointeger(l' 2));                      default:                          return newindexObject(l' self' checkVar(l' 2)' checkVar(l' 3));                  }              }              catch (Exception e)              {                  return error(l' e);              }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,luaNewIndex,The following statement contains a magic number: try              {                  ObjectCache oc = ObjectCache.get(l);                  object self = oc.get(l' 1);                    LuaTypes t = LuaDLL.lua_type(l' 2);                  switch (t)                  {                      case LuaTypes.LUA_TSTRING:                          return newindexString(l' self' LuaDLL.lua_tostring(l' 2));                      case LuaTypes.LUA_TNUMBER:                          return newindexInt(l' self' LuaDLL.lua_tointeger(l' 2));                      default:                          return newindexObject(l' self' checkVar(l' 2)' checkVar(l' 3));                  }              }              catch (Exception e)              {                  return error(l' e);              }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,luaNewIndex,The following statement contains a magic number: try              {                  ObjectCache oc = ObjectCache.get(l);                  object self = oc.get(l' 1);                    LuaTypes t = LuaDLL.lua_type(l' 2);                  switch (t)                  {                      case LuaTypes.LUA_TSTRING:                          return newindexString(l' self' LuaDLL.lua_tostring(l' 2));                      case LuaTypes.LUA_TNUMBER:                          return newindexInt(l' self' LuaDLL.lua_tointeger(l' 2));                      default:                          return newindexObject(l' self' checkVar(l' 2)' checkVar(l' 3));                  }              }              catch (Exception e)              {                  return error(l' e);              }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,luaNewIndex,The following statement contains a magic number: try              {                  ObjectCache oc = ObjectCache.get(l);                  object self = oc.get(l' 1);                    LuaTypes t = LuaDLL.lua_type(l' 2);                  switch (t)                  {                      case LuaTypes.LUA_TSTRING:                          return newindexString(l' self' LuaDLL.lua_tostring(l' 2));                      case LuaTypes.LUA_TNUMBER:                          return newindexInt(l' self' LuaDLL.lua_tointeger(l' 2));                      default:                          return newindexObject(l' self' checkVar(l' 2)' checkVar(l' 3));                  }              }              catch (Exception e)              {                  return error(l' e);              }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,luaNewIndex,The following statement contains a magic number: try              {                  ObjectCache oc = ObjectCache.get(l);                  object self = oc.get(l' 1);                    LuaTypes t = LuaDLL.lua_type(l' 2);                  switch (t)                  {                      case LuaTypes.LUA_TSTRING:                          return newindexString(l' self' LuaDLL.lua_tostring(l' 2));                      case LuaTypes.LUA_TNUMBER:                          return newindexInt(l' self' LuaDLL.lua_tointeger(l' 2));                      default:                          return newindexObject(l' self' checkVar(l' 2)' checkVar(l' 3));                  }              }              catch (Exception e)              {                  return error(l' e);              }
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,init,The following statement contains a magic number: LuaDLL.lua_createtable(l' 0' 3);
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,init,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__index");
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,init,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__newindex");
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,init,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__gc");
Magic Number,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,init,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__call");
Magic Number,SLua,MethodWrapper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,invoke,The following statement contains a magic number: for (int k = 0; k < mis.Count; k++)                  {                      MethodInfo m = (MethodInfo)mis[k];                      if (matchType(l' 2' m.GetParameters()' m.IsStatic))                      {                          return forceInvoke(l' m);                      }                  }
Magic Number,SLua,MethodWrapper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,forceInvoke,The following statement contains a magic number: if (ret != null)  				{  					pushVar(l' ret);  					int ct = 2;  					for (int i = 0; i < pis.Length; ++i) {  						var pi = pis[i];  						if (pi.ParameterType.IsByRef || pi.IsOut) {  							pushValue(l' args[i]);  							++ct;  						}  					}  					return ct;  				}
Magic Number,SLua,MethodWrapper,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,checkArgs,The following statement contains a magic number: from = m.IsStatic ? from + 1 : from + 2;
Magic Number,SLua,ObjectCache,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ObjectCache.cs,ObjectCache,The following statement contains a magic number: LuaDLL.lua_setfield(l' -2' "__mode");
Magic Number,SLua,ObjectCache,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\ObjectCache.cs,ObjectCache,The following statement contains a magic number: LuaDLL.lua_setmetatable(l' -2);
Magic Number,SLua,LuaTimer,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Timer.cs,now,The following statement contains a magic number: return (int)(nowTime * 1000);
Magic Number,SLua,LuaTimer,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Timer.cs,init,The following statement contains a magic number: wheels = new Wheel[4];
Magic Number,SLua,LuaTimer,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Timer.cs,init,The following statement contains a magic number: for (int i = 0; i < 4; ++i)  			{  				wheels[i] = new Wheel(jiffies_msec * intpow(Wheel.dial_scale' i));  				if (i > 0)  				{  					wheels[i - 1].nextWheel = wheels[i];  				}  			}
Magic Number,SLua,LuaTimer,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Timer.cs,Add,The following statement contains a magic number: try{  				int top = LuaDLL.lua_gettop(l);  				if (top == 2)  				{  					int delay;  					checkType(l' 1' out delay);  					LuaDelegate ld;  					checkType(l' 2' out ld);  					Action<int> ua;  					if (ld.d != null)  						ua = (Action<int>)ld.d;  					else  					{  						IntPtr ml = LuaState.get(l).L;  						ua = (int id) =>  						{  							int error = pushTry(ml);  							pushValue(ml' id);  							ld.pcall(1' error);  							LuaDLL.lua_settop(ml' error - 1);  						};  					}  					ld.d = ua;  					pushValue(l' true);  					pushValue(l' add(l' delay' ua));  					return 2;  				}  				else if (top == 3)  				{  					int delay' cycle;  					checkType(l' 1' out delay);  					checkType(l' 2' out cycle);  					LuaDelegate ld;  					checkType(l' 3' out ld);  					Func<int' bool> ua;  					  					if (ld.d != null)  						ua = (Func<int' bool>)ld.d;  					else  					{  						IntPtr ml = LuaState.get(l).L;  						ua = (int id) =>  						{  							int error = pushTry(ml);  							pushValue(ml' id);  							ld.pcall(1' error);  							bool ret = LuaDLL.lua_toboolean(ml' -1);  							LuaDLL.lua_settop(ml' error - 1);  							return ret;  						};  					}  					ld.d = ua;  					pushValue(l' true);  					pushValue(l' add(l' delay' cycle' ua));  					return 2;  				}  				return LuaObject.error(l'"Argument error");  			}catch(Exception e)  			{  				return LuaObject.error(l' e);  			}
Magic Number,SLua,LuaTimer,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Timer.cs,Add,The following statement contains a magic number: try{  				int top = LuaDLL.lua_gettop(l);  				if (top == 2)  				{  					int delay;  					checkType(l' 1' out delay);  					LuaDelegate ld;  					checkType(l' 2' out ld);  					Action<int> ua;  					if (ld.d != null)  						ua = (Action<int>)ld.d;  					else  					{  						IntPtr ml = LuaState.get(l).L;  						ua = (int id) =>  						{  							int error = pushTry(ml);  							pushValue(ml' id);  							ld.pcall(1' error);  							LuaDLL.lua_settop(ml' error - 1);  						};  					}  					ld.d = ua;  					pushValue(l' true);  					pushValue(l' add(l' delay' ua));  					return 2;  				}  				else if (top == 3)  				{  					int delay' cycle;  					checkType(l' 1' out delay);  					checkType(l' 2' out cycle);  					LuaDelegate ld;  					checkType(l' 3' out ld);  					Func<int' bool> ua;  					  					if (ld.d != null)  						ua = (Func<int' bool>)ld.d;  					else  					{  						IntPtr ml = LuaState.get(l).L;  						ua = (int id) =>  						{  							int error = pushTry(ml);  							pushValue(ml' id);  							ld.pcall(1' error);  							bool ret = LuaDLL.lua_toboolean(ml' -1);  							LuaDLL.lua_settop(ml' error - 1);  							return ret;  						};  					}  					ld.d = ua;  					pushValue(l' true);  					pushValue(l' add(l' delay' cycle' ua));  					return 2;  				}  				return LuaObject.error(l'"Argument error");  			}catch(Exception e)  			{  				return LuaObject.error(l' e);  			}
Magic Number,SLua,LuaTimer,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Timer.cs,Add,The following statement contains a magic number: try{  				int top = LuaDLL.lua_gettop(l);  				if (top == 2)  				{  					int delay;  					checkType(l' 1' out delay);  					LuaDelegate ld;  					checkType(l' 2' out ld);  					Action<int> ua;  					if (ld.d != null)  						ua = (Action<int>)ld.d;  					else  					{  						IntPtr ml = LuaState.get(l).L;  						ua = (int id) =>  						{  							int error = pushTry(ml);  							pushValue(ml' id);  							ld.pcall(1' error);  							LuaDLL.lua_settop(ml' error - 1);  						};  					}  					ld.d = ua;  					pushValue(l' true);  					pushValue(l' add(l' delay' ua));  					return 2;  				}  				else if (top == 3)  				{  					int delay' cycle;  					checkType(l' 1' out delay);  					checkType(l' 2' out cycle);  					LuaDelegate ld;  					checkType(l' 3' out ld);  					Func<int' bool> ua;  					  					if (ld.d != null)  						ua = (Func<int' bool>)ld.d;  					else  					{  						IntPtr ml = LuaState.get(l).L;  						ua = (int id) =>  						{  							int error = pushTry(ml);  							pushValue(ml' id);  							ld.pcall(1' error);  							bool ret = LuaDLL.lua_toboolean(ml' -1);  							LuaDLL.lua_settop(ml' error - 1);  							return ret;  						};  					}  					ld.d = ua;  					pushValue(l' true);  					pushValue(l' add(l' delay' cycle' ua));  					return 2;  				}  				return LuaObject.error(l'"Argument error");  			}catch(Exception e)  			{  				return LuaObject.error(l' e);  			}
Magic Number,SLua,LuaTimer,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Timer.cs,Add,The following statement contains a magic number: try{  				int top = LuaDLL.lua_gettop(l);  				if (top == 2)  				{  					int delay;  					checkType(l' 1' out delay);  					LuaDelegate ld;  					checkType(l' 2' out ld);  					Action<int> ua;  					if (ld.d != null)  						ua = (Action<int>)ld.d;  					else  					{  						IntPtr ml = LuaState.get(l).L;  						ua = (int id) =>  						{  							int error = pushTry(ml);  							pushValue(ml' id);  							ld.pcall(1' error);  							LuaDLL.lua_settop(ml' error - 1);  						};  					}  					ld.d = ua;  					pushValue(l' true);  					pushValue(l' add(l' delay' ua));  					return 2;  				}  				else if (top == 3)  				{  					int delay' cycle;  					checkType(l' 1' out delay);  					checkType(l' 2' out cycle);  					LuaDelegate ld;  					checkType(l' 3' out ld);  					Func<int' bool> ua;  					  					if (ld.d != null)  						ua = (Func<int' bool>)ld.d;  					else  					{  						IntPtr ml = LuaState.get(l).L;  						ua = (int id) =>  						{  							int error = pushTry(ml);  							pushValue(ml' id);  							ld.pcall(1' error);  							bool ret = LuaDLL.lua_toboolean(ml' -1);  							LuaDLL.lua_settop(ml' error - 1);  							return ret;  						};  					}  					ld.d = ua;  					pushValue(l' true);  					pushValue(l' add(l' delay' cycle' ua));  					return 2;  				}  				return LuaObject.error(l'"Argument error");  			}catch(Exception e)  			{  				return LuaObject.error(l' e);  			}
Magic Number,SLua,LuaTimer,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Timer.cs,Add,The following statement contains a magic number: try{  				int top = LuaDLL.lua_gettop(l);  				if (top == 2)  				{  					int delay;  					checkType(l' 1' out delay);  					LuaDelegate ld;  					checkType(l' 2' out ld);  					Action<int> ua;  					if (ld.d != null)  						ua = (Action<int>)ld.d;  					else  					{  						IntPtr ml = LuaState.get(l).L;  						ua = (int id) =>  						{  							int error = pushTry(ml);  							pushValue(ml' id);  							ld.pcall(1' error);  							LuaDLL.lua_settop(ml' error - 1);  						};  					}  					ld.d = ua;  					pushValue(l' true);  					pushValue(l' add(l' delay' ua));  					return 2;  				}  				else if (top == 3)  				{  					int delay' cycle;  					checkType(l' 1' out delay);  					checkType(l' 2' out cycle);  					LuaDelegate ld;  					checkType(l' 3' out ld);  					Func<int' bool> ua;  					  					if (ld.d != null)  						ua = (Func<int' bool>)ld.d;  					else  					{  						IntPtr ml = LuaState.get(l).L;  						ua = (int id) =>  						{  							int error = pushTry(ml);  							pushValue(ml' id);  							ld.pcall(1' error);  							bool ret = LuaDLL.lua_toboolean(ml' -1);  							LuaDLL.lua_settop(ml' error - 1);  							return ret;  						};  					}  					ld.d = ua;  					pushValue(l' true);  					pushValue(l' add(l' delay' cycle' ua));  					return 2;  				}  				return LuaObject.error(l'"Argument error");  			}catch(Exception e)  			{  				return LuaObject.error(l' e);  			}
Magic Number,SLua,LuaTimer,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Timer.cs,Add,The following statement contains a magic number: try{  				int top = LuaDLL.lua_gettop(l);  				if (top == 2)  				{  					int delay;  					checkType(l' 1' out delay);  					LuaDelegate ld;  					checkType(l' 2' out ld);  					Action<int> ua;  					if (ld.d != null)  						ua = (Action<int>)ld.d;  					else  					{  						IntPtr ml = LuaState.get(l).L;  						ua = (int id) =>  						{  							int error = pushTry(ml);  							pushValue(ml' id);  							ld.pcall(1' error);  							LuaDLL.lua_settop(ml' error - 1);  						};  					}  					ld.d = ua;  					pushValue(l' true);  					pushValue(l' add(l' delay' ua));  					return 2;  				}  				else if (top == 3)  				{  					int delay' cycle;  					checkType(l' 1' out delay);  					checkType(l' 2' out cycle);  					LuaDelegate ld;  					checkType(l' 3' out ld);  					Func<int' bool> ua;  					  					if (ld.d != null)  						ua = (Func<int' bool>)ld.d;  					else  					{  						IntPtr ml = LuaState.get(l).L;  						ua = (int id) =>  						{  							int error = pushTry(ml);  							pushValue(ml' id);  							ld.pcall(1' error);  							bool ret = LuaDLL.lua_toboolean(ml' -1);  							LuaDLL.lua_settop(ml' error - 1);  							return ret;  						};  					}  					ld.d = ua;  					pushValue(l' true);  					pushValue(l' add(l' delay' cycle' ua));  					return 2;  				}  				return LuaObject.error(l'"Argument error");  			}catch(Exception e)  			{  				return LuaObject.error(l' e);  			}
Magic Number,SLua,LuaTimer,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\Timer.cs,Add,The following statement contains a magic number: try{  				int top = LuaDLL.lua_gettop(l);  				if (top == 2)  				{  					int delay;  					checkType(l' 1' out delay);  					LuaDelegate ld;  					checkType(l' 2' out ld);  					Action<int> ua;  					if (ld.d != null)  						ua = (Action<int>)ld.d;  					else  					{  						IntPtr ml = LuaState.get(l).L;  						ua = (int id) =>  						{  							int error = pushTry(ml);  							pushValue(ml' id);  							ld.pcall(1' error);  							LuaDLL.lua_settop(ml' error - 1);  						};  					}  					ld.d = ua;  					pushValue(l' true);  					pushValue(l' add(l' delay' ua));  					return 2;  				}  				else if (top == 3)  				{  					int delay' cycle;  					checkType(l' 1' out delay);  					checkType(l' 2' out cycle);  					LuaDelegate ld;  					checkType(l' 3' out ld);  					Func<int' bool> ua;  					  					if (ld.d != null)  						ua = (Func<int' bool>)ld.d;  					else  					{  						IntPtr ml = LuaState.get(l).L;  						ua = (int id) =>  						{  							int error = pushTry(ml);  							pushValue(ml' id);  							ld.pcall(1' error);  							bool ret = LuaDLL.lua_toboolean(ml' -1);  							LuaDLL.lua_settop(ml' error - 1);  							return ret;  						};  					}  					ld.d = ua;  					pushValue(l' true);  					pushValue(l' add(l' delay' cycle' ua));  					return 2;  				}  				return LuaObject.error(l'"Argument error");  			}catch(Exception e)  			{  				return LuaObject.error(l' e);  			}
Missing Default,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,matchType,The following switch statement is missing a default case: switch (lt)  			{                  case LuaTypes.LUA_TNIL:                      return !t.IsValueType && !t.IsPrimitive;  				case LuaTypes.LUA_TNUMBER:  #if LUA_5_3  					if (LuaDLL.lua_isinteger(l' p) > 0)  						return (t.IsPrimitive && t != typeof(float) && t != typeof(double)) || t.IsEnum;  					else  						return t == typeof(float) || t == typeof(double);  #else  					return t.IsPrimitive || t.IsEnum;  #endif  				case LuaTypes.LUA_TUSERDATA:  					object o = checkObj (l' p);  					Type ot = o.GetType ();  					return ot == t || ot.IsSubclassOf (t) || t.IsAssignableFrom (ot);  				case LuaTypes.LUA_TSTRING:  					return t == typeof(string);  				case LuaTypes.LUA_TBOOLEAN:  					return t == typeof(bool);  				case LuaTypes.LUA_TTABLE:  					{  						if (t == typeof(LuaTable) || t.IsArray)  							return true;  						else if (t.IsValueType)  							return true;//luaTypeCheck(l' p' t.Name);  						else if (LuaDLL.luaS_subclassof(l' p' t.Name) == 1)  							return true;  						else  							return false;  					}  				case LuaTypes.LUA_TFUNCTION:  					return t == typeof(LuaFunction) || t.BaseType == typeof(MulticastDelegate);                  case LuaTypes.LUA_TTHREAD:                      return t == typeof(LuaThread);    			}
Missing Default,SLua,LuaObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaObject.cs,checkType,The following switch statement is missing a default case: switch (lt)              {                  case LuaTypes.LUA_TUSERDATA:                      object o = checkObj(l' p);                      if (o.GetType() != MonoType)                          throw new Exception(string.Format("{0} expect Type' got {1}"' p' o.GetType().Name));                      t = (Type)o;  					return true;                  case LuaTypes.LUA_TTABLE:                      LuaDLL.lua_pushstring(l' "__type");                      LuaDLL.lua_rawget(l' p);                      if (!LuaDLL.lua_isnil(l' -1))                      {                          t = (Type)checkObj(l' -1);                          LuaDLL.lua_pop(l' 1);                          return true;                      }                      else                      {                          LuaDLL.lua_pushstring(l' "__fullname");                          LuaDLL.lua_rawget(l' p);                          tname = LuaDLL.lua_tostring(l' -1);                          LuaDLL.lua_pop(l' 2);                      }                      break;                    case LuaTypes.LUA_TSTRING:                      checkType(l' p' out tname);                      break;              }
Missing Default,SLua,LuaVarObject,C:\repos\pangweiwei_slua\Assets\Plugins\Slua_Managed\LuaVarObject.cs,newindexString,The following switch statement is missing a default case: switch (mi.MemberType)              {                  case MemberTypes.Property:                      {                          PropertyInfo p = (PropertyInfo)mi;                          MethodInfo set = p.GetSetMethod(true);                          var value = checkVar(l' 3' p.PropertyType);                          set.Invoke(self' new object[] { value });                          break;                      }                  case MemberTypes.Field:                      {                          FieldInfo f = (FieldInfo)mi;                          var value = checkVar(l' 3' f.FieldType);                          f.SetValue(self' value);                          break;                      }                  case MemberTypes.Method:                      return error(l' "Method can't set");                  case MemberTypes.Event:                      return error(l' "Event can't set");                }
