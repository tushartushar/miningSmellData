Implementation smell,Namespace,Class,File,Method,Description
Long Method,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The method has 114 lines of code.
Long Method,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The method has 114 lines of code.
Complex Method,Dwarrowdelf.AI,HerbivoreAI,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\AI\HerbivoreAI.cs,GetNewOrCurrentAssignment,Cyclomatic complexity of the method is 9
Complex Method,Dwarrowdelf.AI,AssignmentAI,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\AI\AssignmentAI.cs,DecideAction,Cyclomatic complexity of the method is 10
Complex Method,Dwarrowdelf,Bresenhams,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\Bresenhams.cs,PlotLine3,Cyclomatic complexity of the method is 9
Complex Method,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,Cyclomatic complexity of the method is 18
Complex Method,Dwarrowdelf,SaveGameDeserializer,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Json\JsonDeserializer.cs,_DeserializeObject,Cyclomatic complexity of the method is 8
Complex Method,Dwarrowdelf,SaveGameDeserializer,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Json\JsonDeserializer.cs,DeserializeInteger,Cyclomatic complexity of the method is 9
Complex Method,Dwarrowdelf,SaveGameDeserializer,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Json\JsonDeserializer.cs,DeserializeGameObject,Cyclomatic complexity of the method is 13
Complex Method,Dwarrowdelf,SaveGameSerializer,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Json\JsonSerializer.cs,SerializeObject,Cyclomatic complexity of the method is 16
Complex Method,Dwarrowdelf,SaveGameSerializer,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Json\JsonSerializer.cs,WriteGameObjectData,Cyclomatic complexity of the method is 10
Complex Method,Dwarrowdelf,EnvironmentExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\EnvironmentExtensions.cs,CanMoveFrom,Cyclomatic complexity of the method is 10
Complex Method,Dwarrowdelf,EnvironmentExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\EnvironmentExtensions.cs,CanMoveTo,Cyclomatic complexity of the method is 10
Complex Method,Dwarrowdelf,TypeInfo,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Json\JsonServices.cs,TypeInfo,Cyclomatic complexity of the method is 14
Complex Method,Dwarrowdelf,MarkovNameGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MarkovNameGenerator.cs,MarkovNameGenerator,Cyclomatic complexity of the method is 9
Complex Method,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,Cyclomatic complexity of the method is 18
Complex Method,Dwarrowdelf,ObjectID,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\ObjectID.cs,TryParse,Cyclomatic complexity of the method is 8
Complex Method,Dwarrowdelf.TerrainGen,DungeonTerrainGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DungeonTerrainGenerator.cs,CreateCorridor,Cyclomatic complexity of the method is 8
Complex Method,Dwarrowdelf.Jobs.Assignments,RandomMoveAssignment,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\Assignments\RandomMoveAssignment.cs,PrepareNextActionOverride,Cyclomatic complexity of the method is 10
Complex Method,Dwarrowdelf.Jobs.JobGroups,JobGroup,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\JobGroups\JobGroup.cs,SetStatus,Cyclomatic complexity of the method is 8
Long Parameter List,Dwarrowdelf,AStar,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\AStar\AStarHelpers.cs,Find,The method has 7 parameters. Parameters: env' src' srcPositioning' dst' dstPositioning' maxNodeCount' cancellationToken
Long Parameter List,Dwarrowdelf,AStar,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\AStar\AStarHelpers.cs,FindArea,The method has 6 parameters. Parameters: env' src' srcPositioning' dstArea' maxNodeCount' cancellationToken
Long Parameter List,Dwarrowdelf,AStar,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\AStar\AStarHelpers.cs,Find,The method has 5 parameters. Parameters: env' src' dest' positioning' finalLocation
Long Parameter List,Dwarrowdelf,AStar,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\AStar\AStarHelpers.cs,ParallelFind,The method has 6 parameters. Parameters: env' src' dest' positioning' resBackward' resForward
Long Parameter List,Dwarrowdelf,AStar,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\AStar\AStarHelpers.cs,FindMany,The method has 6 parameters. Parameters: env' src' srcPositioning' func' maxNodeCount' cancellationToken
Long Parameter List,Dwarrowdelf,AStar,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\AStar\AStarHelpers.cs,FindMany,The method has 6 parameters. Parameters: env' src' srcPositioning' target' maxNodeCount' cancellationToken
Long Parameter List,Dwarrowdelf,RayCastLerp,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\RayCastLerp.cs,Calculate,The method has 5 parameters. Parameters: viewerLocation' visionRange' visibilityMap' mapSize' blockerDelegate
Long Parameter List,Dwarrowdelf,RayCastLerp,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\RayCastLerp.cs,Calculate3,The method has 5 parameters. Parameters: viewerLocation' visionRange' visibilityMap' mapSize' blockerDelegate
Long Parameter List,Dwarrowdelf,RayCastBresenhams,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\RayCastBresenhams.cs,Calculate,The method has 5 parameters. Parameters: viewerLocation' visionRange' visibilityMap' mapSize' blockerDelegate
Long Parameter List,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The method has 5 parameters. Parameters: viewerLocation' visionRange' visibilityMap' mapSize' blockerDelegate
Long Parameter List,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The method has 6 parameters. Parameters: data' startColumn' octant' startSlope' endSlope' id
Long Parameter List,Dwarrowdelf,IntGrid2Z,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid2Z.cs,IntGrid2Z,The method has 5 parameters. Parameters: x' y' columns' rows' z
Long Parameter List,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The method has 5 parameters. Parameters: viewerLocation' visionRange' visibilityMap' mapSize' blockerDelegate
Long Parameter List,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The method has 6 parameters. Parameters: data' startColumn' octant' startSlope' endSlope' id
Long Parameter List,Dwarrowdelf,MyMath,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MyMath.cs,LinearInterpolation,The method has 5 parameters. Parameters: x0' x1' y0' y1' x
Long Parameter List,Dwarrowdelf,MyMath,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MyMath.cs,BiLerp,The method has 10 parameters. Parameters: x' y' x0y0' x0y1' x1y0' x1y1' x1' x2' y1' y2
Long Parameter List,Dwarrowdelf,MyMath,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MyMath.cs,TriLerp,The method has 17 parameters. Parameters: x' y' z' x0y0z0' x0y0z1' x0y1z0' x0y1z1' x1y0z0' x1y0z1' x1y1z0' x1y1z1' x1' x2' y1' y2' z1' z2
Long Parameter List,Dwarrowdelf,IntGrid3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid3.cs,IntGrid3,The method has 6 parameters. Parameters: x' y' z' columns' rows' depth
Long Parameter List,Dwarrowdelf,MMLogTraceListener,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MMLogTraceListener.cs,TraceEvent,The method has 5 parameters. Parameters: eventCache' source' eventType' id' message
Long Parameter List,Dwarrowdelf,MMLogTraceListener,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MMLogTraceListener.cs,TraceEvent,The method has 6 parameters. Parameters: eventCache' source' eventType' id' format' args
Long Parameter List,Dwarrowdelf.TerrainGen,DiamondSquare,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DiamondSquare.cs,Render,The method has 7 parameters. Parameters: grid' corners' range' h' random' min' max
Long Parameter List,Dwarrowdelf.TerrainGen,TerrainHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainHelpers.cs,CreateOreSphere,The method has 7 parameters. Parameters: terrain' random' center' r' oreMaterialID' probIn' probOut
Long Parameter List,Dwarrowdelf.Jobs.AssignmentGroups,MoveConstructAssignment,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\AssignmentGroups\MoveConstructAssignment.cs,MoveConstructAssignment,The method has 5 parameters. Parameters: parent' mode' items' environment' location
Long Parameter List,Dwarrowdelf.Jobs.AssignmentGroups,FetchItemAssignment,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\AssignmentGroups\FetchItemAssignment.cs,FetchItemAssignment,The method has 5 parameters. Parameters: parent' env' location' item' positioning
Long Parameter List,Dwarrowdelf.Jobs.Assignments,ConstructAssignment,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\Assignments\ConstructAssignment.cs,ConstructAssignment,The method has 5 parameters. Parameters: parent' mode' environment' location' items
Long Parameter List,Dwarrowdelf.Jobs.Assignments,HaulToAreaAssignment,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\Assignments\HaulToAreaAssignment.cs,HaulToAreaAssignment,The method has 5 parameters. Parameters: parent' environment' destination' positioning' hauledItem
Long Parameter List,Dwarrowdelf.Jobs.Assignments,HaulAssignment,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\Assignments\HaulAssignment.cs,HaulAssignment,The method has 5 parameters. Parameters: parent' environment' destination' positioning' hauledItem
Long Parameter List,Dwarrowdelf.Jobs.JobGroups,ConstructJob,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\JobGroups\ConstructJob.cs,ConstructJob,The method has 5 parameters. Parameters: parent' mode' items' environment' location
Long Parameter List,Dwarrowdelf.Jobs.JobGroups,FetchItems,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\JobGroups\FetchItems.cs,FetchItems,The method has 5 parameters. Parameters: parent' env' location' items' positioning
Long Identifier,Dwarrowdelf,WorkHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\WorkHelpers.cs,,The length of the parameter ConstructPavementTerrainFilter is 30.
Long Statement,Dwarrowdelf.AI,HerbivoreAI,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\AI\HerbivoreAI.cs,GetNewOrCurrentAssignment,The length of the statement  "						var enemies = AIHelpers.FindEnemies(worker' LivingCategory.Carnivore | LivingCategory.Civilized | LivingCategory.Monster); " is 122.
Long Statement,Dwarrowdelf.AI,HerbivoreAI,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\AI\HerbivoreAI.cs,GetNewOrCurrentAssignment,The length of the statement  "						var enemies = AIHelpers.FindEnemies(worker' LivingCategory.Carnivore | LivingCategory.Civilized | LivingCategory.Monster); " is 122.
Long Statement,Dwarrowdelf.AI,AssignmentAI,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\AI\AssignmentAI.cs,DecideAction,The length of the statement  "				this.HasAssignment && this.CurrentAssignment.CurrentAction != null ? this.CurrentAssignment.CurrentAction.ToString() : "<none>"); " is 129.
Long Statement,Dwarrowdelf.AI,AssignmentAI,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\AI\AssignmentAI.cs,ActionStarted,The length of the statement  "				this.HasAssignment && this.CurrentAssignment.CurrentAction != null ? this.CurrentAssignment.CurrentAction.ToString() : "<none>"); " is 129.
Long Statement,Dwarrowdelf.AI,AssignmentAI,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\AI\AssignmentAI.cs,ActionDone,The length of the statement  "			trace.TraceVerbose("ActionDone({0}' State {1}): Worker.Action = {2}' CurrentAssignment {3}' CurrentAssignment.Action = {4}"' " is 124.
Long Statement,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The length of the statement  "			//Debug.Print("{4}{0}: Calc' start col {3}' slope {1} -> {2}"' id' startSlope' endSlope' startColumn' new string(' '' (id - 1) * 4)); " is 133.
Long Statement,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,SplitBy3,The length of the statement  "			x = (x | x << 32) & 0x1f00000000ffff;  // shift left 32 bits' OR with self' and 00011111000000000000000000000000000000001111111111111111 " is 136.
Long Statement,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,SplitBy3,The length of the statement  "			x = (x | x << 16) & 0x1f0000ff0000ff;  // shift left 32 bits' OR with self' and 00011111000000000000000011111111000000000000000011111111 " is 136.
Long Statement,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,SplitBy3,The length of the statement  "			x = (x | x << 8) & 0x100f00f00f00f00f; // shift left 32 bits' OR with self' and 0001000000001111000000001111000000001111000000001111000000000000 " is 144.
Long Statement,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,SplitBy3,The length of the statement  "			x = (x | x << 4) & 0x10c30c30c30c30c3; // shift left 32 bits' OR with self' and 0001000011000011000011000011000011000011000011000011000100000000 " is 144.
Long Statement,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,MortonEncode_LUT,The length of the statement  "			answer = morton256_z[(z >> 16) & 0xFF] | // we start by shifting the third byte' since we only look at the first 21 bits " is 120.
Long Statement,Dwarrowdelf,SaveGameDeserializer,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Json\JsonDeserializer.cs,DeserializeSerializable,The length of the statement  "			var defConstructor = type.GetConstructor(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance' null' new Type[0]' null); " is 136.
Long Statement,Dwarrowdelf,IntGrid2Z,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid2Z.cs,Parse,The length of the statement  "			return new IntGrid2Z(Convert.ToInt32(arr[0]' info)' Convert.ToInt32(arr[1]' info)' Convert.ToInt32(arr[2]' info)' Convert.ToInt32(arr[3]' info)' Convert.ToInt32(arr[4]' info)); " is 176.
Long Statement,Dwarrowdelf,TypeInfo,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Json\JsonServices.cs,GetMembers,The length of the statement  "			var members = type.GetMembers(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly); " is 128.
Long Statement,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The length of the statement  "			//Debug.Print("{4}{0}: Calc' start col {3}' slope {1} -> {2}"' id' startSlope' endSlope' startColumn' new string(' '' (id - 1) * 4)); " is 133.
Long Statement,Dwarrowdelf,Workbenches,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Workbenches.cs,FindBuildableItem,The length of the statement  "			return s_workbenchInfos.SelectMany(kvp => kvp.Value.BuildableItems).SingleOrDefault(bi => bi.FullKey == buildableItemFullKey); " is 126.
Long Statement,Dwarrowdelf,IntGrid3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid3.cs,Contains,The length of the statement  "			return (p.X >= this.X) && (p.X < this.X + this.Columns) && (p.Y >= this.Y) && (p.Y < this.Y + this.Rows) && (p.Z >= this.Z) && (p.Z < this.Z + this.Depth); " is 155.
Long Statement,Dwarrowdelf,DirectionExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\Direction.cs,IsIntercardinal,The length of the statement  "			return dir == Direction.NorthEast || dir == Direction.SouthEast || dir == Direction.SouthWest || dir == Direction.NorthWest; " is 124.
Long Statement,Dwarrowdelf,IntGrid2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid2.cs,Equals,The length of the statement  "			return this.m_x == other.m_x && this.m_y == other.m_y && this.m_columns == other.m_columns && this.m_rows == other.m_rows; " is 122.
Long Statement,Dwarrowdelf,IntGrid2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid2.cs,Parse,The length of the statement  "			return new IntGrid2(Convert.ToInt32(arr[0]' info)' Convert.ToInt32(arr[1]' info)' Convert.ToInt32(arr[2]' info)' Convert.ToInt32(arr[3]' info)); " is 144.
Long Statement,Dwarrowdelf.Jobs.JobGroups,FellTreeParallelJob,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\JobGroups\FellTreeParallelJob.cs,AddNewJobs,The length of the statement  "			m_locs = m_area.Range().Where(p => !m_jobs.Any(i => i.Item1 == p) && m_environment.GetTileData(p).HasFellableTree).Take(3 - c); " is 127.
Complex Conditional,Dwarrowdelf,TypeInfo,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Json\JsonServices.cs,CompareEntries,The conditional expression  "(simpleA && simpleB) || (!simpleA && !simpleB)"  is complex.
Complex Conditional,Dwarrowdelf,TypeInfo,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Json\JsonServices.cs,GetConverter,The conditional expression  "typeConverter != null &&  				typeConverter.GetType() != typeof(TypeConverter) &&  				typeConverter.GetType() != typeof(CollectionConverter) &&  				typeConverter.CanConvertTo(typeof(string))"  is complex.
Complex Conditional,Dwarrowdelf,IntGrid3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid3.cs,ContainsInclusive,The conditional expression  "this.X1 <= other.X1 && other.X2 <= this.X2 &&  				this.Y1 <= other.Y1 && other.Y2 <= this.Y2 &&  				this.Z1 <= other.Z1 && other.Z2 <= this.Z2"  is complex.
Complex Conditional,Dwarrowdelf,IntGrid3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid3.cs,ContainsExclusive,The conditional expression  "this.X1 < other.X1 && other.X2 < this.X2 &&  				this.Y1 < other.Y1 && other.Y2 < this.Y2 &&  				this.Z1 < other.Z1 && other.Z2 < this.Z2"  is complex.
Complex Conditional,Dwarrowdelf.TerrainGen,ArtificialGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\ArtificialGen.cs,CreateCubeMap,The conditional expression  "x < margin || y < margin || z < margin ||  							x >= size.Width - margin || y >= size.Height - margin || z >= size.Depth - margin"  is complex.
Complex Conditional,Dwarrowdelf.TerrainGen,MyTarget,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\RiverGen.cs,GetIsTarget,The conditional expression  "p.X != 0 && p.Y != 0 && p.X != m_terrain.Width - 1 && p.Y != m_terrain.Height - 1"  is complex.
Magic Number,Dwarrowdelf.AI,AIHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\AI\AIHelpers.cs,FindNearestEnemy,The following statement contains a magic number: int maxSide = 2 * range + 1;
Magic Number,Dwarrowdelf.AI,AIHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\AI\AIHelpers.cs,FindNearestEnemy,The following statement contains a magic number: var rect = new IntGrid2Z(location.X - maxSide / 2' location.Y - maxSide / 2' maxSide' maxSide' location.Z);
Magic Number,Dwarrowdelf.AI,AIHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\AI\AIHelpers.cs,FindNearestEnemy,The following statement contains a magic number: var rect = new IntGrid2Z(location.X - maxSide / 2' location.Y - maxSide / 2' maxSide' maxSide' location.Z);
Magic Number,Dwarrowdelf.AI,AIHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\AI\AIHelpers.cs,FindEnemies,The following statement contains a magic number: int maxSide = 2 * range + 1;
Magic Number,Dwarrowdelf.AI,AIHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\AI\AIHelpers.cs,FindEnemies,The following statement contains a magic number: var rect = new IntGrid2Z(location.X - maxSide / 2' location.Y - maxSide / 2' maxSide' maxSide' location.Z);
Magic Number,Dwarrowdelf.AI,AIHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\AI\AIHelpers.cs,FindEnemies,The following statement contains a magic number: var rect = new IntGrid2Z(location.X - maxSide / 2' location.Y - maxSide / 2' maxSide' maxSide' location.Z);
Magic Number,Dwarrowdelf.AI,HerbivoreAI,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\AI\HerbivoreAI.cs,GetFleeVector,The following statement contains a magic number: var fleeVector = enemies.Aggregate(new DoubleVector3()'  				(accu' enemy) =>  				{  					var v = new DoubleVector3(this.Worker.Location - enemy.Location);    					// XXX if null vector' flee up. (which probably leads to fleeing in some parallel direction).  					if (v.IsNull)  						return accu + new DoubleVector3(0' 0' 1);    					v = v * 100 / v.SquaredLength;  					return accu + v;  				});
Magic Number,Dwarrowdelf,AStarDefaultTarget,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\AStar\AStarTarget.cs,GetHeuristic,The following statement contains a magic number: int h = COST_DIAGONAL * hDiagonal + COST_STRAIGHT * (hStraight - 2 * hDiagonal);
Magic Number,Dwarrowdelf,AStarAreaTarget,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\AStar\AStarTarget.cs,GetHeuristic,The following statement contains a magic number: return (ushort)((dst - location).ManhattanLength * 10);
Magic Number,Dwarrowdelf,AStar,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\AStar\AStarHelpers.cs,CanReach,The following statement contains a magic number: var taskForward = new Task(delegate  			{  				resForward = Find(env' src' DirectionSet.Exact' dst' dstPositioning' 200000' cts.Token);  			});
Magic Number,Dwarrowdelf,AStar,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\AStar\AStarHelpers.cs,CanReach,The following statement contains a magic number: var taskBackward = new Task(delegate  			{  				resBackward = Find(env' dst' dstPositioning.Reverse()' src' DirectionSet.Exact' 200000' cts.Token);  			});
Magic Number,Dwarrowdelf,AStar,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\AStar\AStarHelpers.cs,ParallelFind,The following statement contains a magic number: var taskForward = new Task(delegate  			{  				rf = Find(env' src' DirectionSet.Exact' dest' positioning' 200000' cts.Token);  			});
Magic Number,Dwarrowdelf,AStar,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\AStar\AStarHelpers.cs,ParallelFind,The following statement contains a magic number: var taskBackward = new Task(delegate  			{  				rb = Find(env' dest' positioning.Reverse()' src' DirectionSet.Exact' 200000' cts.Token);  			});
Magic Number,Dwarrowdelf,AStar,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\AStar\AStarHelpers.cs,AStar,The following statement contains a magic number: this.MaxNodeCount = 200000;
Magic Number,Dwarrowdelf,BFS,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\AStar\BFS.cs,BFS,The following statement contains a magic number: this.MaxNodeCount = 200000;
Magic Number,Dwarrowdelf,EnumBitMask<TEnum>,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\EnumBitMask.cs,ToString,The following statement contains a magic number: var sb = new StringBuilder("0b"' s_numBits + 2);
Magic Number,Dwarrowdelf,EnumBitMask64<TEnum>,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\EnumBitMask64.cs,EnumBitMask64,The following statement contains a magic number: max > 64
Magic Number,Dwarrowdelf,EnumBitMask64<TEnum>,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\EnumBitMask64.cs,ToString,The following statement contains a magic number: var sb = new StringBuilder("0b"' s_numBits + 2);
Magic Number,Dwarrowdelf,EnumBitMask32<TEnum>,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\EnumBitMask32.cs,EnumBitMask32,The following statement contains a magic number: max > 32
Magic Number,Dwarrowdelf,EnumBitMask32<TEnum>,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\EnumBitMask32.cs,ToString,The following statement contains a magic number: var sb = new StringBuilder("0b"' s_numBits + 2);
Magic Number,Dwarrowdelf,DataGrid2D<T>,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\DataGrid2D.cs,Scale,The following statement contains a magic number: xdiff /= 2;
Magic Number,Dwarrowdelf,DataGrid2D<T>,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\DataGrid2D.cs,Scale,The following statement contains a magic number: ydiff /= 2;
Magic Number,Dwarrowdelf,Hash,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\Hash.cs,Hash2D,The following statement contains a magic number: return ((y & 0xffff) << 16) | ((x & 0xffff) << 0);
Magic Number,Dwarrowdelf,Hash,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\Hash.cs,Hash3D,The following statement contains a magic number: return ((z & 0xff) << 24) | ((y & 0xfff) << 12) | ((x & 0xfff) << 0);
Magic Number,Dwarrowdelf,Hash,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\Hash.cs,Hash3D,The following statement contains a magic number: return ((z & 0xff) << 24) | ((y & 0xfff) << 12) | ((x & 0xfff) << 0);
Magic Number,Dwarrowdelf,Hash,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\Hash.cs,HashUInt32,The following statement contains a magic number: a = (a ^ 61) ^ (a >> 16);
Magic Number,Dwarrowdelf,Hash,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\Hash.cs,HashUInt32,The following statement contains a magic number: a = (a ^ 61) ^ (a >> 16);
Magic Number,Dwarrowdelf,Hash,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\Hash.cs,HashUInt32,The following statement contains a magic number: a = a + (a << 3);
Magic Number,Dwarrowdelf,Hash,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\Hash.cs,HashUInt32,The following statement contains a magic number: a = a ^ (a >> 4);
Magic Number,Dwarrowdelf,Hash,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\Hash.cs,HashUInt32,The following statement contains a magic number: a = a ^ (a >> 15);
Magic Number,Dwarrowdelf,Hash,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\Hash.cs,HashInt32,The following statement contains a magic number: v = ~v + (v << 15);
Magic Number,Dwarrowdelf,Hash,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\Hash.cs,HashInt32,The following statement contains a magic number: v = v ^ (v >> 12);
Magic Number,Dwarrowdelf,Hash,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\Hash.cs,HashInt32,The following statement contains a magic number: v = v + (v << 2);
Magic Number,Dwarrowdelf,Hash,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\Hash.cs,HashInt32,The following statement contains a magic number: v = v ^ (v >> 4);
Magic Number,Dwarrowdelf,Hash,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\Hash.cs,HashInt32,The following statement contains a magic number: v = v * 2057;
Magic Number,Dwarrowdelf,Hash,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\Hash.cs,HashInt32,The following statement contains a magic number: v = v ^ (v >> 16);
Magic Number,Dwarrowdelf,Bresenhams,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\Bresenhams.cs,PlotLine,The following statement contains a magic number: int err = dX / 2;
Magic Number,Dwarrowdelf,Bresenhams,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\Bresenhams.cs,PlotLine3,The following statement contains a magic number: int errorXY = deltaX / 2;
Magic Number,Dwarrowdelf,Bresenhams,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\Bresenhams.cs,PlotLine3,The following statement contains a magic number: int errorXZ = deltaX / 2;
Magic Number,Dwarrowdelf,LerpLine,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\LerpLine.cs,PlotLine,The following statement contains a magic number: const int MUL = 1 << 16;
Magic Number,Dwarrowdelf,LerpLine,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\LerpLine.cs,PlotLine3,The following statement contains a magic number: const int MUL = 1 << 16;
Magic Number,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The following statement contains a magic number: octant < 8
Magic Number,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The following statement contains a magic number: switch (octant)  			{  				case 0:  				case 7:  					maxX = Math.Min(data.VisionRange' data.MapSize.Width - data.ViewerLocation.X - 1);  					break;    				case 1:  				case 2:  					maxX = Math.Min(data.VisionRange' data.MapSize.Height - data.ViewerLocation.Y - 1);  					break;    				case 3:  				case 4:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.X);  					break;    				case 5:  				case 6:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.Y);  					break;    				default:  					throw new Exception();  			}
Magic Number,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The following statement contains a magic number: switch (octant)  			{  				case 0:  				case 7:  					maxX = Math.Min(data.VisionRange' data.MapSize.Width - data.ViewerLocation.X - 1);  					break;    				case 1:  				case 2:  					maxX = Math.Min(data.VisionRange' data.MapSize.Height - data.ViewerLocation.Y - 1);  					break;    				case 3:  				case 4:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.X);  					break;    				case 5:  				case 6:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.Y);  					break;    				default:  					throw new Exception();  			}
Magic Number,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The following statement contains a magic number: switch (octant)  			{  				case 0:  				case 7:  					maxX = Math.Min(data.VisionRange' data.MapSize.Width - data.ViewerLocation.X - 1);  					break;    				case 1:  				case 2:  					maxX = Math.Min(data.VisionRange' data.MapSize.Height - data.ViewerLocation.Y - 1);  					break;    				case 3:  				case 4:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.X);  					break;    				case 5:  				case 6:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.Y);  					break;    				default:  					throw new Exception();  			}
Magic Number,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The following statement contains a magic number: switch (octant)  			{  				case 0:  				case 7:  					maxX = Math.Min(data.VisionRange' data.MapSize.Width - data.ViewerLocation.X - 1);  					break;    				case 1:  				case 2:  					maxX = Math.Min(data.VisionRange' data.MapSize.Height - data.ViewerLocation.Y - 1);  					break;    				case 3:  				case 4:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.X);  					break;    				case 5:  				case 6:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.Y);  					break;    				default:  					throw new Exception();  			}
Magic Number,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The following statement contains a magic number: switch (octant)  			{  				case 0:  				case 7:  					maxX = Math.Min(data.VisionRange' data.MapSize.Width - data.ViewerLocation.X - 1);  					break;    				case 1:  				case 2:  					maxX = Math.Min(data.VisionRange' data.MapSize.Height - data.ViewerLocation.Y - 1);  					break;    				case 3:  				case 4:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.X);  					break;    				case 5:  				case 6:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.Y);  					break;    				default:  					throw new Exception();  			}
Magic Number,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The following statement contains a magic number: switch (octant)  			{  				case 0:  				case 7:  					maxX = Math.Min(data.VisionRange' data.MapSize.Width - data.ViewerLocation.X - 1);  					break;    				case 1:  				case 2:  					maxX = Math.Min(data.VisionRange' data.MapSize.Height - data.ViewerLocation.Y - 1);  					break;    				case 3:  				case 4:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.X);  					break;    				case 5:  				case 6:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.Y);  					break;    				default:  					throw new Exception();  			}
Magic Number,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The following statement contains a magic number: switch (octant)  				{  					case 0:  					case 3:  						highY = Math.Min(highY' data.MapSize.Height - data.ViewerLocation.Y - 1);  						break;    					case 1:  					case 6:  						highY = Math.Min(highY' data.MapSize.Width - data.ViewerLocation.X - 1);  						break;    					case 7:  					case 4:  						highY = Math.Min(highY' data.ViewerLocation.Y);  						break;    					case 2:  					case 5:  						highY = Math.Min(highY' data.ViewerLocation.X);  						break;    					default:  						throw new Exception();  				}
Magic Number,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The following statement contains a magic number: switch (octant)  				{  					case 0:  					case 3:  						highY = Math.Min(highY' data.MapSize.Height - data.ViewerLocation.Y - 1);  						break;    					case 1:  					case 6:  						highY = Math.Min(highY' data.MapSize.Width - data.ViewerLocation.X - 1);  						break;    					case 7:  					case 4:  						highY = Math.Min(highY' data.ViewerLocation.Y);  						break;    					case 2:  					case 5:  						highY = Math.Min(highY' data.ViewerLocation.X);  						break;    					default:  						throw new Exception();  				}
Magic Number,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The following statement contains a magic number: switch (octant)  				{  					case 0:  					case 3:  						highY = Math.Min(highY' data.MapSize.Height - data.ViewerLocation.Y - 1);  						break;    					case 1:  					case 6:  						highY = Math.Min(highY' data.MapSize.Width - data.ViewerLocation.X - 1);  						break;    					case 7:  					case 4:  						highY = Math.Min(highY' data.ViewerLocation.Y);  						break;    					case 2:  					case 5:  						highY = Math.Min(highY' data.ViewerLocation.X);  						break;    					default:  						throw new Exception();  				}
Magic Number,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The following statement contains a magic number: switch (octant)  				{  					case 0:  					case 3:  						highY = Math.Min(highY' data.MapSize.Height - data.ViewerLocation.Y - 1);  						break;    					case 1:  					case 6:  						highY = Math.Min(highY' data.MapSize.Width - data.ViewerLocation.X - 1);  						break;    					case 7:  					case 4:  						highY = Math.Min(highY' data.ViewerLocation.Y);  						break;    					case 2:  					case 5:  						highY = Math.Min(highY' data.ViewerLocation.X);  						break;    					default:  						throw new Exception();  				}
Magic Number,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The following statement contains a magic number: switch (octant)  				{  					case 0:  					case 3:  						highY = Math.Min(highY' data.MapSize.Height - data.ViewerLocation.Y - 1);  						break;    					case 1:  					case 6:  						highY = Math.Min(highY' data.MapSize.Width - data.ViewerLocation.X - 1);  						break;    					case 7:  					case 4:  						highY = Math.Min(highY' data.ViewerLocation.Y);  						break;    					case 2:  					case 5:  						highY = Math.Min(highY' data.ViewerLocation.X);  						break;    					default:  						throw new Exception();  				}
Magic Number,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The following statement contains a magic number: switch (octant)  				{  					case 0:  					case 3:  						highY = Math.Min(highY' data.MapSize.Height - data.ViewerLocation.Y - 1);  						break;    					case 1:  					case 6:  						highY = Math.Min(highY' data.MapSize.Width - data.ViewerLocation.X - 1);  						break;    					case 7:  					case 4:  						highY = Math.Min(highY' data.ViewerLocation.Y);  						break;    					case 2:  					case 5:  						highY = Math.Min(highY' data.ViewerLocation.X);  						break;    					default:  						throw new Exception();  				}
Magic Number,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The following statement contains a magic number: double lowerSlope = (y - 0.5) / (x + 0.5);
Magic Number,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The following statement contains a magic number: double lowerSlope = (y - 0.5) / (x + 0.5);
Magic Number,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The following statement contains a magic number: double upperSlope = (y + 0.5) / (x - 0.5);
Magic Number,Dwarrowdelf,ShadowCastRecursiveStrict,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursiveStrict.cs,Calculate,The following statement contains a magic number: double upperSlope = (y + 0.5) / (x - 0.5);
Magic Number,Dwarrowdelf,VisionMap,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\VisionMap.cs,VisionMap,The following statement contains a magic number: m_side = visionRange * 2 + 1;
Magic Number,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,MortonEncode_For,The following statement contains a magic number: answer |= ((x & (1UL << i)) << 2 * i) | ((y & (1UL << i)) << (2 * i + 1)) | ((z & (1UL << i)) << (2 * i + 2));
Magic Number,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,MortonEncode_For,The following statement contains a magic number: answer |= ((x & (1UL << i)) << 2 * i) | ((y & (1UL << i)) << (2 * i + 1)) | ((z & (1UL << i)) << (2 * i + 2));
Magic Number,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,MortonEncode_For,The following statement contains a magic number: answer |= ((x & (1UL << i)) << 2 * i) | ((y & (1UL << i)) << (2 * i + 1)) | ((z & (1UL << i)) << (2 * i + 2));
Magic Number,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,MortonEncode_For,The following statement contains a magic number: answer |= ((x & (1UL << i)) << 2 * i) | ((y & (1UL << i)) << (2 * i + 1)) | ((z & (1UL << i)) << (2 * i + 2));
Magic Number,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,MortonEncode_For,The following statement contains a magic number: i < (sizeof(ulong) * 8) / 3
Magic Number,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,MortonEncode_For,The following statement contains a magic number: i < (sizeof(ulong) * 8) / 3
Magic Number,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,SplitBy3,The following statement contains a magic number: x = (x | x << 32) & 0x1f00000000ffff;
Magic Number,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,SplitBy3,The following statement contains a magic number: x = (x | x << 16) & 0x1f0000ff0000ff;
Magic Number,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,SplitBy3,The following statement contains a magic number: x = (x | x << 8) & 0x100f00f00f00f00f;
Magic Number,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,SplitBy3,The following statement contains a magic number: x = (x | x << 4) & 0x10c30c30c30c30c3;
Magic Number,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,SplitBy3,The following statement contains a magic number: x = (x | x << 2) & 0x1249249249249249;
Magic Number,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,MortonEncode_MagicBits,The following statement contains a magic number: return SplitBy3(x) | SplitBy3(y) << 1 | SplitBy3(z) << 2;
Magic Number,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,MortonEncode_LUT,The following statement contains a magic number: answer = morton256_z[(z >> 16) & 0xFF] | // we start by shifting the third byte' since we only look at the first 21 bits  						morton256_y[(y >> 16) & 0xFF] |  						morton256_x[(x >> 16) & 0xFF];
Magic Number,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,MortonEncode_LUT,The following statement contains a magic number: answer = morton256_z[(z >> 16) & 0xFF] | // we start by shifting the third byte' since we only look at the first 21 bits  						morton256_y[(y >> 16) & 0xFF] |  						morton256_x[(x >> 16) & 0xFF];
Magic Number,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,MortonEncode_LUT,The following statement contains a magic number: answer = morton256_z[(z >> 16) & 0xFF] | // we start by shifting the third byte' since we only look at the first 21 bits  						morton256_y[(y >> 16) & 0xFF] |  						morton256_x[(x >> 16) & 0xFF];
Magic Number,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,MortonEncode_LUT,The following statement contains a magic number: answer = answer << 48 | morton256_z[(z >> 8) & 0xFF] | // shifting second byte  						morton256_y[(y >> 8) & 0xFF] |  						morton256_x[(x >> 8) & 0xFF];
Magic Number,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,MortonEncode_LUT,The following statement contains a magic number: answer = answer << 48 | morton256_z[(z >> 8) & 0xFF] | // shifting second byte  						morton256_y[(y >> 8) & 0xFF] |  						morton256_x[(x >> 8) & 0xFF];
Magic Number,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,MortonEncode_LUT,The following statement contains a magic number: answer = answer << 48 | morton256_z[(z >> 8) & 0xFF] | // shifting second byte  						morton256_y[(y >> 8) & 0xFF] |  						morton256_x[(x >> 8) & 0xFF];
Magic Number,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,MortonEncode_LUT,The following statement contains a magic number: answer = answer << 48 | morton256_z[(z >> 8) & 0xFF] | // shifting second byte  						morton256_y[(y >> 8) & 0xFF] |  						morton256_x[(x >> 8) & 0xFF];
Magic Number,Dwarrowdelf,MortonOrder,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MortonOrder.cs,MortonEncode_LUT,The following statement contains a magic number: answer = answer << 24 |  						morton256_z[(z) & 0xFF] | // first byte  						morton256_y[(y) & 0xFF] |  						morton256_x[(x) & 0xFF];
Magic Number,Dwarrowdelf,MWCRandom,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MWCRandom.cs,NextUint,The following statement contains a magic number: m_z = 36969 * (m_z & 65535) + (m_z >> 16);
Magic Number,Dwarrowdelf,MWCRandom,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MWCRandom.cs,NextUint,The following statement contains a magic number: m_z = 36969 * (m_z & 65535) + (m_z >> 16);
Magic Number,Dwarrowdelf,MWCRandom,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MWCRandom.cs,NextUint,The following statement contains a magic number: m_z = 36969 * (m_z & 65535) + (m_z >> 16);
Magic Number,Dwarrowdelf,MWCRandom,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MWCRandom.cs,NextUint,The following statement contains a magic number: m_w = 18000 * (m_w & 65535) + (m_w >> 16);
Magic Number,Dwarrowdelf,MWCRandom,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MWCRandom.cs,NextUint,The following statement contains a magic number: m_w = 18000 * (m_w & 65535) + (m_w >> 16);
Magic Number,Dwarrowdelf,MWCRandom,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MWCRandom.cs,NextUint,The following statement contains a magic number: m_w = 18000 * (m_w & 65535) + (m_w >> 16);
Magic Number,Dwarrowdelf,MWCRandom,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MWCRandom.cs,NextUint,The following statement contains a magic number: return (m_z << 16) + m_w;
Magic Number,Dwarrowdelf,PipeConnectionListener,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Net\PipeConnectionListener.cs,NewAccept,The following statement contains a magic number: var stream = new NamedPipeServerStream("Dwarrowdelf.Pipe"' PipeDirection.InOut' 4' PipeTransmissionMode.Byte'  				PipeOptions.Asynchronous);
Magic Number,Dwarrowdelf,TcpConnectionListener,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Net\TcpConnectionListener.cs,StartListening,The following statement contains a magic number: s_listenSocket.Listen(100);
Magic Number,Dwarrowdelf,IntGrid2Z,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid2Z.cs,GetHashCode,The following statement contains a magic number: return this.X | (this.Y << 8) | (this.Columns << 16) | (this.Rows << 24);
Magic Number,Dwarrowdelf,IntGrid2Z,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid2Z.cs,GetHashCode,The following statement contains a magic number: return this.X | (this.Y << 8) | (this.Columns << 16) | (this.Rows << 24);
Magic Number,Dwarrowdelf,IntGrid2Z,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid2Z.cs,GetHashCode,The following statement contains a magic number: return this.X | (this.Y << 8) | (this.Columns << 16) | (this.Rows << 24);
Magic Number,Dwarrowdelf,IntGrid2Z,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid2Z.cs,Parse,The following statement contains a magic number: return new IntGrid2Z(Convert.ToInt32(arr[0]' info)' Convert.ToInt32(arr[1]' info)' Convert.ToInt32(arr[2]' info)' Convert.ToInt32(arr[3]' info)' Convert.ToInt32(arr[4]' info));
Magic Number,Dwarrowdelf,IntGrid2Z,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid2Z.cs,Parse,The following statement contains a magic number: return new IntGrid2Z(Convert.ToInt32(arr[0]' info)' Convert.ToInt32(arr[1]' info)' Convert.ToInt32(arr[2]' info)' Convert.ToInt32(arr[3]' info)' Convert.ToInt32(arr[4]' info));
Magic Number,Dwarrowdelf,IntGrid2Z,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid2Z.cs,Parse,The following statement contains a magic number: return new IntGrid2Z(Convert.ToInt32(arr[0]' info)' Convert.ToInt32(arr[1]' info)' Convert.ToInt32(arr[2]' info)' Convert.ToInt32(arr[3]' info)' Convert.ToInt32(arr[4]' info));
Magic Number,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The following statement contains a magic number: octant < 8
Magic Number,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The following statement contains a magic number: switch (octant)  			{  				case 0:  				case 7:  					maxX = Math.Min(data.VisionRange' data.MapSize.Width - data.ViewerLocation.X - 1);  					break;    				case 1:  				case 2:  					maxX = Math.Min(data.VisionRange' data.MapSize.Height - data.ViewerLocation.Y - 1);  					break;    				case 3:  				case 4:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.X);  					break;    				case 5:  				case 6:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.Y);  					break;    				default:  					throw new Exception();  			}
Magic Number,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The following statement contains a magic number: switch (octant)  			{  				case 0:  				case 7:  					maxX = Math.Min(data.VisionRange' data.MapSize.Width - data.ViewerLocation.X - 1);  					break;    				case 1:  				case 2:  					maxX = Math.Min(data.VisionRange' data.MapSize.Height - data.ViewerLocation.Y - 1);  					break;    				case 3:  				case 4:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.X);  					break;    				case 5:  				case 6:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.Y);  					break;    				default:  					throw new Exception();  			}
Magic Number,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The following statement contains a magic number: switch (octant)  			{  				case 0:  				case 7:  					maxX = Math.Min(data.VisionRange' data.MapSize.Width - data.ViewerLocation.X - 1);  					break;    				case 1:  				case 2:  					maxX = Math.Min(data.VisionRange' data.MapSize.Height - data.ViewerLocation.Y - 1);  					break;    				case 3:  				case 4:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.X);  					break;    				case 5:  				case 6:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.Y);  					break;    				default:  					throw new Exception();  			}
Magic Number,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The following statement contains a magic number: switch (octant)  			{  				case 0:  				case 7:  					maxX = Math.Min(data.VisionRange' data.MapSize.Width - data.ViewerLocation.X - 1);  					break;    				case 1:  				case 2:  					maxX = Math.Min(data.VisionRange' data.MapSize.Height - data.ViewerLocation.Y - 1);  					break;    				case 3:  				case 4:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.X);  					break;    				case 5:  				case 6:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.Y);  					break;    				default:  					throw new Exception();  			}
Magic Number,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The following statement contains a magic number: switch (octant)  			{  				case 0:  				case 7:  					maxX = Math.Min(data.VisionRange' data.MapSize.Width - data.ViewerLocation.X - 1);  					break;    				case 1:  				case 2:  					maxX = Math.Min(data.VisionRange' data.MapSize.Height - data.ViewerLocation.Y - 1);  					break;    				case 3:  				case 4:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.X);  					break;    				case 5:  				case 6:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.Y);  					break;    				default:  					throw new Exception();  			}
Magic Number,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The following statement contains a magic number: switch (octant)  			{  				case 0:  				case 7:  					maxX = Math.Min(data.VisionRange' data.MapSize.Width - data.ViewerLocation.X - 1);  					break;    				case 1:  				case 2:  					maxX = Math.Min(data.VisionRange' data.MapSize.Height - data.ViewerLocation.Y - 1);  					break;    				case 3:  				case 4:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.X);  					break;    				case 5:  				case 6:  					maxX = Math.Min(data.VisionRange' data.ViewerLocation.Y);  					break;    				default:  					throw new Exception();  			}
Magic Number,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The following statement contains a magic number: switch (octant)  				{  					case 0:  					case 3:  						highY = Math.Min(highY' data.MapSize.Height - data.ViewerLocation.Y - 1);  						break;    					case 1:  					case 6:  						highY = Math.Min(highY' data.MapSize.Width - data.ViewerLocation.X - 1);  						break;    					case 7:  					case 4:  						highY = Math.Min(highY' data.ViewerLocation.Y);  						break;    					case 2:  					case 5:  						highY = Math.Min(highY' data.ViewerLocation.X);  						break;    					default:  						throw new Exception();  				}
Magic Number,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The following statement contains a magic number: switch (octant)  				{  					case 0:  					case 3:  						highY = Math.Min(highY' data.MapSize.Height - data.ViewerLocation.Y - 1);  						break;    					case 1:  					case 6:  						highY = Math.Min(highY' data.MapSize.Width - data.ViewerLocation.X - 1);  						break;    					case 7:  					case 4:  						highY = Math.Min(highY' data.ViewerLocation.Y);  						break;    					case 2:  					case 5:  						highY = Math.Min(highY' data.ViewerLocation.X);  						break;    					default:  						throw new Exception();  				}
Magic Number,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The following statement contains a magic number: switch (octant)  				{  					case 0:  					case 3:  						highY = Math.Min(highY' data.MapSize.Height - data.ViewerLocation.Y - 1);  						break;    					case 1:  					case 6:  						highY = Math.Min(highY' data.MapSize.Width - data.ViewerLocation.X - 1);  						break;    					case 7:  					case 4:  						highY = Math.Min(highY' data.ViewerLocation.Y);  						break;    					case 2:  					case 5:  						highY = Math.Min(highY' data.ViewerLocation.X);  						break;    					default:  						throw new Exception();  				}
Magic Number,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The following statement contains a magic number: switch (octant)  				{  					case 0:  					case 3:  						highY = Math.Min(highY' data.MapSize.Height - data.ViewerLocation.Y - 1);  						break;    					case 1:  					case 6:  						highY = Math.Min(highY' data.MapSize.Width - data.ViewerLocation.X - 1);  						break;    					case 7:  					case 4:  						highY = Math.Min(highY' data.ViewerLocation.Y);  						break;    					case 2:  					case 5:  						highY = Math.Min(highY' data.ViewerLocation.X);  						break;    					default:  						throw new Exception();  				}
Magic Number,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The following statement contains a magic number: switch (octant)  				{  					case 0:  					case 3:  						highY = Math.Min(highY' data.MapSize.Height - data.ViewerLocation.Y - 1);  						break;    					case 1:  					case 6:  						highY = Math.Min(highY' data.MapSize.Width - data.ViewerLocation.X - 1);  						break;    					case 7:  					case 4:  						highY = Math.Min(highY' data.ViewerLocation.Y);  						break;    					case 2:  					case 5:  						highY = Math.Min(highY' data.ViewerLocation.X);  						break;    					default:  						throw new Exception();  				}
Magic Number,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The following statement contains a magic number: switch (octant)  				{  					case 0:  					case 3:  						highY = Math.Min(highY' data.MapSize.Height - data.ViewerLocation.Y - 1);  						break;    					case 1:  					case 6:  						highY = Math.Min(highY' data.MapSize.Width - data.ViewerLocation.X - 1);  						break;    					case 7:  					case 4:  						highY = Math.Min(highY' data.ViewerLocation.Y);  						break;    					case 2:  					case 5:  						highY = Math.Min(highY' data.ViewerLocation.X);  						break;    					default:  						throw new Exception();  				}
Magic Number,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The following statement contains a magic number: double lowerSlope = (y - 0.5) / (x + 0.5);
Magic Number,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The following statement contains a magic number: double lowerSlope = (y - 0.5) / (x + 0.5);
Magic Number,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The following statement contains a magic number: double upperSlope = (y + 0.5) / (x - 0.5);
Magic Number,Dwarrowdelf,ShadowCastRecursive,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\LOS\ShadowCastRecursive.cs,Calculate,The following statement contains a magic number: double upperSlope = (y + 0.5) / (x - 0.5);
Magic Number,Dwarrowdelf,BinaryHeap<T>,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\AStar\OpenList.cs,Parent,The following statement contains a magic number: return idx / 2;
Magic Number,Dwarrowdelf,BinaryHeap<T>,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\AStar\OpenList.cs,Left,The following statement contains a magic number: return idx * 2;
Magic Number,Dwarrowdelf,BinaryHeap<T>,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\AStar\OpenList.cs,Right,The following statement contains a magic number: return idx * 2 + 1;
Magic Number,Dwarrowdelf,BinaryHeap<T>,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\AStar\OpenList.cs,Add,The following statement contains a magic number: T[] newArray = new T[m_openList.Length * 2];
Magic Number,Dwarrowdelf,BinaryHeap<T>,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\AStar\OpenList.cs,HeapifyDown,The following statement contains a magic number: i * 2 <= m_count
Magic Number,Dwarrowdelf,IntSize3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntSize3.cs,Parse,The following statement contains a magic number: return new IntSize3(Convert.ToInt32(arr[0]' info)' Convert.ToInt32(arr[1]' info)' Convert.ToInt32(arr[2]' info));
Magic Number,Dwarrowdelf,IntVector3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector3.cs,IntVector3,The following statement contains a magic number: m_value =  				((long)(x & 0xffff) << 0) |  				((long)(y & 0xffff) << 16) |  				((long)(z & 0xffff) << 48);
Magic Number,Dwarrowdelf,IntVector3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector3.cs,IntVector3,The following statement contains a magic number: m_value =  				((long)(x & 0xffff) << 0) |  				((long)(y & 0xffff) << 16) |  				((long)(z & 0xffff) << 48);
Magic Number,Dwarrowdelf,IntVector3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector3.cs,Parse,The following statement contains a magic number: return new IntVector3(Convert.ToInt32(arr[0]' info)' Convert.ToInt32(arr[1]' info)' Convert.ToInt32(arr[2]' info));
Magic Number,Dwarrowdelf,IntVector3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector3.cs,FastCos,The following statement contains a magic number: rot %= 8;
Magic Number,Dwarrowdelf,IntVector3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector3.cs,FastCos,The following statement contains a magic number: rot += 8;
Magic Number,Dwarrowdelf,IntVector3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector3.cs,FastCos,The following statement contains a magic number: rot == 0 || rot == 1 || rot == 7
Magic Number,Dwarrowdelf,IntVector3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector3.cs,FastCos,The following statement contains a magic number: rot == 2 || rot == 6
Magic Number,Dwarrowdelf,IntVector3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector3.cs,FastCos,The following statement contains a magic number: rot == 2 || rot == 6
Magic Number,Dwarrowdelf,IntVector3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector3.cs,FastSin,The following statement contains a magic number: rot %= 8;
Magic Number,Dwarrowdelf,IntVector3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector3.cs,FastSin,The following statement contains a magic number: rot += 8;
Magic Number,Dwarrowdelf,IntVector3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector3.cs,FastSin,The following statement contains a magic number: rot == 1 || rot == 2 || rot == 3
Magic Number,Dwarrowdelf,IntVector3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector3.cs,FastSin,The following statement contains a magic number: rot == 1 || rot == 2 || rot == 3
Magic Number,Dwarrowdelf,IntVector3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector3.cs,FastSin,The following statement contains a magic number: rot == 0 || rot == 4
Magic Number,Dwarrowdelf,GameColorRGB,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\GameColor.cs,GetHashCode,The following statement contains a magic number: return (m_r << 16) | (m_g << 8) | m_b;
Magic Number,Dwarrowdelf,GameColorRGB,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\GameColor.cs,GetHashCode,The following statement contains a magic number: return (m_r << 16) | (m_g << 8) | m_b;
Magic Number,Dwarrowdelf,GameColorRGB,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\GameColor.cs,ToRGBA,The following statement contains a magic number: return (255 << 24) | (m_b << 16) | (m_g << 8) | m_r;
Magic Number,Dwarrowdelf,GameColorRGB,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\GameColor.cs,ToRGBA,The following statement contains a magic number: return (255 << 24) | (m_b << 16) | (m_g << 8) | m_r;
Magic Number,Dwarrowdelf,GameColorRGB,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\GameColor.cs,ToRGBA,The following statement contains a magic number: return (255 << 24) | (m_b << 16) | (m_g << 8) | m_r;
Magic Number,Dwarrowdelf,GameColorRGB,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\GameColor.cs,ToRGBA,The following statement contains a magic number: return (255 << 24) | (m_b << 16) | (m_g << 8) | m_r;
Magic Number,Dwarrowdelf,MyMath,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MyMath.cs,DivRoundNearest,The following statement contains a magic number: return m > 0 ?  				(m + n / 2) / n :  				(m - n / 2) / n;
Magic Number,Dwarrowdelf,MyMath,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MyMath.cs,DivRoundNearest,The following statement contains a magic number: return m > 0 ?  				(m + n / 2) / n :  				(m - n / 2) / n;
Magic Number,Dwarrowdelf,MyMath,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MyMath.cs,Round,The following statement contains a magic number: return val >= 0 ? (int)(val + 0.5) : (int)(val - 0.5);
Magic Number,Dwarrowdelf,MyMath,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MyMath.cs,Round,The following statement contains a magic number: return val >= 0 ? (int)(val + 0.5) : (int)(val - 0.5);
Magic Number,Dwarrowdelf,MyMath,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MyMath.cs,QuadraticBezier,The following statement contains a magic number: var b = 2 * (1 - t) * t * x1;
Magic Number,Dwarrowdelf,MyMath,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MyMath.cs,CubicBezier,The following statement contains a magic number: var b = 3 * (1 - t) * (1 - t) * t * x1;
Magic Number,Dwarrowdelf,MyMath,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MyMath.cs,CubicBezier,The following statement contains a magic number: var c = 3 * (1 - t) * t * t * x2;
Magic Number,Dwarrowdelf,MyMath,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MyMath.cs,SmoothStep,The following statement contains a magic number: return x * x * (3 - 2 * x);
Magic Number,Dwarrowdelf,MyMath,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\MyMath.cs,SmoothStep,The following statement contains a magic number: return x * x * (3 - 2 * x);
Magic Number,Dwarrowdelf,IntGrid3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid3.cs,GetHashCode,The following statement contains a magic number: return ((this.Columns ^ this.Rows ^ this.Depth) << 16) | (this.X ^ this.Y ^ this.Z);
Magic Number,Dwarrowdelf,IntGrid3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid3.cs,Parse,The following statement contains a magic number: return new IntGrid3(Convert.ToInt32(arr[0]' info)' Convert.ToInt32(arr[1]' info)' Convert.ToInt32(arr[2]' info)'  				Convert.ToInt32(arr[3]' info)' Convert.ToInt32(arr[4]' info)' Convert.ToInt32(arr[5]' info));
Magic Number,Dwarrowdelf,IntGrid3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid3.cs,Parse,The following statement contains a magic number: return new IntGrid3(Convert.ToInt32(arr[0]' info)' Convert.ToInt32(arr[1]' info)' Convert.ToInt32(arr[2]' info)'  				Convert.ToInt32(arr[3]' info)' Convert.ToInt32(arr[4]' info)' Convert.ToInt32(arr[5]' info));
Magic Number,Dwarrowdelf,IntGrid3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid3.cs,Parse,The following statement contains a magic number: return new IntGrid3(Convert.ToInt32(arr[0]' info)' Convert.ToInt32(arr[1]' info)' Convert.ToInt32(arr[2]' info)'  				Convert.ToInt32(arr[3]' info)' Convert.ToInt32(arr[4]' info)' Convert.ToInt32(arr[5]' info));
Magic Number,Dwarrowdelf,IntGrid3,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid3.cs,Parse,The following statement contains a magic number: return new IntGrid3(Convert.ToInt32(arr[0]' info)' Convert.ToInt32(arr[1]' info)' Convert.ToInt32(arr[2]' info)'  				Convert.ToInt32(arr[3]' info)' Convert.ToInt32(arr[4]' info)' Convert.ToInt32(arr[5]' info));
Magic Number,Dwarrowdelf,DirectionExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\Direction.cs,ToDirectionSet,The following statement contains a magic number: int bit = z * 9 + y * 3 + x;
Magic Number,Dwarrowdelf,DirectionExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\Direction.cs,ToDirectionSet,The following statement contains a magic number: int bit = z * 9 + y * 3 + x;
Magic Number,Dwarrowdelf,DirectionExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\Direction.cs,ToDirections,The following statement contains a magic number: int z = i / 9 - 1;
Magic Number,Dwarrowdelf,DirectionExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\Direction.cs,ToDirections,The following statement contains a magic number: int y = (i % 9) / 3 - 1;
Magic Number,Dwarrowdelf,DirectionExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\Direction.cs,ToDirections,The following statement contains a magic number: int y = (i % 9) / 3 - 1;
Magic Number,Dwarrowdelf,DirectionExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\Direction.cs,ToDirections,The following statement contains a magic number: int x = (i % 3) - 1;
Magic Number,Dwarrowdelf,DirectionExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\Direction.cs,ToDirections,The following statement contains a magic number: i < 27
Magic Number,Dwarrowdelf,DirectionExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\Direction.cs,ToVectors,The following statement contains a magic number: int z = i / 9;
Magic Number,Dwarrowdelf,DirectionExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\Direction.cs,ToVectors,The following statement contains a magic number: int y = (i % 9) / 3;
Magic Number,Dwarrowdelf,DirectionExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\Direction.cs,ToVectors,The following statement contains a magic number: int y = (i % 9) / 3;
Magic Number,Dwarrowdelf,DirectionExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\Direction.cs,ToVectors,The following statement contains a magic number: int x = (i % 3);
Magic Number,Dwarrowdelf,DirectionExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\Direction.cs,ToVectors,The following statement contains a magic number: i < 27
Magic Number,Dwarrowdelf,DirectionExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\Direction.cs,ToSurroundingPoints,The following statement contains a magic number: int y = (i % 9) / 3;
Magic Number,Dwarrowdelf,DirectionExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\Direction.cs,ToSurroundingPoints,The following statement contains a magic number: int y = (i % 9) / 3;
Magic Number,Dwarrowdelf,DirectionExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\Direction.cs,ToSurroundingPoints,The following statement contains a magic number: int x = (i % 3);
Magic Number,Dwarrowdelf,DirectionExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\Direction.cs,ToSurroundingPoints,The following statement contains a magic number: i < 27
Magic Number,Dwarrowdelf,DirectionExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\Direction.cs,IsValid,The following statement contains a magic number: return x != 3 && y != 3 && z != 3;
Magic Number,Dwarrowdelf,DirectionExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\Direction.cs,IsValid,The following statement contains a magic number: return x != 3 && y != 3 && z != 3;
Magic Number,Dwarrowdelf,DirectionExtensions,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\Direction.cs,IsValid,The following statement contains a magic number: return x != 3 && y != 3 && z != 3;
Magic Number,Dwarrowdelf,IntGrid2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid2.cs,GetHashCode,The following statement contains a magic number: return this.X | (this.Y << 8) | (this.Columns << 16) | (this.Rows << 24);
Magic Number,Dwarrowdelf,IntGrid2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid2.cs,GetHashCode,The following statement contains a magic number: return this.X | (this.Y << 8) | (this.Columns << 16) | (this.Rows << 24);
Magic Number,Dwarrowdelf,IntGrid2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid2.cs,GetHashCode,The following statement contains a magic number: return this.X | (this.Y << 8) | (this.Columns << 16) | (this.Rows << 24);
Magic Number,Dwarrowdelf,IntGrid2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid2.cs,Parse,The following statement contains a magic number: return new IntGrid2(Convert.ToInt32(arr[0]' info)' Convert.ToInt32(arr[1]' info)' Convert.ToInt32(arr[2]' info)' Convert.ToInt32(arr[3]' info));
Magic Number,Dwarrowdelf,IntGrid2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntGrid2.cs,Parse,The following statement contains a magic number: return new IntGrid2(Convert.ToInt32(arr[0]' info)' Convert.ToInt32(arr[1]' info)' Convert.ToInt32(arr[2]' info)' Convert.ToInt32(arr[3]' info));
Magic Number,Dwarrowdelf,ObjectID,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\ObjectID.cs,ObjectID,The following statement contains a magic number: (value & ~((1 << 24) - 1)) != 0
Magic Number,Dwarrowdelf,ObjectID,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\ObjectID.cs,ObjectID,The following statement contains a magic number: m_value = ((uint)objectType << 24) | value;
Magic Number,Dwarrowdelf,ObjectID,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\ObjectID.cs,TryParse,The following statement contains a magic number: str.Length < 2
Magic Number,Dwarrowdelf,IntVector2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector2.cs,IntVector2,The following statement contains a magic number: m_value =  				((x & 0xffff) << 0) |  				((y & 0xffff) << 16);
Magic Number,Dwarrowdelf,IntVector2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector2.cs,SquareSpiral,The following statement contains a magic number: i < loop / 2 + 1
Magic Number,Dwarrowdelf,IntVector2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector2.cs,SquareSpiral,The following statement contains a magic number: v = v.FastRotate(2);
Magic Number,Dwarrowdelf,IntVector2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector2.cs,SquareSpiral,The following statement contains a magic number: loop < size * 2 - 1
Magic Number,Dwarrowdelf,IntVector2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector2.cs,DiagonalSquareSpiral,The following statement contains a magic number: v = v.FastRotate(2);
Magic Number,Dwarrowdelf,IntVector2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector2.cs,DiagonalSquareSpiral,The following statement contains a magic number: t < 4
Magic Number,Dwarrowdelf,IntVector2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector2.cs,Rotate,The following statement contains a magic number: double rad = Math.PI * angle / 180.0;
Magic Number,Dwarrowdelf,IntVector2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector2.cs,GetAllXYDirections,The following statement contains a magic number: i < 8
Magic Number,Dwarrowdelf,IntVector2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector2.cs,FastCos,The following statement contains a magic number: rot %= 8;
Magic Number,Dwarrowdelf,IntVector2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector2.cs,FastCos,The following statement contains a magic number: rot += 8;
Magic Number,Dwarrowdelf,IntVector2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector2.cs,FastCos,The following statement contains a magic number: rot == 0 || rot == 1 || rot == 7
Magic Number,Dwarrowdelf,IntVector2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector2.cs,FastCos,The following statement contains a magic number: rot == 2 || rot == 6
Magic Number,Dwarrowdelf,IntVector2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector2.cs,FastCos,The following statement contains a magic number: rot == 2 || rot == 6
Magic Number,Dwarrowdelf,IntVector2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector2.cs,FastSin,The following statement contains a magic number: rot %= 8;
Magic Number,Dwarrowdelf,IntVector2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector2.cs,FastSin,The following statement contains a magic number: rot += 8;
Magic Number,Dwarrowdelf,IntVector2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector2.cs,FastSin,The following statement contains a magic number: rot == 1 || rot == 2 || rot == 3
Magic Number,Dwarrowdelf,IntVector2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector2.cs,FastSin,The following statement contains a magic number: rot == 1 || rot == 2 || rot == 3
Magic Number,Dwarrowdelf,IntVector2,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Lib\DataTypes\IntVector2.cs,FastSin,The following statement contains a magic number: rot == 0 || rot == 4
Magic Number,Dwarrowdelf.TerrainGen,ArtificialGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\ArtificialGen.cs,CreateBallMap,The following statement contains a magic number: int r = side / 2 - 1;
Magic Number,Dwarrowdelf.TerrainGen,ArtificialGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\ArtificialGen.cs,CreateBallMap,The following statement contains a magic number: int ir = innerSide / 2 - 1;
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,CreateNoiseTerrain,The following statement contains a magic number: double xk = (random.NextDouble() * 2 - 1) * 0.01;
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,CreateNoiseTerrain,The following statement contains a magic number: double xk = (random.NextDouble() * 2 - 1) * 0.01;
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,CreateNoiseTerrain,The following statement contains a magic number: double yk = (random.NextDouble() * 2 - 1) * 0.01;
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,CreateNoiseTerrain,The following statement contains a magic number: double yk = (random.NextDouble() * 2 - 1) * 0.01;
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,CreateNoiseTerrain,The following statement contains a magic number: int soilLimit = size.Depth * 4 / 5;
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,CreateNoiseTerrain,The following statement contains a magic number: int soilLimit = size.Depth * 4 / 5;
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,CreateNoiseTerrain,The following statement contains a magic number: int grassLimit = terrain.Depth * 4 / 5;
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,CreateNoiseTerrain,The following statement contains a magic number: int grassLimit = terrain.Depth * 4 / 5;
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,FillFromNoiseMap,The following statement contains a magic number: Parallel.For(0' noiseMap.Data.Length' i =>  			{  				var v = noiseMap.Data[i];   // [-1 .. 1]    				v -= min;  				v /= (max - min);       // [0 .. 1]    				v *= terrainData.Depth * 8 / 10;  				v += terrainData.Depth * 2 / 10;    				noiseMap.Data[i] = v;  			});
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,FillFromNoiseMap,The following statement contains a magic number: Parallel.For(0' noiseMap.Data.Length' i =>  			{  				var v = noiseMap.Data[i];   // [-1 .. 1]    				v -= min;  				v /= (max - min);       // [0 .. 1]    				v *= terrainData.Depth * 8 / 10;  				v += terrainData.Depth * 2 / 10;    				noiseMap.Data[i] = v;  			});
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,FillFromNoiseMap,The following statement contains a magic number: Parallel.For(0' noiseMap.Data.Length' i =>  			{  				var v = noiseMap.Data[i];   // [-1 .. 1]    				v -= min;  				v /= (max - min);       // [0 .. 1]    				v *= terrainData.Depth * 8 / 10;  				v += terrainData.Depth * 2 / 10;    				noiseMap.Data[i] = v;  			});
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,FillFromNoiseMap,The following statement contains a magic number: Parallel.For(0' noiseMap.Data.Length' i =>  			{  				var v = noiseMap.Data[i];   // [-1 .. 1]    				v -= min;  				v /= (max - min);       // [0 .. 1]    				v *= terrainData.Depth * 8 / 10;  				v += terrainData.Depth * 2 / 10;    				noiseMap.Data[i] = v;  			});
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,CreateTerrainNoiseMap,The following statement contains a magic number: double w = size.Width / 256.0;
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,CreateTerrainNoiseMap,The following statement contains a magic number: double h = size.Height / 256.0;
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,CreateTerrainNoise,The following statement contains a magic number: var baseFlatTerrain = new Billow()  			{  				Frequency = 2'  			};
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,CreateTerrainNoise,The following statement contains a magic number: var flatTerrain = new ScaleBias()  			{  				Source0 = baseFlatTerrain'  				Scale = 0.125'  				Bias = -0.75'  			};
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,CreateTerrainNoise,The following statement contains a magic number: var flatTerrain = new ScaleBias()  			{  				Source0 = baseFlatTerrain'  				Scale = 0.125'  				Bias = -0.75'  			};
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,CreateTerrainNoise,The following statement contains a magic number: var terrainType = new Perlin()  			{  				Frequency = 0.5'  				Persistence = 0.25'  			};
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,CreateTerrainNoise,The following statement contains a magic number: var terrainType = new Perlin()  			{  				Frequency = 0.5'  				Persistence = 0.25'  			};
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,CreateTerrainNoise,The following statement contains a magic number: var terrainSelector = new Select()  			{  				Source0 = flatTerrain'  				Source1 = mountainTerrain'  				Control = terrainType'  				LowerBound = 0'  				UpperBound = 1000'  				EdgeFalloff = 0.125'  			};
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,CreateTerrainNoise,The following statement contains a magic number: var terrainSelector = new Select()  			{  				Source0 = flatTerrain'  				Source1 = mountainTerrain'  				Control = terrainType'  				LowerBound = 0'  				UpperBound = 1000'  				EdgeFalloff = 0.125'  			};
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,CreateTerrainNoise,The following statement contains a magic number: var finalTerrain = new Turbulence()  			{  				Source0 = terrainSelector'  				Frequency = 4'  				Power = 0.125'  			};
Magic Number,Dwarrowdelf.TerrainGen,NoiseTerrainGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\NoiseTerrainGen.cs,CreateTerrainNoise,The following statement contains a magic number: var finalTerrain = new Turbulence()  			{  				Source0 = terrainSelector'  				Frequency = 4'  				Power = 0.125'  			};
Magic Number,Dwarrowdelf.TerrainGen,RiverGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\RiverGen.cs,FindStartLoc,The following statement contains a magic number: z - 2 > zu
Magic Number,Dwarrowdelf.TerrainGen,RiverGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\RiverGen.cs,FindStartLoc,The following statement contains a magic number: z - 2 > zd
Magic Number,Dwarrowdelf.TerrainGen,RiverGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\RiverGen.cs,CreateRiverPath,The following statement contains a magic number: SideEdge edge = (SideEdge)((i + offset) % 4);
Magic Number,Dwarrowdelf.TerrainGen,RiverGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\RiverGen.cs,CreateRiverPath,The following statement contains a magic number: int maxNodeCount = 500000;
Magic Number,Dwarrowdelf.TerrainGen,RiverGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\RiverGen.cs,CreateRiverPath,The following statement contains a magic number: riverPath.Length < 100
Magic Number,Dwarrowdelf.TerrainGen,RiverGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\RiverGen.cs,CreateRiverPath,The following statement contains a magic number: avg < 20
Magic Number,Dwarrowdelf.TerrainGen,RiverGen,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\RiverGen.cs,CreateRiverPath,The following statement contains a magic number: i < 8
Magic Number,Dwarrowdelf.TerrainGen,MyTarget,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\RiverGen.cs,GetIsTarget,The following statement contains a magic number: return  					(m_sourceSide == SideEdge.Left && p.X > m_terrain.Width / 2) ||  					(m_sourceSide == SideEdge.Top && p.Y > m_terrain.Height / 2) ||  					(m_sourceSide == SideEdge.Right && p.X < m_terrain.Width / 2) ||  					(m_sourceSide == SideEdge.Bottom && p.Y < m_terrain.Height / 2);
Magic Number,Dwarrowdelf.TerrainGen,MyTarget,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\RiverGen.cs,GetIsTarget,The following statement contains a magic number: return  					(m_sourceSide == SideEdge.Left && p.X > m_terrain.Width / 2) ||  					(m_sourceSide == SideEdge.Top && p.Y > m_terrain.Height / 2) ||  					(m_sourceSide == SideEdge.Right && p.X < m_terrain.Width / 2) ||  					(m_sourceSide == SideEdge.Bottom && p.Y < m_terrain.Height / 2);
Magic Number,Dwarrowdelf.TerrainGen,MyTarget,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\RiverGen.cs,GetIsTarget,The following statement contains a magic number: return  					(m_sourceSide == SideEdge.Left && p.X > m_terrain.Width / 2) ||  					(m_sourceSide == SideEdge.Top && p.Y > m_terrain.Height / 2) ||  					(m_sourceSide == SideEdge.Right && p.X < m_terrain.Width / 2) ||  					(m_sourceSide == SideEdge.Bottom && p.Y < m_terrain.Height / 2);
Magic Number,Dwarrowdelf.TerrainGen,MyTarget,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\RiverGen.cs,GetIsTarget,The following statement contains a magic number: return  					(m_sourceSide == SideEdge.Left && p.X > m_terrain.Width / 2) ||  					(m_sourceSide == SideEdge.Top && p.Y > m_terrain.Height / 2) ||  					(m_sourceSide == SideEdge.Right && p.X < m_terrain.Width / 2) ||  					(m_sourceSide == SideEdge.Bottom && p.Y < m_terrain.Height / 2);
Magic Number,Dwarrowdelf.TerrainGen,MyTarget,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\RiverGen.cs,GetHeuristic,The following statement contains a magic number: return (ushort)(p.Z * 10 + r.Next(4));
Magic Number,Dwarrowdelf.TerrainGen,MyTarget,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\RiverGen.cs,GetHeuristic,The following statement contains a magic number: return (ushort)(p.Z * 10 + r.Next(4));
Magic Number,Dwarrowdelf.TerrainGen,Clamper,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\Clamper.cs,Clamp,The following statement contains a magic number: grid.ForEach(v =>  			{  				if (v < average)  				{  					double d = average - v;  					v = average - Math.Pow(d' 1.0 / 20);  				}    				return v;  			});
Magic Number,Dwarrowdelf.TerrainGen,DungeonTerrainGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DungeonTerrainGenerator.cs,CreateStairs,The following statement contains a magic number: var p2 = new IntVector3(p' z - 2);
Magic Number,Dwarrowdelf.TerrainGen,DungeonTerrainGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DungeonTerrainGenerator.cs,CreateDungeonLevel,The following statement contains a magic number: var xm = GetRandomDouble(0.2' 0.5);
Magic Number,Dwarrowdelf.TerrainGen,DungeonTerrainGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DungeonTerrainGenerator.cs,CreateDungeonLevel,The following statement contains a magic number: var xm = GetRandomDouble(0.2' 0.5);
Magic Number,Dwarrowdelf.TerrainGen,DungeonTerrainGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DungeonTerrainGenerator.cs,CreateDungeonLevel,The following statement contains a magic number: var ym = GetRandomDouble(0.2' 0.5);
Magic Number,Dwarrowdelf.TerrainGen,DungeonTerrainGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DungeonTerrainGenerator.cs,CreateDungeonLevel,The following statement contains a magic number: var ym = GetRandomDouble(0.2' 0.5);
Magic Number,Dwarrowdelf.TerrainGen,DungeonTerrainGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DungeonTerrainGenerator.cs,CreateCorridor,The following statement contains a magic number: int middle = from.Y + (to.Y - from.Y) / 2;
Magic Number,Dwarrowdelf.TerrainGen,DungeonTerrainGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DungeonTerrainGenerator.cs,CreateNodes,The following statement contains a magic number: grid.Columns <= 4 && grid.Rows <= 4
Magic Number,Dwarrowdelf.TerrainGen,DungeonTerrainGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DungeonTerrainGenerator.cs,CreateNodes,The following statement contains a magic number: grid.Columns <= 4 && grid.Rows <= 4
Magic Number,Dwarrowdelf.TerrainGen,DungeonTerrainGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DungeonTerrainGenerator.cs,CreateNodes,The following statement contains a magic number: double m = GetRandomDouble(0.4' 0.6);
Magic Number,Dwarrowdelf.TerrainGen,DungeonTerrainGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DungeonTerrainGenerator.cs,CreateNodes,The following statement contains a magic number: double m = GetRandomDouble(0.4' 0.6);
Magic Number,Dwarrowdelf.TerrainGen,BSPTree,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DungeonTerrainGenerator.cs,GetLeft,The following statement contains a magic number: return 2 * i + 1;
Magic Number,Dwarrowdelf.TerrainGen,BSPTree,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DungeonTerrainGenerator.cs,GetRight,The following statement contains a magic number: return 2 * i + 2;
Magic Number,Dwarrowdelf.TerrainGen,BSPTree,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DungeonTerrainGenerator.cs,GetRight,The following statement contains a magic number: return 2 * i + 2;
Magic Number,Dwarrowdelf.TerrainGen,BSPTree,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DungeonTerrainGenerator.cs,GetParent,The following statement contains a magic number: return (i - 1) / 2;
Magic Number,Dwarrowdelf.TerrainGen,DiamondSquare,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DiamondSquare.cs,GetRandom,The following statement contains a magic number: return ctx.Random.NextDouble() * range * 2 - range;
Magic Number,Dwarrowdelf.TerrainGen,DiamondSquare,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DiamondSquare.cs,HeightMap,The following statement contains a magic number: int half = size / 2;
Magic Number,Dwarrowdelf.TerrainGen,DiamondSquare,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DiamondSquare.cs,HeightMap,The following statement contains a magic number: ctx.Range *= Math.Pow(2' -ctx.H);
Magic Number,Dwarrowdelf.TerrainGen,DiamondSquare,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DiamondSquare.cs,Rectangle,The following statement contains a magic number: var avg = (v1 + v2 + v3 + v4) / 4;
Magic Number,Dwarrowdelf.TerrainGen,DiamondSquare,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\DiamondSquare.cs,Diamond,The following statement contains a magic number: var avg = (v1 + v2 + v3 + v4) / 4;
Magic Number,Dwarrowdelf.TerrainGen,TerrainData,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainData.cs,SetTileData,The following statement contains a magic number: Debug.Assert(p.Z >= 0 && p.Z < 256);
Magic Number,Dwarrowdelf.TerrainGen,TerrainData,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainData.cs,CopyTo,The following statement contains a magic number: var arr = new byte[4096 * 8];
Magic Number,Dwarrowdelf.TerrainGen,TerrainData,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainData.cs,CopyTo,The following statement contains a magic number: var arr = new byte[4096 * 8];
Magic Number,Dwarrowdelf.TerrainGen,TerrainGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainGenerator.cs,Generate,The following statement contains a magic number: double xk = (random.NextDouble() * 2 - 1) * 0.01;
Magic Number,Dwarrowdelf.TerrainGen,TerrainGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainGenerator.cs,Generate,The following statement contains a magic number: double xk = (random.NextDouble() * 2 - 1) * 0.01;
Magic Number,Dwarrowdelf.TerrainGen,TerrainGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainGenerator.cs,Generate,The following statement contains a magic number: double yk = (random.NextDouble() * 2 - 1) * 0.01;
Magic Number,Dwarrowdelf.TerrainGen,TerrainGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainGenerator.cs,Generate,The following statement contains a magic number: double yk = (random.NextDouble() * 2 - 1) * 0.01;
Magic Number,Dwarrowdelf.TerrainGen,TerrainGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainGenerator.cs,Generate,The following statement contains a magic number: m_data.Width > 128
Magic Number,Dwarrowdelf.TerrainGen,TerrainGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainGenerator.cs,Generate,The following statement contains a magic number: int soilLimit = m_size.Depth * 4 / 5;
Magic Number,Dwarrowdelf.TerrainGen,TerrainGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainGenerator.cs,Generate,The following statement contains a magic number: int soilLimit = m_size.Depth * 4 / 5;
Magic Number,Dwarrowdelf.TerrainGen,TerrainGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainGenerator.cs,GenerateHeightMap,The following statement contains a magic number: Parallel.For(0' m_size.Height' y =>  				{  					double d = max - min;    					for (int x = 0; x < m_size.Width; ++x)  					{  						var v = heightMap[x' y];    						// normalize to 0.0 - 1.0  						v = (v - min) / d;    						// amplify  						v = Math.Pow(v' amplify);    						// adjust  						v *= m_size.Depth / 2;  						v += m_size.Depth / 2 - 1;    						m_data.SetSurfaceLevel(x' y' MyMath.Round(v));  					}  				});
Magic Number,Dwarrowdelf.TerrainGen,TerrainGenerator,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainGenerator.cs,GenerateHeightMap,The following statement contains a magic number: Parallel.For(0' m_size.Height' y =>  				{  					double d = max - min;    					for (int x = 0; x < m_size.Width; ++x)  					{  						var v = heightMap[x' y];    						// normalize to 0.0 - 1.0  						v = (v - min) / d;    						// amplify  						v = Math.Pow(v' amplify);    						// adjust  						v *= m_size.Depth / 2;  						v += m_size.Depth / 2 - 1;    						m_data.SetSurfaceLevel(x' y' MyMath.Round(v));  					}  				});
Magic Number,Dwarrowdelf.TerrainGen,TerrainHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainHelpers.cs,CreateBaseMinerals,The following statement contains a magic number: var layers = new MaterialID[20];
Magic Number,Dwarrowdelf.TerrainGen,TerrainHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainHelpers.cs,CreateBaseMinerals,The following statement contains a magic number: rep = random.Next(4) + 1;
Magic Number,Dwarrowdelf.TerrainGen,TerrainHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainHelpers.cs,CreateOreVeins,The following statement contains a magic number: int len = random.Next(20) + 3;
Magic Number,Dwarrowdelf.TerrainGen,TerrainHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainHelpers.cs,CreateOreVeins,The following statement contains a magic number: int len = random.Next(20) + 3;
Magic Number,Dwarrowdelf.TerrainGen,TerrainHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainHelpers.cs,CreateOreVeins,The following statement contains a magic number: int thickness = random.Next(4) + 1;
Magic Number,Dwarrowdelf.TerrainGen,TerrainHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainHelpers.cs,CreateOreVeins,The following statement contains a magic number: var vx = random.NextDouble() * 2 - 1;
Magic Number,Dwarrowdelf.TerrainGen,TerrainHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainHelpers.cs,CreateOreVeins,The following statement contains a magic number: var vy = random.NextDouble() * 2 - 1;
Magic Number,Dwarrowdelf.TerrainGen,TerrainHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainHelpers.cs,CreateOreVeins,The following statement contains a magic number: CreateOreSphere(terrain' random' p' thickness' mat' random.NextDouble() * 0.75' 0);
Magic Number,Dwarrowdelf.TerrainGen,TerrainHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainHelpers.cs,CreateOreVeins,The following statement contains a magic number: i < 100
Magic Number,Dwarrowdelf.TerrainGen,TerrainHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainHelpers.cs,CreateOreSphere,The following statement contains a magic number: var bb = new IntGrid3(center.X - r' center.Y - r' center.Z - r' r * 2 + 1' r * 2 + 1' r * 2 + 1);
Magic Number,Dwarrowdelf.TerrainGen,TerrainHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainHelpers.cs,CreateOreSphere,The following statement contains a magic number: var bb = new IntGrid3(center.X - r' center.Y - r' center.Z - r' r * 2 + 1' r * 2 + 1' r * 2 + 1);
Magic Number,Dwarrowdelf.TerrainGen,TerrainHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainHelpers.cs,CreateOreSphere,The following statement contains a magic number: var bb = new IntGrid3(center.X - r' center.Y - r' center.Z - r' r * 2 + 1' r * 2 + 1' r * 2 + 1);
Magic Number,Dwarrowdelf.TerrainGen,TerrainHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainHelpers.cs,CreateOreClusters,The following statement contains a magic number: i < 100
Magic Number,Dwarrowdelf.TerrainGen,TerrainHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainHelpers.cs,CreateOreCluster,The following statement contains a magic number: CreateOreCluster(terrain' p' oreMaterialID' random.Next(6) + 1);
Magic Number,Dwarrowdelf.TerrainGen,TerrainHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainHelpers.cs,CreateVegetation,The following statement contains a magic number: terrain.Size.Plane.Range().AsParallel().ForAll(p2d =>  			{  				int z = terrain.GetSurfaceLevel(p2d);    				var p = new IntVector3(p2d' z);    				if (z >= vegetationLimit)  					return;    				var td = terrain.GetTileData(p);    				if (td.WaterLevel > 0)  					return;    				if (terrain.GetMaterial(p.Down).Category != MaterialCategory.Soil)  					return;    				var r = new MWCRandom(p' baseSeed);    				int v = r.Next(100);    				if (v >= 95)  				{  					td.ID = TileID.Sapling;  					td.MaterialID = woodMaterials[r.Next(woodMaterials.Length)].ID;  				}  				else if (v >= 90)  				{  					td.ID = TileID.Tree;  					td.MaterialID = woodMaterials[r.Next(woodMaterials.Length)].ID;  				}  				else if (v >= 80)  				{  					td.ID = TileID.Shrub;  					td.MaterialID = berryMaterials[r.Next(berryMaterials.Length)].ID;  				}  				else  				{  					td.ID = TileID.Grass;  					td.MaterialID = grassMaterials[r.Next(grassMaterials.Length)].ID;  				}    				terrain.SetTileDataNoHeight(p' td);  			});
Magic Number,Dwarrowdelf.TerrainGen,TerrainHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainHelpers.cs,CreateVegetation,The following statement contains a magic number: terrain.Size.Plane.Range().AsParallel().ForAll(p2d =>  			{  				int z = terrain.GetSurfaceLevel(p2d);    				var p = new IntVector3(p2d' z);    				if (z >= vegetationLimit)  					return;    				var td = terrain.GetTileData(p);    				if (td.WaterLevel > 0)  					return;    				if (terrain.GetMaterial(p.Down).Category != MaterialCategory.Soil)  					return;    				var r = new MWCRandom(p' baseSeed);    				int v = r.Next(100);    				if (v >= 95)  				{  					td.ID = TileID.Sapling;  					td.MaterialID = woodMaterials[r.Next(woodMaterials.Length)].ID;  				}  				else if (v >= 90)  				{  					td.ID = TileID.Tree;  					td.MaterialID = woodMaterials[r.Next(woodMaterials.Length)].ID;  				}  				else if (v >= 80)  				{  					td.ID = TileID.Shrub;  					td.MaterialID = berryMaterials[r.Next(berryMaterials.Length)].ID;  				}  				else  				{  					td.ID = TileID.Grass;  					td.MaterialID = grassMaterials[r.Next(grassMaterials.Length)].ID;  				}    				terrain.SetTileDataNoHeight(p' td);  			});
Magic Number,Dwarrowdelf.TerrainGen,TerrainHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainHelpers.cs,CreateVegetation,The following statement contains a magic number: terrain.Size.Plane.Range().AsParallel().ForAll(p2d =>  			{  				int z = terrain.GetSurfaceLevel(p2d);    				var p = new IntVector3(p2d' z);    				if (z >= vegetationLimit)  					return;    				var td = terrain.GetTileData(p);    				if (td.WaterLevel > 0)  					return;    				if (terrain.GetMaterial(p.Down).Category != MaterialCategory.Soil)  					return;    				var r = new MWCRandom(p' baseSeed);    				int v = r.Next(100);    				if (v >= 95)  				{  					td.ID = TileID.Sapling;  					td.MaterialID = woodMaterials[r.Next(woodMaterials.Length)].ID;  				}  				else if (v >= 90)  				{  					td.ID = TileID.Tree;  					td.MaterialID = woodMaterials[r.Next(woodMaterials.Length)].ID;  				}  				else if (v >= 80)  				{  					td.ID = TileID.Shrub;  					td.MaterialID = berryMaterials[r.Next(berryMaterials.Length)].ID;  				}  				else  				{  					td.ID = TileID.Grass;  					td.MaterialID = grassMaterials[r.Next(grassMaterials.Length)].ID;  				}    				terrain.SetTileDataNoHeight(p' td);  			});
Magic Number,Dwarrowdelf.TerrainGen,TerrainHelpers,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\TerrainGen\TerrainHelpers.cs,CreateVegetation,The following statement contains a magic number: terrain.Size.Plane.Range().AsParallel().ForAll(p2d =>  			{  				int z = terrain.GetSurfaceLevel(p2d);    				var p = new IntVector3(p2d' z);    				if (z >= vegetationLimit)  					return;    				var td = terrain.GetTileData(p);    				if (td.WaterLevel > 0)  					return;    				if (terrain.GetMaterial(p.Down).Category != MaterialCategory.Soil)  					return;    				var r = new MWCRandom(p' baseSeed);    				int v = r.Next(100);    				if (v >= 95)  				{  					td.ID = TileID.Sapling;  					td.MaterialID = woodMaterials[r.Next(woodMaterials.Length)].ID;  				}  				else if (v >= 90)  				{  					td.ID = TileID.Tree;  					td.MaterialID = woodMaterials[r.Next(woodMaterials.Length)].ID;  				}  				else if (v >= 80)  				{  					td.ID = TileID.Shrub;  					td.MaterialID = berryMaterials[r.Next(berryMaterials.Length)].ID;  				}  				else  				{  					td.ID = TileID.Grass;  					td.MaterialID = grassMaterials[r.Next(grassMaterials.Length)].ID;  				}    				terrain.SetTileDataNoHeight(p' td);  			});
Magic Number,Dwarrowdelf.Jobs.AssignmentGroups,MoveConsumeAssignment,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\AssignmentGroups\MoveConsumeAssignment.cs,OnAssignmentDone,The following statement contains a magic number: m_state == 2
Magic Number,Dwarrowdelf.Jobs.AssignmentGroups,MoveConsumeAssignment,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\AssignmentGroups\MoveConsumeAssignment.cs,PrepareNextAssignment,The following statement contains a magic number: switch (m_state)  			{  				case 0:  					assignment = new MoveAssignment(this' this.Item.Environment' this.Item.Location' DirectionSet.Exact);  					break;    				case 1:  					assignment = new GetItemAssignment(this' this.Item);  					break;    				case 2:  					assignment = new ConsumeItemAssignment(this' this.Item);  					break;    				default:  					throw new Exception();  			}
Magic Number,Dwarrowdelf.Jobs.Assignments,FleeMoveAssignment,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\Assignments\FleeMoveAssignment.cs,DoMove,The following statement contains a magic number: var v = ov.FastRotate(((i + 1) >> 1) * (((i % 2) << 1) - 1));
Magic Number,Dwarrowdelf.Jobs.Assignments,FleeMoveAssignment,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\Assignments\FleeMoveAssignment.cs,DoMove,The following statement contains a magic number: i < 7
Magic Number,Dwarrowdelf.Jobs.Assignments,GrazeMoveAssignment,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\Assignments\GrazeMoveAssignment.cs,PrepareNextActionOverrideHerdless,The following statement contains a magic number: int i = this.Worker.World.Random.Next(8);
Magic Number,Dwarrowdelf.Jobs.Assignments,GrazeMoveAssignment,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\Assignments\GrazeMoveAssignment.cs,PrepareNextActionOverrideHerd,The following statement contains a magic number: return new WaitAction(r.Next(4) + 1);
Magic Number,Dwarrowdelf.Jobs.Assignments,GrazeMoveAssignment,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\Assignments\GrazeMoveAssignment.cs,PrepareNextActionOverrideHerd,The following statement contains a magic number: l < moveStrength && r.Next(4) < 2
Magic Number,Dwarrowdelf.Jobs.Assignments,GrazeMoveAssignment,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\Assignments\GrazeMoveAssignment.cs,PrepareNextActionOverrideHerd,The following statement contains a magic number: l < moveStrength && r.Next(4) < 2
Magic Number,Dwarrowdelf.Jobs.Assignments,GrazeMoveAssignment,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\Assignments\GrazeMoveAssignment.cs,PrepareNextActionOverrideHerd,The following statement contains a magic number: return new WaitAction(r.Next(4) + 1);
Magic Number,Dwarrowdelf.Jobs.Assignments,MoveAssignmentBase,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\Assignments\MoveAssignmentBase.cs,ActionDoneOverride,The following statement contains a magic number: switch (actionStatus)  			{  				case ActionState.Done:  					return CheckProgress(this.Worker);    				case ActionState.Fail:  					m_numFails++;  					if (m_numFails > 10)  						return JobStatus.Abort;    					var res = PreparePath(this.Worker);  					return res;    				case ActionState.Abort:  					return JobStatus.Abort;    				default:  					throw new Exception();  			}
Magic Number,Dwarrowdelf.Jobs.Assignments,RandomMoveAssignment,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\Assignments\RandomMoveAssignment.cs,AssignOverride,The following statement contains a magic number: int i = worker.World.Random.Next(8);
Magic Number,Dwarrowdelf.Jobs.Assignments,RandomMoveAssignment,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\Assignments\RandomMoveAssignment.cs,PrepareNextActionOverride,The following statement contains a magic number: int rand = random.Next(100);
Magic Number,Dwarrowdelf.Jobs.Assignments,RandomMoveAssignment,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\Assignments\RandomMoveAssignment.cs,PrepareNextActionOverride,The following statement contains a magic number: rand < 25
Magic Number,Dwarrowdelf.Jobs.Assignments,RandomMoveAssignment,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\Assignments\RandomMoveAssignment.cs,PrepareNextActionOverride,The following statement contains a magic number: action = new WaitAction(random.Next(4) + 1);
Magic Number,Dwarrowdelf.Jobs.JobGroups,FellTreeParallelJob,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\JobGroups\FellTreeParallelJob.cs,AddNewJobs,The following statement contains a magic number: m_locs = m_area.Range().Where(p => !m_jobs.Any(i => i.Item1 == p) && m_environment.GetTileData(p).HasFellableTree).Take(3 - c);
Missing Default,Dwarrowdelf.Jobs.AssignmentGroups,AssignmentGroup,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\AssignmentGroups\AssignmentGroup.cs,PrepareNextAction,The following switch statement is missing a default case: switch (status)  					{  						case JobStatus.Ok:  							Debug.Assert(this.CurrentAction != null);  							return JobStatus.Ok;    						case JobStatus.Done:  							continue;    						case JobStatus.Abort:  						case JobStatus.Fail:  							Debug.Assert(this.CurrentAction == null);  							continue;  					}
Missing Default,Dwarrowdelf.Jobs.AssignmentGroups,AssignmentGroup,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\AssignmentGroups\AssignmentGroup.cs,OnObservableJobStatusChanged,The following switch statement is missing a default case: switch (status)  			{  				case JobStatus.Ok:  					throw new Exception();    				case JobStatus.Abort:  					OnAssignmentAborted();  					break;    				case JobStatus.Fail:  					OnAssignmentFailed();  					break;    				case JobStatus.Done:  					OnAssignmentDone();  					break;  			}
Missing Default,Dwarrowdelf.Jobs.JobGroups,JobGroup,D:\research\architectureSmells\repos1\tomba_dwarrowdelf\Common\Game\Jobs\JobGroups\JobGroup.cs,OnObservableJobStatusChanged,The following switch statement is missing a default case: switch (status)  			{  				case JobStatus.Ok:  					throw new Exception();    				case JobStatus.Abort:  					OnSubJobAborted(job);  					break;    				case JobStatus.Fail:  					OnSubJobFailed(job);  					break;    				case JobStatus.Done:  					OnSubJobDone(job);  					break;  			}
