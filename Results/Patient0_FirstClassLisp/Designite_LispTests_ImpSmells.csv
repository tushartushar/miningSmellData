Implementation smell,Namespace,Class,File,Method,Description
Long Statement,LispTests.Lexing,ScannerTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Parsing\Lexing\ScannerTest.cs,testQuasiQuote,The length of the statement  "            test("`('3 '@(4 5))"' quasiquote' open' unquote' integer("3")' sp' splicing' open' integer("4")' sp' integer("5")' close' close);" is 129.
Long Statement,LispTests.Parsing,ParserTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Parsing\ParserTest.cs,testFullStaticMethod,The length of the statement  "            test("System.Console/WriteLine"' compound(slash' compound(dot' symbol("System")' symbol("Console"))' symbol("WriteLine")));" is 123.
Magic Number,LispTests.Datums,DatumTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Datums\DatumTest.cs,testPairToString,The following statement contains a magic number: var p = cons(atom(5)' atom(6));
Magic Number,LispTests.Datums,DatumTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Datums\DatumTest.cs,testPairToString,The following statement contains a magic number: var p = cons(atom(5)' atom(6));
Magic Number,LispTests.Datums,DatumTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Datums\DatumTest.cs,testListToString,The following statement contains a magic number: var l = atomList(5' 6);
Magic Number,LispTests.Datums,DatumTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Datums\DatumTest.cs,testListToString,The following statement contains a magic number: var l = atomList(5' 6);
Magic Number,LispTests.Datums,DatumTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Datums\DatumTest.cs,testLongerListToString,The following statement contains a magic number: var l = atomList(5' 6' 7);
Magic Number,LispTests.Datums,DatumTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Datums\DatumTest.cs,testLongerListToString,The following statement contains a magic number: var l = atomList(5' 6' 7);
Magic Number,LispTests.Datums,DatumTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Datums\DatumTest.cs,testLongerListToString,The following statement contains a magic number: var l = atomList(5' 6' 7);
Magic Number,LispTests.Datums,DatumTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Datums\DatumTest.cs,testImproperListToString,The following statement contains a magic number: check("(5 6 . 7)"' cons(atom(5)' cons(atom(6)' atom(7))));
Magic Number,LispTests.Datums,DatumTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Datums\DatumTest.cs,testImproperListToString,The following statement contains a magic number: check("(5 6 . 7)"' cons(atom(5)' cons(atom(6)' atom(7))));
Magic Number,LispTests.Datums,DatumTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Datums\DatumTest.cs,testImproperListToString,The following statement contains a magic number: check("(5 6 . 7)"' cons(atom(5)' cons(atom(6)' atom(7))));
Magic Number,LispTests.Datums,DatumTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Datums\DatumTest.cs,testQuoteToString,The following statement contains a magic number: check("'5"' compound(quote' atom(5)));
Magic Number,LispTests.Datums,DatumTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Datums\DatumTest.cs,testQuotedListToString,The following statement contains a magic number: check("'(1 2 3)"' compound(quote' atomList(1' 2' 3)));
Magic Number,LispTests.Datums,DatumTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Datums\DatumTest.cs,testQuotedListToString,The following statement contains a magic number: check("'(1 2 3)"' compound(quote' atomList(1' 2' 3)));
Magic Number,LispTests.Datums,DatumTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Datums\DatumTest.cs,testUnquoteToString,The following statement contains a magic number: check("'3"' compound(unquote' atom(3)));
Magic Number,LispTests.Datums,DatumTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Datums\DatumTest.cs,testQuasiQuoteToString,The following statement contains a magic number: check("`3"' compound(quasiquote' atom(3)));
Magic Number,LispTests.Datums,DatumTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Datums\DatumTest.cs,testSplicingToString,The following statement contains a magic number: check("'@3"' compound(unquoteSplicing' atom(3)));
Magic Number,LispTests.Datums,DatumTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Datums\DatumTest.cs,testDatumEnumerate,The following statement contains a magic number: Assert.AreEqual(2' l.Count());
Magic Number,LispTests.Evaluation,EvaluatorTests,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Evaluation\EvaluatorTests.cs,datumToTestCase,The following statement contains a magic number: combo.Length < 3
Magic Number,LispTests.Evaluation,EvaluatorTests,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Evaluation\EvaluatorTests.cs,datumToTestCase,The following statement contains a magic number: var expression = combo[2];
Magic Number,LispTests.Parsing,ParserTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Parsing\ParserTest.cs,testIntegerAtom,The following statement contains a magic number: test("55"' atom(55));
Magic Number,LispTests.Parsing,ParserTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Parsing\ParserTest.cs,testQuoteConsAsList,The following statement contains a magic number: test("'3"' compound(quote' atom(3)));
Magic Number,LispTests.Parsing,ParserTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Parsing\ParserTest.cs,testListQuote,The following statement contains a magic number: test("'(3 4)"' compound(quote' atomList(3' 4)));
Magic Number,LispTests.Parsing,ParserTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Parsing\ParserTest.cs,testListQuote,The following statement contains a magic number: test("'(3 4)"' compound(quote' atomList(3' 4)));
Magic Number,LispTests.Parsing,ParserTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Parsing\ParserTest.cs,testQuasiQuote,The following statement contains a magic number: test("`(3 4)"' compound(quasiquote' atomList(3' 4)));
Magic Number,LispTests.Parsing,ParserTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Parsing\ParserTest.cs,testQuasiQuote,The following statement contains a magic number: test("`(3 4)"' compound(quasiquote' atomList(3' 4)));
Magic Number,LispTests.Parsing,ParserTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Parsing\ParserTest.cs,testQuasiQuoteCombination,The following statement contains a magic number: var unquote3 = compound(unquote' atom(3));
Magic Number,LispTests.Parsing,ParserTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Parsing\ParserTest.cs,testQuasiQuoteCombination,The following statement contains a magic number: var unquote4 = compound(unquoteSplicing' atomList(4));
Magic Number,LispTests.Parsing,ParserTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Parsing\ParserTest.cs,testVector,The following statement contains a magic number: test("#(1 (4) 3)"' vector(atom(1)' atomList(4)' atom(3)));
Magic Number,LispTests.Parsing,ParserTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Parsing\ParserTest.cs,testVector,The following statement contains a magic number: test("#(1 (4) 3)"' vector(atom(1)' atomList(4)' atom(3)));
Magic Number,LispTests.Parsing,ParserTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Parsing\ParserTest.cs,testPositiveNegativeInteger,The following statement contains a magic number: test("+55"' atom(55));
Magic Number,LispTests.Parsing,ParserTest,C:\research\architectureSmells\repos\Patient0_FirstClassLisp\Lisp\LispTests\Parsing\ParserTest.cs,testPositiveNegativeInteger,The following statement contains a magic number: test("-55"' atom(-55));
