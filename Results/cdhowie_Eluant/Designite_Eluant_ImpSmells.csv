Implementation smell,Namespace,Class,File,Method,Description
Long Method,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,MakeManagedCall,The method has 187 lines of code.
Complex Method,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,Wrap,Cyclomatic complexity of the method is 10
Complex Method,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,Call,Cyclomatic complexity of the method is 8
Complex Method,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,MakeManagedCall,Cyclomatic complexity of the method is 28
Long Identifier,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,,The length of the parameter methodWrapperCallCallbackWrapper is 32.
Long Statement,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,Initialize,The length of the statement  "            metamethodCallbacks["__add"] = CreateCallbackWrapper(state => BinaryOperatorCallback<ILuaAdditionBinding>(state' (i' a' b) => i.Add(this' a' b))); " is 146.
Long Statement,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,Initialize,The length of the statement  "            metamethodCallbacks["__sub"] = CreateCallbackWrapper(state => BinaryOperatorCallback<ILuaSubtractionBinding>(state' (i' a' b) => i.Subtract(this' a' b))); " is 154.
Long Statement,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,Initialize,The length of the statement  "            metamethodCallbacks["__mul"] = CreateCallbackWrapper(state => BinaryOperatorCallback<ILuaMultiplicationBinding>(state' (i' a' b) => i.Multiply(this' a' b))); " is 157.
Long Statement,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,Initialize,The length of the statement  "            metamethodCallbacks["__div"] = CreateCallbackWrapper(state => BinaryOperatorCallback<ILuaDivisionBinding>(state' (i' a' b) => i.Divide(this' a' b))); " is 149.
Long Statement,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,Initialize,The length of the statement  "            metamethodCallbacks["__mod"] = CreateCallbackWrapper(state => BinaryOperatorCallback<ILuaModuloBinding>(state' (i' a' b) => i.Modulo(this' a' b))); " is 147.
Long Statement,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,Initialize,The length of the statement  "            metamethodCallbacks["__pow"] = CreateCallbackWrapper(state => BinaryOperatorCallback<ILuaExponentiationBinding>(state' (i' a' b) => i.Power(this' a' b))); " is 154.
Long Statement,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,Initialize,The length of the statement  "            metamethodCallbacks["__unm"] = CreateCallbackWrapper(state => UnaryOperatorCallback<ILuaUnaryMinusBinding>(state' i => i.Minus(this))); " is 135.
Long Statement,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,Initialize,The length of the statement  "            metamethodCallbacks["__concat"] = CreateCallbackWrapper(state => BinaryOperatorCallback<ILuaConcatenationBinding>(state' (i' a' b) => i.Concatenate(this' a' b))); " is 162.
Long Statement,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,Initialize,The length of the statement  "            metamethodCallbacks["__len"] = CreateCallbackWrapper(state => UnaryOperatorCallback<ILuaLengthBinding>(state' i => i.GetLength(this))); " is 135.
Long Statement,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,Initialize,The length of the statement  "            metamethodCallbacks["__eq"] = CreateCallbackWrapper(state => BinaryOperatorCallback<ILuaEqualityBinding>(state' (i' a' b) => i.Equals(this' a' b))); " is 148.
Long Statement,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,Initialize,The length of the statement  "            metamethodCallbacks["__lt"] = CreateCallbackWrapper(state => BinaryOperatorCallback<ILuaLessThanBinding>(state' (i' a' b) => i.LessThan(this' a' b))); " is 150.
Long Statement,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,Initialize,The length of the statement  "            metamethodCallbacks["__le"] = CreateCallbackWrapper(state => BinaryOperatorCallback<ILuaLessThanOrEqualToBinding>(state' (i' a' b) => i.LessThanOrEqualTo(this' a' b))); " is 168.
Long Statement,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,GetClrObject,The length of the statement  "                throw new InvalidOperationException("Attempt to obtain CLR object from a Lua object that does not represent a CLR object."); " is 124.
Long Statement,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,GetClrObject,The length of the statement  "                throw new InvalidOperationException(string.Format("CLR object of type {0} was found' but CLR object of incompatible type {1} was expected."' " is 140.
Long Statement,Eluant,Scripts,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\Scripts.cs,GetResource,The length of the statement  "            using (var s = new StreamReader(Assembly.GetExecutingAssembly().GetManifestResourceStream("Eluant." + file)' Encoding.UTF8)) { " is 126.
Long Statement,Eluant.ObjectBinding,BasicLuaBinder,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\ObjectBinding\BasicLuaBinder.cs,GetMembersByName,The length of the statement  "                foreach (var memberNameAttr in member.GetCustomAttributes(typeof(LuaMemberAttribute)' true).Cast<LuaMemberAttribute>()) { " is 121.
Virtual Method Call from Constructor,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,LuaRuntime,The constructor "LuaRuntime" calls a virtual method "CreateAllocatorDelegate".
Empty Catch Block,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,ClrObjectGcCallback,The method has an empty catch block.
Empty Catch Block,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,AsLuaValue,The method has an empty catch block.
Empty Catch Block,Eluant,LuaNumber,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaNumber.cs,ToClrType,The method has an empty catch block.
Empty Catch Block,Eluant,LuaClrObjectReference,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaClrObjectReference.cs,ToClrType,The method has an empty catch block.
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,Initialize,The following statement contains a magic number: LuaApi.lua_settable(LuaState' -3);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,Initialize,The following statement contains a magic number: LuaApi.lua_settable(LuaState' -3);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,Initialize,The following statement contains a magic number: LuaApi.lua_settable(LuaState' -3);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,Initialize,The following statement contains a magic number: LuaApi.lua_settable(LuaState' -3);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,RewriteReferenceTable,The following statement contains a magic number: LuaApi.lua_pushvalue(LuaState' -2);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,RewriteReferenceTable,The following statement contains a magic number: LuaApi.lua_insert(LuaState' LuaApi.abs_index(LuaState' -2));
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,RewriteReferenceTable,The following statement contains a magic number: LuaApi.lua_settable(LuaState' -4);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,RewriteReferenceTable,The following statement contains a magic number: LuaApi.lua_next(LuaState' -3) != 0
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,GetNextReference,The following statement contains a magic number: ++referenceSeq == 100
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,CreateReference,The following statement contains a magic number: LuaApi.lua_rawseti(LuaState' -2' reference);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,DestroyReference,The following statement contains a magic number: LuaApi.lua_rawseti(LuaState' -2' reference);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,DestroyReference,The following statement contains a magic number: ++destroySeq == 1000
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,PushReference,The following statement contains a magic number: LuaApi.lua_remove(LuaState' LuaApi.abs_index(LuaState' -2));
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,HasMetatable,The following statement contains a magic number: return LuaApi.lua_rawequal(LuaState' -1' -2) != 0;
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,IsClrObject,The following statement contains a magic number: LuaApi.lua_gettable(LuaState' -2);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,IsClrObject,The following statement contains a magic number: LuaApi.lua_pop(LuaState' 2);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,PushCFunction,The following statement contains a magic number: LuaApi.lua_pushcclosure(LuaState' cFunctionCallback' 2);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,CFunctionCallback,The following statement contains a magic number: fn = (LuaApi.lua_CFunction)runtime.TryGetClrObject<LuaOpaqueClrObject>(LuaApi.lua_upvalueindex(2)).ClrObject;
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,PushOpaqueClrObject,The following statement contains a magic number: LuaApi.lua_setmetatable(LuaState' -2);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,PushCustomClrObject,The following statement contains a magic number: LuaApi.lua_settable(LuaState' -3);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,PushCustomClrObject,The following statement contains a magic number: LuaApi.lua_settable(LuaState' -3);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,PushCustomClrObject,The following statement contains a magic number: LuaApi.lua_settable(LuaState' -3);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,PushCustomClrObject,The following statement contains a magic number: LuaApi.lua_settable(LuaState' -3);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,PushCustomClrObject,The following statement contains a magic number: LuaApi.lua_setmetatable(LuaState' -2);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,NewindexCallback,The following statement contains a magic number: return LuaToClrBoundary(state' toDispose => {                  // Arguments: Userdata (CLR object)' key (property)' value                  var obj = GetClrObject<LuaClrObjectValue>(1).BackingCustomObject as ILuaTableBinding;                    if (obj == null) {                      throw new LuaException("CLR object does not support indexing.");                  }                    var key = Wrap(2);                  toDispose.Add(key);                    var value = Wrap(3);                  toDispose.Add(value);                    obj[this' key] = value;                    return 0;              });
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,NewindexCallback,The following statement contains a magic number: return LuaToClrBoundary(state' toDispose => {                  // Arguments: Userdata (CLR object)' key (property)' value                  var obj = GetClrObject<LuaClrObjectValue>(1).BackingCustomObject as ILuaTableBinding;                    if (obj == null) {                      throw new LuaException("CLR object does not support indexing.");                  }                    var key = Wrap(2);                  toDispose.Add(key);                    var value = Wrap(3);                  toDispose.Add(value);                    obj[this' key] = value;                    return 0;              });
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,IndexCallback,The following statement contains a magic number: return LuaToClrBoundary(state' toDispose => {                  // Arguments: Userdata (CLR object)' key (property)                  var obj = GetClrObject<LuaClrObjectValue>(1).BackingCustomObject as ILuaTableBinding;                    if (obj == null) {                      throw new LuaException("CLR object does not support indexing.");                  }                    var key = Wrap(2);                  toDispose.Add(key);                    var value = obj[this' key];                  toDispose.Add(value);                    Push(value);                    return 1;              });
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,CallCallback,The following statement contains a magic number: return LuaToClrBoundary(state' toDispose => {                  var obj = GetClrObject<LuaClrObjectValue>(1).BackingCustomObject as ILuaCallBinding;                    if (obj == null) {                      throw new LuaException("CLR object is not callable.");                  }                    var nargs = LuaApi.lua_gettop(LuaState) - 1;                  var args = new LuaValue[nargs];                    for (int i = 0; i < nargs; ++i) {                      args[i] = Wrap(i + 2);                      toDispose.Add(args[i]);                  }                    var vararg = new LuaVararg(args' true);                    var results = obj.Call(this' vararg);                  toDispose.Add(results);                    if (LuaApi.lua_checkstack(LuaState' 1 + results.Count) == 0) {                      throw new LuaException("Cannot grow stack for results.");                  }                    foreach (var v in results) {                      Push(v);                  }                    return results.Count;              });
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,BinaryOperatorCallback,The following statement contains a magic number: return LuaToClrBoundary(state' toDispose => {                  // For binary operators' the right argument could be a CLR object while the left argument might not' and                  // only one is guaranteed to support the given interface.  So we need to do some tests.                  LuaClrObjectValue obj;                  T binding = null;                    if ((obj = TryGetClrObject<LuaClrObjectValue>(1)) != null) {                      binding = obj.BackingCustomObject as T;                  }                    if (binding == null && (obj = TryGetClrObject<LuaClrObjectValue>(2)) != null) {                      binding = obj.BackingCustomObject as T;                  }                    if (binding == null) {                      throw new LuaException("Binary operator not found for CLR object.");                  }                    var left = Wrap(1);                  toDispose.Add(left);                    var right = Wrap(2);                  toDispose.Add(right);                    var result = oper(binding' left' right);                  toDispose.Add(result);                    Push(result);                  return 1;              });
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,BinaryOperatorCallback,The following statement contains a magic number: return LuaToClrBoundary(state' toDispose => {                  // For binary operators' the right argument could be a CLR object while the left argument might not' and                  // only one is guaranteed to support the given interface.  So we need to do some tests.                  LuaClrObjectValue obj;                  T binding = null;                    if ((obj = TryGetClrObject<LuaClrObjectValue>(1)) != null) {                      binding = obj.BackingCustomObject as T;                  }                    if (binding == null && (obj = TryGetClrObject<LuaClrObjectValue>(2)) != null) {                      binding = obj.BackingCustomObject as T;                  }                    if (binding == null) {                      throw new LuaException("Binary operator not found for CLR object.");                  }                    var left = Wrap(1);                  toDispose.Add(left);                    var right = Wrap(2);                  toDispose.Add(right);                    var result = oper(binding' left' right);                  toDispose.Add(result);                    Push(result);                  return 1;              });
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,CreateTable,The following statement contains a magic number: LuaApi.lua_rawseti(LuaState' -2' i);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,CheckOnMainThread,The following statement contains a magic number: return 2;
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,MethodWrapperCallCallback,The following statement contains a magic number: var wrapper = (MethodWrapper)(GetClrObject<LuaClrObjectValue>(LuaApi.lua_upvalueindex(2)).ClrObject);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,CreateFunctionFromMethodWrapper,The following statement contains a magic number: LuaApi.lua_pushcclosure(LuaState' methodWrapperCallCallbackWrapper' 2);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,MakeManagedCall,The following statement contains a magic number: return 2;
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,CreateWeakReference,The following statement contains a magic number: LuaApi.lua_setmetatable(LuaState' -2);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,CreateWeakReference,The following statement contains a magic number: LuaApi.lua_rawseti(LuaState' -2' 1);
Magic Number,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,GetWeakReference,The following statement contains a magic number: LuaApi.lua_pop(LuaState' 2);
Magic Number,Eluant,LuaBoolean,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaBoolean.cs,LuaBoolean,The following statement contains a magic number: hashCode = typeof(LuaBoolean).GetHashCode() ^ (value ? 1 : 2);
Magic Number,Eluant,LuaTable,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaTable.cs,Clear,The following statement contains a magic number: LuaApi.lua_next(Runtime.LuaState' -2) == 0
Magic Number,Eluant,LuaTable,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaTable.cs,Clear,The following statement contains a magic number: LuaApi.lua_settable(Runtime.LuaState' -3);
Magic Number,Eluant,LuaTable,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaTable.cs,Add,The following statement contains a magic number: LuaApi.lua_gettable(Runtime.LuaState' -2);
Magic Number,Eluant,LuaTable,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaTable.cs,Add,The following statement contains a magic number: LuaApi.lua_pop(Runtime.LuaState' 2);
Magic Number,Eluant,LuaTable,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaTable.cs,Add,The following statement contains a magic number: LuaApi.lua_settable(Runtime.LuaState' -4);
Magic Number,Eluant,LuaTable,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaTable.cs,Add,The following statement contains a magic number: LuaApi.lua_pop(Runtime.LuaState' 2);
Magic Number,Eluant,LuaTableEnumerator,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaTable.cs,MoveNext,The following statement contains a magic number: LuaApi.lua_next(runtime.LuaState' -2) == 0
Magic Number,Eluant,LuaTableEnumerator,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaTable.cs,MoveNext,The following statement contains a magic number: var newKey = runtime.Wrap(-2);
Magic Number,Eluant,LuaTableEnumerator,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaTable.cs,MoveNext,The following statement contains a magic number: LuaApi.lua_pop(runtime.LuaState' 3);
Missing Default,Eluant,LuaRuntime,D:\research\architectureSmells\repos\cdhowie_Eluant\Eluant\LuaRuntime.cs,Wrap,The following switch statement is missing a default case: switch (type) {                  case LuaApi.LuaType.Nil:                      return LuaNil.Instance;                    case LuaApi.LuaType.Boolean:                      return (LuaBoolean)(LuaApi.lua_toboolean(LuaState' index) != 0);                    case LuaApi.LuaType.Number:                      return (LuaNumber)LuaApi.lua_tonumber(LuaState' index);                    case LuaApi.LuaType.String:                      return (LuaString)LuaApi.lua_tostring(LuaState' index);                    case LuaApi.LuaType.Table:                      return new LuaTable(this' CreateReference(index));                    case LuaApi.LuaType.Function:                      return new LuaFunction(this' CreateReference(index));                    case LuaApi.LuaType.LightUserdata:                      return new LuaLightUserdata(this' CreateReference(index));                    case LuaApi.LuaType.Userdata:                      if (IsClrObject(index)) {                          return new LuaClrObjectReference(this' CreateReference(index));                      }                        return new LuaUserdata(this' CreateReference(index));                    case LuaApi.LuaType.Thread:                      return new LuaThread(this' CreateReference(index));              }
