Implementation smell,Namespace,Class,File,Method,Description
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,CreateMockData,The following statement contains a magic number: for (int i = 0; i < MemorySize; i++) {  	var x = random.Next (10' 100);  	_currentData.Add (x);  	if (random.Next (0' 100) < 50) {  		_lastBackup.Add (x);  	}  	else {  		_lastBackup.Add (random.Next (10' 100));  	}  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,CreateMockData,The following statement contains a magic number: for (int i = 0; i < MemorySize; i++) {  	var x = random.Next (10' 100);  	_currentData.Add (x);  	if (random.Next (0' 100) < 50) {  		_lastBackup.Add (x);  	}  	else {  		_lastBackup.Add (random.Next (10' 100));  	}  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,CreateMockData,The following statement contains a magic number: for (int i = 0; i < MemorySize; i++) {  	var x = random.Next (10' 100);  	_currentData.Add (x);  	if (random.Next (0' 100) < 50) {  		_lastBackup.Add (x);  	}  	else {  		_lastBackup.Add (random.Next (10' 100));  	}  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,CreateMockData,The following statement contains a magic number: for (int i = 0; i < MemorySize; i++) {  	var x = random.Next (10' 100);  	_currentData.Add (x);  	if (random.Next (0' 100) < 50) {  		_lastBackup.Add (x);  	}  	else {  		_lastBackup.Add (random.Next (10' 100));  	}  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,CreateMockData,The following statement contains a magic number: for (int i = 0; i < MemorySize; i++) {  	var x = random.Next (10' 100);  	_currentData.Add (x);  	if (random.Next (0' 100) < 50) {  		_lastBackup.Add (x);  	}  	else {  		_lastBackup.Add (random.Next (10' 100));  	}  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,CreateMockData,The following statement contains a magic number: for (int i = 0; i < MemorySize; i++) {  	var x = random.Next (10' 100);  	_currentData.Add (x);  	if (random.Next (0' 100) < 50) {  		_lastBackup.Add (x);  	}  	else {  		_lastBackup.Add (random.Next (10' 100));  	}  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,CreateMockData,The following statement contains a magic number: if (random.Next (0' 100) < 50) {  	_lastBackup.Add (x);  }  else {  	_lastBackup.Add (random.Next (10' 100));  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,CreateMockData,The following statement contains a magic number: if (random.Next (0' 100) < 50) {  	_lastBackup.Add (x);  }  else {  	_lastBackup.Add (random.Next (10' 100));  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,CreateMockData,The following statement contains a magic number: if (random.Next (0' 100) < 50) {  	_lastBackup.Add (x);  }  else {  	_lastBackup.Add (random.Next (10' 100));  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,CreateMockData,The following statement contains a magic number: if (random.Next (0' 100) < 50) {  	_lastBackup.Add (x);  }  else {  	_lastBackup.Add (random.Next (10' 100));  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,CreateMockData,The following statement contains a magic number: _lastBackup.Add (random.Next (10' 100));  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,CreateMockData,The following statement contains a magic number: _lastBackup.Add (random.Next (10' 100));  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,GenerateSourceStream,The following statement contains a magic number: while (usedMemory < MemorySize) {  	if (random.Next () % 5 != 1) {  		//Generate a new block   		var length = random.Next (MemorySize - usedMemory);  		for (int i = usedMemory; i < usedMemory + length; i++) {  			intArray [i] = random.Next ();  		}  		dataRanges.Add (new DataRange () {  			Address = usedMemory'  			Range = length  		});  		usedMemory += length;  	}  	else//20 % chance for this to happen  	 {  		intArray [usedMemory++] = 0;  	}  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,GenerateSourceStream,The following statement contains a magic number: if (random.Next () % 5 != 1) {  	//Generate a new block   	var length = random.Next (MemorySize - usedMemory);  	for (int i = usedMemory; i < usedMemory + length; i++) {  		intArray [i] = random.Next ();  	}  	dataRanges.Add (new DataRange () {  		Address = usedMemory'  		Range = length  	});  	usedMemory += length;  }  else//20 % chance for this to happen   {  	intArray [usedMemory++] = 0;  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,Run,The following statement contains a magic number: tasks [2] = Task.Factory.StartNew (FindOldData);  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,Run,The following statement contains a magic number: tasks [3] = Task.Factory.StartNew (SaveOldData);  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,SaveOldData,The following statement contains a magic number: foreach (var item in _queue.GetConsumingEnumerable ()) {  	Thread.Sleep (200);  	Log.Error ("Saving : " + item);  	PostProgress (1);  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,SaveOldData,The following statement contains a magic number: Thread.Sleep (200);  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,FindOldData,The following statement contains a magic number: foreach (var item in _changesAux.GetConsumingEnumerable ()) {  	Thread.Sleep (100);  	int address = item.Address;  	var data = new DataByte (address' _lastBackup [address]);  	_queue.Add (data);  	Log.Debug ("Queue : " + data);  	PostProgress (1);  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,FindOldData,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,ChangesToDiff,The following statement contains a magic number: foreach (var item in _changes.GetConsumingEnumerable ()) {  	Thread.Sleep (200);  	Log.Warn ("#Diff : " + item);  	PostProgress (1);  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,ChangesToDiff,The following statement contains a magic number: Thread.Sleep (200);  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,CheckForChanges,The following statement contains a magic number: for (int i = 0; i < MemorySize; i++) {  	Thread.Sleep (100);  	if (_currentData [i] != _lastBackup [i]) {  		var data = new DataByte (i' _currentData [i]);  		_changes.Add (data);  		_changesAux.Add (data);  		Log.Info ("Different data @" + i);  		PostProgress (1);  	}  	else {  		PostProgress (OperationCount);  	}  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Alpha\Progress Bar Alpha\BackupWorker7.cs,CheckForChanges,The following statement contains a magic number: Thread.Sleep (100);  
