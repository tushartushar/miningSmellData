Implementation smell,Namespace,Class,File,Method,Description
Long Statement,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,Consumer,The length of the statement  "                        var t3 = Task.Run(() => LocalBackup(backupCollection));*/var t1 = Task.Factory.StartNew (() => LocalProducer (changesCollection' item)); " is 136.
Empty Catch Block,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,LocalBackup,The method has an empty catch block.
Magic Number,BackupLibrary,BackupData,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupData.cs,BackupData,The following statement contains a magic number: for (var i = 0; i < x; i++) {  	_data [i] = random.Next (2' 3);  }  
Magic Number,BackupLibrary,BackupData,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupData.cs,BackupData,The following statement contains a magic number: for (var i = 0; i < x; i++) {  	_data [i] = random.Next (2' 3);  }  
Magic Number,BackupLibrary,BackupData,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupData.cs,BackupData,The following statement contains a magic number: _data [i] = random.Next (2' 3);  
Magic Number,BackupLibrary,BackupData,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupData.cs,BackupData,The following statement contains a magic number: _data [i] = random.Next (2' 3);  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,BackupWorker,The following statement contains a magic number: _data = new BackupData (100' 120);  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,BackupWorker,The following statement contains a magic number: _data = new BackupData (100' 120);  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,LocalConsumer,The following statement contains a magic number: while (!blockingCollection.IsCompleted) {  	try {  		var item = blockingCollection.Take ();  		//Log.Info("Take : ChangesCollection #" + item.Index);  		Thread.Sleep (20 + random.Next (0' 5));  		backupCollection.Add (item);  		PostProgress (2);  		//Thread.Sleep();  		backupCollection.CompleteAdding ();  		//Log.Info("Add : BackupCollection #" + item.Index);  	}  	catch (Exception ex) {  		Log.Error ("HERE : "' ex);  	}  }  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,LocalConsumer,The following statement contains a magic number: while (!blockingCollection.IsCompleted) {  	try {  		var item = blockingCollection.Take ();  		//Log.Info("Take : ChangesCollection #" + item.Index);  		Thread.Sleep (20 + random.Next (0' 5));  		backupCollection.Add (item);  		PostProgress (2);  		//Thread.Sleep();  		backupCollection.CompleteAdding ();  		//Log.Info("Add : BackupCollection #" + item.Index);  	}  	catch (Exception ex) {  		Log.Error ("HERE : "' ex);  	}  }  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,LocalConsumer,The following statement contains a magic number: while (!blockingCollection.IsCompleted) {  	try {  		var item = blockingCollection.Take ();  		//Log.Info("Take : ChangesCollection #" + item.Index);  		Thread.Sleep (20 + random.Next (0' 5));  		backupCollection.Add (item);  		PostProgress (2);  		//Thread.Sleep();  		backupCollection.CompleteAdding ();  		//Log.Info("Add : BackupCollection #" + item.Index);  	}  	catch (Exception ex) {  		Log.Error ("HERE : "' ex);  	}  }  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,LocalConsumer,The following statement contains a magic number: try {  	var item = blockingCollection.Take ();  	//Log.Info("Take : ChangesCollection #" + item.Index);  	Thread.Sleep (20 + random.Next (0' 5));  	backupCollection.Add (item);  	PostProgress (2);  	//Thread.Sleep();  	backupCollection.CompleteAdding ();  	//Log.Info("Add : BackupCollection #" + item.Index);  }  catch (Exception ex) {  	Log.Error ("HERE : "' ex);  }  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,LocalConsumer,The following statement contains a magic number: try {  	var item = blockingCollection.Take ();  	//Log.Info("Take : ChangesCollection #" + item.Index);  	Thread.Sleep (20 + random.Next (0' 5));  	backupCollection.Add (item);  	PostProgress (2);  	//Thread.Sleep();  	backupCollection.CompleteAdding ();  	//Log.Info("Add : BackupCollection #" + item.Index);  }  catch (Exception ex) {  	Log.Error ("HERE : "' ex);  }  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,LocalConsumer,The following statement contains a magic number: try {  	var item = blockingCollection.Take ();  	//Log.Info("Take : ChangesCollection #" + item.Index);  	Thread.Sleep (20 + random.Next (0' 5));  	backupCollection.Add (item);  	PostProgress (2);  	//Thread.Sleep();  	backupCollection.CompleteAdding ();  	//Log.Info("Add : BackupCollection #" + item.Index);  }  catch (Exception ex) {  	Log.Error ("HERE : "' ex);  }  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,LocalConsumer,The following statement contains a magic number: Thread.Sleep (20 + random.Next (0' 5));  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,LocalConsumer,The following statement contains a magic number: Thread.Sleep (20 + random.Next (0' 5));  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,LocalConsumer,The following statement contains a magic number: PostProgress (2);  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,LocalProducer,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,Consumer,The following statement contains a magic number: while (!sequencesCollection.IsCompleted) {  	Thread.Sleep (10);  	try {  		var item = sequencesCollection.Take ();  		if (item.Data == 1) {  			Thread.Sleep (25);  			PostProgress (_backup.OperationCount);  		}  		else if (item.Data == 2) {  			Thread.Sleep (3);  			/*var t1 = Task.Run(() => LocalProducer(changesCollection' item));                         var t2 = Task.Run(() => LocalConsumer(changesCollection' backupCollection));                         var t3 = Task.Run(() => LocalBackup(backupCollection));*/var t1 = Task.Factory.StartNew (() => LocalProducer (changesCollection' item));  			var t2 = Task.Factory.StartNew (() => LocalConsumer (changesCollection' backupCollection));  			var t3 = Task.Factory.StartNew (() => LocalBackup (backupCollection));  			taskList.Add (t1);  			taskList.Add (t2);  			taskList.Add (t3);  		}  	}  	catch (Exception ex) {  		Log.Error ("Exception : "' ex);  	}  }  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,Consumer,The following statement contains a magic number: while (!sequencesCollection.IsCompleted) {  	Thread.Sleep (10);  	try {  		var item = sequencesCollection.Take ();  		if (item.Data == 1) {  			Thread.Sleep (25);  			PostProgress (_backup.OperationCount);  		}  		else if (item.Data == 2) {  			Thread.Sleep (3);  			/*var t1 = Task.Run(() => LocalProducer(changesCollection' item));                         var t2 = Task.Run(() => LocalConsumer(changesCollection' backupCollection));                         var t3 = Task.Run(() => LocalBackup(backupCollection));*/var t1 = Task.Factory.StartNew (() => LocalProducer (changesCollection' item));  			var t2 = Task.Factory.StartNew (() => LocalConsumer (changesCollection' backupCollection));  			var t3 = Task.Factory.StartNew (() => LocalBackup (backupCollection));  			taskList.Add (t1);  			taskList.Add (t2);  			taskList.Add (t3);  		}  	}  	catch (Exception ex) {  		Log.Error ("Exception : "' ex);  	}  }  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,Consumer,The following statement contains a magic number: while (!sequencesCollection.IsCompleted) {  	Thread.Sleep (10);  	try {  		var item = sequencesCollection.Take ();  		if (item.Data == 1) {  			Thread.Sleep (25);  			PostProgress (_backup.OperationCount);  		}  		else if (item.Data == 2) {  			Thread.Sleep (3);  			/*var t1 = Task.Run(() => LocalProducer(changesCollection' item));                         var t2 = Task.Run(() => LocalConsumer(changesCollection' backupCollection));                         var t3 = Task.Run(() => LocalBackup(backupCollection));*/var t1 = Task.Factory.StartNew (() => LocalProducer (changesCollection' item));  			var t2 = Task.Factory.StartNew (() => LocalConsumer (changesCollection' backupCollection));  			var t3 = Task.Factory.StartNew (() => LocalBackup (backupCollection));  			taskList.Add (t1);  			taskList.Add (t2);  			taskList.Add (t3);  		}  	}  	catch (Exception ex) {  		Log.Error ("Exception : "' ex);  	}  }  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,Consumer,The following statement contains a magic number: while (!sequencesCollection.IsCompleted) {  	Thread.Sleep (10);  	try {  		var item = sequencesCollection.Take ();  		if (item.Data == 1) {  			Thread.Sleep (25);  			PostProgress (_backup.OperationCount);  		}  		else if (item.Data == 2) {  			Thread.Sleep (3);  			/*var t1 = Task.Run(() => LocalProducer(changesCollection' item));                         var t2 = Task.Run(() => LocalConsumer(changesCollection' backupCollection));                         var t3 = Task.Run(() => LocalBackup(backupCollection));*/var t1 = Task.Factory.StartNew (() => LocalProducer (changesCollection' item));  			var t2 = Task.Factory.StartNew (() => LocalConsumer (changesCollection' backupCollection));  			var t3 = Task.Factory.StartNew (() => LocalBackup (backupCollection));  			taskList.Add (t1);  			taskList.Add (t2);  			taskList.Add (t3);  		}  	}  	catch (Exception ex) {  		Log.Error ("Exception : "' ex);  	}  }  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,Consumer,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,Consumer,The following statement contains a magic number: try {  	var item = sequencesCollection.Take ();  	if (item.Data == 1) {  		Thread.Sleep (25);  		PostProgress (_backup.OperationCount);  	}  	else if (item.Data == 2) {  		Thread.Sleep (3);  		/*var t1 = Task.Run(() => LocalProducer(changesCollection' item));                         var t2 = Task.Run(() => LocalConsumer(changesCollection' backupCollection));                         var t3 = Task.Run(() => LocalBackup(backupCollection));*/var t1 = Task.Factory.StartNew (() => LocalProducer (changesCollection' item));  		var t2 = Task.Factory.StartNew (() => LocalConsumer (changesCollection' backupCollection));  		var t3 = Task.Factory.StartNew (() => LocalBackup (backupCollection));  		taskList.Add (t1);  		taskList.Add (t2);  		taskList.Add (t3);  	}  }  catch (Exception ex) {  	Log.Error ("Exception : "' ex);  }  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,Consumer,The following statement contains a magic number: try {  	var item = sequencesCollection.Take ();  	if (item.Data == 1) {  		Thread.Sleep (25);  		PostProgress (_backup.OperationCount);  	}  	else if (item.Data == 2) {  		Thread.Sleep (3);  		/*var t1 = Task.Run(() => LocalProducer(changesCollection' item));                         var t2 = Task.Run(() => LocalConsumer(changesCollection' backupCollection));                         var t3 = Task.Run(() => LocalBackup(backupCollection));*/var t1 = Task.Factory.StartNew (() => LocalProducer (changesCollection' item));  		var t2 = Task.Factory.StartNew (() => LocalConsumer (changesCollection' backupCollection));  		var t3 = Task.Factory.StartNew (() => LocalBackup (backupCollection));  		taskList.Add (t1);  		taskList.Add (t2);  		taskList.Add (t3);  	}  }  catch (Exception ex) {  	Log.Error ("Exception : "' ex);  }  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,Consumer,The following statement contains a magic number: try {  	var item = sequencesCollection.Take ();  	if (item.Data == 1) {  		Thread.Sleep (25);  		PostProgress (_backup.OperationCount);  	}  	else if (item.Data == 2) {  		Thread.Sleep (3);  		/*var t1 = Task.Run(() => LocalProducer(changesCollection' item));                         var t2 = Task.Run(() => LocalConsumer(changesCollection' backupCollection));                         var t3 = Task.Run(() => LocalBackup(backupCollection));*/var t1 = Task.Factory.StartNew (() => LocalProducer (changesCollection' item));  		var t2 = Task.Factory.StartNew (() => LocalConsumer (changesCollection' backupCollection));  		var t3 = Task.Factory.StartNew (() => LocalBackup (backupCollection));  		taskList.Add (t1);  		taskList.Add (t2);  		taskList.Add (t3);  	}  }  catch (Exception ex) {  	Log.Error ("Exception : "' ex);  }  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,Consumer,The following statement contains a magic number: if (item.Data == 1) {  	Thread.Sleep (25);  	PostProgress (_backup.OperationCount);  }  else if (item.Data == 2) {  	Thread.Sleep (3);  	/*var t1 = Task.Run(() => LocalProducer(changesCollection' item));                         var t2 = Task.Run(() => LocalConsumer(changesCollection' backupCollection));                         var t3 = Task.Run(() => LocalBackup(backupCollection));*/var t1 = Task.Factory.StartNew (() => LocalProducer (changesCollection' item));  	var t2 = Task.Factory.StartNew (() => LocalConsumer (changesCollection' backupCollection));  	var t3 = Task.Factory.StartNew (() => LocalBackup (backupCollection));  	taskList.Add (t1);  	taskList.Add (t2);  	taskList.Add (t3);  }  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,Consumer,The following statement contains a magic number: if (item.Data == 1) {  	Thread.Sleep (25);  	PostProgress (_backup.OperationCount);  }  else if (item.Data == 2) {  	Thread.Sleep (3);  	/*var t1 = Task.Run(() => LocalProducer(changesCollection' item));                         var t2 = Task.Run(() => LocalConsumer(changesCollection' backupCollection));                         var t3 = Task.Run(() => LocalBackup(backupCollection));*/var t1 = Task.Factory.StartNew (() => LocalProducer (changesCollection' item));  	var t2 = Task.Factory.StartNew (() => LocalConsumer (changesCollection' backupCollection));  	var t3 = Task.Factory.StartNew (() => LocalBackup (backupCollection));  	taskList.Add (t1);  	taskList.Add (t2);  	taskList.Add (t3);  }  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,Consumer,The following statement contains a magic number: if (item.Data == 1) {  	Thread.Sleep (25);  	PostProgress (_backup.OperationCount);  }  else if (item.Data == 2) {  	Thread.Sleep (3);  	/*var t1 = Task.Run(() => LocalProducer(changesCollection' item));                         var t2 = Task.Run(() => LocalConsumer(changesCollection' backupCollection));                         var t3 = Task.Run(() => LocalBackup(backupCollection));*/var t1 = Task.Factory.StartNew (() => LocalProducer (changesCollection' item));  	var t2 = Task.Factory.StartNew (() => LocalConsumer (changesCollection' backupCollection));  	var t3 = Task.Factory.StartNew (() => LocalBackup (backupCollection));  	taskList.Add (t1);  	taskList.Add (t2);  	taskList.Add (t3);  }  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,Consumer,The following statement contains a magic number: Thread.Sleep (25);  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,Consumer,The following statement contains a magic number: if (item.Data == 2) {  	Thread.Sleep (3);  	/*var t1 = Task.Run(() => LocalProducer(changesCollection' item));                         var t2 = Task.Run(() => LocalConsumer(changesCollection' backupCollection));                         var t3 = Task.Run(() => LocalBackup(backupCollection));*/var t1 = Task.Factory.StartNew (() => LocalProducer (changesCollection' item));  	var t2 = Task.Factory.StartNew (() => LocalConsumer (changesCollection' backupCollection));  	var t3 = Task.Factory.StartNew (() => LocalBackup (backupCollection));  	taskList.Add (t1);  	taskList.Add (t2);  	taskList.Add (t3);  }  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,Consumer,The following statement contains a magic number: if (item.Data == 2) {  	Thread.Sleep (3);  	/*var t1 = Task.Run(() => LocalProducer(changesCollection' item));                         var t2 = Task.Run(() => LocalConsumer(changesCollection' backupCollection));                         var t3 = Task.Run(() => LocalBackup(backupCollection));*/var t1 = Task.Factory.StartNew (() => LocalProducer (changesCollection' item));  	var t2 = Task.Factory.StartNew (() => LocalConsumer (changesCollection' backupCollection));  	var t3 = Task.Factory.StartNew (() => LocalBackup (backupCollection));  	taskList.Add (t1);  	taskList.Add (t2);  	taskList.Add (t3);  }  
Magic Number,BackupLibrary,BackupWorker,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker.cs,Consumer,The following statement contains a magic number: Thread.Sleep (3);  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker7.cs,InitializeData,The following statement contains a magic number: for (var i = 0; i < DataCount; i++) {  	_data [i] = random.Next (1' 3);  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker7.cs,InitializeData,The following statement contains a magic number: _data [i] = random.Next (1' 3);  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker7.cs,InitializeData,The following statement contains a magic number: _maxProgress = _data.Length * 4;  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker7.cs,Run,The following statement contains a magic number: tasks [2] = Task.Factory.StartNew (ReadDataFromBuffer);  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker7.cs,Run,The following statement contains a magic number: tasks [3] = Task.Factory.StartNew (WriteDataToBackup);  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker7.cs,WriteDataToBackup,The following statement contains a magic number: while (!_backupCollection.IsCompleted) {  	int item;  	_backupCollection.TryTake (out item' -1);  	Thread.Sleep (75);  	Log.Warn ("!! Processed Item");  	PostProgress (1);  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker7.cs,WriteDataToBackup,The following statement contains a magic number: Thread.Sleep (75);  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker7.cs,ReadDataFromBuffer,The following statement contains a magic number: while (!_buffer.IsCompleted) {  	int item;  	_buffer.TryTake (out item' -1);  	Log.Info ("++ Buffer => Backup Item");  	Thread.Sleep (50);  	_backupCollection.Add (item);  	PostProgress (1);  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker7.cs,ReadDataFromBuffer,The following statement contains a magic number: Thread.Sleep (50);  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker7.cs,ReadData,The following statement contains a magic number: foreach (var t in _data) {  	//Thread.Sleep(1000);  	if (t == 1) {  		Log.Info ("-Data : Same");  		PostProgress (4);  	}  	else if (t == 2) {  		Log.Warn ("-Data : Changed");  		_changesCollection.Add (t);  		PostProgress (1);  	}  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker7.cs,ReadData,The following statement contains a magic number: foreach (var t in _data) {  	//Thread.Sleep(1000);  	if (t == 1) {  		Log.Info ("-Data : Same");  		PostProgress (4);  	}  	else if (t == 2) {  		Log.Warn ("-Data : Changed");  		_changesCollection.Add (t);  		PostProgress (1);  	}  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker7.cs,ReadData,The following statement contains a magic number: if (t == 1) {  	Log.Info ("-Data : Same");  	PostProgress (4);  }  else if (t == 2) {  	Log.Warn ("-Data : Changed");  	_changesCollection.Add (t);  	PostProgress (1);  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker7.cs,ReadData,The following statement contains a magic number: if (t == 1) {  	Log.Info ("-Data : Same");  	PostProgress (4);  }  else if (t == 2) {  	Log.Warn ("-Data : Changed");  	_changesCollection.Add (t);  	PostProgress (1);  }  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker7.cs,ReadData,The following statement contains a magic number: PostProgress (4);  
Magic Number,BackupLibrary,BackupWorker7,C:\repos\tangredon_Testing\Progress Bar Example\BackupLibrary\BackupWorker7.cs,ReadData,The following statement contains a magic number: if (t == 2) {  	Log.Warn ("-Data : Changed");  	_changesCollection.Add (t);  	PostProgress (1);  }  
