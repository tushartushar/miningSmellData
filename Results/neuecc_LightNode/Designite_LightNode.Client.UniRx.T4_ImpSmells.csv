Implementation smell,Namespace,Class,File,Method,Description
Complex Method,UniRx,Tuple<T1;T2;T3;T4;T5;T6;T7;TRest>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,CompareTo,Cyclomatic complexity of the method is 10
Complex Method,UniRx,Tuple<T1;T2;T3;T4;T5;T6>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,CompareTo,Cyclomatic complexity of the method is 8
Complex Method,UniRx,Tuple<T1;T2;T3;T4;T5;T6;T7>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,CompareTo,Cyclomatic complexity of the method is 9
Long Parameter List,LightNode.Core,LightNodeClient,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\LightNodeClient.Generated.cs,_PostAsync,The method has 5 parameters. Parameters: contract' operation' content' contentList' reportProgress
Long Parameter List,LightNode.Core,LightNodeClient,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\LightNodeClient.Generated.cs,_PostAsync,The method has 5 parameters. Parameters: contract' operation' content' contentList' reportProgress
Long Parameter List,LightNode.Core,LightNodeClient,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\LightNodeClient.Generated.cs,Echo,The method has 5 parameters. Parameters: name' x' y' e' reportProgress
Long Parameter List,LightNode.Core,_IPerf,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\LightNodeClient.Generated.cs,Echo,The method has 5 parameters. Parameters: name' x' y' e' reportProgress
Long Parameter List,LightNode.Formatter,LightNodeClient,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\LightNodeClient.Generated.cs,_PostAsync,The method has 5 parameters. Parameters: contract' operation' content' contentList' reportProgress
Long Parameter List,LightNode.Formatter,LightNodeClient,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\LightNodeClient.Generated.cs,_PostAsync,The method has 5 parameters. Parameters: contract' operation' content' contentList' reportProgress
Long Parameter List,LightNode.Formatter,LightNodeClient,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\LightNodeClient.Generated.cs,Echo,The method has 5 parameters. Parameters: name' x' y' e' reportProgress
Long Parameter List,LightNode.Formatter,_IPerf,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\LightNodeClient.Generated.cs,Echo,The method has 5 parameters. Parameters: name' x' y' e' reportProgress
Long Parameter List,LightNode.Client,LightNodeClient,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\LightNodeClient.Generated.cs,_PostAsync,The method has 5 parameters. Parameters: contract' operation' content' contentList' reportProgress
Long Parameter List,LightNode.Client,LightNodeClient,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\LightNodeClient.Generated.cs,_PostAsync,The method has 5 parameters. Parameters: contract' operation' content' contentList' reportProgress
Long Parameter List,LightNode.Client,LightNodeClient,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\LightNodeClient.Generated.cs,Echo,The method has 5 parameters. Parameters: name' x' y' e' reportProgress
Long Parameter List,LightNode.Client,_IPerf,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\LightNodeClient.Generated.cs,Echo,The method has 5 parameters. Parameters: name' x' y' e' reportProgress
Long Parameter List,UniRx,Observable,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\Observable.Aggregate.cs,OnErrorRetry,The method has 5 parameters. Parameters: source' onError' retryCount' delay' delayScheduler
Long Parameter List,UniRx,Tuple,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,Create,The method has 8 parameters. Parameters: item1' item2' item3' item4' item5' item6' item7' item8
Long Parameter List,UniRx,Tuple,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,Create,The method has 7 parameters. Parameters: item1' item2' item3' item4' item5' item6' item7
Long Parameter List,UniRx,Tuple,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,Create,The method has 6 parameters. Parameters: item1' item2' item3' item4' item5' item6
Long Parameter List,UniRx,Tuple,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,Create,The method has 5 parameters. Parameters: item1' item2' item3' item4' item5
Long Parameter List,UniRx,Tuple<T1;T2;T3;T4;T5;T6;T7;TRest>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,Tuple,The method has 8 parameters. Parameters: item1' item2' item3' item4' item5' item6' item7' rest
Long Parameter List,UniRx,Tuple<T1;T2;T3;T4;T5>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,Tuple,The method has 5 parameters. Parameters: item1' item2' item3' item4' item5
Long Parameter List,UniRx,Tuple<T1;T2;T3;T4;T5;T6>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,Tuple,The method has 6 parameters. Parameters: item1' item2' item3' item4' item5' item6
Long Parameter List,UniRx,Tuple<T1;T2;T3;T4;T5;T6;T7>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,Tuple,The method has 7 parameters. Parameters: item1' item2' item3' item4' item5' item6' item7
Long Statement,UniRx,EventPattern<TSender;TEventArgs>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\EventPattern.cs,Equals,The length of the statement  "            return EqualityComparer<TSender>.Default.Equals(Sender' other.Sender) && EqualityComparer<TEventArgs>.Default.Equals(EventArgs' other.EventArgs); " is 145.
Long Statement,UniRx,Observable,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\Observable.Aggregate.cs,Merge,The length of the statement  "                                if (isStopped && group.Count == 1) // isStopped must be checked before group Count to ensure outer is not creating more groups " is 126.
Long Statement,UniRx,Scheduler,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\Schedulers\CurrentThreadScheduler.cs,Schedule,The length of the statement  "            return scheduler.Schedule(action' (Action<Action> _action' Action<Action<Action>> self) => _action(() => self(_action))); " is 121.
Long Statement,UniRx,Scheduler,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\Schedulers\CurrentThreadScheduler.cs,Schedule,The length of the statement  "            return scheduler.Schedule(new Pair<TState' Action<TState' Action<TState>>> { First = state' Second = action }' InvokeRec1); " is 123.
Long Statement,UniRx,Scheduler,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\Schedulers\CurrentThreadScheduler.cs,Schedule,The length of the statement  "            return scheduler.Schedule(action' dueTime' (Action<Action<TimeSpan>> _action' Action<Action<Action<TimeSpan>>' TimeSpan> self) => _action(dt => self(_action' dt))); " is 164.
Long Statement,UniRx,Scheduler,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\Schedulers\CurrentThreadScheduler.cs,Schedule,The length of the statement  "            return scheduler.Schedule(new Pair<TState' Action<TState' Action<TState' TimeSpan>>> { First = state' Second = action }' dueTime' InvokeRec2); " is 142.
Long Statement,UniRx,Scheduler,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\Schedulers\CurrentThreadScheduler.cs,Schedule,The length of the statement  "            return scheduler.Schedule(action' dueTime' (Action<Action<DateTimeOffset>> _action' Action<Action<Action<DateTimeOffset>>' DateTimeOffset> self) => _action(dt => self(_action' dt))); " is 182.
Long Statement,UniRx,Scheduler,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\Schedulers\CurrentThreadScheduler.cs,Schedule,The length of the statement  "            return scheduler.Schedule(new Pair<TState' Action<TState' Action<TState' DateTimeOffset>>> { First = state' Second = action }' dueTime' InvokeRec3); " is 148.
Long Statement,UniRx,Tuple,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,Create,The length of the statement  "            return new Tuple<T1' T2' T3' T4' T5' T6' T7' Tuple<T8>>(item1' item2' item3' item4' item5' item6' item7' new Tuple<T8>(item8)); " is 127.
Long Statement,UniRx,Tuple<T1;T2;T3;T4;T5;T6;T7;TRest>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,ToString,The length of the statement  "            return String.Format("{0}' {1}' {2}' {3}' {4}' {5}' {6}' {7}"' item1' item2' item3' item4' item5' item6' item7' ((ITuple)rest).ToString()); " is 139.
Long Statement,UniRx,ObservableWWW,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\UnityEngineBridge\ObservableWWW.cs,Get,The length of the statement  "            return Observable.FromCoroutine<string>((observer' cancellation) => FetchText(new WWW(url' null' (headers ?? new Hash()))' observer' progress' cancellation)); " is 158.
Long Statement,UniRx,ObservableWWW,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\UnityEngineBridge\ObservableWWW.cs,GetAndGetBytes,The length of the statement  "            return Observable.FromCoroutine<byte[]>((observer' cancellation) => FetchBytes(new WWW(url' null' (headers ?? new Hash()))' observer' progress' cancellation)); " is 159.
Long Statement,UniRx,ObservableWWW,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\UnityEngineBridge\ObservableWWW.cs,GetWWW,The length of the statement  "            return Observable.FromCoroutine<WWW>((observer' cancellation) => Fetch(new WWW(url' null' (headers ?? new Hash()))' observer' progress' cancellation)); " is 151.
Long Statement,UniRx,ObservableWWW,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\UnityEngineBridge\ObservableWWW.cs,Post,The length of the statement  "            return Observable.FromCoroutine<string>((observer' cancellation) => FetchText(new WWW(url' postData)' observer' progress' cancellation)); " is 137.
Long Statement,UniRx,ObservableWWW,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\UnityEngineBridge\ObservableWWW.cs,Post,The length of the statement  "            return Observable.FromCoroutine<string>((observer' cancellation) => FetchText(new WWW(url' postData' headers)' observer' progress' cancellation)); " is 146.
Long Statement,UniRx,ObservableWWW,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\UnityEngineBridge\ObservableWWW.cs,Post,The length of the statement  "            return Observable.FromCoroutine<string>((observer' cancellation) => FetchText(new WWW(url' content)' observer' progress' cancellation)); " is 136.
Long Statement,UniRx,ObservableWWW,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\UnityEngineBridge\ObservableWWW.cs,Post,The length of the statement  "            return Observable.FromCoroutine<string>((observer' cancellation) => FetchText(new WWW(url' content.data' MergeHash(contentHeaders' headers))' observer' progress' cancellation)); " is 177.
Long Statement,UniRx,ObservableWWW,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\UnityEngineBridge\ObservableWWW.cs,PostAndGetBytes,The length of the statement  "            return Observable.FromCoroutine<byte[]>((observer' cancellation) => FetchBytes(new WWW(url' postData)' observer' progress' cancellation)); " is 138.
Long Statement,UniRx,ObservableWWW,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\UnityEngineBridge\ObservableWWW.cs,PostAndGetBytes,The length of the statement  "            return Observable.FromCoroutine<byte[]>((observer' cancellation) => FetchBytes(new WWW(url' postData' headers)' observer' progress' cancellation)); " is 147.
Long Statement,UniRx,ObservableWWW,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\UnityEngineBridge\ObservableWWW.cs,PostAndGetBytes,The length of the statement  "            return Observable.FromCoroutine<byte[]>((observer' cancellation) => FetchBytes(new WWW(url' content)' observer' progress' cancellation)); " is 137.
Long Statement,UniRx,ObservableWWW,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\UnityEngineBridge\ObservableWWW.cs,PostAndGetBytes,The length of the statement  "            return Observable.FromCoroutine<byte[]>((observer' cancellation) => FetchBytes(new WWW(url' content.data' MergeHash(contentHeaders' headers))' observer' progress' cancellation)); " is 178.
Long Statement,UniRx,ObservableWWW,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\UnityEngineBridge\ObservableWWW.cs,PostWWW,The length of the statement  "            return Observable.FromCoroutine<WWW>((observer' cancellation) => Fetch(new WWW(url' postData)' observer' progress' cancellation)); " is 130.
Long Statement,UniRx,ObservableWWW,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\UnityEngineBridge\ObservableWWW.cs,PostWWW,The length of the statement  "            return Observable.FromCoroutine<WWW>((observer' cancellation) => Fetch(new WWW(url' postData' headers)' observer' progress' cancellation)); " is 139.
Long Statement,UniRx,ObservableWWW,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\UnityEngineBridge\ObservableWWW.cs,PostWWW,The length of the statement  "            return Observable.FromCoroutine<WWW>((observer' cancellation) => Fetch(new WWW(url' content)' observer' progress' cancellation)); " is 129.
Long Statement,UniRx,ObservableWWW,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\UnityEngineBridge\ObservableWWW.cs,PostWWW,The length of the statement  "            return Observable.FromCoroutine<WWW>((observer' cancellation) => Fetch(new WWW(url' content.data' MergeHash(contentHeaders' headers))' observer' progress' cancellation)); " is 170.
Long Statement,UniRx,ObservableWWW,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\UnityEngineBridge\ObservableWWW.cs,LoadFromCacheOrDownload,The length of the statement  "            return Observable.FromCoroutine<AssetBundle>((observer' cancellation) => FetchAssetBundle(WWW.LoadFromCacheOrDownload(url' version)' observer' progress' cancellation)); " is 168.
Long Statement,UniRx,ObservableWWW,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\UnityEngineBridge\ObservableWWW.cs,LoadFromCacheOrDownload,The length of the statement  "            return Observable.FromCoroutine<AssetBundle>((observer' cancellation) => FetchAssetBundle(WWW.LoadFromCacheOrDownload(url' version' crc)' observer' progress' cancellation)); " is 173.
Long Statement,UniRx,ObservableWWW,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\UnityEngineBridge\ObservableWWW.cs,LoadFromCacheOrDownload,The length of the statement  "            return Observable.FromCoroutine<AssetBundle>((observer' cancellation) => FetchAssetBundle(WWW.LoadFromCacheOrDownload(url' hash128)' observer' progress' cancellation)); " is 168.
Long Statement,UniRx,ObservableWWW,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\UnityEngineBridge\ObservableWWW.cs,LoadFromCacheOrDownload,The length of the statement  "            return Observable.FromCoroutine<AssetBundle>((observer' cancellation) => FetchAssetBundle(WWW.LoadFromCacheOrDownload(url' hash128' crc)' observer' progress' cancellation)); " is 173.
Complex Conditional,UniRx,Observable,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\Observable.Aggregate.cs,CombineLatest,The conditional expression  "(leftCompleted && !leftStarted) || (rightCompleted && !rightStarted)"  is complex.
Magic Number,UniRx,CompositeDisposable,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\Disposables\CompositeDisposable.cs,Remove,The following statement contains a magic number: lock (_gate)              {                  if (!_disposed)                  {                      //                      // List<T> doesn't shrink the size of the underlying array but does collapse the array                      // by copying the tail one position to the left of the removal index. We don't need                      // index-based lookup but only ordering for sequential disposal. So' instead of spending                      // cycles on the Array.Copy imposed by Remove' we use a null sentinel value. We also                      // do manual Swiss cheese detection to shrink the list if there's a lot of holes in it.                      //                      var i = _disposables.IndexOf(item);                      if (i >= 0)                      {                          shouldDispose = true;                          _disposables[i] = null;                          _count--;                            if (_disposables.Capacity > SHRINK_THRESHOLD && _count < _disposables.Capacity / 2)                          {                              var old = _disposables;                              _disposables = new List<IDisposable>(_disposables.Capacity / 2);                                foreach (var d in old)                                  if (d != null)                                      _disposables.Add(d);                          }                      }                  }              }
Magic Number,UniRx,CompositeDisposable,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\Disposables\CompositeDisposable.cs,Remove,The following statement contains a magic number: lock (_gate)              {                  if (!_disposed)                  {                      //                      // List<T> doesn't shrink the size of the underlying array but does collapse the array                      // by copying the tail one position to the left of the removal index. We don't need                      // index-based lookup but only ordering for sequential disposal. So' instead of spending                      // cycles on the Array.Copy imposed by Remove' we use a null sentinel value. We also                      // do manual Swiss cheese detection to shrink the list if there's a lot of holes in it.                      //                      var i = _disposables.IndexOf(item);                      if (i >= 0)                      {                          shouldDispose = true;                          _disposables[i] = null;                          _count--;                            if (_disposables.Capacity > SHRINK_THRESHOLD && _count < _disposables.Capacity / 2)                          {                              var old = _disposables;                              _disposables = new List<IDisposable>(_disposables.Capacity / 2);                                foreach (var d in old)                                  if (d != null)                                      _disposables.Add(d);                          }                      }                  }              }
Magic Number,UniRx,EventPattern<TSender;TEventArgs>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\EventPattern.cs,GetHashCode,The following statement contains a magic number: return (x << 5) + (x ^ y);
Magic Number,UniRx,OnCompletedNotification,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\Notification.cs,GetHashCode,The following statement contains a magic number: return typeof(T).GetHashCode() ^ 8510;
Magic Number,UniRx,Observable,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\Observable.Aggregate.cs,Buffer,The following statement contains a magic number: return Observable.Create<IList<T>>(observer =>              {                  var list = new List<T>();                  var gate = new object();                    var d = new CompositeDisposable(2);                    // timer                  d.Add(scheduler.Schedule(timeSpan' self =>                  {                      List<T> currentList;                      lock (gate)                      {                          currentList = list;                          if (currentList.Count != 0)                          {                              list = new List<T>();                          }                      }                      if (currentList.Count != 0)                      {                          observer.OnNext(currentList);                      }                      self(timeSpan);                  }));                    // subscription                  d.Add(source.Subscribe(x =>                  {                      lock (gate)                      {                          list.Add(x);                      }                  }' observer.OnError' () =>                  {                      var currentList = list;                      observer.OnNext(currentList);                      observer.OnCompleted();                  }));                    return d;              });
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5;T6;T7;TRest>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h0 = (h0 << 5) + h0 ^ comparer.GetHashCode(item2);
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5;T6;T7;TRest>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h1 = (h1 << 5) + h1 ^ comparer.GetHashCode(item4);
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5;T6;T7;TRest>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h0 = (h0 << 5) + h0 ^ h1;
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5;T6;T7;TRest>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h1 = (h1 << 5) + h1 ^ comparer.GetHashCode(item6);
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5;T6;T7;TRest>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h2 = (h2 << 5) + h2 ^ comparer.GetHashCode(rest);
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5;T6;T7;TRest>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h1 = (h1 << 5) + h1 ^ h2;
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5;T6;T7;TRest>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h0 = (h0 << 5) + h0 ^ h1;
Magic Number,UniRx,Tuple<T1;T2>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h0 = (h0 << 5) + h0 ^ comparer.GetHashCode(item2);
Magic Number,UniRx,Tuple<T1;T2;T3>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h0 = (h0 << 5) + h0 ^ comparer.GetHashCode(item2);
Magic Number,UniRx,Tuple<T1;T2;T3>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h0 = (h0 << 5) + h0 ^ comparer.GetHashCode(item3);
Magic Number,UniRx,Tuple<T1;T2;T3;T4>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h0 = (h0 << 5) + h0 ^ comparer.GetHashCode(item2);
Magic Number,UniRx,Tuple<T1;T2;T3;T4>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h1 = (h1 << 5) + h1 ^ comparer.GetHashCode(item4);
Magic Number,UniRx,Tuple<T1;T2;T3;T4>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h0 = (h0 << 5) + h0 ^ h1;
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h0 = (h0 << 5) + h0 ^ comparer.GetHashCode(item2);
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h1 = (h1 << 5) + h1 ^ comparer.GetHashCode(item4);
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h0 = (h0 << 5) + h0 ^ h1;
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h0 = (h0 << 5) + h0 ^ comparer.GetHashCode(item5);
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5;T6>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h0 = (h0 << 5) + h0 ^ comparer.GetHashCode(item2);
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5;T6>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h1 = (h1 << 5) + h1 ^ comparer.GetHashCode(item4);
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5;T6>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h0 = (h0 << 5) + h0 ^ h1;
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5;T6>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h1 = (h1 << 5) + h1 ^ comparer.GetHashCode(item6);
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5;T6>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h0 = (h0 << 5) + h0 ^ h1;
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5;T6;T7>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h0 = (h0 << 5) + h0 ^ comparer.GetHashCode(item2);
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5;T6;T7>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h1 = (h1 << 5) + h1 ^ comparer.GetHashCode(item4);
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5;T6;T7>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h0 = (h0 << 5) + h0 ^ h1;
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5;T6;T7>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h1 = (h1 << 5) + h1 ^ comparer.GetHashCode(item6);
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5;T6;T7>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h1 = (h1 << 5) + h1 ^ comparer.GetHashCode(item7);
Magic Number,UniRx,Tuple<T1;T2;T3;T4;T5;T6;T7>,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\System\Tuple.cs,GetHashCode,The following statement contains a magic number: h0 = (h0 << 5) + h0 ^ h1;
Magic Number,UniRx,TimeInterval,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\TimeInterval.cs,GetHashCode,The following statement contains a magic number: var valueHashCode = Value == null ? 1963 : Value.GetHashCode();
Magic Number,UniRx,Timestamped,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\Timestamped.cs,GetHashCode,The following statement contains a magic number: var valueHashCode = Value == null ? 1979 : Value.GetHashCode();
Missing Default,UniRx,Observable,C:\repos\neuecc_LightNode\Source\LightNode.Client.UniRx.T4\UniRx\Scripts\Observable.Aggregate.cs,Dematerialize,The following switch statement is missing a default case: switch (x.Kind)                      {                          case NotificationKind.OnNext:                              observer.OnNext(x.Value);                              break;                          case NotificationKind.OnError:                              observer.OnError(x.Exception);                              break;                          case NotificationKind.OnCompleted:                              observer.OnCompleted();                              break;                      }
