Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Combres,ChangeMonitor,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Configuration\ChangeMonitor.cs,MonitorDynamicChanges,Cyclomatic complexity of the method is 11
Complex Method,Combres,ResourceContentReader,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Engine\ResourceContentReader.cs,ReadNewContent,Cyclomatic complexity of the method is 10
Long Identifier,Combres,Setting,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Common\SchemaConstants.cs,,The length of the parameter DefaultIgnorePipelineWhenDebug is 30.
Long Statement,Combres,ResourceSet,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Engine\Model\Default.cs,InitializeMinifier,The length of the statement  "                           : ModelUtils.LoadMinifier(xe' SchemaConstants.Set.MinifierRef' Settings.DefaultCssMinifierRef' Settings.CssMinifierMap); " is 120.
Long Statement,Combres,WebExtensions,D:\research\architectureSmells\repos\buunguyen_combres\Combres\API\WebExtensions.cs,CombresUrl,The length of the statement  "                    "CombresUrl() cannot be used when DebugEnabled and IgnorePipelineWhenDebug properties of the resource set are turned-on.  Use one of CombresLink() overloads instead."); " is 168.
Magic Number,Combres,CompressionExtensions,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Common\Extensions\CompressionExtensions.cs,UnCompress,The following statement contains a magic number: var buffer = new byte[4096];
Magic Number,Combres,UrlExtensions,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Common\Extensions\UrlExtensions.cs,ToHttps,The following statement contains a magic number: var builder = new UriBuilder(uri)              {                  Scheme = Uri.UriSchemeHttps'                  Port = 443              };
Magic Number,Combres,Resource,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Common\SchemaConstants.cs,GetHashCode,The following statement contains a magic number: return new object[] { Path.ToLowerInvariant()' Mode.ToString()' ForwardCookie }                  .Select(o => o.GetHashCode())                  .Aggregate(17' (accum' element) => 31 * accum + element);
Magic Number,Combres,Resource,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Common\SchemaConstants.cs,GetHashCode,The following statement contains a magic number: return new object[] { Path.ToLowerInvariant()' Mode.ToString()' ForwardCookie }                  .Select(o => o.GetHashCode())                  .Aggregate(17' (accum' element) => 31 * accum + element);
Magic Number,Combres,ChangeMonitor,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Configuration\ChangeMonitor.cs,MonitorRemoteChanges,The following statement contains a magic number: var localInterval = (settings.LocalChangeMonitorInterval == null ||                                       settings.LocalChangeMonitorInterval <= 0)                                          ? null                                          : settings.LocalChangeMonitorInterval*1000L;
Magic Number,Combres,ChangeMonitor,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Configuration\ChangeMonitor.cs,MonitorRemoteChanges,The following statement contains a magic number: var remoteInterval = (settings.RemoteChangeMonitorInterval == null ||                                        settings.RemoteChangeMonitorInterval <= 0)                                           ? null                                           : settings.RemoteChangeMonitorInterval*1000L;
Magic Number,Combres,ChangeMonitor,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Configuration\ChangeMonitor.cs,MonitorDynamicChanges,The following statement contains a magic number: Thread.Sleep(nothingToWatch ? 5000 : 1000);
Magic Number,Combres,ChangeMonitor,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Configuration\ChangeMonitor.cs,MonitorDynamicChanges,The following statement contains a magic number: Thread.Sleep(nothingToWatch ? 5000 : 1000);
Magic Number,Combres,CacheVaryProviderInfo,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Engine\Model\CacheVaryProviderInfo.cs,GetHashCode,The following statement contains a magic number: return factors.Aggregate(17' (accum' element) => 31 * accum + element);
Magic Number,Combres,CacheVaryProviderInfo,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Engine\Model\CacheVaryProviderInfo.cs,GetHashCode,The following statement contains a magic number: return factors.Aggregate(17' (accum' element) => 31 * accum + element);
Magic Number,Combres,FilterInfo,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Engine\Model\FilterInfo.cs,GetHashCode,The following statement contains a magic number: return factors.Aggregate(17' (accum' element) => 31 * accum + element);
Magic Number,Combres,FilterInfo,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Engine\Model\FilterInfo.cs,GetHashCode,The following statement contains a magic number: return factors.Aggregate(17' (accum' element) => 31 * accum + element);
Magic Number,Combres,MinifierInfo,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Engine\Model\MinifierInfo.cs,GetHashCode,The following statement contains a magic number: return factors.Aggregate(17' (accum' element) => 31 * accum + element);
Magic Number,Combres,MinifierInfo,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Engine\Model\MinifierInfo.cs,GetHashCode,The following statement contains a magic number: return factors.Aggregate(17' (accum' element) => 31 * accum + element);
Magic Number,Combres,WebExtensions,D:\research\architectureSmells\repos\buunguyen_combres\Combres\API\WebExtensions.cs,AddCombresRoute,The following statement contains a magic number: var adjustedUrl = url.Substring(2);
Magic Number,Combres,WebExtensions,D:\research\architectureSmells\repos\buunguyen_combres\Combres\API\WebExtensions.cs,GetResourceUrl,The following statement contains a magic number: contentHash = contentHash.Length > 32                   ? contentHash.Substring(0' 32)                  : contentHash;
Magic Number,Combres,WebExtensions,D:\research\architectureSmells\repos\buunguyen_combres\Combres\API\WebExtensions.cs,GetResourceUrl,The following statement contains a magic number: contentHash = contentHash.Length > 32                   ? contentHash.Substring(0' 32)                  : contentHash;
Magic Number,Combres.Filters,FixUrlsInCssFilter,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Engine\Filters\FixUrlsInCssFilter.cs,FixUrl,The following statement contains a magic number: url = "/" + url.Substring(2);
Magic Number,Combres.Filters,FixUrlsInCssFilter,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Engine\Filters\FixUrlsInCssFilter.cs,FixUrl,The following statement contains a magic number: url = url.Substring(3);
Magic Number,Combres.VersionGenerators,HashCodeVersionGenerator,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Engine\VersionGenerators\HashCodeVersionGenerator.cs,Generate,The following statement contains a magic number: var hash = contributingFactors.Select(f => f.GetHashCode())                                            .Aggregate(17' (accum' element) => 31 * accum + element)                                            .ToString();
Magic Number,Combres.VersionGenerators,HashCodeVersionGenerator,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Engine\VersionGenerators\HashCodeVersionGenerator.cs,Generate,The following statement contains a magic number: var hash = contributingFactors.Select(f => f.GetHashCode())                                            .Aggregate(17' (accum' element) => 31 * accum + element)                                            .ToString();
Missing Default,Combres,Configuration,D:\research\architectureSmells\repos\buunguyen_combres\Combres\Configuration\Configuration.cs,ApplyChanges,The following switch statement is missing a default case: switch (change.ChangeType)                  {                      case ChangeType.Config:                          ReloadSettings();                          break;                      case ChangeType.Resource:                          ApplyChange(change);                          break;                  }
