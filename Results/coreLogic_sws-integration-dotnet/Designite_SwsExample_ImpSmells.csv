Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SwsExample,SwsExample,C:\repos\coreLogic_sws-integration-dotnet\SwsExample.cs,ExecuteAuthenticationRequest,Cyclomatic complexity of the method is 9
Magic Number,SwsExample,SwsExample,C:\repos\coreLogic_sws-integration-dotnet\SwsExample.cs,SwsExample,The following statement contains a magic number: if (!string.IsNullOrEmpty (portVal)) {  	try {  		this.appPort = Convert.ToInt16 (portVal);  	}  	catch (FormatException) {  		Console.WriteLine ("Illegal value for integer port value: " + portVal + "; defaulting to 80.");  		this.appPort = 80;  	}  }  else {  	this.appPort = 80;  }  
Magic Number,SwsExample,SwsExample,C:\repos\coreLogic_sws-integration-dotnet\SwsExample.cs,SwsExample,The following statement contains a magic number: if (!string.IsNullOrEmpty (portVal)) {  	try {  		this.appPort = Convert.ToInt16 (portVal);  	}  	catch (FormatException) {  		Console.WriteLine ("Illegal value for integer port value: " + portVal + "; defaulting to 80.");  		this.appPort = 80;  	}  }  else {  	this.appPort = 80;  }  
Magic Number,SwsExample,SwsExample,C:\repos\coreLogic_sws-integration-dotnet\SwsExample.cs,SwsExample,The following statement contains a magic number: try {  	this.appPort = Convert.ToInt16 (portVal);  }  catch (FormatException) {  	Console.WriteLine ("Illegal value for integer port value: " + portVal + "; defaulting to 80.");  	this.appPort = 80;  }  
Magic Number,SwsExample,SwsExample,C:\repos\coreLogic_sws-integration-dotnet\SwsExample.cs,SwsExample,The following statement contains a magic number: this.appPort = 80;  
Magic Number,SwsExample,SwsExample,C:\repos\coreLogic_sws-integration-dotnet\SwsExample.cs,SwsExample,The following statement contains a magic number: this.appPort = 80;  
Magic Number,SwsExample,SwsExample,C:\repos\coreLogic_sws-integration-dotnet\SwsExample.cs,ExecuteMapTileRequest,The following statement contains a magic number: try {  	// make the request  	Uri mapTileUri = uriBuilder.Uri;  	HttpWebRequest request = (HttpWebRequest)WebRequest.Create (mapTileUri);  	request.Method = HTTP_METHOD_GET;  	request.ContentType = HTTP_CONTENT_TYPE_PNG;  	PrintRequest (request' null);  	byte[] responseBody = null;  	using (HttpWebResponse response = (HttpWebResponse)request.GetResponse ()) {  		using (BinaryReader br = new BinaryReader (response.GetResponseStream ())) {  			responseBody = br.ReadBytes (500000);  		}  		PrintResponse (response' null);  	}  }  catch (WebException wex) {  	using (HttpWebResponse response = (HttpWebResponse)wex.Response) {  		PrintErrorAndExit (Task.RETRIEVE_MAP_TILE' response);  		Environment.Exit (0);  	}  }  
Magic Number,SwsExample,SwsExample,C:\repos\coreLogic_sws-integration-dotnet\SwsExample.cs,ExecuteMapTileRequest,The following statement contains a magic number: using (HttpWebResponse response = (HttpWebResponse)request.GetResponse ()) {  	using (BinaryReader br = new BinaryReader (response.GetResponseStream ())) {  		responseBody = br.ReadBytes (500000);  	}  	PrintResponse (response' null);  }  
Magic Number,SwsExample,SwsExample,C:\repos\coreLogic_sws-integration-dotnet\SwsExample.cs,ExecuteMapTileRequest,The following statement contains a magic number: using (BinaryReader br = new BinaryReader (response.GetResponseStream ())) {  	responseBody = br.ReadBytes (500000);  }  
Magic Number,SwsExample,SwsExample,C:\repos\coreLogic_sws-integration-dotnet\SwsExample.cs,ExecuteMapTileRequest,The following statement contains a magic number: responseBody = br.ReadBytes (500000);  
