Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Duplicati.Library.Snapshots,DefineDosDevice,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\DefineDosDevice.cs,DefineDosDevice,Cyclomatic complexity of the method is 10
Complex Method,Duplicati.Library.Snapshots,USNHelper,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\USNHelper.cs,EnumerateFilesAndFolders,Cyclomatic complexity of the method is 8
Complex Method,Duplicati.Library.Snapshots,WindowsSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WindowsSnapshot.cs,WindowsSnapshot,Cyclomatic complexity of the method is 12
Complex Method,Duplicati.Library.Snapshots,SystemIOLinux,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOLinux.cs,SetMetadata,Cyclomatic complexity of the method is 8
Long Parameter List,Duplicati.Library.Snapshots,Win32USN,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\Win32USN.cs,CreateFile,The method has 7 parameters. Parameters: lpFileName' dwDesiredAccess' dwShareMode' SecurityAttributes' dwCreationDisposition' dwFlagsAndAttributes' hTemplateFile
Long Parameter List,Duplicati.Library.Snapshots,Win32USN,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\Win32USN.cs,DeviceIoControl,The method has 8 parameters. Parameters: hDevice' IoControlCode' InBuffer' nInBufferSize' OutBuffer' nOutBufferSize' pBytesReturned' overlapped
Long Parameter List,Duplicati.Library.Snapshots,Win32USN,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\Win32USN.cs,DeviceIoControl,The method has 8 parameters. Parameters: hDevice' IoControlCode' InBuffer' nInBufferSize' OutBuffer' nOutBufferSize' pBytesReturned' overlapped
Long Parameter List,Duplicati.Library.Snapshots,Win32USN,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\Win32USN.cs,DeviceIoControl,The method has 8 parameters. Parameters: hDevice' IoControlCode' InBuffer' nInBufferSize' OutBuffer' nOutBufferSize' pBytesReturned' overlapped
Long Parameter List,Duplicati.Library.Snapshots,WinNativeMethods,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WinNativeMethods.cs,GetTokenInformation,The method has 5 parameters. Parameters: tokenhandle' tokeninformationclass' state' bufferlength' actualsize
Long Parameter List,Duplicati.Library.Snapshots,WinNativeMethods,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WinNativeMethods.cs,AdjustTokenPrivileges,The method has 6 parameters. Parameters: tokenhandle' disableprivs' newState' bufferlength' previousState' actualsize
Long Parameter List,Duplicati.Library.Snapshots,WinNativeMethods,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WinNativeMethods.cs,CreateFile,The method has 7 parameters. Parameters: lpFileName' dwDesiredAccess' dwShareMode' lpSecurityAttributes' dwCreationDisposition' dwFlagsAndAttributes' hTemplateFile
Long Identifier,Duplicati.Library.Snapshots,USNHelper,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\USNHelper.cs,,The length of the parameter m_volumeRootFileNameReferenceNumber is 35.
Long Identifier,Duplicati.Library.Snapshots,WinNativeMethods,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WinNativeMethods.cs,,The length of the parameter TOKEN_INFORMATION_CLASS_PRIVILEGES is 34.
Long Statement,Duplicati.Library.Snapshots,MSSQLUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\MSSQLUtility.cs,QueryDBsInfo,The length of the statement  "            string alphadir = Path.Combine(Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().Location)' "alphavss"); " is 126.
Long Statement,Duplicati.Library.Snapshots,MSSQLUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\MSSQLUtility.cs,QueryDBsInfo,The length of the statement  "            IVssImplementation vss = (IVssImplementation)System.Reflection.Assembly.LoadFile(alphadll).CreateInstance("Alphaleonis.Win32.Vss.VssImplementation"); " is 149.
Long Statement,Duplicati.Library.Snapshots,MSSQLUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\MSSQLUtility.cs,QueryDBsInfo,The length of the statement  "                        throw new Duplicati.Library.Interface.UserInformationException("Microsoft SQL Server VSS Writer not found - cannot backup SQL databases."); " is 139.
Long Statement,Duplicati.Library.Snapshots,MSSQLUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\MSSQLUtility.cs,QueryDBsInfo,The length of the statement  "                        m_DBs.Add(new MSSQLDB(component.ComponentName' component.LogicalPath + "\\" + component.ComponentName' paths.Distinct(Utility.Utility.ClientFilenameStringComparer).OrderBy(a => a).ToList())); " is 191.
Long Statement,Duplicati.Library.Snapshots,HyperVUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\HyperVUtility.cs,QueryHyperVGuestsInfo,The length of the statement  "                        m_Guests.Add(new HyperVGuest((string)mObject["ElementName"]' new Guid((string)mObject[_vmIdField])' bIncludePaths ? GetAllVMsPathsVSS()[(string)mObject[_vmIdField]] : null)); " is 174.
Long Statement,Duplicati.Library.Snapshots,HyperVUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\HyperVUtility.cs,GetAllVMsPathsVSS,The length of the statement  "            string alphadir = Path.Combine(Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().Location)' "alphavss"); " is 126.
Long Statement,Duplicati.Library.Snapshots,HyperVUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\HyperVUtility.cs,GetAllVMsPathsVSS,The length of the statement  "            IVssImplementation vss = (IVssImplementation)System.Reflection.Assembly.LoadFile(alphadll).CreateInstance("Alphaleonis.Win32.Vss.VssImplementation"); " is 149.
Long Statement,Duplicati.Library.Snapshots,HyperVUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\HyperVUtility.cs,GetAllVMsPathsVSS,The length of the statement  "                        throw new Duplicati.Library.Interface.UserInformationException("Microsoft Hyper-V VSS Writer not found - cannot backup Hyper-V machines."); " is 139.
Long Statement,Duplicati.Library.Snapshots,HyperVUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\HyperVUtility.cs,GetAllVMsPathsVSS,The length of the statement  "                        ret.Add(component.ComponentName' paths.Distinct(Utility.Utility.ClientFilenameStringComparer).OrderBy(a => a).ToList()); " is 120.
Long Statement,Duplicati.Library.Snapshots,HyperVUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\HyperVUtility.cs,GetVMConfigPathsWMI,The length of the statement  "            using (var mObject1 = new ManagementObjectSearcher(_wmiScope' new ObjectQuery(wmiQuery)).Get().Cast<ManagementObject>().First()) " is 128.
Long Statement,Duplicati.Library.Snapshots,HyperVUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\HyperVUtility.cs,GetVMConfigPathsWMI,The length of the statement  "                        "SELECT * FROM Msvm_VirtualSystemSettingData where VirtualSystemType='Microsoft:Hyper-V:Snapshot:Realized' and {0}='{1}'"' " is 122.
Long Statement,Duplicati.Library.Snapshots,HyperVUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\HyperVUtility.cs,GetVMConfigPathsWMI,The length of the statement  "                            path = Utility.Utility.AppendDirSeparator(Path.Combine((string)snap["ConfigurationDataRoot"]' (string)snap["SuspendDataRoot"])); " is 128.
Long Statement,Duplicati.Library.Snapshots,HyperVUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\HyperVUtility.cs,GetVMConfigPathsWMI,The length of the statement  "                    path = Utility.Utility.AppendDirSeparator(Path.Combine((string)mObject1["ExternalDataRoot"]' "Virtual Machines"' vmID)); " is 120.
Long Statement,Duplicati.Library.Snapshots,HyperVUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\HyperVUtility.cs,GetVMConfigPathsWMI,The length of the statement  "                        path = Utility.Utility.AppendDirSeparator(Path.Combine((string)mObject1["SnapshotDataRoot"]' "Snapshots"' snapID.Replace("Microsoft:"' ""))); " is 141.
Long Statement,Duplicati.Library.Snapshots,HyperVUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\HyperVUtility.cs,GetVMVhdPathsWMI,The length of the statement  "            using (var vm = new ManagementObjectSearcher(_wmiScope' new ObjectQuery(string.Format("select * from Msvm_ComputerSystem where Name = '{0}'"' vmID))) " is 149.
Long Statement,Duplicati.Library.Snapshots,HyperVUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\HyperVUtility.cs,GetVMVhdPathsWMI,The length of the statement  "                    using (var systemObjCollection = ((ManagementObject)sysSettings).GetRelated(_wmiv2Namespace ? "MsVM_StorageAllocationSettingData" : "MsVM_ResourceAllocationSettingData")) " is 170.
Long Statement,Duplicati.Library.Snapshots,HyperVUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\HyperVUtility.cs,GetVMVhdPathsWMI,The length of the statement  "            using (var imgMan = new ManagementObjectSearcher(_wmiScope' new ObjectQuery("select * from MsVM_ImageManagementService")).Get().OfType<ManagementObject>().First()) " is 163.
Long Statement,Duplicati.Library.Snapshots,HyperVUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\HyperVUtility.cs,GetVMVhdPathsWMI,The length of the statement  "                var inParams = imgMan.GetMethodParameters(_wmiv2Namespace ? "GetVirtualHardDiskSettingData" : "GetVirtualHardDiskInfo"); " is 120.
Long Statement,Duplicati.Library.Snapshots,HyperVUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\HyperVUtility.cs,GetVMVhdPathsWMI,The length of the statement  "                    using (var outParams = imgMan.InvokeMethod(_wmiv2Namespace ? "GetVirtualHardDiskSettingData" : "GetVirtualHardDiskInfo"' inParams' null)) " is 137.
Long Statement,Duplicati.Library.Snapshots,LinuxSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\LinuxSnapshot.cs,EnumerateFilesAndFolders,The length of the statement  "                s => Utility.Utility.EnumerateFileSystemEntries(s.Key' callback' this.ListFolders' this.ListFiles' this.GetAttributes' errorCallback) " is 133.
Long Statement,Duplicati.Library.Snapshots,SnapShot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\LinuxSnapshot.cs,ExecuteCommand,The length of the statement  "                program = System.IO.Path.Combine(System.IO.Path.Combine(Duplicati.Library.AutoUpdater.UpdaterManager.InstalledBaseDir' "lvm-scripts")' program); " is 144.
Long Statement,Duplicati.Library.Snapshots,SnapShot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\LinuxSnapshot.cs,ExecuteCommand,The length of the statement  "                        throw new Duplicati.Library.Interface.UserInformationException(Strings.LinuxSnapshot.ExternalProgramTimeoutError(program' commandline)); " is 136.
Long Statement,Duplicati.Library.Snapshots,SnapShot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\LinuxSnapshot.cs,ExecuteCommand,The length of the statement  "                    string output = string.Format("Exit code: {1}{0}{2}{0}{3}"' Environment.NewLine' p.ExitCode' p.StandardOutput.ReadToEnd()' p.StandardError.ReadToEnd()); " is 152.
Long Statement,Duplicati.Library.Snapshots,SnapShot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\LinuxSnapshot.cs,ExecuteCommand,The length of the statement  "                        throw new Duplicati.Library.Interface.UserInformationException(Strings.LinuxSnapshot.ScriptExitCodeError(p.ExitCode' expectedExitCode' output)); " is 144.
Long Statement,Duplicati.Library.Snapshots,SnapShot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\LinuxSnapshot.cs,CreateSnapshotVolume,The length of the statement  "                string output = ExecuteCommand("create-lvm-snapshot.sh"' string.Format("\"{0}\" \"{1}\" \"{2}\""' m_name' m_device' Utility.Utility.AppendDirSeparator(Utility.TempFolder.SystemTempPath))' 0); " is 191.
Long Statement,Duplicati.Library.Snapshots,SnapShot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\LinuxSnapshot.cs,Dispose,The length of the statement  "                    string output = ExecuteCommand("remove-lvm-snapshot.sh"' string.Format("\"{0}\" \"{1}\" \"{2}\""' m_name' m_device' m_tmpDir)' 0); " is 130.
Long Statement,Duplicati.Library.Snapshots,Program,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\Program.cs,ExtractOptions,The length of the statement  "                    if (!string.IsNullOrEmpty(value) && value.Length > 1 && value.StartsWith("\""' StringComparison.Ordinal) && value.EndsWith("\""' StringComparison.Ordinal)) " is 155.
Long Statement,Duplicati.Library.Snapshots,Program,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\Program.cs,Main,The length of the statement  "                    args = new List<string> { System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().Location) }; " is 120.
Long Statement,Duplicati.Library.Snapshots,Program,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\Program.cs,Main,The length of the statement  "                    using (System.IO.FileStream fs = new System.IO.FileStream(filename' System.IO.FileMode.Create' System.IO.FileAccess.ReadWrite' System.IO.FileShare.None)) " is 153.
Long Statement,Duplicati.Library.Snapshots,Program,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\Program.cs,Main,The length of the statement  "                            using (System.IO.FileStream fs2 = new System.IO.FileStream(filename' System.IO.FileMode.Create' System.IO.FileAccess.ReadWrite' System.IO.FileShare.None)) " is 154.
Long Statement,Duplicati.Library.Snapshots,NoSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\NoSnapshot.cs,EnumerateFilesAndFolders,The length of the statement  "                s => Utility.Utility.EnumerateFileSystemEntries(s' callback' this.ListFolders' this.ListFiles' this.GetAttributes' errorCallback) " is 129.
Long Statement,Duplicati.Library.Snapshots,USNHelper,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\USNHelper.cs,EnumerateFilesAndFolders,The length of the statement  "                                excludedFolders = new System.Text.RegularExpressions.Regex(local_filter.ToString()' System.Text.RegularExpressions.RegexOptions.IgnoreCase); " is 140.
Long Statement,Duplicati.Library.Snapshots,USNHelper,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\USNHelper.cs,GetRenamedFileSystemEntries,The length of the statement  "                if (r.Value.Usn >= lastUsn && ((r.Value.Reason & Win32USN.USNReason.USN_REASON_RENAME_NEW_NAME) != 0) &&  r.Key.StartsWith(sourceFolder' Utility.Utility.ClientFilenameStringComparision)) " is 186.
Long Statement,Duplicati.Library.Snapshots,USNHelper,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\USNHelper.cs,ExtractUsnEntries,The length of the statement  "                    string filename = Marshal.PtrToStringUni(new IntPtr(curPtr.ToInt64() + r.FileNameOffset)' r.FileNameLength / sizeof(char)); " is 123.
Long Statement,Duplicati.Library.Snapshots,USNHelper,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\USNHelper.cs,ParseRecordList,The length of the statement  "                    result.Add(new KeyValuePair<string' Win32USN.USN_RECORD>(System.IO.Path.Combine(rootDir' string.Join(System.IO.Path.DirectorySeparatorChar.ToString()' items.ToArray()))' r.Value)); " is 180.
Long Statement,Duplicati.Library.Snapshots,WindowsSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WindowsSnapshot.cs,EnumerateFilesAndFolders,The length of the statement  "                s => Utility.Utility.EnumerateFileSystemEntries(s' callback' this.ListFolders' this.ListFiles' this.GetAttributes' errorCallback) " is 129.
Long Statement,Duplicati.Library.Snapshots,WinNativeMethods,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WinNativeMethods.cs,OpenAsBackupFile,The length of the statement  "            SafeFileHandle hFile = CreateFile(filename' FileAccess.ReadControl' FileShare.None' IntPtr.Zero' CreationDisposition.OpenExisting' FileAttributes.BackupSemantics | FileAttributes.SequentialScan' IntPtr.Zero); " is 208.
Long Statement,Duplicati.Library.Snapshots,WinNativeMethods,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WinNativeMethods.cs,GetBackupPrivilege,The length of the statement  "            if (GetTokenInformation(token' TOKEN_INFORMATION_CLASS_PRIVILEGES' ref TP' Marshal.SizeOf(typeof(TOKEN_PRIVILEGES))' ref outsize) == 0) " is 135.
Long Statement,Duplicati.Library.Snapshots,WinNativeMethods,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WinNativeMethods.cs,PrintTokenInformation,The length of the statement  "                    Console.WriteLine("Invalid LUID {0}:{1}: {2}"' id.HighPart' id.LowPart' new Win32Exception(Marshal.GetLastWin32Error()).Message); " is 129.
Long Statement,Duplicati.Library.Snapshots,SystemIOLinux,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOLinux.cs,SetMetadata,The length of the statement  "            foreach(var x in data.Where(x => x.Key.StartsWith("unix-ext:"' StringComparison.Ordinal)).Select(x => new KeyValuePair<string' byte[]>(x.Key.Substring("unix-ext:".Length)' Convert.FromBase64String(x.Value)))) " is 208.
Long Statement,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,IsPathTooLong,The length of the statement  "            if (path.StartsWith(UNCPREFIX' StringComparison.Ordinal) || path.StartsWith(UNCPREFIX_SERVER' StringComparison.Ordinal) || path.Length > 260) " is 141.
Long Statement,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileOpenRead,The length of the statement  "                try { return System.IO.File.Open(path' System.IO.FileMode.Open' System.IO.FileAccess.Read' System.IO.FileShare.ReadWrite); } " is 124.
Long Statement,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileOpenRead,The length of the statement  "            return Alphaleonis.Win32.Filesystem.File.Open(PrefixWithUNC(path)' FileMode.Open' FileAccess.Read' FileShare.ReadWrite); " is 120.
Long Statement,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileOpenReadWrite,The length of the statement  "                try { return System.IO.File.Open(path' System.IO.FileMode.OpenOrCreate' System.IO.FileAccess.ReadWrite' System.IO.FileShare.Read); } " is 132.
Long Statement,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileOpenReadWrite,The length of the statement  "            return Alphaleonis.Win32.Filesystem.File.Open(PrefixWithUNC(path)' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.Read); " is 128.
Long Statement,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,CreateSymlink,The length of the statement  "            Alphaleonis.Win32.Filesystem.File.CreateSymbolicLink(target' PrefixWithUNC(symlinkfile)' asDir ? Alphaleonis.Win32.Filesystem.SymbolicLinkTarget.Directory : Alphaleonis.Win32.Filesystem.SymbolicLinkTarget.File); " is 211.
Long Statement,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,CreateSymlink,The length of the statement  "                throw new System.IO.IOException(string.Format("Unable to create symlink' check account permissions: {0}"' symlinkfile)); " is 120.
Long Statement,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,SerializeObject,The length of the statement  "                Newtonsoft.Json.JsonSerializer.Create(new Newtonsoft.Json.JsonSerializerSettings() { Culture = System.Globalization.CultureInfo.InvariantCulture }).Serialize(tw' o); " is 165.
Long Statement,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,DeserializeObject,The length of the statement  "                return (T)Newtonsoft.Json.JsonSerializer.Create(new Newtonsoft.Json.JsonSerializerSettings() { Culture = System.Globalization.CultureInfo.InvariantCulture }).Deserialize(tr' typeof(T)); " is 185.
Long Statement,Duplicati.Library.Snapshots.Strings,LinuxSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\Strings.cs,ScriptOutputError,The length of the statement  "{ return LC.L(@"Script returned successfully' but the output was missing the {0} parameter: {1}"' parameter' message); }" is 120.
Complex Conditional,Duplicati.Library.Snapshots,DefineDosDevice,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\DefineDosDevice.cs,DefineDosDevice,The conditional expression  "(di.RootDirectory.FullName.Length == 2 && di.RootDirectory.FullName[1] == ':') || ((di.RootDirectory.FullName.Length == 3 && di.RootDirectory.FullName.EndsWith(":\\"' StringComparison.Ordinal)))"  is complex.
Complex Conditional,Duplicati.Library.Snapshots,Program,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\Program.cs,ExtractOptions,The conditional expression  "!string.IsNullOrEmpty(value) && value.Length > 1 && value.StartsWith("\""' StringComparison.Ordinal) && value.EndsWith("\""' StringComparison.Ordinal)"  is complex.
Complex Conditional,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,CreateSymlink,The conditional expression  "(!asDir && FileExists(symlinkfile)) || (asDir && DirectoryExists(symlinkfile))"  is complex.
Empty Catch Block,Duplicati.Library.Snapshots,MSSQLUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\MSSQLUtility.cs,MSSQLUtility,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,LinuxSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\LinuxSnapshot.cs,LinuxSnapshot,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,WindowsSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WindowsSnapshot.cs,WindowsSnapshot,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,WindowsSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WindowsSnapshot.cs,WindowsSnapshot,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,WindowsSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WindowsSnapshot.cs,ListFolders,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,WindowsSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WindowsSnapshot.cs,ListFolders,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,WindowsSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WindowsSnapshot.cs,ListFolders,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,WindowsSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WindowsSnapshot.cs,ListFiles,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,WindowsSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WindowsSnapshot.cs,ListFiles,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,WindowsSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WindowsSnapshot.cs,ListFiles,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,WindowsSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WindowsSnapshot.cs,GetLastWriteTimeUtc,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,WindowsSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WindowsSnapshot.cs,GetCreationTimeUtc,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,WindowsSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WindowsSnapshot.cs,GetSymlinkTarget,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,WindowsSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WindowsSnapshot.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,WindowsSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WindowsSnapshot.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,WindowsSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WindowsSnapshot.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,WindowsSnapshot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WindowsSnapshot.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,NoSnapshotWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\NoSnapshotWindows.cs,GetSymlinkTarget,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,NoSnapshotWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\NoSnapshotWindows.cs,GetSymlinkTarget,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,NoSnapshotWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\NoSnapshotWindows.cs,ListFiles,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,NoSnapshotWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\NoSnapshotWindows.cs,ListFolders,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOLinux,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOLinux.cs,SetMetadata,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOLinux,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOLinux.cs,SetMetadata,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,DirectoryDelete,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,DirectoryDelete,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,DirectoryCreate,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,DirectoryCreate,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,DirectoryExists,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,DirectoryExists,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileDelete,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileDelete,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileSetLastWriteTimeUtc,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileSetLastWriteTimeUtc,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileSetCreationTimeUtc,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileSetCreationTimeUtc,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileGetLastWriteTimeUtc,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileGetLastWriteTimeUtc,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileGetCreationTimeUtc,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileGetCreationTimeUtc,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileExists,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileExists,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileOpenRead,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileOpenRead,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileOpenWrite,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileOpenWrite,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileOpenReadWrite,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileOpenReadWrite,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileCreate,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileCreate,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,GetFileAttributes,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,GetFileAttributes,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,SetFileAttributes,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,SetFileAttributes,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,CreateSymlink,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,EnumerateFileSystemEntries,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,EnumerateFileSystemEntries,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,PathGetFileName,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,PathGetFileName,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,PathGetDirectoryName,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,PathGetDirectoryName,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,PathGetExtension,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,PathGetExtension,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,PathChangeExtension,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,PathChangeExtension,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,DirectorySetLastWriteTimeUtc,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,DirectorySetLastWriteTimeUtc,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,DirectorySetCreationTimeUtc,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,DirectorySetCreationTimeUtc,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,DirectoryGetLastWriteTimeUtc,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,DirectoryGetLastWriteTimeUtc,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,DirectoryGetCreationTimeUtc,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,DirectoryGetCreationTimeUtc,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileMove,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileMove,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileLength,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,FileLength,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,DirectoryDelete,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,DirectoryDelete,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,GetAccessControlDir,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,GetAccessControlDir,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,GetAccessControlFile,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,GetAccessControlFile,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,SetAccessControlFile,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,SetAccessControlFile,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,SetAccessControlDir,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,SetAccessControlDir,The method has an empty catch block.
Magic Number,Duplicati.Library.Snapshots,DefineDosDevice,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\DefineDosDevice.cs,DefineDosDevice,The following statement contains a magic number: if (string.IsNullOrEmpty(drive))              {                  List<char> drives = new List<char>("DEFGHIJKLMNOPQRSTUVWXYZ".ToCharArray());                  foreach (DriveInfo di in DriveInfo.GetDrives())                  {                      if ((di.RootDirectory.FullName.Length == 2 && di.RootDirectory.FullName[1] == ':') || ((di.RootDirectory.FullName.Length == 3 && di.RootDirectory.FullName.EndsWith(":\\"' StringComparison.Ordinal))))                      {                          int i = drives.IndexOf(di.RootDirectory.FullName[0]);                          if (i >= 0)                              drives.RemoveAt(i);                      }                  }                    if (drives.Count == 0)                      throw new IOException("No drive letters available");                  drive = drives[0].ToString() + ':';              }
Magic Number,Duplicati.Library.Snapshots,DefineDosDevice,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\DefineDosDevice.cs,DefineDosDevice,The following statement contains a magic number: if (string.IsNullOrEmpty(drive))              {                  List<char> drives = new List<char>("DEFGHIJKLMNOPQRSTUVWXYZ".ToCharArray());                  foreach (DriveInfo di in DriveInfo.GetDrives())                  {                      if ((di.RootDirectory.FullName.Length == 2 && di.RootDirectory.FullName[1] == ':') || ((di.RootDirectory.FullName.Length == 3 && di.RootDirectory.FullName.EndsWith(":\\"' StringComparison.Ordinal))))                      {                          int i = drives.IndexOf(di.RootDirectory.FullName[0]);                          if (i >= 0)                              drives.RemoveAt(i);                      }                  }                    if (drives.Count == 0)                      throw new IOException("No drive letters available");                  drive = drives[0].ToString() + ':';              }
Magic Number,Duplicati.Library.Snapshots,HyperVUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\HyperVUtility.cs,HyperVUtility,The following statement contains a magic number: _wmiv2Namespace = Environment.OSVersion.Version.Major >= 6 && Environment.OSVersion.Version.Minor >= 2;
Magic Number,Duplicati.Library.Snapshots,HyperVUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\HyperVUtility.cs,HyperVUtility,The following statement contains a magic number: _wmiv2Namespace = Environment.OSVersion.Version.Major >= 6 && Environment.OSVersion.Version.Minor >= 2;
Magic Number,Duplicati.Library.Snapshots,HyperVUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\HyperVUtility.cs,GetVMVhdPathsWMI,The following statement contains a magic number: using (var vm = new ManagementObjectSearcher(_wmiScope' new ObjectQuery(string.Format("select * from Msvm_ComputerSystem where Name = '{0}'"' vmID)))                  .Get().OfType<ManagementObject>().First())              {                  foreach (var sysSettings in vm.GetRelated("MsVM_VirtualSystemSettingData"))                      using (var systemObjCollection = ((ManagementObject)sysSettings).GetRelated(_wmiv2Namespace ? "MsVM_StorageAllocationSettingData" : "MsVM_ResourceAllocationSettingData"))                      {                          List<string> tempvhd;                            if (_wmiv2Namespace)                              tempvhd = (from ManagementBaseObject systemBaseObj in systemObjCollection                                         where ((UInt16)systemBaseObj["ResourceType"] == 31                                                 && (string)systemBaseObj["ResourceSubType"] == "Microsoft:Hyper-V:Virtual Hard Disk")                                         select ((string[])systemBaseObj["HostResource"])[0]).ToList();                          else                              tempvhd = (from ManagementBaseObject systemBaseObj in systemObjCollection                                         where ((UInt16)systemBaseObj["ResourceType"] == 21                                                 && (string)systemBaseObj["ResourceSubType"] == "Microsoft Virtual Hard Disk")                                         select ((string[])systemBaseObj["Connection"])[0]).ToList();                            foreach (var vhd in tempvhd)                              result.Add(vhd);                      }              }
Magic Number,Duplicati.Library.Snapshots,HyperVUtility,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\HyperVUtility.cs,GetVMVhdPathsWMI,The following statement contains a magic number: using (var vm = new ManagementObjectSearcher(_wmiScope' new ObjectQuery(string.Format("select * from Msvm_ComputerSystem where Name = '{0}'"' vmID)))                  .Get().OfType<ManagementObject>().First())              {                  foreach (var sysSettings in vm.GetRelated("MsVM_VirtualSystemSettingData"))                      using (var systemObjCollection = ((ManagementObject)sysSettings).GetRelated(_wmiv2Namespace ? "MsVM_StorageAllocationSettingData" : "MsVM_ResourceAllocationSettingData"))                      {                          List<string> tempvhd;                            if (_wmiv2Namespace)                              tempvhd = (from ManagementBaseObject systemBaseObj in systemObjCollection                                         where ((UInt16)systemBaseObj["ResourceType"] == 31                                                 && (string)systemBaseObj["ResourceSubType"] == "Microsoft:Hyper-V:Virtual Hard Disk")                                         select ((string[])systemBaseObj["HostResource"])[0]).ToList();                          else                              tempvhd = (from ManagementBaseObject systemBaseObj in systemObjCollection                                         where ((UInt16)systemBaseObj["ResourceType"] == 21                                                 && (string)systemBaseObj["ResourceSubType"] == "Microsoft Virtual Hard Disk")                                         select ((string[])systemBaseObj["Connection"])[0]).ToList();                            foreach (var vhd in tempvhd)                              result.Add(vhd);                      }              }
Magic Number,Duplicati.Library.Snapshots,SnapShot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\LinuxSnapshot.cs,ExecuteCommand,The following statement contains a magic number: try                  {                      System.Diagnostics.Process p = System.Diagnostics.Process.Start(inf);                        //Allow up 20 seconds for the execution                      if (!p.WaitForExit(30 * 1000))                      {                          //Attempt to close down semi-nicely                          p.Kill();                          p.WaitForExit(5 * 1000); //This should work' and if it does' prevents a race with any cleanup invocations                            throw new Duplicati.Library.Interface.UserInformationException(Strings.LinuxSnapshot.ExternalProgramTimeoutError(program' commandline));                      }                        //Build the output string. Since the process has exited' these cannot block                      string output = string.Format("Exit code: {1}{0}{2}{0}{3}"' Environment.NewLine' p.ExitCode' p.StandardOutput.ReadToEnd()' p.StandardError.ReadToEnd());                        //Throw an exception if something went wrong                      if (p.ExitCode != expectedExitCode)                          throw new Duplicati.Library.Interface.UserInformationException(Strings.LinuxSnapshot.ScriptExitCodeError(p.ExitCode' expectedExitCode' output));                        return output;                  }                  catch (Exception ex)                  {                      throw new Exception(Strings.LinuxSnapshot.ExternalProgramLaunchError(ex.ToString()' program' commandline));                  }
Magic Number,Duplicati.Library.Snapshots,SnapShot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\LinuxSnapshot.cs,ExecuteCommand,The following statement contains a magic number: try                  {                      System.Diagnostics.Process p = System.Diagnostics.Process.Start(inf);                        //Allow up 20 seconds for the execution                      if (!p.WaitForExit(30 * 1000))                      {                          //Attempt to close down semi-nicely                          p.Kill();                          p.WaitForExit(5 * 1000); //This should work' and if it does' prevents a race with any cleanup invocations                            throw new Duplicati.Library.Interface.UserInformationException(Strings.LinuxSnapshot.ExternalProgramTimeoutError(program' commandline));                      }                        //Build the output string. Since the process has exited' these cannot block                      string output = string.Format("Exit code: {1}{0}{2}{0}{3}"' Environment.NewLine' p.ExitCode' p.StandardOutput.ReadToEnd()' p.StandardError.ReadToEnd());                        //Throw an exception if something went wrong                      if (p.ExitCode != expectedExitCode)                          throw new Duplicati.Library.Interface.UserInformationException(Strings.LinuxSnapshot.ScriptExitCodeError(p.ExitCode' expectedExitCode' output));                        return output;                  }                  catch (Exception ex)                  {                      throw new Exception(Strings.LinuxSnapshot.ExternalProgramLaunchError(ex.ToString()' program' commandline));                  }
Magic Number,Duplicati.Library.Snapshots,SnapShot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\LinuxSnapshot.cs,ExecuteCommand,The following statement contains a magic number: try                  {                      System.Diagnostics.Process p = System.Diagnostics.Process.Start(inf);                        //Allow up 20 seconds for the execution                      if (!p.WaitForExit(30 * 1000))                      {                          //Attempt to close down semi-nicely                          p.Kill();                          p.WaitForExit(5 * 1000); //This should work' and if it does' prevents a race with any cleanup invocations                            throw new Duplicati.Library.Interface.UserInformationException(Strings.LinuxSnapshot.ExternalProgramTimeoutError(program' commandline));                      }                        //Build the output string. Since the process has exited' these cannot block                      string output = string.Format("Exit code: {1}{0}{2}{0}{3}"' Environment.NewLine' p.ExitCode' p.StandardOutput.ReadToEnd()' p.StandardError.ReadToEnd());                        //Throw an exception if something went wrong                      if (p.ExitCode != expectedExitCode)                          throw new Duplicati.Library.Interface.UserInformationException(Strings.LinuxSnapshot.ScriptExitCodeError(p.ExitCode' expectedExitCode' output));                        return output;                  }                  catch (Exception ex)                  {                      throw new Exception(Strings.LinuxSnapshot.ExternalProgramLaunchError(ex.ToString()' program' commandline));                  }
Magic Number,Duplicati.Library.Snapshots,SnapShot,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\LinuxSnapshot.cs,ExecuteCommand,The following statement contains a magic number: try                  {                      System.Diagnostics.Process p = System.Diagnostics.Process.Start(inf);                        //Allow up 20 seconds for the execution                      if (!p.WaitForExit(30 * 1000))                      {                          //Attempt to close down semi-nicely                          p.Kill();                          p.WaitForExit(5 * 1000); //This should work' and if it does' prevents a race with any cleanup invocations                            throw new Duplicati.Library.Interface.UserInformationException(Strings.LinuxSnapshot.ExternalProgramTimeoutError(program' commandline));                      }                        //Build the output string. Since the process has exited' these cannot block                      string output = string.Format("Exit code: {1}{0}{2}{0}{3}"' Environment.NewLine' p.ExitCode' p.StandardOutput.ReadToEnd()' p.StandardError.ReadToEnd());                        //Throw an exception if something went wrong                      if (p.ExitCode != expectedExitCode)                          throw new Duplicati.Library.Interface.UserInformationException(Strings.LinuxSnapshot.ScriptExitCodeError(p.ExitCode' expectedExitCode' output));                        return output;                  }                  catch (Exception ex)                  {                      throw new Exception(Strings.LinuxSnapshot.ExternalProgramLaunchError(ex.ToString()' program' commandline));                  }
Magic Number,Duplicati.Library.Snapshots,Program,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\Program.cs,ExtractOptions,The following statement contains a magic number: for (int i = 0; i < args.Count; i++)              {                  if (args[i].StartsWith("--"' StringComparison.Ordinal))                  {                      string key = null;                      string value = null;                      if (args[i].IndexOf("="' StringComparison.Ordinal) > 0)                      {                          key = args[i].Substring(0' args[i].IndexOf("="' StringComparison.Ordinal));                          value = args[i].Substring(args[i].IndexOf("="' StringComparison.Ordinal) + 1);                      }                      else                          key = args[i];                        //Skip the leading --                      key = key.Substring(2).ToLower();                      if (!string.IsNullOrEmpty(value) && value.Length > 1 && value.StartsWith("\""' StringComparison.Ordinal) && value.EndsWith("\""' StringComparison.Ordinal))                          value = value.Substring(1' value.Length - 2);                        //Last argument overwrites the current                      options[key] = value;                        args.RemoveAt(i);                      i--;                  }              }
Magic Number,Duplicati.Library.Snapshots,Program,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\Program.cs,ExtractOptions,The following statement contains a magic number: for (int i = 0; i < args.Count; i++)              {                  if (args[i].StartsWith("--"' StringComparison.Ordinal))                  {                      string key = null;                      string value = null;                      if (args[i].IndexOf("="' StringComparison.Ordinal) > 0)                      {                          key = args[i].Substring(0' args[i].IndexOf("="' StringComparison.Ordinal));                          value = args[i].Substring(args[i].IndexOf("="' StringComparison.Ordinal) + 1);                      }                      else                          key = args[i];                        //Skip the leading --                      key = key.Substring(2).ToLower();                      if (!string.IsNullOrEmpty(value) && value.Length > 1 && value.StartsWith("\""' StringComparison.Ordinal) && value.EndsWith("\""' StringComparison.Ordinal))                          value = value.Substring(1' value.Length - 2);                        //Last argument overwrites the current                      options[key] = value;                        args.RemoveAt(i);                      i--;                  }              }
Magic Number,Duplicati.Library.Snapshots,USNHelper,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\USNHelper.cs,USNHelper,The following statement contains a magic number: try              {                  string devicename = @"\\.\" + System.IO.Path.GetPathRoot(path).TrimEnd('\\');                  if (volumeRoot != null)                      volumeRoot = volumeRoot.TrimEnd('\\');                    m_volumeHandle = Win32USN.CreateFile(volumeRoot == null ? devicename : volumeRoot' Win32USN.EFileAccess.GenericRead' Win32USN.EFileShare.ReadWrite' IntPtr.Zero' Win32USN.ECreationDisposition.OpenExisting' Win32USN.EFileAttributes.BackupSemantics' IntPtr.Zero);                  if (m_volumeHandle == null || m_volumeHandle.IsInvalid)                      throw new Win32Exception(Marshal.GetLastWin32Error());                    uint bytesReturned = 0;                  if (!Win32USN.DeviceIoControl(m_volumeHandle' Win32USN.EIOControlCode.FsctlQueryUsnJournal' null' 0' out m_journal' (uint)Marshal.SizeOf(typeof(Win32USN.USN_JOURNAL_DATA))' ref bytesReturned' IntPtr.Zero))                      throw new Win32Exception(Marshal.GetLastWin32Error());                    Win32USN.BY_HANDLE_FILE_INFORMATION fileInfo;                  using (SafeFileHandle driveHandle = Win32USN.CreateFile(System.IO.Path.GetPathRoot(path)' Win32USN.EFileAccess.GenericRead' Win32USN.EFileShare.ReadWrite' IntPtr.Zero' Win32USN.ECreationDisposition.OpenExisting' Win32USN.EFileAttributes.BackupSemantics' IntPtr.Zero))                      if (!Win32USN.GetFileInformationByHandle(driveHandle' out fileInfo))                          throw new Win32Exception(Marshal.GetLastWin32Error());                    m_volumeRootFileNameReferenceNumber = ((ulong)fileInfo.FileIndexHigh << 32) | ((ulong)fileInfo.FileIndexLow);              }              catch              {                  if (m_volumeHandle != null)                  {                      m_volumeHandle.Dispose();                      m_volumeHandle = null;                  }                    throw;              }
Magic Number,Duplicati.Library.Snapshots,USNHelper,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\USNHelper.cs,ExtractUsnEntries,The following statement contains a magic number: if (bytesLeft < 8)                  throw new Exception(Strings.USNHelper.EmptyResponseError);
Magic Number,Duplicati.Library.Snapshots,USNHelper,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\USNHelper.cs,ExtractUsnEntries,The following statement contains a magic number: curPtr = new IntPtr(curPtr.ToInt64() + 8);
Magic Number,Duplicati.Library.Snapshots,USNHelper,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\USNHelper.cs,ExtractUsnEntries,The following statement contains a magic number: bytesLeft -= 8;
Magic Number,Duplicati.Library.Snapshots,USNHelper,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\USNHelper.cs,ExtractUsnEntries,The following statement contains a magic number: while (bytesLeft > USN_RECORD_SIZE)              {                  Win32USN.USN_RECORD r = (Win32USN.USN_RECORD)Marshal.PtrToStructure(curPtr' typeof(Win32USN.USN_RECORD));                    //According to MSDN' apps should not handle data less than 2.0' http://msdn.microsoft.com/en-us/library/aa365722.aspx                  if (r.MajorVersion >= 2)                  {                      string filename = Marshal.PtrToStringUni(new IntPtr(curPtr.ToInt64() + r.FileNameOffset)' r.FileNameLength / sizeof(char));                        if (r.Usn > m_journal.NextUsn)                      {                          moreEntries = false;                          break;                      }                        records.Add(new KeyValuePair<string' Win32USN.USN_RECORD>(filename' r));                  }                  bytesLeft -= (int)r.RecordLength;                  curPtr = new IntPtr(curPtr.ToInt64() + r.RecordLength);              }
Magic Number,Duplicati.Library.Snapshots,USNHelper,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\USNHelper.cs,BuildUSNTable,The following statement contains a magic number: const int ALLOCATED_MEMORY = 64 * 1024;
Magic Number,Duplicati.Library.Snapshots,USNHelper,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\USNHelper.cs,BuildUSNTable,The following statement contains a magic number: const int ALLOCATED_MEMORY = 64 * 1024;
Magic Number,Duplicati.Library.Snapshots,USNHelper,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\USNHelper.cs,GetChangedItems,The following statement contains a magic number: const int ALLOCATED_MEMORY = 64 * 1024;
Magic Number,Duplicati.Library.Snapshots,USNHelper,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\USNHelper.cs,GetChangedItems,The following statement contains a magic number: const int ALLOCATED_MEMORY = 64 * 1024;
Magic Number,Duplicati.Library.Snapshots,WinNativeMethods,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WinNativeMethods.cs,PrintTokenInformation,The following statement contains a magic number: StringBuilder sbname = new StringBuilder(1024 * 4);
Magic Number,Duplicati.Library.Snapshots,WinNativeMethods,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\WinNativeMethods.cs,PrintTokenInformation,The following statement contains a magic number: StringBuilder sbname = new StringBuilder(1024 * 4);
Magic Number,Duplicati.Library.Snapshots,SystemIOLinux,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOLinux.cs,SetMetadata,The following statement contains a magic number: if (restorePermissions && data.ContainsKey("unix:uid-gid-perm"))              {                  var parts = data["unix:uid-gid-perm"].Split(new char[] { '-' });                  if (parts.Length == 3)                  {                      long uid;                      long gid;                      long perm;                        if (long.TryParse(parts[0]' out uid) && long.TryParse(parts[1]' out gid) && long.TryParse(parts[2]' out perm))                      {                          if (data.ContainsKey("unix:owner-name"))                              try { uid = UnixSupport.File.GetUserID(data["unix:owner-name"]); }                              catch { }                            if (data.ContainsKey("unix:group-name"))                              try { gid = UnixSupport.File.GetGroupID(data["unix:group-name"]); }                              catch { }                            UnixSupport.File.SetUserGroupAndPermissions(f' uid' gid' perm);                      }                  }              }
Magic Number,Duplicati.Library.Snapshots,SystemIOLinux,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOLinux.cs,SetMetadata,The following statement contains a magic number: if (restorePermissions && data.ContainsKey("unix:uid-gid-perm"))              {                  var parts = data["unix:uid-gid-perm"].Split(new char[] { '-' });                  if (parts.Length == 3)                  {                      long uid;                      long gid;                      long perm;                        if (long.TryParse(parts[0]' out uid) && long.TryParse(parts[1]' out gid) && long.TryParse(parts[2]' out perm))                      {                          if (data.ContainsKey("unix:owner-name"))                              try { uid = UnixSupport.File.GetUserID(data["unix:owner-name"]); }                              catch { }                            if (data.ContainsKey("unix:group-name"))                              try { gid = UnixSupport.File.GetGroupID(data["unix:group-name"]); }                              catch { }                            UnixSupport.File.SetUserGroupAndPermissions(f' uid' gid' perm);                      }                  }              }
Magic Number,Duplicati.Library.Snapshots,SystemIOWindows,C:\repos\duplicati_duplicati\Duplicati\Library\Snapshots\SystemIOWindows.cs,IsPathTooLong,The following statement contains a magic number: if (path.StartsWith(UNCPREFIX' StringComparison.Ordinal) || path.StartsWith(UNCPREFIX_SERVER' StringComparison.Ordinal) || path.Length > 260)                  return true;
