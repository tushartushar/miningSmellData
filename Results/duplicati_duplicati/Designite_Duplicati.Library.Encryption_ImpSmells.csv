Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Duplicati.Library.Encryption,GPGEncryption,C:\repos\duplicati_duplicati\Duplicati\Library\Encryption\GPGEncryption.cs,GPGEncryption,Cyclomatic complexity of the method is 8
Long Identifier,Duplicati.Library.Encryption,GPGEncryption,C:\repos\duplicati_duplicati\Duplicati\Library\Encryption\GPGEncryption.cs,,The length of the parameter COMMANDLINE_OPTIONS_DISABLE_ARMOR is 33.
Long Identifier,Duplicati.Library.Encryption,GPGEncryption,C:\repos\duplicati_duplicati\Duplicati\Library\Encryption\GPGEncryption.cs,,The length of the parameter COMMANDLINE_OPTIONS_ENABLE_ARMOR is 32.
Long Identifier,Duplicati.Library.Encryption,GPGEncryption,C:\repos\duplicati_duplicati\Duplicati\Library\Encryption\GPGEncryption.cs,,The length of the parameter COMMANDLINE_OPTIONS_ENCRYPTION_OPTIONS is 38.
Long Identifier,Duplicati.Library.Encryption,GPGEncryption,C:\repos\duplicati_duplicati\Duplicati\Library\Encryption\GPGEncryption.cs,,The length of the parameter COMMANDLINE_OPTIONS_DECRYPTION_OPTIONS is 38.
Long Identifier,Duplicati.Library.Encryption,GPGEncryption,C:\repos\duplicati_duplicati\Duplicati\Library\Encryption\GPGEncryption.cs,,The length of the parameter COMMANDLINE_OPTIONS_ENCRYPTION_COMMAND is 38.
Long Identifier,Duplicati.Library.Encryption,GPGEncryption,C:\repos\duplicati_duplicati\Duplicati\Library\Encryption\GPGEncryption.cs,,The length of the parameter COMMANDLINE_OPTIONS_DECRYPTION_COMMAND is 38.
Long Identifier,Duplicati.Library.Encryption,GPGEncryption,C:\repos\duplicati_duplicati\Duplicati\Library\Encryption\GPGEncryption.cs,,The length of the parameter GPG_COMMANDLINE_STANDARD_OPTIONS is 32.
Long Identifier,Duplicati.Library.Encryption,GPGEncryption,C:\repos\duplicati_duplicati\Duplicati\Library\Encryption\GPGEncryption.cs,,The length of the parameter GPG_ENCRYPTION_DEFAULT_OPTIONS is 30.
Long Identifier,Duplicati.Library.Encryption,GPGEncryption,C:\repos\duplicati_duplicati\Duplicati\Library\Encryption\GPGEncryption.cs,,The length of the parameter GPG_DECRYPTION_DEFAULT_OPTIONS is 30.
Long Statement,Duplicati.Library.Encryption,EncryptionBase,C:\repos\duplicati_duplicati\Duplicati\Library\Encryption\EncryptionBase.cs,Decrypt,The length of the statement  "                throw new System.Security.Cryptography.CryptographicException(Strings.EncryptionBase.DecryptionError(cex.Message)' cex); " is 120.
Long Statement,Duplicati.Library.Encryption.Strings,GPGEncryption,C:\repos\duplicati_duplicati\Duplicati\Library\Encryption\Strings.cs,GpgencryptionencryptioncommandLong,The length of the statement  "{ return LC.L(@"Overrides the default GPG encryption command ""{0}""' normal usage is to request asymetric encryption with the setting {1}"' commandname' optionvalue); }" is 169.
Magic Number,Duplicati.Library.Encryption,AESEncryption,C:\repos\duplicati_duplicati\Duplicati\Library\Encryption\AESEncryption.cs,AESEncryption,The following statement contains a magic number: if (int.TryParse(strTL' out useTL))              {                  // finally set thread level in a range of 0 (default) to 4                  m_usethreadlevel = Math.Max(0' (Math.Min(4' useTL)));              }
Magic Number,Duplicati.Library.Encryption,EncryptionBase,C:\repos\duplicati_duplicati\Duplicati\Library\Encryption\EncryptionBase.cs,SizeOverhead,The following statement contains a magic number: using (Utility.TempFile t1 = new Duplicati.Library.Utility.TempFile())              using (Utility.TempFile t2 = new Duplicati.Library.Utility.TempFile())              {                  using (System.IO.Stream s1 = System.IO.File.Create(t1))                  {                      long bytesleft = filesize;                      byte[] buf = new byte[1024];                      Random rnd = new Random();                      while (bytesleft > 0)                      {                          rnd.NextBytes(buf);                          s1.Write(buf' 0' (int)Math.Min(buf.Length' bytesleft));                          bytesleft -= buf.Length;                      }                  }                    Encrypt(t1' t2);                    return Math.Max(0' new System.IO.FileInfo(t2).Length - filesize);              }
Magic Number,Duplicati.Library.Encryption,GPGStreamWrapper,C:\repos\duplicati_duplicati\Duplicati\Library\Encryption\GPGStreamWrapper.cs,Dispose,The following statement contains a magic number: if (m_p != null)              {                  m_basestream.Close();                    if (!m_t.Join(5000))                      throw new System.Security.Cryptography.CryptographicException(Strings.GPGStreamWrapper.GPGFlushError);                    if (!m_p.WaitForExit(5000))                      throw new System.Security.Cryptography.CryptographicException(Strings.GPGStreamWrapper.GPGTerminateError);                    if (!m_p.StandardError.EndOfStream)                  {                      string errmsg = m_p.StandardError.ReadToEnd();                      if (errmsg.Contains("decryption failed:"))                          throw new System.Security.Cryptography.CryptographicException(Strings.GPGStreamWrapper.DecryptionError(errmsg));                  }                    m_p.Dispose();                  m_p = null;                    m_t = null;              }
Magic Number,Duplicati.Library.Encryption,GPGStreamWrapper,C:\repos\duplicati_duplicati\Duplicati\Library\Encryption\GPGStreamWrapper.cs,Dispose,The following statement contains a magic number: if (m_p != null)              {                  m_basestream.Close();                    if (!m_t.Join(5000))                      throw new System.Security.Cryptography.CryptographicException(Strings.GPGStreamWrapper.GPGFlushError);                    if (!m_p.WaitForExit(5000))                      throw new System.Security.Cryptography.CryptographicException(Strings.GPGStreamWrapper.GPGTerminateError);                    if (!m_p.StandardError.EndOfStream)                  {                      string errmsg = m_p.StandardError.ReadToEnd();                      if (errmsg.Contains("decryption failed:"))                          throw new System.Security.Cryptography.CryptographicException(Strings.GPGStreamWrapper.DecryptionError(errmsg));                  }                    m_p.Dispose();                  m_p = null;                    m_t = null;              }
Magic Number,Duplicati.Library.Encryption,GPGEncryption,C:\repos\duplicati_duplicati\Duplicati\Library\Encryption\GPGEncryption.cs,Execute,The following statement contains a magic number: try              {                  p = System.Diagnostics.Process.Start(psi);                  p.StandardInput.WriteLine(m_key);                  p.StandardInput.Flush();                    System.Threading.Thread.Sleep(1000);                  if (p.HasExited)                      throw new Exception(p.StandardError.ReadToEnd());              }              catch (Exception ex)              {                  throw new Exception(Strings.GPGEncryption.GPGExecuteError(m_programpath' args' ex.Message)' ex);              }
