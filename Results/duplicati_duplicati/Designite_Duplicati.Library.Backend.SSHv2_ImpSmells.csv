Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Duplicati.Library.Backend,SSHv2,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\SSHv2Backend.cs,SSHv2,Cyclomatic complexity of the method is 9
Complex Method,Duplicati.Library.Backend,KeyGenerator,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyGenerator.cs,Execute,Cyclomatic complexity of the method is 9
Complex Method,Duplicati.Library.Backend,KeyUploader,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyUploader.cs,Execute,Cyclomatic complexity of the method is 19
Long Parameter List,Duplicati.Library.Backend,KeyGenerator,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyGenerator.cs,OutputKey,The method has 5 parameters.
Long Statement,Duplicati.Library.Backend,SSHv2,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\SSHv2Backend.cs,Put,The length of the statement  "	using (System.IO.FileStream fs = System.IO.File.Open (filename' System.IO.FileMode.Open' System.IO.FileAccess.Read' System.IO.FileShare.Read)) " is 142.
Long Statement,Duplicati.Library.Backend,SSHv2,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\SSHv2Backend.cs,Get,The length of the statement  "	using (System.IO.FileStream fs = System.IO.File.Open (filename' System.IO.FileMode.Create' System.IO.FileAccess.Write' System.IO.FileShare.None)) " is 145.
Long Statement,Duplicati.Library.Backend,SSHv2,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\SSHv2Backend.cs,CreateConnection,The length of the statement  "		string hostFingerprint = e.HostKeyName + " " + e.KeyLength.ToString () + " " + BitConverter.ToString (e.FingerPrint).Replace ('-'' ':'); " is 136.
Long Statement,Duplicati.Library.Backend,SSHv2,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\SSHv2Backend.cs,CreateConnection,The length of the statement  "			throw new Library.Utility.HostKeyException (Strings.SSHv2Backend.FingerprintNotSpecifiedManagedError (hostFingerprint.ToLower ()' SSH_FINGERPRINT_OPTION' SSH_FINGERPRINT_ACCEPT_ANY_OPTION)' hostFingerprint' m_fingerprint); " is 222.
Long Statement,Duplicati.Library.Backend,SSHv2,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\SSHv2Backend.cs,CreateConnection,The length of the statement  "			throw new Library.Utility.HostKeyException (Strings.SSHv2Backend.FingerprintNotMatchManagedError (hostFingerprint.ToLower ())' hostFingerprint' m_fingerprint); " is 159.
Long Statement,Duplicati.Library.Backend,KeyGenerator,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyGenerator.cs,Execute,The length of the statement  "		return OutputKey (EncodeDER (privateEntries)' EncodePEM (publicEntries)' KEY_TEMPLATE_RSA' PUB_KEY_FORMAT_RSA' username); " is 121.
Long Statement,Duplicati.Library.Backend,KeyGenerator,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyGenerator.cs,Execute,The length of the statement  "		return OutputKey (EncodeDER (privateEntries)' EncodePEM (publicEntries)' KEY_TEMPLATE_DSA' PUB_KEY_FORMAT_DSA' username); " is 121.
Long Statement,Duplicati.Library.Backend.Strings,SSHv2Backend,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\Strings.cs,DescriptionSshkeyLong,The length of the statement  "	return LC.L (@"An url-encoded SSH private key. The private key must be prefixed with {0}. If the file is encrypted' the password supplied is used to decrypt the keyfile.  If this option is supplied' the password is not used to authenticate. This option only works when using the managed SSH client."' urlprefix); " is 312.
Long Statement,Duplicati.Library.Backend.Strings,SSHv2Backend,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\Strings.cs,FingerprintNotMatchManagedError,The length of the statement  "	return LC.L (@"Validation of server fingerprint failed. Server returned fingerprint ""{0}"". Cause of this message is either not correct configuration or Man-in-the-middle attack!"' fingerprint); " is 195.
Long Statement,Duplicati.Library.Backend.Strings,SSHv2Backend,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\Strings.cs,FingerprintNotSpecifiedManagedError,The length of the statement  "	return LC.L (@"Please add --{1}=""{0}"" to trust this host. Optionally you can use --{2} (NOT SECURE) for testing!"' fingerprint' hostkeyoption' allkeysoptions); " is 161.
Empty Catch Block,Duplicati.Library.Backend,SSHv2,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\SSHv2Backend.cs,Dispose,The method has an empty catch block.
Magic Number,Duplicati.Library.Backend,KeyGenerator,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyGenerator.cs,EncodePEMLength,The following statement contains a magic number: s.WriteByte ((byte)((length >> 24) & 0xff));  
Magic Number,Duplicati.Library.Backend,KeyGenerator,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyGenerator.cs,EncodePEMLength,The following statement contains a magic number: s.WriteByte ((byte)((length >> 16) & 0xff));  
Magic Number,Duplicati.Library.Backend,KeyGenerator,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyGenerator.cs,EncodePEMLength,The following statement contains a magic number: s.WriteByte ((byte)((length >> 8) & 0xff));  
Magic Number,Duplicati.Library.Backend,KeyGenerator,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyGenerator.cs,EncodeDERLength,The following statement contains a magic number: if (length < 0x7f) {  	s.WriteByte ((byte)length);  } else if (length <= 0x7fff) {  	s.WriteByte (0x82);  	s.WriteByte ((byte)((length >> 8) & 0xff));  	s.WriteByte ((byte)(length & 0xff));  } else {  	s.WriteByte (0x84);  	s.WriteByte ((byte)((length >> 24) & 0xff));  	s.WriteByte ((byte)((length >> 16) & 0xff));  	s.WriteByte ((byte)((length >> 8) & 0xff));  	s.WriteByte ((byte)(length & 0xff));  }  
Magic Number,Duplicati.Library.Backend,KeyGenerator,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyGenerator.cs,EncodeDERLength,The following statement contains a magic number: if (length < 0x7f) {  	s.WriteByte ((byte)length);  } else if (length <= 0x7fff) {  	s.WriteByte (0x82);  	s.WriteByte ((byte)((length >> 8) & 0xff));  	s.WriteByte ((byte)(length & 0xff));  } else {  	s.WriteByte (0x84);  	s.WriteByte ((byte)((length >> 24) & 0xff));  	s.WriteByte ((byte)((length >> 16) & 0xff));  	s.WriteByte ((byte)((length >> 8) & 0xff));  	s.WriteByte ((byte)(length & 0xff));  }  
Magic Number,Duplicati.Library.Backend,KeyGenerator,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyGenerator.cs,EncodeDERLength,The following statement contains a magic number: if (length < 0x7f) {  	s.WriteByte ((byte)length);  } else if (length <= 0x7fff) {  	s.WriteByte (0x82);  	s.WriteByte ((byte)((length >> 8) & 0xff));  	s.WriteByte ((byte)(length & 0xff));  } else {  	s.WriteByte (0x84);  	s.WriteByte ((byte)((length >> 24) & 0xff));  	s.WriteByte ((byte)((length >> 16) & 0xff));  	s.WriteByte ((byte)((length >> 8) & 0xff));  	s.WriteByte ((byte)(length & 0xff));  }  
Magic Number,Duplicati.Library.Backend,KeyGenerator,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyGenerator.cs,EncodeDERLength,The following statement contains a magic number: if (length < 0x7f) {  	s.WriteByte ((byte)length);  } else if (length <= 0x7fff) {  	s.WriteByte (0x82);  	s.WriteByte ((byte)((length >> 8) & 0xff));  	s.WriteByte ((byte)(length & 0xff));  } else {  	s.WriteByte (0x84);  	s.WriteByte ((byte)((length >> 24) & 0xff));  	s.WriteByte ((byte)((length >> 16) & 0xff));  	s.WriteByte ((byte)((length >> 8) & 0xff));  	s.WriteByte ((byte)(length & 0xff));  }  
Magic Number,Duplicati.Library.Backend,KeyGenerator,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyGenerator.cs,EncodeDERLength,The following statement contains a magic number: if (length <= 0x7fff) {  	s.WriteByte (0x82);  	s.WriteByte ((byte)((length >> 8) & 0xff));  	s.WriteByte ((byte)(length & 0xff));  } else {  	s.WriteByte (0x84);  	s.WriteByte ((byte)((length >> 24) & 0xff));  	s.WriteByte ((byte)((length >> 16) & 0xff));  	s.WriteByte ((byte)((length >> 8) & 0xff));  	s.WriteByte ((byte)(length & 0xff));  }  
Magic Number,Duplicati.Library.Backend,KeyGenerator,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyGenerator.cs,EncodeDERLength,The following statement contains a magic number: if (length <= 0x7fff) {  	s.WriteByte (0x82);  	s.WriteByte ((byte)((length >> 8) & 0xff));  	s.WriteByte ((byte)(length & 0xff));  } else {  	s.WriteByte (0x84);  	s.WriteByte ((byte)((length >> 24) & 0xff));  	s.WriteByte ((byte)((length >> 16) & 0xff));  	s.WriteByte ((byte)((length >> 8) & 0xff));  	s.WriteByte ((byte)(length & 0xff));  }  
Magic Number,Duplicati.Library.Backend,KeyGenerator,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyGenerator.cs,EncodeDERLength,The following statement contains a magic number: if (length <= 0x7fff) {  	s.WriteByte (0x82);  	s.WriteByte ((byte)((length >> 8) & 0xff));  	s.WriteByte ((byte)(length & 0xff));  } else {  	s.WriteByte (0x84);  	s.WriteByte ((byte)((length >> 24) & 0xff));  	s.WriteByte ((byte)((length >> 16) & 0xff));  	s.WriteByte ((byte)((length >> 8) & 0xff));  	s.WriteByte ((byte)(length & 0xff));  }  
Magic Number,Duplicati.Library.Backend,KeyGenerator,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyGenerator.cs,EncodeDERLength,The following statement contains a magic number: if (length <= 0x7fff) {  	s.WriteByte (0x82);  	s.WriteByte ((byte)((length >> 8) & 0xff));  	s.WriteByte ((byte)(length & 0xff));  } else {  	s.WriteByte (0x84);  	s.WriteByte ((byte)((length >> 24) & 0xff));  	s.WriteByte ((byte)((length >> 16) & 0xff));  	s.WriteByte ((byte)((length >> 8) & 0xff));  	s.WriteByte ((byte)(length & 0xff));  }  
Magic Number,Duplicati.Library.Backend,KeyGenerator,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyGenerator.cs,EncodeDERLength,The following statement contains a magic number: s.WriteByte ((byte)((length >> 8) & 0xff));  
Magic Number,Duplicati.Library.Backend,KeyGenerator,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyGenerator.cs,EncodeDERLength,The following statement contains a magic number: s.WriteByte ((byte)((length >> 24) & 0xff));  
Magic Number,Duplicati.Library.Backend,KeyGenerator,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyGenerator.cs,EncodeDERLength,The following statement contains a magic number: s.WriteByte ((byte)((length >> 16) & 0xff));  
Magic Number,Duplicati.Library.Backend,KeyGenerator,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyGenerator.cs,EncodeDERLength,The following statement contains a magic number: s.WriteByte ((byte)((length >> 8) & 0xff));  
Magic Number,Duplicati.Library.Backend,KeyUploader,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyUploader.cs,Execute,The following statement contains a magic number: if (pubkey.Length != 3)  	throw new ArgumentException (OPTION_KEY);  
Magic Number,Duplicati.Library.Backend,KeyUploader,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyUploader.cs,Execute,The following statement contains a magic number: using (var connection = new SSHv2 (url' (Dictionary<string' string>)options)) {  	var client = connection.Client;  	try {  		client.ChangeDirectory (SSH_FOLDER);  	} catch {  		client.CreateDirectory (SSH_FOLDER);  		client.ChangePermissions (SSH_FOLDER' SSH_FOLDER_PERMISSIONS);  		client.ChangeDirectory (SSH_FOLDER);  	}  	var sshfolder = client.ListDirectory (".").Where (x => x.Name == ".").First ();  	client.ChangeDirectory ("..");  	if (!sshfolder.OwnerCanRead || !sshfolder.OwnerCanWrite)  		client.ChangePermissions (SSH_FOLDER' SSH_FOLDER_PERMISSIONS);  	string authorized_keys = "";  	byte[] authorized_keys_bytes = null;  	var existing_authorized_keys = client.ListDirectory (SSH_FOLDER).Where (x => x.Name == AUTHORIZED_KEYS_FILE).Any ();  	if (existing_authorized_keys) {  		using (var ms = new System.IO.MemoryStream ()) {  			client.DownloadFile (AUTHORIZED_KEYS_PATH' ms);  			authorized_keys_bytes = ms.ToArray ();  			authorized_keys = System.Text.Encoding.ASCII.GetString (authorized_keys_bytes);  		}  	}  	var keys = authorized_keys == null ? new string[0] : authorized_keys.Split (new char[] {  		'\n'  	}' StringSplitOptions.RemoveEmptyEntries);  	var cleaned_keys = keys.Select (x => x.Trim ()).Where (x => x.Length > 0 && !x.StartsWith ("#"));  	// Does the key already exist?  	if (cleaned_keys.Where (x => {  		var els = x.Split (new char[] {  			' '  		}' StringSplitOptions.RemoveEmptyEntries).Select (y => y.Trim ()).Where (y => y.Length > 0).ToArray ();  		return els.Length == 3 && els [0] == pubkey [0] && els [1] == pubkey [1];  	}).Any ()) {  		res ["status"] = "Key already existed";  	} else {  		var new_file = authorized_keys;  		if (new_file.Trim ().Length > 0)  			new_file = authorized_keys.Trim () + "\n";  		new_file += string.Join (" "' pubkey) + "\n";  		if (existing_authorized_keys) {  			var filename = AUTHORIZED_KEYS_PATH + ".backup-" + Library.Utility.Utility.SerializeDateTime (DateTime.UtcNow);  			using (var ms = new System.IO.MemoryStream (authorized_keys_bytes))  				client.UploadFile (ms' filename);  			client.ChangePermissions (filename' AUTHORIZED_KEYS_BACKUP_PERMISSIONS);  		}  		using (var ms = new System.IO.MemoryStream (System.Text.Encoding.ASCII.GetBytes (new_file)))  			client.UploadFile (ms' AUTHORIZED_KEYS_PATH);  		if (!existing_authorized_keys)  			client.ChangePermissions (AUTHORIZED_KEYS_PATH' AUTHORIZED_KEYS_PERMISSIONS);  		res ["status"] = "Key updated";  	}  }  
Magic Number,Duplicati.Library.Backend,KeyUploader,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyUploader.cs,Execute,The following statement contains a magic number: if (cleaned_keys.Where (x => {  	var els = x.Split (new char[] {  		' '  	}' StringSplitOptions.RemoveEmptyEntries).Select (y => y.Trim ()).Where (y => y.Length > 0).ToArray ();  	return els.Length == 3 && els [0] == pubkey [0] && els [1] == pubkey [1];  }).Any ()) {  	res ["status"] = "Key already existed";  } else {  	var new_file = authorized_keys;  	if (new_file.Trim ().Length > 0)  		new_file = authorized_keys.Trim () + "\n";  	new_file += string.Join (" "' pubkey) + "\n";  	if (existing_authorized_keys) {  		var filename = AUTHORIZED_KEYS_PATH + ".backup-" + Library.Utility.Utility.SerializeDateTime (DateTime.UtcNow);  		using (var ms = new System.IO.MemoryStream (authorized_keys_bytes))  			client.UploadFile (ms' filename);  		client.ChangePermissions (filename' AUTHORIZED_KEYS_BACKUP_PERMISSIONS);  	}  	using (var ms = new System.IO.MemoryStream (System.Text.Encoding.ASCII.GetBytes (new_file)))  		client.UploadFile (ms' AUTHORIZED_KEYS_PATH);  	if (!existing_authorized_keys)  		client.ChangePermissions (AUTHORIZED_KEYS_PATH' AUTHORIZED_KEYS_PERMISSIONS);  	res ["status"] = "Key updated";  }  
Magic Number,Duplicati.Library.Backend,KeyUploader,F:\newReposMay17\duplicati_duplicati\Duplicati\Library\Backend\SSHv2\KeyUploader.cs,Execute,The following statement contains a magic number: return els.Length == 3 && els [0] == pubkey [0] && els [1] == pubkey [1];  
