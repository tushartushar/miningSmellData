Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,WEBDAV,Cyclomatic complexity of the method is 8
Complex Method,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,ListWithouExceptionCatch,Cyclomatic complexity of the method is 8
Long Statement,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,List,The length of the statement  "                        ((wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.NotFound || (wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.Conflict)) " is 193.
Long Statement,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,List,The length of the statement  "                if (wex.Response as System.Net.HttpWebResponse != null && (wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.MethodNotAllowed) " is 160.
Long Statement,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,List,The length of the statement  "                    throw new UserInformationException(Strings.WEBDAV.MethodNotAllowedError((wex.Response as System.Net.HttpWebResponse).StatusCode)' wex); " is 135.
Long Statement,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,ListWithouExceptionCatch,The length of the statement  "                    using (var fs = new System.IO.FileStream(m_debugPropfindFile' System.IO.FileMode.Create' System.IO.FileAccess.Write' System.IO.FileShare.None)) " is 143.
Long Statement,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,Delete,The length of the statement  "                if (wex.Response is System.Net.HttpWebResponse && ((System.Net.HttpWebResponse)wex.Response).StatusCode == System.Net.HttpStatusCode.NotFound) " is 142.
Long Statement,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,CreateRequest,The length of the statement  "            System.Net.HttpWebRequest req = (System.Net.HttpWebRequest)System.Net.HttpWebRequest.Create(m_url + Library.Utility.Uri.UrlEncode(remotename).Replace("+"' "%20")); " is 163.
Long Statement,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,Put,The length of the statement  "                    if ((wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.Conflict || (wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.NotFound) " is 195.
Long Statement,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,Get,The length of the statement  "                        throw new Exception(Strings.WEBDAV.SeenThenNotFoundError(m_path' remotename' System.IO.Path.GetExtension(remotename)' wex.Message)' wex); " is 137.
Long Statement,Duplicati.Library.Backend.Strings,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\Strings.cs,MethodNotAllowedError,The length of the statement  "{ return LC.L(@"The server returned the error code {0} ({1})' indicating that the server does not support WebDAV connections"' (int)statuscode' statuscode); }" is 158.
Long Statement,Duplicati.Library.Backend.Strings,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\Strings.cs,SeenThenNotFoundError,The length of the statement  "{ return LC.L(@"When listing the folder {0} the file {1} was listed' but the server now reports that the file is not found. " is 123.
Long Statement,Duplicati.Library.Backend.Strings,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\Strings.cs,SeenThenNotFoundError,The length of the statement  "This can be because the file is deleted or unavailable' but it can also be because the file extension {2} is blocked by the web server. IIS blocks unknown extensions by default. " is 177.
Empty Catch Block,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,ListWithouExceptionCatch,The method has an empty catch block.
Empty Catch Block,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,Put,The method has an empty catch block.
Magic Number,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,WEBDAV,The following statement contains a magic number: if (port <= 0)                  port = m_useSSL ? 443 : 80;
Magic Number,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,WEBDAV,The following statement contains a magic number: if (port <= 0)                  port = m_useSSL ? 443 : 80;
Magic Number,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,ListWithouExceptionCatch,The following statement contains a magic number: using (var resp = (System.Net.HttpWebResponse)areq.GetResponse())              {                  int code = (int)resp.StatusCode;                  if (code < 200 || code >= 300) //For some reason Mono does not throw this automatically                      throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                    if (!string.IsNullOrEmpty(m_debugPropfindFile))                  {                      using (var rs = areq.GetResponseStream())                      using (var fs = new System.IO.FileStream(m_debugPropfindFile' System.IO.FileMode.Create' System.IO.FileAccess.Write' System.IO.FileShare.None))                          Utility.Utility.CopyStream(rs' fs' false' m_copybuffer);                        doc.Load(m_debugPropfindFile);                  }                  else                  {                      using (var rs = areq.GetResponseStream())                          doc.Load(rs);                  }              }
Magic Number,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,ListWithouExceptionCatch,The following statement contains a magic number: using (var resp = (System.Net.HttpWebResponse)areq.GetResponse())              {                  int code = (int)resp.StatusCode;                  if (code < 200 || code >= 300) //For some reason Mono does not throw this automatically                      throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                    if (!string.IsNullOrEmpty(m_debugPropfindFile))                  {                      using (var rs = areq.GetResponseStream())                      using (var fs = new System.IO.FileStream(m_debugPropfindFile' System.IO.FileMode.Create' System.IO.FileAccess.Write' System.IO.FileShare.None))                          Utility.Utility.CopyStream(rs' fs' false' m_copybuffer);                        doc.Load(m_debugPropfindFile);                  }                  else                  {                      using (var rs = areq.GetResponseStream())                          doc.Load(rs);                  }              }
Magic Number,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,Delete,The following statement contains a magic number: try              {                  System.Net.HttpWebRequest req = CreateRequest(remotename);                  req.Method = "DELETE";                  Utility.AsyncHttpRequest areq = new Utility.AsyncHttpRequest(req);                  using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      if (resp.StatusCode == System.Net.HttpStatusCode.NotFound)                          throw new FileMissingException();                        int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300) //For some reason Mono does not throw this automatically                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                  }              }               catch (System.Net.WebException wex)              {                  if (wex.Response is System.Net.HttpWebResponse && ((System.Net.HttpWebResponse)wex.Response).StatusCode == System.Net.HttpStatusCode.NotFound)                      throw new FileMissingException(wex);                  else                      throw;              }
Magic Number,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,Delete,The following statement contains a magic number: try              {                  System.Net.HttpWebRequest req = CreateRequest(remotename);                  req.Method = "DELETE";                  Utility.AsyncHttpRequest areq = new Utility.AsyncHttpRequest(req);                  using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      if (resp.StatusCode == System.Net.HttpStatusCode.NotFound)                          throw new FileMissingException();                        int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300) //For some reason Mono does not throw this automatically                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                  }              }               catch (System.Net.WebException wex)              {                  if (wex.Response is System.Net.HttpWebResponse && ((System.Net.HttpWebResponse)wex.Response).StatusCode == System.Net.HttpStatusCode.NotFound)                      throw new FileMissingException(wex);                  else                      throw;              }
Magic Number,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,CreateFolder,The following statement contains a magic number: using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())              {                  int code = (int)resp.StatusCode;                  if (code < 200 || code >= 300) //For some reason Mono does not throw this automatically                      throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);              }
Magic Number,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,CreateFolder,The following statement contains a magic number: using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())              {                  int code = (int)resp.StatusCode;                  if (code < 200 || code >= 300) //For some reason Mono does not throw this automatically                      throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);              }
Magic Number,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,Put,The following statement contains a magic number: try              {                  System.Net.HttpWebRequest req = CreateRequest(remotename);                  req.Method = System.Net.WebRequestMethods.Http.Put;                  req.ContentType = "application/octet-stream";                    try { req.ContentLength = stream.Length; }                  catch { }                    Utility.AsyncHttpRequest areq = new Utility.AsyncHttpRequest(req);                  using (System.IO.Stream s = areq.GetRequestStream())                      Utility.Utility.CopyStream(stream' s' true' m_copybuffer);                    using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300) //For some reason Mono does not throw this automatically                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                  }              }              catch (System.Net.WebException wex)              {                  //Convert to better exception                  if (wex.Response as System.Net.HttpWebResponse != null)                      if ((wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.Conflict || (wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.NotFound)                          throw new Interface.FolderMissingException(Strings.WEBDAV.MissingFolderError(m_path' wex.Message)' wex);                    throw;              }
Magic Number,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,Put,The following statement contains a magic number: try              {                  System.Net.HttpWebRequest req = CreateRequest(remotename);                  req.Method = System.Net.WebRequestMethods.Http.Put;                  req.ContentType = "application/octet-stream";                    try { req.ContentLength = stream.Length; }                  catch { }                    Utility.AsyncHttpRequest areq = new Utility.AsyncHttpRequest(req);                  using (System.IO.Stream s = areq.GetRequestStream())                      Utility.Utility.CopyStream(stream' s' true' m_copybuffer);                    using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300) //For some reason Mono does not throw this automatically                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                  }              }              catch (System.Net.WebException wex)              {                  //Convert to better exception                  if (wex.Response as System.Net.HttpWebResponse != null)                      if ((wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.Conflict || (wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.NotFound)                          throw new Interface.FolderMissingException(Strings.WEBDAV.MissingFolderError(m_path' wex.Message)' wex);                    throw;              }
Magic Number,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,Get,The following statement contains a magic number: try              {                  var areq = new Utility.AsyncHttpRequest(req);                  using (var resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300) //For some reason Mono does not throw this automatically                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                        using (var s = areq.GetResponseStream())                          Utility.Utility.CopyStream(s' stream' true' m_copybuffer);                  }              }              catch (System.Net.WebException wex)              {                  if (wex.Response as System.Net.HttpWebResponse != null)                  {                      if ((wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.Conflict)                          throw new Interface.FolderMissingException(Strings.WEBDAV.MissingFolderError(m_path' wex.Message)' wex);                        if                      (                          (wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.NotFound                          &&                          m_filenamelist != null                          &&                          m_filenamelist.Contains(remotename)                      )                          throw new Exception(Strings.WEBDAV.SeenThenNotFoundError(m_path' remotename' System.IO.Path.GetExtension(remotename)' wex.Message)' wex);                  }                    throw;              }
Magic Number,Duplicati.Library.Backend,WEBDAV,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\WEBDAV\WEBDAV.cs,Get,The following statement contains a magic number: try              {                  var areq = new Utility.AsyncHttpRequest(req);                  using (var resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300) //For some reason Mono does not throw this automatically                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                        using (var s = areq.GetResponseStream())                          Utility.Utility.CopyStream(s' stream' true' m_copybuffer);                  }              }              catch (System.Net.WebException wex)              {                  if (wex.Response as System.Net.HttpWebResponse != null)                  {                      if ((wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.Conflict)                          throw new Interface.FolderMissingException(Strings.WEBDAV.MissingFolderError(m_path' wex.Message)' wex);                        if                      (                          (wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.NotFound                          &&                          m_filenamelist != null                          &&                          m_filenamelist.Contains(remotename)                      )                          throw new Exception(Strings.WEBDAV.SeenThenNotFoundError(m_path' remotename' System.IO.Path.GetExtension(remotename)' wex.Message)' wex);                  }                    throw;              }
