Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Duplicati.Library.Backend.AzureBlob,AzureBlobBackend,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\AzureBlob\AzureBlobBackend.cs,AzureBlobBackend,Cyclomatic complexity of the method is 9
Empty Catch Block,Duplicati.Library.Backend.AzureBlob,AzureBlobWrapper,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\AzureBlob\AzureBlobWrapper.cs,ListContainerEntries,The method has an empty catch block.
Magic Number,Duplicati.Library.Backend.AzureBlob,AzureBlobWrapper,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\AzureBlob\AzureBlobWrapper.cs,ListContainerEntries,The following statement contains a magic number: try              {                  return listBlobItems.Select(x =>                  {                      var absolutePath = x.StorageUri.PrimaryUri.AbsolutePath;                      var containerSegment = string.Concat("/"' _containerName' "/");                      var blobName = absolutePath.Substring(absolutePath.IndexOf(                          containerSegment' System.StringComparison.Ordinal) + containerSegment.Length);                        try                      {                          if (x is CloudBlockBlob)                          {                              var cb = (CloudBlockBlob)x;                              var modified = cb.Properties.LastModified;                              var lastModified = new System.DateTime();                              if (cb.Properties.LastModified != null)                                  lastModified = new System.DateTime(cb.Properties.LastModified.Value.Ticks' System.DateTimeKind.Utc);                              return new FileEntry(Uri.UrlDecode(blobName.Replace("+"' "%2B"))' cb.Properties.Length' lastModified' lastModified);                          }                      }                      catch                      {                           // If the metadata fails to parse' return the basic entry                      }                        return new FileEntry(Uri.UrlDecode(blobName.Replace("+"' "%2B")));                  })                  .Cast<IFileEntry>()                  .ToList();              }              catch (StorageException ex)              {                  if (ex.RequestInformation.HttpStatusCode == 404)                  {                      throw new FolderMissingException(ex);                  }                  throw;              }
