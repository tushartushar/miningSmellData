Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Duplicati.Library.Backend,TahoeBackend,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\TahoeLAFS\TahoeBackend.cs,CreateRequest,The length of the statement  "            System.Net.HttpWebRequest req = (System.Net.HttpWebRequest)System.Net.HttpWebRequest.Create(m_url + (Library.Utility.Uri.UrlEncode(remotename).Replace("+"' "%20")) + (string.IsNullOrEmpty(queryparams) || queryparams.Trim().Length == 0 ? "" : "?" + queryparams)); " is 262.
Long Statement,Duplicati.Library.Backend,TahoeBackend,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\TahoeLAFS\TahoeBackend.cs,List,The length of the statement  "                    if ((wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.Conflict || (wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.NotFound) " is 195.
Long Statement,Duplicati.Library.Backend,TahoeBackend,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\TahoeLAFS\TahoeBackend.cs,List,The length of the statement  "                    fe.LastModification = Duplicati.Library.Utility.Utility.EPOCH + TimeSpan.FromSeconds(e.Value.node.metadata.tahoe.linkmotime); " is 125.
Long Statement,Duplicati.Library.Backend,TahoeBackend,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\TahoeLAFS\TahoeBackend.cs,Delete,The length of the statement  "                if (wex.Response is System.Net.HttpWebResponse && ((System.Net.HttpWebResponse)wex.Response).StatusCode == System.Net.HttpStatusCode.NotFound) " is 142.
Long Statement,Duplicati.Library.Backend,TahoeBackend,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\TahoeLAFS\TahoeBackend.cs,Put,The length of the statement  "                    if ((wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.Conflict || (wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.NotFound) " is 195.
Empty Catch Block,Duplicati.Library.Backend,TahoeBackend,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\TahoeLAFS\TahoeBackend.cs,Put,The method has an empty catch block.
Magic Number,Duplicati.Library.Backend,TahoeBackend,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\TahoeLAFS\TahoeBackend.cs,List,The following statement contains a magic number: try              {                  var req = CreateRequest(""' "t=json");                  req.Method = System.Net.WebRequestMethods.Http.Get;                    var areq = new Utility.AsyncHttpRequest(req);                  using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300) //For some reason Mono does not throw this automatically                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                        using (var rs = areq.GetResponseStream())                      using (var sr = new System.IO.StreamReader(rs))                      using (var jr = new Newtonsoft.Json.JsonTextReader(sr))                      {                          var jsr  =new Newtonsoft.Json.JsonSerializer();                          jsr.Converters.Add(new TahoeElConverter());                          data = jsr.Deserialize<TahoeEl>(jr);                      }                  }              }              catch (System.Net.WebException wex)              {                  //Convert to better exception                  if (wex.Response as System.Net.HttpWebResponse != null)                      if ((wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.Conflict || (wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.NotFound)                          throw new Interface.FolderMissingException(Strings.TahoeBackend.MissingFolderError(m_url' wex.Message)' wex);                    throw;              }
Magic Number,Duplicati.Library.Backend,TahoeBackend,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\TahoeLAFS\TahoeBackend.cs,List,The following statement contains a magic number: try              {                  var req = CreateRequest(""' "t=json");                  req.Method = System.Net.WebRequestMethods.Http.Get;                    var areq = new Utility.AsyncHttpRequest(req);                  using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300) //For some reason Mono does not throw this automatically                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                        using (var rs = areq.GetResponseStream())                      using (var sr = new System.IO.StreamReader(rs))                      using (var jr = new Newtonsoft.Json.JsonTextReader(sr))                      {                          var jsr  =new Newtonsoft.Json.JsonSerializer();                          jsr.Converters.Add(new TahoeElConverter());                          data = jsr.Deserialize<TahoeEl>(jr);                      }                  }              }              catch (System.Net.WebException wex)              {                  //Convert to better exception                  if (wex.Response as System.Net.HttpWebResponse != null)                      if ((wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.Conflict || (wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.NotFound)                          throw new Interface.FolderMissingException(Strings.TahoeBackend.MissingFolderError(m_url' wex.Message)' wex);                    throw;              }
Magic Number,Duplicati.Library.Backend,TahoeBackend,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\TahoeLAFS\TahoeBackend.cs,Put,The following statement contains a magic number: try              {                  System.Net.HttpWebRequest req = CreateRequest(remotename' "");                  req.Method = System.Net.WebRequestMethods.Http.Put;                  req.ContentType = "application/binary";                    try { req.ContentLength = stream.Length; }                  catch { }                    Utility.AsyncHttpRequest areq = new Utility.AsyncHttpRequest(req);                  using (System.IO.Stream s = areq.GetRequestStream())                      Utility.Utility.CopyStream(stream' s' true' m_copybuffer);                    using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300) //For some reason Mono does not throw this automatically                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                  }              }              catch (System.Net.WebException wex)              {                  //Convert to better exception                  if (wex.Response as System.Net.HttpWebResponse != null)                      if ((wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.Conflict || (wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.NotFound)                          throw new Interface.FolderMissingException(Strings.TahoeBackend.MissingFolderError(m_url' wex.Message)' wex);                    throw;              }
Magic Number,Duplicati.Library.Backend,TahoeBackend,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\TahoeLAFS\TahoeBackend.cs,Put,The following statement contains a magic number: try              {                  System.Net.HttpWebRequest req = CreateRequest(remotename' "");                  req.Method = System.Net.WebRequestMethods.Http.Put;                  req.ContentType = "application/binary";                    try { req.ContentLength = stream.Length; }                  catch { }                    Utility.AsyncHttpRequest areq = new Utility.AsyncHttpRequest(req);                  using (System.IO.Stream s = areq.GetRequestStream())                      Utility.Utility.CopyStream(stream' s' true' m_copybuffer);                    using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300) //For some reason Mono does not throw this automatically                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                  }              }              catch (System.Net.WebException wex)              {                  //Convert to better exception                  if (wex.Response as System.Net.HttpWebResponse != null)                      if ((wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.Conflict || (wex.Response as System.Net.HttpWebResponse).StatusCode == System.Net.HttpStatusCode.NotFound)                          throw new Interface.FolderMissingException(Strings.TahoeBackend.MissingFolderError(m_url' wex.Message)' wex);                    throw;              }
Magic Number,Duplicati.Library.Backend,TahoeBackend,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\TahoeLAFS\TahoeBackend.cs,Get,The following statement contains a magic number: using (var resp = (System.Net.HttpWebResponse)areq.GetResponse())              {                  int code = (int)resp.StatusCode;                  if (code < 200 || code >= 300) //For some reason Mono does not throw this automatically                      throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                    using (var s = areq.GetResponseStream())                      Utility.Utility.CopyStream(s' stream' true' m_copybuffer);              }
Magic Number,Duplicati.Library.Backend,TahoeBackend,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\TahoeLAFS\TahoeBackend.cs,Get,The following statement contains a magic number: using (var resp = (System.Net.HttpWebResponse)areq.GetResponse())              {                  int code = (int)resp.StatusCode;                  if (code < 200 || code >= 300) //For some reason Mono does not throw this automatically                      throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                    using (var s = areq.GetResponseStream())                      Utility.Utility.CopyStream(s' stream' true' m_copybuffer);              }
