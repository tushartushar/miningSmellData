Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Duplicati.Library.Backend.Sia,Sia,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\Sia\Sia.cs,Sia,Cyclomatic complexity of the method is 9
Long Statement,Duplicati.Library.Backend.Sia,Sia,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\Sia\Sia.cs,CreateRequest,The length of the statement  "            req.UserAgent = string.Format("Sia-Agent (Duplicati SIA client {0})"' System.Reflection.Assembly.GetExecutingAssembly().GetName().Version); " is 139.
Long Statement,Duplicati.Library.Backend.Sia,Sia,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\Sia\Sia.cs,IsDownloadComplete,The length of the statement  "                            System.IO.FileStream fs = new System.IO.FileStream(localname' System.IO.FileMode.Open' System.IO.FileAccess.Read' System.IO.FileShare.ReadWrite); " is 145.
Long Statement,Duplicati.Library.Backend.Sia,Sia,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\Sia\Sia.cs,Get,The length of the statement  "                if (wex.Response is System.Net.HttpWebResponse && ((System.Net.HttpWebResponse)wex.Response).StatusCode == System.Net.HttpStatusCode.NotFound) " is 142.
Long Statement,Duplicati.Library.Backend.Sia,Sia,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\Sia\Sia.cs,Delete,The length of the statement  "                if (wex.Response is System.Net.HttpWebResponse && ((System.Net.HttpWebResponse)wex.Response).StatusCode == System.Net.HttpStatusCode.NotFound) " is 142.
Empty Catch Block,Duplicati.Library.Backend.Sia,Sia,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\Sia\Sia.cs,Get,The method has an empty catch block.
Magic Number,Duplicati.Library.Backend.Sia,Sia,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\Sia\Sia.cs,Sia,The following statement contains a magic number: if (m_apiport <= 0)                  m_apiport = 9980;
Magic Number,Duplicati.Library.Backend.Sia,Sia,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\Sia\Sia.cs,GetFiles,The following statement contains a magic number: try              {                  System.Net.HttpWebRequest req = CreateRequest(endpoint);                  req.Method = System.Net.WebRequestMethods.Http.Get;                    Utility.AsyncHttpRequest areq = new Utility.AsyncHttpRequest(req);                    using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300)                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                        var serializer = new JsonSerializer();                        using (var rs = areq.GetResponseStream())                      using (var sr = new System.IO.StreamReader(rs))                      using (var jr = new Newtonsoft.Json.JsonTextReader(sr))                      {                          fl = (SiaFileList)serializer.Deserialize(jr' typeof(SiaFileList));                      }                  }              }              catch (System.Net.WebException wex)              {                  throw new Exception(getResponseBodyOnError(endpoint' wex));              }
Magic Number,Duplicati.Library.Backend.Sia,Sia,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\Sia\Sia.cs,GetFiles,The following statement contains a magic number: try              {                  System.Net.HttpWebRequest req = CreateRequest(endpoint);                  req.Method = System.Net.WebRequestMethods.Http.Get;                    Utility.AsyncHttpRequest areq = new Utility.AsyncHttpRequest(req);                    using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300)                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                        var serializer = new JsonSerializer();                        using (var rs = areq.GetResponseStream())                      using (var sr = new System.IO.StreamReader(rs))                      using (var jr = new Newtonsoft.Json.JsonTextReader(sr))                      {                          fl = (SiaFileList)serializer.Deserialize(jr' typeof(SiaFileList));                      }                  }              }              catch (System.Net.WebException wex)              {                  throw new Exception(getResponseBodyOnError(endpoint' wex));              }
Magic Number,Duplicati.Library.Backend.Sia,Sia,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\Sia\Sia.cs,GetDownloads,The following statement contains a magic number: try              {                  System.Net.HttpWebRequest req = CreateRequest(endpoint);                  req.Method = System.Net.WebRequestMethods.Http.Get;                    Utility.AsyncHttpRequest areq = new Utility.AsyncHttpRequest(req);                    using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300)                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                        var serializer = new JsonSerializer();                        using (var rs = areq.GetResponseStream())                      using (var sr = new System.IO.StreamReader(rs))                      using (var jr = new Newtonsoft.Json.JsonTextReader(sr))                      {                          fl = (SiaDownloadList)serializer.Deserialize(jr' typeof(SiaDownloadList));                      }                  }              }              catch (System.Net.WebException wex)              {                  throw new Exception(getResponseBodyOnError(endpoint' wex));              }
Magic Number,Duplicati.Library.Backend.Sia,Sia,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\Sia\Sia.cs,GetDownloads,The following statement contains a magic number: try              {                  System.Net.HttpWebRequest req = CreateRequest(endpoint);                  req.Method = System.Net.WebRequestMethods.Http.Get;                    Utility.AsyncHttpRequest areq = new Utility.AsyncHttpRequest(req);                    using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300)                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                        var serializer = new JsonSerializer();                        using (var rs = areq.GetResponseStream())                      using (var sr = new System.IO.StreamReader(rs))                      using (var jr = new Newtonsoft.Json.JsonTextReader(sr))                      {                          fl = (SiaDownloadList)serializer.Deserialize(jr' typeof(SiaDownloadList));                      }                  }              }              catch (System.Net.WebException wex)              {                  throw new Exception(getResponseBodyOnError(endpoint' wex));              }
Magic Number,Duplicati.Library.Backend.Sia,Sia,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\Sia\Sia.cs,Put,The following statement contains a magic number: try {                  endpoint = string.Format("/renter/upload/{0}/{1}?source={2}"'                      m_targetpath'                       Library.Utility.Uri.UrlEncode(remotename).Replace("+"' "%20")'                      Library.Utility.Uri.UrlEncode(filename).Replace("+"' "%20")                  );                    System.Net.HttpWebRequest req = CreateRequest(endpoint);                  req.Method = System.Net.WebRequestMethods.Http.Post;                    Utility.AsyncHttpRequest areq = new Utility.AsyncHttpRequest(req);                    using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300)                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                        while (! IsUploadComplete( siafile ))                      {                          System.Threading.Thread.Sleep(5000);                      }                  }              }              catch (System.Net.WebException wex)              {                  throw new Exception(getResponseBodyOnError(endpoint' wex));              }
Magic Number,Duplicati.Library.Backend.Sia,Sia,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\Sia\Sia.cs,Put,The following statement contains a magic number: try {                  endpoint = string.Format("/renter/upload/{0}/{1}?source={2}"'                      m_targetpath'                       Library.Utility.Uri.UrlEncode(remotename).Replace("+"' "%20")'                      Library.Utility.Uri.UrlEncode(filename).Replace("+"' "%20")                  );                    System.Net.HttpWebRequest req = CreateRequest(endpoint);                  req.Method = System.Net.WebRequestMethods.Http.Post;                    Utility.AsyncHttpRequest areq = new Utility.AsyncHttpRequest(req);                    using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300)                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                        while (! IsUploadComplete( siafile ))                      {                          System.Threading.Thread.Sleep(5000);                      }                  }              }              catch (System.Net.WebException wex)              {                  throw new Exception(getResponseBodyOnError(endpoint' wex));              }
Magic Number,Duplicati.Library.Backend.Sia,Sia,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\Sia\Sia.cs,Put,The following statement contains a magic number: try {                  endpoint = string.Format("/renter/upload/{0}/{1}?source={2}"'                      m_targetpath'                       Library.Utility.Uri.UrlEncode(remotename).Replace("+"' "%20")'                      Library.Utility.Uri.UrlEncode(filename).Replace("+"' "%20")                  );                    System.Net.HttpWebRequest req = CreateRequest(endpoint);                  req.Method = System.Net.WebRequestMethods.Http.Post;                    Utility.AsyncHttpRequest areq = new Utility.AsyncHttpRequest(req);                    using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300)                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                        while (! IsUploadComplete( siafile ))                      {                          System.Threading.Thread.Sleep(5000);                      }                  }              }              catch (System.Net.WebException wex)              {                  throw new Exception(getResponseBodyOnError(endpoint' wex));              }
Magic Number,Duplicati.Library.Backend.Sia,Sia,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\Sia\Sia.cs,Get,The following statement contains a magic number: try              {                  endpoint = string.Format("/renter/download/{0}/{1}?destination={2}"'                      m_targetpath'                      Library.Utility.Uri.UrlEncode(remotename).Replace("+"' "%20")'                      Library.Utility.Uri.UrlEncode(tmpfilename).Replace("+"' "%20")                  );                  System.Net.HttpWebRequest req = CreateRequest(endpoint);                  req.Method = System.Net.WebRequestMethods.Http.Get;                    Utility.AsyncHttpRequest areq = new Utility.AsyncHttpRequest(req);                    using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300)                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                        while (!IsDownloadComplete(siafile' localname))                      {                          System.Threading.Thread.Sleep(5000);                      }                                           System.IO.File.Copy(tmpfilename' localname' true);                      try                      {                          System.IO.File.Delete(tmpfilename);                      } catch (Exception)                      {                        }                  }              }              catch (System.Net.WebException wex)              {                  if (wex.Response is System.Net.HttpWebResponse && ((System.Net.HttpWebResponse)wex.Response).StatusCode == System.Net.HttpStatusCode.NotFound)                      throw new FileMissingException(wex);                  else                      throw new Exception(getResponseBodyOnError(endpoint' wex));              }
Magic Number,Duplicati.Library.Backend.Sia,Sia,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\Sia\Sia.cs,Get,The following statement contains a magic number: try              {                  endpoint = string.Format("/renter/download/{0}/{1}?destination={2}"'                      m_targetpath'                      Library.Utility.Uri.UrlEncode(remotename).Replace("+"' "%20")'                      Library.Utility.Uri.UrlEncode(tmpfilename).Replace("+"' "%20")                  );                  System.Net.HttpWebRequest req = CreateRequest(endpoint);                  req.Method = System.Net.WebRequestMethods.Http.Get;                    Utility.AsyncHttpRequest areq = new Utility.AsyncHttpRequest(req);                    using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300)                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                        while (!IsDownloadComplete(siafile' localname))                      {                          System.Threading.Thread.Sleep(5000);                      }                                           System.IO.File.Copy(tmpfilename' localname' true);                      try                      {                          System.IO.File.Delete(tmpfilename);                      } catch (Exception)                      {                        }                  }              }              catch (System.Net.WebException wex)              {                  if (wex.Response is System.Net.HttpWebResponse && ((System.Net.HttpWebResponse)wex.Response).StatusCode == System.Net.HttpStatusCode.NotFound)                      throw new FileMissingException(wex);                  else                      throw new Exception(getResponseBodyOnError(endpoint' wex));              }
Magic Number,Duplicati.Library.Backend.Sia,Sia,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\Sia\Sia.cs,Get,The following statement contains a magic number: try              {                  endpoint = string.Format("/renter/download/{0}/{1}?destination={2}"'                      m_targetpath'                      Library.Utility.Uri.UrlEncode(remotename).Replace("+"' "%20")'                      Library.Utility.Uri.UrlEncode(tmpfilename).Replace("+"' "%20")                  );                  System.Net.HttpWebRequest req = CreateRequest(endpoint);                  req.Method = System.Net.WebRequestMethods.Http.Get;                    Utility.AsyncHttpRequest areq = new Utility.AsyncHttpRequest(req);                    using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300)                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                        while (!IsDownloadComplete(siafile' localname))                      {                          System.Threading.Thread.Sleep(5000);                      }                                           System.IO.File.Copy(tmpfilename' localname' true);                      try                      {                          System.IO.File.Delete(tmpfilename);                      } catch (Exception)                      {                        }                  }              }              catch (System.Net.WebException wex)              {                  if (wex.Response is System.Net.HttpWebResponse && ((System.Net.HttpWebResponse)wex.Response).StatusCode == System.Net.HttpStatusCode.NotFound)                      throw new FileMissingException(wex);                  else                      throw new Exception(getResponseBodyOnError(endpoint' wex));              }
Magic Number,Duplicati.Library.Backend.Sia,Sia,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\Sia\Sia.cs,Delete,The following statement contains a magic number: try              {                  endpoint = string.Format("/renter/delete/{0}/{1}"'                      m_targetpath'                      Library.Utility.Uri.UrlEncode(remotename).Replace("+"' "%20")                  );                  System.Net.HttpWebRequest req = CreateRequest(endpoint);                  req.Method = System.Net.WebRequestMethods.Http.Post;                    Utility.AsyncHttpRequest areq = new Utility.AsyncHttpRequest(req);                    using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300)                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                  }              }              catch (System.Net.WebException wex)              {                  if (wex.Response is System.Net.HttpWebResponse && ((System.Net.HttpWebResponse)wex.Response).StatusCode == System.Net.HttpStatusCode.NotFound)                      throw new FileMissingException(wex);                  else                      throw new Exception(getResponseBodyOnError(endpoint' wex));              }
Magic Number,Duplicati.Library.Backend.Sia,Sia,C:\repos\duplicati_duplicati\Duplicati\Library\Backend\Sia\Sia.cs,Delete,The following statement contains a magic number: try              {                  endpoint = string.Format("/renter/delete/{0}/{1}"'                      m_targetpath'                      Library.Utility.Uri.UrlEncode(remotename).Replace("+"' "%20")                  );                  System.Net.HttpWebRequest req = CreateRequest(endpoint);                  req.Method = System.Net.WebRequestMethods.Http.Post;                    Utility.AsyncHttpRequest areq = new Utility.AsyncHttpRequest(req);                    using (System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)areq.GetResponse())                  {                      int code = (int)resp.StatusCode;                      if (code < 200 || code >= 300)                          throw new System.Net.WebException(resp.StatusDescription' null' System.Net.WebExceptionStatus.ProtocolError' resp);                  }              }              catch (System.Net.WebException wex)              {                  if (wex.Response is System.Net.HttpWebResponse && ((System.Net.HttpWebResponse)wex.Response).StatusCode == System.Net.HttpStatusCode.NotFound)                      throw new FileMissingException(wex);                  else                      throw new Exception(getResponseBodyOnError(endpoint' wex));              }
