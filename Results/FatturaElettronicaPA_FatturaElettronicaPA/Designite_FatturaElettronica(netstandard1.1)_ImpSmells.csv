Implementation smell,Namespace,Class,File,Method,Description
Complex Method,FatturaElettronica.Validators,FatturaElettronicaBodyValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\FatturaElettronicaBodyValidator.cs,DatiRiepilogoValidateAgainstError00422,Cyclomatic complexity of the method is 9
Long Statement,FatturaElettronica.Validators,DatiRiepilogoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiRiepilogoValidator.cs,ImpostaValidateAgainstError00421,The length of the statement  "            return (Math.Abs(datiRiepilogo.Imposta - decimal.Parse(((datiRiepilogo.AliquotaIVA * datiRiepilogo.ImponibileImporto) / 100).ToString("0.00"))) <= 0.01m); " is 154.
Magic Number,FatturaElettronica.Ordinaria,FatturaOrdinaria,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Ordinaria\FatturaOrdinaria.cs,CreateInstance,The following statement contains a magic number: switch (formato)              {                  case Instance.PubblicaAmministrazione:                      fattura.FatturaElettronicaHeader.DatiTrasmissione.FormatoTrasmissione = FormatoTrasmissione.PubblicaAmministrazione;                      break;                  case Instance.Privati:                      fattura = new FatturaOrdinaria();                      fattura.FatturaElettronicaHeader.DatiTrasmissione.FormatoTrasmissione = FormatoTrasmissione.Privati;                      fattura.FatturaElettronicaHeader.DatiTrasmissione.CodiceDestinatario = new string('0'' 7);                      break;              }
Magic Number,FatturaElettronica.Semplificata,FatturaSemplificata,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Semplificata\FatturaSemplificata.cs,CreateInstance,The following statement contains a magic number: switch (formato)              {                  case Instance.Semplificata:                      fatturaSemplificata.FatturaElettronicaHeader.DatiTrasmissione.FormatoTrasmissione = FormatoTrasmissione.Semplificata;                      fatturaSemplificata.FatturaElettronicaHeader.DatiTrasmissione.CodiceDestinatario = new string('0'' 7);                      break;              }
Magic Number,FatturaElettronica.Validators,AllegatiValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\AllegatiValidator.cs,AllegatiValidator,The following statement contains a magic number: RuleFor(x => x.NomeAttachment)                  .NotEmpty()                  .Latin1SupplementValidator()                  .Length(1' 60);
Magic Number,FatturaElettronica.Validators,AllegatiValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\AllegatiValidator.cs,AllegatiValidator,The following statement contains a magic number: RuleFor(x => x.AlgoritmoCompressione)                  .Length(1' 60)                  .BasicLatinValidator()                  .When(x => !string.IsNullOrEmpty(x.AlgoritmoCompressione));
Magic Number,FatturaElettronica.Validators,AllegatiValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\AllegatiValidator.cs,AllegatiValidator,The following statement contains a magic number: RuleFor(x => x.FormatoAttachment)                  .Length(1' 10)                  .BasicLatinValidator()                  .When(x => !string.IsNullOrEmpty(x.FormatoAttachment));
Magic Number,FatturaElettronica.Validators,AllegatiValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\AllegatiValidator.cs,AllegatiValidator,The following statement contains a magic number: RuleFor(x => x.DescrizioneAttachment)                  .Length(1' 100)                  .Latin1SupplementValidator()                  .When(x => !string.IsNullOrEmpty(x.DescrizioneAttachment));
Magic Number,FatturaElettronica.Validators,AltriDatiGestionaliValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\AltriDatiGestionaliValidator.cs,AltriDatiGestionaliValidator,The following statement contains a magic number: RuleFor(x => x.TipoDato)                  .NotEmpty()                  .BasicLatinValidator()                  .Length(1' 10);
Magic Number,FatturaElettronica.Validators,AltriDatiGestionaliValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\AltriDatiGestionaliValidator.cs,AltriDatiGestionaliValidator,The following statement contains a magic number: RuleFor(x => x.RiferimentoTesto)                  .Length(1' 60)                  .Latin1SupplementValidator()                  .When(x => !string.IsNullOrEmpty(x.RiferimentoTesto));
Magic Number,FatturaElettronica.Validators,AnagraficaValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\AnagraficaValidator.cs,AnagraficaValidator,The following statement contains a magic number: RuleFor(x => x.Titolo)                  .Length(2' 10)                  .BasicLatinValidator()                  .When(x=>!string.IsNullOrEmpty(x.Titolo));
Magic Number,FatturaElettronica.Validators,AnagraficaValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\AnagraficaValidator.cs,AnagraficaValidator,The following statement contains a magic number: RuleFor(x => x.Titolo)                  .Length(2' 10)                  .BasicLatinValidator()                  .When(x=>!string.IsNullOrEmpty(x.Titolo));
Magic Number,FatturaElettronica.Validators,AnagraficaValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\AnagraficaValidator.cs,AnagraficaValidator,The following statement contains a magic number: RuleFor(x => x.CodEORI)                  .Length(13' 17)                  .When(x => !string.IsNullOrEmpty(x.CodEORI));
Magic Number,FatturaElettronica.Validators,AnagraficaValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\AnagraficaValidator.cs,AnagraficaValidator,The following statement contains a magic number: RuleFor(x => x.CodEORI)                  .Length(13' 17)                  .When(x => !string.IsNullOrEmpty(x.CodEORI));
Magic Number,FatturaElettronica.Validators,CedentePrestatoreValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\CedentePrestatoreValidator.cs,CedentePrestatoreValidator,The following statement contains a magic number: RuleFor(x => x.RiferimentoAmministrazione)                  .BasicLatinValidator()                  .Length(1' 20);
Magic Number,FatturaElettronica.Validators,CodiceArticoloValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\CodiceArticoloValidator.cs,CodiceArticoloValidator,The following statement contains a magic number: RuleFor(x => x.CodiceTipo)                  .NotEmpty()                  .BasicLatinValidator()                  .Length(1' 35);
Magic Number,FatturaElettronica.Validators,CodiceArticoloValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\CodiceArticoloValidator.cs,CodiceArticoloValidator,The following statement contains a magic number: RuleFor(x => x.CodiceValore)                  .NotEmpty()                  .BasicLatinValidator()                  .Length(1' 35);
Magic Number,FatturaElettronica.Validators,ContattiTrasmittenteValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\ContattiTrasmittenteValidator.cs,ContattiTrasmittenteValidator,The following statement contains a magic number: RuleFor(dt => dt.Telefono)                  .Length(5' 12)                  .When(x => !string.IsNullOrEmpty(x.Telefono));
Magic Number,FatturaElettronica.Validators,ContattiTrasmittenteValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\ContattiTrasmittenteValidator.cs,ContattiTrasmittenteValidator,The following statement contains a magic number: RuleFor(dt => dt.Telefono)                  .Length(5' 12)                  .When(x => !string.IsNullOrEmpty(x.Telefono));
Magic Number,FatturaElettronica.Validators,ContattiTrasmittenteValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\ContattiTrasmittenteValidator.cs,ContattiTrasmittenteValidator,The following statement contains a magic number: RuleFor(dt => dt.Email)                  .Length(7' 256)                  .When(x=>!string.IsNullOrEmpty(x.Email));
Magic Number,FatturaElettronica.Validators,ContattiTrasmittenteValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\ContattiTrasmittenteValidator.cs,ContattiTrasmittenteValidator,The following statement contains a magic number: RuleFor(dt => dt.Email)                  .Length(7' 256)                  .When(x=>!string.IsNullOrEmpty(x.Email));
Magic Number,FatturaElettronica.Validators,ContattiValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\ContattiValidator.cs,ContattiValidator,The following statement contains a magic number: RuleFor(x => x.Telefono)                  .Length(5' 12)                  .When(x=>!string.IsNullOrEmpty(x.Telefono));
Magic Number,FatturaElettronica.Validators,ContattiValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\ContattiValidator.cs,ContattiValidator,The following statement contains a magic number: RuleFor(x => x.Telefono)                  .Length(5' 12)                  .When(x=>!string.IsNullOrEmpty(x.Telefono));
Magic Number,FatturaElettronica.Validators,ContattiValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\ContattiValidator.cs,ContattiValidator,The following statement contains a magic number: RuleFor(x => x.Fax)                  .Length(5' 12)                  .When(x => !string.IsNullOrEmpty(x.Fax));
Magic Number,FatturaElettronica.Validators,ContattiValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\ContattiValidator.cs,ContattiValidator,The following statement contains a magic number: RuleFor(x => x.Fax)                  .Length(5' 12)                  .When(x => !string.IsNullOrEmpty(x.Fax));
Magic Number,FatturaElettronica.Validators,ContattiValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\ContattiValidator.cs,ContattiValidator,The following statement contains a magic number: RuleFor(x => x.Email)                  .Length(7' 256)                  .When(x=>!string.IsNullOrEmpty(x.Email));
Magic Number,FatturaElettronica.Validators,ContattiValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\ContattiValidator.cs,ContattiValidator,The following statement contains a magic number: RuleFor(x => x.Email)                  .Length(7' 256)                  .When(x=>!string.IsNullOrEmpty(x.Email));
Magic Number,FatturaElettronica.Validators,DatiAnagraficiCedentePrestatoreValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiAnagraficiCedentePrestatoreValidator.cs,DatiAnagraficiCedentePrestatoreValidator,The following statement contains a magic number: RuleFor(x => x.CodiceFiscale)                  .Length(11' 16)                  .When(x => !string.IsNullOrEmpty(x.CodiceFiscale));
Magic Number,FatturaElettronica.Validators,DatiAnagraficiCedentePrestatoreValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiAnagraficiCedentePrestatoreValidator.cs,DatiAnagraficiCedentePrestatoreValidator,The following statement contains a magic number: RuleFor(x => x.CodiceFiscale)                  .Length(11' 16)                  .When(x => !string.IsNullOrEmpty(x.CodiceFiscale));
Magic Number,FatturaElettronica.Validators,DatiAnagraficiCedentePrestatoreValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiAnagraficiCedentePrestatoreValidator.cs,DatiAnagraficiCedentePrestatoreValidator,The following statement contains a magic number: RuleFor(x => x.AlboProfessionale)                  .Length(1' 60)                  .Latin1SupplementValidator()                  .When(x => !string.IsNullOrEmpty(x.AlboProfessionale));
Magic Number,FatturaElettronica.Validators,DatiAnagraficiCedentePrestatoreValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiAnagraficiCedentePrestatoreValidator.cs,DatiAnagraficiCedentePrestatoreValidator,The following statement contains a magic number: RuleFor(x => x.NumeroIscrizioneAlbo)                  .Length(1' 60)                  .BasicLatinValidator()                  .When(x => !string.IsNullOrEmpty(x.NumeroIscrizioneAlbo));
Magic Number,FatturaElettronica.Validators,DatiAnagraficiCessionarioCommittenteValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiAnagraficiCessionarioCommittenteValidator.cs,DatiAnagraficiCessionarioCommittenteValidator,The following statement contains a magic number: RuleFor(x => x.CodiceFiscale)                  .Length(11' 16)                  .When(x => !string.IsNullOrEmpty(x.CodiceFiscale));
Magic Number,FatturaElettronica.Validators,DatiAnagraficiCessionarioCommittenteValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiAnagraficiCessionarioCommittenteValidator.cs,DatiAnagraficiCessionarioCommittenteValidator,The following statement contains a magic number: RuleFor(x => x.CodiceFiscale)                  .Length(11' 16)                  .When(x => !string.IsNullOrEmpty(x.CodiceFiscale));
Magic Number,FatturaElettronica.Validators,DatiAnagraficiRappresentanteFiscaleValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiAnagraficiRappresentanteFiscaleValidator.cs,DatiAnagraficiRappresentanteFiscaleValidator,The following statement contains a magic number: RuleFor(x => x.CodiceFiscale)                  .Length(11' 16)                  .When(x => !string.IsNullOrEmpty(x.CodiceFiscale));
Magic Number,FatturaElettronica.Validators,DatiAnagraficiRappresentanteFiscaleValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiAnagraficiRappresentanteFiscaleValidator.cs,DatiAnagraficiRappresentanteFiscaleValidator,The following statement contains a magic number: RuleFor(x => x.CodiceFiscale)                  .Length(11' 16)                  .When(x => !string.IsNullOrEmpty(x.CodiceFiscale));
Magic Number,FatturaElettronica.Validators,DatiAnagraficiTerzoIntermediarioValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiAnagraficiTerzoIntermediarioValidator.cs,DatiAnagraficiTerzoIntermediarioValidator,The following statement contains a magic number: RuleFor(x => x.CodiceFiscale)                  .Length(11' 16)                  .When(x => !string.IsNullOrEmpty(x.CodiceFiscale));
Magic Number,FatturaElettronica.Validators,DatiAnagraficiTerzoIntermediarioValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiAnagraficiTerzoIntermediarioValidator.cs,DatiAnagraficiTerzoIntermediarioValidator,The following statement contains a magic number: RuleFor(x => x.CodiceFiscale)                  .Length(11' 16)                  .When(x => !string.IsNullOrEmpty(x.CodiceFiscale));
Magic Number,FatturaElettronica.Validators,DatiAnagraficiVettoreValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiAnagraficiVettoreValidator.cs,DatiAnagraficiVettoreValidator,The following statement contains a magic number: RuleFor(x => x.CodiceFiscale)                  .Length(11' 16)                  .When(x => !string.IsNullOrEmpty(x.CodiceFiscale));
Magic Number,FatturaElettronica.Validators,DatiAnagraficiVettoreValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiAnagraficiVettoreValidator.cs,DatiAnagraficiVettoreValidator,The following statement contains a magic number: RuleFor(x => x.CodiceFiscale)                  .Length(11' 16)                  .When(x => !string.IsNullOrEmpty(x.CodiceFiscale));
Magic Number,FatturaElettronica.Validators,DatiAnagraficiVettoreValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiAnagraficiVettoreValidator.cs,DatiAnagraficiVettoreValidator,The following statement contains a magic number: RuleFor(x => x.NumeroLicenzaGuida)                  .Length(1' 20)                  .BasicLatinValidator()                  .When(x => !string.IsNullOrEmpty(x.NumeroLicenzaGuida));
Magic Number,FatturaElettronica.Validators,DatiCassaPrevidenzialeValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiCassaPrevidenzialeValidator.cs,DatiCassaPrevidenzialeValidator,The following statement contains a magic number: RuleFor(x => x.RiferimentoAmministrazione)                  .Length(1' 20)                  .BasicLatinValidator()                  .When(x=>!string.IsNullOrEmpty(x.RiferimentoAmministrazione));
Magic Number,FatturaElettronica.Validators,DatiDDTValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiDDTValidator.cs,DatiDDTValidator,The following statement contains a magic number: RuleFor(x => x.NumeroDDT)                  .NotEmpty()                  .BasicLatinValidator()                  .Length(1' 20);
Magic Number,FatturaElettronica.Validators,DatiDocumentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiDocumentoValidator.cs,DatiDocumentoValidator,The following statement contains a magic number: RuleFor(x => x.IdDocumento)                  .NotEmpty()                  .BasicLatinValidator()                  .Length(1' 20);
Magic Number,FatturaElettronica.Validators,DatiDocumentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiDocumentoValidator.cs,DatiDocumentoValidator,The following statement contains a magic number: RuleFor(x => x.NumItem)                  .Length(1' 20)                  .BasicLatinValidator()                  .When(x => !string.IsNullOrEmpty(x.NumItem));
Magic Number,FatturaElettronica.Validators,DatiDocumentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiDocumentoValidator.cs,DatiDocumentoValidator,The following statement contains a magic number: RuleFor(x => x.CodiceCommessaConvenzione)                  .Length(1' 100)                  .Latin1SupplementValidator()                   .When(x => !string.IsNullOrEmpty(x.CodiceCommessaConvenzione));
Magic Number,FatturaElettronica.Validators,DatiDocumentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiDocumentoValidator.cs,DatiDocumentoValidator,The following statement contains a magic number: RuleFor(x => x.CodiceCUP)                  .Length(1' 15)                  .BasicLatinValidator()                  .When(x => !string.IsNullOrEmpty(x.CodiceCUP));
Magic Number,FatturaElettronica.Validators,DatiDocumentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiDocumentoValidator.cs,DatiDocumentoValidator,The following statement contains a magic number: RuleFor(x => x.CodiceCIG)                  .Length(1' 15)                  .BasicLatinValidator()                  .When(x => !string.IsNullOrEmpty(x.CodiceCIG));
Magic Number,FatturaElettronica.Validators,DatiGeneraliDocumentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiGeneraliDocumentoValidator.cs,DatiGeneraliDocumentoValidator,The following statement contains a magic number: RuleFor(x => x.Numero)                  .NotEmpty()                  .BasicLatinValidator()                  .Length(1' 20);
Magic Number,FatturaElettronica.Validators,DatiGeneraliDocumentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiGeneraliDocumentoValidator.cs,DatiGeneraliDocumentoValidator,The following statement contains a magic number: RuleForEach(x => x.Causale)                  .SetValidator(new CausaleValidator(1' 200));
Magic Number,FatturaElettronica.Validators,DatiRiepilogoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiRiepilogoValidator.cs,DatiRiepilogoValidator,The following statement contains a magic number: RuleFor(x => x.RiferimentoNormativo)                  .Length(1' 100)                  .Latin1SupplementValidator()                  .When(x => !string.IsNullOrEmpty(x.RiferimentoNormativo));
Magic Number,FatturaElettronica.Validators,DatiRiepilogoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiRiepilogoValidator.cs,ImpostaValidateAgainstError00421,The following statement contains a magic number: return (Math.Abs(datiRiepilogo.Imposta - decimal.Parse(((datiRiepilogo.AliquotaIVA * datiRiepilogo.ImponibileImporto) / 100).ToString("0.00"))) <= 0.01m);
Magic Number,FatturaElettronica.Validators,DatiRiepilogoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiRiepilogoValidator.cs,ImpostaValidateAgainstError00421,The following statement contains a magic number: return (Math.Abs(datiRiepilogo.Imposta - decimal.Parse(((datiRiepilogo.AliquotaIVA * datiRiepilogo.ImponibileImporto) / 100).ToString("0.00"))) <= 0.01m);
Magic Number,FatturaElettronica.Validators,DatiTrasmissioneValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiTrasmissioneValidator.cs,DatiTrasmissioneValidator,The following statement contains a magic number: RuleFor(dt => dt.ProgressivoInvio)                  .NotEmpty()                  .BasicLatinValidator()                  .Length(1' 10);
Magic Number,FatturaElettronica.Validators,DatiTrasmissioneValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiTrasmissioneValidator.cs,DatiTrasmissioneValidator,The following statement contains a magic number: RuleFor(dt => dt.CodiceDestinatario)                  .Length(6)                  .When(dt => dt.FormatoTrasmissione == Defaults.FormatoTrasmissione.PubblicaAmministrazione)                  .WithErrorCode("00427");
Magic Number,FatturaElettronica.Validators,DatiTrasmissioneValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiTrasmissioneValidator.cs,DatiTrasmissioneValidator,The following statement contains a magic number: RuleFor(dt => dt.CodiceDestinatario)                  .Length(7)                  .When(dt => dt.FormatoTrasmissione == Defaults.FormatoTrasmissione.Privati)                  .WithErrorCode("00427");
Magic Number,FatturaElettronica.Validators,DatiTrasmissioneValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiTrasmissioneValidator.cs,DatiTrasmissioneValidator,The following statement contains a magic number: RuleFor(dt => dt.PECDestinatario)                  .Length(7' 256)                  .When(x => !string.IsNullOrEmpty(x.PECDestinatario));
Magic Number,FatturaElettronica.Validators,DatiTrasmissioneValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiTrasmissioneValidator.cs,DatiTrasmissioneValidator,The following statement contains a magic number: RuleFor(dt => dt.PECDestinatario)                  .Length(7' 256)                  .When(x => !string.IsNullOrEmpty(x.PECDestinatario));
Magic Number,FatturaElettronica.Validators,DatiTrasportoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiTrasportoValidator.cs,DatiTrasportoValidator,The following statement contains a magic number: RuleFor(x => x.MezzoTrasporto)                  .Length(1' 80)                  .Latin1SupplementValidator()                  .When(x => !string.IsNullOrEmpty(x.MezzoTrasporto));
Magic Number,FatturaElettronica.Validators,DatiTrasportoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiTrasportoValidator.cs,DatiTrasportoValidator,The following statement contains a magic number: RuleFor(x => x.CausaleTrasporto)                  .Length(1' 100)                  .Latin1SupplementValidator()                  .When(x => !string.IsNullOrEmpty(x.CausaleTrasporto));
Magic Number,FatturaElettronica.Validators,DatiTrasportoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiTrasportoValidator.cs,DatiTrasportoValidator,The following statement contains a magic number: RuleFor(x => x.Descrizione)                  .Length(1' 100)                  .Latin1SupplementValidator()                  .When(x => !string.IsNullOrEmpty(x.Descrizione));
Magic Number,FatturaElettronica.Validators,DatiTrasportoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiTrasportoValidator.cs,DatiTrasportoValidator,The following statement contains a magic number: RuleFor(x => x.UnitaMisuraPeso)                  .Length(1' 10)                  .BasicLatinValidator()                  .When(x => !string.IsNullOrEmpty(x.UnitaMisuraPeso));
Magic Number,FatturaElettronica.Validators,DatiTrasportoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiTrasportoValidator.cs,DatiTrasportoValidator,The following statement contains a magic number: RuleFor(x => x.PesoLordo)                  .LessThanOrEqualTo(9999.99m);
Magic Number,FatturaElettronica.Validators,DatiTrasportoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiTrasportoValidator.cs,DatiTrasportoValidator,The following statement contains a magic number: RuleFor(x => x.PesoNetto)                  .LessThanOrEqualTo(9999.99m);
Magic Number,FatturaElettronica.Validators,DatiVeicoliValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DatiVeicoliValidator.cs,DatiVeicoliValidator,The following statement contains a magic number: RuleFor(x => x.TotalePercorso)                  .NotEmpty()                  .BasicLatinValidator()                  .Length(1' 15);
Magic Number,FatturaElettronica.Validators,DenominazioneNomeCognomeValidator<T>,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DenominazioneNomeCognomeValidator.cs,DenominazioneNomeCognomeValidator,The following statement contains a magic number: RuleFor(x => x.Denominazione)                  .NotEmpty()                  .WithErrorCode(expectedErrorCode)                  .Length(1' 80)                  .WithErrorCode(expectedErrorCode)                  .Latin1SupplementValidator()                  .When(x => string.IsNullOrEmpty(x.CognomeNome));
Magic Number,FatturaElettronica.Validators,DenominazioneNomeCognomeValidator<T>,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DenominazioneNomeCognomeValidator.cs,DenominazioneNomeCognomeValidator,The following statement contains a magic number: RuleFor(x => x.Nome)                  .NotEmpty()                  .WithErrorCode(expectedErrorCode)                  .Length(1' 60)                  .WithErrorCode(expectedErrorCode)                  .Latin1SupplementValidator()                  .When(x => string.IsNullOrEmpty(x.Denominazione));
Magic Number,FatturaElettronica.Validators,DenominazioneNomeCognomeValidator<T>,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DenominazioneNomeCognomeValidator.cs,DenominazioneNomeCognomeValidator,The following statement contains a magic number: RuleFor(x => x.Cognome)                  .NotEmpty()                  .WithErrorCode(expectedErrorCode)                  .Length(1' 60)                  .WithErrorCode(expectedErrorCode)                  .Latin1SupplementValidator()                  .When(x => string.IsNullOrEmpty(x.Denominazione));
Magic Number,FatturaElettronica.Validators,DettaglioLineeValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DettaglioLineeValidator.cs,DettaglioLineeValidator,The following statement contains a magic number: RuleFor(x => x.Descrizione)                  .NotEmpty()                  .Length(1' 1000)                  .Latin1SupplementValidator();
Magic Number,FatturaElettronica.Validators,DettaglioLineeValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DettaglioLineeValidator.cs,DettaglioLineeValidator,The following statement contains a magic number: RuleFor(x => x.UnitaMisura)                  .Length(1' 10)                  .BasicLatinValidator();
Magic Number,FatturaElettronica.Validators,DettaglioLineeValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DettaglioLineeValidator.cs,DettaglioLineeValidator,The following statement contains a magic number: RuleFor(x => x.RiferimentoAmministrazione)                  .Length(1' 20)                  .BasicLatinValidator()                  .When(x => !string.IsNullOrEmpty(x.RiferimentoAmministrazione));
Magic Number,FatturaElettronica.Validators,DettaglioLineeValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DettaglioLineeValidator.cs,PrezzoTotaleValidateAgainstError00423,The following statement contains a magic number: var prezzo = Math.Round(challenge.PrezzoUnitario' 8' MidpointRounding.AwayFromZero);
Magic Number,FatturaElettronica.Validators,DettaglioLineeValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DettaglioLineeValidator.cs,PrezzoTotaleValidateAgainstError00423,The following statement contains a magic number: var importo =                      (decimal)((sconto.Importo != null)                      ? Math.Abs((decimal)sconto.Importo)                      : (prezzo * sconto.Percentuale) / 100);
Magic Number,FatturaElettronica.Validators,DettaglioLineeValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DettaglioLineeValidator.cs,PrezzoTotaleValidateAgainstError00423,The following statement contains a magic number: return Math.Abs(Math.Round(challenge.PrezzoTotale' 2' MidpointRounding.AwayFromZero)                  - prezzo * (challenge.Quantita ?? 1)) <= 0.01m;
Magic Number,FatturaElettronica.Validators,DettaglioLineeValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DettaglioLineeValidator.cs,PrezzoTotaleValidateAgainstError00423,The following statement contains a magic number: return Math.Abs(Math.Round(challenge.PrezzoTotale' 2' MidpointRounding.AwayFromZero)                  - prezzo * (challenge.Quantita ?? 1)) <= 0.01m;
Magic Number,FatturaElettronica.Validators,DettaglioPagamentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DettaglioPagamentoValidator.cs,DettaglioPagamentoValidator,The following statement contains a magic number: RuleFor(x => x.Beneficiario)                  .Length(1' 200)                  .Latin1SupplementValidator()                  .When(x => !string.IsNullOrEmpty(x.Beneficiario));
Magic Number,FatturaElettronica.Validators,DettaglioPagamentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DettaglioPagamentoValidator.cs,DettaglioPagamentoValidator,The following statement contains a magic number: RuleFor(x => x.CodUfficioPostale)                  .Length(1' 20)                  .BasicLatinValidator()                  .When(x => !string.IsNullOrEmpty(x.CodUfficioPostale));
Magic Number,FatturaElettronica.Validators,DettaglioPagamentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DettaglioPagamentoValidator.cs,DettaglioPagamentoValidator,The following statement contains a magic number: RuleFor(x => x.CognomeQuietanzante)                  .Length(1' 60)                  .Latin1SupplementValidator()                  .When(x => !string.IsNullOrEmpty(x.CognomeQuietanzante));
Magic Number,FatturaElettronica.Validators,DettaglioPagamentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DettaglioPagamentoValidator.cs,DettaglioPagamentoValidator,The following statement contains a magic number: RuleFor(x => x.NomeQuietanzante)                  .Length(1' 60)                  .Latin1SupplementValidator()                  .When(x => !string.IsNullOrEmpty(x.NomeQuietanzante));
Magic Number,FatturaElettronica.Validators,DettaglioPagamentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DettaglioPagamentoValidator.cs,DettaglioPagamentoValidator,The following statement contains a magic number: RuleFor(x => x.CFQuietanzante)                  .Length(1' 16)                  .When(x => !string.IsNullOrEmpty(x.CFQuietanzante));
Magic Number,FatturaElettronica.Validators,DettaglioPagamentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DettaglioPagamentoValidator.cs,DettaglioPagamentoValidator,The following statement contains a magic number: RuleFor(x => x.TitoloQuietanzante)                  .Length(2' 10)                  .BasicLatinValidator()                  .When(x => !string.IsNullOrEmpty(x.TitoloQuietanzante));
Magic Number,FatturaElettronica.Validators,DettaglioPagamentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DettaglioPagamentoValidator.cs,DettaglioPagamentoValidator,The following statement contains a magic number: RuleFor(x => x.TitoloQuietanzante)                  .Length(2' 10)                  .BasicLatinValidator()                  .When(x => !string.IsNullOrEmpty(x.TitoloQuietanzante));
Magic Number,FatturaElettronica.Validators,DettaglioPagamentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DettaglioPagamentoValidator.cs,DettaglioPagamentoValidator,The following statement contains a magic number: RuleFor(x => x.IstitutoFinanziario)                  .Length(1' 80)                  .Latin1SupplementValidator()                  .When(x => !string.IsNullOrEmpty(x.IstitutoFinanziario));
Magic Number,FatturaElettronica.Validators,DettaglioPagamentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DettaglioPagamentoValidator.cs,DettaglioPagamentoValidator,The following statement contains a magic number: RuleFor(x => x.ABI)                  .Length(5)                  .When(x => !string.IsNullOrEmpty(x.ABI));
Magic Number,FatturaElettronica.Validators,DettaglioPagamentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DettaglioPagamentoValidator.cs,DettaglioPagamentoValidator,The following statement contains a magic number: RuleFor(x => x.CAB)                  .Length(5)                  .When(x => !string.IsNullOrEmpty(x.CAB));
Magic Number,FatturaElettronica.Validators,DettaglioPagamentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DettaglioPagamentoValidator.cs,DettaglioPagamentoValidator,The following statement contains a magic number: RuleFor(x => x.BIC)                  .Length(8' 11)                  .When(x => !string.IsNullOrEmpty(x.BIC));
Magic Number,FatturaElettronica.Validators,DettaglioPagamentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DettaglioPagamentoValidator.cs,DettaglioPagamentoValidator,The following statement contains a magic number: RuleFor(x => x.BIC)                  .Length(8' 11)                  .When(x => !string.IsNullOrEmpty(x.BIC));
Magic Number,FatturaElettronica.Validators,DettaglioPagamentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\DettaglioPagamentoValidator.cs,DettaglioPagamentoValidator,The following statement contains a magic number: RuleFor(x => x.CodicePagamento)                  .Length(1' 60)                  .BasicLatinValidator()                  .When(x => !string.IsNullOrEmpty(x.CodicePagamento));
Magic Number,FatturaElettronica.Validators,FatturaPrincipaleValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\FatturaPrincipaleValidator.cs,FatturaPrincipaleValidator,The following statement contains a magic number: RuleFor(x => x.NumeroFatturaPrincipale)                  .NotEmpty()                  .BasicLatinValidator()                  .Length(1' 20);
Magic Number,FatturaElettronica.Validators,IdFiscaleIVAValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\IdFiscaleIVAValidator.cs,IdFiscaleIVAValidator,The following statement contains a magic number: RuleFor(id => id.IdCodice)                  .NotEmpty()                  .Length(1' 28);
Magic Number,FatturaElettronica.Validators,IscrizioneREAValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\IscrizioneREAValidator.cs,IscrizioneREAValidator,The following statement contains a magic number: RuleFor(x => x.NumeroREA)                  .NotEmpty()                  .BasicLatinValidator()                  .Length(1' 20);
Magic Number,FatturaElettronica.Validators,LocalitàBaseValidator<T>,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\LocalitàBaseValidator.cs,LocalitàBaseValidator,The following statement contains a magic number: RuleFor(x => x.Indirizzo)                  .NotEmpty()                  .Length(1' 60)                  .Latin1SupplementValidator();
Magic Number,FatturaElettronica.Validators,LocalitàBaseValidator<T>,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\LocalitàBaseValidator.cs,LocalitàBaseValidator,The following statement contains a magic number: RuleFor(x => x.NumeroCivico)                  .Length(1' 8)                  .When(x => !string.IsNullOrEmpty(x.NumeroCivico));
Magic Number,FatturaElettronica.Validators,LocalitàBaseValidator<T>,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\LocalitàBaseValidator.cs,LocalitàBaseValidator,The following statement contains a magic number: RuleFor(x => x.CAP)                  .NotEmpty()                  .Length(5);
Magic Number,FatturaElettronica.Validators,LocalitàBaseValidator<T>,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\LocalitàBaseValidator.cs,LocalitàBaseValidator,The following statement contains a magic number: RuleFor(x => x.Comune)                  .NotEmpty()                  .Length(1' 60)                  .Latin1SupplementValidator();
Magic Number,FatturaElettronica.Validators.Semplificata,AllegatiValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\AllegatiValidator.cs,AllegatiValidator,The following statement contains a magic number: RuleFor(x => x.NomeAttachment)                  .NotEmpty()                  .Latin1SupplementValidator()                  .Length(1' 60);
Magic Number,FatturaElettronica.Validators.Semplificata,AllegatiValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\AllegatiValidator.cs,AllegatiValidator,The following statement contains a magic number: RuleFor(x => x.AlgoritmoCompressione)                  .Length(1' 60)                  .BasicLatinValidator()                  .When(x => !string.IsNullOrEmpty(x.AlgoritmoCompressione));
Magic Number,FatturaElettronica.Validators.Semplificata,AllegatiValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\AllegatiValidator.cs,AllegatiValidator,The following statement contains a magic number: RuleFor(x => x.FormatoAttachment)                  .Length(1' 10)                  .BasicLatinValidator()                  .When(x => !string.IsNullOrEmpty(x.FormatoAttachment));
Magic Number,FatturaElettronica.Validators.Semplificata,AllegatiValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\AllegatiValidator.cs,AllegatiValidator,The following statement contains a magic number: RuleFor(x => x.DescrizioneAttachment)                  .Length(1' 100)                  .Latin1SupplementValidator()                  .When(x => !string.IsNullOrEmpty(x.DescrizioneAttachment));
Magic Number,FatturaElettronica.Validators.Semplificata,AltriDatiIdentificativiValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\AltriDatiIdentificativiValidator.cs,AltriDatiIdentificativiValidator,The following statement contains a magic number: RuleFor(x => x.Denominazione)                  .NotEmpty()                  .WithErrorCode(expectedErrorCode)                  .Length(1' 80)                  .WithErrorCode(expectedErrorCode)                  .Latin1SupplementValidator()                  .When(x => string.IsNullOrEmpty(x.CognomeNome));
Magic Number,FatturaElettronica.Validators.Semplificata,AltriDatiIdentificativiValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\AltriDatiIdentificativiValidator.cs,AltriDatiIdentificativiValidator,The following statement contains a magic number: RuleFor(x => x.Nome)                  .NotEmpty()                  .WithErrorCode(expectedErrorCode)                  .Length(1' 60)                  .WithErrorCode(expectedErrorCode)                  .Latin1SupplementValidator()                  .When(x => string.IsNullOrEmpty(x.Denominazione));
Magic Number,FatturaElettronica.Validators.Semplificata,AltriDatiIdentificativiValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\AltriDatiIdentificativiValidator.cs,AltriDatiIdentificativiValidator,The following statement contains a magic number: RuleFor(x => x.Cognome)                  .NotEmpty()                  .WithErrorCode(expectedErrorCode)                  .Length(1' 60)                  .WithErrorCode(expectedErrorCode)                  .Latin1SupplementValidator()                  .When(x => string.IsNullOrEmpty(x.Denominazione));
Magic Number,FatturaElettronica.Validators.Semplificata,CedentePrestatoreValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\CedentePrestatoreValidator.cs,CedentePrestatoreValidator,The following statement contains a magic number: RuleFor(x => x.CodiceFiscale)                  .Length(11' 16)                  .When(x => !string.IsNullOrEmpty(x.CodiceFiscale));
Magic Number,FatturaElettronica.Validators.Semplificata,CedentePrestatoreValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\CedentePrestatoreValidator.cs,CedentePrestatoreValidator,The following statement contains a magic number: RuleFor(x => x.CodiceFiscale)                  .Length(11' 16)                  .When(x => !string.IsNullOrEmpty(x.CodiceFiscale));
Magic Number,FatturaElettronica.Validators.Semplificata,CedentePrestatoreValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\CedentePrestatoreValidator.cs,CedentePrestatoreValidator,The following statement contains a magic number: RuleFor(x => x.Denominazione)                  .NotEmpty()                  .WithErrorCode(expectedErrorCode)                  .Length(1' 80)                  .WithErrorCode(expectedErrorCode)                  .Latin1SupplementValidator()                  .When(x => string.IsNullOrEmpty(x.CognomeNome));
Magic Number,FatturaElettronica.Validators.Semplificata,CedentePrestatoreValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\CedentePrestatoreValidator.cs,CedentePrestatoreValidator,The following statement contains a magic number: RuleFor(x => x.Nome)                  .NotEmpty()                  .WithErrorCode(expectedErrorCode)                  .Length(1' 60)                  .WithErrorCode(expectedErrorCode)                  .Latin1SupplementValidator()                  .When(x => string.IsNullOrEmpty(x.Denominazione));
Magic Number,FatturaElettronica.Validators.Semplificata,CedentePrestatoreValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\CedentePrestatoreValidator.cs,CedentePrestatoreValidator,The following statement contains a magic number: RuleFor(x => x.Cognome)                  .NotEmpty()                  .WithErrorCode(expectedErrorCode)                  .Length(1' 60)                  .WithErrorCode(expectedErrorCode)                  .Latin1SupplementValidator()                  .When(x => string.IsNullOrEmpty(x.Denominazione));
Magic Number,FatturaElettronica.Validators.Semplificata,DatiBeniServiziValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\DatiBeniServiziValidator.cs,DatiBeniServiziValidator,The following statement contains a magic number: RuleFor(x => x.Descrizione)                 .NotEmpty()                 .Length(1' 1000)                 .Latin1SupplementValidator();
Magic Number,FatturaElettronica.Validators.Semplificata,DatiBeniServiziValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\DatiBeniServiziValidator.cs,DatiBeniServiziValidator,The following statement contains a magic number: RuleFor(x => x.RiferimentoNormativo)                 .Length(1' 100)                 .BasicLatinValidator()                 .When(x => !string.IsNullOrEmpty(x.RiferimentoNormativo));
Magic Number,FatturaElettronica.Validators.Semplificata,DatiFatturaRettificataValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\DatiFatturaRettificataValidator.cs,DatiFatturaRettificataValidator,The following statement contains a magic number: RuleFor(x => x.NumeroFR)                  .NotEmpty()                  .BasicLatinValidator()                  .Length(1' 20);
Magic Number,FatturaElettronica.Validators.Semplificata,DatiFatturaRettificataValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\DatiFatturaRettificataValidator.cs,DatiFatturaRettificataValidator,The following statement contains a magic number: RuleFor(x => x.ElementiRettificati)                  .NotEmpty()                  .BasicLatinValidator()                  .Length(1' 1000);
Magic Number,FatturaElettronica.Validators.Semplificata,DatiGeneraliDocumentoValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\DatiGeneraliDocumentoValidator.cs,DatiGeneraliDocumentoValidator,The following statement contains a magic number: RuleFor(x => x.Numero)                  .NotEmpty()                  .BasicLatinValidator()                  .Length(1' 20);
Magic Number,FatturaElettronica.Validators.Semplificata,DatiTrasmissioneValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\DatiTrasmissioneValidator.cs,DatiTrasmissioneValidator,The following statement contains a magic number: RuleFor(dt => dt.ProgressivoInvio)                  .NotEmpty()                  .BasicLatinValidator()                  .Length(1' 10);
Magic Number,FatturaElettronica.Validators.Semplificata,DatiTrasmissioneValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\DatiTrasmissioneValidator.cs,DatiTrasmissioneValidator,The following statement contains a magic number: RuleFor(dt => dt.CodiceDestinatario)                  .Length(7)                  .When(dt => dt.FormatoTrasmissione == Defaults.FormatoTrasmissione.Semplificata)                  .WithErrorCode("00311");
Magic Number,FatturaElettronica.Validators.Semplificata,DatiTrasmissioneValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\DatiTrasmissioneValidator.cs,DatiTrasmissioneValidator,The following statement contains a magic number: RuleFor(dt => dt.PECDestinatario)                  .Length(7' 256)                  .When(x => !string.IsNullOrEmpty(x.PECDestinatario));
Magic Number,FatturaElettronica.Validators.Semplificata,DatiTrasmissioneValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\DatiTrasmissioneValidator.cs,DatiTrasmissioneValidator,The following statement contains a magic number: RuleFor(dt => dt.PECDestinatario)                  .Length(7' 256)                  .When(x => !string.IsNullOrEmpty(x.PECDestinatario));
Magic Number,FatturaElettronica.Validators.Semplificata,DenominazioneNomeCognomeValidator<T>,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\DenominazioneNomeCognomeValidator.cs,DenominazioneNomeCognomeValidator,The following statement contains a magic number: RuleFor(x => x.Denominazione)                  .NotEmpty()                  .WithErrorCode(expectedErrorCode)                  .Length(1' 80)                  .WithErrorCode(expectedErrorCode)                  .Latin1SupplementValidator()                  .When(x => string.IsNullOrEmpty(x.CognomeNome));
Magic Number,FatturaElettronica.Validators.Semplificata,DenominazioneNomeCognomeValidator<T>,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\DenominazioneNomeCognomeValidator.cs,DenominazioneNomeCognomeValidator,The following statement contains a magic number: RuleFor(x => x.Nome)                  .NotEmpty()                  .WithErrorCode(expectedErrorCode)                  .Length(1' 60)                  .WithErrorCode(expectedErrorCode)                  .Latin1SupplementValidator()                  .When(x => string.IsNullOrEmpty(x.Denominazione));
Magic Number,FatturaElettronica.Validators.Semplificata,DenominazioneNomeCognomeValidator<T>,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\DenominazioneNomeCognomeValidator.cs,DenominazioneNomeCognomeValidator,The following statement contains a magic number: RuleFor(x => x.Cognome)                  .NotEmpty()                  .WithErrorCode(expectedErrorCode)                  .Length(1' 60)                  .WithErrorCode(expectedErrorCode)                  .Latin1SupplementValidator()                  .When(x => string.IsNullOrEmpty(x.Denominazione));
Magic Number,FatturaElettronica.Validators.Semplificata,FatturaElettronicaBodyValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\FatturaElettronicaBodyValidator.cs,ImportoTotaleValidateAgainstError00460,The following statement contains a magic number: importoTotale > 400
Magic Number,FatturaElettronica.Validators.Semplificata,IdentificativiFiscaliValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\IdentificativiFiscaliValidator.cs,IdentificativiFiscaliValidator,The following statement contains a magic number: RuleFor(x => x.CodiceFiscale)                  .Length(11' 16)                  .When(x => !string.IsNullOrEmpty(x.CodiceFiscale));
Magic Number,FatturaElettronica.Validators.Semplificata,IdentificativiFiscaliValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\IdentificativiFiscaliValidator.cs,IdentificativiFiscaliValidator,The following statement contains a magic number: RuleFor(x => x.CodiceFiscale)                  .Length(11' 16)                  .When(x => !string.IsNullOrEmpty(x.CodiceFiscale));
Magic Number,FatturaElettronica.Validators.Semplificata,IscrizioneREAValidator,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\Semplificata\IscrizioneREAValidator.cs,IscrizioneREAValidator,The following statement contains a magic number: RuleFor(x => x.NumeroREA)                  .NotEmpty()                  .BasicLatinValidator()                  .Length(1' 20);
Missing Default,FatturaElettronica.Ordinaria,FatturaOrdinaria,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Ordinaria\FatturaOrdinaria.cs,CreateInstance,The following switch statement is missing a default case: switch (formato)              {                  case Instance.PubblicaAmministrazione:                      fattura.FatturaElettronicaHeader.DatiTrasmissione.FormatoTrasmissione = FormatoTrasmissione.PubblicaAmministrazione;                      break;                  case Instance.Privati:                      fattura = new FatturaOrdinaria();                      fattura.FatturaElettronicaHeader.DatiTrasmissione.FormatoTrasmissione = FormatoTrasmissione.Privati;                      fattura.FatturaElettronicaHeader.DatiTrasmissione.CodiceDestinatario = new string('0'' 7);                      break;              }
Missing Default,FatturaElettronica.Semplificata,FatturaSemplificata,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Semplificata\FatturaSemplificata.cs,CreateInstance,The following switch statement is missing a default case: switch (formato)              {                  case Instance.Semplificata:                      fatturaSemplificata.FatturaElettronicaHeader.DatiTrasmissione.FormatoTrasmissione = FormatoTrasmissione.Semplificata;                      fatturaSemplificata.FatturaElettronicaHeader.DatiTrasmissione.CodiceDestinatario = new string('0'' 7);                      break;              }
Missing Default,FatturaElettronica.Validators,LatinBaseValidator<T>,D:\research\architectureSmells\repos\FatturaElettronicaPA_FatturaElettronicaPA\Validators\LatinValidators.cs,IsValid,The following switch statement is missing a default case: switch (_charset)              {                  case Charsets.BasicLatin:                      challenge = @"^[\p{IsBasicLatin}]+$";                      break;                  case Charsets.Latin1Supplement:                      challenge = @"^[\p{IsBasicLatin}\p{IsLatin-1Supplement}]+$";                      break;              }
