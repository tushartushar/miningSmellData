Implementation smell,Namespace,Class,File,Method,Description
Long Method,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,DrawLine,The method has 147 lines of code.
Long Method,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ForEachPixelsOnLine,The method has 149 lines of code.
Long Method,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,DrawLine,The method has 147 lines of code.
Long Method,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ForEachPixelsOnLine,The method has 149 lines of code.
Long Method,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,DrawLine,The method has 147 lines of code.
Long Method,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,ForEachPixelsOnLine,The method has 149 lines of code.
Long Method,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,DrawLine,The method has 147 lines of code.
Long Method,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ForEachPixelsOnLine,The method has 149 lines of code.
Long Method,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,DrawLine,The method has 147 lines of code.
Long Method,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,ForEachPixelsOnLine,The method has 149 lines of code.
Long Method,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,DrawLine,The method has 147 lines of code.
Long Method,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,ForEachPixelsOnLine,The method has 149 lines of code.
Long Method,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,DrawLine,The method has 147 lines of code.
Long Method,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,ForEachPixelsOnLine,The method has 149 lines of code.
Long Method,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,DrawLine,The method has 147 lines of code.
Long Method,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ForEachPixelsOnLine,The method has 149 lines of code.
Long Method,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,DrawLine,The method has 147 lines of code.
Long Method,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ForEachPixelsOnLine,The method has 149 lines of code.
Long Method,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,DrawLine,The method has 147 lines of code.
Long Method,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ForEachPixelsOnLine,The method has 149 lines of code.
Long Method,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,DrawLine,The method has 147 lines of code.
Long Method,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ForEachPixelsOnLine,The method has 149 lines of code.
Long Method,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,DrawLine,The method has 147 lines of code.
Long Method,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ForEachPixelsOnLine,The method has 149 lines of code.
Long Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,Thinning,The method has 142 lines of code.
Long Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,The method has 171 lines of code.
Long Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,The method has 183 lines of code.
Long Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyDistanceTransformFast32,The method has 102 lines of code.
Long Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DrawLine,The method has 147 lines of code.
Long Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ForEachPixelsOnLine,The method has 149 lines of code.
Long Method,Geb.Image.Formats.Gif,LzwDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwDecoder.cs,DecodePixels,The method has 115 lines of code.
Long Method,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACSuccessive,The method has 105 lines of code.
Long Method,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ParseStream,The method has 110 lines of code.
Long Method,Geb.Image.Formats.MetaData.Profiles.Exif,ExifValue,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifValue.cs,Create,The method has 271 lines of code.
Long Method,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteTagDataEntry,The method has 111 lines of code.
Long Method,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ProcessDefilteredScanline,The method has 103 lines of code.
Long Method,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ProcessInterlacedDefilteredScanline,The method has 158 lines of code.
Long Method,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,DrawLine,The method has 147 lines of code.
Long Method,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,ForEachPixelsOnLine,The method has 149 lines of code.
Complex Method,Geb.Image,ConvolutionKernel,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\ConvolutionKernel.cs,ConvolutionKernel,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image,FourierTransform,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,DFT2,Cyclomatic complexity of the method is 13
Complex Method,Geb.Image,FourierTransform,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,FFT2,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,Cyclomatic complexity of the method is 32
Complex Method,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,CopyFrom,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,FloodFill,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ApplyModeFilter,Cyclomatic complexity of the method is 16
Complex Method,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,DrawLine,Cyclomatic complexity of the method is 20
Complex Method,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ForEachPixelsOnLine,Cyclomatic complexity of the method is 21
Complex Method,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,DrawLine,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,CreatePaddingImage,Cyclomatic complexity of the method is 17
Complex Method,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,CopyFrom,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,FloodFill,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ApplyModeFilter,Cyclomatic complexity of the method is 16
Complex Method,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,DrawLine,Cyclomatic complexity of the method is 20
Complex Method,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ForEachPixelsOnLine,Cyclomatic complexity of the method is 21
Complex Method,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,DrawLine,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,CreatePaddingImage,Cyclomatic complexity of the method is 17
Complex Method,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,CopyFrom,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,FloodFill,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,ApplyModeFilter,Cyclomatic complexity of the method is 16
Complex Method,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,DrawLine,Cyclomatic complexity of the method is 20
Complex Method,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,ForEachPixelsOnLine,Cyclomatic complexity of the method is 21
Complex Method,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,DrawLine,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,CreatePaddingImage,Cyclomatic complexity of the method is 17
Complex Method,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,CopyFrom,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,FloodFill,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ApplyModeFilter,Cyclomatic complexity of the method is 16
Complex Method,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,DrawLine,Cyclomatic complexity of the method is 20
Complex Method,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ForEachPixelsOnLine,Cyclomatic complexity of the method is 21
Complex Method,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,DrawLine,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,CreatePaddingImage,Cyclomatic complexity of the method is 17
Complex Method,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ApplyConvolution,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,CopyFrom,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,FloodFill,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,ApplyModeFilter,Cyclomatic complexity of the method is 16
Complex Method,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,DrawLine,Cyclomatic complexity of the method is 20
Complex Method,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,ForEachPixelsOnLine,Cyclomatic complexity of the method is 21
Complex Method,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,DrawLine,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,CreatePaddingImage,Cyclomatic complexity of the method is 17
Complex Method,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,CopyFrom,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,FloodFill,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,ApplyModeFilter,Cyclomatic complexity of the method is 16
Complex Method,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,DrawLine,Cyclomatic complexity of the method is 20
Complex Method,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,ForEachPixelsOnLine,Cyclomatic complexity of the method is 21
Complex Method,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,DrawLine,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,CreatePaddingImage,Cyclomatic complexity of the method is 17
Complex Method,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,CopyFrom,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,FloodFill,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,ApplyModeFilter,Cyclomatic complexity of the method is 16
Complex Method,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,DrawLine,Cyclomatic complexity of the method is 20
Complex Method,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,ForEachPixelsOnLine,Cyclomatic complexity of the method is 21
Complex Method,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,DrawLine,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,CreatePaddingImage,Cyclomatic complexity of the method is 17
Complex Method,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,CopyFrom,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,FloodFill,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ApplyModeFilter,Cyclomatic complexity of the method is 16
Complex Method,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,DrawLine,Cyclomatic complexity of the method is 20
Complex Method,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ForEachPixelsOnLine,Cyclomatic complexity of the method is 21
Complex Method,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,DrawLine,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,CreatePaddingImage,Cyclomatic complexity of the method is 17
Complex Method,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ApplyConvolution,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ToHypsometricMap,Cyclomatic complexity of the method is 14
Complex Method,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,CopyFrom,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,FloodFill,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ApplyModeFilter,Cyclomatic complexity of the method is 16
Complex Method,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,DrawLine,Cyclomatic complexity of the method is 20
Complex Method,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ForEachPixelsOnLine,Cyclomatic complexity of the method is 21
Complex Method,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,DrawLine,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,CreatePaddingImage,Cyclomatic complexity of the method is 17
Complex Method,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ApplyConvolution,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,CopyFrom,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,FloodFill,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ApplyModeFilter,Cyclomatic complexity of the method is 16
Complex Method,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,DrawLine,Cyclomatic complexity of the method is 20
Complex Method,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ForEachPixelsOnLine,Cyclomatic complexity of the method is 21
Complex Method,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,DrawLine,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,CreatePaddingImage,Cyclomatic complexity of the method is 17
Complex Method,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,CopyFrom,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,FloodFill,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ApplyModeFilter,Cyclomatic complexity of the method is 16
Complex Method,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,DrawLine,Cyclomatic complexity of the method is 20
Complex Method,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ForEachPixelsOnLine,Cyclomatic complexity of the method is 21
Complex Method,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,DrawLine,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,CreatePaddingImage,Cyclomatic complexity of the method is 17
Complex Method,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,CopyFrom,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,FloodFill,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ApplyModeFilter,Cyclomatic complexity of the method is 16
Complex Method,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,DrawLine,Cyclomatic complexity of the method is 20
Complex Method,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ForEachPixelsOnLine,Cyclomatic complexity of the method is 21
Complex Method,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,DrawLine,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,CreatePaddingImage,Cyclomatic complexity of the method is 17
Complex Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,Thinning,Cyclomatic complexity of the method is 15
Complex Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,SkeletonizeByMidPoint,Cyclomatic complexity of the method is 13
Complex Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,Cyclomatic complexity of the method is 24
Complex Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,Cyclomatic complexity of the method is 26
Complex Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyLocalThreshold,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyDistanceTransformFast,Cyclomatic complexity of the method is 13
Complex Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyDistanceTransformFast32,Cyclomatic complexity of the method is 18
Complex Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyBilateralFilter,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,CopyFrom,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,FloodFill,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyModeFilter,Cyclomatic complexity of the method is 16
Complex Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DrawLine,Cyclomatic complexity of the method is 20
Complex Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ForEachPixelsOnLine,Cyclomatic complexity of the method is 21
Complex Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DrawLine,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,CreatePaddingImage,Cyclomatic complexity of the method is 17
Complex Method,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyConvolution,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,run,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,UncompressRle8,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image.Formats.Gif,GifDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifDecoderCore.cs,Identify,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image.Formats.Gif,LzwDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwDecoder.cs,DecodePixels,Cyclomatic complexity of the method is 14
Complex Method,Geb.Image.Formats.Gif,LzwEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwEncoder.cs,Compress,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image.Formats.Gif,LzwEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwEncoder.cs,Output,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeScanBaseline,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeScanProgressive,Cyclomatic complexity of the method is 15
Complex Method,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeBaseline,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACFirst,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACSuccessive,Cyclomatic complexity of the method is 20
Complex Method,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ParseStream,Cyclomatic complexity of the method is 19
Complex Method,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineQuantizationTablesMarker,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,AddValues,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,ConvertValue,Cyclomatic complexity of the method is 26
Complex Method,Geb.Image.Formats.MetaData.Profiles.Exif,ExifValue,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifValue.cs,Create,Cyclomatic complexity of the method is 16
Complex Method,Geb.Image.Formats.MetaData.Profiles.Exif,ExifValue,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifValue.cs,CheckValue,Cyclomatic complexity of the method is 15
Complex Method,Geb.Image.Formats.MetaData.Profiles.Exif,ExifValue,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifValue.cs,ToString,Cyclomatic complexity of the method is 14
Complex Method,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetData,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteValue,Cyclomatic complexity of the method is 12
Complex Method,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadParametricCurve,Cyclomatic complexity of the method is 11
Complex Method,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadTagDataEntry,Cyclomatic complexity of the method is 33
Complex Method,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteTagDataEntry,Cyclomatic complexity of the method is 33
Complex Method,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteLutAtoBTagDataEntry,Cyclomatic complexity of the method is 11
Complex Method,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteLutBtoATagDataEntry,Cyclomatic complexity of the method is 11
Complex Method,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,Decode,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,DecodePixelData,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,DecodeInterlacedPixelData,Cyclomatic complexity of the method is 11
Complex Method,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ProcessDefilteredScanline,Cyclomatic complexity of the method is 14
Complex Method,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ComputeColumnsAdam7,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image.Hidden,ImageFilter_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__ImageFilter_Template.cs,ApplyConvolution,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,CopyFrom,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,FloodFill,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,ApplyModeFilter,Cyclomatic complexity of the method is 16
Complex Method,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,DrawLine,Cyclomatic complexity of the method is 20
Complex Method,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,ForEachPixelsOnLine,Cyclomatic complexity of the method is 21
Complex Method,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,DrawLine,Cyclomatic complexity of the method is 8
Complex Method,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,CreatePaddingImage,Cyclomatic complexity of the method is 17
Complex Method,Geb.Image.Hidden,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,run,Cyclomatic complexity of the method is 10
Complex Method,Geb.Image.Hidden,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,run,Cyclomatic complexity of the method is 9
Complex Method,Geb.Image.Sampling,ImageSamplingAlgorithm,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Utils\ImageSamplingAlgorithm.cs,RandomUniformSampling,Cyclomatic complexity of the method is 10
Long Parameter List,Geb.Image,Matrix,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\Matrix.cs,Matrix,The method has 6 parameters. Parameters: a' b' c' d' tx' ty
Long Parameter List,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ApplyMatrix,The method has 6 parameters. Parameters: a' b' c' d' e' f
Long Parameter List,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,Fill,The method has 5 parameters. Parameters: x' y' width' height' pixel
Long Parameter List,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,SetColor,The method has 7 parameters. Parameters: x' y' color' innerRadius' radius' ww' hh
Long Parameter List,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ApplyMatrix,The method has 6 parameters. Parameters: a' b' c' d' e' f
Long Parameter List,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,Fill,The method has 5 parameters. Parameters: x' y' width' height' pixel
Long Parameter List,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,SetColor,The method has 7 parameters. Parameters: x' y' color' innerRadius' radius' ww' hh
Long Parameter List,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,ApplyMatrix,The method has 6 parameters. Parameters: a' b' c' d' e' f
Long Parameter List,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,Fill,The method has 5 parameters. Parameters: x' y' width' height' pixel
Long Parameter List,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,SetColor,The method has 7 parameters. Parameters: x' y' color' innerRadius' radius' ww' hh
Long Parameter List,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ApplyMatrix,The method has 6 parameters. Parameters: a' b' c' d' e' f
Long Parameter List,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,Fill,The method has 5 parameters. Parameters: x' y' width' height' pixel
Long Parameter List,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,SetColor,The method has 7 parameters. Parameters: x' y' color' innerRadius' radius' ww' hh
Long Parameter List,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,ApplyMatrix,The method has 6 parameters. Parameters: a' b' c' d' e' f
Long Parameter List,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,Fill,The method has 5 parameters. Parameters: x' y' width' height' pixel
Long Parameter List,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,SetColor,The method has 7 parameters. Parameters: x' y' color' innerRadius' radius' ww' hh
Long Parameter List,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,ApplyMatrix,The method has 6 parameters. Parameters: a' b' c' d' e' f
Long Parameter List,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,Fill,The method has 5 parameters. Parameters: x' y' width' height' pixel
Long Parameter List,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,SetColor,The method has 7 parameters. Parameters: x' y' color' innerRadius' radius' ww' hh
Long Parameter List,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,ApplyMatrix,The method has 6 parameters. Parameters: a' b' c' d' e' f
Long Parameter List,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,Fill,The method has 5 parameters. Parameters: x' y' width' height' pixel
Long Parameter List,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,SetColor,The method has 7 parameters. Parameters: x' y' color' innerRadius' radius' ww' hh
Long Parameter List,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ApplyMatrix,The method has 6 parameters. Parameters: a' b' c' d' e' f
Long Parameter List,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,Fill,The method has 5 parameters. Parameters: x' y' width' height' pixel
Long Parameter List,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,SetColor,The method has 7 parameters. Parameters: x' y' color' innerRadius' radius' ww' hh
Long Parameter List,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ToHypsometricMap,The method has 5 parameters. Parameters: hueOfMinVal' hueOfMaxVal' useBgVal' bgVal' bgColor
Long Parameter List,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ApplyMatrix,The method has 6 parameters. Parameters: a' b' c' d' e' f
Long Parameter List,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,Fill,The method has 5 parameters. Parameters: x' y' width' height' pixel
Long Parameter List,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,SetColor,The method has 7 parameters. Parameters: x' y' color' innerRadius' radius' ww' hh
Long Parameter List,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ApplyMatrix,The method has 6 parameters. Parameters: a' b' c' d' e' f
Long Parameter List,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,Fill,The method has 5 parameters. Parameters: x' y' width' height' pixel
Long Parameter List,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,SetColor,The method has 7 parameters. Parameters: x' y' color' innerRadius' radius' ww' hh
Long Parameter List,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ApplyMatrix,The method has 6 parameters. Parameters: a' b' c' d' e' f
Long Parameter List,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,Fill,The method has 5 parameters. Parameters: x' y' width' height' pixel
Long Parameter List,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,SetColor,The method has 7 parameters. Parameters: x' y' color' innerRadius' radius' ww' hh
Long Parameter List,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ApplyMatrix,The method has 6 parameters. Parameters: a' b' c' d' e' f
Long Parameter List,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,Fill,The method has 5 parameters. Parameters: x' y' width' height' pixel
Long Parameter List,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,SetColor,The method has 7 parameters. Parameters: x' y' color' innerRadius' radius' ww' hh
Long Parameter List,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,The method has 5 parameters. Parameters: imgGradXY' gaussianSiama' gaussianSize' lowThreshold' highThreshold
Long Parameter List,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyMatrix,The method has 6 parameters. Parameters: a' b' c' d' e' f
Long Parameter List,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,Fill,The method has 5 parameters. Parameters: x' y' width' height' pixel
Long Parameter List,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,SetColor,The method has 7 parameters. Parameters: x' y' color' innerRadius' radius' ww' hh
Long Parameter List,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSHorizontalVertical,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSHorizontalVertical,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSHorizontalVertical,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSHorizontalVertical,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSHorizontalVertical,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSHorizontalVertical,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSHorizontalVertical,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSHorizontalVertical,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSHorizontalVertical,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSHorizontalVertical,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSHorizontalVertical,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSHorizontalVertical,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSHorizontalVertical,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSVerticalHorizontal,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSVerticalHorizontal,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSVerticalHorizontal,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSVerticalHorizontal,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSVerticalHorizontal,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSVerticalHorizontal,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSVerticalHorizontal,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSVerticalHorizontal,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSVerticalHorizontal,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSVerticalHorizontal,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSVerticalHorizontal,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSVerticalHorizontal,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,BEEPSVerticalHorizontal,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image,AffineTransform,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Utils\AffineTransform.cs,AffineTransform,The method has 12 parameters. Parameters: x1' y1' x2' y2' x3' y3' xx1' yy1' xx2' yy2' xx3' yy3
Long Parameter List,Geb.Image,Interpolate,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Utils\Interpolate.cs,LinearInterpolate,The method has 6 parameters. Parameters: v00' v10' v01' v11' a' b
Long Parameter List,Geb.Image.Formats.Bmp,BmpInfoHeader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpInfoHeader.cs,BmpInfoHeader,The method has 11 parameters. Parameters: headerSize' width' height' planes' bitsPerPixel' compression' imageSize' xPelsPerMeter' yPelsPerMeter' clrUsed' clrImportant
Long Parameter List,Geb.Image.Formats,Buffer2DExtensions,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Extentions\Buffer2DExtensions.cs,GetArea,The method has 5 parameters. Parameters: buffer' x' y' width' height
Long Parameter List,Geb.Image.Formats.Gif,GifDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifDecoderCore.cs,ReadFrameColors,The method has 5 parameters. Parameters: image' previousFrame' indices' colorTable' descriptor
Long Parameter List,Geb.Image.Formats.Gif,GifImageDescriptor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\Sections\GifImageDescriptor.cs,GifImageDescriptor,The method has 5 parameters. Parameters: left' top' width' height' packed
Long Parameter List,Geb.Image.Formats.Gif,GifLogicalScreenDescriptor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\Sections\GifLogicalScreenDescriptor.cs,GifLogicalScreenDescriptor,The method has 5 parameters. Parameters: width' height' packed' backgroundColorIndex' pixelAspectRatio
Long Parameter List,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteBlock,The method has 7 parameters. Parameters: index' prevDC' src' tempDest1' tempDest2' quant' unzigPtr
Long Parameter List,Geb.Image.Formats.Jpeg.Components,GenericBlock8x8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\GenericBlock8x8.cs,LoadAndStretchEdges,The method has 5 parameters. Parameters: source' imageWidth' imageHeight' sourceX' sourceY
Long Parameter List,Geb.Image.Formats.Jpeg.Components.Decoder,JFifMarker,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\JFifMarker.cs,JFifMarker,The method has 5 parameters. Parameters: majorVersion' minorVersion' densityUnits' xDensity' yDensity
Long Parameter List,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,ComponentValues,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.cs,ComponentValues,The method has 5 parameters. Parameters: componentCount' c0' c1' c2' c3
Long Parameter List,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,ConvertPixelInto,The method has 6 parameters. Parameters: r' g' b' yResult' cbResult' crResult
Long Parameter List,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsFrameComponent,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsFrameComponent.cs,PdfJsFrameComponent,The method has 7 parameters. Parameters: memoryManager' frame' id' horizontalFactor' verticalFactor' quantizationTableIndex' index
Long Parameter List,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeScan,The method has 12 parameters. Parameters: frame' stream' dcHuffmanTables' acHuffmanTables' components' componentIndex' componentsLength' resetInterval' spectralStart' spectralEnd' successivePrev' successive
Long Parameter List,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeScanBaseline,The method has 5 parameters. Parameters: dcHuffmanTables' acHuffmanTables' components' componentsLength' stream
Long Parameter List,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeScanProgressive,The method has 6 parameters. Parameters: huffmanTables' isAC' isFirst' components' componentsLength' stream
Long Parameter List,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeBlockBaseline,The method has 5 parameters. Parameters: dcHuffmanTable' acHuffmanTable' component' blockDataRef' stream
Long Parameter List,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeMcuBaseline,The method has 7 parameters. Parameters: dcHuffmanTable' acHuffmanTable' component' blockDataRef' row' col' stream
Long Parameter List,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeMcuDCFirst,The method has 6 parameters. Parameters: dcHuffmanTable' component' blockDataRef' row' col' stream
Long Parameter List,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeMcuDCSuccessive,The method has 5 parameters. Parameters: component' blockDataRef' row' col' stream
Long Parameter List,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeMcuACFirst,The method has 6 parameters. Parameters: acHuffmanTable' component' blockDataRef' row' col' stream
Long Parameter List,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeMcuACSuccessive,The method has 6 parameters. Parameters: acHuffmanTable' component' blockDataRef' row' col' stream
Long Parameter List,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeBaseline,The method has 6 parameters. Parameters: component' blockDataRef' offset' dcHuffmanTable' acHuffmanTable' stream
Long Parameter List,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeDCFirst,The method has 5 parameters. Parameters: component' blockDataRef' offset' dcHuffmanTable' stream
Long Parameter List,Geb.Image.Formats.MetaData.Profiles.Icc,IccFormulaCurveElement,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Curves\IccFormulaCurveElement.cs,IccFormulaCurveElement,The method has 7 parameters. Parameters: type' gamma' a' b' c' d' e
Long Parameter List,Geb.Image.Formats.MetaData.Profiles.Icc,IccParametricCurve,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Curves\IccParametricCurve.cs,IccParametricCurve,The method has 5 parameters. Parameters: g' a' b' c' d
Long Parameter List,Geb.Image.Formats.MetaData.Profiles.Icc,IccParametricCurve,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Curves\IccParametricCurve.cs,IccParametricCurve,The method has 7 parameters. Parameters: g' a' b' c' d' e' f
Long Parameter List,Geb.Image.Formats.MetaData.Profiles.Icc,IccParametricCurve,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Curves\IccParametricCurve.cs,IccParametricCurve,The method has 8 parameters. Parameters: type' g' a' b' c' d' e' f
Long Parameter List,Geb.Image.Formats.MetaData.Profiles.Icc,IccCrdInfoTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccCrdInfoTagDataEntry.cs,IccCrdInfoTagDataEntry,The method has 5 parameters. Parameters: postScriptProductName' renderingIntent0Crd' renderingIntent1Crd' renderingIntent2Crd' renderingIntent3Crd
Long Parameter List,Geb.Image.Formats.MetaData.Profiles.Icc,IccCrdInfoTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccCrdInfoTagDataEntry.cs,IccCrdInfoTagDataEntry,The method has 6 parameters. Parameters: postScriptProductName' renderingIntent0Crd' renderingIntent1Crd' renderingIntent2Crd' renderingIntent3Crd' tagSignature
Long Parameter List,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut16TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut16TagDataEntry.cs,IccLut16TagDataEntry,The method has 5 parameters. Parameters: matrix' inputValues' clutValues' outputValues' tagSignature
Long Parameter List,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut8TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut8TagDataEntry.cs,IccLut8TagDataEntry,The method has 5 parameters. Parameters: matrix' inputValues' clutValues' outputValues' tagSignature
Long Parameter List,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,IccLutAToBTagDataEntry,The method has 6 parameters. Parameters: curveB' matrix3x3' matrix3x1' curveM' clutValues' curveA
Long Parameter List,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,IccLutAToBTagDataEntry,The method has 7 parameters. Parameters: curveB' matrix3x3' matrix3x1' curveM' clutValues' curveA' tagSignature
Long Parameter List,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,IccLutBToATagDataEntry,The method has 6 parameters. Parameters: curveB' matrix3x3' matrix3x1' curveM' clutValues' curveA
Long Parameter List,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,IccLutBToATagDataEntry,The method has 7 parameters. Parameters: curveB' matrix3x3' matrix3x1' curveM' clutValues' curveA' tagSignature
Long Parameter List,Geb.Image.Formats.MetaData.Profiles.Icc,IccMeasurementTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccMeasurementTagDataEntry.cs,IccMeasurementTagDataEntry,The method has 5 parameters. Parameters: observer' xyzBacking' geometry' flare' illuminant
Long Parameter List,Geb.Image.Formats.MetaData.Profiles.Icc,IccMeasurementTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccMeasurementTagDataEntry.cs,IccMeasurementTagDataEntry,The method has 6 parameters. Parameters: observer' xyzBacking' geometry' flare' illuminant' tagSignature
Long Parameter List,Geb.Image.Formats.MetaData.Profiles.Icc,IccNamedColor2TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccNamedColor2TagDataEntry.cs,IccNamedColor2TagDataEntry,The method has 5 parameters. Parameters: vendorFlags' prefix' suffix' colors' tagSignature
Long Parameter List,Geb.Image.Formats.MetaData.Profiles.Icc,IccTextDescriptionTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccTextDescriptionTagDataEntry.cs,IccTextDescriptionTagDataEntry,The method has 5 parameters. Parameters: ascii' unicode' scriptCode' unicodeLanguageCode' scriptCodeCode
Long Parameter List,Geb.Image.Formats.MetaData.Profiles.Icc,IccTextDescriptionTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccTextDescriptionTagDataEntry.cs,IccTextDescriptionTagDataEntry,The method has 6 parameters. Parameters: ascii' unicode' scriptCode' unicodeLanguageCode' scriptCodeCode' tagSignature
Long Parameter List,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfileDescription,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccProfileDescription.cs,IccProfileDescription,The method has 6 parameters. Parameters: deviceManufacturer' deviceModel' deviceAttributes' technologyInformation' deviceManufacturerInfo' deviceModelInfo
Long Parameter List,Geb.Image.Formats.Png.Filters,AverageFilter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Filters\AverageFilter.cs,Encode,The method has 5 parameters. Parameters: scanline' previousScanline' result' bytesPerPixel' sum
Long Parameter List,Geb.Image.Formats.Png.Filters,PaethFilter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Filters\PaethFilter.cs,Encode,The method has 5 parameters. Parameters: scanline' previousScanline' result' bytesPerPixel' sum
Long Parameter List,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,WriteChunk,The method has 5 parameters. Parameters: stream' type' data' offset' length
Long Parameter List,Geb.Image.Formats.Png,PngHeader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngHeader.cs,PngHeader,The method has 7 parameters. Parameters: width' height' bitDepth' colorType' compressionMethod' filterMethod' interlaceMethod
Long Parameter List,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,ApplyMatrix,The method has 6 parameters. Parameters: a' b' c' d' e' f
Long Parameter List,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,Fill,The method has 5 parameters. Parameters: x' y' width' height' pixel
Long Parameter List,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,SetColor,The method has 7 parameters. Parameters: x' y' color' innerRadius' radius' ww' hh
Long Parameter List,Geb.Image.Hidden,BEEPSHorizontalVertical,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,BEEPSHorizontalVertical,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image.Hidden,BEEPSVerticalHorizontal,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,BEEPSVerticalHorizontal,The method has 5 parameters. Parameters: data' width' height' photometricStandardDeviation' spatialDecay
Long Parameter List,Geb.Image.Utils,ProjectionTransform,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Utils\ProjectionTransform.cs,ProjectionTransform,The method has 16 parameters. Parameters: x00' y00' x01' y01' x10' y10' x11' y11' xx00' yy00' xx01' yy01' xx10' yy10' xx11' yy11
Long Identifier,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,,The length of the parameter DefaultMaxPooledBufferSizeInBytes is 33.
Long Identifier,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,,The length of the parameter DefaultBufferSelectorThresholdInBytes is 37.
Long Identifier,Geb.Image.Formats.Gif,GifConstants,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifConstants.cs,,The length of the parameter ApplicationIdentificationBytes is 30.
Long Statement,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,CopyFrom,The length of the statement  "            return CopyFrom(src' new PointS(start.X' start.Y)' new Rect(region.X' region.Y' region.Width' region.Height)' new PointS(destAnchor.X' destAnchor.Y)); " is 150.
Long Statement,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X + rect.Width' rect.Y)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 120.
Long Statement,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X' rect.Y + rect.Height)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 121.
Long Statement,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,CreatePaddingImage,The length of the statement  "            img.CopyFrom(this' new System.Drawing.Point(0' 0)' new System.Drawing.Rectangle(0' 0' this.Width' this.Height)' new System.Drawing.Point(paddingSize' paddingSize)); " is 164.
Long Statement,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSHorizontalVertical hv = new BEEPSHorizontalVertical(data1' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSVerticalHorizontal vh = new BEEPSVerticalHorizontal(data2' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,CopyFrom,The length of the statement  "            return CopyFrom(src' new PointS(start.X' start.Y)' new Rect(region.X' region.Y' region.Width' region.Height)' new PointS(destAnchor.X' destAnchor.Y)); " is 150.
Long Statement,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X + rect.Width' rect.Y)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 120.
Long Statement,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X' rect.Y + rect.Height)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 121.
Long Statement,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,CreatePaddingImage,The length of the statement  "            img.CopyFrom(this' new System.Drawing.Point(0' 0)' new System.Drawing.Rectangle(0' 0' this.Width' this.Height)' new System.Drawing.Point(paddingSize' paddingSize)); " is 164.
Long Statement,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSHorizontalVertical hv = new BEEPSHorizontalVertical(data1' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSVerticalHorizontal vh = new BEEPSVerticalHorizontal(data2' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,CopyFrom,The length of the statement  "            return CopyFrom(src' new PointS(start.X' start.Y)' new Rect(region.X' region.Y' region.Width' region.Height)' new PointS(destAnchor.X' destAnchor.Y)); " is 150.
Long Statement,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X + rect.Width' rect.Y)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 120.
Long Statement,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X' rect.Y + rect.Height)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 121.
Long Statement,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,CreatePaddingImage,The length of the statement  "            img.CopyFrom(this' new System.Drawing.Point(0' 0)' new System.Drawing.Rectangle(0' 0' this.Width' this.Height)' new System.Drawing.Point(paddingSize' paddingSize)); " is 164.
Long Statement,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSHorizontalVertical hv = new BEEPSHorizontalVertical(data1' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSVerticalHorizontal vh = new BEEPSVerticalHorizontal(data2' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,CopyFrom,The length of the statement  "            return CopyFrom(src' new PointS(start.X' start.Y)' new Rect(region.X' region.Y' region.Width' region.Height)' new PointS(destAnchor.X' destAnchor.Y)); " is 150.
Long Statement,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X + rect.Width' rect.Y)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 120.
Long Statement,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X' rect.Y + rect.Height)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 121.
Long Statement,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,CreatePaddingImage,The length of the statement  "            img.CopyFrom(this' new System.Drawing.Point(0' 0)' new System.Drawing.Rectangle(0' 0' this.Width' this.Height)' new System.Drawing.Point(paddingSize' paddingSize)); " is 164.
Long Statement,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSHorizontalVertical hv = new BEEPSHorizontalVertical(data1' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSVerticalHorizontal vh = new BEEPSVerticalHorizontal(data2' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,CopyFrom,The length of the statement  "            return CopyFrom(src' new PointS(start.X' start.Y)' new Rect(region.X' region.Y' region.Width' region.Height)' new PointS(destAnchor.X' destAnchor.Y)); " is 150.
Long Statement,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X + rect.Width' rect.Y)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 120.
Long Statement,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X' rect.Y + rect.Height)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 121.
Long Statement,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,CreatePaddingImage,The length of the statement  "            img.CopyFrom(this' new System.Drawing.Point(0' 0)' new System.Drawing.Rectangle(0' 0' this.Width' this.Height)' new System.Drawing.Point(paddingSize' paddingSize)); " is 164.
Long Statement,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSHorizontalVertical hv = new BEEPSHorizontalVertical(data1' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSVerticalHorizontal vh = new BEEPSVerticalHorizontal(data2' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,CopyFrom,The length of the statement  "            return CopyFrom(src' new PointS(start.X' start.Y)' new Rect(region.X' region.Y' region.Width' region.Height)' new PointS(destAnchor.X' destAnchor.Y)); " is 150.
Long Statement,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X + rect.Width' rect.Y)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 120.
Long Statement,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X' rect.Y + rect.Height)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 121.
Long Statement,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,CreatePaddingImage,The length of the statement  "            img.CopyFrom(this' new System.Drawing.Point(0' 0)' new System.Drawing.Rectangle(0' 0' this.Width' this.Height)' new System.Drawing.Point(paddingSize' paddingSize)); " is 164.
Long Statement,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSHorizontalVertical hv = new BEEPSHorizontalVertical(data1' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSVerticalHorizontal vh = new BEEPSVerticalHorizontal(data2' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,CopyFrom,The length of the statement  "            return CopyFrom(src' new PointS(start.X' start.Y)' new Rect(region.X' region.Y' region.Width' region.Height)' new PointS(destAnchor.X' destAnchor.Y)); " is 150.
Long Statement,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X + rect.Width' rect.Y)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 120.
Long Statement,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X' rect.Y + rect.Height)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 121.
Long Statement,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,CreatePaddingImage,The length of the statement  "            img.CopyFrom(this' new System.Drawing.Point(0' 0)' new System.Drawing.Rectangle(0' 0' this.Width' this.Height)' new System.Drawing.Point(paddingSize' paddingSize)); " is 164.
Long Statement,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSHorizontalVertical hv = new BEEPSHorizontalVertical(data1' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSVerticalHorizontal vh = new BEEPSVerticalHorizontal(data2' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,CopyFrom,The length of the statement  "            return CopyFrom(src' new PointS(start.X' start.Y)' new Rect(region.X' region.Y' region.Width' region.Height)' new PointS(destAnchor.X' destAnchor.Y)); " is 150.
Long Statement,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X + rect.Width' rect.Y)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 120.
Long Statement,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X' rect.Y + rect.Height)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 121.
Long Statement,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,CreatePaddingImage,The length of the statement  "            img.CopyFrom(this' new System.Drawing.Point(0' 0)' new System.Drawing.Rectangle(0' 0' this.Width' this.Height)' new System.Drawing.Point(paddingSize' paddingSize)); " is 164.
Long Statement,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSHorizontalVertical hv = new BEEPSHorizontalVertical(data1' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSVerticalHorizontal vh = new BEEPSVerticalHorizontal(data2' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,CopyFrom,The length of the statement  "            return CopyFrom(src' new PointS(start.X' start.Y)' new Rect(region.X' region.Y' region.Width' region.Height)' new PointS(destAnchor.X' destAnchor.Y)); " is 150.
Long Statement,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X + rect.Width' rect.Y)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 120.
Long Statement,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X' rect.Y + rect.Height)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 121.
Long Statement,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,CreatePaddingImage,The length of the statement  "            img.CopyFrom(this' new System.Drawing.Point(0' 0)' new System.Drawing.Rectangle(0' 0' this.Width' this.Height)' new System.Drawing.Point(paddingSize' paddingSize)); " is 164.
Long Statement,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSHorizontalVertical hv = new BEEPSHorizontalVertical(data1' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSVerticalHorizontal vh = new BEEPSVerticalHorizontal(data2' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,CopyFrom,The length of the statement  "            return CopyFrom(src' new PointS(start.X' start.Y)' new Rect(region.X' region.Y' region.Width' region.Height)' new PointS(destAnchor.X' destAnchor.Y)); " is 150.
Long Statement,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X + rect.Width' rect.Y)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 120.
Long Statement,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X' rect.Y + rect.Height)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 121.
Long Statement,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,CreatePaddingImage,The length of the statement  "            img.CopyFrom(this' new System.Drawing.Point(0' 0)' new System.Drawing.Rectangle(0' 0' this.Width' this.Height)' new System.Drawing.Point(paddingSize' paddingSize)); " is 164.
Long Statement,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSHorizontalVertical hv = new BEEPSHorizontalVertical(data1' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSVerticalHorizontal vh = new BEEPSVerticalHorizontal(data2' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,CopyFrom,The length of the statement  "            return CopyFrom(src' new PointS(start.X' start.Y)' new Rect(region.X' region.Y' region.Width' region.Height)' new PointS(destAnchor.X' destAnchor.Y)); " is 150.
Long Statement,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X + rect.Width' rect.Y)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 120.
Long Statement,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X' rect.Y + rect.Height)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 121.
Long Statement,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,CreatePaddingImage,The length of the statement  "            img.CopyFrom(this' new System.Drawing.Point(0' 0)' new System.Drawing.Rectangle(0' 0' this.Width' this.Height)' new System.Drawing.Point(paddingSize' paddingSize)); " is 164.
Long Statement,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSHorizontalVertical hv = new BEEPSHorizontalVertical(data1' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSVerticalHorizontal vh = new BEEPSVerticalHorizontal(data2' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,SBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ToString,The length of the statement  "            return "SignedArgb64 [A=" + Alpha + "' R=" + Red.ToString() + "' G=" + Green.ToString() + "' B=" + Blue.ToString() + "]"; " is 121.
Long Statement,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,CopyFrom,The length of the statement  "            return CopyFrom(src' new PointS(start.X' start.Y)' new Rect(region.X' region.Y' region.Width' region.Height)' new PointS(destAnchor.X' destAnchor.Y)); " is 150.
Long Statement,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X + rect.Width' rect.Y)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 120.
Long Statement,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X' rect.Y + rect.Height)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 121.
Long Statement,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,CreatePaddingImage,The length of the statement  "            img.CopyFrom(this' new System.Drawing.Point(0' 0)' new System.Drawing.Rectangle(0' 0' this.Width' this.Height)' new System.Drawing.Point(paddingSize' paddingSize)); " is 164.
Long Statement,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSHorizontalVertical hv = new BEEPSHorizontalVertical(data1' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSVerticalHorizontal vh = new BEEPSVerticalHorizontal(data2' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyOtsuThreshold,The length of the statement  "                float betweenClassVariance = (float)((class1Probability) * (1.0 - class1Probability) * Math.Pow(class1Mean - class2Mean' 2)); " is 125.
Long Statement,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,CopyFrom,The length of the statement  "            return CopyFrom(src' new PointS(start.X' start.Y)' new Rect(region.X' region.Y' region.Width' region.Height)' new PointS(destAnchor.X' destAnchor.Y)); " is 150.
Long Statement,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X + rect.Width' rect.Y)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 120.
Long Statement,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X' rect.Y + rect.Height)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 121.
Long Statement,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,CreatePaddingImage,The length of the statement  "            img.CopyFrom(this' new System.Drawing.Point(0' 0)' new System.Drawing.Rectangle(0' 0' this.Width' this.Height)' new System.Drawing.Point(paddingSize' paddingSize)); " is 164.
Long Statement,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSHorizontalVertical hv = new BEEPSHorizontalVertical(data1' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSVerticalHorizontal vh = new BEEPSVerticalHorizontal(data2' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image.Formats,SimdUtils,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Extentions\SimdUtils.cs,BulkConvertNormalizedFloatToByte,The length of the statement  "            DebugGuard.IsTrue((source.Length % Vector<float>.Count) == 0' nameof(source)' "source.Length should be divisable by Vector<float>.Count!"); " is 139.
Long Statement,Geb.Image.Formats,SimdUtils,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Extentions\SimdUtils.cs,BulkConvertNormalizedFloatToByteClampOverflows,The length of the statement  "            DebugGuard.IsTrue((source.Length % Vector<float>.Count) == 0' nameof(source)' "source.Length should be divisable by Vector<float>.Count!"); " is 139.
Long Statement,Geb.Image.Formats,DebugGuard,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Utils\DebugGuard.cs,MustBeBetweenOrEqualTo,The length of the statement  "                throw new ArgumentOutOfRangeException(parameterName' $"Value {value} must be greater than or equal to {min} and less than or equal to {max}."); " is 143.
Long Statement,Geb.Image.Formats,Guard,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Utils\Guard.cs,MustBeBetweenOrEqualTo,The length of the statement  "                throw new ArgumentOutOfRangeException(parameterName' $"Value {value} must be greater than or equal to {min} and less than or equal to {max}."); " is 143.
Long Statement,Geb.Image.Formats.Gif,GifDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifDecoderCore.cs,Identify,The length of the statement  "            return new ImageInfo(new PixelTypeInfo(this.logicalScreenDescriptor.BitsPerPixel)' this.logicalScreenDescriptor.Width' this.logicalScreenDescriptor.Height' this.metaData); " is 171.
Long Statement,Geb.Image.Formats.Gif,GifDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifDecoderCore.cs,ReadFrame,The length of the statement  "                indices = this.configuration.MemoryManager.AllocateManagedByteBuffer(imageDescriptor.Width * imageDescriptor.Height' true); " is 123.
Long Statement,Geb.Image.Formats.Gif,GifEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifEncoderCore.cs,Encode,The length of the statement  "            //QuantizedFrame<TPixel> quantized = this.quantizer.CreateFrameQuantizer<TPixel>().QuantizeFrame(image.Frames.RootFrame); " is 121.
Long Statement,Geb.Image.Formats.Gif,GifEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifEncoderCore.cs,WriteComments,The length of the statement  "            if (!metadata.TryGetProperty(GifConstants.Comments' out ImageProperty property) || string.IsNullOrEmpty(property.Value)) " is 120.
Long Statement,Geb.Image.Formats.Gif,GifGraphicControlExtension,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\Sections\GifGraphicControlExtension.cs,WriteTo,The length of the statement  "            ref GifGraphicControlExtension dest = ref Unsafe.As<byte' GifGraphicControlExtension>(ref MemoryMarshal.GetReference(buffer)); " is 126.
Long Statement,Geb.Image.Formats.Gif,GifLogicalScreenDescriptor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\Sections\GifLogicalScreenDescriptor.cs,WriteTo,The length of the statement  "            ref GifLogicalScreenDescriptor dest = ref Unsafe.As<byte' GifLogicalScreenDescriptor>(ref MemoryMarshal.GetReference(buffer)); " is 126.
Long Statement,Geb.Image.Formats.Jpeg,Jpeg8YCbCrEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Jpeg8Encoder.cs,Encode444,The length of the statement  "            // TODO: Need a JpegScanEncoder<TPixel> class or struct that encapsulates the scan-encoding implementation. (Similar to JpegScanDecoder.) " is 137.
Long Statement,Geb.Image.Formats.Jpeg,Jpeg8YCbCrEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Jpeg8Encoder.cs,Encode420,The length of the statement  "            // TODO: Need a JpegScanEncoder<TPixel> class or struct that encapsulates the scan-encoding implementation. (Similar to JpegScanDecoder.) " is 137.
Long Statement,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrSimd,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrSimd.cs,ConvertCore,The length of the statement  "                        // TODO: Find a way to properly run & test this path on AVX2 PC-s! (Have I already mentioned that Vector<T> is terrible?) " is 121.
Long Statement,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeScanBaseline,The length of the statement  "                ref short blockDataRef = ref MemoryMarshal.GetReference(MemoryMarshal.Cast<Block8x8' short>(component.SpectralBlocks.Span)); " is 124.
Long Statement,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeScanBaseline,The length of the statement  "                        ref short blockDataRef = ref MemoryMarshal.GetReference(MemoryMarshal.Cast<Block8x8' short>(component.SpectralBlocks.Span)); " is 124.
Long Statement,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeScanProgressive,The length of the statement  "                ref short blockDataRef = ref MemoryMarshal.GetReference(MemoryMarshal.Cast<Block8x8' short>(component.SpectralBlocks.Span)); " is 124.
Long Statement,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeScanProgressive,The length of the statement  "                        ref short blockDataRef = ref MemoryMarshal.GetReference(MemoryMarshal.Cast<Block8x8' short>(component.SpectralBlocks.Span)); " is 124.
Long Statement,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessStartOfFrameMarker,The length of the statement  "                    var component = new PdfJsFrameComponent(this.configuration.MemoryManager' this.Frame' this.temp[index]' h' v' this.temp[index + 2]' i); " is 135.
Long Statement,Geb.Image.Formats.MetaData.Profiles.Exif,ExifValue,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifValue.cs,CheckValue,The length of the statement  "                    Guard.IsTrue(type == typeof(uint)' nameof(value)' $"Value should be an unsigned int{(this.IsArray ? " array." : ".")}"); " is 120.
Long Statement,Geb.Image.Formats.MetaData.Profiles.Exif,ExifValue,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifValue.cs,CheckValue,The length of the statement  "                    Guard.IsTrue(type == typeof(ushort)' nameof(value)' $"Value should be an unsigned short{(this.IsArray ? " array." : ".")}"); " is 124.
Long Statement,Geb.Image.Formats.MetaData.Profiles.Exif,ExifValue,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifValue.cs,CheckValue,The length of the statement  "                    Guard.IsTrue(type == typeof(SignedRational)' nameof(value)' $"Value should be a SignedRational{(this.IsArray ? " array." : ".")}"); " is 131.
Long Statement,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadCurves,The length of the statement  "                    throw new InvalidIccProfileException($"Curve has to be either \"{nameof(IccTypeSignature)}.{nameof(IccTypeSignature.Curve)}\" or" + " is 131.
Long Statement,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadProfileDescription,The length of the statement  "                        throw new InvalidIccProfileException("Profile description can only have multi-localized Unicode or text description entries"); " is 126.
Long Statement,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadCurveTagDataEntry,The length of the statement  "            // TODO: If the input is PCSXYZ' 1+(32 767/32 768) shall be mapped to the value 1'0. If the output is PCSXYZ' the value 1'0 shall be mapped to 1+(32 767/32 768). " is 161.
Long Statement,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteCurves,The length of the statement  "                    throw new InvalidIccProfileException($"Curve has to be either \"{nameof(IccTypeSignature)}.{nameof(IccTypeSignature.Curve)}\" or" + " is 131.
Long Statement,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteCurveTagDataEntry,The length of the statement  "            // TODO: Page 48: If the input is PCSXYZ' 1+(32 767/32 768) shall be mapped to the value 1'0. If the output is PCSXYZ' the value 1'0 shall be mapped to 1+(32 767/32 768). " is 170.
Long Statement,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,VerifyCurve,The length of the statement  "                Guard.IsFalse(isNotCurve' nameof(name)' $"{nameof(name)} must be of type {nameof(IccParametricCurveTagDataEntry)} or {nameof(IccCurveTagDataEntry)}"); " is 150.
Long Statement,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,VerifyCurve,The length of the statement  "                Guard.IsFalse(isNotCurve' nameof(name)' $"{nameof(name)} must be of type {nameof(IccParametricCurveTagDataEntry)} or {nameof(IccCurveTagDataEntry)}"); " is 150.
Long Statement,Geb.Image.Formats.MetaData.Profiles.Icc,IccClut,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccClut.cs,CheckValues,The length of the statement  "            Guard.IsTrue(this.Values.Length == length' nameof(this.Values)' "Length of values array does not match the grid points"); " is 121.
Long Statement,Geb.Image.Formats.Png.Filters,AverageFilter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Filters\AverageFilter.cs,Encode,The length of the statement  "            for (int xLeft = x - bytesPerPixel; x < scanline.Length; ++xLeft /* Note: ++x happens in the body to avoid one add operation */) { " is 130.
Long Statement,Geb.Image.Formats.Png.Filters,PaethFilter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Filters\PaethFilter.cs,Encode,The length of the statement  "            for (int xLeft = x - bytesPerPixel; x < scanline.Length; ++xLeft /* Note: ++x happens in the body to avoid one add operation */) { " is 130.
Long Statement,Geb.Image.Formats.Png.Filters,SubFilter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Filters\SubFilter.cs,Encode,The length of the statement  "            for (int xLeft = x - bytesPerPixel; x < scanline.Length; ++xLeft /* Note: ++x happens in the body to avoid one add operation */) { " is 130.
Long Statement,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,DecodePixelData,The length of the statement  "                int bytesRead = compressedStream.Read(this.scanline.Array' this.currentRowBytesRead' this.bytesPerScanline - this.currentRowBytesRead); " is 135.
Long Statement,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,DecodeInterlacedPixelData,The length of the statement  "                    int bytesRead = compressedStream.Read(this.scanline.Array' this.currentRowBytesRead' bytesPerInterlaceScanline - this.currentRowBytesRead); " is 139.
Long Statement,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,DecodeInterlacedPixelData,The length of the statement  "                    this.ProcessInterlacedDefilteredScanline(this.scanline.Span' rowSpan' Adam7FirstColumn[this.pass]' Adam7ColumnIncrement[this.pass]); " is 132.
Long Statement,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ProcessScanlineFromPalette,The length of the statement  "            //ReadOnlySpan<byte> newScanline = ToArrayByBitsLength(defilteredScanline' this.bytesPerScanline' this.header.BitDepth); " is 120.
Long Statement,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ProcessInterlacedDefilteredScanline,The length of the statement  "            //        ReadOnlySpan<byte> newScanline1 = ToArrayByBitsLength(scanlineBuffer' this.bytesPerScanline' this.header.BitDepth); " is 125.
Long Statement,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ProcessInterlacedDefilteredScanline,The length of the statement  "            //        ReadOnlySpan<byte> newScanline = ToArrayByBitsLength(scanlineBuffer' this.bytesPerScanline' this.header.BitDepth); " is 124.
Long Statement,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ProcessInterlacedDefilteredScanline,The length of the statement  "            //            // If the alpha palette is not null and has one or more entries' this means' that the image contains an alpha " is 123.
Long Statement,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,EncodePixelRow,The length of the statement  "                    Buffer.BlockCopy(this.palettePixelData' row * this.rawScanline.Length()' this.rawScanline.Array' 0' this.rawScanline.Length()); " is 127.
Long Statement,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,EncodePixelRow,The length of the statement  "                    Buffer.BlockCopy(this.palettePixelData' row * this.rawScanline.Length()' this.rawScanline.Array' 0' this.rawScanline.Length()); " is 127.
Long Statement,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,FilterPixelRow,The length of the statement  "                    AverageFilter.Encode(this.rawScanline.Span' this.previousScanline.Span' this.average.Span' this.bytesPerPixel' out int _); " is 122.
Long Statement,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,CopyFrom,The length of the statement  "            return CopyFrom(src' new PointS(start.X' start.Y)' new Rect(region.X' region.Y' region.Width' region.Height)' new PointS(destAnchor.X' destAnchor.Y)); " is 150.
Long Statement,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X + rect.Width' rect.Y)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 120.
Long Statement,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,DrawRect,The length of the statement  "            DrawLine(new PointF(rect.X' rect.Y + rect.Height)' new PointF(rect.X + rect.Width' rect.Y + rect.Height)' color' radius); " is 121.
Long Statement,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,CreatePaddingImage,The length of the statement  "            img.CopyFrom(this' new System.Drawing.Point(0' 0)' new System.Drawing.Rectangle(0' 0' this.Width' this.Height)' new System.Drawing.Point(paddingSize' paddingSize)); " is 164.
Long Statement,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSHorizontalVertical hv = new BEEPSHorizontalVertical(data1' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Long Statement,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,ApplyBiExponentialEdgePreservingSmoother,The length of the statement  "                BEEPSVerticalHorizontal vh = new BEEPSVerticalHorizontal(data2' Width' Height' photometricStandardDeviation' spatialDecay); " is 123.
Complex Conditional,Geb.Image,FourierTransform,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,FFT2,The conditional expression  "(!Tools.IsPowerOf2(k)) ||                  (!Tools.IsPowerOf2(n)) ||                  (k < minLength) || (k > maxLength) ||                  (n < minLength) || (n > maxLength)"  is complex.
Complex Conditional,Geb.Image,TriangleF,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\Structs.cs,Contains,The conditional expression  "maxX < p.X || maxY < p.Y || minX > p.X || minY > p.Y"  is complex.
Complex Conditional,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ApplyMedianFilter,The conditional expression  "hh >= 0 && hh < height && ww >= 0 && ww < width"  is complex.
Complex Conditional,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ApplyMedianFilter,The conditional expression  "hh >= 0 && hh < height && ww >= 0 && ww < width"  is complex.
Complex Conditional,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,FloodFill,The conditional expression  "location.X < 0 || location.X >= width || location.Y < 0 || location.Y >= height"  is complex.
Complex Conditional,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ApplyModeFilter,The conditional expression  "xx >= 0 && xx < width && yy >= 0 && yy < height"  is complex.
Complex Conditional,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,DrawLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,DrawLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,SetColor,The conditional expression  "xx < 0 || yy < 0 || xx > ww || yy > hh"  is complex.
Complex Conditional,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,FloodFill,The conditional expression  "location.X < 0 || location.X >= width || location.Y < 0 || location.Y >= height"  is complex.
Complex Conditional,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ApplyModeFilter,The conditional expression  "xx >= 0 && xx < width && yy >= 0 && yy < height"  is complex.
Complex Conditional,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,DrawLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,DrawLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,SetColor,The conditional expression  "xx < 0 || yy < 0 || xx > ww || yy > hh"  is complex.
Complex Conditional,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidUp,The conditional expression  "hSrc < 2 || hSrc > height - 3 || wSrc < 2 || wSrc > width - 3"  is complex.
Complex Conditional,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,FloodFill,The conditional expression  "location.X < 0 || location.X >= width || location.Y < 0 || location.Y >= height"  is complex.
Complex Conditional,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,ApplyModeFilter,The conditional expression  "xx >= 0 && xx < width && yy >= 0 && yy < height"  is complex.
Complex Conditional,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,DrawLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,DrawLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,SetColor,The conditional expression  "xx < 0 || yy < 0 || xx > ww || yy > hh"  is complex.
Complex Conditional,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,FloodFill,The conditional expression  "location.X < 0 || location.X >= width || location.Y < 0 || location.Y >= height"  is complex.
Complex Conditional,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ApplyModeFilter,The conditional expression  "xx >= 0 && xx < width && yy >= 0 && yy < height"  is complex.
Complex Conditional,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,DrawLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,DrawLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,SetColor,The conditional expression  "xx < 0 || yy < 0 || xx > ww || yy > hh"  is complex.
Complex Conditional,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,FloodFill,The conditional expression  "location.X < 0 || location.X >= width || location.Y < 0 || location.Y >= height"  is complex.
Complex Conditional,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,ApplyModeFilter,The conditional expression  "xx >= 0 && xx < width && yy >= 0 && yy < height"  is complex.
Complex Conditional,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,DrawLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,DrawLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,SetColor,The conditional expression  "xx < 0 || yy < 0 || xx > ww || yy > hh"  is complex.
Complex Conditional,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,FloodFill,The conditional expression  "location.X < 0 || location.X >= width || location.Y < 0 || location.Y >= height"  is complex.
Complex Conditional,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,ApplyModeFilter,The conditional expression  "xx >= 0 && xx < width && yy >= 0 && yy < height"  is complex.
Complex Conditional,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,DrawLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,DrawLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,SetColor,The conditional expression  "xx < 0 || yy < 0 || xx > ww || yy > hh"  is complex.
Complex Conditional,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,FloodFill,The conditional expression  "location.X < 0 || location.X >= width || location.Y < 0 || location.Y >= height"  is complex.
Complex Conditional,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,ApplyModeFilter,The conditional expression  "xx >= 0 && xx < width && yy >= 0 && yy < height"  is complex.
Complex Conditional,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,DrawLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,DrawLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,SetColor,The conditional expression  "xx < 0 || yy < 0 || xx > ww || yy > hh"  is complex.
Complex Conditional,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,FloodFill,The conditional expression  "location.X < 0 || location.X >= width || location.Y < 0 || location.Y >= height"  is complex.
Complex Conditional,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ApplyModeFilter,The conditional expression  "xx >= 0 && xx < width && yy >= 0 && yy < height"  is complex.
Complex Conditional,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,DrawLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,DrawLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,SetColor,The conditional expression  "xx < 0 || yy < 0 || xx > ww || yy > hh"  is complex.
Complex Conditional,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,GaussPyramidUp,The conditional expression  "hSrc < 2 || hSrc > height - 3 || wSrc < 2 || wSrc > width - 3"  is complex.
Complex Conditional,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,FloodFill,The conditional expression  "location.X < 0 || location.X >= width || location.Y < 0 || location.Y >= height"  is complex.
Complex Conditional,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ApplyModeFilter,The conditional expression  "xx >= 0 && xx < width && yy >= 0 && yy < height"  is complex.
Complex Conditional,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,DrawLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,DrawLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,SetColor,The conditional expression  "xx < 0 || yy < 0 || xx > ww || yy > hh"  is complex.
Complex Conditional,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,FloodFill,The conditional expression  "location.X < 0 || location.X >= width || location.Y < 0 || location.Y >= height"  is complex.
Complex Conditional,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ApplyModeFilter,The conditional expression  "xx >= 0 && xx < width && yy >= 0 && yy < height"  is complex.
Complex Conditional,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,DrawLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,DrawLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,SetColor,The conditional expression  "xx < 0 || yy < 0 || xx > ww || yy > hh"  is complex.
Complex Conditional,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,FloodFill,The conditional expression  "location.X < 0 || location.X >= width || location.Y < 0 || location.Y >= height"  is complex.
Complex Conditional,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ApplyModeFilter,The conditional expression  "xx >= 0 && xx < width && yy >= 0 && yy < height"  is complex.
Complex Conditional,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,DrawLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,DrawLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,SetColor,The conditional expression  "xx < 0 || yy < 0 || xx > ww || yy > hh"  is complex.
Complex Conditional,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,FloodFill,The conditional expression  "location.X < 0 || location.X >= width || location.Y < 0 || location.Y >= height"  is complex.
Complex Conditional,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ApplyModeFilter,The conditional expression  "xx >= 0 && xx < width && yy >= 0 && yy < height"  is complex.
Complex Conditional,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,DrawLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,DrawLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,SetColor,The conditional expression  "xx < 0 || yy < 0 || xx > ww || yy > hh"  is complex.
Complex Conditional,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidUp,The conditional expression  "hSrc < 2 || hSrc > height - 3 || wSrc < 2 || wSrc > width - 3"  is complex.
Complex Conditional,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,Thinning,The conditional expression  "list[0] == 0 && list[2] == 0 && list[4] == 0 && list[6] == 0"  is complex.
Complex Conditional,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,The conditional expression  "(p[-1] < highThreshold) &&                                      (p[1] < highThreshold) &&                                      (pUp[-1] < highThreshold) &&                                      (pUp[0] < highThreshold) &&                                      (pUp[1] < highThreshold) &&                                      (pDown[-1] < highThreshold) &&                                      (pDown[0] < highThreshold) &&                                      (pDown[1] < highThreshold)"  is complex.
Complex Conditional,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,The conditional expression  "(p[-1] < highThreshold) &&                                      (p[1] < highThreshold) &&                                      (pUp[-1] < highThreshold) &&                                      (pUp[0] < highThreshold) &&                                      (pUp[1] < highThreshold) &&                                      (pDown[-1] < highThreshold) &&                                      (pDown[0] < highThreshold) &&                                      (pDown[1] < highThreshold)"  is complex.
Complex Conditional,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyMedianFilter,The conditional expression  "hh >= 0 && hh < height && ww >= 0 && ww < width"  is complex.
Complex Conditional,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,FloodFill,The conditional expression  "location.X < 0 || location.X >= width || location.Y < 0 || location.Y >= height"  is complex.
Complex Conditional,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyModeFilter,The conditional expression  "xx >= 0 && xx < width && yy >= 0 && yy < height"  is complex.
Complex Conditional,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DrawLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DrawLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,SetColor,The conditional expression  "xx < 0 || yy < 0 || xx > ww || yy > hh"  is complex.
Complex Conditional,Geb.Image.Formats,LongRational,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Utils\LongRational.cs,Simplify,The conditional expression  "this.IsIndeterminate ||                  this.IsNegativeInfinity ||                  this.IsPositiveInfinity ||                  this.IsInteger ||                  this.IsZero"  is complex.
Complex Conditional,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,FloodFill,The conditional expression  "location.X < 0 || location.X >= width || location.Y < 0 || location.Y >= height"  is complex.
Complex Conditional,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,ApplyModeFilter,The conditional expression  "xx >= 0 && xx < width && yy >= 0 && yy < height"  is complex.
Complex Conditional,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,DrawLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,DrawLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,DrawLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,DrawLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= Width || yMin >= Height || yMax < 0 || xMax < 0"  is complex.
Complex Conditional,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,ForEachPixelsOnLine,The conditional expression  "xMin >= 0 && yMin >= 0 && yMax < (Height - 1) && xMax < Width"  is complex.
Complex Conditional,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,ForEachPixelsOnLine,The conditional expression  "cy >= 0 && cy < width && cx >= 0 && cx < height"  is complex.
Complex Conditional,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,ForEachPixelsOnLine,The conditional expression  "cx >= 0 && cx < width && cy >= 0 && cy < height"  is complex.
Complex Conditional,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,SetColor,The conditional expression  "xx < 0 || yy < 0 || xx > ww || yy > hh"  is complex.
Complex Conditional,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidUp,The conditional expression  "hSrc < 2 || hSrc > height - 3 || wSrc < 2 || wSrc > width - 3"  is complex.
Virtual Method Call from Constructor,Geb.Image.Formats.Gif,LzwDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwDecoder.cs,LzwDecoder,The constructor "LzwDecoder" calls a virtual method "Allocate".
Virtual Method Call from Constructor,Geb.Image.Formats.Gif,LzwDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwDecoder.cs,LzwDecoder,The constructor "LzwDecoder" calls a virtual method "Allocate".
Virtual Method Call from Constructor,Geb.Image.Formats.Gif,LzwEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwEncoder.cs,LzwEncoder,The constructor "LzwEncoder" calls a virtual method "Allocate".
Virtual Method Call from Constructor,Geb.Image.Formats.Gif,LzwEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwEncoder.cs,LzwEncoder,The constructor "LzwEncoder" calls a virtual method "Allocate".
Magic Number,Geb.Image,ClassHelper,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\ClassHelper.cs,ToPolarPointD,The following statement contains a magic number: double angle = Math.Atan2(p.Y' p.X) * (180 / Math.PI);
Magic Number,Geb.Image,ClassHelper,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\ClassHelper.cs,ToPolarPointD,The following statement contains a magic number: angle = 360 + angle;
Magic Number,Geb.Image,Complex,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\Complex.cs,ApproxEqual,The following statement contains a magic number: return ApproxEqual(a' b' 8.8817841970012523233891E-16);
Magic Number,Geb.Image,ConvolutionKernel,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\ConvolutionKernel.cs,CreateGaussianKernel,The following statement contains a magic number: sigma = Math.Max(0.5' Math.Min(5.0' sigma));
Magic Number,Geb.Image,ConvolutionKernel,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\ConvolutionKernel.cs,CreateGaussianKernel,The following statement contains a magic number: sigma = Math.Max(0.5' Math.Min(5.0' sigma));
Magic Number,Geb.Image,ConvolutionKernel,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\ConvolutionKernel.cs,CreateGaussianKernel,The following statement contains a magic number: size = Math.Max(3' Math.Min(21' size | 1));
Magic Number,Geb.Image,ConvolutionKernel,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\ConvolutionKernel.cs,CreateGaussianKernel,The following statement contains a magic number: size = Math.Max(3' Math.Min(21' size | 1));
Magic Number,Geb.Image,ConvolutionKernel,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\ConvolutionKernel.cs,CreateGaussianKernel,The following statement contains a magic number: int r = size / 2;
Magic Number,Geb.Image,ConvolutionKernel,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\ConvolutionKernel.cs,CreateGaussianKernel,The following statement contains a magic number: double val = Math.Exp((x * x + y * y) / (-2 * sqrSigma));
Magic Number,Geb.Image,ConvolutionKernel,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\ConvolutionKernel.cs,CreateGaussianKernel,The following statement contains a magic number: double min = max/(128*128);
Magic Number,Geb.Image,ConvolutionKernel,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\ConvolutionKernel.cs,CreateGaussianKernel,The following statement contains a magic number: double min = max/(128*128);
Magic Number,Geb.Image,ConvolutionKernel,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\ConvolutionKernel.cs,IsEvenNumber,The following statement contains a magic number: return number % 2 == 0;
Magic Number,Geb.Image,FourierTransform,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,DFT,The following statement contains a magic number: arg = -(int)direction * 2.0 * System.Math.PI * (double)i / (double)n;
Magic Number,Geb.Image,FourierTransform,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,DFT2,The following statement contains a magic number: arg = -(int)direction * 2.0 * System.Math.PI * (double)j / (double)m;
Magic Number,Geb.Image,FourierTransform,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,DFT2,The following statement contains a magic number: arg = -(int)direction * 2.0 * System.Math.PI * (double)i / (double)n;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Pow2,The following statement contains a magic number: return ((power >= 0) && (power <= 30)) ? (1 << power) : 0;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 2
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 2;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 4
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 3;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 8
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 4;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 16
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 5;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 32
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 6;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 64
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 7;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 128
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 8;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 256
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 9;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 512
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 10;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 1024
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 11;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 2048
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 12;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 4096
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 13;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 8192
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 14;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 16384
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 15;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 32768
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 16;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 65536
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 17;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 131072
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 18;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 262144
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 19;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 524288
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 20;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 1048576
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 21;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 2097152
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 22;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 4194304
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 23;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 8388608
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 24;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 16777216
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 25;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 33554432
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 26;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 67108864
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 27;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 134217728
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 28;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 268435456
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 29;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 536870912
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 30;
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: x <= 1073741824
Magic Number,Geb.Image,Tools,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Common\FourierTransform.cs,Log2,The following statement contains a magic number: return 31;
Magic Number,Geb.Image,ImageComplex,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\ManagedImage\ComplexImage.cs,CreateFrom,The following statement contains a magic number: data[y' x].Re = (float)*src / 255;
Magic Number,Geb.Image,ImageComplex,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\ManagedImage\ComplexImage.cs,ToImage,The following statement contains a magic number: *dst = (byte)System.Math.Max(0' System.Math.Min(255' data[y' x].Magnitude * scale * 255));
Magic Number,Geb.Image,ImageComplex,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\ManagedImage\ComplexImage.cs,ToImage,The following statement contains a magic number: *dst = (byte)System.Math.Max(0' System.Math.Min(255' data[y' x].Magnitude * scale * 255));
Magic Number,Geb.Image,Bgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,AdjustSaturation,The following statement contains a magic number: red = 255;
Magic Number,Geb.Image,Bgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,AdjustSaturation,The following statement contains a magic number: red > 255
Magic Number,Geb.Image,Bgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,AdjustSaturation,The following statement contains a magic number: green = 255;
Magic Number,Geb.Image,Bgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,AdjustSaturation,The following statement contains a magic number: green > 255
Magic Number,Geb.Image,Bgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,AdjustSaturation,The following statement contains a magic number: blue = 255;
Magic Number,Geb.Image,Bgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,AdjustSaturation,The following statement contains a magic number: blue > 255
Magic Number,Geb.Image,Bgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ToGray,The following statement contains a magic number: return (Byte)(0.299 * Red + 0.587 * Green + 0.114 * Blue);
Magic Number,Geb.Image,Bgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ToGray,The following statement contains a magic number: return (Byte)(0.299 * Red + 0.587 * Green + 0.114 * Blue);
Magic Number,Geb.Image,Bgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ToGray,The following statement contains a magic number: return (Byte)(0.299 * Red + 0.587 * Green + 0.114 * Blue);
Magic Number,Geb.Image,Bgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,GetHashCode,The following statement contains a magic number: return (Red << 16) + (Green << 8) + Blue;
Magic Number,Geb.Image,Bgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,GetHashCode,The following statement contains a magic number: return (Red << 16) + (Green << 8) + Blue;
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,Copy,The following statement contains a magic number: UnmanagedImageConverter.Copy((byte*)from' (byte*)to' 3 * length);
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ToGrayscaleImage,The following statement contains a magic number: return ToGrayscaleImage(0.299' 0.587' 0.114);
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ToGrayscaleImage,The following statement contains a magic number: return ToGrayscaleImage(0.299' 0.587' 0.114);
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ToGrayscaleImage,The following statement contains a magic number: return ToGrayscaleImage(0.299' 0.587' 0.114);
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ToGrayscaleImageInt32,The following statement contains a magic number: return ToGrayscaleImageInt32(0.299' 0.587' 0.114);
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ToGrayscaleImageInt32,The following statement contains a magic number: return ToGrayscaleImageInt32(0.299' 0.587' 0.114);
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ToGrayscaleImageInt32,The following statement contains a magic number: return ToGrayscaleImageInt32(0.299' 0.587' 0.114);
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,CopyChannel,The following statement contains a magic number: channel < 0 && channel > 2
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ToGrayscaleImage,The following statement contains a magic number: Length < 1024
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ToGrayscaleImageInt32,The following statement contains a magic number: Length < 1024
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ApplyMedianFilter,The following statement contains a magic number: int size = medianRadius * 2 + 1;
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ApplyMedianFilter,The following statement contains a magic number: int size = medianRadius * 2 + 1;
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,CopyFrom,The following statement contains a magic number: pSrc->Alpha == 255 || pDst->Alpha == 0
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ApplyModeFilter,The following statement contains a magic number: int radius = size / 2;
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,DrawLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,DrawLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,DrawLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ForEachPixelsOnLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaY) < 0.0001
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaX) < 0.0001
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,DrawText,The following statement contains a magic number: int base_line = +(ascii[0] & 15);
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,DrawText,The following statement contains a magic number: List<PointS> pts = new List<PointS>(1 << 10);
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,DrawText,The following statement contains a magic number: c >= 127 || c < ' '
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,CreatePaddingImage,The following statement contains a magic number: int extendWidth = this.Width + paddingSize * 2;
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,CreatePaddingImage,The following statement contains a magic number: int extendHeight = this.Height + paddingSize * 2;
Magic Number,Geb.Image,ImageBgr24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgr24.cs,ApplyBiExponentialEdgePreservingSmoother,The following statement contains a magic number: double val = (data1[i] + data2[i]) * 0.5f;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,Copy,The following statement contains a magic number: UnmanagedImageConverter.Copy((byte*)from' (byte*)to' 4 * length);
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ToBitmapCore,The following statement contains a magic number: UnmanagedImageConverter.Copy(src' dst' width * 4);
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ToGrayscaleImage,The following statement contains a magic number: return ToGrayscaleImage(0.299' 0.587' 0.114);
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ToGrayscaleImage,The following statement contains a magic number: return ToGrayscaleImage(0.299' 0.587' 0.114);
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ToGrayscaleImage,The following statement contains a magic number: return ToGrayscaleImage(0.299' 0.587' 0.114);
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ToGrayscaleImage,The following statement contains a magic number: return ToGrayscaleImage(0.299' 0.587' 0.114' transparentColor);
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ToGrayscaleImage,The following statement contains a magic number: return ToGrayscaleImage(0.299' 0.587' 0.114' transparentColor);
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ToGrayscaleImage,The following statement contains a magic number: return ToGrayscaleImage(0.299' 0.587' 0.114' transparentColor);
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ToGrayscaleImage,The following statement contains a magic number: Byte* end = p + Length * 4;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ToGrayscaleImage,The following statement contains a magic number: p+=4;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ToGrayscaleImage,The following statement contains a magic number: Length < 1024
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,CombineAlpha,The following statement contains a magic number: switch (p0.Alpha)                      {                          case 255:                              *pDst = p0;                              break;                          case 0:                          default:                              break;                      }
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,CopyFrom,The following statement contains a magic number: pSrc->Alpha == 255 || pDst->Alpha == 0
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ApplyModeFilter,The following statement contains a magic number: int radius = size / 2;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,DrawLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,DrawLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,DrawLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ForEachPixelsOnLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaY) < 0.0001
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaX) < 0.0001
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,DrawText,The following statement contains a magic number: int base_line = +(ascii[0] & 15);
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,DrawText,The following statement contains a magic number: List<PointS> pts = new List<PointS>(1 << 10);
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,DrawText,The following statement contains a magic number: c >= 127 || c < ' '
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,CreatePaddingImage,The following statement contains a magic number: int extendWidth = this.Width + paddingSize * 2;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,CreatePaddingImage,The following statement contains a magic number: int extendHeight = this.Height + paddingSize * 2;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,ApplyBiExponentialEdgePreservingSmoother,The following statement contains a magic number: double val = (data1[i] + data2[i]) * 0.5f;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidUp,The following statement contains a magic number: int ww = width / 2;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidUp,The following statement contains a magic number: int hh = height / 2;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidUp,The following statement contains a magic number: hSrc = 2 * h;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidUp,The following statement contains a magic number: wSrc = 2 * w;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidUp,The following statement contains a magic number: hSrc < 2 || hSrc > height - 3 || wSrc < 2 || wSrc > width - 3
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidUp,The following statement contains a magic number: hSrc < 2 || hSrc > height - 3 || wSrc < 2 || wSrc > width - 3
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidUp,The following statement contains a magic number: hSrc < 2 || hSrc > height - 3 || wSrc < 2 || wSrc > width - 3
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidUp,The following statement contains a magic number: hSrc < 2 || hSrc > height - 3 || wSrc < 2 || wSrc > width - 3
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidDown,The following statement contains a magic number: int ww = width * 2;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidDown,The following statement contains a magic number: int hh = height * 2;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidDown,The following statement contains a magic number: hSrc = h / 2;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidDown,The following statement contains a magic number: wSrc = w / 2;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidDown,The following statement contains a magic number: wSrc = Math.Min(w / 2'width-2);
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidDown,The following statement contains a magic number: wSrc = Math.Min(w / 2'width-2);
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidDown,The following statement contains a magic number: hSrc = Math.Min(h / 2' height - 2);
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidDown,The following statement contains a magic number: hSrc = Math.Min(h / 2' height - 2);
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidDown,The following statement contains a magic number: wSrc = w / 2;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidDown,The following statement contains a magic number: wSrc = Math.Min(w / 2' width - 2);
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidDown,The following statement contains a magic number: wSrc = Math.Min(w / 2' width - 2);
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidDown,The following statement contains a magic number: lineDst[w] = new TPixel((TChannel)((p0.Red + p1.Red + p2.Red + p3.Red) >> 2)'                          (TChannel)((p0.Green + p1.Green + p2.Green + p3.Green) >> 2)'                          (TChannel)((p0.Blue + p1.Blue + p2.Blue + p3.Blue) >> 2)'                          (TChannel)((p0.Alpha + p1.Alpha + p2.Alpha + p3.Alpha) >> 2));
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidDown,The following statement contains a magic number: lineDst[w] = new TPixel((TChannel)((p0.Red + p1.Red + p2.Red + p3.Red) >> 2)'                          (TChannel)((p0.Green + p1.Green + p2.Green + p3.Green) >> 2)'                          (TChannel)((p0.Blue + p1.Blue + p2.Blue + p3.Blue) >> 2)'                          (TChannel)((p0.Alpha + p1.Alpha + p2.Alpha + p3.Alpha) >> 2));
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidDown,The following statement contains a magic number: lineDst[w] = new TPixel((TChannel)((p0.Red + p1.Red + p2.Red + p3.Red) >> 2)'                          (TChannel)((p0.Green + p1.Green + p2.Green + p3.Green) >> 2)'                          (TChannel)((p0.Blue + p1.Blue + p2.Blue + p3.Blue) >> 2)'                          (TChannel)((p0.Alpha + p1.Alpha + p2.Alpha + p3.Alpha) >> 2));
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,GaussPyramidDown,The following statement contains a magic number: lineDst[w] = new TPixel((TChannel)((p0.Red + p1.Red + p2.Red + p3.Red) >> 2)'                          (TChannel)((p0.Green + p1.Green + p2.Green + p3.Green) >> 2)'                          (TChannel)((p0.Blue + p1.Blue + p2.Blue + p3.Blue) >> 2)'                          (TChannel)((p0.Alpha + p1.Alpha + p2.Alpha + p3.Alpha) >> 2));
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,FastPyramidUp4X,The following statement contains a magic number: int ww = width / 4;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,FastPyramidUp4X,The following statement contains a magic number: int hh = height / 4;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,FastPyramidUp4X,The following statement contains a magic number: lineSrc = imgStart + 4 * h * width;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,FastPyramidUp4X,The following statement contains a magic number: lineDst[w] = lineSrc[4 * w];
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,FastPyramidUp3X,The following statement contains a magic number: int ww = width / 3;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,FastPyramidUp3X,The following statement contains a magic number: int hh = height / 3;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,FastPyramidUp3X,The following statement contains a magic number: lineSrc = imgStart +  3 * h * width;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,FastPyramidUp3X,The following statement contains a magic number: lineDst[w] = lineSrc[3 * w];
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,FastPyramidUp2X,The following statement contains a magic number: int ww = width / 2;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,FastPyramidUp2X,The following statement contains a magic number: int hh = height / 2;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,FastPyramidUp2X,The following statement contains a magic number: lineSrc = imgStart + 2 * h * width;
Magic Number,Geb.Image,ImageBgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageBgra32.cs,FastPyramidUp2X,The following statement contains a magic number: lineDst[w] = lineSrc[2 * w];
Magic Number,Geb.Image,CieXyz,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCieXyz.cs,ToCieLab,The following statement contains a magic number: float l = 116.0f * Transform(Y / D65.Y) - 16;
Magic Number,Geb.Image,CieXyz,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCieXyz.cs,ToCieLab,The following statement contains a magic number: float l = 116.0f * Transform(Y / D65.Y) - 16;
Magic Number,Geb.Image,CieXyz,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCieXyz.cs,ToCieLab,The following statement contains a magic number: float a = 500.0f * (Transform(X / D65.X) - Transform(Y / D65.Y));
Magic Number,Geb.Image,CieXyz,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCieXyz.cs,ToCieLab,The following statement contains a magic number: float b = 200.0f * (Transform(Y / D65.Y) - Transform(Z / D65.Z));
Magic Number,Geb.Image,CieXyz,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCieXyz.cs,Transform,The following statement contains a magic number: return ((t > 0.008856) ? (float) Math.Pow(t' (1.0f / 3.0f)) : (7.787f * t + 16.0f / 116.0f));
Magic Number,Geb.Image,CieXyz,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCieXyz.cs,Transform,The following statement contains a magic number: return ((t > 0.008856) ? (float) Math.Pow(t' (1.0f / 3.0f)) : (7.787f * t + 16.0f / 116.0f));
Magic Number,Geb.Image,CieXyz,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCieXyz.cs,Transform,The following statement contains a magic number: return ((t > 0.008856) ? (float) Math.Pow(t' (1.0f / 3.0f)) : (7.787f * t + 16.0f / 116.0f));
Magic Number,Geb.Image,CieXyz,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCieXyz.cs,Transform,The following statement contains a magic number: return ((t > 0.008856) ? (float) Math.Pow(t' (1.0f / 3.0f)) : (7.787f * t + 16.0f / 116.0f));
Magic Number,Geb.Image,CieXyz,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCieXyz.cs,Transform,The following statement contains a magic number: return ((t > 0.008856) ? (float) Math.Pow(t' (1.0f / 3.0f)) : (7.787f * t + 16.0f / 116.0f));
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,ToRgb24,The following statement contains a magic number: float MyC = C / 100.0f;
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,ToRgb24,The following statement contains a magic number: float MyM = M / 100.0f;
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,ToRgb24,The following statement contains a magic number: float MyY = Y / 100.0f;
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,ToRgb24,The following statement contains a magic number: float MyK = K / 100.0f;
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,ToRgb24,The following statement contains a magic number: int R = (int)((1 - (MyC * (1 - MyK) + MyK)) * 255);
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,ToRgb24,The following statement contains a magic number: int G = (int)((1 - (MyM * (1 - MyK) + MyK)) * 255);
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,ToRgb24,The following statement contains a magic number: int B = (int)((1 - (MyY * (1 - MyK) + MyK)) * 255);
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,ToRgb24,The following statement contains a magic number: R = 255;
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,ToRgb24,The following statement contains a magic number: R > 255
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,ToRgb24,The following statement contains a magic number: G = 255;
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,ToRgb24,The following statement contains a magic number: G > 255
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,ToRgb24,The following statement contains a magic number: B = 255;
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,ToRgb24,The following statement contains a magic number: B > 255
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,CreateFrom,The following statement contains a magic number: cmyk.K = (byte)(Math.Min(Math.Min(255 - red' 255 - green)' 255 - blue) / 2.55);
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,CreateFrom,The following statement contains a magic number: cmyk.K = (byte)(Math.Min(Math.Min(255 - red' 255 - green)' 255 - blue) / 2.55);
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,CreateFrom,The following statement contains a magic number: cmyk.K = (byte)(Math.Min(Math.Min(255 - red' 255 - green)' 255 - blue) / 2.55);
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,CreateFrom,The following statement contains a magic number: cmyk.K = (byte)(Math.Min(Math.Min(255 - red' 255 - green)' 255 - blue) / 2.55);
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,CreateFrom,The following statement contains a magic number: int MyR = (int)(red / 2.55);
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,CreateFrom,The following statement contains a magic number: int Div = 100 - cmyk.K;
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,CreateFrom,The following statement contains a magic number: cmyk.C = (byte)(100 * (100 - MyR - cmyk.K) / Div);
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,CreateFrom,The following statement contains a magic number: cmyk.C = (byte)(100 * (100 - MyR - cmyk.K) / Div);
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,CreateFrom,The following statement contains a magic number: int MyG = (int)(green / 2.55);
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,CreateFrom,The following statement contains a magic number: cmyk.M = (byte)(100 * (100 - MyG - cmyk.K) / Div);
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,CreateFrom,The following statement contains a magic number: cmyk.M = (byte)(100 * (100 - MyG - cmyk.K) / Div);
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,CreateFrom,The following statement contains a magic number: int MyB = (int)(blue / 2.55);
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,CreateFrom,The following statement contains a magic number: cmyk.Y = (byte)(100 * (100 - MyB - cmyk.K) / Div);
Magic Number,Geb.Image,Cmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageCmyk.cs,CreateFrom,The following statement contains a magic number: cmyk.Y = (byte)(100 * (100 - MyB - cmyk.K) / Div);
Magic Number,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,CopyFrom,The following statement contains a magic number: pSrc->Alpha == 255 || pDst->Alpha == 0
Magic Number,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,ApplyModeFilter,The following statement contains a magic number: int radius = size / 2;
Magic Number,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,DrawLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,DrawLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,DrawLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,ForEachPixelsOnLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaY) < 0.0001
Magic Number,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaX) < 0.0001
Magic Number,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,DrawText,The following statement contains a magic number: int base_line = +(ascii[0] & 15);
Magic Number,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,DrawText,The following statement contains a magic number: List<PointS> pts = new List<PointS>(1 << 10);
Magic Number,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,DrawText,The following statement contains a magic number: c >= 127 || c < ' '
Magic Number,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,CreatePaddingImage,The following statement contains a magic number: int extendWidth = this.Width + paddingSize * 2;
Magic Number,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,CreatePaddingImage,The following statement contains a magic number: int extendHeight = this.Height + paddingSize * 2;
Magic Number,Geb.Image,ImageFBgr96,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFBgr96.cs,ApplyBiExponentialEdgePreservingSmoother,The following statement contains a magic number: double val = (data1[i] + data2[i]) * 0.5f;
Magic Number,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ToImageU8,The following statement contains a magic number: val = Math.Min(255'Math.Max(val' 0));
Magic Number,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,CopyFrom,The following statement contains a magic number: pSrc->Alpha == 255 || pDst->Alpha == 0
Magic Number,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ApplyModeFilter,The following statement contains a magic number: int radius = size / 2;
Magic Number,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,DrawLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,DrawLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,DrawLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ForEachPixelsOnLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaY) < 0.0001
Magic Number,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaX) < 0.0001
Magic Number,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,DrawText,The following statement contains a magic number: int base_line = +(ascii[0] & 15);
Magic Number,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,DrawText,The following statement contains a magic number: List<PointS> pts = new List<PointS>(1 << 10);
Magic Number,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,DrawText,The following statement contains a magic number: c >= 127 || c < ' '
Magic Number,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,CreatePaddingImage,The following statement contains a magic number: int extendWidth = this.Width + paddingSize * 2;
Magic Number,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,CreatePaddingImage,The following statement contains a magic number: int extendHeight = this.Height + paddingSize * 2;
Magic Number,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ApplyBiExponentialEdgePreservingSmoother,The following statement contains a magic number: double val = (data1[i] + data2[i]) * 0.5f;
Magic Number,Geb.Image,ImageFloat,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageFloat.cs,ApplyConvolution,The following statement contains a magic number: int extend = Math.Max(kernelWidth' kernelHeight) / 2;
Magic Number,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,ToImageU8,The following statement contains a magic number: float coeff = max > 255 ? 255f / max : 0;
Magic Number,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,ToImageU8,The following statement contains a magic number: float coeff = max > 255 ? 255f / max : 0;
Magic Number,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,CopyFrom,The following statement contains a magic number: pSrc->Alpha == 255 || pDst->Alpha == 0
Magic Number,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,ApplyModeFilter,The following statement contains a magic number: int radius = size / 2;
Magic Number,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,DrawLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,DrawLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,DrawLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,ForEachPixelsOnLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaY) < 0.0001
Magic Number,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaX) < 0.0001
Magic Number,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,DrawText,The following statement contains a magic number: int base_line = +(ascii[0] & 15);
Magic Number,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,DrawText,The following statement contains a magic number: List<PointS> pts = new List<PointS>(1 << 10);
Magic Number,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,DrawText,The following statement contains a magic number: c >= 127 || c < ' '
Magic Number,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,CreatePaddingImage,The following statement contains a magic number: int extendWidth = this.Width + paddingSize * 2;
Magic Number,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,CreatePaddingImage,The following statement contains a magic number: int extendHeight = this.Height + paddingSize * 2;
Magic Number,Geb.Image,ImageGrad,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGrad.cs,ApplyBiExponentialEdgePreservingSmoother,The following statement contains a magic number: double val = (data1[i] + data2[i]) * 0.5f;
Magic Number,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,ToXGradImage,The following statement contains a magic number: c.Red = (Byte)Math.Min(255' val * scale);
Magic Number,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,ToYGradImage,The following statement contains a magic number: c.Red = (Byte)Math.Min(255' val * scale);
Magic Number,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,CopyFrom,The following statement contains a magic number: pSrc->Alpha == 255 || pDst->Alpha == 0
Magic Number,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,ApplyModeFilter,The following statement contains a magic number: int radius = size / 2;
Magic Number,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,DrawLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,DrawLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,DrawLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,ForEachPixelsOnLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaY) < 0.0001
Magic Number,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaX) < 0.0001
Magic Number,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,DrawText,The following statement contains a magic number: int base_line = +(ascii[0] & 15);
Magic Number,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,DrawText,The following statement contains a magic number: List<PointS> pts = new List<PointS>(1 << 10);
Magic Number,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,DrawText,The following statement contains a magic number: c >= 127 || c < ' '
Magic Number,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,CreatePaddingImage,The following statement contains a magic number: int extendWidth = this.Width + paddingSize * 2;
Magic Number,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,CreatePaddingImage,The following statement contains a magic number: int extendHeight = this.Height + paddingSize * 2;
Magic Number,Geb.Image,ImageGradXY,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageGradXY.cs,ApplyBiExponentialEdgePreservingSmoother,The following statement contains a magic number: double val = (data1[i] + data2[i]) * 0.5f;
Magic Number,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,CopyFrom,The following statement contains a magic number: pSrc->Alpha == 255 || pDst->Alpha == 0
Magic Number,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,ApplyModeFilter,The following statement contains a magic number: int radius = size / 2;
Magic Number,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,DrawLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,DrawLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,DrawLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,ForEachPixelsOnLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaY) < 0.0001
Magic Number,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaX) < 0.0001
Magic Number,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,DrawText,The following statement contains a magic number: int base_line = +(ascii[0] & 15);
Magic Number,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,DrawText,The following statement contains a magic number: List<PointS> pts = new List<PointS>(1 << 10);
Magic Number,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,DrawText,The following statement contains a magic number: c >= 127 || c < ' '
Magic Number,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,CreatePaddingImage,The following statement contains a magic number: int extendWidth = this.Width + paddingSize * 2;
Magic Number,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,CreatePaddingImage,The following statement contains a magic number: int extendHeight = this.Height + paddingSize * 2;
Magic Number,Geb.Image,ImageHsl,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageHsl.cs,ApplyBiExponentialEdgePreservingSmoother,The following statement contains a magic number: double val = (data1[i] + data2[i]) * 0.5f;
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,Copy,The following statement contains a magic number: UnmanagedImageConverter.Copy((Byte*)from' (Byte*)to' length * 4);
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ToBitmapCore,The following statement contains a magic number: val = val < 0 ? 0 : val > 255 ? 255 : val;
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ToBitmapCore,The following statement contains a magic number: val = val < 0 ? 0 : val > 255 ? 255 : val;
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,CopyFrom,The following statement contains a magic number: pSrc->Alpha == 255 || pDst->Alpha == 0
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ApplyModeFilter,The following statement contains a magic number: int radius = size / 2;
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,DrawLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,DrawLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,DrawLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ForEachPixelsOnLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaY) < 0.0001
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaX) < 0.0001
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,DrawText,The following statement contains a magic number: int base_line = +(ascii[0] & 15);
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,DrawText,The following statement contains a magic number: List<PointS> pts = new List<PointS>(1 << 10);
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,DrawText,The following statement contains a magic number: c >= 127 || c < ' '
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,CreatePaddingImage,The following statement contains a magic number: int extendWidth = this.Width + paddingSize * 2;
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,CreatePaddingImage,The following statement contains a magic number: int extendHeight = this.Height + paddingSize * 2;
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ApplyBiExponentialEdgePreservingSmoother,The following statement contains a magic number: double val = (data1[i] + data2[i]) * 0.5f;
Magic Number,Geb.Image,ImageInt16,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt16.cs,ApplyConvolution,The following statement contains a magic number: int extend = Math.Max(kernelWidth' kernelHeight) / 2;
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,Copy,The following statement contains a magic number: UnmanagedImageConverter.Copy((Byte*)from' (Byte*)to' length * 4);
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ToBitmapCore,The following statement contains a magic number: val = val < 0 ? 0 : val > 255 ? 255 : val;
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ToBitmapCore,The following statement contains a magic number: val = val < 0 ? 0 : val > 255 ? 255 : val;
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ToImageU8,The following statement contains a magic number: *dst = val < 0 ? (Byte)0 : (val > 255 ? (Byte)255 : (Byte)val);
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ToImageU8,The following statement contains a magic number: *dst = val < 0 ? (Byte)0 : (val > 255 ? (Byte)255 : (Byte)val);
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,GaussPyramidUp,The following statement contains a magic number: int ww = width / 2;
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,GaussPyramidUp,The following statement contains a magic number: int hh = height / 2;
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,GaussPyramidUp,The following statement contains a magic number: hSrc = 2 * h;
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,GaussPyramidUp,The following statement contains a magic number: wSrc = 2 * w;
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,GaussPyramidUp,The following statement contains a magic number: hSrc < 2 || hSrc > height - 3 || wSrc < 2 || wSrc > width - 3
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,GaussPyramidUp,The following statement contains a magic number: hSrc < 2 || hSrc > height - 3 || wSrc < 2 || wSrc > width - 3
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,GaussPyramidUp,The following statement contains a magic number: hSrc < 2 || hSrc > height - 3 || wSrc < 2 || wSrc > width - 3
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,GaussPyramidUp,The following statement contains a magic number: hSrc < 2 || hSrc > height - 3 || wSrc < 2 || wSrc > width - 3
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,CopyFrom,The following statement contains a magic number: pSrc->Alpha == 255 || pDst->Alpha == 0
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ApplyModeFilter,The following statement contains a magic number: int radius = size / 2;
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,DrawLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,DrawLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,DrawLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ForEachPixelsOnLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaY) < 0.0001
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaX) < 0.0001
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,DrawText,The following statement contains a magic number: int base_line = +(ascii[0] & 15);
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,DrawText,The following statement contains a magic number: List<PointS> pts = new List<PointS>(1 << 10);
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,DrawText,The following statement contains a magic number: c >= 127 || c < ' '
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,CreatePaddingImage,The following statement contains a magic number: int extendWidth = this.Width + paddingSize * 2;
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,CreatePaddingImage,The following statement contains a magic number: int extendHeight = this.Height + paddingSize * 2;
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ApplyBiExponentialEdgePreservingSmoother,The following statement contains a magic number: double val = (data1[i] + data2[i]) * 0.5f;
Magic Number,Geb.Image,ImageInt32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageInt32.cs,ApplyConvolution,The following statement contains a magic number: int extend = Math.Max(kernelWidth' kernelHeight) / 2;
Magic Number,Geb.Image,Lab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,GetDistanceSquare,The following statement contains a magic number: return (int)(0.16 * deltaL * deltaL) + deltaA * deltaA + deltaB * deltaB;
Magic Number,Geb.Image,Lab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ConvertTest,The following statement contains a magic number: Math.Abs(src.Red - rvt.Red) + Math.Abs(src.Green - rvt.Green) + Math.Abs(src.Blue - rvt.Blue) > 16
Magic Number,Geb.Image,Lab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ConvertTest,The following statement contains a magic number: b < 256
Magic Number,Geb.Image,Lab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ConvertTest,The following statement contains a magic number: g < 256
Magic Number,Geb.Image,Lab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ConvertTest,The following statement contains a magic number: r < 256
Magic Number,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,CopyFrom,The following statement contains a magic number: pSrc->Alpha == 255 || pDst->Alpha == 0
Magic Number,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ApplyModeFilter,The following statement contains a magic number: int radius = size / 2;
Magic Number,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,DrawLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,DrawLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,DrawLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ForEachPixelsOnLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaY) < 0.0001
Magic Number,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaX) < 0.0001
Magic Number,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,DrawText,The following statement contains a magic number: int base_line = +(ascii[0] & 15);
Magic Number,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,DrawText,The following statement contains a magic number: List<PointS> pts = new List<PointS>(1 << 10);
Magic Number,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,DrawText,The following statement contains a magic number: c >= 127 || c < ' '
Magic Number,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,CreatePaddingImage,The following statement contains a magic number: int extendWidth = this.Width + paddingSize * 2;
Magic Number,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,CreatePaddingImage,The following statement contains a magic number: int extendHeight = this.Height + paddingSize * 2;
Magic Number,Geb.Image,ImageLab24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLab24.cs,ApplyBiExponentialEdgePreservingSmoother,The following statement contains a magic number: double val = (data1[i] + data2[i]) * 0.5f;
Magic Number,Geb.Image,LAlaphaBeta,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLAlphaBeta.cs,ToRgb24,The following statement contains a magic number: const double c00 = 0.57735;
Magic Number,Geb.Image,LAlaphaBeta,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLAlphaBeta.cs,ToRgb24,The following statement contains a magic number: const double c01 = 0.408248;
Magic Number,Geb.Image,LAlaphaBeta,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLAlphaBeta.cs,ToRgb24,The following statement contains a magic number: const double c02 = 0.707107;
Magic Number,Geb.Image,LAlaphaBeta,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLAlphaBeta.cs,ToRgb24,The following statement contains a magic number: const double c10 = 0.57735;
Magic Number,Geb.Image,LAlaphaBeta,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLAlphaBeta.cs,ToRgb24,The following statement contains a magic number: const double c11 = 0.408248;
Magic Number,Geb.Image,LAlaphaBeta,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLAlphaBeta.cs,ToRgb24,The following statement contains a magic number: const double c12 = -0.707107;
Magic Number,Geb.Image,LAlaphaBeta,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLAlphaBeta.cs,ToRgb24,The following statement contains a magic number: const double c20 = 0.57735;
Magic Number,Geb.Image,LAlaphaBeta,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLAlphaBeta.cs,ToRgb24,The following statement contains a magic number: const double c21 = -0.8164965;
Magic Number,Geb.Image,LAlaphaBeta,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLAlphaBeta.cs,ToRgb24,The following statement contains a magic number: l = Math.Pow(10' l);
Magic Number,Geb.Image,LAlaphaBeta,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLAlphaBeta.cs,ToRgb24,The following statement contains a magic number: m = Math.Pow(10' m);
Magic Number,Geb.Image,LAlaphaBeta,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLAlphaBeta.cs,ToRgb24,The following statement contains a magic number: s = Math.Pow(10' s);
Magic Number,Geb.Image,LAlaphaBeta,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLAlphaBeta.cs,ToRgb24,The following statement contains a magic number: int r = (int)(4.4679 * l -3.5873 * m + 0.1193 * s);
Magic Number,Geb.Image,LAlaphaBeta,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLAlphaBeta.cs,ToRgb24,The following statement contains a magic number: int r = (int)(4.4679 * l -3.5873 * m + 0.1193 * s);
Magic Number,Geb.Image,LAlaphaBeta,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLAlphaBeta.cs,ToRgb24,The following statement contains a magic number: int r = (int)(4.4679 * l -3.5873 * m + 0.1193 * s);
Magic Number,Geb.Image,LAlaphaBeta,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLAlphaBeta.cs,ToRgb24,The following statement contains a magic number: int g = (int)(-1.2186 * l + 2.3809 * m - 0.1624 * s);
Magic Number,Geb.Image,LAlaphaBeta,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLAlphaBeta.cs,ToRgb24,The following statement contains a magic number: int g = (int)(-1.2186 * l + 2.3809 * m - 0.1624 * s);
Magic Number,Geb.Image,LAlaphaBeta,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLAlphaBeta.cs,ToRgb24,The following statement contains a magic number: int g = (int)(-1.2186 * l + 2.3809 * m - 0.1624 * s);
Magic Number,Geb.Image,LAlaphaBeta,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLAlphaBeta.cs,ToRgb24,The following statement contains a magic number: int b = (int)(0.0497 * l - 0.2439 * m + 1.2045 * s);
Magic Number,Geb.Image,LAlaphaBeta,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLAlphaBeta.cs,ToRgb24,The following statement contains a magic number: int b = (int)(0.0497 * l - 0.2439 * m + 1.2045 * s);
Magic Number,Geb.Image,LAlaphaBeta,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageLAlphaBeta.cs,ToRgb24,The following statement contains a magic number: int b = (int)(0.0497 * l - 0.2439 * m + 1.2045 * s);
Magic Number,Geb.Image,RgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ToGray,The following statement contains a magic number: return (Byte)(0.299 * Red + 0.587 * Green + 0.114 * Blue);
Magic Number,Geb.Image,RgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ToGray,The following statement contains a magic number: return (Byte)(0.299 * Red + 0.587 * Green + 0.114 * Blue);
Magic Number,Geb.Image,RgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ToGray,The following statement contains a magic number: return (Byte)(0.299 * Red + 0.587 * Green + 0.114 * Blue);
Magic Number,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,CopyFrom,The following statement contains a magic number: pSrc->Alpha == 255 || pDst->Alpha == 0
Magic Number,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ApplyModeFilter,The following statement contains a magic number: int radius = size / 2;
Magic Number,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,DrawLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,DrawLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,DrawLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ForEachPixelsOnLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaY) < 0.0001
Magic Number,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaX) < 0.0001
Magic Number,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,DrawText,The following statement contains a magic number: int base_line = +(ascii[0] & 15);
Magic Number,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,DrawText,The following statement contains a magic number: List<PointS> pts = new List<PointS>(1 << 10);
Magic Number,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,DrawText,The following statement contains a magic number: c >= 127 || c < ' '
Magic Number,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,CreatePaddingImage,The following statement contains a magic number: int extendWidth = this.Width + paddingSize * 2;
Magic Number,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,CreatePaddingImage,The following statement contains a magic number: int extendHeight = this.Height + paddingSize * 2;
Magic Number,Geb.Image,ImageRgbS,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageRgbS.cs,ApplyBiExponentialEdgePreservingSmoother,The following statement contains a magic number: double val = (data1[i] + data2[i]) * 0.5f;
Magic Number,Geb.Image,SBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ToGray,The following statement contains a magic number: return (Byte)(0.299 * Red + 0.587 * Green + 0.114 * Blue);
Magic Number,Geb.Image,SBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ToGray,The following statement contains a magic number: return (Byte)(0.299 * Red + 0.587 * Green + 0.114 * Blue);
Magic Number,Geb.Image,SBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ToGray,The following statement contains a magic number: return (Byte)(0.299 * Red + 0.587 * Green + 0.114 * Blue);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ToGrayscaleImage,The following statement contains a magic number: return ToGrayscaleImage(0.299' 0.587' 0.114);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ToGrayscaleImage,The following statement contains a magic number: return ToGrayscaleImage(0.299' 0.587' 0.114);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ToGrayscaleImage,The following statement contains a magic number: return ToGrayscaleImage(0.299' 0.587' 0.114);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ToGrayscaleImage,The following statement contains a magic number: return ToGrayscaleImage(0.299' 0.587' 0.114' transparentColor);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ToGrayscaleImage,The following statement contains a magic number: return ToGrayscaleImage(0.299' 0.587' 0.114' transparentColor);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ToGrayscaleImage,The following statement contains a magic number: return ToGrayscaleImage(0.299' 0.587' 0.114' transparentColor);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ToGrayscaleImage,The following statement contains a magic number: Length < 1024
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,Mix,The following statement contains a magic number: p->Blue = (short)((p0->Blue + p1->Blue)/2);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,Mix,The following statement contains a magic number: p->Green = (short)((p0->Green + p1->Green) / 2);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,Mix,The following statement contains a magic number: p->Red = (short)((p0->Red + p1->Red)/2);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,Mix,The following statement contains a magic number: p->Alpha = (short)((p0->Alpha + p1->Alpha)/2);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,MixInPlace,The following statement contains a magic number: int coeff1 = 256 - coeff0;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,MixInPlace,The following statement contains a magic number: p0->Blue = (short)((p0->Blue * coeff0 + p1->Blue * coeff1) / 256);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,MixInPlace,The following statement contains a magic number: p0->Green = (short)((p0->Green * coeff0 + p1->Green * coeff1) / 256);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,MixInPlace,The following statement contains a magic number: p0->Red = (short)((p0->Red * coeff0 + p1->Red * coeff1) / 256);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,MixInPlace,The following statement contains a magic number: int coeff1 = 256 - frontRatio;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,MixInPlace,The following statement contains a magic number: p0->Blue = (short)((p0->Blue * coeff0 + p1->Blue * coeff1) / 256);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,MixInPlace,The following statement contains a magic number: p0->Green = (short)((p0->Green * coeff0 + p1->Green * coeff1) / 256);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,MixInPlace,The following statement contains a magic number: p0->Red = (short)((p0->Red * coeff0 + p1->Red * coeff1) / 256);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,CopyFrom,The following statement contains a magic number: pSrc->Alpha == 255 || pDst->Alpha == 0
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ApplyModeFilter,The following statement contains a magic number: int radius = size / 2;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,DrawLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,DrawLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,DrawLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ForEachPixelsOnLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaY) < 0.0001
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaX) < 0.0001
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,DrawText,The following statement contains a magic number: int base_line = +(ascii[0] & 15);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,DrawText,The following statement contains a magic number: List<PointS> pts = new List<PointS>(1 << 10);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,DrawText,The following statement contains a magic number: c >= 127 || c < ' '
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,CreatePaddingImage,The following statement contains a magic number: int extendWidth = this.Width + paddingSize * 2;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,CreatePaddingImage,The following statement contains a magic number: int extendHeight = this.Height + paddingSize * 2;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,ApplyBiExponentialEdgePreservingSmoother,The following statement contains a magic number: double val = (data1[i] + data2[i]) * 0.5f;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidUp,The following statement contains a magic number: int ww = width / 2;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidUp,The following statement contains a magic number: int hh = height / 2;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidUp,The following statement contains a magic number: hSrc = 2 * h;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidUp,The following statement contains a magic number: wSrc = 2 * w;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidUp,The following statement contains a magic number: hSrc < 2 || hSrc > height - 3 || wSrc < 2 || wSrc > width - 3
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidUp,The following statement contains a magic number: hSrc < 2 || hSrc > height - 3 || wSrc < 2 || wSrc > width - 3
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidUp,The following statement contains a magic number: hSrc < 2 || hSrc > height - 3 || wSrc < 2 || wSrc > width - 3
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidUp,The following statement contains a magic number: hSrc < 2 || hSrc > height - 3 || wSrc < 2 || wSrc > width - 3
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidDown,The following statement contains a magic number: int ww = width * 2;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidDown,The following statement contains a magic number: int hh = height * 2;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidDown,The following statement contains a magic number: hSrc = h / 2;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidDown,The following statement contains a magic number: wSrc = w / 2;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidDown,The following statement contains a magic number: wSrc = Math.Min(w / 2'width-2);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidDown,The following statement contains a magic number: wSrc = Math.Min(w / 2'width-2);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidDown,The following statement contains a magic number: hSrc = Math.Min(h / 2' height - 2);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidDown,The following statement contains a magic number: hSrc = Math.Min(h / 2' height - 2);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidDown,The following statement contains a magic number: wSrc = w / 2;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidDown,The following statement contains a magic number: wSrc = Math.Min(w / 2' width - 2);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidDown,The following statement contains a magic number: wSrc = Math.Min(w / 2' width - 2);
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidDown,The following statement contains a magic number: lineDst[w] = new TPixel((TChannel)((p0.Red + p1.Red + p2.Red + p3.Red) >> 2)'                          (TChannel)((p0.Green + p1.Green + p2.Green + p3.Green) >> 2)'                          (TChannel)((p0.Blue + p1.Blue + p2.Blue + p3.Blue) >> 2)'                          (TChannel)((p0.Alpha + p1.Alpha + p2.Alpha + p3.Alpha) >> 2));
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidDown,The following statement contains a magic number: lineDst[w] = new TPixel((TChannel)((p0.Red + p1.Red + p2.Red + p3.Red) >> 2)'                          (TChannel)((p0.Green + p1.Green + p2.Green + p3.Green) >> 2)'                          (TChannel)((p0.Blue + p1.Blue + p2.Blue + p3.Blue) >> 2)'                          (TChannel)((p0.Alpha + p1.Alpha + p2.Alpha + p3.Alpha) >> 2));
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidDown,The following statement contains a magic number: lineDst[w] = new TPixel((TChannel)((p0.Red + p1.Red + p2.Red + p3.Red) >> 2)'                          (TChannel)((p0.Green + p1.Green + p2.Green + p3.Green) >> 2)'                          (TChannel)((p0.Blue + p1.Blue + p2.Blue + p3.Blue) >> 2)'                          (TChannel)((p0.Alpha + p1.Alpha + p2.Alpha + p3.Alpha) >> 2));
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,GaussPyramidDown,The following statement contains a magic number: lineDst[w] = new TPixel((TChannel)((p0.Red + p1.Red + p2.Red + p3.Red) >> 2)'                          (TChannel)((p0.Green + p1.Green + p2.Green + p3.Green) >> 2)'                          (TChannel)((p0.Blue + p1.Blue + p2.Blue + p3.Blue) >> 2)'                          (TChannel)((p0.Alpha + p1.Alpha + p2.Alpha + p3.Alpha) >> 2));
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,FastPyramidUp4X,The following statement contains a magic number: int ww = width / 4;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,FastPyramidUp4X,The following statement contains a magic number: int hh = height / 4;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,FastPyramidUp4X,The following statement contains a magic number: lineSrc = imgStart + 4 * h * width;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,FastPyramidUp4X,The following statement contains a magic number: lineDst[w] = lineSrc[4 * w];
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,FastPyramidUp3X,The following statement contains a magic number: int ww = width / 3;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,FastPyramidUp3X,The following statement contains a magic number: int hh = height / 3;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,FastPyramidUp3X,The following statement contains a magic number: lineSrc = imgStart +  3 * h * width;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,FastPyramidUp3X,The following statement contains a magic number: lineDst[w] = lineSrc[3 * w];
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,FastPyramidUp2X,The following statement contains a magic number: int ww = width / 2;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,FastPyramidUp2X,The following statement contains a magic number: int hh = height / 2;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,FastPyramidUp2X,The following statement contains a magic number: lineSrc = imgStart + 2 * h * width;
Magic Number,Geb.Image,ImageSBgra64,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageSBgra64.cs,FastPyramidUp2X,The following statement contains a magic number: lineDst[w] = lineSrc[2 * w];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyInvert,The following statement contains a magic number: *p = (Byte)(255 - *p);
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyHistogramEqualization,The following statement contains a magic number: int* c0 = stackalloc int[256];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyHistogramEqualization,The following statement contains a magic number: i < 256
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyHistogramEqualization,The following statement contains a magic number: int* sum0 = stackalloc int[256];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyHistogramEqualization,The following statement contains a magic number: i < 256
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyHistogramEqualization,The following statement contains a magic number: int max = sum0[255];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyHistogramEqualization,The following statement contains a magic number: sum0[i] = (sum0[i] - min) * 255 / (max - min);
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyHistogramEqualization,The following statement contains a magic number: i < 256
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ToImageBgra32,The following statement contains a magic number: p->Alpha = 255;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DetectConnectivity,The following statement contains a magic number: Int32 count = list[6] - list[6] * list[7] * list[0];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DetectConnectivity,The following statement contains a magic number: Int32 count = list[6] - list[6] * list[7] * list[0];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DetectConnectivity,The following statement contains a magic number: Int32 count = list[6] - list[6] * list[7] * list[0];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DetectConnectivity,The following statement contains a magic number: count += list[0] - list[0] * list[1] * list[2];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DetectConnectivity,The following statement contains a magic number: count += list[2] - list[2] * list[3] * list[4];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DetectConnectivity,The following statement contains a magic number: count += list[2] - list[2] * list[3] * list[4];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DetectConnectivity,The following statement contains a magic number: count += list[2] - list[2] * list[3] * list[4];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DetectConnectivity,The following statement contains a magic number: count += list[2] - list[2] * list[3] * list[4];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DetectConnectivity,The following statement contains a magic number: count += list[4] - list[4] * list[5] * list[6];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DetectConnectivity,The following statement contains a magic number: count += list[4] - list[4] * list[5] * list[6];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DetectConnectivity,The following statement contains a magic number: count += list[4] - list[4] * list[5] * list[6];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DetectConnectivity,The following statement contains a magic number: count += list[4] - list[4] * list[5] * list[6];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,FillNeighbors,The following statement contains a magic number: list[2] = p[-width] == foreground ? 0 : 1;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,FillNeighbors,The following statement contains a magic number: list[3] = p[-1 - width] == foreground ? 0 : 1;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,FillNeighbors,The following statement contains a magic number: list[4] = p[-1] == foreground ? 0 : 1;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,FillNeighbors,The following statement contains a magic number: list[5] = p[-1 + width] == foreground ? 0 : 1;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,FillNeighbors,The following statement contains a magic number: list[6] = p[width] == foreground ? 0 : 1;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,FillNeighbors,The following statement contains a magic number: list[7] = p[1 + width] == foreground ? 0 : 1;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,Thinning,The following statement contains a magic number: Int32* list = stackalloc Int32[8];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,Thinning,The following statement contains a magic number: Byte background = (Byte)(255 - foreground);
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,Thinning,The following statement contains a magic number: list[0] == 0 && list[2] == 0 && list[4] == 0 && list[6] == 0
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,Thinning,The following statement contains a magic number: list[0] == 0 && list[2] == 0 && list[4] == 0 && list[6] == 0
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,Thinning,The following statement contains a magic number: list[0] == 0 && list[2] == 0 && list[4] == 0 && list[6] == 0
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,Thinning,The following statement contains a magic number: i < 8
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,Thinning,The following statement contains a magic number: count > 6
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,Thinning,The following statement contains a magic number: list[2] = 1;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,Thinning,The following statement contains a magic number: list[2] = 0;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,Thinning,The following statement contains a magic number: list[4] = 1;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,SkeletonizeByMidPoint,The following statement contains a magic number: Byte bg = (Byte)(255 - foreground);
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,The following statement contains a magic number: int ww = width - 2;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,The following statement contains a magic number: int hh = height - 2;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,The following statement contains a magic number: double orientation' toAngle = 180.0 / System.Math.PI;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,The following statement contains a magic number: gx = p[-width + 1] + p[width + 1]                              - p[-width - 1] - p[width - 1]                              + 2 * (p[1] - p[-1]);
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,The following statement contains a magic number: gy = p[-width - 1] + p[-width + 1]                              - p[width - 1] - p[width + 1]                              + 2 * (p[-width] - p[width]);
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,The following statement contains a magic number: orientation = (gy == 0) ? 0 : 90;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,The following statement contains a magic number: int ww = width - 2;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,The following statement contains a magic number: int hh = height - 2;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,The following statement contains a magic number: double orientation' toAngle = 180.0 / System.Math.PI;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,The following statement contains a magic number: gx = p[-width + 1] + p[width + 1]                              - p[-width - 1] - p[width - 1]                              + 2 * (p[1] - p[-1]);
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,The following statement contains a magic number: gy = p[-width - 1] + p[-width + 1]                              - p[width - 1] - p[width + 1]                              + 2 * (p[-width] - p[width]);
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,The following statement contains a magic number: orientation = (gy == 0) ? 0 : 90;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyMedianFilter,The following statement contains a magic number: int size = medianRadius * 2 + 1;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyOtsuThreshold,The following statement contains a magic number: int[] integerHistogram = new int[256];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyOtsuThreshold,The following statement contains a magic number: float[] histogram = new float[256];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyOtsuThreshold,The following statement contains a magic number: i < 256
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyOtsuThreshold,The following statement contains a magic number: float betweenClassVariance = (float)((class1Probability) * (1.0 - class1Probability) * Math.Pow(class1Mean - class2Mean' 2));
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyOtsuThreshold,The following statement contains a magic number: t < 256
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyLocalThreshold,The following statement contains a magic number: int radius = windowSize / 2;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyLocalThreshold,The following statement contains a magic number: radius = 3;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyLocalThreshold,The following statement contains a magic number: radius < 3
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyLocalThreshold,The following statement contains a magic number: float avgBrightnessPart = 0.85f;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyDistanceTransformFast,The following statement contains a magic number: line1[1] = (byte)(Math.Min(val' 255));
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyDistanceTransformFast,The following statement contains a magic number: line1[w] = (byte)(Math.Min(val' 255));
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyDistanceTransformFast,The following statement contains a magic number: line1[w] = (byte)(Math.Min(val' 255));
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyDistanceTransformFast,The following statement contains a magic number: line1[1] = (byte)(Math.Min(val' 255));
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,SmoothByMorphology,The following statement contains a magic number: *start = (*start > distance0) ? (byte)0 : (byte)255;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,SmoothByMorphology,The following statement contains a magic number: *start = (*start > distance1) ? (byte)0 : (byte)255;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyBilateralFilter,The following statement contains a magic number: int windowSize = radius * 2 + 1;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyBilateralFilter,The following statement contains a magic number: distanceCoeff[idx] = Math.Exp(-0.5 * distanceCoeff[idx] / sigmaDistance / sigmaDistance);
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyBilateralFilter,The following statement contains a magic number: colorCoeff = Math.Exp(-0.5 * colorCoeff * colorCoeff / sigmaColor / sigmaColor);
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplySobelX,The following statement contains a magic number: TCache val = -(*p0)-2*(*p1)-(*p2) + p0[2] + 2 * p1[2] + p2[2];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplySobelX,The following statement contains a magic number: TCache val = -(*p0)-2*(*p1)-(*p2) + p0[2] + 2 * p1[2] + p2[2];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplySobelX,The following statement contains a magic number: TCache val = -(*p0)-2*(*p1)-(*p2) + p0[2] + 2 * p1[2] + p2[2];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplySobelX,The following statement contains a magic number: TCache val = -(*p0)-2*(*p1)-(*p2) + p0[2] + 2 * p1[2] + p2[2];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplySobelX,The following statement contains a magic number: TCache val = -(*p0)-2*(*p1)-(*p2) + p0[2] + 2 * p1[2] + p2[2];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplySobelX,The following statement contains a magic number: val = Math.Min(val' 255);
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplySobelY,The following statement contains a magic number: TCache val = -(p2[0]) - 2 * (p2[1]) - (p2[2]) + p0[0] + 2 * p0[1] + p0[2];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplySobelY,The following statement contains a magic number: TCache val = -(p2[0]) - 2 * (p2[1]) - (p2[2]) + p0[0] + 2 * p0[1] + p0[2];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplySobelY,The following statement contains a magic number: TCache val = -(p2[0]) - 2 * (p2[1]) - (p2[2]) + p0[0] + 2 * p0[1] + p0[2];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplySobelY,The following statement contains a magic number: TCache val = -(p2[0]) - 2 * (p2[1]) - (p2[2]) + p0[0] + 2 * p0[1] + p0[2];
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplySobelY,The following statement contains a magic number: val = Math.Min(val' 255);
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,CopyFrom,The following statement contains a magic number: pSrc->Alpha == 255 || pDst->Alpha == 0
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyModeFilter,The following statement contains a magic number: int radius = size / 2;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DrawLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DrawLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DrawLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ForEachPixelsOnLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaY) < 0.0001
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaX) < 0.0001
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DrawText,The following statement contains a magic number: int base_line = +(ascii[0] & 15);
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DrawText,The following statement contains a magic number: List<PointS> pts = new List<PointS>(1 << 10);
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,DrawText,The following statement contains a magic number: c >= 127 || c < ' '
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,CreatePaddingImage,The following statement contains a magic number: int extendWidth = this.Width + paddingSize * 2;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,CreatePaddingImage,The following statement contains a magic number: int extendHeight = this.Height + paddingSize * 2;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyBiExponentialEdgePreservingSmoother,The following statement contains a magic number: double val = (data1[i] + data2[i]) * 0.5f;
Magic Number,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyConvolution,The following statement contains a magic number: int extend = Math.Max(kernelWidth' kernelHeight) / 2;
Magic Number,Geb.Image,Bgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\PixelFormats.cs,From,The following statement contains a magic number: this.Alpha = 255;
Magic Number,Geb.Image,Bgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\PixelFormats.cs,From,The following statement contains a magic number: this.Alpha = 255;
Magic Number,Geb.Image,Bgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\PixelFormats.cs,From,The following statement contains a magic number: this.Alpha = 255;
Magic Number,Geb.Image,Bgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\PixelFormats.cs,ToGray,The following statement contains a magic number: return (Byte)(0.299 * Red + 0.587 * Green + 0.114 * Blue);
Magic Number,Geb.Image,Bgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\PixelFormats.cs,ToGray,The following statement contains a magic number: return (Byte)(0.299 * Red + 0.587 * Green + 0.114 * Blue);
Magic Number,Geb.Image,Bgra32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\PixelFormats.cs,ToGray,The following statement contains a magic number: return (Byte)(0.299 * Red + 0.587 * Green + 0.114 * Blue);
Magic Number,Geb.Image,Rgba32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\PixelFormats.cs,From,The following statement contains a magic number: this.Alpha = 255;
Magic Number,Geb.Image,Rgba32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\PixelFormats.cs,From,The following statement contains a magic number: this.Alpha = 255;
Magic Number,Geb.Image,Rgba32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\PixelFormats.cs,From,The following statement contains a magic number: this.Alpha = 255;
Magic Number,Geb.Image,Rgba32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\PixelFormats.cs,ToGray,The following statement contains a magic number: return (Byte)(0.299 * Red + 0.587 * Green + 0.114 * Blue);
Magic Number,Geb.Image,Rgba32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\PixelFormats.cs,ToGray,The following statement contains a magic number: return (Byte)(0.299 * Red + 0.587 * Green + 0.114 * Blue);
Magic Number,Geb.Image,Rgba32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\PixelFormats.cs,ToGray,The following statement contains a magic number: return (Byte)(0.299 * Red + 0.587 * Green + 0.114 * Blue);
Magic Number,Geb.Image,Rgb24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\PixelFormats.cs,ToGray,The following statement contains a magic number: return (Byte)(0.299 * Red + 0.587 * Green + 0.114 * Blue);
Magic Number,Geb.Image,Rgb24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\PixelFormats.cs,ToGray,The following statement contains a magic number: return (Byte)(0.299 * Red + 0.587 * Green + 0.114 * Blue);
Magic Number,Geb.Image,Rgb24,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\PixelFormats.cs,ToGray,The following statement contains a magic number: return (Byte)(0.299 * Red + 0.587 * Green + 0.114 * Blue);
Magic Number,Geb.Image,BEEPSProgressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSProgressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSProgressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSProgressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSProgressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSProgressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSProgressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSProgressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSProgressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSProgressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSProgressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSProgressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSProgressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSRegressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSRegressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSRegressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSRegressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSRegressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSRegressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSRegressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSRegressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSRegressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSRegressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSRegressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSRegressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,BEEPSRegressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\_ImageBgr24_Csmacro.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: l = (((y * labLScale - labLShift) + (1 << ((2 * lab_shift) - 1))) >> (2 * lab_shift));
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: l = (((y * labLScale - labLShift) + (1 << ((2 * lab_shift) - 1))) >> (2 * lab_shift));
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: a = (((500 * (x - y)) + (1 << ((lab_shift) - 1))) >> (lab_shift)) + 129;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: a = (((500 * (x - y)) + (1 << ((lab_shift) - 1))) >> (lab_shift)) + 129;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: b = (((200 * (y - z)) + (1 << ((lab_shift) - 1))) >> (lab_shift)) + 128;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: b = (((200 * (y - z)) + (1 << ((lab_shift) - 1))) >> (lab_shift)) + 128;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: a = a > 255 ? 255 : a < 0 ? 0 : a;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: a = a > 255 ? 255 : a < 0 ? 0 : a;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: b = b > 255 ? 255 : b < 0 ? 0 : b;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: b = b > 255 ? 255 : b < 0 ? 0 : b;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: l = (((y * labLScale - labLShift) + (1 << ((2 * lab_shift) - 1))) >> (2 * lab_shift));
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: l = (((y * labLScale - labLShift) + (1 << ((2 * lab_shift) - 1))) >> (2 * lab_shift));
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: a = (((500 * (x - y)) + (1 << ((lab_shift) - 1))) >> (lab_shift)) + 129;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: a = (((500 * (x - y)) + (1 << ((lab_shift) - 1))) >> (lab_shift)) + 129;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: b = (((200 * (y - z)) + (1 << ((lab_shift) - 1))) >> (lab_shift)) + 128;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: b = (((200 * (y - z)) + (1 << ((lab_shift) - 1))) >> (lab_shift)) + 128;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: l = l > 255 ? 255 : l < 0 ? 0 : l;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: l = l > 255 ? 255 : l < 0 ? 0 : l;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: a = a > 255 ? 255 : a < 0 ? 0 : a;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: a = a > 255 ? 255 : a < 0 ? 0 : a;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: b = b > 255 ? 255 : b < 0 ? 0 : b;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: b = b > 255 ? 255 : b < 0 ? 0 : b;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: l = (((y * labLScale - labLShift) + (1 << ((2 * lab_shift) - 1))) >> (2 * lab_shift));
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: l = (((y * labLScale - labLShift) + (1 << ((2 * lab_shift) - 1))) >> (2 * lab_shift));
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: a = (((500 * (x - y)) + (1 << ((lab_shift) - 1))) >> (lab_shift)) + 129;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: a = (((500 * (x - y)) + (1 << ((lab_shift) - 1))) >> (lab_shift)) + 129;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: b = (((200 * (y - z)) + (1 << ((lab_shift) - 1))) >> (lab_shift)) + 128;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: b = (((200 * (y - z)) + (1 << ((lab_shift) - 1))) >> (lab_shift)) + 128;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: l = l > 255 ? 255 : l < 0 ? 0 : l;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: l = l > 255 ? 255 : l < 0 ? 0 : l;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: a = a > 255 ? 255 : a < 0 ? 0 : a;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: a = a > 255 ? 255 : a < 0 ? 0 : a;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: b = b > 255 ? 255 : b < 0 ? 0 : b;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToLab24,The following statement contains a magic number: b = b > 255 ? 255 : b < 0 ? 0 : b;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToBgr24,The following statement contains a magic number: const float coeff0 = 0.39215686274509809f;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToBgr24,The following statement contains a magic number: const float coeff3 = (-128.0f);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToBgr24,The following statement contains a magic number: const float coeff5 = (-128.0f);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToBgr24,The following statement contains a magic number: x = (l + a * 0.002f);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToBgr24,The following statement contains a magic number: z = (l - b * 0.005f);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToBgr24,The following statement contains a magic number: blue = (int)((x * labBx_32f + y * labBy_32f + z * labBz_32f) * 255 + 0.5);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToBgr24,The following statement contains a magic number: blue = (int)((x * labBx_32f + y * labBy_32f + z * labBz_32f) * 255 + 0.5);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToBgr24,The following statement contains a magic number: green = (int)((x * labGx_32f + y * labGy_32f + z * labGz_32f) * 255 + 0.5);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToBgr24,The following statement contains a magic number: green = (int)((x * labGx_32f + y * labGy_32f + z * labGz_32f) * 255 + 0.5);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToBgr24,The following statement contains a magic number: red = (int)((x * labRx_32f + y * labRy_32f + z * labRz_32f) * 255 + 0.5);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToBgr24,The following statement contains a magic number: red = (int)((x * labRx_32f + y * labRy_32f + z * labRz_32f) * 255 + 0.5);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToBgr24,The following statement contains a magic number: red = red < 0 ? 0 : red > 255 ? 255 : red;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToBgr24,The following statement contains a magic number: red = red < 0 ? 0 : red > 255 ? 255 : red;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToBgr24,The following statement contains a magic number: green = green < 0 ? 0 : green > 255 ? 255 : green;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToBgr24,The following statement contains a magic number: green = green < 0 ? 0 : green > 255 ? 255 : green;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToBgr24,The following statement contains a magic number: blue = blue < 0 ? 0 : blue > 255 ? 255 : blue;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToBgr24,The following statement contains a magic number: blue = blue < 0 ? 0 : blue > 255 ? 255 : blue;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToBgra32,The following statement contains a magic number: to->Alpha = 255;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToSignedArgb64,The following statement contains a magic number: to->Alpha = 255;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToByte,The following statement contains a magic number: *to = (Byte)(from->Blue * 0.114 + from->Green * 0.587 + from->Red * 0.299);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToByte,The following statement contains a magic number: *to = (Byte)(from->Blue * 0.114 + from->Green * 0.587 + from->Red * 0.299);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToByte,The following statement contains a magic number: *to = (Byte)(from->Blue * 0.114 + from->Green * 0.587 + from->Red * 0.299);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToByte,The following statement contains a magic number: *to = (Byte)(from->Blue * 0.114 + from->Green * 0.587 + from->Red * 0.299);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToByte,The following statement contains a magic number: *to = (Byte)(from->Blue * 0.114 + from->Green * 0.587 + from->Red * 0.299);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToByte,The following statement contains a magic number: *to = (Byte)(from->Blue * 0.114 + from->Green * 0.587 + from->Red * 0.299);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToArgb32,The following statement contains a magic number: to->Alpha = 255;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToSignedArgb64,The following statement contains a magic number: to->Alpha = 255;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: float r = (from->Red / 255f);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: float g = (from->Green / 255f);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: float b = (from->Blue / 255f);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: float l = (float)((max + min) / 2.0f);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: l < 0.5f
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: float deltaR = (float)(((max - r) / 6.0f + (delta / 2.0f)) / delta);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: float deltaR = (float)(((max - r) / 6.0f + (delta / 2.0f)) / delta);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: float deltaG = (float)(((max - g) / 6.0f + (delta / 2.0f)) / delta);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: float deltaG = (float)(((max - g) / 6.0f + (delta / 2.0f)) / delta);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: float deltaB = (float)(((max - b) / 6.0f + (delta / 2.0f)) / delta);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: float deltaB = (float)(((max - b) / 6.0f + (delta / 2.0f)) / delta);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: float r = (from->Red / 255f);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: float g = (from->Green / 255f);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: float b = (from->Blue / 255f);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: float l = (float)((max + min) / 2.0f);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: l < 0.5f
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: float deltaR = (float)(((max - r) / 6.0f + (delta / 2.0f)) / delta);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: float deltaR = (float)(((max - r) / 6.0f + (delta / 2.0f)) / delta);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: float deltaG = (float)(((max - g) / 6.0f + (delta / 2.0f)) / delta);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: float deltaG = (float)(((max - g) / 6.0f + (delta / 2.0f)) / delta);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: float deltaB = (float)(((max - b) / 6.0f + (delta / 2.0f)) / delta);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: float deltaB = (float)(((max - b) / 6.0f + (delta / 2.0f)) / delta);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToHsl,The following statement contains a magic number: to->L = *from / 255f;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,ToRgb24,The following statement contains a magic number: r = g  = b = (Byte)(from->L * 255);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,HueToRgb,The following statement contains a magic number: return (v1 + (v2 - v1) * 6 * vH);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,HueToRgb,The following statement contains a magic number: (6 * vH) < 1
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,HueToRgb,The following statement contains a magic number: (2 * vH) < 1
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,HueToRgb,The following statement contains a magic number: return (v1 + (v2 - v1) * ((2 / 3) - vH) * 6);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,HueToRgb,The following statement contains a magic number: return (v1 + (v2 - v1) * ((2 / 3) - vH) * 6);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,HueToRgb,The following statement contains a magic number: return (v1 + (v2 - v1) * ((2 / 3) - vH) * 6);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,HueToRgb,The following statement contains a magic number: (3 * vH) < 2
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,HueToRgb,The following statement contains a magic number: (3 * vH) < 2
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,YV12ToRgb24,The following statement contains a magic number: byte* map = stackalloc byte[256*3];
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,YV12ToRgb24,The following statement contains a magic number: byte* map = stackalloc byte[256*3];
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,YV12ToRgb24,The following statement contains a magic number: int* vMap0 = stackalloc int[256];
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,YV12ToRgb24,The following statement contains a magic number: int* vMap1 = stackalloc int[256];
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,YV12ToRgb24,The following statement contains a magic number: int* uMap0 = stackalloc int[256];
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,YV12ToRgb24,The following statement contains a magic number: int* uMap1 = stackalloc int[256];
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,YV12ToRgb24,The following statement contains a magic number: i < 256
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,YV12ToRgb24,The following statement contains a magic number: i < 256 * 3
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,YV12ToRgb24,The following statement contains a magic number: i < 256 * 3
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,YV12ToRgb24,The following statement contains a magic number: int val = i - 128;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,YV12ToRgb24,The following statement contains a magic number: vMap0[i] = (int)(1.4075 * val);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,YV12ToRgb24,The following statement contains a magic number: vMap1[i] = (int)(0.7169 * val);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,YV12ToRgb24,The following statement contains a magic number: uMap0[i] = (int)(0.3455 * val);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,YV12ToRgb24,The following statement contains a magic number: uMap1[i] = (int)(1.779 * val);
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,YV12ToRgb24,The following statement contains a magic number: i < 256
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,YV12ToRgb24,The following statement contains a magic number: byte* u0 = v0 + width * height / 4;
Magic Number,Geb.Image,UnmanagedImageConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\ImageConverter.cs,YV12ToRgb24,The following statement contains a magic number: y = yLine[w] + 256;
Magic Number,Geb.Image,PixelHelper,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Utils\PixelHelper.cs,Invert,The following statement contains a magic number: return (byte)(255 - p);
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,Decode,The following statement contains a magic number: switch (this.infoHeader.Compression)                  {                      case BmpCompression.RGB:                          if (this.infoHeader.BitsPerPixel == 32)                          {                              this.ReadRgb32(image.Start' this.infoHeader.Width' this.infoHeader.Height' inverted);                          }                          else if (this.infoHeader.BitsPerPixel == 24)                          {                              this.ReadRgb24(image.Start' this.infoHeader.Width' this.infoHeader.Height' inverted);                          }                          else if (this.infoHeader.BitsPerPixel == 16)                          {                              this.ReadRgb16(image.Start' this.infoHeader.Width' this.infoHeader.Height' inverted);                          }                          else if (this.infoHeader.BitsPerPixel <= 8)                          {                              throw new NotSupportedException("Does not support this kind of bitmap files.");                          }                          break;                      case BmpCompression.RLE8:                      default:                          throw new NotSupportedException("Does not support this kind of bitmap files.");                  }
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,Decode,The following statement contains a magic number: switch (this.infoHeader.Compression)                  {                      case BmpCompression.RGB:                          if (this.infoHeader.BitsPerPixel == 32)                          {                              this.ReadRgb32(image.Start' this.infoHeader.Width' this.infoHeader.Height' inverted);                          }                          else if (this.infoHeader.BitsPerPixel == 24)                          {                              this.ReadRgb24(image.Start' this.infoHeader.Width' this.infoHeader.Height' inverted);                          }                          else if (this.infoHeader.BitsPerPixel == 16)                          {                              this.ReadRgb16(image.Start' this.infoHeader.Width' this.infoHeader.Height' inverted);                          }                          else if (this.infoHeader.BitsPerPixel <= 8)                          {                              throw new NotSupportedException("Does not support this kind of bitmap files.");                          }                          break;                      case BmpCompression.RLE8:                      default:                          throw new NotSupportedException("Does not support this kind of bitmap files.");                  }
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,Decode,The following statement contains a magic number: switch (this.infoHeader.Compression)                  {                      case BmpCompression.RGB:                          if (this.infoHeader.BitsPerPixel == 32)                          {                              this.ReadRgb32(image.Start' this.infoHeader.Width' this.infoHeader.Height' inverted);                          }                          else if (this.infoHeader.BitsPerPixel == 24)                          {                              this.ReadRgb24(image.Start' this.infoHeader.Width' this.infoHeader.Height' inverted);                          }                          else if (this.infoHeader.BitsPerPixel == 16)                          {                              this.ReadRgb16(image.Start' this.infoHeader.Width' this.infoHeader.Height' inverted);                          }                          else if (this.infoHeader.BitsPerPixel <= 8)                          {                              throw new NotSupportedException("Does not support this kind of bitmap files.");                          }                          break;                      case BmpCompression.RLE8:                      default:                          throw new NotSupportedException("Does not support this kind of bitmap files.");                  }
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,Decode,The following statement contains a magic number: switch (this.infoHeader.Compression)                  {                      case BmpCompression.RGB:                          if (this.infoHeader.BitsPerPixel == 32)                          {                              this.ReadRgb32(image.Start' this.infoHeader.Width' this.infoHeader.Height' inverted);                          }                          else if (this.infoHeader.BitsPerPixel == 24)                          {                              this.ReadRgb24(image.Start' this.infoHeader.Width' this.infoHeader.Height' inverted);                          }                          else if (this.infoHeader.BitsPerPixel == 16)                          {                              this.ReadRgb16(image.Start' this.infoHeader.Width' this.infoHeader.Height' inverted);                          }                          else if (this.infoHeader.BitsPerPixel <= 8)                          {                              throw new NotSupportedException("Does not support this kind of bitmap files.");                          }                          break;                      case BmpCompression.RLE8:                      default:                          throw new NotSupportedException("Does not support this kind of bitmap files.");                  }
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,CalculatePadding,The following statement contains a magic number: int padding = (width * componentCount) % 4;
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,CalculatePadding,The following statement contains a magic number: padding = 4 - padding;
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,GetBytesFrom5BitValue,The following statement contains a magic number: return (byte)((value << 3) | (value >> 2));
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,GetBytesFrom5BitValue,The following statement contains a magic number: return (byte)((value << 3) | (value >> 2));
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,UncompressRle8,The following statement contains a magic number: byte[] cmd = new byte[2];
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,UncompressRle8,The following statement contains a magic number: this.stream.Read(cmd' 0' cmd.Length) != 2
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,ReadRgb16,The following statement contains a magic number: int padding = CalculatePadding(width' 2);
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,ReadRgb16,The following statement contains a magic number: int stride = (width * 2) + padding;
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,ReadRgb16,The following statement contains a magic number: var rgba = new Bgra32(0' 0' 0' 255);
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,ReadRgb16,The following statement contains a magic number: rgba.Red = GetBytesFrom5BitValue((temp & Rgb16RMask) >> 10);
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,ReadRgb16,The following statement contains a magic number: rgba.Green = GetBytesFrom5BitValue((temp & Rgb16GMask) >> 5);
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,ReadRgb24,The following statement contains a magic number: int padding = CalculatePadding(width' 3);
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,ReadRgb24,The following statement contains a magic number: Byte[] row = AllocatePaddedPixelRowBuffer(width' 3' padding);
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,ReadRgb32,The following statement contains a magic number: int padding = CalculatePadding(width' 4);
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,ReadRgb32,The following statement contains a magic number: Byte[] row = AllocatePaddedPixelRowBuffer(width' 4' padding);
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,ReadRgb32,The following statement contains a magic number: Unsafe.CopyBlock((void*)pLine' (void*)pRow' (uint)width * 4);
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,ReadImageHeaders,The following statement contains a magic number: colorMapSize = (int)Math.Pow(2' this.infoHeader.BitsPerPixel) * 4;
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,ReadImageHeaders,The following statement contains a magic number: colorMapSize = (int)Math.Pow(2' this.infoHeader.BitsPerPixel) * 4;
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,ReadImageHeaders,The following statement contains a magic number: this.infoHeader.BitsPerPixel == 1 ||                      this.infoHeader.BitsPerPixel == 4 ||                      this.infoHeader.BitsPerPixel == 8
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,ReadImageHeaders,The following statement contains a magic number: this.infoHeader.BitsPerPixel == 1 ||                      this.infoHeader.BitsPerPixel == 4 ||                      this.infoHeader.BitsPerPixel == 8
Magic Number,Geb.Image.Formats.Bmp,BmpDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpDecoderCore.cs,ReadImageHeaders,The following statement contains a magic number: colorMapSize > 1024
Magic Number,Geb.Image.Formats.Bmp,BmpEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpEncoderCore.cs,Encode,The following statement contains a magic number: short bpp = (short)(8 * (int)this.bitsPerPixel);
Magic Number,Geb.Image.Formats.Bmp,BmpEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpEncoderCore.cs,Encode,The following statement contains a magic number: int bytesPerLine = 4 * (((image.Width * bpp) + 31) / 32);
Magic Number,Geb.Image.Formats.Bmp,BmpEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpEncoderCore.cs,Encode,The following statement contains a magic number: int bytesPerLine = 4 * (((image.Width * bpp) + 31) / 32);
Magic Number,Geb.Image.Formats.Bmp,BmpEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpEncoderCore.cs,Encode,The following statement contains a magic number: int bytesPerLine = 4 * (((image.Width * bpp) + 31) / 32);
Magic Number,Geb.Image.Formats.Bmp,BmpEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpEncoderCore.cs,Encode,The following statement contains a magic number: var fileHeader = new BmpFileHeader(                  type: 19778' // BM                  offset: 54'                  reserved: 0'                  fileSize: 54 + infoHeader.ImageSize);
Magic Number,Geb.Image.Formats.Bmp,BmpEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpEncoderCore.cs,Encode,The following statement contains a magic number: var fileHeader = new BmpFileHeader(                  type: 19778' // BM                  offset: 54'                  reserved: 0'                  fileSize: 54 + infoHeader.ImageSize);
Magic Number,Geb.Image.Formats.Bmp,BmpEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpEncoderCore.cs,Encode,The following statement contains a magic number: var fileHeader = new BmpFileHeader(                  type: 19778' // BM                  offset: 54'                  reserved: 0'                  fileSize: 54 + infoHeader.ImageSize);
Magic Number,Geb.Image.Formats.Bmp,BmpEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpEncoderCore.cs,Encode,The following statement contains a magic number: byte[] buffer = new byte[40];
Magic Number,Geb.Image.Formats.Bmp,BmpEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpEncoderCore.cs,Encode,The following statement contains a magic number: stream.Write(buffer' 0' 40);
Magic Number,Geb.Image.Formats.Bmp,BmpEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpEncoderCore.cs,WriteImage,The following statement contains a magic number: Byte[] row = this.AllocateRow(pixels.Width' 4);
Magic Number,Geb.Image.Formats.Bmp,BmpEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpEncoderCore.cs,WriteImage,The following statement contains a magic number: Unsafe.CopyBlock((void*)pRow' (void*)pSrc' (uint)pixels.Width * 4);
Magic Number,Geb.Image.Formats.Bmp,BmpInfoHeader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpInfoHeader.cs,ParseCore,The following statement contains a magic number: return new BmpInfoHeader(                  headerSize: BinaryPrimitives.ReadInt32LittleEndian(data.Slice(0' 4))'                  width: BinaryPrimitives.ReadUInt16LittleEndian(data.Slice(4' 2))'                  height: BinaryPrimitives.ReadUInt16LittleEndian(data.Slice(6' 2))'                  planes: BinaryPrimitives.ReadInt16LittleEndian(data.Slice(8' 2))'                  bitsPerPixel: BinaryPrimitives.ReadInt16LittleEndian(data.Slice(10' 2)));
Magic Number,Geb.Image.Formats.Bmp,BmpInfoHeader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpInfoHeader.cs,ParseCore,The following statement contains a magic number: return new BmpInfoHeader(                  headerSize: BinaryPrimitives.ReadInt32LittleEndian(data.Slice(0' 4))'                  width: BinaryPrimitives.ReadUInt16LittleEndian(data.Slice(4' 2))'                  height: BinaryPrimitives.ReadUInt16LittleEndian(data.Slice(6' 2))'                  planes: BinaryPrimitives.ReadInt16LittleEndian(data.Slice(8' 2))'                  bitsPerPixel: BinaryPrimitives.ReadInt16LittleEndian(data.Slice(10' 2)));
Magic Number,Geb.Image.Formats.Bmp,BmpInfoHeader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpInfoHeader.cs,ParseCore,The following statement contains a magic number: return new BmpInfoHeader(                  headerSize: BinaryPrimitives.ReadInt32LittleEndian(data.Slice(0' 4))'                  width: BinaryPrimitives.ReadUInt16LittleEndian(data.Slice(4' 2))'                  height: BinaryPrimitives.ReadUInt16LittleEndian(data.Slice(6' 2))'                  planes: BinaryPrimitives.ReadInt16LittleEndian(data.Slice(8' 2))'                  bitsPerPixel: BinaryPrimitives.ReadInt16LittleEndian(data.Slice(10' 2)));
Magic Number,Geb.Image.Formats.Bmp,BmpInfoHeader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpInfoHeader.cs,ParseCore,The following statement contains a magic number: return new BmpInfoHeader(                  headerSize: BinaryPrimitives.ReadInt32LittleEndian(data.Slice(0' 4))'                  width: BinaryPrimitives.ReadUInt16LittleEndian(data.Slice(4' 2))'                  height: BinaryPrimitives.ReadUInt16LittleEndian(data.Slice(6' 2))'                  planes: BinaryPrimitives.ReadInt16LittleEndian(data.Slice(8' 2))'                  bitsPerPixel: BinaryPrimitives.ReadInt16LittleEndian(data.Slice(10' 2)));
Magic Number,Geb.Image.Formats.Bmp,BmpInfoHeader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpInfoHeader.cs,ParseCore,The following statement contains a magic number: return new BmpInfoHeader(                  headerSize: BinaryPrimitives.ReadInt32LittleEndian(data.Slice(0' 4))'                  width: BinaryPrimitives.ReadUInt16LittleEndian(data.Slice(4' 2))'                  height: BinaryPrimitives.ReadUInt16LittleEndian(data.Slice(6' 2))'                  planes: BinaryPrimitives.ReadInt16LittleEndian(data.Slice(8' 2))'                  bitsPerPixel: BinaryPrimitives.ReadInt16LittleEndian(data.Slice(10' 2)));
Magic Number,Geb.Image.Formats.Bmp,BmpInfoHeader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpInfoHeader.cs,ParseCore,The following statement contains a magic number: return new BmpInfoHeader(                  headerSize: BinaryPrimitives.ReadInt32LittleEndian(data.Slice(0' 4))'                  width: BinaryPrimitives.ReadUInt16LittleEndian(data.Slice(4' 2))'                  height: BinaryPrimitives.ReadUInt16LittleEndian(data.Slice(6' 2))'                  planes: BinaryPrimitives.ReadInt16LittleEndian(data.Slice(8' 2))'                  bitsPerPixel: BinaryPrimitives.ReadInt16LittleEndian(data.Slice(10' 2)));
Magic Number,Geb.Image.Formats.Bmp,BmpInfoHeader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpInfoHeader.cs,ParseCore,The following statement contains a magic number: return new BmpInfoHeader(                  headerSize: BinaryPrimitives.ReadInt32LittleEndian(data.Slice(0' 4))'                  width: BinaryPrimitives.ReadUInt16LittleEndian(data.Slice(4' 2))'                  height: BinaryPrimitives.ReadUInt16LittleEndian(data.Slice(6' 2))'                  planes: BinaryPrimitives.ReadInt16LittleEndian(data.Slice(8' 2))'                  bitsPerPixel: BinaryPrimitives.ReadInt16LittleEndian(data.Slice(10' 2)));
Magic Number,Geb.Image.Formats.Bmp,BmpInfoHeader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpInfoHeader.cs,ParseCore,The following statement contains a magic number: return new BmpInfoHeader(                  headerSize: BinaryPrimitives.ReadInt32LittleEndian(data.Slice(0' 4))'                  width: BinaryPrimitives.ReadUInt16LittleEndian(data.Slice(4' 2))'                  height: BinaryPrimitives.ReadUInt16LittleEndian(data.Slice(6' 2))'                  planes: BinaryPrimitives.ReadInt16LittleEndian(data.Slice(8' 2))'                  bitsPerPixel: BinaryPrimitives.ReadInt16LittleEndian(data.Slice(10' 2)));
Magic Number,Geb.Image.Formats.Bmp,BmpInfoHeader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Bmp\BmpInfoHeader.cs,ParseCore,The following statement contains a magic number: return new BmpInfoHeader(                  headerSize: BinaryPrimitives.ReadInt32LittleEndian(data.Slice(0' 4))'                  width: BinaryPrimitives.ReadUInt16LittleEndian(data.Slice(4' 2))'                  height: BinaryPrimitives.ReadUInt16LittleEndian(data.Slice(6' 2))'                  planes: BinaryPrimitives.ReadInt16LittleEndian(data.Slice(8' 2))'                  bitsPerPixel: BinaryPrimitives.ReadInt16LittleEndian(data.Slice(10' 2)));
Magic Number,Geb.Image.Formats,ComparableExtensions,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Extentions\ComparableExtensions.cs,ToByte,The following statement contains a magic number: return (byte)value.Clamp(0' 255);
Magic Number,Geb.Image.Formats,ComparableExtensions,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Extentions\ComparableExtensions.cs,ToByte,The following statement contains a magic number: return (byte)value.Clamp(0' 255);
Magic Number,Geb.Image.Formats,ComparableExtensions,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Extentions\ComparableExtensions.cs,ToByte,The following statement contains a magic number: return (byte)value.Clamp(0' 255);
Magic Number,Geb.Image.Formats,SimdUtils,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Extentions\SimdUtils.cs,PseudoRound,The following statement contains a magic number: return v + (sign * 0.5f);
Magic Number,Geb.Image.Formats,SimdUtils,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Extentions\SimdUtils.cs,FastRound,The following statement contains a magic number: Vector<float> or0 = Vector.BitwiseOr(and0' new Vector<float>(8388608.0f));
Magic Number,Geb.Image.Formats,SimdUtils,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Extentions\SimdUtils.cs,BulkConvertNormalizedFloatToByte,The following statement contains a magic number: int n = source.Length / 8;
Magic Number,Geb.Image.Formats,SimdUtils,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Extentions\SimdUtils.cs,BulkConvertNormalizedFloatToByte,The following statement contains a magic number: Vector<float> magick = new Vector<float>(32768.0f);
Magic Number,Geb.Image.Formats,SimdUtils,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Extentions\SimdUtils.cs,BulkConvertNormalizedFloatToByte,The following statement contains a magic number: Vector<float> scale = new Vector<float>(255f) / new Vector<float>(256f);
Magic Number,Geb.Image.Formats,SimdUtils,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Extentions\SimdUtils.cs,BulkConvertNormalizedFloatToByte,The following statement contains a magic number: Vector<float> scale = new Vector<float>(255f) / new Vector<float>(256f);
Magic Number,Geb.Image.Formats,SimdUtils,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Extentions\SimdUtils.cs,BulkConvertNormalizedFloatToByteClampOverflows,The following statement contains a magic number: int n = source.Length / 8;
Magic Number,Geb.Image.Formats,SimdUtils,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Extentions\SimdUtils.cs,BulkConvertNormalizedFloatToByteClampOverflows,The following statement contains a magic number: Vector<float> magick = new Vector<float>(32768.0f);
Magic Number,Geb.Image.Formats,SimdUtils,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Extentions\SimdUtils.cs,BulkConvertNormalizedFloatToByteClampOverflows,The following statement contains a magic number: Vector<float> scale = new Vector<float>(255f) / new Vector<float>(256f);
Magic Number,Geb.Image.Formats,SimdUtils,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Extentions\SimdUtils.cs,BulkConvertNormalizedFloatToByteClampOverflows,The following statement contains a magic number: Vector<float> scale = new Vector<float>(255f) / new Vector<float>(256f);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,CreateWithModeratePooling,The following statement contains a magic number: return new ArrayPoolMemoryManager(1024 * 1024' 32 * 1024' 16' 24);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,CreateWithModeratePooling,The following statement contains a magic number: return new ArrayPoolMemoryManager(1024 * 1024' 32 * 1024' 16' 24);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,CreateWithModeratePooling,The following statement contains a magic number: return new ArrayPoolMemoryManager(1024 * 1024' 32 * 1024' 16' 24);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,CreateWithModeratePooling,The following statement contains a magic number: return new ArrayPoolMemoryManager(1024 * 1024' 32 * 1024' 16' 24);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,CreateWithModeratePooling,The following statement contains a magic number: return new ArrayPoolMemoryManager(1024 * 1024' 32 * 1024' 16' 24);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,CreateWithModeratePooling,The following statement contains a magic number: return new ArrayPoolMemoryManager(1024 * 1024' 32 * 1024' 16' 24);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,CreateWithMinimalPooling,The following statement contains a magic number: return new ArrayPoolMemoryManager(64 * 1024' 32 * 1024' 8' 24);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,CreateWithMinimalPooling,The following statement contains a magic number: return new ArrayPoolMemoryManager(64 * 1024' 32 * 1024' 8' 24);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,CreateWithMinimalPooling,The following statement contains a magic number: return new ArrayPoolMemoryManager(64 * 1024' 32 * 1024' 8' 24);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,CreateWithMinimalPooling,The following statement contains a magic number: return new ArrayPoolMemoryManager(64 * 1024' 32 * 1024' 8' 24);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,CreateWithMinimalPooling,The following statement contains a magic number: return new ArrayPoolMemoryManager(64 * 1024' 32 * 1024' 8' 24);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,CreateWithMinimalPooling,The following statement contains a magic number: return new ArrayPoolMemoryManager(64 * 1024' 32 * 1024' 8' 24);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,CreateWithAggressivePooling,The following statement contains a magic number: return new ArrayPoolMemoryManager(128 * 1024 * 1024' 32 * 1024 * 1024' 16' 32);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,CreateWithAggressivePooling,The following statement contains a magic number: return new ArrayPoolMemoryManager(128 * 1024 * 1024' 32 * 1024 * 1024' 16' 32);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,CreateWithAggressivePooling,The following statement contains a magic number: return new ArrayPoolMemoryManager(128 * 1024 * 1024' 32 * 1024 * 1024' 16' 32);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,CreateWithAggressivePooling,The following statement contains a magic number: return new ArrayPoolMemoryManager(128 * 1024 * 1024' 32 * 1024 * 1024' 16' 32);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,CreateWithAggressivePooling,The following statement contains a magic number: return new ArrayPoolMemoryManager(128 * 1024 * 1024' 32 * 1024 * 1024' 16' 32);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,CreateWithAggressivePooling,The following statement contains a magic number: return new ArrayPoolMemoryManager(128 * 1024 * 1024' 32 * 1024 * 1024' 16' 32);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,CreateWithAggressivePooling,The following statement contains a magic number: return new ArrayPoolMemoryManager(128 * 1024 * 1024' 32 * 1024 * 1024' 16' 32);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,CreateWithAggressivePooling,The following statement contains a magic number: return new ArrayPoolMemoryManager(128 * 1024 * 1024' 32 * 1024 * 1024' 16' 32);
Magic Number,Geb.Image.Formats,ArrayPoolMemoryManager,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Memory\ArrayPoolMemoryManager.cs,GetLargeBufferThresholdInBytes,The following statement contains a magic number: return maxPoolSizeInBytes / 4;
Magic Number,Geb.Image.Formats,HashHelpers,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Utils\HashHelpers.cs,Combine,The following statement contains a magic number: uint rol5 = ((uint)h1 << 5) | ((uint)h1 >> 27);
Magic Number,Geb.Image.Formats,HashHelpers,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Utils\HashHelpers.cs,Combine,The following statement contains a magic number: uint rol5 = ((uint)h1 << 5) | ((uint)h1 >> 27);
Magic Number,Geb.Image.Formats,ImageMaths,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Utils\ImageMaths.cs,FastAbs,The following statement contains a magic number: int y = x >> 31;
Magic Number,Geb.Image.Formats,ImageMaths,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Utils\ImageMaths.cs,GetBitsNeededForColorDepth,The following statement contains a magic number: return (int)Math.Ceiling(Math.Log(colors' 2));
Magic Number,Geb.Image.Formats,LongRational,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Utils\LongRational.cs,GetHashCode,The following statement contains a magic number: return ((this.Numerator * 397) ^ this.Denominator).GetHashCode();
Magic Number,Geb.Image.Formats,LongRational,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Utils\LongRational.cs,FromDouble,The following statement contains a magic number: double epsilon = bestPrecision ? double.Epsilon : .000001;
Magic Number,Geb.Image.Formats,Vector4Pair,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Utils\Vector4Pair.cs,RoundAndDownscaleAvx2,The following statement contains a magic number: v *= new Vector<float>(1 / 255f);
Magic Number,Geb.Image.Formats.Gif,GifDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifDecoderCore.cs,ReadGraphicalControlExtension,The following statement contains a magic number: this.stream.Read(this.buffer' 0' 6);
Magic Number,Geb.Image.Formats.Gif,GifDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifDecoderCore.cs,ReadImageDescriptor,The following statement contains a magic number: this.stream.Read(this.buffer' 0' 9);
Magic Number,Geb.Image.Formats.Gif,GifDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifDecoderCore.cs,ReadLogicalScreenDescriptor,The following statement contains a magic number: this.stream.Read(this.buffer' 0' 7);
Magic Number,Geb.Image.Formats.Gif,GifDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifDecoderCore.cs,ReadFrame,The following statement contains a magic number: int length = imageDescriptor.LocalColorTableSize * 3;
Magic Number,Geb.Image.Formats.Gif,GifDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifDecoderCore.cs,ReadLogicalScreenDescriptorAndGlobalColorTable,The following statement contains a magic number: this.stream.Skip(6);
Magic Number,Geb.Image.Formats.Gif,GifDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifDecoderCore.cs,ReadLogicalScreenDescriptorAndGlobalColorTable,The following statement contains a magic number: int globalColorTableLength = this.logicalScreenDescriptor.GlobalColorTableSize * 3;
Magic Number,Geb.Image.Formats.Gif,GifEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifEncoderCore.cs,WriteApplicationExtension,The following statement contains a magic number: this.buffer[2] = GifConstants.ApplicationBlockSize;
Magic Number,Geb.Image.Formats.Gif,GifEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifEncoderCore.cs,WriteApplicationExtension,The following statement contains a magic number: GifConstants.ApplicationIdentificationBytes.AsSpan().CopyTo(this.buffer.AsSpan(3' 11));
Magic Number,Geb.Image.Formats.Gif,GifEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifEncoderCore.cs,WriteApplicationExtension,The following statement contains a magic number: GifConstants.ApplicationIdentificationBytes.AsSpan().CopyTo(this.buffer.AsSpan(3' 11));
Magic Number,Geb.Image.Formats.Gif,GifEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifEncoderCore.cs,WriteApplicationExtension,The following statement contains a magic number: this.buffer[14] = 3;
Magic Number,Geb.Image.Formats.Gif,GifEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifEncoderCore.cs,WriteApplicationExtension,The following statement contains a magic number: this.buffer[14] = 3;
Magic Number,Geb.Image.Formats.Gif,GifEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifEncoderCore.cs,WriteApplicationExtension,The following statement contains a magic number: this.buffer[15] = 1;
Magic Number,Geb.Image.Formats.Gif,GifEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifEncoderCore.cs,WriteApplicationExtension,The following statement contains a magic number: BinaryPrimitives.WriteUInt16LittleEndian(this.buffer.AsSpan(16' 2)' repeatCount);
Magic Number,Geb.Image.Formats.Gif,GifEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifEncoderCore.cs,WriteApplicationExtension,The following statement contains a magic number: BinaryPrimitives.WriteUInt16LittleEndian(this.buffer.AsSpan(16' 2)' repeatCount);
Magic Number,Geb.Image.Formats.Gif,GifEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifEncoderCore.cs,WriteApplicationExtension,The following statement contains a magic number: this.buffer[18] = GifConstants.Terminator;
Magic Number,Geb.Image.Formats.Gif,GifEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifEncoderCore.cs,WriteApplicationExtension,The following statement contains a magic number: stream.Write(this.buffer' 0' 19);
Magic Number,Geb.Image.Formats.Gif,GifEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifEncoderCore.cs,WriteComments,The following statement contains a magic number: int count = Math.Min(comments.Length' 255);
Magic Number,Geb.Image.Formats.Gif,GifEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifEncoderCore.cs,WriteComments,The following statement contains a magic number: this.buffer[2] = (byte)count;
Magic Number,Geb.Image.Formats.Gif,GifEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifEncoderCore.cs,WriteComments,The following statement contains a magic number: stream.Write(this.buffer' 0' 3);
Magic Number,Geb.Image.Formats.Gif,GifEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifEncoderCore.cs,WriteExtension,The following statement contains a magic number: int extensionSize = extension.WriteTo(this.buffer.AsSpan(2));
Magic Number,Geb.Image.Formats.Gif,GifEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifEncoderCore.cs,WriteExtension,The following statement contains a magic number: this.buffer[extensionSize + 2] = GifConstants.Terminator;
Magic Number,Geb.Image.Formats.Gif,GifEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifEncoderCore.cs,WriteExtension,The following statement contains a magic number: stream.Write(this.buffer' 0' extensionSize + 3);
Magic Number,Geb.Image.Formats.Gif,GifImageFormatDetector,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifImageFormatDetector.cs,IsSupportedFileFormat,The following statement contains a magic number: return header.Length >= this.HeaderSize &&                     header[0] == 0x47 && // G                     header[1] == 0x49 && // I                     header[2] == 0x46 && // F                     header[3] == 0x38 && // 8                    (header[4] == 0x39 || header[4] == 0x37) && // 9 or 7                     header[5] == 0x61;
Magic Number,Geb.Image.Formats.Gif,GifImageFormatDetector,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifImageFormatDetector.cs,IsSupportedFileFormat,The following statement contains a magic number: return header.Length >= this.HeaderSize &&                     header[0] == 0x47 && // G                     header[1] == 0x49 && // I                     header[2] == 0x46 && // F                     header[3] == 0x38 && // 8                    (header[4] == 0x39 || header[4] == 0x37) && // 9 or 7                     header[5] == 0x61;
Magic Number,Geb.Image.Formats.Gif,GifImageFormatDetector,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifImageFormatDetector.cs,IsSupportedFileFormat,The following statement contains a magic number: return header.Length >= this.HeaderSize &&                     header[0] == 0x47 && // G                     header[1] == 0x49 && // I                     header[2] == 0x46 && // F                     header[3] == 0x38 && // 8                    (header[4] == 0x39 || header[4] == 0x37) && // 9 or 7                     header[5] == 0x61;
Magic Number,Geb.Image.Formats.Gif,GifImageFormatDetector,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifImageFormatDetector.cs,IsSupportedFileFormat,The following statement contains a magic number: return header.Length >= this.HeaderSize &&                     header[0] == 0x47 && // G                     header[1] == 0x49 && // I                     header[2] == 0x46 && // F                     header[3] == 0x38 && // 8                    (header[4] == 0x39 || header[4] == 0x37) && // 9 or 7                     header[5] == 0x61;
Magic Number,Geb.Image.Formats.Gif,GifImageFormatDetector,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifImageFormatDetector.cs,IsSupportedFileFormat,The following statement contains a magic number: return header.Length >= this.HeaderSize &&                     header[0] == 0x47 && // G                     header[1] == 0x49 && // I                     header[2] == 0x46 && // F                     header[3] == 0x38 && // 8                    (header[4] == 0x39 || header[4] == 0x37) && // 9 or 7                     header[5] == 0x61;
Magic Number,Geb.Image.Formats.Gif,LzwDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwDecoder.cs,DecodePixels,The following statement contains a magic number: int availableCode = clearCode + 2;
Magic Number,Geb.Image.Formats.Gif,LzwDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwDecoder.cs,DecodePixels,The following statement contains a magic number: byte[] buffer = new byte[255];
Magic Number,Geb.Image.Formats.Gif,LzwDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwDecoder.cs,DecodePixels,The following statement contains a magic number: bits += 8;
Magic Number,Geb.Image.Formats.Gif,LzwDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwDecoder.cs,DecodePixels,The following statement contains a magic number: availableCode = clearCode + 2;
Magic Number,Geb.Image.Formats.Gif,LzwEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwEncoder.cs,LzwEncoder,The following statement contains a magic number: this.initialCodeSize = Math.Max(2' colorDepth);
Magic Number,Geb.Image.Formats.Gif,LzwEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwEncoder.cs,AddCharacter,The following statement contains a magic number: this.accumulatorCount >= 254
Magic Number,Geb.Image.Formats.Gif,LzwEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwEncoder.cs,ClearBlock,The following statement contains a magic number: this.freeEntry = this.clearCode + 2;
Magic Number,Geb.Image.Formats.Gif,LzwEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwEncoder.cs,Compress,The following statement contains a magic number: this.freeEntry = this.clearCode + 2;
Magic Number,Geb.Image.Formats.Gif,LzwEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwEncoder.cs,Compress,The following statement contains a magic number: fcode < 65536
Magic Number,Geb.Image.Formats.Gif,LzwEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwEncoder.cs,Compress,The following statement contains a magic number: hshift = 8 - hshift;
Magic Number,Geb.Image.Formats.Gif,LzwEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwEncoder.cs,Output,The following statement contains a magic number: this.currentAccumulator >>= 8;
Magic Number,Geb.Image.Formats.Gif,LzwEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwEncoder.cs,Output,The following statement contains a magic number: this.currentBits -= 8;
Magic Number,Geb.Image.Formats.Gif,LzwEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwEncoder.cs,Output,The following statement contains a magic number: this.currentBits >= 8
Magic Number,Geb.Image.Formats.Gif,LzwEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwEncoder.cs,Output,The following statement contains a magic number: this.currentAccumulator >>= 8;
Magic Number,Geb.Image.Formats.Gif,LzwEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\LzwEncoder.cs,Output,The following statement contains a magic number: this.currentBits -= 8;
Magic Number,Geb.Image.Formats.Gif,GifGraphicControlExtension,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\Sections\GifGraphicControlExtension.cs,GifGraphicControlExtension,The following statement contains a magic number: this.BlockSize = 4;
Magic Number,Geb.Image.Formats.Gif,GifGraphicControlExtension,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\Sections\GifGraphicControlExtension.cs,WriteTo,The following statement contains a magic number: return 5;
Magic Number,Geb.Image.Formats.Gif,GifGraphicControlExtension,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\Sections\GifGraphicControlExtension.cs,GetPackedValue,The following statement contains a magic number: value |= (byte)((int)disposalMethod << 2);
Magic Number,Geb.Image.Formats.Gif,GifImageDescriptor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\Sections\GifImageDescriptor.cs,GetPackedValue,The following statement contains a magic number: value |= 1 << 7;
Magic Number,Geb.Image.Formats.Gif,GifImageDescriptor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\Sections\GifImageDescriptor.cs,GetPackedValue,The following statement contains a magic number: value |= 1 << 6;
Magic Number,Geb.Image.Formats.Gif,GifImageDescriptor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\Sections\GifImageDescriptor.cs,GetPackedValue,The following statement contains a magic number: value |= 1 << 5;
Magic Number,Geb.Image.Formats.Gif,GifLogicalScreenDescriptor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\Sections\GifLogicalScreenDescriptor.cs,Parse,The following statement contains a magic number: result.GlobalColorTableSize > 255 * 4
Magic Number,Geb.Image.Formats.Gif,GifLogicalScreenDescriptor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\Sections\GifLogicalScreenDescriptor.cs,Parse,The following statement contains a magic number: result.GlobalColorTableSize > 255 * 4
Magic Number,Geb.Image.Formats.Gif,GifLogicalScreenDescriptor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\Sections\GifLogicalScreenDescriptor.cs,GetPackedValue,The following statement contains a magic number: value |= 1 << 7;
Magic Number,Geb.Image.Formats.Gif,GifLogicalScreenDescriptor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\Sections\GifLogicalScreenDescriptor.cs,GetPackedValue,The following statement contains a magic number: value |= (byte)(colorResolution << 4);
Magic Number,Geb.Image.Formats.Gif,GifLogicalScreenDescriptor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\Sections\GifLogicalScreenDescriptor.cs,GetPackedValue,The following statement contains a magic number: value |= 1 << 3;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,BaseJpegEncoder,The following statement contains a magic number: this.quality = quality.Clamp(1' 100);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,BaseJpegEncoder,The following statement contains a magic number: this.subsample = this.quality >= 91 ? JpegSubsample.Ratio444 : JpegSubsample.Ratio420;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,BaseJpegEncoder,The following statement contains a magic number: this.componentCount = fmt == JpegPixelFormats.YCbCr ? 3 : 1;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,Encode,The following statement contains a magic number: scale = 5000 / this.quality;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,Encode,The following statement contains a magic number: this.quality < 50
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,Encode,The following statement contains a magic number: this.Emit(0x7f' 7);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,Encode,The following statement contains a magic number: stream.Write(this.buffer' 0' 2);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,InitQuantizationTable,The following statement contains a magic number: x = ((x * scale) + 50) / 100;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,InitQuantizationTable,The following statement contains a magic number: x = ((x * scale) + 50) / 100;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,InitQuantizationTable,The following statement contains a magic number: x = 255;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,InitQuantizationTable,The following statement contains a magic number: x > 255
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,Emit,The following statement contains a magic number: bits <<= (int)(32 - count);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,Emit,The following statement contains a magic number: byte b = (byte)(bits >> 24);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,Emit,The following statement contains a magic number: bits <<= 8;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,Emit,The following statement contains a magic number: count -= 8;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,Emit,The following statement contains a magic number: count >= 8
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,Emit,The following statement contains a magic number: count >= 8
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,EmitHuff,The following statement contains a magic number: this.Emit(x & ((1 << 24) - 1)' x >> 24);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,EmitHuff,The following statement contains a magic number: this.Emit(x & ((1 << 24) - 1)' x >> 24);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,EmitHuffRLE,The following statement contains a magic number: this.EmitHuff(index' (int)((uint)(runLength << 4) | bt));
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.buffer[2] = JpegConstants.Markers.XFF;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.buffer[3] = JpegConstants.Markers.APP0;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.buffer[4] = 0x00;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.buffer[5] = 0x10;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.buffer[6] = 0x4a;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.buffer[7] = 0x46;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.buffer[8] = 0x49;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.buffer[9] = 0x46;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.buffer[10] = 0x00;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.buffer[11] = 0x01;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.buffer[12] = 0x01;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.buffer[13] = 0x01;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.buffer[14] = (byte)(horizontalResolution >> 8);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.buffer[14] = (byte)(horizontalResolution >> 8);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.buffer[15] = (byte)horizontalResolution;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.buffer[16] = (byte)(verticalResolution >> 8);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.buffer[16] = (byte)(verticalResolution >> 8);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.buffer[17] = (byte)verticalResolution;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.buffer[18] = 0x00;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.buffer[19] = 0x00;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteApplicationHeader,The following statement contains a magic number: this.outputStream.Write(this.buffer' 0' 20);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteBlock,The following statement contains a magic number: this.EmitHuffRLE((HuffIndex)((2 * (int)index) + 0)' 0' dc - prevDC);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteBlock,The following statement contains a magic number: var h = (HuffIndex)((2 * (int)index) + 1);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteDefineHuffmanTables,The following statement contains a magic number: int markerlen = 2;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteDefineHuffmanTables,The following statement contains a magic number: markerlen += 1 + 16 + s.Values.Length;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteDefineQuantizationTables,The following statement contains a magic number: int markerlen = 2 + (QuantizationTableCount * (1 + Block8x8F.Size));
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteStartOfFrame,The following statement contains a magic number: int markerlen = 8 + (3 * componentCount);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteStartOfFrame,The following statement contains a magic number: int markerlen = 8 + (3 * componentCount);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteStartOfFrame,The following statement contains a magic number: this.buffer[0] = 8;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteStartOfFrame,The following statement contains a magic number: this.buffer[1] = (byte)(height >> 8);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteStartOfFrame,The following statement contains a magic number: this.buffer[2] = (byte)(height & 0xff);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteStartOfFrame,The following statement contains a magic number: this.buffer[3] = (byte)(width >> 8);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteStartOfFrame,The following statement contains a magic number: this.buffer[3] = (byte)(width >> 8);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteStartOfFrame,The following statement contains a magic number: this.buffer[4] = (byte)(width & 0xff);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteStartOfFrame,The following statement contains a magic number: this.buffer[5] = (byte)componentCount;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteStartOfFrame,The following statement contains a magic number: this.buffer[6] = 1;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteStartOfFrame,The following statement contains a magic number: this.buffer[7] = 0x11;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteStartOfFrame,The following statement contains a magic number: this.buffer[8] = 0x00;
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteStartOfFrame,The following statement contains a magic number: this.outputStream.Write(this.buffer' 0' (3 * (componentCount - 1)) + 9);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteStartOfFrame,The following statement contains a magic number: this.outputStream.Write(this.buffer' 0' (3 * (componentCount - 1)) + 9);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteMarkerHeader,The following statement contains a magic number: this.buffer[2] = (byte)(length >> 8);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteMarkerHeader,The following statement contains a magic number: this.buffer[2] = (byte)(length >> 8);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteMarkerHeader,The following statement contains a magic number: this.buffer[3] = (byte)(length & 0xff);
Magic Number,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteMarkerHeader,The following statement contains a magic number: this.outputStream.Write(this.buffer' 0' 4);
Magic Number,Geb.Image.Formats.Jpeg,Jpeg8YCbCrEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Jpeg8Encoder.cs,Encode420,The following statement contains a magic number: int xOff = (i & 1) * 8;
Magic Number,Geb.Image.Formats.Jpeg,Jpeg8YCbCrEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Jpeg8Encoder.cs,Encode420,The following statement contains a magic number: int yOff = (i & 2) * 4;
Magic Number,Geb.Image.Formats.Jpeg,Jpeg8YCbCrEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Jpeg8Encoder.cs,Encode420,The following statement contains a magic number: int yOff = (i & 2) * 4;
Magic Number,Geb.Image.Formats.Jpeg,Jpeg8YCbCrEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Jpeg8Encoder.cs,Encode420,The following statement contains a magic number: i < 4
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8.cs,GetHashCode,The following statement contains a magic number: return (this[0] * 31) + this[1];
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,CopyTo,The following statement contains a magic number: int y8 = y * 8;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,CopyTo,The following statement contains a magic number: x < 8
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,CopyTo,The following statement contains a magic number: y < 8
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,CopyTo,The following statement contains a magic number: CopyRowImpl(ref selfBase' ref destBase' destStride' 2);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,CopyTo,The following statement contains a magic number: CopyRowImpl(ref selfBase' ref destBase' destStride' 3);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,CopyTo,The following statement contains a magic number: CopyRowImpl(ref selfBase' ref destBase' destStride' 4);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,CopyTo,The following statement contains a magic number: CopyRowImpl(ref selfBase' ref destBase' destStride' 5);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,CopyTo,The following statement contains a magic number: CopyRowImpl(ref selfBase' ref destBase' destStride' 6);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,CopyTo,The following statement contains a magic number: CopyRowImpl(ref selfBase' ref destBase' destStride' 7);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,CopyRowImpl,The following statement contains a magic number: ref byte s = ref Unsafe.Add(ref selfBase' row * 8 * sizeof(float));
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,CopyRowImpl,The following statement contains a magic number: Unsafe.CopyBlock(ref d' ref s' 8 * sizeof(float));
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,CopyTo2x2,The following statement contains a magic number: this.WidenCopyImpl2x2(ref destBase' 2' destStride);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,CopyTo2x2,The following statement contains a magic number: this.WidenCopyImpl2x2(ref destBase' 3' destStride);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,CopyTo2x2,The following statement contains a magic number: this.WidenCopyImpl2x2(ref destBase' 4' destStride);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,CopyTo2x2,The following statement contains a magic number: this.WidenCopyImpl2x2(ref destBase' 5' destStride);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,CopyTo2x2,The following statement contains a magic number: this.WidenCopyImpl2x2(ref destBase' 6' destStride);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,CopyTo2x2,The following statement contains a magic number: this.WidenCopyImpl2x2(ref destBase' 7' destStride);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: ref Vector4 selfLeft = ref Unsafe.Add(ref this.V0L' 2 * row);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: ref float destLocalOrigo = ref Unsafe.Add(ref destBase' row * 2 * destStride);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref destLocalOrigo' 2) = selfLeft.Y;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref destLocalOrigo' 3) = selfLeft.Y;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref destLocalOrigo' 4) = selfLeft.Z;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref destLocalOrigo' 5) = selfLeft.Z;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref destLocalOrigo' 6) = selfLeft.W;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref destLocalOrigo' 7) = selfLeft.W;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' 8)' 0) = selfRight.X;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' 8)' 1) = selfRight.X;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' 8)' 2) = selfRight.Y;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' 8)' 2) = selfRight.Y;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' 8)' 3) = selfRight.Y;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' 8)' 3) = selfRight.Y;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' 8)' 4) = selfRight.Z;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' 8)' 4) = selfRight.Z;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' 8)' 5) = selfRight.Z;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' 8)' 5) = selfRight.Z;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' 8)' 6) = selfRight.W;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' 8)' 6) = selfRight.W;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' 8)' 7) = selfRight.W;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' 8)' 7) = selfRight.W;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' destStride)' 2) = selfLeft.Y;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' destStride)' 3) = selfLeft.Y;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' destStride)' 4) = selfLeft.Z;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' destStride)' 5) = selfLeft.Z;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' destStride)' 6) = selfLeft.W;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' destStride)' 7) = selfLeft.W;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' destStride + 8)' 0) = selfRight.X;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' destStride + 8)' 1) = selfRight.X;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' destStride + 8)' 2) = selfRight.Y;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' destStride + 8)' 2) = selfRight.Y;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' destStride + 8)' 3) = selfRight.Y;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' destStride + 8)' 3) = selfRight.Y;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' destStride + 8)' 4) = selfRight.Z;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' destStride + 8)' 4) = selfRight.Z;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' destStride + 8)' 5) = selfRight.Z;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' destStride + 8)' 5) = selfRight.Z;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' destStride + 8)' 6) = selfRight.W;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' destStride + 8)' 6) = selfRight.W;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' destStride + 8)' 7) = selfRight.W;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl2x2,The following statement contains a magic number: Unsafe.Add(ref Unsafe.Add(ref destLocalOrigo' destStride + 8)' 7) = selfRight.W;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl,The following statement contains a magic number: Unsafe.Add(ref destBase' 2) = s.Y;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl,The following statement contains a magic number: Unsafe.Add(ref destBase' 3) = s.Y;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl,The following statement contains a magic number: Unsafe.Add(ref destBase' 4) = s.Z;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl,The following statement contains a magic number: Unsafe.Add(ref destBase' 5) = s.Z;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl,The following statement contains a magic number: Unsafe.Add(ref destBase' 6) = s.W;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,WidenCopyImpl,The following statement contains a magic number: Unsafe.Add(ref destBase' 7) = s.W;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,Scale16X16To8X8,The following statement contains a magic number: int dstOff = ((i & 2) << 4) | ((i & 1) << 2);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,Scale16X16To8X8,The following statement contains a magic number: int dstOff = ((i & 2) << 4) | ((i & 1) << 2);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,Scale16X16To8X8,The following statement contains a magic number: int dstOff = ((i & 2) << 4) | ((i & 1) << 2);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,Scale16X16To8X8,The following statement contains a magic number: int j = (16 * y) + (2 * x);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,Scale16X16To8X8,The following statement contains a magic number: int j = (16 * y) + (2 * x);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,Scale16X16To8X8,The following statement contains a magic number: float sum = iSource[j] + iSource[j + 1] + iSource[j + 8] + iSource[j + 9];
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,Scale16X16To8X8,The following statement contains a magic number: float sum = iSource[j] + iSource[j + 1] + iSource[j + 8] + iSource[j + 9];
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,Scale16X16To8X8,The following statement contains a magic number: d[(8 * y) + x + dstOff] = (sum + 2) / 4;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,Scale16X16To8X8,The following statement contains a magic number: d[(8 * y) + x + dstOff] = (sum + 2) / 4;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,Scale16X16To8X8,The following statement contains a magic number: d[(8 * y) + x + dstOff] = (sum + 2) / 4;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,Scale16X16To8X8,The following statement contains a magic number: x < 4
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,Scale16X16To8X8,The following statement contains a magic number: y < 4
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,Scale16X16To8X8,The following statement contains a magic number: i < 4
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,RoundInto,The following statement contains a magic number: val -= 0.5f;
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,NormalizeColorsAndRoundInplaceAvx2,The following statement contains a magic number: Vector<float> off = new Vector<float>(128f);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,NormalizeColorsAndRoundInplaceAvx2,The following statement contains a magic number: Vector<float> max = new Vector<float>(255F);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V0L.Z =  Unsafe.Add(ref selfRef' 2);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V0L.W =  Unsafe.Add(ref selfRef' 3);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V0R.X =  Unsafe.Add(ref selfRef' 4);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V0R.Y =  Unsafe.Add(ref selfRef' 5);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V0R.Z =  Unsafe.Add(ref selfRef' 6);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V0R.W =  Unsafe.Add(ref selfRef' 7);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V1L.X =  Unsafe.Add(ref selfRef' 8);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V1L.Y =  Unsafe.Add(ref selfRef' 9);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V1L.Z =  Unsafe.Add(ref selfRef' 10);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V1L.W =  Unsafe.Add(ref selfRef' 11);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V1R.X =  Unsafe.Add(ref selfRef' 12);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V1R.Y =  Unsafe.Add(ref selfRef' 13);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V1R.Z =  Unsafe.Add(ref selfRef' 14);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V1R.W =  Unsafe.Add(ref selfRef' 15);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V2L.X =  Unsafe.Add(ref selfRef' 16);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V2L.Y =  Unsafe.Add(ref selfRef' 17);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V2L.Z =  Unsafe.Add(ref selfRef' 18);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V2L.W =  Unsafe.Add(ref selfRef' 19);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V2R.X =  Unsafe.Add(ref selfRef' 20);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V2R.Y =  Unsafe.Add(ref selfRef' 21);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V2R.Z =  Unsafe.Add(ref selfRef' 22);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V2R.W =  Unsafe.Add(ref selfRef' 23);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V3L.X =  Unsafe.Add(ref selfRef' 24);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V3L.Y =  Unsafe.Add(ref selfRef' 25);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V3L.Z =  Unsafe.Add(ref selfRef' 26);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V3L.W =  Unsafe.Add(ref selfRef' 27);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V3R.X =  Unsafe.Add(ref selfRef' 28);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V3R.Y =  Unsafe.Add(ref selfRef' 29);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V3R.Z =  Unsafe.Add(ref selfRef' 30);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V3R.W =  Unsafe.Add(ref selfRef' 31);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V4L.X =  Unsafe.Add(ref selfRef' 32);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V4L.Y =  Unsafe.Add(ref selfRef' 33);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V4L.Z =  Unsafe.Add(ref selfRef' 34);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V4L.W =  Unsafe.Add(ref selfRef' 35);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V4R.X =  Unsafe.Add(ref selfRef' 36);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V4R.Y =  Unsafe.Add(ref selfRef' 37);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V4R.Z =  Unsafe.Add(ref selfRef' 38);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V4R.W =  Unsafe.Add(ref selfRef' 39);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V5L.X =  Unsafe.Add(ref selfRef' 40);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V5L.Y =  Unsafe.Add(ref selfRef' 41);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V5L.Z =  Unsafe.Add(ref selfRef' 42);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V5L.W =  Unsafe.Add(ref selfRef' 43);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V5R.X =  Unsafe.Add(ref selfRef' 44);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V5R.Y =  Unsafe.Add(ref selfRef' 45);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V5R.Z =  Unsafe.Add(ref selfRef' 46);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V5R.W =  Unsafe.Add(ref selfRef' 47);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V6L.X =  Unsafe.Add(ref selfRef' 48);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V6L.Y =  Unsafe.Add(ref selfRef' 49);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V6L.Z =  Unsafe.Add(ref selfRef' 50);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V6L.W =  Unsafe.Add(ref selfRef' 51);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V6R.X =  Unsafe.Add(ref selfRef' 52);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V6R.Y =  Unsafe.Add(ref selfRef' 53);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V6R.Z =  Unsafe.Add(ref selfRef' 54);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V6R.W =  Unsafe.Add(ref selfRef' 55);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V7L.X =  Unsafe.Add(ref selfRef' 56);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V7L.Y =  Unsafe.Add(ref selfRef' 57);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V7L.Z =  Unsafe.Add(ref selfRef' 58);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V7L.W =  Unsafe.Add(ref selfRef' 59);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V7R.X =  Unsafe.Add(ref selfRef' 60);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V7R.Y =  Unsafe.Add(ref selfRef' 61);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V7R.Z =  Unsafe.Add(ref selfRef' 62);
Magic Number,Geb.Image.Formats.Jpeg.Components,Block8x8F,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Block8x8F.CopyTo.cs,LoadFrom,The following statement contains a magic number: this.V7R.W =  Unsafe.Add(ref selfRef' 63);
Magic Number,Geb.Image.Formats.Jpeg.Components,FastFloatingPointDCT,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\FastFloatingPointDCT.cs,FDCT8x4_LeftPart,The following statement contains a magic number: float w0 = 0.541196f;
Magic Number,Geb.Image.Formats.Jpeg.Components,FastFloatingPointDCT,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\FastFloatingPointDCT.cs,FDCT8x4_LeftPart,The following statement contains a magic number: float w1 = 1.306563f;
Magic Number,Geb.Image.Formats.Jpeg.Components,FastFloatingPointDCT,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\FastFloatingPointDCT.cs,FDCT8x4_LeftPart,The following statement contains a magic number: w0 = 1.175876f;
Magic Number,Geb.Image.Formats.Jpeg.Components,FastFloatingPointDCT,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\FastFloatingPointDCT.cs,FDCT8x4_LeftPart,The following statement contains a magic number: w1 = 0.785695f;
Magic Number,Geb.Image.Formats.Jpeg.Components,FastFloatingPointDCT,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\FastFloatingPointDCT.cs,FDCT8x4_LeftPart,The following statement contains a magic number: w0 = 1.387040f;
Magic Number,Geb.Image.Formats.Jpeg.Components,FastFloatingPointDCT,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\FastFloatingPointDCT.cs,FDCT8x4_LeftPart,The following statement contains a magic number: w1 = 0.275899f;
Magic Number,Geb.Image.Formats.Jpeg.Components,FastFloatingPointDCT,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\FastFloatingPointDCT.cs,FDCT8x4_LeftPart,The following statement contains a magic number: float invsqrt2 = 0.707107f;
Magic Number,Geb.Image.Formats.Jpeg.Components,FastFloatingPointDCT,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\FastFloatingPointDCT.cs,FDCT8x4_RightPart,The following statement contains a magic number: float w0 = 0.541196f;
Magic Number,Geb.Image.Formats.Jpeg.Components,FastFloatingPointDCT,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\FastFloatingPointDCT.cs,FDCT8x4_RightPart,The following statement contains a magic number: float w1 = 1.306563f;
Magic Number,Geb.Image.Formats.Jpeg.Components,FastFloatingPointDCT,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\FastFloatingPointDCT.cs,FDCT8x4_RightPart,The following statement contains a magic number: w0 = 1.175876f;
Magic Number,Geb.Image.Formats.Jpeg.Components,FastFloatingPointDCT,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\FastFloatingPointDCT.cs,FDCT8x4_RightPart,The following statement contains a magic number: w1 = 0.785695f;
Magic Number,Geb.Image.Formats.Jpeg.Components,FastFloatingPointDCT,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\FastFloatingPointDCT.cs,FDCT8x4_RightPart,The following statement contains a magic number: w0 = 1.387040f;
Magic Number,Geb.Image.Formats.Jpeg.Components,FastFloatingPointDCT,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\FastFloatingPointDCT.cs,FDCT8x4_RightPart,The following statement contains a magic number: w1 = 0.275899f;
Magic Number,Geb.Image.Formats.Jpeg.Components,FastFloatingPointDCT,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\FastFloatingPointDCT.cs,TransformFDCT,The following statement contains a magic number: temp.AddToAllInplace(new Vector4(-128));
Magic Number,Geb.Image.Formats.Jpeg.Components,GenericBlock8x8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\GenericBlock8x8.cs,LoadAndStretchEdges,The following statement contains a magic number: int width = Math.Min(8' imageWidth - sourceX);
Magic Number,Geb.Image.Formats.Jpeg.Components,GenericBlock8x8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\GenericBlock8x8.cs,LoadAndStretchEdges,The following statement contains a magic number: int height = Math.Min(8' imageHeight - sourceY);
Magic Number,Geb.Image.Formats.Jpeg.Components,GenericBlock8x8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\GenericBlock8x8.cs,LoadAndStretchEdges,The following statement contains a magic number: int remainderXCount = 8 - width;
Magic Number,Geb.Image.Formats.Jpeg.Components,GenericBlock8x8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\GenericBlock8x8.cs,LoadAndStretchEdges,The following statement contains a magic number: int blockRowSizeInBytes = 8 * Unsafe.SizeOf<T>();
Magic Number,Geb.Image.Formats.Jpeg.Components,GenericBlock8x8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\GenericBlock8x8.cs,LoadAndStretchEdges,The following statement contains a magic number: int remainderYCount = 8 - height;
Magic Number,Geb.Image.Formats.Jpeg.Components,ZigZag,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\ZigZag.cs,CreateUnzigTable,The following statement contains a magic number: Marshal.Copy(Unzig' 0' (IntPtr)unzigPtr' 64);
Magic Number,Geb.Image.Formats.Jpeg.Components,ZigZag,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\ZigZag.cs,CreateDequantizationTable,The following statement contains a magic number: i < 64
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,AdobeMarker,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\AdobeMarker.cs,TryParse,The following statement contains a magic number: short dctEncodeVersion = (short)((bytes[5] << 8) | bytes[6]);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,AdobeMarker,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\AdobeMarker.cs,TryParse,The following statement contains a magic number: short dctEncodeVersion = (short)((bytes[5] << 8) | bytes[6]);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,AdobeMarker,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\AdobeMarker.cs,TryParse,The following statement contains a magic number: short dctEncodeVersion = (short)((bytes[5] << 8) | bytes[6]);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,AdobeMarker,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\AdobeMarker.cs,TryParse,The following statement contains a magic number: short app14Flags0 = (short)((bytes[7] << 8) | bytes[8]);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,AdobeMarker,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\AdobeMarker.cs,TryParse,The following statement contains a magic number: short app14Flags0 = (short)((bytes[7] << 8) | bytes[8]);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,AdobeMarker,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\AdobeMarker.cs,TryParse,The following statement contains a magic number: short app14Flags0 = (short)((bytes[7] << 8) | bytes[8]);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,AdobeMarker,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\AdobeMarker.cs,TryParse,The following statement contains a magic number: short app14Flags1 = (short)((bytes[9] << 8) | bytes[10]);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,AdobeMarker,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\AdobeMarker.cs,TryParse,The following statement contains a magic number: short app14Flags1 = (short)((bytes[9] << 8) | bytes[10]);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,AdobeMarker,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\AdobeMarker.cs,TryParse,The following statement contains a magic number: short app14Flags1 = (short)((bytes[9] << 8) | bytes[10]);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,AdobeMarker,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\AdobeMarker.cs,TryParse,The following statement contains a magic number: byte colorTransform = bytes[11];
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,JFifMarker,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\JFifMarker.cs,TryParse,The following statement contains a magic number: byte majorVersion = bytes[5];
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,JFifMarker,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\JFifMarker.cs,TryParse,The following statement contains a magic number: byte minorVersion = bytes[6];
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,JFifMarker,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\JFifMarker.cs,TryParse,The following statement contains a magic number: byte densityUnits = bytes[7];
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,JFifMarker,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\JFifMarker.cs,TryParse,The following statement contains a magic number: short xDensity = (short)((bytes[8] << 8) | bytes[9]);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,JFifMarker,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\JFifMarker.cs,TryParse,The following statement contains a magic number: short xDensity = (short)((bytes[8] << 8) | bytes[9]);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,JFifMarker,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\JFifMarker.cs,TryParse,The following statement contains a magic number: short xDensity = (short)((bytes[8] << 8) | bytes[9]);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,JFifMarker,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\JFifMarker.cs,TryParse,The following statement contains a magic number: short yDensity = (short)((bytes[10] << 8) | bytes[11]);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,JFifMarker,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\JFifMarker.cs,TryParse,The following statement contains a magic number: short yDensity = (short)((bytes[10] << 8) | bytes[11]);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,JFifMarker,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\JFifMarker.cs,TryParse,The following statement contains a magic number: short yDensity = (short)((bytes[10] << 8) | bytes[11]);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,JpegComponentPostProcessor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\JpegComponentPostProcessor.cs,JpegComponentPostProcessor,The following statement contains a magic number: this.blockAreaSize = new Size(this.Component.SubSamplingDivisors.Width * 8'   this.Component.SubSamplingDivisors.Height * 8);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,JpegComponentPostProcessor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\JpegComponentPostProcessor.cs,JpegComponentPostProcessor,The following statement contains a magic number: this.blockAreaSize = new Size(this.Component.SubSamplingDivisors.Width * 8'   this.Component.SubSamplingDivisors.Height * 8);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,JpegImagePostProcessor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\JpegImagePostProcessor.cs,JpegImagePostProcessor,The following statement contains a magic number: this.PostProcessorBufferSize = new Size(c0.SizeInBlocks.Width * 8' PixelRowsPerStep);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,JpegImagePostProcessor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\JpegImagePostProcessor.cs,ConvertColorsInto,The following statement contains a magic number: c.Red = (byte)Math.Max(0'Math.Min(255'(v.X * 255)));
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,JpegImagePostProcessor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\JpegImagePostProcessor.cs,ConvertColorsInto,The following statement contains a magic number: c.Red = (byte)Math.Max(0'Math.Min(255'(v.X * 255)));
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,JpegImagePostProcessor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\JpegImagePostProcessor.cs,ConvertColorsInto,The following statement contains a magic number: c.Green = (byte)Math.Max(0' Math.Min(255' (v.Y * 255)));
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,JpegImagePostProcessor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\JpegImagePostProcessor.cs,ConvertColorsInto,The following statement contains a magic number: c.Green = (byte)Math.Max(0' Math.Min(255' (v.Y * 255)));
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,JpegImagePostProcessor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\JpegImagePostProcessor.cs,ConvertColorsInto,The following statement contains a magic number: c.Blue = (byte)Math.Max(0' Math.Min(255' (v.Z * 255)));
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,JpegImagePostProcessor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\JpegImagePostProcessor.cs,ConvertColorsInto,The following statement contains a magic number: c.Blue = (byte)Math.Max(0' Math.Min(255' (v.Z * 255)));
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder,JpegImagePostProcessor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\JpegImagePostProcessor.cs,ConvertColorsInto,The following statement contains a magic number: c.Alpha = 255;
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,ComponentValues,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.cs,ComponentValues,The following statement contains a magic number: this.Component2 = componentBuffers[2].GetRowSpan(row);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,ComponentValues,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.cs,ComponentValues,The following statement contains a magic number: this.Component3 = componentBuffers[3].GetRowSpan(row);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,ComponentValues,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.cs,ComponentValues,The following statement contains a magic number: this.ComponentCount > 3
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,ComponentValues,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.cs,ComponentValues,The following statement contains a magic number: this.ComponentCount > 2
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,ComponentValues,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.cs,Slice,The following statement contains a magic number: ReadOnlySpan<float> c2 = this.ComponentCount > 2 ? this.Component2.Slice(start' length) : ReadOnlySpan<float>.Empty;
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,ComponentValues,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.cs,Slice,The following statement contains a magic number: ReadOnlySpan<float> c3 = this.ComponentCount > 3 ? this.Component3.Slice(start' length) : ReadOnlySpan<float>.Empty;
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromCmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromCmyk.cs,ConvertToRgba,The following statement contains a magic number: var scale = new Vector4(1 / 255F' 1 / 255F' 1 / 255F' 1F);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromCmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromCmyk.cs,ConvertToRgba,The following statement contains a magic number: var scale = new Vector4(1 / 255F' 1 / 255F' 1 / 255F' 1F);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromCmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromCmyk.cs,ConvertToRgba,The following statement contains a magic number: var scale = new Vector4(1 / 255F' 1 / 255F' 1 / 255F' 1F);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromCmyk,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromCmyk.cs,ConvertToRgba,The following statement contains a magic number: float k = kVals[i] / 255F;
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromGrayscale,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromGrayScale.cs,ConvertToRgba,The following statement contains a magic number: var scale = new Vector4(1 / 255F' 1 / 255F' 1 / 255F' 1F);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromGrayscale,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromGrayScale.cs,ConvertToRgba,The following statement contains a magic number: var scale = new Vector4(1 / 255F' 1 / 255F' 1 / 255F' 1F);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromGrayscale,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromGrayScale.cs,ConvertToRgba,The following statement contains a magic number: var scale = new Vector4(1 / 255F' 1 / 255F' 1 / 255F' 1F);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromRgb,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromRgb.cs,ConvertToRgba,The following statement contains a magic number: var scale = new Vector4(1 / 255F' 1 / 255F' 1 / 255F' 1F);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromRgb,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromRgb.cs,ConvertToRgba,The following statement contains a magic number: var scale = new Vector4(1 / 255F' 1 / 255F' 1 / 255F' 1F);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromRgb,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromRgb.cs,ConvertToRgba,The following statement contains a magic number: var scale = new Vector4(1 / 255F' 1 / 255F' 1 / 255F' 1F);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrBasic,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrBasic.cs,ConvertCore,The following statement contains a magic number: var scale = new Vector4(1 / 255F' 1 / 255F' 1 / 255F' 1F);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrBasic,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrBasic.cs,ConvertCore,The following statement contains a magic number: var scale = new Vector4(1 / 255F' 1 / 255F' 1 / 255F' 1F);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrBasic,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrBasic.cs,ConvertCore,The following statement contains a magic number: var scale = new Vector4(1 / 255F' 1 / 255F' 1 / 255F' 1F);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrBasic,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrBasic.cs,ConvertCore,The following statement contains a magic number: float cb = cbVals[i] - 128F;
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrBasic,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrBasic.cs,ConvertCore,The following statement contains a magic number: float cr = crVals[i] - 128F;
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrBasic,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrBasic.cs,ConvertCore,The following statement contains a magic number: v.X = MathF.Round(y + (1.402F * cr)' MidpointRounding.AwayFromZero);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrBasic,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrBasic.cs,ConvertCore,The following statement contains a magic number: v.Y = MathF.Round(y - (0.344136F * cb) - (0.714136F * cr)' MidpointRounding.AwayFromZero);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrBasic,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrBasic.cs,ConvertCore,The following statement contains a magic number: v.Y = MathF.Round(y - (0.344136F * cb) - (0.714136F * cr)' MidpointRounding.AwayFromZero);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrBasic,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrBasic.cs,ConvertCore,The following statement contains a magic number: v.Z = MathF.Round(y + (1.772F * cb)' MidpointRounding.AwayFromZero);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrSimd,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrSimd.cs,ConvertToRgba,The following statement contains a magic number: int remainder = result.Length % 8;
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrSimd,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrSimd.cs,ConvertCore,The following statement contains a magic number: DebugGuard.IsTrue(result.Length % 8 == 0' nameof(result)' "result.Length should be divisable by 8!");
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrSimd,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrSimd.cs,ConvertCore,The following statement contains a magic number: var chromaOffset = new Vector4(-128f);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrSimd,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrSimd.cs,ConvertCore,The following statement contains a magic number: int n = result.Length / 8;
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrSimd,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrSimd.cs,ConvertCore,The following statement contains a magic number: tmp.MultiplyInplace(1.402F);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrSimd,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrSimd.cs,ConvertCore,The following statement contains a magic number: tmp.MultiplyInplace(-0.344136F);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrSimd,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrSimd.cs,ConvertCore,The following statement contains a magic number: tmp.MultiplyInplace(-0.714136F);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrSimd,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrSimd.cs,ConvertCore,The following statement contains a magic number: tmp.MultiplyInplace(1.772F);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrSimd,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrSimd.cs,ConvertCore,The following statement contains a magic number: Vector<float>.Count == 4
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrSimdAvx2,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrSimdAvx2.cs,ConvertToRgba,The following statement contains a magic number: int remainder = result.Length % 8;
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrSimdAvx2,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrSimdAvx2.cs,ConvertCore,The following statement contains a magic number: var chromaOffset = new Vector<float>(-128f);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrSimdAvx2,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrSimdAvx2.cs,ConvertCore,The following statement contains a magic number: int n = result.Length / 8;
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrSimdAvx2,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrSimdAvx2.cs,ConvertCore,The following statement contains a magic number: var scale = new Vector<float>(1 / 255f);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrSimdAvx2,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrSimdAvx2.cs,ConvertCore,The following statement contains a magic number: Vector<float> r = y + (cr * new Vector<float>(1.402F));
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrSimdAvx2,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrSimdAvx2.cs,ConvertCore,The following statement contains a magic number: Vector<float> g = y - (cb * new Vector<float>(0.344136F)) - (cr * new Vector<float>(0.714136F));
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrSimdAvx2,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrSimdAvx2.cs,ConvertCore,The following statement contains a magic number: Vector<float> g = y - (cb * new Vector<float>(0.344136F)) - (cr * new Vector<float>(0.714136F));
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYCbCrSimdAvx2,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYCbCrSimdAvx2.cs,ConvertCore,The following statement contains a magic number: Vector<float> b = y + (cb * new Vector<float>(1.772F));
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYccK,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYccK.cs,ConvertToRgba,The following statement contains a magic number: var scale = new Vector4(1 / 255F' 1 / 255F' 1 / 255F' 1F);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYccK,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYccK.cs,ConvertToRgba,The following statement contains a magic number: var scale = new Vector4(1 / 255F' 1 / 255F' 1 / 255F' 1F);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYccK,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYccK.cs,ConvertToRgba,The following statement contains a magic number: var scale = new Vector4(1 / 255F' 1 / 255F' 1 / 255F' 1F);
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYccK,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYccK.cs,ConvertToRgba,The following statement contains a magic number: float cb = cbVals[i] - 128F;
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYccK,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYccK.cs,ConvertToRgba,The following statement contains a magic number: float cr = crVals[i] - 128F;
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYccK,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYccK.cs,ConvertToRgba,The following statement contains a magic number: float k = kVals[i] / 255F;
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYccK,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYccK.cs,ConvertToRgba,The following statement contains a magic number: v.X = (255F - MathF.Round(y + (1.402F * cr)' MidpointRounding.AwayFromZero)) * k;
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYccK,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYccK.cs,ConvertToRgba,The following statement contains a magic number: v.X = (255F - MathF.Round(y + (1.402F * cr)' MidpointRounding.AwayFromZero)) * k;
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYccK,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYccK.cs,ConvertToRgba,The following statement contains a magic number: v.Y = (255F - MathF.Round(y - (0.344136F * cb) - (0.714136F * cr)' MidpointRounding.AwayFromZero)) * k;
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYccK,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYccK.cs,ConvertToRgba,The following statement contains a magic number: v.Y = (255F - MathF.Round(y - (0.344136F * cb) - (0.714136F * cr)' MidpointRounding.AwayFromZero)) * k;
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYccK,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYccK.cs,ConvertToRgba,The following statement contains a magic number: v.Y = (255F - MathF.Round(y - (0.344136F * cb) - (0.714136F * cr)' MidpointRounding.AwayFromZero)) * k;
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYccK,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYccK.cs,ConvertToRgba,The following statement contains a magic number: v.Z = (255F - MathF.Round(y + (1.772F * cb)' MidpointRounding.AwayFromZero)) * k;
Magic Number,Geb.Image.Formats.Jpeg.Components.Decoder.ColorConverters,FromYccK,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Decoder\ColorConverters\JpegColorConverter.FromYccK.cs,ConvertToRgba,The following statement contains a magic number: v.Z = (255F - MathF.Round(y + (1.772F * cb)' MidpointRounding.AwayFromZero)) * k;
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,GrayForwardConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\GrayForwardConverter.cs,Convert,The following statement contains a magic number: i < 64
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,HuffmanLut,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\HuffmanLut.cs,HuffmanLut,The following statement contains a magic number: int bits = (i + 1) << 24;
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,Create,The following statement contains a magic number: tables.YRTable[i] = Fix(0.299F) * i;
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,Create,The following statement contains a magic number: tables.YGTable[i] = Fix(0.587F) * i;
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,Create,The following statement contains a magic number: tables.YBTable[i] = (Fix(0.114F) * i) + Half;
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,Create,The following statement contains a magic number: tables.CbRTable[i] = (-Fix(0.168735892F)) * i;
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,Create,The following statement contains a magic number: tables.CbGTable[i] = (-Fix(0.331264108F)) * i;
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,Create,The following statement contains a magic number: tables.CbBTable[i] = (Fix(0.5F) * i) + CBCrOffset + Half - 1;
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,Create,The following statement contains a magic number: tables.CrGTable[i] = (-Fix(0.418687589F)) * i;
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,Create,The following statement contains a magic number: tables.CrBTable[i] = (-Fix(0.081312411F)) * i;
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,Create,The following statement contains a magic number: i <= 255
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,ConvertPixelInto,The following statement contains a magic number: ref int yG = ref Unsafe.Add(ref start' 256 * 1);
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,ConvertPixelInto,The following statement contains a magic number: ref int yB = ref Unsafe.Add(ref start' 256 * 2);
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,ConvertPixelInto,The following statement contains a magic number: ref int yB = ref Unsafe.Add(ref start' 256 * 2);
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,ConvertPixelInto,The following statement contains a magic number: ref int cbR = ref Unsafe.Add(ref start' 256 * 3);
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,ConvertPixelInto,The following statement contains a magic number: ref int cbR = ref Unsafe.Add(ref start' 256 * 3);
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,ConvertPixelInto,The following statement contains a magic number: ref int cbG = ref Unsafe.Add(ref start' 256 * 4);
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,ConvertPixelInto,The following statement contains a magic number: ref int cbG = ref Unsafe.Add(ref start' 256 * 4);
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,ConvertPixelInto,The following statement contains a magic number: ref int cbB = ref Unsafe.Add(ref start' 256 * 5);
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,ConvertPixelInto,The following statement contains a magic number: ref int cbB = ref Unsafe.Add(ref start' 256 * 5);
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,ConvertPixelInto,The following statement contains a magic number: ref int crG = ref Unsafe.Add(ref start' 256 * 6);
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,ConvertPixelInto,The following statement contains a magic number: ref int crG = ref Unsafe.Add(ref start' 256 * 6);
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,ConvertPixelInto,The following statement contains a magic number: ref int crB = ref Unsafe.Add(ref start' 256 * 7);
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,ConvertPixelInto,The following statement contains a magic number: ref int crB = ref Unsafe.Add(ref start' 256 * 7);
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,RgbToYCbCrTables,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\RgbToYCbCrTables.cs,Fix,The following statement contains a magic number: return (int)((x * (1L << ScaleBits)) + 0.5F);
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,YCbCrForwardConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\YCbCrForwardConverter.cs,Convert,The following statement contains a magic number: i < 64
Magic Number,Geb.Image.Formats.Jpeg.Components.Encoder,YCbCrForwardConverter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Components\Encoder\YCbCrForwardConverter.cs,Convert,The following statement contains a magic number: i < 64
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,DoubleBufferedStreamReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\DoubleBufferedStreamReader.cs,CopyBytes,The following statement contains a magic number: count < 9
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsFrame,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsFrame.cs,InitComponents,The following statement contains a magic number: this.McusPerLine = (int)MathF.Ceiling(this.SamplesPerLine / 8F / this.MaxHorizontalFactor);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsFrame,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsFrame.cs,InitComponents,The following statement contains a magic number: this.McusPerColumn = (int)MathF.Ceiling(this.Scanlines / 8F / this.MaxVerticalFactor);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsFrameComponent,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsFrameComponent.cs,Init,The following statement contains a magic number: this.WidthInBlocks = (int)MathF.Ceiling(                  MathF.Ceiling(this.Frame.SamplesPerLine / 8F) * this.HorizontalSamplingFactor / this.Frame.MaxHorizontalFactor);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsFrameComponent,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsFrameComponent.cs,Init,The following statement contains a magic number: this.HeightInBlocks = (int)MathF.Ceiling(                  MathF.Ceiling(this.Frame.Scanlines / 8F) * this.VerticalSamplingFactor / this.Frame.MaxVerticalFactor);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsFrameComponent,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsFrameComponent.cs,Init,The following statement contains a magic number: this.Index == 0 || this.Index == 3
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsFrameComponent,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsFrameComponent.cs,GetBlockBufferOffset,The following statement contains a magic number: return 64 * (((this.WidthInBlocks + 1) * row) + col);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsHuffmanTable,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsHuffmanTable.cs,PdfJsHuffmanTable,The following statement contains a magic number: const int length = 257;
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsHuffmanTable,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsHuffmanTable.cs,PdfJsHuffmanTable,The following statement contains a magic number: var huffValSpan = new Span<byte>(huffValRef' 256);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsHuffmanTable,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsHuffmanTable.cs,GenerateSizeTable,The following statement contains a magic number: l <= 16
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsHuffmanTable,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsHuffmanTable.cs,GenerateDecoderTables,The following statement contains a magic number: fixed (long* maxcodeRef = this.MaxCode.Data)              {                  short bitcount = 0;                  for (int i = 1; i <= 16; i++)                  {                      if (lengths[i] != 0)                      {                          // valOffsetRef[l] = huffcodeRef[] index of 1st symbol of code length i' minus the minimum code of length i                          valOffsetRef[i] = (short)(bitcount - Unsafe.Add(ref huffcodeRef' bitcount));                          bitcount += lengths[i];                          maxcodeRef[i] = Unsafe.Add(ref huffcodeRef' bitcount - 1); // maximum code of length i                      }                      else                      {                          maxcodeRef[i] = -1; // -1 if no codes of this length                      }                  }                    valOffsetRef[17] = 0;                  maxcodeRef[17] = 0xFFFFFL;              }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsHuffmanTable,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsHuffmanTable.cs,GenerateDecoderTables,The following statement contains a magic number: fixed (long* maxcodeRef = this.MaxCode.Data)              {                  short bitcount = 0;                  for (int i = 1; i <= 16; i++)                  {                      if (lengths[i] != 0)                      {                          // valOffsetRef[l] = huffcodeRef[] index of 1st symbol of code length i' minus the minimum code of length i                          valOffsetRef[i] = (short)(bitcount - Unsafe.Add(ref huffcodeRef' bitcount));                          bitcount += lengths[i];                          maxcodeRef[i] = Unsafe.Add(ref huffcodeRef' bitcount - 1); // maximum code of length i                      }                      else                      {                          maxcodeRef[i] = -1; // -1 if no codes of this length                      }                  }                    valOffsetRef[17] = 0;                  maxcodeRef[17] = 0xFFFFFL;              }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsHuffmanTable,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsHuffmanTable.cs,GenerateDecoderTables,The following statement contains a magic number: fixed (long* maxcodeRef = this.MaxCode.Data)              {                  short bitcount = 0;                  for (int i = 1; i <= 16; i++)                  {                      if (lengths[i] != 0)                      {                          // valOffsetRef[l] = huffcodeRef[] index of 1st symbol of code length i' minus the minimum code of length i                          valOffsetRef[i] = (short)(bitcount - Unsafe.Add(ref huffcodeRef' bitcount));                          bitcount += lengths[i];                          maxcodeRef[i] = Unsafe.Add(ref huffcodeRef' bitcount - 1); // maximum code of length i                      }                      else                      {                          maxcodeRef[i] = -1; // -1 if no codes of this length                      }                  }                    valOffsetRef[17] = 0;                  maxcodeRef[17] = 0xFFFFFL;              }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsHuffmanTable,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsHuffmanTable.cs,GenerateLookaheadTables,The following statement contains a magic number: var lookaheadSpan = new Span<short>(lookaheadRef' 256);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsHuffmanTable,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsHuffmanTable.cs,GenerateLookaheadTables,The following statement contains a magic number: lookaheadSpan.Fill(2034);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsHuffmanTable,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsHuffmanTable.cs,GenerateLookaheadTables,The following statement contains a magic number: int lookBits = Unsafe.Add(ref huffcodeRef' p) << (8 - l);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsHuffmanTable,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsHuffmanTable.cs,GenerateLookaheadTables,The following statement contains a magic number: lookaheadRef[lookBits] = (short)((l << 8) | huffval[p]);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsHuffmanTable,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsHuffmanTable.cs,GenerateLookaheadTables,The following statement contains a magic number: l <= 8
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeScan,The following statement contains a magic number: this.markerBuffer = new byte[2];
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,TryFillBits,The following statement contains a magic number: const int MinGetBits = 7;
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,TryFillBits,The following statement contains a magic number: switch (c)                      {                          case -0x1:                                // We've encountered the end of the file stream which means there's no EOI marker in the image.                              this.endOfStreamReached = true;                              return false;                            case JpegConstants.Markers.XFF:                              int nextByte = stream.ReadByte();                                if (nextByte == -0x1)                              {                                  this.endOfStreamReached = true;                                  return false;                              }                                if (nextByte != 0)                              {  #if DEBUG                                  Debug.WriteLine($"DecodeScan - Unexpected marker {(c << 8) | nextByte:X} at {stream.Position}");  #endif                                    // We've encountered an unexpected marker. Reverse the stream and exit.                                  this.unexpectedMarkerReached = true;                                  stream.Position -= 2;                                    // TODO: double check we need this.                                  // Fill buffer with zero bits.                                  if (this.bitsCount == 0)                                  {                                      this.bitsData <<= MinGetBits;                                      this.bitsCount = MinGetBits;                                  }                                    return true;                              }                                break;                      }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,TryFillBits,The following statement contains a magic number: switch (c)                      {                          case -0x1:                                // We've encountered the end of the file stream which means there's no EOI marker in the image.                              this.endOfStreamReached = true;                              return false;                            case JpegConstants.Markers.XFF:                              int nextByte = stream.ReadByte();                                if (nextByte == -0x1)                              {                                  this.endOfStreamReached = true;                                  return false;                              }                                if (nextByte != 0)                              {  #if DEBUG                                  Debug.WriteLine($"DecodeScan - Unexpected marker {(c << 8) | nextByte:X} at {stream.Position}");  #endif                                    // We've encountered an unexpected marker. Reverse the stream and exit.                                  this.unexpectedMarkerReached = true;                                  stream.Position -= 2;                                    // TODO: double check we need this.                                  // Fill buffer with zero bits.                                  if (this.bitsCount == 0)                                  {                                      this.bitsData <<= MinGetBits;                                      this.bitsCount = MinGetBits;                                  }                                    return true;                              }                                break;                      }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,TryFillBits,The following statement contains a magic number: this.bitsData = (this.bitsData << 8) | c;
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,TryFillBits,The following statement contains a magic number: this.bitsCount += 8;
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeBaseline,The following statement contains a magic number: int s = rs & 15;
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeBaseline,The following statement contains a magic number: int r = rs >> 4;
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeBaseline,The following statement contains a magic number: r < 15
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeBaseline,The following statement contains a magic number: k += 16;
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeBaseline,The following statement contains a magic number: k < 64
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACFirst,The following statement contains a magic number: int s = rs & 15;
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACFirst,The following statement contains a magic number: int r = rs >> 4;
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACFirst,The following statement contains a magic number: r < 15
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACFirst,The following statement contains a magic number: k += 16;
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACSuccessive,The following statement contains a magic number: switch (this.successiveACState)                  {                      case 0: // Initial state                            if (!this.TryDecodeHuffman(ref acHuffmanTable' stream' out short rs))                          {                              return;                          }                            int s = rs & 15;                          r = rs >> 4;                          if (s == 0)                          {                              if (r < 15)                              {                                  if (!this.TryReceive(r' stream' out int eob))                                  {                                      return;                                  }                                    this.eobrun = eob + (1 << r);                                  this.successiveACState = 4;                              }                              else                              {                                  r = 16;                                  this.successiveACState = 1;                              }                          }                          else                          {                              if (s != 1)                              {                                  throw new ImageFormatException("Invalid ACn encoding");                              }                                if (!this.TryReceiveAndExtend(s' stream' out int v))                              {                                  return;                              }                                this.successiveACNextValue = v;                              this.successiveACState = r > 0 ? 2 : 3;                          }                            continue;                      case 1: // Skipping r zero items                      case 2:                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              r--;                              if (r == 0)                              {                                  this.successiveACState = this.successiveACState == 2 ? 3 : 0;                              }                          }                            break;                      case 3: // Set value for a zero item                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              blockOffsetZRef = (short)(this.successiveACNextValue << this.successiveState);                              this.successiveACState = 0;                          }                            break;                      case 4: // Eob                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                            break;                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACSuccessive,The following statement contains a magic number: switch (this.successiveACState)                  {                      case 0: // Initial state                            if (!this.TryDecodeHuffman(ref acHuffmanTable' stream' out short rs))                          {                              return;                          }                            int s = rs & 15;                          r = rs >> 4;                          if (s == 0)                          {                              if (r < 15)                              {                                  if (!this.TryReceive(r' stream' out int eob))                                  {                                      return;                                  }                                    this.eobrun = eob + (1 << r);                                  this.successiveACState = 4;                              }                              else                              {                                  r = 16;                                  this.successiveACState = 1;                              }                          }                          else                          {                              if (s != 1)                              {                                  throw new ImageFormatException("Invalid ACn encoding");                              }                                if (!this.TryReceiveAndExtend(s' stream' out int v))                              {                                  return;                              }                                this.successiveACNextValue = v;                              this.successiveACState = r > 0 ? 2 : 3;                          }                            continue;                      case 1: // Skipping r zero items                      case 2:                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              r--;                              if (r == 0)                              {                                  this.successiveACState = this.successiveACState == 2 ? 3 : 0;                              }                          }                            break;                      case 3: // Set value for a zero item                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              blockOffsetZRef = (short)(this.successiveACNextValue << this.successiveState);                              this.successiveACState = 0;                          }                            break;                      case 4: // Eob                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                            break;                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACSuccessive,The following statement contains a magic number: switch (this.successiveACState)                  {                      case 0: // Initial state                            if (!this.TryDecodeHuffman(ref acHuffmanTable' stream' out short rs))                          {                              return;                          }                            int s = rs & 15;                          r = rs >> 4;                          if (s == 0)                          {                              if (r < 15)                              {                                  if (!this.TryReceive(r' stream' out int eob))                                  {                                      return;                                  }                                    this.eobrun = eob + (1 << r);                                  this.successiveACState = 4;                              }                              else                              {                                  r = 16;                                  this.successiveACState = 1;                              }                          }                          else                          {                              if (s != 1)                              {                                  throw new ImageFormatException("Invalid ACn encoding");                              }                                if (!this.TryReceiveAndExtend(s' stream' out int v))                              {                                  return;                              }                                this.successiveACNextValue = v;                              this.successiveACState = r > 0 ? 2 : 3;                          }                            continue;                      case 1: // Skipping r zero items                      case 2:                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              r--;                              if (r == 0)                              {                                  this.successiveACState = this.successiveACState == 2 ? 3 : 0;                              }                          }                            break;                      case 3: // Set value for a zero item                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              blockOffsetZRef = (short)(this.successiveACNextValue << this.successiveState);                              this.successiveACState = 0;                          }                            break;                      case 4: // Eob                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                            break;                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACSuccessive,The following statement contains a magic number: switch (this.successiveACState)                  {                      case 0: // Initial state                            if (!this.TryDecodeHuffman(ref acHuffmanTable' stream' out short rs))                          {                              return;                          }                            int s = rs & 15;                          r = rs >> 4;                          if (s == 0)                          {                              if (r < 15)                              {                                  if (!this.TryReceive(r' stream' out int eob))                                  {                                      return;                                  }                                    this.eobrun = eob + (1 << r);                                  this.successiveACState = 4;                              }                              else                              {                                  r = 16;                                  this.successiveACState = 1;                              }                          }                          else                          {                              if (s != 1)                              {                                  throw new ImageFormatException("Invalid ACn encoding");                              }                                if (!this.TryReceiveAndExtend(s' stream' out int v))                              {                                  return;                              }                                this.successiveACNextValue = v;                              this.successiveACState = r > 0 ? 2 : 3;                          }                            continue;                      case 1: // Skipping r zero items                      case 2:                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              r--;                              if (r == 0)                              {                                  this.successiveACState = this.successiveACState == 2 ? 3 : 0;                              }                          }                            break;                      case 3: // Set value for a zero item                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              blockOffsetZRef = (short)(this.successiveACNextValue << this.successiveState);                              this.successiveACState = 0;                          }                            break;                      case 4: // Eob                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                            break;                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACSuccessive,The following statement contains a magic number: switch (this.successiveACState)                  {                      case 0: // Initial state                            if (!this.TryDecodeHuffman(ref acHuffmanTable' stream' out short rs))                          {                              return;                          }                            int s = rs & 15;                          r = rs >> 4;                          if (s == 0)                          {                              if (r < 15)                              {                                  if (!this.TryReceive(r' stream' out int eob))                                  {                                      return;                                  }                                    this.eobrun = eob + (1 << r);                                  this.successiveACState = 4;                              }                              else                              {                                  r = 16;                                  this.successiveACState = 1;                              }                          }                          else                          {                              if (s != 1)                              {                                  throw new ImageFormatException("Invalid ACn encoding");                              }                                if (!this.TryReceiveAndExtend(s' stream' out int v))                              {                                  return;                              }                                this.successiveACNextValue = v;                              this.successiveACState = r > 0 ? 2 : 3;                          }                            continue;                      case 1: // Skipping r zero items                      case 2:                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              r--;                              if (r == 0)                              {                                  this.successiveACState = this.successiveACState == 2 ? 3 : 0;                              }                          }                            break;                      case 3: // Set value for a zero item                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              blockOffsetZRef = (short)(this.successiveACNextValue << this.successiveState);                              this.successiveACState = 0;                          }                            break;                      case 4: // Eob                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                            break;                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACSuccessive,The following statement contains a magic number: switch (this.successiveACState)                  {                      case 0: // Initial state                            if (!this.TryDecodeHuffman(ref acHuffmanTable' stream' out short rs))                          {                              return;                          }                            int s = rs & 15;                          r = rs >> 4;                          if (s == 0)                          {                              if (r < 15)                              {                                  if (!this.TryReceive(r' stream' out int eob))                                  {                                      return;                                  }                                    this.eobrun = eob + (1 << r);                                  this.successiveACState = 4;                              }                              else                              {                                  r = 16;                                  this.successiveACState = 1;                              }                          }                          else                          {                              if (s != 1)                              {                                  throw new ImageFormatException("Invalid ACn encoding");                              }                                if (!this.TryReceiveAndExtend(s' stream' out int v))                              {                                  return;                              }                                this.successiveACNextValue = v;                              this.successiveACState = r > 0 ? 2 : 3;                          }                            continue;                      case 1: // Skipping r zero items                      case 2:                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              r--;                              if (r == 0)                              {                                  this.successiveACState = this.successiveACState == 2 ? 3 : 0;                              }                          }                            break;                      case 3: // Set value for a zero item                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              blockOffsetZRef = (short)(this.successiveACNextValue << this.successiveState);                              this.successiveACState = 0;                          }                            break;                      case 4: // Eob                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                            break;                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACSuccessive,The following statement contains a magic number: switch (this.successiveACState)                  {                      case 0: // Initial state                            if (!this.TryDecodeHuffman(ref acHuffmanTable' stream' out short rs))                          {                              return;                          }                            int s = rs & 15;                          r = rs >> 4;                          if (s == 0)                          {                              if (r < 15)                              {                                  if (!this.TryReceive(r' stream' out int eob))                                  {                                      return;                                  }                                    this.eobrun = eob + (1 << r);                                  this.successiveACState = 4;                              }                              else                              {                                  r = 16;                                  this.successiveACState = 1;                              }                          }                          else                          {                              if (s != 1)                              {                                  throw new ImageFormatException("Invalid ACn encoding");                              }                                if (!this.TryReceiveAndExtend(s' stream' out int v))                              {                                  return;                              }                                this.successiveACNextValue = v;                              this.successiveACState = r > 0 ? 2 : 3;                          }                            continue;                      case 1: // Skipping r zero items                      case 2:                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              r--;                              if (r == 0)                              {                                  this.successiveACState = this.successiveACState == 2 ? 3 : 0;                              }                          }                            break;                      case 3: // Set value for a zero item                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              blockOffsetZRef = (short)(this.successiveACNextValue << this.successiveState);                              this.successiveACState = 0;                          }                            break;                      case 4: // Eob                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                            break;                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACSuccessive,The following statement contains a magic number: switch (this.successiveACState)                  {                      case 0: // Initial state                            if (!this.TryDecodeHuffman(ref acHuffmanTable' stream' out short rs))                          {                              return;                          }                            int s = rs & 15;                          r = rs >> 4;                          if (s == 0)                          {                              if (r < 15)                              {                                  if (!this.TryReceive(r' stream' out int eob))                                  {                                      return;                                  }                                    this.eobrun = eob + (1 << r);                                  this.successiveACState = 4;                              }                              else                              {                                  r = 16;                                  this.successiveACState = 1;                              }                          }                          else                          {                              if (s != 1)                              {                                  throw new ImageFormatException("Invalid ACn encoding");                              }                                if (!this.TryReceiveAndExtend(s' stream' out int v))                              {                                  return;                              }                                this.successiveACNextValue = v;                              this.successiveACState = r > 0 ? 2 : 3;                          }                            continue;                      case 1: // Skipping r zero items                      case 2:                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              r--;                              if (r == 0)                              {                                  this.successiveACState = this.successiveACState == 2 ? 3 : 0;                              }                          }                            break;                      case 3: // Set value for a zero item                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              blockOffsetZRef = (short)(this.successiveACNextValue << this.successiveState);                              this.successiveACState = 0;                          }                            break;                      case 4: // Eob                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                            break;                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACSuccessive,The following statement contains a magic number: switch (this.successiveACState)                  {                      case 0: // Initial state                            if (!this.TryDecodeHuffman(ref acHuffmanTable' stream' out short rs))                          {                              return;                          }                            int s = rs & 15;                          r = rs >> 4;                          if (s == 0)                          {                              if (r < 15)                              {                                  if (!this.TryReceive(r' stream' out int eob))                                  {                                      return;                                  }                                    this.eobrun = eob + (1 << r);                                  this.successiveACState = 4;                              }                              else                              {                                  r = 16;                                  this.successiveACState = 1;                              }                          }                          else                          {                              if (s != 1)                              {                                  throw new ImageFormatException("Invalid ACn encoding");                              }                                if (!this.TryReceiveAndExtend(s' stream' out int v))                              {                                  return;                              }                                this.successiveACNextValue = v;                              this.successiveACState = r > 0 ? 2 : 3;                          }                            continue;                      case 1: // Skipping r zero items                      case 2:                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              r--;                              if (r == 0)                              {                                  this.successiveACState = this.successiveACState == 2 ? 3 : 0;                              }                          }                            break;                      case 3: // Set value for a zero item                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              blockOffsetZRef = (short)(this.successiveACNextValue << this.successiveState);                              this.successiveACState = 0;                          }                            break;                      case 4: // Eob                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                            break;                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACSuccessive,The following statement contains a magic number: switch (this.successiveACState)                  {                      case 0: // Initial state                            if (!this.TryDecodeHuffman(ref acHuffmanTable' stream' out short rs))                          {                              return;                          }                            int s = rs & 15;                          r = rs >> 4;                          if (s == 0)                          {                              if (r < 15)                              {                                  if (!this.TryReceive(r' stream' out int eob))                                  {                                      return;                                  }                                    this.eobrun = eob + (1 << r);                                  this.successiveACState = 4;                              }                              else                              {                                  r = 16;                                  this.successiveACState = 1;                              }                          }                          else                          {                              if (s != 1)                              {                                  throw new ImageFormatException("Invalid ACn encoding");                              }                                if (!this.TryReceiveAndExtend(s' stream' out int v))                              {                                  return;                              }                                this.successiveACNextValue = v;                              this.successiveACState = r > 0 ? 2 : 3;                          }                            continue;                      case 1: // Skipping r zero items                      case 2:                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              r--;                              if (r == 0)                              {                                  this.successiveACState = this.successiveACState == 2 ? 3 : 0;                              }                          }                            break;                      case 3: // Set value for a zero item                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              blockOffsetZRef = (short)(this.successiveACNextValue << this.successiveState);                              this.successiveACState = 0;                          }                            break;                      case 4: // Eob                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                            break;                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACSuccessive,The following statement contains a magic number: switch (this.successiveACState)                  {                      case 0: // Initial state                            if (!this.TryDecodeHuffman(ref acHuffmanTable' stream' out short rs))                          {                              return;                          }                            int s = rs & 15;                          r = rs >> 4;                          if (s == 0)                          {                              if (r < 15)                              {                                  if (!this.TryReceive(r' stream' out int eob))                                  {                                      return;                                  }                                    this.eobrun = eob + (1 << r);                                  this.successiveACState = 4;                              }                              else                              {                                  r = 16;                                  this.successiveACState = 1;                              }                          }                          else                          {                              if (s != 1)                              {                                  throw new ImageFormatException("Invalid ACn encoding");                              }                                if (!this.TryReceiveAndExtend(s' stream' out int v))                              {                                  return;                              }                                this.successiveACNextValue = v;                              this.successiveACState = r > 0 ? 2 : 3;                          }                            continue;                      case 1: // Skipping r zero items                      case 2:                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              r--;                              if (r == 0)                              {                                  this.successiveACState = this.successiveACState == 2 ? 3 : 0;                              }                          }                            break;                      case 3: // Set value for a zero item                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              blockOffsetZRef = (short)(this.successiveACNextValue << this.successiveState);                              this.successiveACState = 0;                          }                            break;                      case 4: // Eob                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                            break;                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACSuccessive,The following statement contains a magic number: switch (this.successiveACState)                  {                      case 0: // Initial state                            if (!this.TryDecodeHuffman(ref acHuffmanTable' stream' out short rs))                          {                              return;                          }                            int s = rs & 15;                          r = rs >> 4;                          if (s == 0)                          {                              if (r < 15)                              {                                  if (!this.TryReceive(r' stream' out int eob))                                  {                                      return;                                  }                                    this.eobrun = eob + (1 << r);                                  this.successiveACState = 4;                              }                              else                              {                                  r = 16;                                  this.successiveACState = 1;                              }                          }                          else                          {                              if (s != 1)                              {                                  throw new ImageFormatException("Invalid ACn encoding");                              }                                if (!this.TryReceiveAndExtend(s' stream' out int v))                              {                                  return;                              }                                this.successiveACNextValue = v;                              this.successiveACState = r > 0 ? 2 : 3;                          }                            continue;                      case 1: // Skipping r zero items                      case 2:                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              r--;                              if (r == 0)                              {                                  this.successiveACState = this.successiveACState == 2 ? 3 : 0;                              }                          }                            break;                      case 3: // Set value for a zero item                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              blockOffsetZRef = (short)(this.successiveACNextValue << this.successiveState);                              this.successiveACState = 0;                          }                            break;                      case 4: // Eob                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                            break;                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACSuccessive,The following statement contains a magic number: this.successiveACState == 4
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,FindNextFileMarker,The following statement contains a magic number: int value = stream.Read(marker' 0' 2);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,FindNextFileMarker,The following statement contains a magic number: return new PdfJsFileMarker(JpegConstants.Markers.EOI' stream.Length - 2);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,FindNextFileMarker,The following statement contains a magic number: return new PdfJsFileMarker(JpegConstants.Markers.EOI' stream.Length - 2);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,FindNextFileMarker,The following statement contains a magic number: return new PdfJsFileMarker((byte)m' stream.Position - 2);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,FindNextFileMarker,The following statement contains a magic number: return new PdfJsFileMarker(marker[1]' stream.Position - 2' true);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ParseStream,The following statement contains a magic number: this.InputStream.Read(this.markerBuffer' 0' 2);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ParseStream,The following statement contains a magic number: this.InputStream.Read(this.markerBuffer' 0' 2);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ParseStream,The following statement contains a magic number: fileMarker = new PdfJsFileMarker(marker' (int)this.InputStream.Position - 2);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ParseStream,The following statement contains a magic number: this.QuantizationTables = new Block8x8F[4];
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ParseStream,The following statement contains a magic number: int remaining = this.ReadUint16() - 2;
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,DeduceJpegColorSpace,The following statement contains a magic number: this.ComponentCount == 3
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,DeduceJpegColorSpace,The following statement contains a magic number: this.ComponentCount == 4
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessApplicationHeaderMarker,The following statement contains a magic number: remaining < 5
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessApp1Marker,The following statement contains a magic number: remaining < 6 || this.IgnoreMetadata
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessApp2Marker,The following statement contains a magic number: const int Icclength = 14;
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineQuantizationTablesMarker,The following statement contains a magic number: switch (quantizationTableSpec >> 4)                  {                      case 0:                          {                              // 8 bit values                              if (remaining < 64)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 64);                              remaining -= 64;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = this.temp[j];                              }                          }                            break;                      case 1:                          {                              // 16 bit values                              if (remaining < 128)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 128);                              remaining -= 128;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = (this.temp[2 * j] << 8) | this.temp[(2 * j) + 1];                              }                          }                            break;                      default:                          throw new ImageFormatException("Bad Tq index value");                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineQuantizationTablesMarker,The following statement contains a magic number: switch (quantizationTableSpec >> 4)                  {                      case 0:                          {                              // 8 bit values                              if (remaining < 64)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 64);                              remaining -= 64;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = this.temp[j];                              }                          }                            break;                      case 1:                          {                              // 16 bit values                              if (remaining < 128)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 128);                              remaining -= 128;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = (this.temp[2 * j] << 8) | this.temp[(2 * j) + 1];                              }                          }                            break;                      default:                          throw new ImageFormatException("Bad Tq index value");                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineQuantizationTablesMarker,The following statement contains a magic number: switch (quantizationTableSpec >> 4)                  {                      case 0:                          {                              // 8 bit values                              if (remaining < 64)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 64);                              remaining -= 64;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = this.temp[j];                              }                          }                            break;                      case 1:                          {                              // 16 bit values                              if (remaining < 128)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 128);                              remaining -= 128;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = (this.temp[2 * j] << 8) | this.temp[(2 * j) + 1];                              }                          }                            break;                      default:                          throw new ImageFormatException("Bad Tq index value");                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineQuantizationTablesMarker,The following statement contains a magic number: switch (quantizationTableSpec >> 4)                  {                      case 0:                          {                              // 8 bit values                              if (remaining < 64)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 64);                              remaining -= 64;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = this.temp[j];                              }                          }                            break;                      case 1:                          {                              // 16 bit values                              if (remaining < 128)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 128);                              remaining -= 128;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = (this.temp[2 * j] << 8) | this.temp[(2 * j) + 1];                              }                          }                            break;                      default:                          throw new ImageFormatException("Bad Tq index value");                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineQuantizationTablesMarker,The following statement contains a magic number: switch (quantizationTableSpec >> 4)                  {                      case 0:                          {                              // 8 bit values                              if (remaining < 64)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 64);                              remaining -= 64;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = this.temp[j];                              }                          }                            break;                      case 1:                          {                              // 16 bit values                              if (remaining < 128)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 128);                              remaining -= 128;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = (this.temp[2 * j] << 8) | this.temp[(2 * j) + 1];                              }                          }                            break;                      default:                          throw new ImageFormatException("Bad Tq index value");                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineQuantizationTablesMarker,The following statement contains a magic number: switch (quantizationTableSpec >> 4)                  {                      case 0:                          {                              // 8 bit values                              if (remaining < 64)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 64);                              remaining -= 64;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = this.temp[j];                              }                          }                            break;                      case 1:                          {                              // 16 bit values                              if (remaining < 128)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 128);                              remaining -= 128;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = (this.temp[2 * j] << 8) | this.temp[(2 * j) + 1];                              }                          }                            break;                      default:                          throw new ImageFormatException("Bad Tq index value");                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineQuantizationTablesMarker,The following statement contains a magic number: switch (quantizationTableSpec >> 4)                  {                      case 0:                          {                              // 8 bit values                              if (remaining < 64)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 64);                              remaining -= 64;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = this.temp[j];                              }                          }                            break;                      case 1:                          {                              // 16 bit values                              if (remaining < 128)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 128);                              remaining -= 128;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = (this.temp[2 * j] << 8) | this.temp[(2 * j) + 1];                              }                          }                            break;                      default:                          throw new ImageFormatException("Bad Tq index value");                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineQuantizationTablesMarker,The following statement contains a magic number: switch (quantizationTableSpec >> 4)                  {                      case 0:                          {                              // 8 bit values                              if (remaining < 64)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 64);                              remaining -= 64;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = this.temp[j];                              }                          }                            break;                      case 1:                          {                              // 16 bit values                              if (remaining < 128)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 128);                              remaining -= 128;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = (this.temp[2 * j] << 8) | this.temp[(2 * j) + 1];                              }                          }                            break;                      default:                          throw new ImageFormatException("Bad Tq index value");                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineQuantizationTablesMarker,The following statement contains a magic number: switch (quantizationTableSpec >> 4)                  {                      case 0:                          {                              // 8 bit values                              if (remaining < 64)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 64);                              remaining -= 64;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = this.temp[j];                              }                          }                            break;                      case 1:                          {                              // 16 bit values                              if (remaining < 128)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 128);                              remaining -= 128;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = (this.temp[2 * j] << 8) | this.temp[(2 * j) + 1];                              }                          }                            break;                      default:                          throw new ImageFormatException("Bad Tq index value");                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineQuantizationTablesMarker,The following statement contains a magic number: switch (quantizationTableSpec >> 4)                  {                      case 0:                          {                              // 8 bit values                              if (remaining < 64)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 64);                              remaining -= 64;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = this.temp[j];                              }                          }                            break;                      case 1:                          {                              // 16 bit values                              if (remaining < 128)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 128);                              remaining -= 128;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = (this.temp[2 * j] << 8) | this.temp[(2 * j) + 1];                              }                          }                            break;                      default:                          throw new ImageFormatException("Bad Tq index value");                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineQuantizationTablesMarker,The following statement contains a magic number: switch (quantizationTableSpec >> 4)                  {                      case 0:                          {                              // 8 bit values                              if (remaining < 64)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 64);                              remaining -= 64;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = this.temp[j];                              }                          }                            break;                      case 1:                          {                              // 16 bit values                              if (remaining < 128)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 128);                              remaining -= 128;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = (this.temp[2 * j] << 8) | this.temp[(2 * j) + 1];                              }                          }                            break;                      default:                          throw new ImageFormatException("Bad Tq index value");                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineQuantizationTablesMarker,The following statement contains a magic number: switch (quantizationTableSpec >> 4)                  {                      case 0:                          {                              // 8 bit values                              if (remaining < 64)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 64);                              remaining -= 64;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = this.temp[j];                              }                          }                            break;                      case 1:                          {                              // 16 bit values                              if (remaining < 128)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 128);                              remaining -= 128;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = (this.temp[2 * j] << 8) | this.temp[(2 * j) + 1];                              }                          }                            break;                      default:                          throw new ImageFormatException("Bad Tq index value");                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineQuantizationTablesMarker,The following statement contains a magic number: switch (quantizationTableSpec >> 4)                  {                      case 0:                          {                              // 8 bit values                              if (remaining < 64)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 64);                              remaining -= 64;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = this.temp[j];                              }                          }                            break;                      case 1:                          {                              // 16 bit values                              if (remaining < 128)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 128);                              remaining -= 128;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = (this.temp[2 * j] << 8) | this.temp[(2 * j) + 1];                              }                          }                            break;                      default:                          throw new ImageFormatException("Bad Tq index value");                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineQuantizationTablesMarker,The following statement contains a magic number: switch (quantizationTableSpec >> 4)                  {                      case 0:                          {                              // 8 bit values                              if (remaining < 64)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 64);                              remaining -= 64;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = this.temp[j];                              }                          }                            break;                      case 1:                          {                              // 16 bit values                              if (remaining < 128)                              {                                  done = true;                                  break;                              }                                this.InputStream.Read(this.temp' 0' 128);                              remaining -= 128;                                ref Block8x8F table = ref this.QuantizationTables[quantizationTableSpec & 15];                              for (int j = 0; j < 64; j++)                              {                                  table[j] = (this.temp[2 * j] << 8) | this.temp[(2 * j) + 1];                              }                          }                            break;                      default:                          throw new ImageFormatException("Bad Tq index value");                  }
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessStartOfFrameMarker,The following statement contains a magic number: this.Frame = new PdfJsFrame              {                  Extended = frameMarker.Marker == JpegConstants.Markers.SOF1'                  Progressive = frameMarker.Marker == JpegConstants.Markers.SOF2'                  Precision = this.temp[0]'                  Scanlines = (short)((this.temp[1] << 8) | this.temp[2])'                  SamplesPerLine = (short)((this.temp[3] << 8) | this.temp[4])'                  ComponentCount = this.temp[5]              };
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessStartOfFrameMarker,The following statement contains a magic number: this.Frame = new PdfJsFrame              {                  Extended = frameMarker.Marker == JpegConstants.Markers.SOF1'                  Progressive = frameMarker.Marker == JpegConstants.Markers.SOF2'                  Precision = this.temp[0]'                  Scanlines = (short)((this.temp[1] << 8) | this.temp[2])'                  SamplesPerLine = (short)((this.temp[3] << 8) | this.temp[4])'                  ComponentCount = this.temp[5]              };
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessStartOfFrameMarker,The following statement contains a magic number: this.Frame = new PdfJsFrame              {                  Extended = frameMarker.Marker == JpegConstants.Markers.SOF1'                  Progressive = frameMarker.Marker == JpegConstants.Markers.SOF2'                  Precision = this.temp[0]'                  Scanlines = (short)((this.temp[1] << 8) | this.temp[2])'                  SamplesPerLine = (short)((this.temp[3] << 8) | this.temp[4])'                  ComponentCount = this.temp[5]              };
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessStartOfFrameMarker,The following statement contains a magic number: this.Frame = new PdfJsFrame              {                  Extended = frameMarker.Marker == JpegConstants.Markers.SOF1'                  Progressive = frameMarker.Marker == JpegConstants.Markers.SOF2'                  Precision = this.temp[0]'                  Scanlines = (short)((this.temp[1] << 8) | this.temp[2])'                  SamplesPerLine = (short)((this.temp[3] << 8) | this.temp[4])'                  ComponentCount = this.temp[5]              };
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessStartOfFrameMarker,The following statement contains a magic number: this.Frame = new PdfJsFrame              {                  Extended = frameMarker.Marker == JpegConstants.Markers.SOF1'                  Progressive = frameMarker.Marker == JpegConstants.Markers.SOF2'                  Precision = this.temp[0]'                  Scanlines = (short)((this.temp[1] << 8) | this.temp[2])'                  SamplesPerLine = (short)((this.temp[3] << 8) | this.temp[4])'                  ComponentCount = this.temp[5]              };
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessStartOfFrameMarker,The following statement contains a magic number: this.Frame = new PdfJsFrame              {                  Extended = frameMarker.Marker == JpegConstants.Markers.SOF1'                  Progressive = frameMarker.Marker == JpegConstants.Markers.SOF2'                  Precision = this.temp[0]'                  Scanlines = (short)((this.temp[1] << 8) | this.temp[2])'                  SamplesPerLine = (short)((this.temp[3] << 8) | this.temp[4])'                  ComponentCount = this.temp[5]              };
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessStartOfFrameMarker,The following statement contains a magic number: int index = 6;
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessStartOfFrameMarker,The following statement contains a magic number: int h = hv >> 4;
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessStartOfFrameMarker,The following statement contains a magic number: int v = hv & 15;
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessStartOfFrameMarker,The following statement contains a magic number: var component = new PdfJsFrameComponent(this.configuration.MemoryManager' this.Frame' this.temp[index]' h' v' this.temp[index + 2]' i);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessStartOfFrameMarker,The following statement contains a magic number: index += 3;
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineHuffmanTablesMarker,The following statement contains a magic number: remaining < 17
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineHuffmanTablesMarker,The following statement contains a magic number: this.InputStream.Read(huffmanData.Array' 0' 16);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineHuffmanTablesMarker,The following statement contains a magic number: j < 17
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineHuffmanTablesMarker,The following statement contains a magic number: i += 17 + codeLengthSum;
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineHuffmanTablesMarker,The following statement contains a magic number: this.BuildHuffmanTable(                                  huffmanTableSpec >> 4 == 0 ? this.dcHuffmanTables : this.acHuffmanTables'                                  huffmanTableSpec & 15'                                  codeLengths.Span'                                  huffmanValues.Span);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineHuffmanTablesMarker,The following statement contains a magic number: this.BuildHuffmanTable(                                  huffmanTableSpec >> 4 == 0 ? this.dcHuffmanTables : this.acHuffmanTables'                                  huffmanTableSpec & 15'                                  codeLengths.Span'                                  huffmanValues.Span);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessDefineRestartIntervalMarker,The following statement contains a magic number: remaining != 2
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessStartOfScanMarker,The following statement contains a magic number: component.DCHuffmanTableId = tableSpec >> 4;
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessStartOfScanMarker,The following statement contains a magic number: component.ACHuffmanTableId = tableSpec & 15;
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessStartOfScanMarker,The following statement contains a magic number: this.InputStream.Read(this.temp' 0' 3);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessStartOfScanMarker,The following statement contains a magic number: int successiveApproximation = this.temp[2];
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessStartOfScanMarker,The following statement contains a magic number: scanDecoder.DecodeScan(                   this.Frame'                   this.InputStream'                   this.dcHuffmanTables'                   this.acHuffmanTables'                   this.Frame.Components'                   componentIndex'                   selectorsCount'                   this.resetInterval'                   spectralStart'                   spectralEnd'                   successiveApproximation >> 4'                   successiveApproximation & 15);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ProcessStartOfScanMarker,The following statement contains a magic number: scanDecoder.DecodeScan(                   this.Frame'                   this.InputStream'                   this.dcHuffmanTables'                   this.acHuffmanTables'                   this.Frame.Components'                   componentIndex'                   selectorsCount'                   this.resetInterval'                   spectralStart'                   spectralEnd'                   successiveApproximation >> 4'                   successiveApproximation & 15);
Magic Number,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ReadUint16,The following statement contains a magic number: this.InputStream.Read(this.markerBuffer' 0' 2);
Magic Number,Geb.Image.Formats.MetaData,ImageProperty,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\ImageProperty.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.Value.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,ReadValues,The following statement contains a magic number: this.startIndex = 6;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,ReadValues,The following statement contains a magic number: this.ReadString(4) == "Exif"
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,ReadValues,The following statement contains a magic number: this.ReadString(2) == "II"
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,TryReadValue,The following statement contains a magic number: this.RemainingLength < 12
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,TryReadValue,The following statement contains a magic number: type == 0 || type > 12
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,TryReadValue,The following statement contains a magic number: numberOfComponents = 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,TryReadValue,The following statement contains a magic number: this.TryReadSpan(4' out ReadOnlySpan<byte> offsetBuffer);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,TryReadValue,The following statement contains a magic number: size > 4
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,ReadUInt32,The following statement contains a magic number: return this.TryReadSpan(4' out ReadOnlySpan<byte> span)                  ? this.ConvertToUInt32(span)                  : default;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,ReadUInt16,The following statement contains a magic number: return this.TryReadSpan(2' out ReadOnlySpan<byte> span)                  ? this.ConvertToShort(span)                  : default;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,ConvertToDouble,The following statement contains a magic number: buffer.Length < 8
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,ConvertToUInt32,The following statement contains a magic number: buffer.Length < 4
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,ConvertToShort,The following statement contains a magic number: buffer.Length < 2
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,ConvertToSingle,The following statement contains a magic number: buffer.Length < 4
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,ToRational,The following statement contains a magic number: buffer.Length < 8
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,ToRational,The following statement contains a magic number: uint numerator = this.ConvertToUInt32(buffer.Slice(0' 4));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,ToRational,The following statement contains a magic number: uint denominator = this.ConvertToUInt32(buffer.Slice(4' 4));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,ToRational,The following statement contains a magic number: uint denominator = this.ConvertToUInt32(buffer.Slice(4' 4));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,ConvertToInt32,The following statement contains a magic number: buffer.Length < 4
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,ToSignedRational,The following statement contains a magic number: buffer.Length < 8
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,ToSignedRational,The following statement contains a magic number: int numerator = this.ConvertToInt32(buffer.Slice(0' 4));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,ToSignedRational,The following statement contains a magic number: int denominator = this.ConvertToInt32(buffer.Slice(4' 4));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,ToSignedRational,The following statement contains a magic number: int denominator = this.ConvertToInt32(buffer.Slice(4' 4));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifReader.cs,ConvertToSignedShort,The following statement contains a magic number: buffer.Length < 2
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifValue,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifValue.cs,GetSize,The following statement contains a magic number: switch (dataType)              {                  case ExifDataType.Ascii:                  case ExifDataType.Byte:                  case ExifDataType.SignedByte:                  case ExifDataType.Undefined:                      return 1;                  case ExifDataType.Short:                  case ExifDataType.SignedShort:                      return 2;                  case ExifDataType.Long:                  case ExifDataType.SignedLong:                  case ExifDataType.SingleFloat:                      return 4;                  case ExifDataType.DoubleFloat:                  case ExifDataType.Rational:                  case ExifDataType.SignedRational:                      return 8;                  default:                      throw new NotSupportedException(dataType.ToString());              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifValue,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifValue.cs,GetSize,The following statement contains a magic number: switch (dataType)              {                  case ExifDataType.Ascii:                  case ExifDataType.Byte:                  case ExifDataType.SignedByte:                  case ExifDataType.Undefined:                      return 1;                  case ExifDataType.Short:                  case ExifDataType.SignedShort:                      return 2;                  case ExifDataType.Long:                  case ExifDataType.SignedLong:                  case ExifDataType.SingleFloat:                      return 4;                  case ExifDataType.DoubleFloat:                  case ExifDataType.Rational:                  case ExifDataType.SignedRational:                      return 8;                  default:                      throw new NotSupportedException(dataType.ToString());              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifValue,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifValue.cs,GetSize,The following statement contains a magic number: switch (dataType)              {                  case ExifDataType.Ascii:                  case ExifDataType.Byte:                  case ExifDataType.SignedByte:                  case ExifDataType.Undefined:                      return 1;                  case ExifDataType.Short:                  case ExifDataType.SignedShort:                      return 2;                  case ExifDataType.Long:                  case ExifDataType.SignedLong:                  case ExifDataType.SingleFloat:                      return 4;                  case ExifDataType.DoubleFloat:                  case ExifDataType.Rational:                  case ExifDataType.SignedRational:                      return 8;                  default:                      throw new NotSupportedException(dataType.ToString());              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetData,The following statement contains a magic number: uint ifdLength = 2 + this.GetLength(this.ifdIndexes) + 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetData,The following statement contains a magic number: uint ifdLength = 2 + this.GetLength(this.ifdIndexes) + 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetData,The following statement contains a magic number: exifLength += 2;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetData,The following statement contains a magic number: gpsLength += 2;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetData,The following statement contains a magic number: length == 6
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetData,The following statement contains a magic number: length += 10 + 4 + 2;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetData,The following statement contains a magic number: length += 10 + 4 + 2;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetData,The following statement contains a magic number: length += 10 + 4 + 2;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetData,The following statement contains a magic number: result[2] = (byte)'i';
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetData,The following statement contains a magic number: result[3] = (byte)'f';
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetData,The following statement contains a magic number: result[4] = 0x00;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetData,The following statement contains a magic number: result[5] = 0x00;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetData,The following statement contains a magic number: result[6] = (byte)'I';
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetData,The following statement contains a magic number: result[7] = (byte)'I';
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetData,The following statement contains a magic number: result[8] = 0x2A;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetData,The following statement contains a magic number: result[9] = 0x00;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetData,The following statement contains a magic number: int i = 10;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetData,The following statement contains a magic number: uint ifdOffset = ((uint)i - StartIndex) + 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteSingle,The following statement contains a magic number: BinaryPrimitives.WriteInt32LittleEndian(destination.Slice(offset' 4)' *((int*)&value));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteSingle,The following statement contains a magic number: return offset + 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteDouble,The following statement contains a magic number: BinaryPrimitives.WriteInt64LittleEndian(destination.Slice(offset' 8)' *((long*)&value));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteDouble,The following statement contains a magic number: return offset + 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteInt16,The following statement contains a magic number: BinaryPrimitives.WriteInt16LittleEndian(destination.Slice(offset' 2)' value);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteInt16,The following statement contains a magic number: return offset + 2;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteUInt16,The following statement contains a magic number: BinaryPrimitives.WriteUInt16LittleEndian(destination.Slice(offset' 2)' value);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteUInt16,The following statement contains a magic number: return offset + 2;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteUInt32,The following statement contains a magic number: BinaryPrimitives.WriteUInt32LittleEndian(destination.Slice(offset' 4)' value);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteUInt32,The following statement contains a magic number: return offset + 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteInt32,The following statement contains a magic number: BinaryPrimitives.WriteInt32LittleEndian(destination.Slice(offset' 4)' value);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteInt32,The following statement contains a magic number: return offset + 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetLength,The following statement contains a magic number: length += 12 + valueLength;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,GetLength,The following statement contains a magic number: valueLength > 4
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteData,The following statement contains a magic number: value.Length > 4
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteHeaders,The following statement contains a magic number: value.Length > 4
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteHeaders,The following statement contains a magic number: newOffset += 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteRational,The following statement contains a magic number: BinaryPrimitives.WriteUInt32LittleEndian(destination.Slice(0' 4)' value.Numerator);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteRational,The following statement contains a magic number: BinaryPrimitives.WriteUInt32LittleEndian(destination.Slice(4' 4)' value.Denominator);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteRational,The following statement contains a magic number: BinaryPrimitives.WriteUInt32LittleEndian(destination.Slice(4' 4)' value.Denominator);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteSignedRational,The following statement contains a magic number: BinaryPrimitives.WriteInt32LittleEndian(destination.Slice(0' 4)' value.Numerator);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteSignedRational,The following statement contains a magic number: BinaryPrimitives.WriteInt32LittleEndian(destination.Slice(4' 4)' value.Denominator);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteSignedRational,The following statement contains a magic number: BinaryPrimitives.WriteInt32LittleEndian(destination.Slice(4' 4)' value.Denominator);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteValue,The following statement contains a magic number: switch (dataType)              {                  case ExifDataType.Ascii:                      return Write(Encoding.UTF8.GetBytes((string)value)' destination' offset);                  case ExifDataType.Byte:                  case ExifDataType.Undefined:                      destination[offset] = (byte)value;                      return offset + 1;                  case ExifDataType.DoubleFloat:                      return WriteDouble((double)value' destination' offset);                  case ExifDataType.Short:                      return WriteUInt16((ushort)value' destination' offset);                  case ExifDataType.Long:                      return WriteUInt32((uint)value' destination' offset);                  case ExifDataType.Rational:                      WriteRational(destination.Slice(offset' 8)' (Rational)value);                      return offset + 8;                  case ExifDataType.SignedByte:                      destination[offset] = unchecked((byte)((sbyte)value));                      return offset + 1;                  case ExifDataType.SignedLong:                      return WriteInt32((int)value' destination' offset);                  case ExifDataType.SignedShort:                      return WriteInt16((short)value' destination' offset);                  case ExifDataType.SignedRational:                      WriteSignedRational(destination.Slice(offset' 8)' (SignedRational)value);                      return offset + 8;                  case ExifDataType.SingleFloat:                      return WriteSingle((float)value' destination' offset);                  default:                      throw new NotImplementedException();              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteValue,The following statement contains a magic number: switch (dataType)              {                  case ExifDataType.Ascii:                      return Write(Encoding.UTF8.GetBytes((string)value)' destination' offset);                  case ExifDataType.Byte:                  case ExifDataType.Undefined:                      destination[offset] = (byte)value;                      return offset + 1;                  case ExifDataType.DoubleFloat:                      return WriteDouble((double)value' destination' offset);                  case ExifDataType.Short:                      return WriteUInt16((ushort)value' destination' offset);                  case ExifDataType.Long:                      return WriteUInt32((uint)value' destination' offset);                  case ExifDataType.Rational:                      WriteRational(destination.Slice(offset' 8)' (Rational)value);                      return offset + 8;                  case ExifDataType.SignedByte:                      destination[offset] = unchecked((byte)((sbyte)value));                      return offset + 1;                  case ExifDataType.SignedLong:                      return WriteInt32((int)value' destination' offset);                  case ExifDataType.SignedShort:                      return WriteInt16((short)value' destination' offset);                  case ExifDataType.SignedRational:                      WriteSignedRational(destination.Slice(offset' 8)' (SignedRational)value);                      return offset + 8;                  case ExifDataType.SingleFloat:                      return WriteSingle((float)value' destination' offset);                  default:                      throw new NotImplementedException();              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteValue,The following statement contains a magic number: switch (dataType)              {                  case ExifDataType.Ascii:                      return Write(Encoding.UTF8.GetBytes((string)value)' destination' offset);                  case ExifDataType.Byte:                  case ExifDataType.Undefined:                      destination[offset] = (byte)value;                      return offset + 1;                  case ExifDataType.DoubleFloat:                      return WriteDouble((double)value' destination' offset);                  case ExifDataType.Short:                      return WriteUInt16((ushort)value' destination' offset);                  case ExifDataType.Long:                      return WriteUInt32((uint)value' destination' offset);                  case ExifDataType.Rational:                      WriteRational(destination.Slice(offset' 8)' (Rational)value);                      return offset + 8;                  case ExifDataType.SignedByte:                      destination[offset] = unchecked((byte)((sbyte)value));                      return offset + 1;                  case ExifDataType.SignedLong:                      return WriteInt32((int)value' destination' offset);                  case ExifDataType.SignedShort:                      return WriteInt16((short)value' destination' offset);                  case ExifDataType.SignedRational:                      WriteSignedRational(destination.Slice(offset' 8)' (SignedRational)value);                      return offset + 8;                  case ExifDataType.SingleFloat:                      return WriteSingle((float)value' destination' offset);                  default:                      throw new NotImplementedException();              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Exif,ExifWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\Exif\ExifWriter.cs,WriteValue,The following statement contains a magic number: switch (dataType)              {                  case ExifDataType.Ascii:                      return Write(Encoding.UTF8.GetBytes((string)value)' destination' offset);                  case ExifDataType.Byte:                  case ExifDataType.Undefined:                      destination[offset] = (byte)value;                      return offset + 1;                  case ExifDataType.DoubleFloat:                      return WriteDouble((double)value' destination' offset);                  case ExifDataType.Short:                      return WriteUInt16((ushort)value' destination' offset);                  case ExifDataType.Long:                      return WriteUInt32((uint)value' destination' offset);                  case ExifDataType.Rational:                      WriteRational(destination.Slice(offset' 8)' (Rational)value);                      return offset + 8;                  case ExifDataType.SignedByte:                      destination[offset] = unchecked((byte)((sbyte)value));                      return offset + 1;                  case ExifDataType.SignedLong:                      return WriteInt32((int)value' destination' offset);                  case ExifDataType.SignedShort:                      return WriteInt16((short)value' destination' offset);                  case ExifDataType.SignedRational:                      WriteSignedRational(destination.Slice(offset' 8)' (SignedRational)value);                      return offset + 8;                  case ExifDataType.SingleFloat:                      return WriteSingle((float)value' destination' offset);                  default:                      throw new NotImplementedException();              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccParametricCurve,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Curves\IccParametricCurve.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.G.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccParametricCurve,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Curves\IccParametricCurve.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.A.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccParametricCurve,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Curves\IccParametricCurve.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.B.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccParametricCurve,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Curves\IccParametricCurve.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.C.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccParametricCurve,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Curves\IccParametricCurve.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.D.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccParametricCurve,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Curves\IccParametricCurve.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.E.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccParametricCurve,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Curves\IccParametricCurve.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.F.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccResponseCurve,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Curves\IccResponseCurve.cs,IccResponseCurve,The following statement contains a magic number: Guard.MustBeBetweenOrEqualTo(xyzValues.Length' 1' 15' nameof(xyzValues));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccResponseCurve,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Curves\IccResponseCurve.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.XyzValues?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccResponseCurve,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Curves\IccResponseCurve.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.ResponseArrays?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,CalcPadding,The following statement contains a magic number: int p = 4 - (this.currentIndex % 4);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,CalcPadding,The following statement contains a magic number: int p = 4 - (this.currentIndex % 4);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,CalcPadding,The following statement contains a magic number: return p >= 4 ? 0 : p;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,GetBit,The following statement contains a magic number: return ((value >> (7 - position)) & 1) == 1;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,GetBit,The following statement contains a magic number: return ((value >> (15 - position)) & 1) == 1;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadOneDimensionalCurve,The following statement contains a magic number: this.AddIndex(2);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadParametricCurve,The following statement contains a magic number: this.AddIndex(2);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadParametricCurve,The following statement contains a magic number: type <= 4
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadParametricCurve,The following statement contains a magic number: type > 0 && type <= 4
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadParametricCurve,The following statement contains a magic number: type > 1 && type <= 4
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadParametricCurve,The following statement contains a magic number: type > 2 && type <= 4
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadParametricCurve,The following statement contains a magic number: type > 2 && type <= 4
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadParametricCurve,The following statement contains a magic number: type == 4
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadParametricCurve,The following statement contains a magic number: switch (type)              {                  case 0: return new IccParametricCurve(gamma);                  case 1: return new IccParametricCurve(gamma' a' b);                  case 2: return new IccParametricCurve(gamma' a' b' c);                  case 3: return new IccParametricCurve(gamma' a' b' c' d);                  case 4: return new IccParametricCurve(gamma' a' b' c' d' e' f);                  default: throw new InvalidIccProfileException($"Invalid parametric curve type of {type}");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadParametricCurve,The following statement contains a magic number: switch (type)              {                  case 0: return new IccParametricCurve(gamma);                  case 1: return new IccParametricCurve(gamma' a' b);                  case 2: return new IccParametricCurve(gamma' a' b' c);                  case 3: return new IccParametricCurve(gamma' a' b' c' d);                  case 4: return new IccParametricCurve(gamma' a' b' c' d' e' f);                  default: throw new InvalidIccProfileException($"Invalid parametric curve type of {type}");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadParametricCurve,The following statement contains a magic number: switch (type)              {                  case 0: return new IccParametricCurve(gamma);                  case 1: return new IccParametricCurve(gamma' a' b);                  case 2: return new IccParametricCurve(gamma' a' b' c);                  case 3: return new IccParametricCurve(gamma' a' b' c' d);                  case 4: return new IccParametricCurve(gamma' a' b' c' d' e' f);                  default: throw new InvalidIccProfileException($"Invalid parametric curve type of {type}");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadCurveSegment,The following statement contains a magic number: this.AddIndex(4);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadFormulaCurveElement,The following statement contains a magic number: this.AddIndex(2);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadLut8,The following statement contains a magic number: return new IccLut(this.ReadBytes(256));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadClut,The following statement contains a magic number: Buffer.BlockCopy(this.data' this.AddIndex(16)' gridPointCount' 0' inChannelCount);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadClut,The following statement contains a magic number: byte size = this.data[this.AddIndex(4)];
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadClut,The following statement contains a magic number: size == 2
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadClut16,The following statement contains a magic number: this.currentIndex = start + (length * outChannelCount * 2);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadClutF32,The following statement contains a magic number: this.currentIndex = start + (length * outChCount * 4);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadMultiProcessElement,The following statement contains a magic number: switch (signature)              {                  case IccMultiProcessElementSignature.CurveSet:                      return this.ReadCurveSetProcessElement(inChannelCount' outChannelCount);                  case IccMultiProcessElementSignature.Matrix:                      return this.ReadMatrixProcessElement(inChannelCount' outChannelCount);                  case IccMultiProcessElementSignature.Clut:                      return this.ReadClutProcessElement(inChannelCount' outChannelCount);                    // Currently just placeholders for future ICC expansion                  case IccMultiProcessElementSignature.BAcs:                      this.AddIndex(8);                      return new IccBAcsProcessElement(inChannelCount' outChannelCount);                  case IccMultiProcessElementSignature.EAcs:                      this.AddIndex(8);                      return new IccEAcsProcessElement(inChannelCount' outChannelCount);                    default:                      throw new InvalidIccProfileException($"Invalid MultiProcessElement type of {signature}");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadMultiProcessElement,The following statement contains a magic number: switch (signature)              {                  case IccMultiProcessElementSignature.CurveSet:                      return this.ReadCurveSetProcessElement(inChannelCount' outChannelCount);                  case IccMultiProcessElementSignature.Matrix:                      return this.ReadMatrixProcessElement(inChannelCount' outChannelCount);                  case IccMultiProcessElementSignature.Clut:                      return this.ReadClutProcessElement(inChannelCount' outChannelCount);                    // Currently just placeholders for future ICC expansion                  case IccMultiProcessElementSignature.BAcs:                      this.AddIndex(8);                      return new IccBAcsProcessElement(inChannelCount' outChannelCount);                  case IccMultiProcessElementSignature.EAcs:                      this.AddIndex(8);                      return new IccEAcsProcessElement(inChannelCount' outChannelCount);                    default:                      throw new InvalidIccProfileException($"Invalid MultiProcessElement type of {signature}");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadVersionNumber,The following statement contains a magic number: int major = (version >> 24) & 0xFF;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadVersionNumber,The following statement contains a magic number: int minor = (version >> 20) & 0x0F;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadVersionNumber,The following statement contains a magic number: int bugfix = (version >> 16) & 0x0F;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadNamedColor,The following statement contains a magic number: string name = this.ReadAsciiString(32);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadColorantTableEntry,The following statement contains a magic number: return new IccColorantTableEntry(                  name: this.ReadAsciiString(32)'                  pcs1: this.ReadUInt16()'                  pcs2: this.ReadUInt16()'                  pcs3: this.ReadUInt16());
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadUInt16,The following statement contains a magic number: return BinaryPrimitives.ReadUInt16BigEndian(this.data.AsSpan(this.AddIndex(2)' 2));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadUInt16,The following statement contains a magic number: return BinaryPrimitives.ReadUInt16BigEndian(this.data.AsSpan(this.AddIndex(2)' 2));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadInt16,The following statement contains a magic number: return BinaryPrimitives.ReadInt16BigEndian(this.data.AsSpan(this.AddIndex(2)' 2));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadInt16,The following statement contains a magic number: return BinaryPrimitives.ReadInt16BigEndian(this.data.AsSpan(this.AddIndex(2)' 2));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadUInt32,The following statement contains a magic number: return BinaryPrimitives.ReadUInt32BigEndian(this.data.AsSpan(this.AddIndex(4)' 4));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadUInt32,The following statement contains a magic number: return BinaryPrimitives.ReadUInt32BigEndian(this.data.AsSpan(this.AddIndex(4)' 4));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadInt32,The following statement contains a magic number: return BinaryPrimitives.ReadInt32BigEndian(this.data.AsSpan(this.AddIndex(4)' 4));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadInt32,The following statement contains a magic number: return BinaryPrimitives.ReadInt32BigEndian(this.data.AsSpan(this.AddIndex(4)' 4));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadUInt64,The following statement contains a magic number: return BinaryPrimitives.ReadUInt64BigEndian(this.data.AsSpan(this.AddIndex(8)' 8));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadUInt64,The following statement contains a magic number: return BinaryPrimitives.ReadUInt64BigEndian(this.data.AsSpan(this.AddIndex(8)' 8));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadInt64,The following statement contains a magic number: return BinaryPrimitives.ReadInt64BigEndian(this.data.AsSpan(this.AddIndex(8)' 8));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadInt64,The following statement contains a magic number: return BinaryPrimitives.ReadInt64BigEndian(this.data.AsSpan(this.AddIndex(8)' 8));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadUFix8,The following statement contains a magic number: return this.ReadUInt16() / 256f;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadTagDataEntryHeader,The following statement contains a magic number: this.AddIndex(4);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadUnknownTagDataEntry,The following statement contains a magic number: int count = (int)size - 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadCurveTagDataEntry,The following statement contains a magic number: cdata[i] = this.ReadUInt16() / 65535f;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadDataTagDataEntry,The following statement contains a magic number: this.AddIndex(3);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadDataTagDataEntry,The following statement contains a magic number: bool ascii = this.GetBit(b' 7);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadDataTagDataEntry,The following statement contains a magic number: int length = (int)size - 12;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadLut16TagDataEntry,The following statement contains a magic number: float['] matrix = this.ReadMatrix(3' 3' false);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadLut16TagDataEntry,The following statement contains a magic number: float['] matrix = this.ReadMatrix(3' 3' false);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadLut8TagDataEntry,The following statement contains a magic number: float['] matrix = this.ReadMatrix(3' 3' false);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadLut8TagDataEntry,The following statement contains a magic number: float['] matrix = this.ReadMatrix(3' 3' false);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadLutAtoBTagDataEntry,The following statement contains a magic number: int start = this.currentIndex - 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadLutAtoBTagDataEntry,The following statement contains a magic number: this.AddIndex(2);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadLutAtoBTagDataEntry,The following statement contains a magic number: matrix3x3 = this.ReadMatrix(3' 3' false);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadLutAtoBTagDataEntry,The following statement contains a magic number: matrix3x3 = this.ReadMatrix(3' 3' false);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadLutAtoBTagDataEntry,The following statement contains a magic number: matrix3x1 = this.ReadMatrix(3' false);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadLutBtoATagDataEntry,The following statement contains a magic number: int start = this.currentIndex - 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadLutBtoATagDataEntry,The following statement contains a magic number: this.AddIndex(2);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadLutBtoATagDataEntry,The following statement contains a magic number: matrix3x3 = this.ReadMatrix(3' 3' false);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadLutBtoATagDataEntry,The following statement contains a magic number: matrix3x3 = this.ReadMatrix(3' 3' false);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadLutBtoATagDataEntry,The following statement contains a magic number: matrix3x1 = this.ReadMatrix(3' false);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadMultiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: int start = this.currentIndex - 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadMultiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: string languageCode = this.ReadAsciiString(2);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadMultiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: string countryCode = this.ReadAsciiString(2);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadMultiProcessElementsTagDataEntry,The following statement contains a magic number: int start = this.currentIndex - 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadNamedColor2TagDataEntry,The following statement contains a magic number: string prefix = this.ReadAsciiString(32);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadNamedColor2TagDataEntry,The following statement contains a magic number: string suffix = this.ReadAsciiString(32);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadProfileSequenceIdentifierTagDataEntry,The following statement contains a magic number: int start = this.currentIndex - 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadResponseCurveSet16TagDataEntry,The following statement contains a magic number: int start = this.currentIndex - 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadFix16ArrayTagDataEntry,The following statement contains a magic number: uint count = (size - 8) / 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadFix16ArrayTagDataEntry,The following statement contains a magic number: uint count = (size - 8) / 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadFix16ArrayTagDataEntry,The following statement contains a magic number: arrayData[i] = this.ReadFix16() / 256f;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadSignatureTagDataEntry,The following statement contains a magic number: return new IccSignatureTagDataEntry(this.ReadAsciiString(4));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadTextTagDataEntry,The following statement contains a magic number: return new IccTextTagDataEntry(this.ReadAsciiString((int)size - 8));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadUFix16ArrayTagDataEntry,The following statement contains a magic number: uint count = (size - 8) / 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadUFix16ArrayTagDataEntry,The following statement contains a magic number: uint count = (size - 8) / 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadUInt16ArrayTagDataEntry,The following statement contains a magic number: uint count = (size - 8) / 2;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadUInt16ArrayTagDataEntry,The following statement contains a magic number: uint count = (size - 8) / 2;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadUInt32ArrayTagDataEntry,The following statement contains a magic number: uint count = (size - 8) / 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadUInt32ArrayTagDataEntry,The following statement contains a magic number: uint count = (size - 8) / 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadUInt64ArrayTagDataEntry,The following statement contains a magic number: uint count = (size - 8) / 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadUInt64ArrayTagDataEntry,The following statement contains a magic number: uint count = (size - 8) / 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadUInt8ArrayTagDataEntry,The following statement contains a magic number: int count = (int)size - 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadXyzTagDataEntry,The following statement contains a magic number: uint count = (size - 8) / 12;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadXyzTagDataEntry,The following statement contains a magic number: uint count = (size - 8) / 12;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadTextDescriptionTagDataEntry,The following statement contains a magic number: unicodeValue = this.ReadUnicodeString((unicodeCount * 2) - 2);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadTextDescriptionTagDataEntry,The following statement contains a magic number: unicodeValue = this.ReadUnicodeString((unicodeCount * 2) - 2);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadTextDescriptionTagDataEntry,The following statement contains a magic number: this.AddIndex(2);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadTextDescriptionTagDataEntry,The following statement contains a magic number: int scriptcodeCount = Math.Min(this.data[this.AddIndex(1)]' (byte)67);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadUcrBgTagDataEntry,The following statement contains a magic number: uint dataSize = ((ucrCount + bgCount) * 2) + 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadUcrBgTagDataEntry,The following statement contains a magic number: uint dataSize = ((ucrCount + bgCount) * 2) + 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataReader\IccDataReader.cs,ReadUcrBgTagDataEntry,The following statement contains a magic number: int descriptionLength = (int)(size - 8 - dataSize);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteArray,The following statement contains a magic number: return data.Length * 2;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteArray,The following statement contains a magic number: return data.Length * 2;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteArray,The following statement contains a magic number: return data.Length * 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteArray,The following statement contains a magic number: return data.Length * 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteArray,The following statement contains a magic number: return data.Length * 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WritePadding,The following statement contains a magic number: int p = 4 - ((int)this.dataStream.Position % 4);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WritePadding,The following statement contains a magic number: int p = 4 - ((int)this.dataStream.Position % 4);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WritePadding,The following statement contains a magic number: return this.WriteEmpty(p >= 4 ? 0 : p);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteOneDimensionalCurve,The following statement contains a magic number: count += this.WriteEmpty(2);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteParametricCurve,The following statement contains a magic number: count += this.WriteEmpty(2);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteParametricCurve,The following statement contains a magic number: typeValue <= 4
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteParametricCurve,The following statement contains a magic number: typeValue > 0 && typeValue <= 4
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteParametricCurve,The following statement contains a magic number: typeValue > 1 && typeValue <= 4
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteParametricCurve,The following statement contains a magic number: typeValue > 2 && typeValue <= 4
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteParametricCurve,The following statement contains a magic number: typeValue > 2 && typeValue <= 4
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteParametricCurve,The following statement contains a magic number: typeValue == 4
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteCurveSegment,The following statement contains a magic number: count += this.WriteEmpty(4);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteFormulaCurveElement,The following statement contains a magic number: count += this.WriteEmpty(2);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteLut8,The following statement contains a magic number: this.WriteByte((byte)((item * byte.MaxValue) + 0.5f).Clamp(0' byte.MaxValue));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteLut16,The following statement contains a magic number: this.WriteUInt16((ushort)((item * ushort.MaxValue) + 0.5f).Clamp(0' ushort.MaxValue));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteLut16,The following statement contains a magic number: return value.Values.Length * 2;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteClut,The following statement contains a magic number: count += this.WriteEmpty(16 - value.GridPointCount.Length);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteClut,The following statement contains a magic number: switch (value.DataType)              {                  case IccClutDataType.Float:                      return count + this.WriteClutF32(value);                  case IccClutDataType.UInt8:                      count += this.WriteByte(1);                      count += this.WriteEmpty(3);                      return count + this.WriteClut8(value);                  case IccClutDataType.UInt16:                      count += this.WriteByte(2);                      count += this.WriteEmpty(3);                      return count + this.WriteClut16(value);                    default:                      throw new InvalidIccProfileException($"Invalid CLUT data type of {value.DataType}");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteClut,The following statement contains a magic number: switch (value.DataType)              {                  case IccClutDataType.Float:                      return count + this.WriteClutF32(value);                  case IccClutDataType.UInt8:                      count += this.WriteByte(1);                      count += this.WriteEmpty(3);                      return count + this.WriteClut8(value);                  case IccClutDataType.UInt16:                      count += this.WriteByte(2);                      count += this.WriteEmpty(3);                      return count + this.WriteClut16(value);                    default:                      throw new InvalidIccProfileException($"Invalid CLUT data type of {value.DataType}");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteClut,The following statement contains a magic number: switch (value.DataType)              {                  case IccClutDataType.Float:                      return count + this.WriteClutF32(value);                  case IccClutDataType.UInt8:                      count += this.WriteByte(1);                      count += this.WriteEmpty(3);                      return count + this.WriteClut8(value);                  case IccClutDataType.UInt16:                      count += this.WriteByte(2);                      count += this.WriteEmpty(3);                      return count + this.WriteClut16(value);                    default:                      throw new InvalidIccProfileException($"Invalid CLUT data type of {value.DataType}");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteClut8,The following statement contains a magic number: count += this.WriteByte((byte)((item * byte.MaxValue) + 0.5f).Clamp(0' byte.MaxValue));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteClut16,The following statement contains a magic number: count += this.WriteUInt16((ushort)((item * ushort.MaxValue) + 0.5f).Clamp(0' ushort.MaxValue));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteMultiProcessElement,The following statement contains a magic number: switch (value.Signature)              {                  case IccMultiProcessElementSignature.CurveSet:                      return count + this.WriteCurveSetProcessElement(value as IccCurveSetProcessElement);                  case IccMultiProcessElementSignature.Matrix:                      return count + this.WriteMatrixProcessElement(value as IccMatrixProcessElement);                  case IccMultiProcessElementSignature.Clut:                      return count + this.WriteClutProcessElement(value as IccClutProcessElement);                    case IccMultiProcessElementSignature.BAcs:                  case IccMultiProcessElementSignature.EAcs:                      return count + this.WriteEmpty(8);                    default:                      throw new InvalidIccProfileException($"Invalid MultiProcessElement type of {value.Signature}");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteVersionNumber,The following statement contains a magic number: int minor = value.Minor.Clamp(0' 15);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteVersionNumber,The following statement contains a magic number: int bugfix = value.Build.Clamp(0' 15);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteVersionNumber,The following statement contains a magic number: byte mb = (byte)((minor << 4) | bugfix);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteVersionNumber,The following statement contains a magic number: int version = (major << 24) | (minor << 20) | (bugfix << 16);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteVersionNumber,The following statement contains a magic number: int version = (major << 24) | (minor << 20) | (bugfix << 16);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteVersionNumber,The following statement contains a magic number: int version = (major << 24) | (minor << 20) | (bugfix << 16);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteNamedColor,The following statement contains a magic number: return this.WriteAsciiString(value.Name' 32' true)                   + this.WriteArray(value.PcsCoordinates)                   + this.WriteArray(value.DeviceCoordinates);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteUInt16,The following statement contains a magic number: return this.WriteBytes((byte*)&value' 2);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteInt16,The following statement contains a magic number: return this.WriteBytes((byte*)&value' 2);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteUInt32,The following statement contains a magic number: return this.WriteBytes((byte*)&value' 4);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteInt32,The following statement contains a magic number: return this.WriteBytes((byte*)&value' 4);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteUInt64,The following statement contains a magic number: return this.WriteBytes((byte*)&value' 8);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteInt64,The following statement contains a magic number: return this.WriteBytes((byte*)&value' 8);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteSingle,The following statement contains a magic number: return this.WriteBytes((byte*)&value' 4);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteDouble,The following statement contains a magic number: return this.WriteBytes((byte*)&value' 8);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteFix16,The following statement contains a magic number: const double Max = short.MaxValue + (65535d / 65536d);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteFix16,The following statement contains a magic number: const double Max = short.MaxValue + (65535d / 65536d);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteFix16,The following statement contains a magic number: value *= 65536d;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteUFix16,The following statement contains a magic number: const double Max = ushort.MaxValue + (65535d / 65536d);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteUFix16,The following statement contains a magic number: const double Max = ushort.MaxValue + (65535d / 65536d);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteUFix16,The following statement contains a magic number: value *= 65536d;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteU1Fix15,The following statement contains a magic number: const double Max = 1 + (32767d / 32768d);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteU1Fix15,The following statement contains a magic number: const double Max = 1 + (32767d / 32768d);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteU1Fix15,The following statement contains a magic number: value *= 32768d;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteUFix8,The following statement contains a magic number: const double Max = byte.MaxValue + (255d / 256d);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteUFix8,The following statement contains a magic number: const double Max = byte.MaxValue + (255d / 256d);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteUFix8,The following statement contains a magic number: value *= 256d;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteTagDataEntryHeader,The following statement contains a magic number: return this.WriteUInt32((uint)signature)                   + this.WriteEmpty(4);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteColorantTableTagDataEntry,The following statement contains a magic number: count += this.WriteAsciiString(colorant.Name' 32' true);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteDataTagDataEntry,The following statement contains a magic number: return this.WriteEmpty(3)                   + this.WriteByte((byte)(value.IsAscii ? 0x01 : 0x00))                   + this.WriteArray(value.Data);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteLutAtoBTagDataEntry,The following statement contains a magic number: long start = this.dataStream.Position - 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteLutAtoBTagDataEntry,The following statement contains a magic number: count += this.WriteEmpty(2);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteLutAtoBTagDataEntry,The following statement contains a magic number: this.dataStream.Position += 5 * 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteLutAtoBTagDataEntry,The following statement contains a magic number: this.dataStream.Position += 5 * 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteLutBtoATagDataEntry,The following statement contains a magic number: long start = this.dataStream.Position - 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteLutBtoATagDataEntry,The following statement contains a magic number: count += this.WriteEmpty(2);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteLutBtoATagDataEntry,The following statement contains a magic number: this.dataStream.Position += 5 * 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteLutBtoATagDataEntry,The following statement contains a magic number: this.dataStream.Position += 5 * 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteMultiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: long start = this.dataStream.Position - 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteMultiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: count += this.WriteUInt32(12);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteMultiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: this.dataStream.Position += cultureCount * 12;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteMultiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: count += this.WriteAsciiString("xx"' 2' false);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteMultiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: count += this.WriteAsciiString("\0\0"' 2' false);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteMultiProcessElementsTagDataEntry,The following statement contains a magic number: long start = this.dataStream.Position - 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteMultiProcessElementsTagDataEntry,The following statement contains a magic number: this.dataStream.Position += value.Data.Length * 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteNamedColor2TagDataEntry,The following statement contains a magic number: int count = this.WriteInt32(value.VendorFlags)                        + this.WriteUInt32((uint)value.Colors.Length)                        + this.WriteUInt32((uint)value.CoordinateCount)                        + this.WriteAsciiString(value.Prefix' 32' true)                        + this.WriteAsciiString(value.Suffix' 32' true);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteNamedColor2TagDataEntry,The following statement contains a magic number: int count = this.WriteInt32(value.VendorFlags)                        + this.WriteUInt32((uint)value.Colors.Length)                        + this.WriteUInt32((uint)value.CoordinateCount)                        + this.WriteAsciiString(value.Prefix' 32' true)                        + this.WriteAsciiString(value.Suffix' 32' true);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteProfileSequenceIdentifierTagDataEntry,The following statement contains a magic number: long start = this.dataStream.Position - 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteProfileSequenceIdentifierTagDataEntry,The following statement contains a magic number: this.dataStream.Position += length * 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteResponseCurveSet16TagDataEntry,The following statement contains a magic number: long start = this.dataStream.Position - 8;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteResponseCurveSet16TagDataEntry,The following statement contains a magic number: this.dataStream.Position += value.Curves.Length * 4;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteFix16ArrayTagDataEntry,The following statement contains a magic number: count += this.WriteFix16(value.Data[i] * 256d);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteSignatureTagDataEntry,The following statement contains a magic number: return this.WriteAsciiString(value.SignatureData' 4' false);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\DataWriter\IccDataWriter.cs,WriteTextDescriptionTagDataEntry,The following statement contains a magic number: count += this.WriteEmpty(67);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfile,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccProfile.cs,CalculateHash,The following statement contains a magic number: Guard.IsTrue(data.Length >= 128' nameof(data)' "Data length must be at least 128 to be a valid profile header");
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfile,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccProfile.cs,CalculateHash,The following statement contains a magic number: byte[] header = new byte[128];
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfile,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccProfile.cs,CalculateHash,The following statement contains a magic number: Buffer.BlockCopy(data' 0' header' 0' 128);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfile,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccProfile.cs,CalculateHash,The following statement contains a magic number: Array.Clear(header' 44' 4);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfile,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccProfile.cs,CalculateHash,The following statement contains a magic number: Array.Clear(header' 44' 4);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfile,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccProfile.cs,CalculateHash,The following statement contains a magic number: Array.Clear(header' 64' 4);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfile,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccProfile.cs,CalculateHash,The following statement contains a magic number: Array.Clear(header' 64' 4);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfile,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccProfile.cs,CalculateHash,The following statement contains a magic number: Array.Clear(header' 84' 16);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfile,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccProfile.cs,CalculateHash,The following statement contains a magic number: Array.Clear(header' 84' 16);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccReader.cs,Read,The following statement contains a magic number: Guard.IsTrue(data.Length >= 128' nameof(data)' "Data length must be at least 128 to be a valid ICC profile");
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccReader.cs,ReadHeader,The following statement contains a magic number: Guard.IsTrue(data.Length >= 128' nameof(data)' "Data length must be at least 128 to be a valid profile header");
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccReader.cs,ReadTagData,The following statement contains a magic number: Guard.IsTrue(data.Length >= 128' nameof(data)' "Data length must be at least 128 to be a valid ICC profile");
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccReader.cs,ReadHeader,The following statement contains a magic number: return new IccProfileHeader              {                  Size = reader.ReadUInt32()'                  CmmType = reader.ReadAsciiString(4)'                  Version = reader.ReadVersionNumber()'                  Class = (IccProfileClass)reader.ReadUInt32()'                  DataColorSpace = (IccColorSpaceType)reader.ReadUInt32()'                  ProfileConnectionSpace = (IccColorSpaceType)reader.ReadUInt32()'                  CreationDate = reader.ReadDateTime()'                  FileSignature = reader.ReadAsciiString(4)'                  PrimaryPlatformSignature = (IccPrimaryPlatformType)reader.ReadUInt32()'                  Flags = (IccProfileFlag)reader.ReadInt32()'                  DeviceManufacturer = reader.ReadUInt32()'                  DeviceModel = reader.ReadUInt32()'                  DeviceAttributes = (IccDeviceAttribute)reader.ReadInt64()'                  RenderingIntent = (IccRenderingIntent)reader.ReadUInt32()'                  PcsIlluminant = reader.ReadXyzNumber()'                  CreatorSignature = reader.ReadAsciiString(4)'                  Id = reader.ReadProfileId()'              };
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccReader.cs,ReadHeader,The following statement contains a magic number: return new IccProfileHeader              {                  Size = reader.ReadUInt32()'                  CmmType = reader.ReadAsciiString(4)'                  Version = reader.ReadVersionNumber()'                  Class = (IccProfileClass)reader.ReadUInt32()'                  DataColorSpace = (IccColorSpaceType)reader.ReadUInt32()'                  ProfileConnectionSpace = (IccColorSpaceType)reader.ReadUInt32()'                  CreationDate = reader.ReadDateTime()'                  FileSignature = reader.ReadAsciiString(4)'                  PrimaryPlatformSignature = (IccPrimaryPlatformType)reader.ReadUInt32()'                  Flags = (IccProfileFlag)reader.ReadInt32()'                  DeviceManufacturer = reader.ReadUInt32()'                  DeviceModel = reader.ReadUInt32()'                  DeviceAttributes = (IccDeviceAttribute)reader.ReadInt64()'                  RenderingIntent = (IccRenderingIntent)reader.ReadUInt32()'                  PcsIlluminant = reader.ReadXyzNumber()'                  CreatorSignature = reader.ReadAsciiString(4)'                  Id = reader.ReadProfileId()'              };
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccReader.cs,ReadHeader,The following statement contains a magic number: return new IccProfileHeader              {                  Size = reader.ReadUInt32()'                  CmmType = reader.ReadAsciiString(4)'                  Version = reader.ReadVersionNumber()'                  Class = (IccProfileClass)reader.ReadUInt32()'                  DataColorSpace = (IccColorSpaceType)reader.ReadUInt32()'                  ProfileConnectionSpace = (IccColorSpaceType)reader.ReadUInt32()'                  CreationDate = reader.ReadDateTime()'                  FileSignature = reader.ReadAsciiString(4)'                  PrimaryPlatformSignature = (IccPrimaryPlatformType)reader.ReadUInt32()'                  Flags = (IccProfileFlag)reader.ReadInt32()'                  DeviceManufacturer = reader.ReadUInt32()'                  DeviceModel = reader.ReadUInt32()'                  DeviceAttributes = (IccDeviceAttribute)reader.ReadInt64()'                  RenderingIntent = (IccRenderingIntent)reader.ReadUInt32()'                  PcsIlluminant = reader.ReadXyzNumber()'                  CreatorSignature = reader.ReadAsciiString(4)'                  Id = reader.ReadProfileId()'              };
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccReader,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccReader.cs,ReadTagTable,The following statement contains a magic number: reader.SetIndex(128);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccTagDataEntry.cs,GetHashCode,The following statement contains a magic number: return (int)this.Signature * 397;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccWriter.cs,WriteHeader,The following statement contains a magic number: writer.WriteAsciiString(header.CmmType' 4' false);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccWriter.cs,WriteHeader,The following statement contains a magic number: writer.WriteAsciiString(header.CreatorSignature' 4' false);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccWriter.cs,WriteTagTable,The following statement contains a magic number: writer.SetIndex(128);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccWriter.cs,WriteTagData,The following statement contains a magic number: writer.SetIndex(128 + 4 + (entries.Count * 12));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccWriter.cs,WriteTagData,The following statement contains a magic number: writer.SetIndex(128 + 4 + (entries.Count * 12));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccWriter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\IccWriter.cs,WriteTagData,The following statement contains a magic number: writer.SetIndex(128 + 4 + (entries.Count * 12));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccMultiProcessElement,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\MultiProcessElements\IccMultiProcessElement.cs,IccMultiProcessElement,The following statement contains a magic number: Guard.MustBeBetweenOrEqualTo(inChannelCount' 1' 15' nameof(inChannelCount));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccMultiProcessElement,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\MultiProcessElements\IccMultiProcessElement.cs,IccMultiProcessElement,The following statement contains a magic number: Guard.MustBeBetweenOrEqualTo(outChannelCount' 1' 15' nameof(outChannelCount));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,IccChromaticityTagDataEntry,The following statement contains a magic number: Guard.MustBeBetweenOrEqualTo(channelValues.Length' 1' 15' nameof(channelValues));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (int)this.ColorantType;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.ChannelValues?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccChromaticityTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccChromaticityTagDataEntry.cs,GetColorantArray,The following statement contains a magic number: switch (colorantType)              {                  case IccColorantEncoding.EbuTech3213E:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.290' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.ItuRBt709_2:                      return new[]                      {                          new[] { 0.640' 0.330 }'                          new[] { 0.300' 0.600 }'                          new[] { 0.150' 0.060 }'                      };                  case IccColorantEncoding.P22:                      return new[]                      {                          new[] { 0.625' 0.340 }'                          new[] { 0.280' 0.605 }'                          new[] { 0.155' 0.070 }'                      };                  case IccColorantEncoding.SmpteRp145:                      return new[]                      {                          new[] { 0.630' 0.340 }'                          new[] { 0.310' 0.595 }'                          new[] { 0.155' 0.070 }'                      };                  default:                      throw new ArgumentException("Unrecognized colorant encoding");              }
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccColorantOrderTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccColorantOrderTagDataEntry.cs,IccColorantOrderTagDataEntry,The following statement contains a magic number: Guard.MustBeBetweenOrEqualTo(colorantNumber.Length' 1' 15' nameof(colorantNumber));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccColorantOrderTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccColorantOrderTagDataEntry.cs,GetHashCode,The following statement contains a magic number: return (base.GetHashCode() * 397) ^ (this.ColorantNumber?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccColorantTableTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccColorantTableTagDataEntry.cs,IccColorantTableTagDataEntry,The following statement contains a magic number: Guard.MustBeBetweenOrEqualTo(colorantData.Length' 1' 15' nameof(colorantData));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccColorantTableTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccColorantTableTagDataEntry.cs,GetHashCode,The following statement contains a magic number: return (base.GetHashCode() * 397) ^ (this.ColorantData?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccCrdInfoTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccCrdInfoTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.PostScriptProductName?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccCrdInfoTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccCrdInfoTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.RenderingIntent0Crd?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccCrdInfoTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccCrdInfoTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.RenderingIntent1Crd?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccCrdInfoTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccCrdInfoTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.RenderingIntent2Crd?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccCrdInfoTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccCrdInfoTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.RenderingIntent3Crd?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccCurveTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccCurveTagDataEntry.cs,GetHashCode,The following statement contains a magic number: return (base.GetHashCode() * 397) ^ (this.CurveData?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccDataTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.Data?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDataTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccDataTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.IsAscii.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccDateTimeTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccDateTimeTagDataEntry.cs,GetHashCode,The following statement contains a magic number: return (base.GetHashCode() * 397) ^ this.Value.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccFix16ArrayTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccFix16ArrayTagDataEntry.cs,GetHashCode,The following statement contains a magic number: return (base.GetHashCode() * 397) ^ (this.Data?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut16TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut16TagDataEntry.cs,IccLut16TagDataEntry,The following statement contains a magic number: bool is3By3 = matrix.GetLength(0) == 3 && matrix.GetLength(1) == 3;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut16TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut16TagDataEntry.cs,IccLut16TagDataEntry,The following statement contains a magic number: bool is3By3 = matrix.GetLength(0) == 3 && matrix.GetLength(1) == 3;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut16TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut16TagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.Matrix.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut16TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut16TagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.InputValues?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut16TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut16TagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.ClutValues?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut16TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut16TagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.OutputValues?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut16TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut16TagDataEntry.cs,CreateMatrix,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut16TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut16TagDataEntry.cs,CreateMatrix,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut16TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut16TagDataEntry.cs,CreateMatrix,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut16TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut16TagDataEntry.cs,CreateMatrix,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut16TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut16TagDataEntry.cs,CreateMatrix,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut16TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut16TagDataEntry.cs,CreateMatrix,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut8TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut8TagDataEntry.cs,IccLut8TagDataEntry,The following statement contains a magic number: bool is3By3 = matrix.GetLength(0) == 3 && matrix.GetLength(1) == 3;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut8TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut8TagDataEntry.cs,IccLut8TagDataEntry,The following statement contains a magic number: bool is3By3 = matrix.GetLength(0) == 3 && matrix.GetLength(1) == 3;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut8TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut8TagDataEntry.cs,IccLut8TagDataEntry,The following statement contains a magic number: Guard.IsFalse(inputValues.Any(t => t.Values.Length != 256)' nameof(inputValues)' "Input lookup table has to have a length of 256");
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut8TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut8TagDataEntry.cs,IccLut8TagDataEntry,The following statement contains a magic number: Guard.IsFalse(outputValues.Any(t => t.Values.Length != 256)' nameof(outputValues)' "Output lookup table has to have a length of 256");
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut8TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut8TagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.Matrix.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut8TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut8TagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.InputValues?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut8TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut8TagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.ClutValues?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut8TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut8TagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.OutputValues?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut8TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut8TagDataEntry.cs,CreateMatrix,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut8TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut8TagDataEntry.cs,CreateMatrix,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut8TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut8TagDataEntry.cs,CreateMatrix,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut8TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut8TagDataEntry.cs,CreateMatrix,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut8TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut8TagDataEntry.cs,CreateMatrix,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLut8TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLut8TagDataEntry.cs,CreateMatrix,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,IccLutAToBTagDataEntry,The following statement contains a magic number: Guard.IsTrue(this.CurveB.Length == 3' nameof(this.CurveB)' $"{nameof(this.CurveB)} must have a length of three");
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,IccLutAToBTagDataEntry,The following statement contains a magic number: Guard.IsTrue(this.CurveM.Length == 3' nameof(this.CurveM)' $"{nameof(this.CurveM)} must have a length of three");
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,IccLutAToBTagDataEntry,The following statement contains a magic number: Guard.MustBeBetweenOrEqualTo(this.CurveA.Length' 1' 15' nameof(this.CurveA));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,IccLutAToBTagDataEntry,The following statement contains a magic number: this.OutputChannelCount = 3;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.InputChannelCount;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.OutputChannelCount;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.Matrix3x3.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.Matrix3x1.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.ClutValues?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.CurveB?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.CurveM?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.CurveA?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,VerifyMatrix,The following statement contains a magic number: Guard.IsTrue(matrix3x1.Length == 3' nameof(matrix3x1)' "Matrix must have a size of three");
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,VerifyMatrix,The following statement contains a magic number: bool is3By3 = matrix3x3.GetLength(0) == 3 && matrix3x3.GetLength(1) == 3;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,VerifyMatrix,The following statement contains a magic number: bool is3By3 = matrix3x3.GetLength(0) == 3 && matrix3x3.GetLength(1) == 3;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,CreateMatrix3x1,The following statement contains a magic number: return new Vector3(matrix[0]' matrix[1]' matrix[2]);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,CreateMatrix3x3,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,CreateMatrix3x3,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,CreateMatrix3x3,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,CreateMatrix3x3,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,CreateMatrix3x3,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutAToBTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutAToBTagDataEntry.cs,CreateMatrix3x3,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,IccLutBToATagDataEntry,The following statement contains a magic number: Guard.IsTrue(this.CurveB.Length == 3' nameof(this.CurveB)' $"{nameof(this.CurveB)} must have a length of three");
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,IccLutBToATagDataEntry,The following statement contains a magic number: Guard.IsTrue(this.CurveM.Length == 3' nameof(this.CurveM)' $"{nameof(this.CurveM)} must have a length of three");
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,IccLutBToATagDataEntry,The following statement contains a magic number: Guard.MustBeBetweenOrEqualTo(this.CurveA.Length' 1' 15' nameof(this.CurveA));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,IccLutBToATagDataEntry,The following statement contains a magic number: this.InputChannelCount = 3;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.InputChannelCount;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.OutputChannelCount;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.Matrix3x3.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.Matrix3x1.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.ClutValues?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.CurveB?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.CurveM?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.CurveA?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,VerifyMatrix,The following statement contains a magic number: Guard.IsTrue(matrix3x1.Length == 3' nameof(matrix3x1)' "Matrix must have a size of three");
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,VerifyMatrix,The following statement contains a magic number: bool is3By3 = matrix3x3.GetLength(0) == 3 && matrix3x3.GetLength(1) == 3;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,VerifyMatrix,The following statement contains a magic number: bool is3By3 = matrix3x3.GetLength(0) == 3 && matrix3x3.GetLength(1) == 3;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,CreateMatrix3x1,The following statement contains a magic number: return new Vector3(matrix[0]' matrix[1]' matrix[2]);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,CreateMatrix3x3,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,CreateMatrix3x3,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,CreateMatrix3x3,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,CreateMatrix3x3,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,CreateMatrix3x3,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccLutBToATagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccLutBToATagDataEntry.cs,CreateMatrix3x3,The following statement contains a magic number: return new Matrix4x4(                  matrix[0' 0]'                  matrix[0' 1]'                  matrix[0' 2]'                  0'                  matrix[1' 0]'                  matrix[1' 1]'                  matrix[1' 2]'                  0'                  matrix[2' 0]'                  matrix[2' 1]'                  matrix[2' 2]'                  0'                  0'                  0'                  0'                  1);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccMeasurementTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccMeasurementTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (int)this.Observer;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccMeasurementTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccMeasurementTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.XyzBacking.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccMeasurementTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccMeasurementTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (int)this.Geometry;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccMeasurementTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccMeasurementTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.Flare.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccMeasurementTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccMeasurementTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (int)this.Illuminant;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccMultiLocalizedUnicodeTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccMultiLocalizedUnicodeTagDataEntry.cs,GetHashCode,The following statement contains a magic number: return (base.GetHashCode() * 397) ^ (this.Texts?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccMultiProcessElementsTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccMultiProcessElementsTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.InputChannelCount;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccMultiProcessElementsTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccMultiProcessElementsTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.OutputChannelCount;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccMultiProcessElementsTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccMultiProcessElementsTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.Data?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccNamedColor2TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccNamedColor2TagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.CoordinateCount;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccNamedColor2TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccNamedColor2TagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.Prefix?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccNamedColor2TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccNamedColor2TagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.Suffix?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccNamedColor2TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccNamedColor2TagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.VendorFlags;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccNamedColor2TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccNamedColor2TagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.Colors?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccParametricCurveTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccParametricCurveTagDataEntry.cs,GetHashCode,The following statement contains a magic number: return (base.GetHashCode() * 397) ^ (this.Curve?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfileSequenceDescTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccProfileSequenceDescTagDataEntry.cs,GetHashCode,The following statement contains a magic number: return (base.GetHashCode() * 397) ^ (this.Descriptions?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfileSequenceIdentifierTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccProfileSequenceIdentifierTagDataEntry.cs,GetHashCode,The following statement contains a magic number: return (base.GetHashCode() * 397) ^ (this.Data?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccResponseCurveSet16TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccResponseCurveSet16TagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.ChannelCount.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccResponseCurveSet16TagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccResponseCurveSet16TagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.Curves?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccScreeningTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccScreeningTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (int)this.Flags;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccScreeningTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccScreeningTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.Channels?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccSignatureTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccSignatureTagDataEntry.cs,GetHashCode,The following statement contains a magic number: return (base.GetHashCode() * 397) ^ (this.SignatureData?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccTextDescriptionTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccTextDescriptionTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.Ascii?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccTextDescriptionTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccTextDescriptionTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.Unicode?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccTextDescriptionTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccTextDescriptionTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.ScriptCode?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccTextDescriptionTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccTextDescriptionTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (int)this.UnicodeLanguageCode;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccTextDescriptionTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccTextDescriptionTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.ScriptCodeCode.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccTextTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccTextTagDataEntry.cs,GetHashCode,The following statement contains a magic number: return (base.GetHashCode() * 397) ^ (this.Text?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccUcrBgTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccUcrBgTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.UcrCurve?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccUcrBgTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccUcrBgTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.BgCurve?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccUcrBgTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccUcrBgTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.Description?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccUFix16ArrayTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccUFix16ArrayTagDataEntry.cs,GetHashCode,The following statement contains a magic number: return (base.GetHashCode() * 397) ^ (this.Data?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccUInt16ArrayTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccUInt16ArrayTagDataEntry.cs,GetHashCode,The following statement contains a magic number: return (base.GetHashCode() * 397) ^ (this.Data?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccUInt32ArrayTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccUInt32ArrayTagDataEntry.cs,GetHashCode,The following statement contains a magic number: return (base.GetHashCode() * 397) ^ (this.Data?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccUInt64ArrayTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccUInt64ArrayTagDataEntry.cs,GetHashCode,The following statement contains a magic number: return (base.GetHashCode() * 397) ^ (this.Data?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccUInt8ArrayTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccUInt8ArrayTagDataEntry.cs,GetHashCode,The following statement contains a magic number: return (base.GetHashCode() * 397) ^ (this.Data?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccUnknownTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccUnknownTagDataEntry.cs,GetHashCode,The following statement contains a magic number: return (base.GetHashCode() * 397) ^ (this.Data?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccViewingConditionsTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccViewingConditionsTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.IlluminantXyz.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccViewingConditionsTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccViewingConditionsTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.SurroundXyz.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccViewingConditionsTagDataEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\TagDataEntries\IccViewingConditionsTagDataEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (int)this.Illuminant;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccClut,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccClut.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (int)this.DataType;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccClut,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccClut.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.InputChannelCount;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccClut,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccClut.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.OutputChannelCount;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccClut,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccClut.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.GridPointCount?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccClut,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccClut.cs,CheckValues,The following statement contains a magic number: Guard.MustBeBetweenOrEqualTo(this.InputChannelCount' 1' 15' nameof(this.InputChannelCount));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccClut,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccClut.cs,CheckValues,The following statement contains a magic number: Guard.MustBeBetweenOrEqualTo(this.OutputChannelCount' 1' 15' nameof(this.OutputChannelCount));
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccColorantTableEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccColorantTableEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.Pcs1.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccColorantTableEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccColorantTableEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.Pcs2.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccColorantTableEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccColorantTableEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.Pcs3.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccNamedColor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccNamedColor.cs,IccNamedColor,The following statement contains a magic number: Guard.IsTrue(pcsCoordinates.Length == 3' nameof(pcsCoordinates)' "Must have a length of 3");
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccNamedColor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccNamedColor.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.PcsCoordinates.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccNamedColor,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccNamedColor.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.DeviceCoordinates.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfileDescription,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccProfileDescription.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (int)this.DeviceModel;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfileDescription,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccProfileDescription.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.DeviceAttributes.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfileDescription,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccProfileDescription.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (int)this.TechnologyInformation;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfileDescription,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccProfileDescription.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.DeviceManufacturerInfo?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfileDescription,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccProfileDescription.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.DeviceModelInfo?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfileId,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccProfileId.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.Part2.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfileId,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccProfileId.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.Part3.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfileId,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccProfileId.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.Part4.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfileId,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccProfileId.cs,ToHex,The following statement contains a magic number: return value.ToString("X").PadLeft(8' '0');
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccProfileSequenceIdentifier,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccProfileSequenceIdentifier.cs,GetHashCode,The following statement contains a magic number: return (this.Id.GetHashCode() * 397) ^ (this.Description?.GetHashCode() ?? 0);
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccResponseNumber,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccResponseNumber.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.MeasurementValue.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccScreeningChannel,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccScreeningChannel.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.Angle.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccScreeningChannel,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccScreeningChannel.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (int)this.SpotShape;
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccTagTableEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccTagTableEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.Offset.GetHashCode();
Magic Number,Geb.Image.Formats.MetaData.Profiles.Icc,IccTagTableEntry,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\MetaData\Profiles\ICC\Various\IccTagTableEntry.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.DataSize.GetHashCode();
Magic Number,Geb.Image.Formats.Png.Filters,AverageFilter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Filters\AverageFilter.cs,Encode,The following statement contains a magic number: resultBaseRef = 3;
Magic Number,Geb.Image.Formats.Png.Filters,AverageFilter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Filters\AverageFilter.cs,Encode,The following statement contains a magic number: sum -= 3;
Magic Number,Geb.Image.Formats.Png.Filters,PaethFilter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Filters\PaethFilter.cs,Encode,The following statement contains a magic number: resultBaseRef = 4;
Magic Number,Geb.Image.Formats.Png.Filters,PaethFilter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Filters\PaethFilter.cs,Encode,The following statement contains a magic number: sum -= 4;
Magic Number,Geb.Image.Formats.Png.Filters,UpFilter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Filters\UpFilter.cs,Encode,The following statement contains a magic number: resultBaseRef = 2;
Magic Number,Geb.Image.Formats.Png.Filters,UpFilter,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Filters\UpFilter.cs,Encode,The following statement contains a magic number: sum -= 2;
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,Decode,The following statement contains a magic number: this.currentStream.Skip(8);
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,Decode,The following statement contains a magic number: switch (chunk.Type)                              {                                  case PngChunkType.Header:                                      this.ReadHeaderChunk(chunk.Data.Array);                                      this.ValidateHeader();                                      break;                                  case PngChunkType.Physical:                                      this.ReadPhysicalChunk(metadata' chunk.Data.Array);                                      break;                                  case PngChunkType.Data:                                      if (image == null)                                      {                                          this.InitializeImage(metadata' out image);                                      }                                        deframeStream.AllocateNewBytes(chunk.Length);                                      this.ReadScanlines(deframeStream.CompressedStream' image);                                      this.currentStream.Read(this.crcBuffer' 0' 4);                                      break;                                  case PngChunkType.Palette:                                      byte[] pal = new byte[chunk.Length];                                      Buffer.BlockCopy(chunk.Data.Array' 0' pal' 0' chunk.Length);                                      this.palette = pal;                                      break;                                  case PngChunkType.PaletteAlpha:                                      byte[] alpha = new byte[chunk.Length];                                      Buffer.BlockCopy(chunk.Data.Array' 0' alpha' 0' chunk.Length);                                      this.paletteAlpha = alpha;                                      this.AssignTransparentMarkers(alpha);                                      break;                                  case PngChunkType.Text:                                      this.ReadTextChunk(metadata' chunk.Data.Array' chunk.Length);                                      break;                                  case PngChunkType.End:                                      this.isEndChunkReached = true;                                      break;                              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,Identify,The following statement contains a magic number: this.currentStream.Skip(8);
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ToArrayByBitsLength,The following statement contains a magic number: bits >= 8
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ToArrayByBitsLength,The following statement contains a magic number: byte[] result = new byte[bytesPerScanline * 8 / bits];
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ToArrayByBitsLength,The following statement contains a magic number: int mask = 0xFF >> (8 - bits);
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ToArrayByBitsLength,The following statement contains a magic number: int colorIndex = (b >> (8 - bits - shift)) & mask;
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ToArrayByBitsLength,The following statement contains a magic number: shift < 8
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ReadIntFrom2Bytes,The following statement contains a magic number: return ((buffer[offset] & 0xFF) << 16) | (buffer[offset + 1] & 0xFF);
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ReadPhysicalChunk,The following statement contains a magic number: metadata.HorizontalResolution = BinaryPrimitives.ReadInt32BigEndian(data.Slice(0' 4)) / 39.3700787d;
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ReadPhysicalChunk,The following statement contains a magic number: metadata.HorizontalResolution = BinaryPrimitives.ReadInt32BigEndian(data.Slice(0' 4)) / 39.3700787d;
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ReadPhysicalChunk,The following statement contains a magic number: metadata.VerticalResolution = BinaryPrimitives.ReadInt32BigEndian(data.Slice(4' 4)) / 39.3700787d;
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ReadPhysicalChunk,The following statement contains a magic number: metadata.VerticalResolution = BinaryPrimitives.ReadInt32BigEndian(data.Slice(4' 4)) / 39.3700787d;
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ReadPhysicalChunk,The following statement contains a magic number: metadata.VerticalResolution = BinaryPrimitives.ReadInt32BigEndian(data.Slice(4' 4)) / 39.3700787d;
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,InitializeImage,The following statement contains a magic number: this.bytesPerSample = this.header.BitDepth / 8;
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,InitializeImage,The following statement contains a magic number: this.header.BitDepth >= 8
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,CalculateBitsPerPixel,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                  case PngColorType.Palette:                      return this.header.BitDepth;                  case PngColorType.GrayscaleWithAlpha:                      return this.header.BitDepth * 2;                  case PngColorType.Rgb:                      return this.header.BitDepth * 3;                  case PngColorType.RgbWithAlpha:                      return this.header.BitDepth * 4;                  default:                      throw new NotSupportedException("Unsupported PNG color type");              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,CalculateBitsPerPixel,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                  case PngColorType.Palette:                      return this.header.BitDepth;                  case PngColorType.GrayscaleWithAlpha:                      return this.header.BitDepth * 2;                  case PngColorType.Rgb:                      return this.header.BitDepth * 3;                  case PngColorType.RgbWithAlpha:                      return this.header.BitDepth * 4;                  default:                      throw new NotSupportedException("Unsupported PNG color type");              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,CalculateBitsPerPixel,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                  case PngColorType.Palette:                      return this.header.BitDepth;                  case PngColorType.GrayscaleWithAlpha:                      return this.header.BitDepth * 2;                  case PngColorType.Rgb:                      return this.header.BitDepth * 3;                  case PngColorType.RgbWithAlpha:                      return this.header.BitDepth * 4;                  default:                      throw new NotSupportedException("Unsupported PNG color type");              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,CalculateBytesPerPixel,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      return 1;                    case PngColorType.GrayscaleWithAlpha:                      return 2;                    case PngColorType.Palette:                      return 1;                    case PngColorType.Rgb:                      if (this.header.BitDepth == 16)                      {                          return 6;                      }                        return 3;                    case PngColorType.RgbWithAlpha:                  default:                      if (this.header.BitDepth == 16)                      {                          return 8;                      }                        return 4;              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,CalculateBytesPerPixel,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      return 1;                    case PngColorType.GrayscaleWithAlpha:                      return 2;                    case PngColorType.Palette:                      return 1;                    case PngColorType.Rgb:                      if (this.header.BitDepth == 16)                      {                          return 6;                      }                        return 3;                    case PngColorType.RgbWithAlpha:                  default:                      if (this.header.BitDepth == 16)                      {                          return 8;                      }                        return 4;              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,CalculateBytesPerPixel,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      return 1;                    case PngColorType.GrayscaleWithAlpha:                      return 2;                    case PngColorType.Palette:                      return 1;                    case PngColorType.Rgb:                      if (this.header.BitDepth == 16)                      {                          return 6;                      }                        return 3;                    case PngColorType.RgbWithAlpha:                  default:                      if (this.header.BitDepth == 16)                      {                          return 8;                      }                        return 4;              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,CalculateBytesPerPixel,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      return 1;                    case PngColorType.GrayscaleWithAlpha:                      return 2;                    case PngColorType.Palette:                      return 1;                    case PngColorType.Rgb:                      if (this.header.BitDepth == 16)                      {                          return 6;                      }                        return 3;                    case PngColorType.RgbWithAlpha:                  default:                      if (this.header.BitDepth == 16)                      {                          return 8;                      }                        return 4;              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,CalculateBytesPerPixel,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      return 1;                    case PngColorType.GrayscaleWithAlpha:                      return 2;                    case PngColorType.Palette:                      return 1;                    case PngColorType.Rgb:                      if (this.header.BitDepth == 16)                      {                          return 6;                      }                        return 3;                    case PngColorType.RgbWithAlpha:                  default:                      if (this.header.BitDepth == 16)                      {                          return 8;                      }                        return 4;              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,CalculateBytesPerPixel,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      return 1;                    case PngColorType.GrayscaleWithAlpha:                      return 2;                    case PngColorType.Palette:                      return 1;                    case PngColorType.Rgb:                      if (this.header.BitDepth == 16)                      {                          return 6;                      }                        return 3;                    case PngColorType.RgbWithAlpha:                  default:                      if (this.header.BitDepth == 16)                      {                          return 8;                      }                        return 4;              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,CalculateBytesPerPixel,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      return 1;                    case PngColorType.GrayscaleWithAlpha:                      return 2;                    case PngColorType.Palette:                      return 1;                    case PngColorType.Rgb:                      if (this.header.BitDepth == 16)                      {                          return 6;                      }                        return 3;                    case PngColorType.RgbWithAlpha:                  default:                      if (this.header.BitDepth == 16)                      {                          return 8;                      }                        return 4;              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,CalculateScanlineLength,The following statement contains a magic number: int mod = this.header.BitDepth == 16 ? 16 : 8;
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,CalculateScanlineLength,The following statement contains a magic number: int mod = this.header.BitDepth == 16 ? 16 : 8;
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,CalculateScanlineLength,The following statement contains a magic number: int mod = this.header.BitDepth == 16 ? 16 : 8;
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,DecodeInterlacedPixelData,The following statement contains a magic number: this.pass < 7
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ProcessDefilteredScanline,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      int factor = 255 / ((int)Math.Pow(2' this.header.BitDepth) - 1);                      ReadOnlySpan<byte> newScanline1 = ToArrayByBitsLength(scanlineBuffer' this.bytesPerScanline' this.header.BitDepth);                        for (int x = 0; x < this.header.Width; x++)                      {                          byte intensity = (byte)(newScanline1[x] * factor);                          if (this.hasTrans && intensity == this.intensityTrans)                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)0);                          }                          else                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)255);                          }                            rowSpan[x] = color;                      }                        break;                    case PngColorType.GrayscaleWithAlpha:                        for (int x = 0; x < this.header.Width; x++)                      {                          int offset = x * this.bytesPerPixel;                            byte intensity = scanlineBuffer[offset];                          byte alpha = scanlineBuffer[offset + this.bytesPerSample];                          color = new Bgra32(intensity' intensity' intensity' alpha);                          rowSpan[x] = color;                      }                        break;                    case PngColorType.Palette:                        this.ProcessScanlineFromPalette(scanlineBuffer' rowSpan);                        break;                    case PngColorType.Rgb:                        if (!this.hasTrans)                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                  rowSpan.PackFromRgb24Bytes(compressed.Span' this.header.Width);                              }                          }                          else                          {                              rowSpan.PackFromRgb24Bytes(scanlineBuffer' this.header.Width);                          }                      }                      else                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                    Span<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(compressed.Span);                                  for (int x = 0; x < this.header.Width; x++)                                  {                                      ref Rgb24 rgb24 = ref rgb24Span[x];                                      color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                      rowSpan[x] = color;                                  }                              }                          }                          else                          {                              ReadOnlySpan<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(scanlineBuffer);                              for (int x = 0; x < this.header.Width; x++)                              {                                  ref readonly Rgb24 rgb24 = ref rgb24Span[x];                                  color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                  rowSpan[x] = color;                              }                          }                      }                        break;                    case PngColorType.RgbWithAlpha:                        if (this.header.BitDepth == 16)                      {                          int length = this.header.Width * 4;                          using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                          {                              // TODO: Should we use pack from vector here instead?                              this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                              rowSpan.PackFromRgba32Bytes(compressed.Span' this.header.Width);                          }                      }                      else                      {                          rowSpan.PackFromRgba32Bytes(scanlineBuffer' this.header.Width);                      }                        break;              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ProcessDefilteredScanline,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      int factor = 255 / ((int)Math.Pow(2' this.header.BitDepth) - 1);                      ReadOnlySpan<byte> newScanline1 = ToArrayByBitsLength(scanlineBuffer' this.bytesPerScanline' this.header.BitDepth);                        for (int x = 0; x < this.header.Width; x++)                      {                          byte intensity = (byte)(newScanline1[x] * factor);                          if (this.hasTrans && intensity == this.intensityTrans)                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)0);                          }                          else                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)255);                          }                            rowSpan[x] = color;                      }                        break;                    case PngColorType.GrayscaleWithAlpha:                        for (int x = 0; x < this.header.Width; x++)                      {                          int offset = x * this.bytesPerPixel;                            byte intensity = scanlineBuffer[offset];                          byte alpha = scanlineBuffer[offset + this.bytesPerSample];                          color = new Bgra32(intensity' intensity' intensity' alpha);                          rowSpan[x] = color;                      }                        break;                    case PngColorType.Palette:                        this.ProcessScanlineFromPalette(scanlineBuffer' rowSpan);                        break;                    case PngColorType.Rgb:                        if (!this.hasTrans)                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                  rowSpan.PackFromRgb24Bytes(compressed.Span' this.header.Width);                              }                          }                          else                          {                              rowSpan.PackFromRgb24Bytes(scanlineBuffer' this.header.Width);                          }                      }                      else                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                    Span<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(compressed.Span);                                  for (int x = 0; x < this.header.Width; x++)                                  {                                      ref Rgb24 rgb24 = ref rgb24Span[x];                                      color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                      rowSpan[x] = color;                                  }                              }                          }                          else                          {                              ReadOnlySpan<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(scanlineBuffer);                              for (int x = 0; x < this.header.Width; x++)                              {                                  ref readonly Rgb24 rgb24 = ref rgb24Span[x];                                  color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                  rowSpan[x] = color;                              }                          }                      }                        break;                    case PngColorType.RgbWithAlpha:                        if (this.header.BitDepth == 16)                      {                          int length = this.header.Width * 4;                          using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                          {                              // TODO: Should we use pack from vector here instead?                              this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                              rowSpan.PackFromRgba32Bytes(compressed.Span' this.header.Width);                          }                      }                      else                      {                          rowSpan.PackFromRgba32Bytes(scanlineBuffer' this.header.Width);                      }                        break;              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ProcessDefilteredScanline,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      int factor = 255 / ((int)Math.Pow(2' this.header.BitDepth) - 1);                      ReadOnlySpan<byte> newScanline1 = ToArrayByBitsLength(scanlineBuffer' this.bytesPerScanline' this.header.BitDepth);                        for (int x = 0; x < this.header.Width; x++)                      {                          byte intensity = (byte)(newScanline1[x] * factor);                          if (this.hasTrans && intensity == this.intensityTrans)                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)0);                          }                          else                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)255);                          }                            rowSpan[x] = color;                      }                        break;                    case PngColorType.GrayscaleWithAlpha:                        for (int x = 0; x < this.header.Width; x++)                      {                          int offset = x * this.bytesPerPixel;                            byte intensity = scanlineBuffer[offset];                          byte alpha = scanlineBuffer[offset + this.bytesPerSample];                          color = new Bgra32(intensity' intensity' intensity' alpha);                          rowSpan[x] = color;                      }                        break;                    case PngColorType.Palette:                        this.ProcessScanlineFromPalette(scanlineBuffer' rowSpan);                        break;                    case PngColorType.Rgb:                        if (!this.hasTrans)                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                  rowSpan.PackFromRgb24Bytes(compressed.Span' this.header.Width);                              }                          }                          else                          {                              rowSpan.PackFromRgb24Bytes(scanlineBuffer' this.header.Width);                          }                      }                      else                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                    Span<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(compressed.Span);                                  for (int x = 0; x < this.header.Width; x++)                                  {                                      ref Rgb24 rgb24 = ref rgb24Span[x];                                      color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                      rowSpan[x] = color;                                  }                              }                          }                          else                          {                              ReadOnlySpan<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(scanlineBuffer);                              for (int x = 0; x < this.header.Width; x++)                              {                                  ref readonly Rgb24 rgb24 = ref rgb24Span[x];                                  color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                  rowSpan[x] = color;                              }                          }                      }                        break;                    case PngColorType.RgbWithAlpha:                        if (this.header.BitDepth == 16)                      {                          int length = this.header.Width * 4;                          using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                          {                              // TODO: Should we use pack from vector here instead?                              this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                              rowSpan.PackFromRgba32Bytes(compressed.Span' this.header.Width);                          }                      }                      else                      {                          rowSpan.PackFromRgba32Bytes(scanlineBuffer' this.header.Width);                      }                        break;              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ProcessDefilteredScanline,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      int factor = 255 / ((int)Math.Pow(2' this.header.BitDepth) - 1);                      ReadOnlySpan<byte> newScanline1 = ToArrayByBitsLength(scanlineBuffer' this.bytesPerScanline' this.header.BitDepth);                        for (int x = 0; x < this.header.Width; x++)                      {                          byte intensity = (byte)(newScanline1[x] * factor);                          if (this.hasTrans && intensity == this.intensityTrans)                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)0);                          }                          else                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)255);                          }                            rowSpan[x] = color;                      }                        break;                    case PngColorType.GrayscaleWithAlpha:                        for (int x = 0; x < this.header.Width; x++)                      {                          int offset = x * this.bytesPerPixel;                            byte intensity = scanlineBuffer[offset];                          byte alpha = scanlineBuffer[offset + this.bytesPerSample];                          color = new Bgra32(intensity' intensity' intensity' alpha);                          rowSpan[x] = color;                      }                        break;                    case PngColorType.Palette:                        this.ProcessScanlineFromPalette(scanlineBuffer' rowSpan);                        break;                    case PngColorType.Rgb:                        if (!this.hasTrans)                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                  rowSpan.PackFromRgb24Bytes(compressed.Span' this.header.Width);                              }                          }                          else                          {                              rowSpan.PackFromRgb24Bytes(scanlineBuffer' this.header.Width);                          }                      }                      else                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                    Span<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(compressed.Span);                                  for (int x = 0; x < this.header.Width; x++)                                  {                                      ref Rgb24 rgb24 = ref rgb24Span[x];                                      color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                      rowSpan[x] = color;                                  }                              }                          }                          else                          {                              ReadOnlySpan<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(scanlineBuffer);                              for (int x = 0; x < this.header.Width; x++)                              {                                  ref readonly Rgb24 rgb24 = ref rgb24Span[x];                                  color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                  rowSpan[x] = color;                              }                          }                      }                        break;                    case PngColorType.RgbWithAlpha:                        if (this.header.BitDepth == 16)                      {                          int length = this.header.Width * 4;                          using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                          {                              // TODO: Should we use pack from vector here instead?                              this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                              rowSpan.PackFromRgba32Bytes(compressed.Span' this.header.Width);                          }                      }                      else                      {                          rowSpan.PackFromRgba32Bytes(scanlineBuffer' this.header.Width);                      }                        break;              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ProcessDefilteredScanline,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      int factor = 255 / ((int)Math.Pow(2' this.header.BitDepth) - 1);                      ReadOnlySpan<byte> newScanline1 = ToArrayByBitsLength(scanlineBuffer' this.bytesPerScanline' this.header.BitDepth);                        for (int x = 0; x < this.header.Width; x++)                      {                          byte intensity = (byte)(newScanline1[x] * factor);                          if (this.hasTrans && intensity == this.intensityTrans)                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)0);                          }                          else                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)255);                          }                            rowSpan[x] = color;                      }                        break;                    case PngColorType.GrayscaleWithAlpha:                        for (int x = 0; x < this.header.Width; x++)                      {                          int offset = x * this.bytesPerPixel;                            byte intensity = scanlineBuffer[offset];                          byte alpha = scanlineBuffer[offset + this.bytesPerSample];                          color = new Bgra32(intensity' intensity' intensity' alpha);                          rowSpan[x] = color;                      }                        break;                    case PngColorType.Palette:                        this.ProcessScanlineFromPalette(scanlineBuffer' rowSpan);                        break;                    case PngColorType.Rgb:                        if (!this.hasTrans)                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                  rowSpan.PackFromRgb24Bytes(compressed.Span' this.header.Width);                              }                          }                          else                          {                              rowSpan.PackFromRgb24Bytes(scanlineBuffer' this.header.Width);                          }                      }                      else                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                    Span<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(compressed.Span);                                  for (int x = 0; x < this.header.Width; x++)                                  {                                      ref Rgb24 rgb24 = ref rgb24Span[x];                                      color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                      rowSpan[x] = color;                                  }                              }                          }                          else                          {                              ReadOnlySpan<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(scanlineBuffer);                              for (int x = 0; x < this.header.Width; x++)                              {                                  ref readonly Rgb24 rgb24 = ref rgb24Span[x];                                  color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                  rowSpan[x] = color;                              }                          }                      }                        break;                    case PngColorType.RgbWithAlpha:                        if (this.header.BitDepth == 16)                      {                          int length = this.header.Width * 4;                          using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                          {                              // TODO: Should we use pack from vector here instead?                              this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                              rowSpan.PackFromRgba32Bytes(compressed.Span' this.header.Width);                          }                      }                      else                      {                          rowSpan.PackFromRgba32Bytes(scanlineBuffer' this.header.Width);                      }                        break;              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ProcessDefilteredScanline,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      int factor = 255 / ((int)Math.Pow(2' this.header.BitDepth) - 1);                      ReadOnlySpan<byte> newScanline1 = ToArrayByBitsLength(scanlineBuffer' this.bytesPerScanline' this.header.BitDepth);                        for (int x = 0; x < this.header.Width; x++)                      {                          byte intensity = (byte)(newScanline1[x] * factor);                          if (this.hasTrans && intensity == this.intensityTrans)                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)0);                          }                          else                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)255);                          }                            rowSpan[x] = color;                      }                        break;                    case PngColorType.GrayscaleWithAlpha:                        for (int x = 0; x < this.header.Width; x++)                      {                          int offset = x * this.bytesPerPixel;                            byte intensity = scanlineBuffer[offset];                          byte alpha = scanlineBuffer[offset + this.bytesPerSample];                          color = new Bgra32(intensity' intensity' intensity' alpha);                          rowSpan[x] = color;                      }                        break;                    case PngColorType.Palette:                        this.ProcessScanlineFromPalette(scanlineBuffer' rowSpan);                        break;                    case PngColorType.Rgb:                        if (!this.hasTrans)                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                  rowSpan.PackFromRgb24Bytes(compressed.Span' this.header.Width);                              }                          }                          else                          {                              rowSpan.PackFromRgb24Bytes(scanlineBuffer' this.header.Width);                          }                      }                      else                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                    Span<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(compressed.Span);                                  for (int x = 0; x < this.header.Width; x++)                                  {                                      ref Rgb24 rgb24 = ref rgb24Span[x];                                      color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                      rowSpan[x] = color;                                  }                              }                          }                          else                          {                              ReadOnlySpan<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(scanlineBuffer);                              for (int x = 0; x < this.header.Width; x++)                              {                                  ref readonly Rgb24 rgb24 = ref rgb24Span[x];                                  color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                  rowSpan[x] = color;                              }                          }                      }                        break;                    case PngColorType.RgbWithAlpha:                        if (this.header.BitDepth == 16)                      {                          int length = this.header.Width * 4;                          using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                          {                              // TODO: Should we use pack from vector here instead?                              this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                              rowSpan.PackFromRgba32Bytes(compressed.Span' this.header.Width);                          }                      }                      else                      {                          rowSpan.PackFromRgba32Bytes(scanlineBuffer' this.header.Width);                      }                        break;              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ProcessDefilteredScanline,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      int factor = 255 / ((int)Math.Pow(2' this.header.BitDepth) - 1);                      ReadOnlySpan<byte> newScanline1 = ToArrayByBitsLength(scanlineBuffer' this.bytesPerScanline' this.header.BitDepth);                        for (int x = 0; x < this.header.Width; x++)                      {                          byte intensity = (byte)(newScanline1[x] * factor);                          if (this.hasTrans && intensity == this.intensityTrans)                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)0);                          }                          else                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)255);                          }                            rowSpan[x] = color;                      }                        break;                    case PngColorType.GrayscaleWithAlpha:                        for (int x = 0; x < this.header.Width; x++)                      {                          int offset = x * this.bytesPerPixel;                            byte intensity = scanlineBuffer[offset];                          byte alpha = scanlineBuffer[offset + this.bytesPerSample];                          color = new Bgra32(intensity' intensity' intensity' alpha);                          rowSpan[x] = color;                      }                        break;                    case PngColorType.Palette:                        this.ProcessScanlineFromPalette(scanlineBuffer' rowSpan);                        break;                    case PngColorType.Rgb:                        if (!this.hasTrans)                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                  rowSpan.PackFromRgb24Bytes(compressed.Span' this.header.Width);                              }                          }                          else                          {                              rowSpan.PackFromRgb24Bytes(scanlineBuffer' this.header.Width);                          }                      }                      else                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                    Span<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(compressed.Span);                                  for (int x = 0; x < this.header.Width; x++)                                  {                                      ref Rgb24 rgb24 = ref rgb24Span[x];                                      color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                      rowSpan[x] = color;                                  }                              }                          }                          else                          {                              ReadOnlySpan<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(scanlineBuffer);                              for (int x = 0; x < this.header.Width; x++)                              {                                  ref readonly Rgb24 rgb24 = ref rgb24Span[x];                                  color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                  rowSpan[x] = color;                              }                          }                      }                        break;                    case PngColorType.RgbWithAlpha:                        if (this.header.BitDepth == 16)                      {                          int length = this.header.Width * 4;                          using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                          {                              // TODO: Should we use pack from vector here instead?                              this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                              rowSpan.PackFromRgba32Bytes(compressed.Span' this.header.Width);                          }                      }                      else                      {                          rowSpan.PackFromRgba32Bytes(scanlineBuffer' this.header.Width);                      }                        break;              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ProcessDefilteredScanline,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      int factor = 255 / ((int)Math.Pow(2' this.header.BitDepth) - 1);                      ReadOnlySpan<byte> newScanline1 = ToArrayByBitsLength(scanlineBuffer' this.bytesPerScanline' this.header.BitDepth);                        for (int x = 0; x < this.header.Width; x++)                      {                          byte intensity = (byte)(newScanline1[x] * factor);                          if (this.hasTrans && intensity == this.intensityTrans)                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)0);                          }                          else                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)255);                          }                            rowSpan[x] = color;                      }                        break;                    case PngColorType.GrayscaleWithAlpha:                        for (int x = 0; x < this.header.Width; x++)                      {                          int offset = x * this.bytesPerPixel;                            byte intensity = scanlineBuffer[offset];                          byte alpha = scanlineBuffer[offset + this.bytesPerSample];                          color = new Bgra32(intensity' intensity' intensity' alpha);                          rowSpan[x] = color;                      }                        break;                    case PngColorType.Palette:                        this.ProcessScanlineFromPalette(scanlineBuffer' rowSpan);                        break;                    case PngColorType.Rgb:                        if (!this.hasTrans)                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                  rowSpan.PackFromRgb24Bytes(compressed.Span' this.header.Width);                              }                          }                          else                          {                              rowSpan.PackFromRgb24Bytes(scanlineBuffer' this.header.Width);                          }                      }                      else                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                    Span<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(compressed.Span);                                  for (int x = 0; x < this.header.Width; x++)                                  {                                      ref Rgb24 rgb24 = ref rgb24Span[x];                                      color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                      rowSpan[x] = color;                                  }                              }                          }                          else                          {                              ReadOnlySpan<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(scanlineBuffer);                              for (int x = 0; x < this.header.Width; x++)                              {                                  ref readonly Rgb24 rgb24 = ref rgb24Span[x];                                  color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                  rowSpan[x] = color;                              }                          }                      }                        break;                    case PngColorType.RgbWithAlpha:                        if (this.header.BitDepth == 16)                      {                          int length = this.header.Width * 4;                          using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                          {                              // TODO: Should we use pack from vector here instead?                              this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                              rowSpan.PackFromRgba32Bytes(compressed.Span' this.header.Width);                          }                      }                      else                      {                          rowSpan.PackFromRgba32Bytes(scanlineBuffer' this.header.Width);                      }                        break;              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ProcessDefilteredScanline,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      int factor = 255 / ((int)Math.Pow(2' this.header.BitDepth) - 1);                      ReadOnlySpan<byte> newScanline1 = ToArrayByBitsLength(scanlineBuffer' this.bytesPerScanline' this.header.BitDepth);                        for (int x = 0; x < this.header.Width; x++)                      {                          byte intensity = (byte)(newScanline1[x] * factor);                          if (this.hasTrans && intensity == this.intensityTrans)                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)0);                          }                          else                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)255);                          }                            rowSpan[x] = color;                      }                        break;                    case PngColorType.GrayscaleWithAlpha:                        for (int x = 0; x < this.header.Width; x++)                      {                          int offset = x * this.bytesPerPixel;                            byte intensity = scanlineBuffer[offset];                          byte alpha = scanlineBuffer[offset + this.bytesPerSample];                          color = new Bgra32(intensity' intensity' intensity' alpha);                          rowSpan[x] = color;                      }                        break;                    case PngColorType.Palette:                        this.ProcessScanlineFromPalette(scanlineBuffer' rowSpan);                        break;                    case PngColorType.Rgb:                        if (!this.hasTrans)                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                  rowSpan.PackFromRgb24Bytes(compressed.Span' this.header.Width);                              }                          }                          else                          {                              rowSpan.PackFromRgb24Bytes(scanlineBuffer' this.header.Width);                          }                      }                      else                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                    Span<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(compressed.Span);                                  for (int x = 0; x < this.header.Width; x++)                                  {                                      ref Rgb24 rgb24 = ref rgb24Span[x];                                      color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                      rowSpan[x] = color;                                  }                              }                          }                          else                          {                              ReadOnlySpan<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(scanlineBuffer);                              for (int x = 0; x < this.header.Width; x++)                              {                                  ref readonly Rgb24 rgb24 = ref rgb24Span[x];                                  color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                  rowSpan[x] = color;                              }                          }                      }                        break;                    case PngColorType.RgbWithAlpha:                        if (this.header.BitDepth == 16)                      {                          int length = this.header.Width * 4;                          using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                          {                              // TODO: Should we use pack from vector here instead?                              this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                              rowSpan.PackFromRgba32Bytes(compressed.Span' this.header.Width);                          }                      }                      else                      {                          rowSpan.PackFromRgba32Bytes(scanlineBuffer' this.header.Width);                      }                        break;              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ProcessDefilteredScanline,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      int factor = 255 / ((int)Math.Pow(2' this.header.BitDepth) - 1);                      ReadOnlySpan<byte> newScanline1 = ToArrayByBitsLength(scanlineBuffer' this.bytesPerScanline' this.header.BitDepth);                        for (int x = 0; x < this.header.Width; x++)                      {                          byte intensity = (byte)(newScanline1[x] * factor);                          if (this.hasTrans && intensity == this.intensityTrans)                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)0);                          }                          else                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)255);                          }                            rowSpan[x] = color;                      }                        break;                    case PngColorType.GrayscaleWithAlpha:                        for (int x = 0; x < this.header.Width; x++)                      {                          int offset = x * this.bytesPerPixel;                            byte intensity = scanlineBuffer[offset];                          byte alpha = scanlineBuffer[offset + this.bytesPerSample];                          color = new Bgra32(intensity' intensity' intensity' alpha);                          rowSpan[x] = color;                      }                        break;                    case PngColorType.Palette:                        this.ProcessScanlineFromPalette(scanlineBuffer' rowSpan);                        break;                    case PngColorType.Rgb:                        if (!this.hasTrans)                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                  rowSpan.PackFromRgb24Bytes(compressed.Span' this.header.Width);                              }                          }                          else                          {                              rowSpan.PackFromRgb24Bytes(scanlineBuffer' this.header.Width);                          }                      }                      else                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                    Span<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(compressed.Span);                                  for (int x = 0; x < this.header.Width; x++)                                  {                                      ref Rgb24 rgb24 = ref rgb24Span[x];                                      color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                      rowSpan[x] = color;                                  }                              }                          }                          else                          {                              ReadOnlySpan<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(scanlineBuffer);                              for (int x = 0; x < this.header.Width; x++)                              {                                  ref readonly Rgb24 rgb24 = ref rgb24Span[x];                                  color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                  rowSpan[x] = color;                              }                          }                      }                        break;                    case PngColorType.RgbWithAlpha:                        if (this.header.BitDepth == 16)                      {                          int length = this.header.Width * 4;                          using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                          {                              // TODO: Should we use pack from vector here instead?                              this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                              rowSpan.PackFromRgba32Bytes(compressed.Span' this.header.Width);                          }                      }                      else                      {                          rowSpan.PackFromRgba32Bytes(scanlineBuffer' this.header.Width);                      }                        break;              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ProcessDefilteredScanline,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      int factor = 255 / ((int)Math.Pow(2' this.header.BitDepth) - 1);                      ReadOnlySpan<byte> newScanline1 = ToArrayByBitsLength(scanlineBuffer' this.bytesPerScanline' this.header.BitDepth);                        for (int x = 0; x < this.header.Width; x++)                      {                          byte intensity = (byte)(newScanline1[x] * factor);                          if (this.hasTrans && intensity == this.intensityTrans)                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)0);                          }                          else                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)255);                          }                            rowSpan[x] = color;                      }                        break;                    case PngColorType.GrayscaleWithAlpha:                        for (int x = 0; x < this.header.Width; x++)                      {                          int offset = x * this.bytesPerPixel;                            byte intensity = scanlineBuffer[offset];                          byte alpha = scanlineBuffer[offset + this.bytesPerSample];                          color = new Bgra32(intensity' intensity' intensity' alpha);                          rowSpan[x] = color;                      }                        break;                    case PngColorType.Palette:                        this.ProcessScanlineFromPalette(scanlineBuffer' rowSpan);                        break;                    case PngColorType.Rgb:                        if (!this.hasTrans)                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                  rowSpan.PackFromRgb24Bytes(compressed.Span' this.header.Width);                              }                          }                          else                          {                              rowSpan.PackFromRgb24Bytes(scanlineBuffer' this.header.Width);                          }                      }                      else                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                    Span<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(compressed.Span);                                  for (int x = 0; x < this.header.Width; x++)                                  {                                      ref Rgb24 rgb24 = ref rgb24Span[x];                                      color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                      rowSpan[x] = color;                                  }                              }                          }                          else                          {                              ReadOnlySpan<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(scanlineBuffer);                              for (int x = 0; x < this.header.Width; x++)                              {                                  ref readonly Rgb24 rgb24 = ref rgb24Span[x];                                  color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                  rowSpan[x] = color;                              }                          }                      }                        break;                    case PngColorType.RgbWithAlpha:                        if (this.header.BitDepth == 16)                      {                          int length = this.header.Width * 4;                          using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                          {                              // TODO: Should we use pack from vector here instead?                              this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                              rowSpan.PackFromRgba32Bytes(compressed.Span' this.header.Width);                          }                      }                      else                      {                          rowSpan.PackFromRgba32Bytes(scanlineBuffer' this.header.Width);                      }                        break;              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,From16BitTo8Bit,The following statement contains a magic number: target[i] = (byte)((source[j + 1] << 8) + source[j]);
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,AssignTransparentMarkers,The following statement contains a magic number: byte g = (byte)ReadIntFrom2Bytes(alpha' 2);
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,AssignTransparentMarkers,The following statement contains a magic number: byte b = (byte)ReadIntFrom2Bytes(alpha' 4);
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,AssignTransparentMarkers,The following statement contains a magic number: alpha.Length >= 6
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ReadHeaderChunk,The following statement contains a magic number: this.header = new PngHeader(                  width: BinaryPrimitives.ReadInt32BigEndian(data.Slice(0' 4))'                  height: BinaryPrimitives.ReadInt32BigEndian(data.Slice(4' 4))'                  bitDepth: data[8]'                  colorType: (PngColorType)data[9]'                  compressionMethod: data[10]'                  filterMethod: data[11]'                  interlaceMethod: (PngInterlaceMode)data[12]);
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ReadHeaderChunk,The following statement contains a magic number: this.header = new PngHeader(                  width: BinaryPrimitives.ReadInt32BigEndian(data.Slice(0' 4))'                  height: BinaryPrimitives.ReadInt32BigEndian(data.Slice(4' 4))'                  bitDepth: data[8]'                  colorType: (PngColorType)data[9]'                  compressionMethod: data[10]'                  filterMethod: data[11]'                  interlaceMethod: (PngInterlaceMode)data[12]);
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ReadHeaderChunk,The following statement contains a magic number: this.header = new PngHeader(                  width: BinaryPrimitives.ReadInt32BigEndian(data.Slice(0' 4))'                  height: BinaryPrimitives.ReadInt32BigEndian(data.Slice(4' 4))'                  bitDepth: data[8]'                  colorType: (PngColorType)data[9]'                  compressionMethod: data[10]'                  filterMethod: data[11]'                  interlaceMethod: (PngInterlaceMode)data[12]);
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ReadHeaderChunk,The following statement contains a magic number: this.header = new PngHeader(                  width: BinaryPrimitives.ReadInt32BigEndian(data.Slice(0' 4))'                  height: BinaryPrimitives.ReadInt32BigEndian(data.Slice(4' 4))'                  bitDepth: data[8]'                  colorType: (PngColorType)data[9]'                  compressionMethod: data[10]'                  filterMethod: data[11]'                  interlaceMethod: (PngInterlaceMode)data[12]);
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ReadHeaderChunk,The following statement contains a magic number: this.header = new PngHeader(                  width: BinaryPrimitives.ReadInt32BigEndian(data.Slice(0' 4))'                  height: BinaryPrimitives.ReadInt32BigEndian(data.Slice(4' 4))'                  bitDepth: data[8]'                  colorType: (PngColorType)data[9]'                  compressionMethod: data[10]'                  filterMethod: data[11]'                  interlaceMethod: (PngInterlaceMode)data[12]);
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ReadHeaderChunk,The following statement contains a magic number: this.header = new PngHeader(                  width: BinaryPrimitives.ReadInt32BigEndian(data.Slice(0' 4))'                  height: BinaryPrimitives.ReadInt32BigEndian(data.Slice(4' 4))'                  bitDepth: data[8]'                  colorType: (PngColorType)data[9]'                  compressionMethod: data[10]'                  filterMethod: data[11]'                  interlaceMethod: (PngInterlaceMode)data[12]);
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ReadHeaderChunk,The following statement contains a magic number: this.header = new PngHeader(                  width: BinaryPrimitives.ReadInt32BigEndian(data.Slice(0' 4))'                  height: BinaryPrimitives.ReadInt32BigEndian(data.Slice(4' 4))'                  bitDepth: data[8]'                  colorType: (PngColorType)data[9]'                  compressionMethod: data[10]'                  filterMethod: data[11]'                  interlaceMethod: (PngInterlaceMode)data[12]);
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ReadHeaderChunk,The following statement contains a magic number: this.header = new PngHeader(                  width: BinaryPrimitives.ReadInt32BigEndian(data.Slice(0' 4))'                  height: BinaryPrimitives.ReadInt32BigEndian(data.Slice(4' 4))'                  bitDepth: data[8]'                  colorType: (PngColorType)data[9]'                  compressionMethod: data[10]'                  filterMethod: data[11]'                  interlaceMethod: (PngInterlaceMode)data[12]);
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,TryReadChunk,The following statement contains a magic number: this.currentStream.Position -= 3;
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ValidateChunk,The following statement contains a magic number: string chunkTypeName = Encoding.UTF8.GetString(this.chunkTypeBuffer' 0' 4);
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ReadChunkCrc,The following statement contains a magic number: int numBytes = this.currentStream.Read(this.crcBuffer' 0' 4);
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ReadChunkCrc,The following statement contains a magic number: numBytes >= 1 && numBytes <= 3
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,SkipChunkDataAndCrc,The following statement contains a magic number: this.currentStream.Skip(4);
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ReadChunkType,The following statement contains a magic number: int numBytes = this.currentStream.Read(this.chunkTypeBuffer' 0' 4);
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ReadChunkType,The following statement contains a magic number: numBytes >= 1 && numBytes <= 3
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ReadChunkLength,The following statement contains a magic number: int numBytes = this.currentStream.Read(this.chunkLengthBuffer' 0' 4);
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ReadChunkLength,The following statement contains a magic number: numBytes < 4
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ComputeColumnsAdam7,The following statement contains a magic number: switch (passIndex)              {                  case 0: return (width + 7) / 8;                  case 1: return (width + 3) / 8;                  case 2: return (width + 3) / 4;                  case 3: return (width + 1) / 4;                  case 4: return (width + 1) / 2;                  case 5: return width / 2;                  case 6: return width;                  default: throw new ArgumentException($"Not a valid pass index: {passIndex}");              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ComputeColumnsAdam7,The following statement contains a magic number: switch (passIndex)              {                  case 0: return (width + 7) / 8;                  case 1: return (width + 3) / 8;                  case 2: return (width + 3) / 4;                  case 3: return (width + 1) / 4;                  case 4: return (width + 1) / 2;                  case 5: return width / 2;                  case 6: return width;                  default: throw new ArgumentException($"Not a valid pass index: {passIndex}");              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ComputeColumnsAdam7,The following statement contains a magic number: switch (passIndex)              {                  case 0: return (width + 7) / 8;                  case 1: return (width + 3) / 8;                  case 2: return (width + 3) / 4;                  case 3: return (width + 1) / 4;                  case 4: return (width + 1) / 2;                  case 5: return width / 2;                  case 6: return width;                  default: throw new ArgumentException($"Not a valid pass index: {passIndex}");              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ComputeColumnsAdam7,The following statement contains a magic number: switch (passIndex)              {                  case 0: return (width + 7) / 8;                  case 1: return (width + 3) / 8;                  case 2: return (width + 3) / 4;                  case 3: return (width + 1) / 4;                  case 4: return (width + 1) / 2;                  case 5: return width / 2;                  case 6: return width;                  default: throw new ArgumentException($"Not a valid pass index: {passIndex}");              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ComputeColumnsAdam7,The following statement contains a magic number: switch (passIndex)              {                  case 0: return (width + 7) / 8;                  case 1: return (width + 3) / 8;                  case 2: return (width + 3) / 4;                  case 3: return (width + 1) / 4;                  case 4: return (width + 1) / 2;                  case 5: return width / 2;                  case 6: return width;                  default: throw new ArgumentException($"Not a valid pass index: {passIndex}");              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ComputeColumnsAdam7,The following statement contains a magic number: switch (passIndex)              {                  case 0: return (width + 7) / 8;                  case 1: return (width + 3) / 8;                  case 2: return (width + 3) / 4;                  case 3: return (width + 1) / 4;                  case 4: return (width + 1) / 2;                  case 5: return width / 2;                  case 6: return width;                  default: throw new ArgumentException($"Not a valid pass index: {passIndex}");              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ComputeColumnsAdam7,The following statement contains a magic number: switch (passIndex)              {                  case 0: return (width + 7) / 8;                  case 1: return (width + 3) / 8;                  case 2: return (width + 3) / 4;                  case 3: return (width + 1) / 4;                  case 4: return (width + 1) / 2;                  case 5: return width / 2;                  case 6: return width;                  default: throw new ArgumentException($"Not a valid pass index: {passIndex}");              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ComputeColumnsAdam7,The following statement contains a magic number: switch (passIndex)              {                  case 0: return (width + 7) / 8;                  case 1: return (width + 3) / 8;                  case 2: return (width + 3) / 4;                  case 3: return (width + 1) / 4;                  case 4: return (width + 1) / 2;                  case 5: return width / 2;                  case 6: return width;                  default: throw new ArgumentException($"Not a valid pass index: {passIndex}");              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ComputeColumnsAdam7,The following statement contains a magic number: switch (passIndex)              {                  case 0: return (width + 7) / 8;                  case 1: return (width + 3) / 8;                  case 2: return (width + 3) / 4;                  case 3: return (width + 1) / 4;                  case 4: return (width + 1) / 2;                  case 5: return width / 2;                  case 6: return width;                  default: throw new ArgumentException($"Not a valid pass index: {passIndex}");              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ComputeColumnsAdam7,The following statement contains a magic number: switch (passIndex)              {                  case 0: return (width + 7) / 8;                  case 1: return (width + 3) / 8;                  case 2: return (width + 3) / 4;                  case 3: return (width + 1) / 4;                  case 4: return (width + 1) / 2;                  case 5: return width / 2;                  case 6: return width;                  default: throw new ArgumentException($"Not a valid pass index: {passIndex}");              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ComputeColumnsAdam7,The following statement contains a magic number: switch (passIndex)              {                  case 0: return (width + 7) / 8;                  case 1: return (width + 3) / 8;                  case 2: return (width + 3) / 4;                  case 3: return (width + 1) / 4;                  case 4: return (width + 1) / 2;                  case 5: return width / 2;                  case 6: return width;                  default: throw new ArgumentException($"Not a valid pass index: {passIndex}");              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ComputeColumnsAdam7,The following statement contains a magic number: switch (passIndex)              {                  case 0: return (width + 7) / 8;                  case 1: return (width + 3) / 8;                  case 2: return (width + 3) / 4;                  case 3: return (width + 1) / 4;                  case 4: return (width + 1) / 2;                  case 5: return width / 2;                  case 6: return width;                  default: throw new ArgumentException($"Not a valid pass index: {passIndex}");              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ComputeColumnsAdam7,The following statement contains a magic number: switch (passIndex)              {                  case 0: return (width + 7) / 8;                  case 1: return (width + 3) / 8;                  case 2: return (width + 3) / 4;                  case 3: return (width + 1) / 4;                  case 4: return (width + 1) / 2;                  case 5: return width / 2;                  case 6: return width;                  default: throw new ArgumentException($"Not a valid pass index: {passIndex}");              }
Magic Number,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ComputeColumnsAdam7,The following statement contains a magic number: switch (passIndex)              {                  case 0: return (width + 7) / 8;                  case 1: return (width + 3) / 8;                  case 2: return (width + 3) / 4;                  case 3: return (width + 1) / 4;                  case 4: return (width + 1) / 2;                  case 5: return width / 2;                  case 6: return width;                  default: throw new ArgumentException($"Not a valid pass index: {passIndex}");              }
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,Encode,The following statement contains a magic number: this.bitDepth = 8;
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,CollectGrayscaleBytes,The following statement contains a magic number: byte luminance = (byte)((0.299F * bgra.Red) + (0.587F * bgra.Green) + (0.114F * bgra.Blue));
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,CollectGrayscaleBytes,The following statement contains a magic number: byte luminance = (byte)((0.299F * bgra.Red) + (0.587F * bgra.Green) + (0.114F * bgra.Blue));
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,CollectGrayscaleBytes,The following statement contains a magic number: byte luminance = (byte)((0.299F * bgra.Red) + (0.587F * bgra.Green) + (0.114F * bgra.Blue));
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,CollectTPixelBytes,The following statement contains a magic number: this.bytesPerPixel == 4
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,CollectTPixelBytes,The following statement contains a magic number: rawScanlineArray[offset + i] = i < 2 ? val : (Byte)0xFF;
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,GetOptimalFilteredScanline,The following statement contains a magic number: this.pngColorType == PngColorType.Palette || this.bitDepth < 8
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,CalculateBytesPerPixel,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      return 1;                    case PngColorType.GrayscaleWithAlpha:                      return 2;                    case PngColorType.Palette:                      return 1;                    case PngColorType.Rgb:                      return 3;                    // PngColorType.RgbWithAlpha                  // TODO: Maybe figure out a way to detect if there are any transparent                  // pixels and encode RGB if none.                  default:                      return 4;              }
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,CalculateBytesPerPixel,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      return 1;                    case PngColorType.GrayscaleWithAlpha:                      return 2;                    case PngColorType.Palette:                      return 1;                    case PngColorType.Rgb:                      return 3;                    // PngColorType.RgbWithAlpha                  // TODO: Maybe figure out a way to detect if there are any transparent                  // pixels and encode RGB if none.                  default:                      return 4;              }
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,CalculateBytesPerPixel,The following statement contains a magic number: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      return 1;                    case PngColorType.GrayscaleWithAlpha:                      return 2;                    case PngColorType.Palette:                      return 1;                    case PngColorType.Rgb:                      return 3;                    // PngColorType.RgbWithAlpha                  // TODO: Maybe figure out a way to detect if there are any transparent                  // pixels and encode RGB if none.                  default:                      return 4;              }
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,WriteHeaderChunk,The following statement contains a magic number: BinaryPrimitives.WriteInt32BigEndian(this.chunkDataBuffer.AsSpan(0' 4)' header.Width);
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,WriteHeaderChunk,The following statement contains a magic number: BinaryPrimitives.WriteInt32BigEndian(this.chunkDataBuffer.AsSpan(4' 4)' header.Height);
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,WriteHeaderChunk,The following statement contains a magic number: BinaryPrimitives.WriteInt32BigEndian(this.chunkDataBuffer.AsSpan(4' 4)' header.Height);
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,WriteHeaderChunk,The following statement contains a magic number: this.chunkDataBuffer[8] = header.BitDepth;
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,WriteHeaderChunk,The following statement contains a magic number: this.chunkDataBuffer[9] = (byte)header.ColorType;
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,WriteHeaderChunk,The following statement contains a magic number: this.chunkDataBuffer[10] = header.CompressionMethod;
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,WriteHeaderChunk,The following statement contains a magic number: this.chunkDataBuffer[11] = header.FilterMethod;
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,WriteHeaderChunk,The following statement contains a magic number: this.chunkDataBuffer[12] = (byte)header.InterlaceMethod;
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,WriteHeaderChunk,The following statement contains a magic number: this.WriteChunk(stream' PngChunkType.Header' this.chunkDataBuffer' 0' 13);
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,WriteGammaChunk,The following statement contains a magic number: BinaryPrimitives.WriteUInt32BigEndian(this.chunkDataBuffer.AsSpan(0' 4)' gammaValue);
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,WriteGammaChunk,The following statement contains a magic number: this.WriteChunk(stream' PngChunkType.Gamma' this.chunkDataBuffer' 0' 4);
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,EncodePixelRow,The following statement contains a magic number: image.BytesPerPixel == 4
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,WriteChunk,The following statement contains a magic number: BinaryPrimitives.WriteUInt32BigEndian(this.buffer.AsSpan(4' 4)' (uint)type);
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,WriteChunk,The following statement contains a magic number: BinaryPrimitives.WriteUInt32BigEndian(this.buffer.AsSpan(4' 4)' (uint)type);
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,WriteChunk,The following statement contains a magic number: stream.Write(this.buffer' 0' 8);
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,WriteChunk,The following statement contains a magic number: this.crc.Update(this.buffer.AsSpan(4' 4));
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,WriteChunk,The following statement contains a magic number: this.crc.Update(this.buffer.AsSpan(4' 4));
Magic Number,Geb.Image.Formats.Png,PngEncoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngEncoderCore.cs,WriteChunk,The following statement contains a magic number: stream.Write(this.buffer' 0' 4);
Magic Number,Geb.Image.Formats.Png.Zlib,Adler32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\Adler32.cs,Update,The following statement contains a magic number: uint s2 = this.checksum >> 16;
Magic Number,Geb.Image.Formats.Png.Zlib,Adler32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\Adler32.cs,Update,The following statement contains a magic number: this.checksum = (s2 << 16) + s1;
Magic Number,Geb.Image.Formats.Png.Zlib,Adler32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\Adler32.cs,Update,The following statement contains a magic number: uint s2 = this.checksum >> 16;
Magic Number,Geb.Image.Formats.Png.Zlib,Adler32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\Adler32.cs,Update,The following statement contains a magic number: int n = 3800;
Magic Number,Geb.Image.Formats.Png.Zlib,Adler32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\Adler32.cs,Update,The following statement contains a magic number: this.checksum = (s2 << 16) | s1;
Magic Number,Geb.Image.Formats.Png.Zlib,Crc32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\Crc32.cs,Update,The following statement contains a magic number: this.crc = CrcTable[(this.crc ^ value) & 0xFF] ^ (this.crc >> 8);
Magic Number,Geb.Image.Formats.Png.Zlib,Crc32,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\Crc32.cs,Update,The following statement contains a magic number: this.crc = CrcTable[(this.crc ^ data[i]) & 0xFF] ^ (this.crc >> 8);
Magic Number,Geb.Image.Formats.Png.Zlib,ZlibDeflateStream,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\ZlibDeflateStream.cs,ZlibDeflateStream,The following statement contains a magic number: int flg = 218;
Magic Number,Geb.Image.Formats.Png.Zlib,ZlibDeflateStream,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\ZlibDeflateStream.cs,ZlibDeflateStream,The following statement contains a magic number: flg = 156;
Magic Number,Geb.Image.Formats.Png.Zlib,ZlibDeflateStream,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\ZlibDeflateStream.cs,ZlibDeflateStream,The following statement contains a magic number: compressionLevel >= 5 && compressionLevel <= 6
Magic Number,Geb.Image.Formats.Png.Zlib,ZlibDeflateStream,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\ZlibDeflateStream.cs,ZlibDeflateStream,The following statement contains a magic number: compressionLevel >= 5 && compressionLevel <= 6
Magic Number,Geb.Image.Formats.Png.Zlib,ZlibDeflateStream,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\ZlibDeflateStream.cs,ZlibDeflateStream,The following statement contains a magic number: flg -= ((cmf * 256) + flg) % 31;
Magic Number,Geb.Image.Formats.Png.Zlib,ZlibDeflateStream,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\ZlibDeflateStream.cs,ZlibDeflateStream,The following statement contains a magic number: flg -= ((cmf * 256) + flg) % 31;
Magic Number,Geb.Image.Formats.Png.Zlib,ZlibDeflateStream,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\ZlibDeflateStream.cs,ZlibDeflateStream,The following statement contains a magic number: flg += 31;
Magic Number,Geb.Image.Formats.Png.Zlib,ZlibDeflateStream,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\ZlibDeflateStream.cs,ZlibDeflateStream,The following statement contains a magic number: compressionLevel >= 1 && compressionLevel <= 5
Magic Number,Geb.Image.Formats.Png.Zlib,ZlibDeflateStream,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\ZlibDeflateStream.cs,Dispose,The following statement contains a magic number: this.rawStream.WriteByte((byte)((crc >> 24) & 0xFF));
Magic Number,Geb.Image.Formats.Png.Zlib,ZlibDeflateStream,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\ZlibDeflateStream.cs,Dispose,The following statement contains a magic number: this.rawStream.WriteByte((byte)((crc >> 16) & 0xFF));
Magic Number,Geb.Image.Formats.Png.Zlib,ZlibDeflateStream,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\ZlibDeflateStream.cs,Dispose,The following statement contains a magic number: this.rawStream.WriteByte((byte)((crc >> 8) & 0xFF));
Magic Number,Geb.Image.Formats.Png.Zlib,ZlibInflateStream,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\ZlibInflateStream.cs,Dispose,The following statement contains a magic number: this.innerStream.Read(ChecksumBuffer' 0' 4);
Magic Number,Geb.Image.Formats.Png.Zlib,ZlibInflateStream,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\ZlibInflateStream.cs,Dispose,The following statement contains a magic number: this.currentDataRemaining -= 4;
Magic Number,Geb.Image.Formats.Png.Zlib,ZlibInflateStream,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\ZlibInflateStream.cs,InitializeInflateStream,The following statement contains a magic number: this.currentDataRemaining -= 2;
Magic Number,Geb.Image.Formats.Png.Zlib,ZlibInflateStream,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\ZlibInflateStream.cs,InitializeInflateStream,The following statement contains a magic number: int cinfo = (cmf & 0xF0) >> 4;
Magic Number,Geb.Image.Formats.Png.Zlib,ZlibInflateStream,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\ZlibInflateStream.cs,InitializeInflateStream,The following statement contains a magic number: cinfo > 7
Magic Number,Geb.Image.Formats.Png.Zlib,ZlibInflateStream,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\ZlibInflateStream.cs,InitializeInflateStream,The following statement contains a magic number: (cmf & 0x0F) == 8
Magic Number,Geb.Image.Formats.Png.Zlib,ZlibInflateStream,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\ZlibInflateStream.cs,InitializeInflateStream,The following statement contains a magic number: bool fdict = (flag & 32) != 0;
Magic Number,Geb.Image.Formats.Png.Zlib,ZlibInflateStream,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\ZlibInflateStream.cs,InitializeInflateStream,The following statement contains a magic number: this.innerStream.Read(ChecksumBuffer' 0' 4);
Magic Number,Geb.Image.Formats.Png.Zlib,ZlibInflateStream,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\Zlib\ZlibInflateStream.cs,InitializeInflateStream,The following statement contains a magic number: this.currentDataRemaining -= 4;
Magic Number,Geb.Image.Hidden,ImageFilter_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__ImageFilter_Template.cs,ApplyConvolution,The following statement contains a magic number: int extend = Math.Max(kernelWidth' kernelHeight) / 2;
Magic Number,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,CopyFrom,The following statement contains a magic number: pSrc->Alpha == 255 || pDst->Alpha == 0
Magic Number,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,ApplyModeFilter,The following statement contains a magic number: int radius = size / 2;
Magic Number,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,DrawLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,DrawLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,DrawLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dy = dy * 2;
Magic Number,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,ForEachPixelsOnLine,The following statement contains a magic number: int n2dydx = (dy - dx) * 2;
Magic Number,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,ForEachPixelsOnLine,The following statement contains a magic number: int d = dy * 2 - dx;
Magic Number,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaY) < 0.0001
Magic Number,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,DrawLine,The following statement contains a magic number: Math.Abs(deltaX) < 0.0001
Magic Number,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,DrawText,The following statement contains a magic number: int base_line = +(ascii[0] & 15);
Magic Number,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,DrawText,The following statement contains a magic number: List<PointS> pts = new List<PointS>(1 << 10);
Magic Number,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,DrawText,The following statement contains a magic number: c >= 127 || c < ' '
Magic Number,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,CreatePaddingImage,The following statement contains a magic number: TImage img = new TImage(Width + paddingSize * 2' Height + paddingSize * 2);
Magic Number,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,CreatePaddingImage,The following statement contains a magic number: int extendWidth = this.Width + paddingSize * 2;
Magic Number,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,CreatePaddingImage,The following statement contains a magic number: int extendHeight = this.Height + paddingSize * 2;
Magic Number,Geb.Image.Hidden,Image_Template,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,ApplyBiExponentialEdgePreservingSmoother,The following statement contains a magic number: double val = (data1[i] + data2[i]) * 0.5f;
Magic Number,Geb.Image.Hidden,BEEPSProgressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image.Hidden,BEEPSRegressive,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Image_Template.cs,setup,The following statement contains a magic number: c = -0.5 / (photometricStandardDeviation * photometricStandardDeviation);
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidUp,The following statement contains a magic number: int ww = width / 2;
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidUp,The following statement contains a magic number: int hh = height / 2;
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidUp,The following statement contains a magic number: hSrc = 2 * h;
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidUp,The following statement contains a magic number: wSrc = 2 * w;
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidUp,The following statement contains a magic number: hSrc < 2 || hSrc > height - 3 || wSrc < 2 || wSrc > width - 3
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidUp,The following statement contains a magic number: hSrc < 2 || hSrc > height - 3 || wSrc < 2 || wSrc > width - 3
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidUp,The following statement contains a magic number: hSrc < 2 || hSrc > height - 3 || wSrc < 2 || wSrc > width - 3
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidUp,The following statement contains a magic number: hSrc < 2 || hSrc > height - 3 || wSrc < 2 || wSrc > width - 3
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidDown,The following statement contains a magic number: int ww = width * 2;
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidDown,The following statement contains a magic number: int hh = height * 2;
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidDown,The following statement contains a magic number: hSrc = h / 2;
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidDown,The following statement contains a magic number: wSrc = w / 2;
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidDown,The following statement contains a magic number: wSrc = Math.Min(w / 2'width-2);
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidDown,The following statement contains a magic number: wSrc = Math.Min(w / 2'width-2);
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidDown,The following statement contains a magic number: hSrc = Math.Min(h / 2' height - 2);
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidDown,The following statement contains a magic number: hSrc = Math.Min(h / 2' height - 2);
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidDown,The following statement contains a magic number: wSrc = w / 2;
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidDown,The following statement contains a magic number: wSrc = Math.Min(w / 2' width - 2);
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidDown,The following statement contains a magic number: wSrc = Math.Min(w / 2' width - 2);
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidDown,The following statement contains a magic number: lineDst[w] = new TPixel((TChannel)((p0.Red + p1.Red + p2.Red + p3.Red) >> 2)'                          (TChannel)((p0.Green + p1.Green + p2.Green + p3.Green) >> 2)'                          (TChannel)((p0.Blue + p1.Blue + p2.Blue + p3.Blue) >> 2)'                          (TChannel)((p0.Alpha + p1.Alpha + p2.Alpha + p3.Alpha) >> 2));
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidDown,The following statement contains a magic number: lineDst[w] = new TPixel((TChannel)((p0.Red + p1.Red + p2.Red + p3.Red) >> 2)'                          (TChannel)((p0.Green + p1.Green + p2.Green + p3.Green) >> 2)'                          (TChannel)((p0.Blue + p1.Blue + p2.Blue + p3.Blue) >> 2)'                          (TChannel)((p0.Alpha + p1.Alpha + p2.Alpha + p3.Alpha) >> 2));
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidDown,The following statement contains a magic number: lineDst[w] = new TPixel((TChannel)((p0.Red + p1.Red + p2.Red + p3.Red) >> 2)'                          (TChannel)((p0.Green + p1.Green + p2.Green + p3.Green) >> 2)'                          (TChannel)((p0.Blue + p1.Blue + p2.Blue + p3.Blue) >> 2)'                          (TChannel)((p0.Alpha + p1.Alpha + p2.Alpha + p3.Alpha) >> 2));
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,GaussPyramidDown,The following statement contains a magic number: lineDst[w] = new TPixel((TChannel)((p0.Red + p1.Red + p2.Red + p3.Red) >> 2)'                          (TChannel)((p0.Green + p1.Green + p2.Green + p3.Green) >> 2)'                          (TChannel)((p0.Blue + p1.Blue + p2.Blue + p3.Blue) >> 2)'                          (TChannel)((p0.Alpha + p1.Alpha + p2.Alpha + p3.Alpha) >> 2));
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,FastPyramidUp4X,The following statement contains a magic number: int ww = width / 4;
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,FastPyramidUp4X,The following statement contains a magic number: int hh = height / 4;
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,FastPyramidUp4X,The following statement contains a magic number: lineSrc = imgStart + 4 * h * width;
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,FastPyramidUp4X,The following statement contains a magic number: lineDst[w] = lineSrc[4 * w];
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,FastPyramidUp3X,The following statement contains a magic number: int ww = width / 3;
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,FastPyramidUp3X,The following statement contains a magic number: int hh = height / 3;
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,FastPyramidUp3X,The following statement contains a magic number: lineSrc = imgStart +  3 * h * width;
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,FastPyramidUp3X,The following statement contains a magic number: lineDst[w] = lineSrc[3 * w];
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,FastPyramidUp2X,The following statement contains a magic number: int ww = width / 2;
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,FastPyramidUp2X,The following statement contains a magic number: int hh = height / 2;
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,FastPyramidUp2X,The following statement contains a magic number: lineSrc = imgStart + 2 * h * width;
Magic Number,Geb.Image.Hidden,Image_Paramid_Argb_Templete,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\Templates\__Paramid_Templete.cs,FastPyramidUp2X,The following statement contains a magic number: lineDst[w] = lineSrc[2 * w];
Magic Number,Geb.Image.Sampling,ImageSamplingAlgorithm,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Utils\ImageSamplingAlgorithm.cs,RandomUniformSampling,The following statement contains a magic number: srcList = srcList.GetRange(0' count * 3);
Magic Number,Geb.Image.Sampling,ImageSamplingAlgorithm,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Utils\ImageSamplingAlgorithm.cs,RandomUniformSampling,The following statement contains a magic number: srcList.Count > count * 3
Magic Number,Geb.Image.Sampling,ImageSamplingAlgorithm,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Utils\ImageSamplingAlgorithm.cs,RandomUniformSampling,The following statement contains a magic number: List<PairDistance> list = new List<PairDistance>(srcList.Count * (1 + srcList.Count / 2));
Missing Default,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,The following switch statement is missing a default case: switch (orients[o])                          {                              case 0:                                  leftPixel = gradients[y' x - 1];                                  rightPixel = gradients[y' x + 1];                                  break;                              case 45:                                  leftPixel = gradients[y + 1' x - 1];                                  rightPixel = gradients[y - 1' x + 1];                                  break;                              case 90:                                  leftPixel = gradients[y + 1' x];                                  rightPixel = gradients[y - 1' x];                                  break;                              case 135:                                  leftPixel = gradients[y + 1' x + 1];                                  rightPixel = gradients[y - 1' x - 1];                                  break;                          }
Missing Default,Geb.Image,ImageU8,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\UnmanagedImage\ImageU8.cs,ApplyCannyEdgeDetector,The following switch statement is missing a default case: switch (orients[o])                          {                              case 0:                                  leftPixel = gradients[y' x - 1];                                  rightPixel = gradients[y' x + 1];                                  break;                              case 45:                                  leftPixel = gradients[y + 1' x - 1];                                  rightPixel = gradients[y - 1' x + 1];                                  break;                              case 90:                                  leftPixel = gradients[y + 1' x];                                  rightPixel = gradients[y - 1' x];                                  break;                              case 135:                                  leftPixel = gradients[y + 1' x + 1];                                  rightPixel = gradients[y - 1' x - 1];                                  break;                          }
Missing Default,Geb.Image.Formats.Gif,GifDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Gif\GifDecoderCore.cs,Identify,The following switch statement is missing a default case: switch (label)                          {                              case GifConstants.GraphicControlLabel:                                    // Skip graphic control extension block                                  this.Skip(0);                                  break;                              case GifConstants.CommentLabel:                                  this.ReadComments();                                  break;                              case GifConstants.ApplicationExtensionLabel:                                    // The application extension length should be 11 but we've got test images that incorrectly                                  // set this to 252.                                  int appLength = stream.ReadByte();                                  this.Skip(appLength); // No need to read.                                  break;                              case GifConstants.PlainTextLabel:                                  int plainLength = stream.ReadByte();                                  this.Skip(plainLength); // Not supported by any known decoder.                                  break;                          }
Missing Default,Geb.Image.Formats.Jpeg,BaseJpegEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\BaseJpegEncoder.cs,WriteStartOfFrame,The following switch statement is missing a default case: switch (this.subsample)                  {                      case JpegSubsample.Ratio444:                          subsamples = new byte[] { 0x11' 0x11' 0x11 };                          break;                      case JpegSubsample.Ratio420:                          subsamples = new byte[] { 0x22' 0x11' 0x11 };                          break;                  }
Missing Default,Geb.Image.Formats.Jpeg,Jpeg8YCbCrEncoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\Jpeg8Encoder.cs,WriteImageData,The following switch statement is missing a default case: switch (this.subsample)              {                  case JpegSubsample.Ratio444:                      this.Encode444(imageBgra32);                      break;                  case JpegSubsample.Ratio420:                      this.Encode420(imageBgra32);                      break;              }
Missing Default,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,TryFillBits,The following switch statement is missing a default case: switch (c)                      {                          case -0x1:                                // We've encountered the end of the file stream which means there's no EOI marker in the image.                              this.endOfStreamReached = true;                              return false;                            case JpegConstants.Markers.XFF:                              int nextByte = stream.ReadByte();                                if (nextByte == -0x1)                              {                                  this.endOfStreamReached = true;                                  return false;                              }                                if (nextByte != 0)                              {  #if DEBUG                                  Debug.WriteLine($"DecodeScan - Unexpected marker {(c << 8) | nextByte:X} at {stream.Position}");  #endif                                    // We've encountered an unexpected marker. Reverse the stream and exit.                                  this.unexpectedMarkerReached = true;                                  stream.Position -= 2;                                    // TODO: double check we need this.                                  // Fill buffer with zero bits.                                  if (this.bitsCount == 0)                                  {                                      this.bitsData <<= MinGetBits;                                      this.bitsCount = MinGetBits;                                  }                                    return true;                              }                                break;                      }
Missing Default,Geb.Image.Formats.Jpeg.PdfJsPort.Components,PdfJsScanDecoder,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\Components\PdfJsScanDecoder.cs,DecodeACSuccessive,The following switch statement is missing a default case: switch (this.successiveACState)                  {                      case 0: // Initial state                            if (!this.TryDecodeHuffman(ref acHuffmanTable' stream' out short rs))                          {                              return;                          }                            int s = rs & 15;                          r = rs >> 4;                          if (s == 0)                          {                              if (r < 15)                              {                                  if (!this.TryReceive(r' stream' out int eob))                                  {                                      return;                                  }                                    this.eobrun = eob + (1 << r);                                  this.successiveACState = 4;                              }                              else                              {                                  r = 16;                                  this.successiveACState = 1;                              }                          }                          else                          {                              if (s != 1)                              {                                  throw new ImageFormatException("Invalid ACn encoding");                              }                                if (!this.TryReceiveAndExtend(s' stream' out int v))                              {                                  return;                              }                                this.successiveACNextValue = v;                              this.successiveACState = r > 0 ? 2 : 3;                          }                            continue;                      case 1: // Skipping r zero items                      case 2:                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              r--;                              if (r == 0)                              {                                  this.successiveACState = this.successiveACState == 2 ? 3 : 0;                              }                          }                            break;                      case 3: // Set value for a zero item                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                          else                          {                              blockOffsetZRef = (short)(this.successiveACNextValue << this.successiveState);                              this.successiveACState = 0;                          }                            break;                      case 4: // Eob                          if (blockOffsetZRef != 0)                          {                              if (!this.TryReadBit(stream' out int bit))                              {                                  return;                              }                                blockOffsetZRef += (short)(sign * (bit << this.successiveState));                          }                            break;                  }
Missing Default,Geb.Image.Formats.Jpeg.PdfJsPort,PdfJsJpegDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Jpeg\PdfJsPort\PdfJsJpegDecoderCore.cs,ParseStream,The following switch statement is missing a default case: switch (fileMarker.Marker)                      {                          case JpegConstants.Markers.SOF0:                          case JpegConstants.Markers.SOF1:                          case JpegConstants.Markers.SOF2:                              this.ProcessStartOfFrameMarker(remaining' fileMarker' metadataOnly);                              break;                            case JpegConstants.Markers.SOS:                              if (!metadataOnly)                              {                                  this.ProcessStartOfScanMarker();                                  break;                              }                              else                              {                                  // It's highly unlikely that APPn related data will be found after the SOS marker                                  // We should have gathered everything we need by now.                                  return;                              }                            case JpegConstants.Markers.DHT:                              if (metadataOnly)                              {                                  this.InputStream.Skip(remaining);                              }                              else                              {                                  this.ProcessDefineHuffmanTablesMarker(remaining);                              }                                break;                            case JpegConstants.Markers.DQT:                              if (metadataOnly)                              {                                  this.InputStream.Skip(remaining);                              }                              else                              {                                  this.ProcessDefineQuantizationTablesMarker(remaining);                              }                                break;                            case JpegConstants.Markers.DRI:                              if (metadataOnly)                              {                                  this.InputStream.Skip(remaining);                              }                              else                              {                                  this.ProcessDefineRestartIntervalMarker(remaining);                              }                                break;                            case JpegConstants.Markers.APP0:                              this.ProcessApplicationHeaderMarker(remaining);                              break;                            case JpegConstants.Markers.APP1:                              this.ProcessApp1Marker(remaining);                              break;                            case JpegConstants.Markers.APP2:                              this.ProcessApp2Marker(remaining);                              break;                            case JpegConstants.Markers.APP3:                          case JpegConstants.Markers.APP4:                          case JpegConstants.Markers.APP5:                          case JpegConstants.Markers.APP6:                          case JpegConstants.Markers.APP7:                          case JpegConstants.Markers.APP8:                          case JpegConstants.Markers.APP9:                          case JpegConstants.Markers.APP10:                          case JpegConstants.Markers.APP11:                          case JpegConstants.Markers.APP12:                          case JpegConstants.Markers.APP13:                              this.InputStream.Skip(remaining);                              break;                            case JpegConstants.Markers.APP14:                              this.ProcessApp14Marker(remaining);                              break;                            case JpegConstants.Markers.APP15:                          case JpegConstants.Markers.COM:                              this.InputStream.Skip(remaining);                              break;                      }
Missing Default,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,Decode,The following switch statement is missing a default case: switch (chunk.Type)                              {                                  case PngChunkType.Header:                                      this.ReadHeaderChunk(chunk.Data.Array);                                      this.ValidateHeader();                                      break;                                  case PngChunkType.Physical:                                      this.ReadPhysicalChunk(metadata' chunk.Data.Array);                                      break;                                  case PngChunkType.Data:                                      if (image == null)                                      {                                          this.InitializeImage(metadata' out image);                                      }                                        deframeStream.AllocateNewBytes(chunk.Length);                                      this.ReadScanlines(deframeStream.CompressedStream' image);                                      this.currentStream.Read(this.crcBuffer' 0' 4);                                      break;                                  case PngChunkType.Palette:                                      byte[] pal = new byte[chunk.Length];                                      Buffer.BlockCopy(chunk.Data.Array' 0' pal' 0' chunk.Length);                                      this.palette = pal;                                      break;                                  case PngChunkType.PaletteAlpha:                                      byte[] alpha = new byte[chunk.Length];                                      Buffer.BlockCopy(chunk.Data.Array' 0' alpha' 0' chunk.Length);                                      this.paletteAlpha = alpha;                                      this.AssignTransparentMarkers(alpha);                                      break;                                  case PngChunkType.Text:                                      this.ReadTextChunk(metadata' chunk.Data.Array' chunk.Length);                                      break;                                  case PngChunkType.End:                                      this.isEndChunkReached = true;                                      break;                              }
Missing Default,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,Identify,The following switch statement is missing a default case: switch (chunk.Type)                          {                              case PngChunkType.Header:                                  this.ReadHeaderChunk(chunk.Data.Array);                                  this.ValidateHeader();                                  break;                              case PngChunkType.Physical:                                  this.ReadPhysicalChunk(metadata' chunk.Data.Array);                                  break;                              case PngChunkType.Data:                                  this.SkipChunkDataAndCrc(chunk);                                  break;                              case PngChunkType.Text:                                  this.ReadTextChunk(metadata' chunk.Data.Array' chunk.Length);                                  break;                              case PngChunkType.End:                                  this.isEndChunkReached = true;                                  break;                          }
Missing Default,Geb.Image.Formats.Png,PngDecoderCore,D:\research\architectureSmells\repos\xiaotie_GebImage\src\Geb.Image\Formats\Png\PngDecoderCore.cs,ProcessDefilteredScanline,The following switch statement is missing a default case: switch (this.pngColorType)              {                  case PngColorType.Grayscale:                      int factor = 255 / ((int)Math.Pow(2' this.header.BitDepth) - 1);                      ReadOnlySpan<byte> newScanline1 = ToArrayByBitsLength(scanlineBuffer' this.bytesPerScanline' this.header.BitDepth);                        for (int x = 0; x < this.header.Width; x++)                      {                          byte intensity = (byte)(newScanline1[x] * factor);                          if (this.hasTrans && intensity == this.intensityTrans)                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)0);                          }                          else                          {                              color = new Bgra32(intensity' intensity' intensity' (byte)255);                          }                            rowSpan[x] = color;                      }                        break;                    case PngColorType.GrayscaleWithAlpha:                        for (int x = 0; x < this.header.Width; x++)                      {                          int offset = x * this.bytesPerPixel;                            byte intensity = scanlineBuffer[offset];                          byte alpha = scanlineBuffer[offset + this.bytesPerSample];                          color = new Bgra32(intensity' intensity' intensity' alpha);                          rowSpan[x] = color;                      }                        break;                    case PngColorType.Palette:                        this.ProcessScanlineFromPalette(scanlineBuffer' rowSpan);                        break;                    case PngColorType.Rgb:                        if (!this.hasTrans)                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                  rowSpan.PackFromRgb24Bytes(compressed.Span' this.header.Width);                              }                          }                          else                          {                              rowSpan.PackFromRgb24Bytes(scanlineBuffer' this.header.Width);                          }                      }                      else                      {                          if (this.header.BitDepth == 16)                          {                              int length = this.header.Width * 3;                              using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                              {                                  // TODO: Should we use pack from vector here instead?                                  this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                                    Span<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(compressed.Span);                                  for (int x = 0; x < this.header.Width; x++)                                  {                                      ref Rgb24 rgb24 = ref rgb24Span[x];                                      color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                      rowSpan[x] = color;                                  }                              }                          }                          else                          {                              ReadOnlySpan<Rgb24> rgb24Span = MemoryMarshal.Cast<byte' Rgb24>(scanlineBuffer);                              for (int x = 0; x < this.header.Width; x++)                              {                                  ref readonly Rgb24 rgb24 = ref rgb24Span[x];                                  color = new Bgra32(rgb24.Blue' rgb24.Green' rgb24.Red' (byte)(rgb24.Equals(this.rgb24Trans) ? 0 : 255));                                  rowSpan[x] = color;                              }                          }                      }                        break;                    case PngColorType.RgbWithAlpha:                        if (this.header.BitDepth == 16)                      {                          int length = this.header.Width * 4;                          using (IBuffer<byte> compressed = this.configuration.MemoryManager.Allocate<byte>(length))                          {                              // TODO: Should we use pack from vector here instead?                              this.From16BitTo8Bit(scanlineBuffer' compressed.Span' length);                              rowSpan.PackFromRgba32Bytes(compressed.Span' this.header.Width);                          }                      }                      else                      {                          rowSpan.PackFromRgba32Bytes(scanlineBuffer' this.header.Width);                      }                        break;              }
