Implementation smell,Namespace,Class,File,Method,Description
Long Statement,HtmlMinifier,Program,C:\repos\deanhume_html-minifier\ViewMinifier\Program.cs,GetDirectories,The length of the statement  "            IEnumerable<string> directories = from subdirectory in Directory.GetDirectories(path' "*"' SearchOption.AllDirectories) select subdirectory; " is 140.
Magic Number,HtmlMinifier,StreamReaderExtension,C:\repos\deanhume_html-minifier\ViewMinifier\StreamReaderExtension.cs,ReArrangeDeclaration,The following statement contains a magic number: foreach (Match match in matches)              {                  int position = declaration.Length;                  int declarationPosition = match.Index;                    // If we have more than one match' we need to keep the counter moving everytime we add a new line                  if (matches.Count > 1 && alreadyMatched > 0)                  {                      // Cos we added one or more new line break \n\r                      declarationPosition += (2 * alreadyMatched);                  }                    while (declarationPosition >= 0)                  {                      // Move one forward                      position += 1;                      if (position > fileContents.Length) break;                      string substring = fileContents.Substring(declarationPosition' position);                        // Check if it contains a whitespace at the end                      if (substring.EndsWith(" ") || substring.EndsWith(">"))                      {                          if (bringToTop)                          {                              // First replace the occurence                              fileContents = fileContents.Replace(substring' "");                                // Next move it to the top on its own line                              fileContents = substring + Environment.NewLine + fileContents;                              break;                          }                          else                          {                              // Add a line break afterwards                              fileContents = fileContents.Replace(substring' substring + Environment.NewLine);                              alreadyMatched++;                              break;                          }                      }                  }              }
