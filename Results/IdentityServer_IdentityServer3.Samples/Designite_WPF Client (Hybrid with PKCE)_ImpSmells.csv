Implementation smell,Namespace,Class,File,Method,Description
Magic Number,WpfOidcClient,LoginWebView,C:\repos\IdentityServer_IdentityServer3.Samples\source\Clients\WpfOidcClient\LoginWebView.xaml.cs,CreateUrl,The following statement contains a magic number: _nonce = CryptoRandom.CreateUniqueId(32);
Magic Number,WpfOidcClient,LoginWebView,C:\repos\IdentityServer_IdentityServer3.Samples\source\Clients\WpfOidcClient\LoginWebView.xaml.cs,CreateUrl,The following statement contains a magic number: _verifier = CryptoRandom.CreateUniqueId(32);
Magic Number,WpfOidcClient,LoginWebView,C:\repos\IdentityServer_IdentityServer3.Samples\source\Clients\WpfOidcClient\LoginWebView.xaml.cs,ValidateCodeHash,The following statement contains a magic number: using (var sha = SHA256.Create())              {                  var codeHash = sha.ComputeHash(Encoding.ASCII.GetBytes(code));                  byte[] leftBytes = new byte[16];                  Array.Copy(codeHash' leftBytes' 16);                    var codeHashB64 = Base64Url.Encode(leftBytes);                    return string.Equals(c_hash' codeHashB64' StringComparison.Ordinal);              }
Magic Number,WpfOidcClient,LoginWebView,C:\repos\IdentityServer_IdentityServer3.Samples\source\Clients\WpfOidcClient\LoginWebView.xaml.cs,ValidateCodeHash,The following statement contains a magic number: using (var sha = SHA256.Create())              {                  var codeHash = sha.ComputeHash(Encoding.ASCII.GetBytes(code));                  byte[] leftBytes = new byte[16];                  Array.Copy(codeHash' leftBytes' 16);                    var codeHashB64 = Base64Url.Encode(leftBytes);                    return string.Equals(c_hash' codeHashB64' StringComparison.Ordinal);              }
Magic Number,WpfOidcClient,MainWindow,C:\repos\IdentityServer_IdentityServer3.Samples\source\Clients\WpfOidcClient\MainWindow.xaml.cs,_login_Done,The following statement contains a magic number: if (e.Success)              {                  var sb = new StringBuilder(128);                    foreach (var claim in e.User.Claims)                  {                      sb.AppendLine($"{claim.Type}: {claim.Value}");                  }                    sb.AppendLine();                    sb.AppendLine($"Identity token: {e.IdentityToken}");                  sb.AppendLine($"Access token: {e.AccessToken}");                  sb.AppendLine($"Access token expiration: {e.AccessTokenExpiration}");                  sb.AppendLine($"Refresh token: {e?.RefreshToken ?? "none" }");                    IdentityTextBox.Text = sb.ToString();              }              else              {                  IdentityTextBox.Text = e.ErrorMessage;              }
Magic Number,WpfOidcClient,MainWindow,C:\repos\IdentityServer_IdentityServer3.Samples\source\Clients\WpfOidcClient\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.button = ((System.Windows.Controls.Button)(target));                            #line 6 "..\..\MainWindow.xaml"              this.button.Click += new System.Windows.RoutedEventHandler(this.LoginButton_Click);                            #line default              #line hidden              return;              case 2:              this.IdentityTextBox = ((System.Windows.Controls.TextBox)(target));              return;              }
Missing Default,WpfOidcClient,LoginWebView,C:\repos\IdentityServer_IdentityServer3.Samples\source\Clients\WpfOidcClient\LoginWebView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.webView = ((System.Windows.Controls.WebBrowser)(target));              return;              }
Missing Default,WpfOidcClient,MainWindow,C:\repos\IdentityServer_IdentityServer3.Samples\source\Clients\WpfOidcClient\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.button = ((System.Windows.Controls.Button)(target));                            #line 6 "..\..\MainWindow.xaml"              this.button.Click += new System.Windows.RoutedEventHandler(this.LoginButton_Click);                            #line default              #line hidden              return;              case 2:              this.IdentityTextBox = ((System.Windows.Controls.TextBox)(target));              return;              }
